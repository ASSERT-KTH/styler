{
    "project_name": "graphfoundation-ongdb",
    "error_id": "55",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/55/RESTApiModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/55/RESTApiModule.java\nindex c9fde894354..18261935aeb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/55/RESTApiModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/55/RESTApiModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.modules;\n \n import java.net.URI;\n@@ -49,81 +50,81 @@ import static org.neo4j.server.configuration.ServerSettings.http_access_control_\n  */\n public class RESTApiModule implements ServerModule\n {\n-    private final Config config;\n-    private final WebServer webServer;\n-    private DependencyResolver dependencyResolver;\n-    private final LogProvider logProvider;\n-\n-    private PluginManager plugins;\n-\n-    public RESTApiModule( WebServer webServer, Config config, DependencyResolver dependencyResolver,\n-            LogProvider logProvider )\n-    {\n-        this.webServer = webServer;\n-        this.config = config;\n-        this.dependencyResolver = dependencyResolver;\n-        this.logProvider = logProvider;\n-    }\n-\n-    @Override\n-    public void start()\n-    {\n-        URI restApiUri = restApiUri( );\n-\n-        webServer.addFilter( new CollectUserAgentFilter( clientNames() ), \"/*\" );\n-        webServer.addFilter( new CorsFilter( logProvider, config.get( http_access_control_allow_origin ) ), \"/*\" );\n-        webServer.addJAXRSClasses( getClassNames(), restApiUri.toString(), null );\n-        loadPlugins();\n-    }\n-\n-    /**\n-     * The modules are instantiated before the database is, meaning we can't access the UsageData service before we\n-     * start. This resolves UsageData at start time.\n-     *\n-     * Obviously needs to be refactored, pending discussion on unifying module frameworks between kernel and server\n-     * and hashing out associated dependency hierarchy and lifecycles.\n-     */\n-    private RecentK<String> clientNames()\n-    {\n-        return dependencyResolver.resolveDependency( UsageData.class ).get( UsageDataKeys.clientNames );\n-    }\n-\n-    private List<String> getClassNames()\n-    {\n-        return asList(\n-                RestfulGraphDatabase.class.getName(),\n-                TransactionalService.class.getName(),\n-                CypherService.class.getName(),\n-                DatabaseMetadataService.class.getName(),\n-                ExtensionService.class.getName(),\n-                ResourcesService.class.getName(),\n-                BatchOperationService.class.getName() );\n-    }\n-\n-    @Override\n-    public void stop()\n-    {\n-        webServer.removeJAXRSClasses( getClassNames(), restApiUri().toString() );\n-        unloadPlugins();\n-    }\n-\n-    private URI restApiUri()\n-    {\n-        return config.get( ServerSettings.rest_api_path );\n-    }\n-\n-    private void loadPlugins()\n-    {\n-        plugins = new PluginManager( config, logProvider );\n-    }\n-\n-    private void unloadPlugins()\n-    {\n-        // TODO\n-    }\n-\n-    public PluginManager getPlugins()\n-    {\n-        return plugins;\n-    }\n+  private final Config config;\n+  private final WebServer webServer;\n+  private DependencyResolver dependencyResolver;\n+  private final LogProvider logProvider;\n+\n+  private PluginManager plugins;\n+\n+  public RESTApiModule(WebServer webServer, Config config, DependencyResolver dependencyResolver,\n+                       LogProvider logProvider)\n+  {\n+    this.webServer = webServer;\n+    this.config = config;\n+    this.dependencyResolver = dependencyResolver;\n+    this.logProvider = logProvider;\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    URI restApiUri = restApiUri();\n+\n+    webServer.addFilter(new CollectUserAgentFilter(clientNames()), \"/*\");\n+    webServer.addFilter(new CorsFilter(logProvider, config.get(http_access_control_allow_origin)), \"/*\");\n+    webServer.addJAXRSClasses(getClassNames(), restApiUri.toString(), null);\n+    loadPlugins();\n+  }\n+\n+  /**\n+   * The modules are instantiated before the database is, meaning we can't access the UsageData service before we\n+   * start. This resolves UsageData at start time.\n+   * <p>\n+   * Obviously needs to be refactored, pending discussion on unifying module frameworks between kernel and server\n+   * and hashing out associated dependency hierarchy and lifecycles.\n+   */\n+  private RecentK<String> clientNames()\n+  {\n+    return dependencyResolver.resolveDependency(UsageData.class).get(UsageDataKeys.clientNames);\n+  }\n+\n+  private List<String> getClassNames()\n+  {\n+    return asList(\n+        RestfulGraphDatabase.class.getName(),\n+        TransactionalService.class.getName(),\n+        CypherService.class.getName(),\n+        DatabaseMetadataService.class.getName(),\n+        ExtensionService.class.getName(),\n+        ResourcesService.class.getName(),\n+        BatchOperationService.class.getName());\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    webServer.removeJAXRSClasses(getClassNames(), restApiUri().toString());\n+    unloadPlugins();\n+  }\n+\n+  private URI restApiUri()\n+  {\n+    return config.get(ServerSettings.rest_api_path);\n+  }\n+\n+  private void loadPlugins()\n+  {\n+    plugins = new PluginManager(config, logProvider);\n+  }\n+\n+  private void unloadPlugins()\n+  {\n+    // TODO\n+  }\n+\n+  public PluginManager getPlugins()\n+  {\n+    return plugins;\n+  }\n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 279).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/55/RESTApiModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/55/RESTApiModule.java\nindex c9fde894354..99efd9e822a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/55/RESTApiModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/55/RESTApiModule.java\n@@ -68,9 +68,8 @@ public class RESTApiModule implements ServerModule\n     @Override\n     public void start()\n     {\n-        URI restApiUri = restApiUri( );\n-\n-        webServer.addFilter( new CollectUserAgentFilter( clientNames() ), \"/*\" );\n+        URI restApiUri = restApiUri();\n+webServer.addFilter( new CollectUserAgentFilter( clientNames() ), \"/*\" );\n         webServer.addFilter( new CorsFilter( logProvider, config.get( http_access_control_allow_origin ) ), \"/*\" );\n         webServer.addJAXRSClasses( getClassNames(), restApiUri.toString(), null );\n         loadPlugins();\n@@ -90,14 +89,7 @@ public class RESTApiModule implements ServerModule\n \n     private List<String> getClassNames()\n     {\n-        return asList(\n-                RestfulGraphDatabase.class.getName(),\n-                TransactionalService.class.getName(),\n-                CypherService.class.getName(),\n-                DatabaseMetadataService.class.getName(),\n-                ExtensionService.class.getName(),\n-                ResourcesService.class.getName(),\n-                BatchOperationService.class.getName() );\n+        return asList( RestfulGraphDatabase.class.getName(), TransactionalService.class.getName(), CypherService.class.getName(), DatabaseMetadataService.class.getName(), ExtensionService.class.getName(), ResourcesService.class.getName(), BatchOperationService.class.getName() );\n     }\n \n     @Override\n@@ -126,4 +118,4 @@ public class RESTApiModule implements ServerModule\n     {\n         return plugins;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
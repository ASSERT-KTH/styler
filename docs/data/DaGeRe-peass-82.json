{
    "project_name": "DaGeRe-peass",
    "error_id": "82",
    "information": {
        "errors": [
            {
                "line": "20",
                "column": "30",
                "severity": "error",
                "message": "'{' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\n   public RCAFolderSearcher(final File data) {\n      this.data = new File[] { data };\n   }\n\n   public RCAFolderSearcher(final File[] data) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/82/RCAFolderSearcher.java\nindex 77d29882956..b12034e9711 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/82/RCAFolderSearcher.java\n@@ -17,7 +17,7 @@ public class RCAFolderSearcher {\n    private File[] data;\n \n    public RCAFolderSearcher(final File data) {\n-      this.data = new File[] { data };\n+      this.data = new File[] {data };\n    }\n \n    public RCAFolderSearcher(final File[] data) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/82/RCAFolderSearcher.java\nindex 77d29882956..3dc1cd3e974 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/82/RCAFolderSearcher.java\n@@ -14,91 +14,91 @@ import de.dagere.peass.dependency.PeASSFolders;\n \n public class RCAFolderSearcher {\n \n-   private File[] data;\n+  private File[] data;\n \n-   public RCAFolderSearcher(final File data) {\n-      this.data = new File[] { data };\n-   }\n+  public RCAFolderSearcher(final File data) {\n+    this.data = new File[] {data};\n+  }\n \n-   public RCAFolderSearcher(final File[] data) {\n-      this.data = data;\n-   }\n+  public RCAFolderSearcher(final File[] data) {\n+    this.data = data;\n+  }\n \n-   public List<File> searchPeassFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> peassFilesToHandle = new LinkedList<>();\n-      for (final File source : data) {\n-         if (source.isDirectory()) {\n-            if (source.getName().endsWith(PeASSFolders.PEASS_POSTFIX)) {\n-               peassFilesToHandle.add(source);\n-            } \n-         }\n+  public List<File> searchPeassFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+    List<File> peassFilesToHandle = new LinkedList<>();\n+    for (final File source : data) {\n+      if (source.isDirectory()) {\n+        if (source.getName().endsWith(PeASSFolders.PEASS_POSTFIX)) {\n+          peassFilesToHandle.add(source);\n+        }\n       }\n-      return peassFilesToHandle;\n-   }\n+    }\n+    return peassFilesToHandle;\n+  }\n \n-   public List<File> searchRCAFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFilesToHandle = new LinkedList<>();\n-      for (final File source : data) {\n-         if (source.isDirectory()) {\n-            if (source.getName().endsWith(\"_peass\")) {\n-               rcaFilesToHandle.addAll(handlePeassFolder(source));\n-            } else if (source.getName().equals(\"galaxy\") || source.getParentFile().getName().contains(\"galaxy\")) {\n-               rcaFilesToHandle.addAll(handleSlurmFolder(source));\n-            } else {\n-               boolean containsSlurmChild = false;\n-               for (final File child : source.listFiles()) {\n-                  if (child.getName().matches(\"[0-9]+_[0-9]+\")) {\n-                     containsSlurmChild = true;\n-                  }\n-               }\n-               if (containsSlurmChild) {\n-                  rcaFilesToHandle.addAll(handleSlurmFolder(source));\n-               } else {\n-                  rcaFilesToHandle.addAll(handleSimpleFolder(source));\n-               }\n+  public List<File> searchRCAFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+    List<File> rcaFilesToHandle = new LinkedList<>();\n+    for (final File source : data) {\n+      if (source.isDirectory()) {\n+        if (source.getName().endsWith(\"_peass\")) {\n+          rcaFilesToHandle.addAll(handlePeassFolder(source));\n+        } else if (source.getName().equals(\"galaxy\") || source.getParentFile().getName().contains(\"galaxy\")) {\n+          rcaFilesToHandle.addAll(handleSlurmFolder(source));\n+        } else {\n+          boolean containsSlurmChild = false;\n+          for (final File child : source.listFiles()) {\n+            if (child.getName().matches(\"[0-9]+_[0-9]+\")) {\n+              containsSlurmChild = true;\n             }\n-         } else {\n-            rcaFilesToHandle.add(source);\n-         }\n+          }\n+          if (containsSlurmChild) {\n+            rcaFilesToHandle.addAll(handleSlurmFolder(source));\n+          } else {\n+            rcaFilesToHandle.addAll(handleSimpleFolder(source));\n+          }\n+        }\n+      } else {\n+        rcaFilesToHandle.add(source);\n       }\n-      return rcaFilesToHandle;\n-   }\n+    }\n+    return rcaFilesToHandle;\n+  }\n \n-   private List<File> handleSimpleFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFiles = new LinkedList<>();\n-      for (final File treeFile : source.listFiles()) {\n-         if (treeFile.getName().endsWith(\".json\")) {\n-            rcaFiles.add(treeFile);\n-         }\n+  private List<File> handleSimpleFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+    List<File> rcaFiles = new LinkedList<>();\n+    for (final File treeFile : source.listFiles()) {\n+      if (treeFile.getName().endsWith(\".json\")) {\n+        rcaFiles.add(treeFile);\n       }\n-      return rcaFiles;\n-   }\n+    }\n+    return rcaFiles;\n+  }\n \n-   private List<File> handleSlurmFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFiles = new LinkedList<>();\n-      for (final File job : source.listFiles()) {\n-         if (job.isDirectory()) {\n-            final File peassFolder = new File(job, \"peass\");\n-            rcaFiles.addAll(handlePeassFolder(peassFolder));\n-         }\n+  private List<File> handleSlurmFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+    List<File> rcaFiles = new LinkedList<>();\n+    for (final File job : source.listFiles()) {\n+      if (job.isDirectory()) {\n+        final File peassFolder = new File(job, \"peass\");\n+        rcaFiles.addAll(handlePeassFolder(peassFolder));\n       }\n-      return rcaFiles;\n-   }\n+    }\n+    return rcaFiles;\n+  }\n \n-   private List<File> handlePeassFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFiles = new LinkedList<>();\n-      final File rcaFolder = new File(source, \"rca\" + File.separator + \"tree\");\n-      if (rcaFolder.exists()) {\n-         for (final File versionFolder : rcaFolder.listFiles()) {\n-            for (final File testcaseFolder : versionFolder.listFiles()) {\n-               for (final File treeFile : testcaseFolder.listFiles()) {\n-                  if (treeFile.getName().endsWith(\".json\")) {\n-                     rcaFiles.add(treeFile);\n-                  }\n-               }\n+  private List<File> handlePeassFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+    List<File> rcaFiles = new LinkedList<>();\n+    final File rcaFolder = new File(source, \"rca\" + File.separator + \"tree\");\n+    if (rcaFolder.exists()) {\n+      for (final File versionFolder : rcaFolder.listFiles()) {\n+        for (final File testcaseFolder : versionFolder.listFiles()) {\n+          for (final File treeFile : testcaseFolder.listFiles()) {\n+            if (treeFile.getName().endsWith(\".json\")) {\n+              rcaFiles.add(treeFile);\n             }\n-         }\n+          }\n+        }\n       }\n-      return rcaFiles;\n-   }\n+    }\n+    return rcaFiles;\n+  }\n }\n",
            "diff_size": 85
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/82/RCAFolderSearcher.java\nindex 77d29882956..955bb751609 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/82/RCAFolderSearcher.java\n@@ -13,92 +13,92 @@ import com.fasterxml.jackson.databind.JsonMappingException;\n import de.dagere.peass.dependency.PeASSFolders;\n \n public class RCAFolderSearcher {\n-\n-   private File[] data;\n+\tprivate File[] data;\n \n    public RCAFolderSearcher(final File data) {\n-      this.data = new File[] { data };\n-   }\n+\tthis.data = new File[] {\n+\tdata };\n+\t}\n \n    public RCAFolderSearcher(final File[] data) {\n-      this.data = data;\n-   }\n+\tthis.data = data;\n+\t}\n \n    public List<File> searchPeassFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> peassFilesToHandle = new LinkedList<>();\n+\tList<File> peassFilesToHandle = new LinkedList<>();\n       for (final File source : data) {\n-         if (source.isDirectory()) {\n-            if (source.getName().endsWith(PeASSFolders.PEASS_POSTFIX)) {\n-               peassFilesToHandle.add(source);\n-            } \n-         }\n-      }\n+\tif (source.isDirectory()) {\n+\tif (source.getName().endsWith(PeASSFolders.PEASS_POSTFIX)) {\n+\tpeassFilesToHandle.add(source);\n+\t}\n+\t}\n+\t}\n       return peassFilesToHandle;\n-   }\n+\t}\n \n    public List<File> searchRCAFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFilesToHandle = new LinkedList<>();\n+\tList<File> rcaFilesToHandle = new LinkedList<>();\n       for (final File source : data) {\n-         if (source.isDirectory()) {\n-            if (source.getName().endsWith(\"_peass\")) {\n-               rcaFilesToHandle.addAll(handlePeassFolder(source));\n-            } else if (source.getName().equals(\"galaxy\") || source.getParentFile().getName().contains(\"galaxy\")) {\n-               rcaFilesToHandle.addAll(handleSlurmFolder(source));\n-            } else {\n-               boolean containsSlurmChild = false;\n+\tif (source.isDirectory()) {\n+\tif (source.getName().endsWith(\"_peass\")) {\n+\trcaFilesToHandle.addAll(handlePeassFolder(source));\n+\t} else if (source.getName().equals(\"galaxy\") || source.getParentFile().getName().contains(\"galaxy\")) {\n+\trcaFilesToHandle.addAll(handleSlurmFolder(source));\n+\t} else {\n+\tboolean containsSlurmChild = false;\n                for (final File child : source.listFiles()) {\n-                  if (child.getName().matches(\"[0-9]+_[0-9]+\")) {\n-                     containsSlurmChild = true;\n-                  }\n-               }\n+\tif (child.getName().matches(\"[0-9]+_[0-9]+\")) {\n+\tcontainsSlurmChild = true;\n+\t}\n+\t}\n                if (containsSlurmChild) {\n-                  rcaFilesToHandle.addAll(handleSlurmFolder(source));\n-               } else {\n-                  rcaFilesToHandle.addAll(handleSimpleFolder(source));\n-               }\n-            }\n-         } else {\n-            rcaFilesToHandle.add(source);\n-         }\n-      }\n+\trcaFilesToHandle.addAll(handleSlurmFolder(source));\n+\t} else {\n+\trcaFilesToHandle.addAll(handleSimpleFolder(source));\n+\t}\n+\t}\n+\t} else {\n+\trcaFilesToHandle.add(source);\n+\t}\n+\t}\n       return rcaFilesToHandle;\n-   }\n+\t}\n \n    private List<File> handleSimpleFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFiles = new LinkedList<>();\n+\tList<File> rcaFiles = new LinkedList<>();\n       for (final File treeFile : source.listFiles()) {\n-         if (treeFile.getName().endsWith(\".json\")) {\n-            rcaFiles.add(treeFile);\n-         }\n-      }\n+\tif (treeFile.getName().endsWith(\".json\")) {\n+\trcaFiles.add(treeFile);\n+\t}\n+\t}\n       return rcaFiles;\n-   }\n+\t}\n \n    private List<File> handleSlurmFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFiles = new LinkedList<>();\n+\tList<File> rcaFiles = new LinkedList<>();\n       for (final File job : source.listFiles()) {\n-         if (job.isDirectory()) {\n-            final File peassFolder = new File(job, \"peass\");\n+\tif (job.isDirectory()) {\n+\tfinal File peassFolder = new File(job, \"peass\");\n             rcaFiles.addAll(handlePeassFolder(peassFolder));\n-         }\n-      }\n+\t}\n+\t}\n       return rcaFiles;\n-   }\n+\t}\n \n    private List<File> handlePeassFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFiles = new LinkedList<>();\n+\tList<File> rcaFiles = new LinkedList<>();\n       final File rcaFolder = new File(source, \"rca\" + File.separator + \"tree\");\n       if (rcaFolder.exists()) {\n-         for (final File versionFolder : rcaFolder.listFiles()) {\n-            for (final File testcaseFolder : versionFolder.listFiles()) {\n-               for (final File treeFile : testcaseFolder.listFiles()) {\n-                  if (treeFile.getName().endsWith(\".json\")) {\n-                     rcaFiles.add(treeFile);\n-                  }\n-               }\n-            }\n-         }\n-      }\n+\tfor (final File versionFolder : rcaFolder.listFiles()) {\n+\tfor (final File testcaseFolder : versionFolder.listFiles()) {\n+\tfor (final File treeFile : testcaseFolder.listFiles()) {\n+\tif (treeFile.getName().endsWith(\".json\")) {\n+\trcaFiles.add(treeFile);\n+\t}\n+\t}\n+\t}\n+\t}\n+\t}\n       return rcaFiles;\n-   }\n-}\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 62
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/82/RCAFolderSearcher.java\nindex 77d29882956..3d40664727c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/82/RCAFolderSearcher.java\n@@ -5,100 +5,100 @@ import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.util.LinkedList;\n import java.util.List;\n-\n import com.fasterxml.jackson.core.JsonParseException;\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.JsonMappingException;\n-\n import de.dagere.peass.dependency.PeASSFolders;\n \n+\n public class RCAFolderSearcher {\n+ private File[] data;\n \n-   private File[] data;\n+ public RCAFolderSearcher(final File data) {\n+  this.data = new File[] {\n+               data};\n+ }\n \n-   public RCAFolderSearcher(final File data) {\n-      this.data = new File[] { data };\n-   }\n+ public RCAFolderSearcher(final File[] data) {\n+  this.data = data;\n+ }\n \n-   public RCAFolderSearcher(final File[] data) {\n-      this.data = data;\n-   }\n \n-   public List<File> searchPeassFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> peassFilesToHandle = new LinkedList<>();\n-      for (final File source : data) {\n-         if (source.isDirectory()) {\n-            if (source.getName().endsWith(PeASSFolders.PEASS_POSTFIX)) {\n-               peassFilesToHandle.add(source);\n-            } \n-         }\n-      }\n-      return peassFilesToHandle;\n+ public List<File> searchPeassFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+  List<File> peassFilesToHandle = new LinkedList<>();\n+  for (final File source : data) {\n+   if (source.isDirectory()) {\n+    if (source.getName().endsWith(PeASSFolders.PEASS_POSTFIX)) {\n+     peassFilesToHandle.add(source);\n+    }\n    }\n+  }\n+  return peassFilesToHandle;\n+ }\n \n-   public List<File> searchRCAFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFilesToHandle = new LinkedList<>();\n-      for (final File source : data) {\n-         if (source.isDirectory()) {\n-            if (source.getName().endsWith(\"_peass\")) {\n-               rcaFilesToHandle.addAll(handlePeassFolder(source));\n-            } else if (source.getName().equals(\"galaxy\") || source.getParentFile().getName().contains(\"galaxy\")) {\n-               rcaFilesToHandle.addAll(handleSlurmFolder(source));\n+ public List<File> searchRCAFiles() throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+  List<File> rcaFilesToHandle = new LinkedList<>();\n+  for (final File source : data) {\n+   if (source.isDirectory()) {\n+    if (source.getName().endsWith(\"_peass\")) {\n+     rcaFilesToHandle.addAll(handlePeassFolder(source));\n+    } else if (source.getName().equals(\"galaxy\") || source.getParentFile().getName().contains(\"galaxy\")) {\n+            rcaFilesToHandle.addAll(handleSlurmFolder(source));\n+    } else {\n+            boolean containsSlurmChild = false;\n+            for (final File child : source.listFiles()) {\n+             if (child.getName().matches(\"[0-9]+_[0-9]+\")) {\n+              containsSlurmChild = true;\n+             }\n+            }\n+            if (containsSlurmChild) {\n+             rcaFilesToHandle.addAll(handleSlurmFolder(source));\n             } else {\n-               boolean containsSlurmChild = false;\n-               for (final File child : source.listFiles()) {\n-                  if (child.getName().matches(\"[0-9]+_[0-9]+\")) {\n-                     containsSlurmChild = true;\n-                  }\n-               }\n-               if (containsSlurmChild) {\n-                  rcaFilesToHandle.addAll(handleSlurmFolder(source));\n-               } else {\n-                  rcaFilesToHandle.addAll(handleSimpleFolder(source));\n-               }\n+             rcaFilesToHandle.addAll(handleSimpleFolder(source));\n             }\n-         } else {\n-            rcaFilesToHandle.add(source);\n-         }\n-      }\n-      return rcaFilesToHandle;\n+    }\n+   } else {\n+    rcaFilesToHandle.add(source);\n    }\n+  }\n+  return rcaFilesToHandle;\n+ }\n \n-   private List<File> handleSimpleFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFiles = new LinkedList<>();\n-      for (final File treeFile : source.listFiles()) {\n-         if (treeFile.getName().endsWith(\".json\")) {\n-            rcaFiles.add(treeFile);\n-         }\n-      }\n-      return rcaFiles;\n+ private List<File> handleSimpleFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+  List<File> rcaFiles = new LinkedList<>();\n+  for (final File treeFile : source.listFiles()) {\n+   if (treeFile.getName().endsWith(\".json\")) {\n+    rcaFiles.add(treeFile);\n    }\n+  }\n+  return rcaFiles;\n+ }\n \n-   private List<File> handleSlurmFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFiles = new LinkedList<>();\n-      for (final File job : source.listFiles()) {\n-         if (job.isDirectory()) {\n-            final File peassFolder = new File(job, \"peass\");\n-            rcaFiles.addAll(handlePeassFolder(peassFolder));\n-         }\n-      }\n-      return rcaFiles;\n+ private List<File> handleSlurmFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+  List<File> rcaFiles = new LinkedList<>();\n+  for (final File job : source.listFiles()) {\n+   if (job.isDirectory()) {\n+    final File peassFolder = new File(job, \"peass\");\n+    rcaFiles.addAll(handlePeassFolder(peassFolder));\n    }\n+  }\n+  return rcaFiles;\n+ }\n \n-   private List<File> handlePeassFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n-      List<File> rcaFiles = new LinkedList<>();\n-      final File rcaFolder = new File(source, \"rca\" + File.separator + \"tree\");\n-      if (rcaFolder.exists()) {\n-         for (final File versionFolder : rcaFolder.listFiles()) {\n-            for (final File testcaseFolder : versionFolder.listFiles()) {\n-               for (final File treeFile : testcaseFolder.listFiles()) {\n-                  if (treeFile.getName().endsWith(\".json\")) {\n-                     rcaFiles.add(treeFile);\n-                  }\n-               }\n-            }\n-         }\n+ private List<File> handlePeassFolder(final File source) throws IOException, JsonParseException, JsonMappingException, JsonProcessingException, FileNotFoundException {\n+  List<File> rcaFiles = new LinkedList<>();\n+  final File rcaFolder = new File(source, \"rca\" + File.separator + \"tree\");\n+  if (rcaFolder.exists()) {\n+   for (final File versionFolder : rcaFolder.listFiles()) {\n+    for (final File testcaseFolder : versionFolder.listFiles()) {\n+     for (final File treeFile : testcaseFolder.listFiles()) {\n+      if (treeFile.getName().endsWith(\".json\")) {\n+       rcaFiles.add(treeFile);\n       }\n-      return rcaFiles;\n+     }\n+    }\n    }\n-}\n+  }\n+  return rcaFiles;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 105
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/82/RCAFolderSearcher.java\nindex 77d29882956..ab9a92d7796 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/82/RCAFolderSearcher.java\n@@ -17,7 +17,8 @@ public class RCAFolderSearcher {\n    private File[] data;\n \n    public RCAFolderSearcher(final File data) {\n-      this.data = new File[] { data };\n+      this.data = new File[] {\n+\t\t\t\t\t\t\tdata };\n    }\n \n    public RCAFolderSearcher(final File[] data) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/82/RCAFolderSearcher.java\nindex 77d29882956..b12034e9711 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/82/RCAFolderSearcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/82/RCAFolderSearcher.java\n@@ -17,7 +17,7 @@ public class RCAFolderSearcher {\n    private File[] data;\n \n    public RCAFolderSearcher(final File data) {\n-      this.data = new File[] { data };\n+      this.data = new File[] {data };\n    }\n \n    public RCAFolderSearcher(final File[] data) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
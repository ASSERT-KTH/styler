{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1843",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "116",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1843/ReplicatedTokenStateMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1843/ReplicatedTokenStateMachine.java\nindex dedf1ca5931..789c2cfeb49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1843/ReplicatedTokenStateMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1843/ReplicatedTokenStateMachine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.token;\n \n import java.util.Collection;\n@@ -47,107 +48,105 @@ import static org.neo4j.causalclustering.core.state.machines.tx.LogIndexTxHeader\n \n public class ReplicatedTokenStateMachine<TOKEN extends Token> implements StateMachine<ReplicatedTokenRequest>\n {\n-    private TransactionCommitProcess commitProcess;\n-\n-    private final TokenRegistry<TOKEN> tokenRegistry;\n-    private final TokenFactory<TOKEN> tokenFactory;\n-    private final VersionContext versionContext;\n-\n-    private final Log log;\n-    private long lastCommittedIndex = -1;\n-\n-    public ReplicatedTokenStateMachine( TokenRegistry<TOKEN> tokenRegistry, TokenFactory<TOKEN> tokenFactory,\n-            LogProvider logProvider, VersionContextSupplier versionContextSupplier )\n+  private TransactionCommitProcess commitProcess;\n+\n+  private final TokenRegistry<TOKEN> tokenRegistry;\n+  private final TokenFactory<TOKEN> tokenFactory;\n+  private final VersionContext versionContext;\n+\n+  private final Log log;\n+  private long lastCommittedIndex = -1;\n+\n+  public ReplicatedTokenStateMachine(TokenRegistry<TOKEN> tokenRegistry, TokenFactory<TOKEN> tokenFactory,\n+                                     LogProvider logProvider, VersionContextSupplier versionContextSupplier)\n+  {\n+    this.tokenRegistry = tokenRegistry;\n+    this.tokenFactory = tokenFactory;\n+    this.versionContext = versionContextSupplier.getVersionContext();\n+    this.log = logProvider.getLog(getClass());\n+  }\n+\n+  public synchronized void installCommitProcess(TransactionCommitProcess commitProcess, long lastCommittedIndex)\n+  {\n+    this.commitProcess = commitProcess;\n+    this.lastCommittedIndex = lastCommittedIndex;\n+    log.info(format(\"(%s) Updated lastCommittedIndex to %d\", tokenRegistry.getTokenType(), lastCommittedIndex));\n+  }\n+\n+  @Override\n+  public synchronized void applyCommand(ReplicatedTokenRequest tokenRequest, long commandIndex,\n+                                        Consumer<Result> callback)\n+  {\n+    if (commandIndex <= lastCommittedIndex)\n     {\n-        this.tokenRegistry = tokenRegistry;\n-        this.tokenFactory = tokenFactory;\n-        this.versionContext = versionContextSupplier.getVersionContext();\n-        this.log = logProvider.getLog( getClass() );\n+      return;\n     }\n \n-    public synchronized void installCommitProcess( TransactionCommitProcess commitProcess, long lastCommittedIndex )\n-    {\n-        this.commitProcess = commitProcess;\n-        this.lastCommittedIndex = lastCommittedIndex;\n-        log.info( format(\"(%s) Updated lastCommittedIndex to %d\", tokenRegistry.getTokenType(), lastCommittedIndex) );\n-    }\n+    Integer tokenId = tokenRegistry.getId(tokenRequest.tokenName());\n \n-    @Override\n-    public synchronized void applyCommand( ReplicatedTokenRequest tokenRequest, long commandIndex,\n-            Consumer<Result> callback )\n+    if (tokenId == null)\n     {\n-        if ( commandIndex <= lastCommittedIndex )\n-        {\n-            return;\n-        }\n-\n-        Integer tokenId = tokenRegistry.getId( tokenRequest.tokenName() );\n-\n-        if ( tokenId == null )\n-        {\n-            try\n-            {\n-                Collection<StorageCommand> commands =\n-                        ReplicatedTokenRequestSerializer.extractCommands( tokenRequest.commandBytes() );\n-                tokenId = applyToStore( commands, commandIndex );\n-            }\n-            catch ( NoSuchEntryException e )\n-            {\n-                throw new IllegalStateException( \"Commands did not contain token command\" );\n-            }\n-\n-            tokenRegistry.addToken( tokenFactory.newToken( tokenRequest.tokenName(), tokenId ) );\n-        }\n-\n-        callback.accept( Result.of( tokenId ) );\n+      try\n+      {\n+        Collection<StorageCommand> commands =\n+            ReplicatedTokenRequestSerializer.extractCommands(tokenRequest.commandBytes());\n+        tokenId = applyToStore(commands, commandIndex);\n+      } catch (NoSuchEntryException e)\n+      {\n+        throw new IllegalStateException(\"Commands did not contain token command\");\n+      }\n+\n+      tokenRegistry.addToken(tokenFactory.newToken(tokenRequest.tokenName(), tokenId));\n     }\n \n-    private int applyToStore( Collection<StorageCommand> commands, long logIndex ) throws NoSuchEntryException\n-    {\n-        int tokenId = extractTokenId( commands );\n-\n-        PhysicalTransactionRepresentation representation = new PhysicalTransactionRepresentation( commands );\n-        representation.setHeader( encodeLogIndexAsTxHeader( logIndex ), 0, 0, 0, 0L, 0L, 0 );\n-\n-        try ( LockGroup ignored = new LockGroup() )\n-        {\n-            commitProcess.commit( new TransactionToApply( representation, versionContext ), CommitEvent.NULL,\n-                    TransactionApplicationMode.EXTERNAL );\n-        }\n-        catch ( TransactionFailureException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-\n-        return tokenId;\n-    }\n+    callback.accept(Result.of(tokenId));\n+  }\n+\n+  private int applyToStore(Collection<StorageCommand> commands, long logIndex) throws NoSuchEntryException\n+  {\n+    int tokenId = extractTokenId(commands);\n+\n+    PhysicalTransactionRepresentation representation = new PhysicalTransactionRepresentation(commands);\n+    representation.setHeader(encodeLogIndexAsTxHeader(logIndex), 0, 0, 0, 0L, 0L, 0);\n \n-    private int extractTokenId( Collection<StorageCommand> commands ) throws NoSuchEntryException\n+    try (LockGroup ignored = new LockGroup())\n     {\n-        for ( StorageCommand command : commands )\n-        {\n-            if ( command instanceof Command.TokenCommand )\n-            {\n-                return ((Command.TokenCommand<? extends TokenRecord>) command).getAfter().getIntId();\n-            }\n-        }\n-        throw new NoSuchEntryException( \"Expected command not found\" );\n+      commitProcess.commit(new TransactionToApply(representation, versionContext), CommitEvent.NULL,\n+          TransactionApplicationMode.EXTERNAL);\n+    } catch (TransactionFailureException e)\n+    {\n+      throw new RuntimeException(e);\n     }\n \n-    @Override\n-    public synchronized void flush()\n+    return tokenId;\n+  }\n+\n+  private int extractTokenId(Collection<StorageCommand> commands) throws NoSuchEntryException\n+  {\n+    for (StorageCommand command : commands)\n     {\n-        // already implicitly flushed to the store\n+      if (command instanceof Command.TokenCommand)\n+      {\n+        return ((Command.TokenCommand<? extends TokenRecord>) command).getAfter().getIntId();\n+      }\n     }\n-\n-    @Override\n-    public long lastAppliedIndex()\n+    throw new NoSuchEntryException(\"Expected command not found\");\n+  }\n+\n+  @Override\n+  public synchronized void flush()\n+  {\n+    // already implicitly flushed to the store\n+  }\n+\n+  @Override\n+  public long lastAppliedIndex()\n+  {\n+    if (commitProcess == null)\n     {\n-        if ( commitProcess == null )\n-        {\n-            /** See {@link #installCommitProcess}. */\n-            throw new IllegalStateException( \"Value has not been installed\" );\n-        }\n-        return lastCommittedIndex;\n+      /** See {@link #installCommitProcess}. */\n+      throw new IllegalStateException(\"Value has not been installed\");\n     }\n+    return lastCommittedIndex;\n+  }\n }\n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1843/ReplicatedTokenStateMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1843/ReplicatedTokenStateMachine.java\nindex dedf1ca5931..bb908e95802 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1843/ReplicatedTokenStateMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1843/ReplicatedTokenStateMachine.java\n@@ -69,12 +69,11 @@ public class ReplicatedTokenStateMachine<TOKEN extends Token> implements StateMa\n     {\n         this.commitProcess = commitProcess;\n         this.lastCommittedIndex = lastCommittedIndex;\n-        log.info( format(\"(%s) Updated lastCommittedIndex to %d\", tokenRegistry.getTokenType(), lastCommittedIndex) );\n+        log.info( format( \"(%s) Updated lastCommittedIndex to %d\", tokenRegistry.getTokenType(), lastCommittedIndex) );\n     }\n \n     @Override\n-    public synchronized void applyCommand( ReplicatedTokenRequest tokenRequest, long commandIndex,\n-            Consumer<Result> callback )\n+    public synchronized void applyCommand( ReplicatedTokenRequest tokenRequest, long commandIndex, Consumer<Result> callback )\n     {\n         if ( commandIndex <= lastCommittedIndex )\n         {\n@@ -82,14 +81,12 @@ public class ReplicatedTokenStateMachine<TOKEN extends Token> implements StateMa\n         }\n \n         Integer tokenId = tokenRegistry.getId( tokenRequest.tokenName() );\n-\n-        if ( tokenId == null )\n+if ( tokenId == null )\n         {\n             try\n             {\n-                Collection<StorageCommand> commands =\n-                        ReplicatedTokenRequestSerializer.extractCommands( tokenRequest.commandBytes() );\n-                tokenId = applyToStore( commands, commandIndex );\n+                Collection<StorageCommand> commands = ReplicatedTokenRequestSerializer.extractCommands( tokenRequest.commandBytes() );\n+tokenId = applyToStore( commands, commandIndex );\n             }\n             catch ( NoSuchEntryException e )\n             {\n@@ -105,15 +102,14 @@ public class ReplicatedTokenStateMachine<TOKEN extends Token> implements StateMa\n     private int applyToStore( Collection<StorageCommand> commands, long logIndex ) throws NoSuchEntryException\n     {\n         int tokenId = extractTokenId( commands );\n-\n-        PhysicalTransactionRepresentation representation = new PhysicalTransactionRepresentation( commands );\n+PhysicalTransactionRepresentation representation = new PhysicalTransactionRepresentation( commands );\n         representation.setHeader( encodeLogIndexAsTxHeader( logIndex ), 0, 0, 0, 0L, 0L, 0 );\n \n         try ( LockGroup ignored = new LockGroup() )\n         {\n             commitProcess.commit( new TransactionToApply( representation, versionContext ), CommitEvent.NULL,\n                     TransactionApplicationMode.EXTERNAL );\n-        }\n+    }\n         catch ( TransactionFailureException e )\n         {\n             throw new RuntimeException( e );\n@@ -148,6 +144,7 @@ public class ReplicatedTokenStateMachine<TOKEN extends Token> implements StateMa\n             /** See {@link #installCommitProcess}. */\n             throw new IllegalStateException( \"Value has not been installed\" );\n         }\n-        return lastCommittedIndex;\n+\n+return lastCommittedIndex;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
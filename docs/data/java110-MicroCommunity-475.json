{
    "project_name": "java110-MicroCommunity",
    "error_id": "475",
    "information": {
        "errors": [
            {
                "line": "59",
                "column": "13",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            Resource[] resources = null;\n            List<Resource> resourceList = new ArrayList<Resource>();\n            for(String path : java110Properties.getMappingPath().split(\",\")) {\n                resources = resolver.getResources(path);\n                resourceList.addAll(Arrays.asList(resources));\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/475/MyBatisConfig.java\nindex 8c8bcd679ed..ac6732832b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/475/MyBatisConfig.java\n@@ -56,7 +56,7 @@ public class MyBatisConfig implements TransactionManagementConfigurer {\n            // bean.setMapperLocations(resolver.getResources(\"classpath:mapper/*/*.xml\"));\n             Resource[] resources = null;\n             List<Resource> resourceList = new ArrayList<Resource>();\n-            for(String path : java110Properties.getMappingPath().split(\",\")) {\n+            for (String path : java110Properties.getMappingPath().split(\",\")) {\n                 resources = resolver.getResources(path);\n                 resourceList.addAll(Arrays.asList(resources));\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/475/MyBatisConfig.java\nindex 8c8bcd679ed..d0525bbde80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/475/MyBatisConfig.java\n@@ -53,10 +53,10 @@ public class MyBatisConfig implements TransactionManagementConfigurer {\n         //\u6dfb\u52a0XML\u76ee\u5f55\n         ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n         try {\n-           // bean.setMapperLocations(resolver.getResources(\"classpath:mapper/*/*.xml\"));\n+            // bean.setMapperLocations(resolver.getResources(\"classpath:mapper/*/*.xml\"));\n             Resource[] resources = null;\n             List<Resource> resourceList = new ArrayList<Resource>();\n-            for(String path : java110Properties.getMappingPath().split(\",\")) {\n+            for (String path : java110Properties.getMappingPath().split(\",\")) {\n                 resources = resolver.getResources(path);\n                 resourceList.addAll(Arrays.asList(resources));\n             }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/475/MyBatisConfig.java\nindex 8c8bcd679ed..e94790ba9d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/475/MyBatisConfig.java\n@@ -14,7 +14,6 @@ import org.springframework.jdbc.datasource.DataSourceTransactionManager;\n import org.springframework.transaction.PlatformTransactionManager;\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import org.springframework.transaction.annotation.TransactionManagementConfigurer;\n-\n import javax.sql.DataSource;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -26,6 +25,8 @@ import java.util.List;\n  * @author liuzh\n  * @since 2015-12-19 10:11\n  */\n+\n+\n @Configuration\n @EnableTransactionManagement\n public class MyBatisConfig implements TransactionManagementConfigurer {\n@@ -43,7 +44,6 @@ public class MyBatisConfig implements TransactionManagementConfigurer {\n //        return druidDataSource;\n //    }\n \n-\n     @Bean(name = \"sqlSessionFactory\")\n     public SqlSessionFactory sqlSessionFactoryBean() {\n         SqlSessionFactoryBean bean = new SqlSessionFactoryBean();\n@@ -56,10 +56,11 @@ public class MyBatisConfig implements TransactionManagementConfigurer {\n            // bean.setMapperLocations(resolver.getResources(\"classpath:mapper/*/*.xml\"));\n             Resource[] resources = null;\n             List<Resource> resourceList = new ArrayList<Resource>();\n-            for(String path : java110Properties.getMappingPath().split(\",\")) {\n+            for (String path : java110Properties.getMappingPath().split(\",\")) {\n                 resources = resolver.getResources(path);\n                 resourceList.addAll(Arrays.asList(resources));\n             }\n+\n             bean.setMapperLocations(resourceList.toArray(new Resource[resourceList.size()]));\n             return bean.getObject();\n         } catch (Exception e) {\n@@ -86,4 +87,6 @@ public class MyBatisConfig implements TransactionManagementConfigurer {\n     public void setJava110Properties(Java110Properties java110Properties) {\n         this.java110Properties = java110Properties;\n     }\n-}\n+\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/475/MyBatisConfig.java\nindex 8c8bcd679ed..ac6732832b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/475/MyBatisConfig.java\n@@ -56,7 +56,7 @@ public class MyBatisConfig implements TransactionManagementConfigurer {\n            // bean.setMapperLocations(resolver.getResources(\"classpath:mapper/*/*.xml\"));\n             Resource[] resources = null;\n             List<Resource> resourceList = new ArrayList<Resource>();\n-            for(String path : java110Properties.getMappingPath().split(\",\")) {\n+            for (String path : java110Properties.getMappingPath().split(\",\")) {\n                 resources = resolver.getResources(path);\n                 resourceList.addAll(Arrays.asList(resources));\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/475/MyBatisConfig.java\nindex 8c8bcd679ed..ac6732832b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/475/MyBatisConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/475/MyBatisConfig.java\n@@ -56,7 +56,7 @@ public class MyBatisConfig implements TransactionManagementConfigurer {\n            // bean.setMapperLocations(resolver.getResources(\"classpath:mapper/*/*.xml\"));\n             Resource[] resources = null;\n             List<Resource> resourceList = new ArrayList<Resource>();\n-            for(String path : java110Properties.getMappingPath().split(\",\")) {\n+            for (String path : java110Properties.getMappingPath().split(\",\")) {\n                 resources = resolver.getResources(path);\n                 resourceList.addAll(Arrays.asList(resources));\n             }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "851",
    "information": {
        "errors": [
            {
                "line": "48",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import java.util.concurrent.Callable;\n\nfinal class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n\n  private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR = new Interceptor() {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/851/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/851/StorageServiceImpl.java\nindex aea7b0c9601..76a1acf1766 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/851/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/851/StorageServiceImpl.java\n@@ -45,7 +45,8 @@ import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n \n-final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n+final class StorageServiceImpl extends BaseService<StorageServiceOptions>\n+    implements StorageService {\n \n   private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR = new Interceptor() {\n \n@@ -333,7 +334,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     private transient byte[] buffer;\n \n     BlobReadChannelImpl(StorageServiceOptions serviceOptions, Blob blob,\n-        Map<StorageRpc.Option, ?> requestOptions) {\n+                        Map<StorageRpc.Option, ?> requestOptions) {\n       this.serviceOptions = serviceOptions;\n       this.blob = blob;\n       this.requestOptions = requestOptions;\n@@ -444,7 +445,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     private transient StorageObject storageObject;\n \n     public BlobWriterChannelImpl(StorageServiceOptions options, Blob blob,\n-        Map<StorageRpc.Option, ?> optionsMap) {\n+                                 Map<StorageRpc.Option, ?> optionsMap) {\n       this.options = options;\n       this.blob = blob;\n       initTransients();\n@@ -550,12 +551,13 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   }\n \n   private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Iterable<? extends Option> options) {\n+                                              Iterable<? extends Option> options) {\n     return optionMap(generation, metaGeneration, options, false);\n   }\n \n   private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Iterable<? extends Option> options, boolean useAsSource) {\n+                                              Iterable<? extends Option> options,\n+                                              boolean useAsSource) {\n     Map<StorageRpc.Option, Object> temp = Maps.newEnumMap(StorageRpc.Option.class);\n     for (Option option : options) {\n       Object prev = temp.put(option.rpcOption(), option.value());\n@@ -591,7 +593,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   }\n \n   private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Option... options) {\n+                                              Option... options) {\n     return optionMap(generation, metaGeneration, Arrays.asList(options));\n   }\n \n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "243",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "274",
                    "column": "68",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "281",
                    "column": "68",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "288",
                    "column": "65",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "292",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "293",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "294",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "565",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "566",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "567",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "574",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "575",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "576",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/851/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/851/StorageServiceImpl.java\nindex aea7b0c9601..f2671ea03cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/851/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/851/StorageServiceImpl.java\n@@ -60,7 +60,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     public RetryResult beforeEval(Exception exception) {\n       if (exception instanceof StorageServiceException) {\n         boolean retriable = ((StorageServiceException) exception).retryable();\n-        return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n+        return retriable\n+    ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n       }\n       return null;\n     }\n@@ -86,8 +87,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Bucket create(Bucket bucket, BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n           @Override\n           public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.create(bucketPb, optionsMap);\n@@ -111,8 +111,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Bucket get(Bucket bucket, BucketSourceOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n           @Override\n           public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.get(bucketPb, optionsMap);\n@@ -135,8 +134,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   @Override\n   public ListResult<Bucket> list(BucketListOption... options) {\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(null, null, options);\n-    Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> result = runWithRetries(\n-        new Callable<Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>>>() {\n+    Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> result = runWithRetries(new Callable<Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>>>() {\n           @Override\n           public Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> call() {\n             return storageRpc.list(optionsMap);\n@@ -154,8 +152,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   @Override\n   public ListResult<Blob> list(final String bucket, BlobListOption... options) {\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(null, null, options);\n-    Tuple<String, Iterable<StorageObject>> result = runWithRetries(\n-        new Callable<Tuple<String, Iterable<StorageObject>>>() {\n+    Tuple<String, Iterable<StorageObject>> result = runWithRetries(new Callable<Tuple<String, Iterable<StorageObject>>>() {\n           @Override\n           public Tuple<String, Iterable<StorageObject>> call() {\n             return storageRpc.list(bucket, optionsMap);\n@@ -174,8 +171,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Bucket update(Bucket bucket, BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n           @Override\n           public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.patch(bucketPb, optionsMap);\n@@ -244,7 +240,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     copyRequest.sourceOptions();\n     final Map<StorageRpc.Option, ?> sourceOptions = optionMap(copyRequest.source().generation(),\n         copyRequest.source().metageneration(), copyRequest.sourceOptions(), true);\n-    final StorageObject target = copyRequest.target().toPb();\n+final StorageObject target = copyRequest.target().toPb();\n     final Map<StorageRpc.Option, ?> targetOptions = optionMap(copyRequest.target().generation(),\n         copyRequest.target().metageneration(), copyRequest.targetOptions());\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n@@ -275,30 +271,27 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n       StorageObject storageObject = blob.toPb();\n-      toDelete.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(storageObject, optionsMap));\n+      toDelete.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>> of(storageObject, optionsMap));\n     }\n     List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toUpdate =\n         Lists.newArrayListWithCapacity(batchRequest.toUpdate().size());\n     for (Map.Entry<Blob, BlobTargetOption[]> entry : batchRequest.toUpdate().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n-      toUpdate.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(blob.toPb(), optionsMap));\n+      toUpdate.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>> of(blob.toPb(), optionsMap));\n     }\n     List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toGet =\n         Lists.newArrayListWithCapacity(batchRequest.toGet().size());\n     for (Map.Entry<Blob, BlobSourceOption[]> entry : batchRequest.toGet().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n-      toGet.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(blob.toPb(), optionsMap));\n+      toGet.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>> of(blob.toPb(), optionsMap));\n     }\n     StorageRpc.BatchResponse response =\n         storageRpc.batch(new StorageRpc.BatchRequest(toDelete, toUpdate, toGet));\n-    List<BatchResponse.Result<Boolean>> deletes = transformBatchResult(\n-        toDelete, response.deletes, Functions.<Boolean>identity());\n-    List<BatchResponse.Result<Blob>> updates = transformBatchResult(\n-        toUpdate, response.updates, Blob.FROM_PB_FUNCTION);\n-    List<BatchResponse.Result<Blob>> gets = transformBatchResult(\n-        toGet, response.gets, Blob.FROM_PB_FUNCTION);\n+    List<BatchResponse.Result<Boolean>> deletes = transformBatchResult(toDelete, response.deletes, Functions.<Boolean>identity());\n+    List<BatchResponse.Result<Blob>> updates = transformBatchResult(toUpdate, response.updates, Blob.FROM_PB_FUNCTION);\n+    List<BatchResponse.Result<Blob>> gets = transformBatchResult(toGet, response.gets, Blob.FROM_PB_FUNCTION);\n     return new BatchResponse(deletes, updates, gets);\n   }\n \n@@ -569,22 +562,18 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     if (value != null) {\n       checkArgument(generation != null, \"missing generation value\");\n       if (value) {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_MATCH\n-            : StorageRpc.Option.IF_GENERATION_MATCH, generation);\n-      } else {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_NOT_MATCH\n-            : StorageRpc.Option.IF_GENERATION_NOT_MATCH, generation);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_MATCH : StorageRpc.Option.IF_GENERATION_MATCH, generation);\n+  } else {\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_NOT_MATCH : StorageRpc.Option.IF_GENERATION_NOT_MATCH, generation);\n       }\n     }\n     value = (Boolean) temp.remove(StorageRpc.Option.IF_METAGENERATION_MATCH);\n     if (value != null) {\n       checkArgument(metaGeneration != null, \"missing metaGeneration value\");\n       if (value) {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_MATCH\n-            : StorageRpc.Option.IF_METAGENERATION_MATCH, metaGeneration);\n-      } else {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_NOT_MATCH\n-            : StorageRpc.Option.IF_METAGENERATION_NOT_MATCH, metaGeneration);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_MATCH : StorageRpc.Option.IF_METAGENERATION_MATCH, metaGeneration);\n+  } else {\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_NOT_MATCH : StorageRpc.Option.IF_METAGENERATION_NOT_MATCH, metaGeneration);\n       }\n     }\n     return ImmutableMap.copyOf(temp);\n@@ -602,4 +591,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   private Map<StorageRpc.Option, ?> optionMap(Blob blob, Option... options) {\n     return optionMap(blob.generation(), blob.metageneration(), options);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'object def' child has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 67, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 85, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 87, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 85, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 83, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 30, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 32, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 30, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 28, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 54, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 56, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 54, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 52, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 30, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 32, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 30, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 28, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "219",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "223",
                    "severity": "warning",
                    "message": "'composeRequest' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "226",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "229",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "230",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "severity": "warning",
                    "message": "'copyRequest' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "243",
                    "severity": "warning",
                    "message": "'copyRequest' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "248",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "249",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "269",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "276",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "282",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "288",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "289",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "290",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "291",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "295",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 245).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "295",
                    "column": "9",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "322",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "430",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "455",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "457",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "458",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "458",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "459",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "460",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "516",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "518",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "519",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "519",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "520",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "521",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "535",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "539",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "553",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "554",
                    "severity": "warning",
                    "message": "'generation' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "556",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "557",
                    "severity": "warning",
                    "message": "'generation' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "564",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "565",
                    "severity": "warning",
                    "message": "'metaGeneration' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "567",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "568",
                    "severity": "warning",
                    "message": "'metaGeneration' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "574",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/851/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/851/StorageServiceImpl.java\nindex aea7b0c9601..c410b42e580 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/851/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/851/StorageServiceImpl.java\n@@ -34,7 +34,6 @@ import com.google.gcloud.ExceptionHandler.Interceptor;\n import com.google.gcloud.RetryParams;\n import com.google.gcloud.spi.StorageRpc;\n import com.google.gcloud.spi.StorageRpc.Tuple;\n-\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n@@ -45,29 +44,28 @@ import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n \n+\n final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n \n   private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR = new Interceptor() {\n \n-    private static final long serialVersionUID = -7758580330857881124L;\n-\n-    @Override\n-    public RetryResult afterEval(Exception exception, RetryResult retryResult) {\n-      return null;\n-    }\n-\n-    @Override\n-    public RetryResult beforeEval(Exception exception) {\n-      if (exception instanceof StorageServiceException) {\n-        boolean retriable = ((StorageServiceException) exception).retryable();\n-        return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n-      }\n-      return null;\n-    }\n-  };\n-  private static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.builder()\n-      .abortOn(RuntimeException.class).interceptor(EXCEPTION_HANDLER_INTERCEPTOR).build();\n-\n+                                                                     private static final long serialVersionUID = -7758580330857881124L;\n+\n+                                                                     @Override\n+                                                                     public RetryResult afterEval(Exception exception, RetryResult retryResult) {\n+                                                                       return null;\n+                                                                     }\n+\n+                                                                     @Override\n+                                                                     public RetryResult beforeEval(Exception exception) {\n+                                                                       if (exception instanceof StorageServiceException) {\n+                                                                         boolean retriable = ((StorageServiceException) exception).retryable();\n+                                                                         return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n+                                                                       }\n+                                                                       return null;\n+                                                                     }\n+                                                                   };\n+  private static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.builder().abortOn(RuntimeException.class).interceptor(EXCEPTION_HANDLER_INTERCEPTOR).build();\n   private final StorageRpc storageRpc;\n   private final RetryParams retryParams;\n \n@@ -86,13 +84,12 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Bucket create(Bucket bucket, BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override\n-          public com.google.api.services.storage.model.Bucket call() {\n-            return storageRpc.create(bucketPb, optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n+                           @Override\n+                           public com.google.api.services.storage.model.Bucket call() {\n+                             return storageRpc.create(bucketPb, optionsMap);\n+                           }\n+                         }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -100,24 +97,23 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject blobPb = blob.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, options);\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.create(blobPb, content, optionsMap);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.create(blobPb, content, optionsMap);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public Bucket get(Bucket bucket, BucketSourceOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override\n-          public com.google.api.services.storage.model.Bucket call() {\n-            return storageRpc.get(bucketPb, optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n+                           @Override\n+                           public com.google.api.services.storage.model.Bucket call() {\n+                             return storageRpc.get(bucketPb, optionsMap);\n+                           }\n+                         }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -125,62 +121,57 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject storedObject = blob.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, options);\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.get(storedObject, optionsMap);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.get(storedObject, optionsMap);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public ListResult<Bucket> list(BucketListOption... options) {\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(null, null, options);\n-    Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> result = runWithRetries(\n-        new Callable<Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>>>() {\n-          @Override\n-          public Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> call() {\n-            return storageRpc.list(optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER);\n-    return new ListResult<>(result.x(), Iterables.transform(result.y(),\n-        new Function<com.google.api.services.storage.model.Bucket, Bucket>() {\n-          @Override\n-          public Bucket apply(com.google.api.services.storage.model.Bucket bucketPb) {\n-            return Bucket.fromPb(bucketPb);\n-          }\n-        }));\n+    Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> result = runWithRetries(new Callable<Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>>>() {\n+                                                                                     @Override\n+                                                                                     public Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> call() {\n+                                                                                       return storageRpc.list(optionsMap);\n+                                                                                     }\n+                                                                                   }, retryParams, EXCEPTION_HANDLER);\n+    return new ListResult<>(result.x(), Iterables.transform(result.y(), new Function<com.google.api.services.storage.model.Bucket, Bucket>() {\n+                              @Override\n+                              public Bucket apply(com.google.api.services.storage.model.Bucket bucketPb) {\n+                                return Bucket.fromPb(bucketPb);\n+                              }\n+                            }));\n   }\n \n   @Override\n   public ListResult<Blob> list(final String bucket, BlobListOption... options) {\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(null, null, options);\n-    Tuple<String, Iterable<StorageObject>> result = runWithRetries(\n-        new Callable<Tuple<String, Iterable<StorageObject>>>() {\n-          @Override\n-          public Tuple<String, Iterable<StorageObject>> call() {\n-            return storageRpc.list(bucket, optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER);\n-    return new ListResult<>(result.x(), Iterables.transform(result.y(),\n-        new Function<StorageObject, Blob>() {\n-          @Override\n-          public Blob apply(StorageObject storageObject) {\n-            return Blob.fromPb(storageObject);\n-          }\n-        }));\n+    Tuple<String, Iterable<StorageObject>> result = runWithRetries(new Callable<Tuple<String, Iterable<StorageObject>>>() {\n+                                                      @Override\n+                                                      public Tuple<String, Iterable<StorageObject>> call() {\n+                                                        return storageRpc.list(bucket, optionsMap);\n+                                                      }\n+                                                    }, retryParams, EXCEPTION_HANDLER);\n+    return new ListResult<>(result.x(), Iterables.transform(result.y(), new Function<StorageObject, Blob>() {\n+                              @Override\n+                              public Blob apply(StorageObject storageObject) {\n+                                return Blob.fromPb(storageObject);\n+                              }\n+                            }));\n   }\n \n   @Override\n   public Bucket update(Bucket bucket, BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override\n-          public com.google.api.services.storage.model.Bucket call() {\n-            return storageRpc.patch(bucketPb, optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n+                           @Override\n+                           public com.google.api.services.storage.model.Bucket call() {\n+                             return storageRpc.patch(bucketPb, optionsMap);\n+                           }\n+                         }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -188,11 +179,11 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject storageObject = blob.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, options);\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.patch(storageObject, optionsMap);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.patch(storageObject, optionsMap);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -204,7 +195,9 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       public Boolean call() {\n         return storageRpc.delete(bucketPb, optionsMap);\n       }\n-    }, retryParams, EXCEPTION_HANDLER);\n+    },\n+      retryParams,\n+        EXCEPTION_HANDLER);\n   }\n \n   @Override\n@@ -221,21 +214,20 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n \n   @Override\n   public Blob compose(final ComposeRequest composeRequest) {\n-    final List<StorageObject> sources =\n-        Lists.newArrayListWithCapacity(composeRequest.sourceBlobs().size());\n+    final List<StorageObject> sources = Lists.newArrayListWithCapacity(composeRequest.sourceBlobs().size());\n     for (ComposeRequest.SourceBlob sourceBlob : composeRequest.sourceBlobs()) {\n-      sources.add(Blob.builder(composeRequest.target().bucket(), sourceBlob.name())\n-          .generation(sourceBlob.generation()).build().toPb());\n+      sources.add(Blob.builder(composeRequest.target().bucket(), sourceBlob.name()).generation(sourceBlob.generation()).build().toPb());\n     }\n     final StorageObject target = composeRequest.target().toPb();\n     final Map<StorageRpc.Option, ?> targetOptions = optionMap(composeRequest.target().generation(),\n-        composeRequest.target().metageneration(), composeRequest.targetOptions());\n+      composeRequest.target().metageneration(),\n+        composeRequest.targetOptions());\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.compose(sources, target, targetOptions);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.compose(sources, target, targetOptions);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -243,16 +235,19 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject source = copyRequest.source().toPb();\n     copyRequest.sourceOptions();\n     final Map<StorageRpc.Option, ?> sourceOptions = optionMap(copyRequest.source().generation(),\n-        copyRequest.source().metageneration(), copyRequest.sourceOptions(), true);\n+      copyRequest.source().metageneration(),\n+        copyRequest.sourceOptions(),\n+          true);\n     final StorageObject target = copyRequest.target().toPb();\n     final Map<StorageRpc.Option, ?> targetOptions = optionMap(copyRequest.target().generation(),\n-        copyRequest.target().metageneration(), copyRequest.targetOptions());\n+      copyRequest.target().metageneration(),\n+        copyRequest.targetOptions());\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.copy(source, sourceOptions, target, targetOptions);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.copy(source, sourceOptions, target, targetOptions);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -264,47 +259,40 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       public byte[] call() {\n         return storageRpc.load(storageObject, optionsMap);\n       }\n-    }, retryParams, EXCEPTION_HANDLER);\n+    },\n+      retryParams,\n+        EXCEPTION_HANDLER);\n   }\n \n   @Override\n   public BatchResponse apply(BatchRequest batchRequest) {\n-    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toDelete =\n-        Lists.newArrayListWithCapacity(batchRequest.toDelete().size());\n+    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toDelete = Lists.newArrayListWithCapacity(batchRequest.toDelete().size());\n     for (Map.Entry<Blob, BlobSourceOption[]> entry : batchRequest.toDelete().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n       StorageObject storageObject = blob.toPb();\n       toDelete.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(storageObject, optionsMap));\n     }\n-    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toUpdate =\n-        Lists.newArrayListWithCapacity(batchRequest.toUpdate().size());\n+    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toUpdate = Lists.newArrayListWithCapacity(batchRequest.toUpdate().size());\n     for (Map.Entry<Blob, BlobTargetOption[]> entry : batchRequest.toUpdate().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n       toUpdate.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(blob.toPb(), optionsMap));\n     }\n-    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toGet =\n-        Lists.newArrayListWithCapacity(batchRequest.toGet().size());\n+    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toGet = Lists.newArrayListWithCapacity(batchRequest.toGet().size());\n     for (Map.Entry<Blob, BlobSourceOption[]> entry : batchRequest.toGet().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n       toGet.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(blob.toPb(), optionsMap));\n     }\n-    StorageRpc.BatchResponse response =\n-        storageRpc.batch(new StorageRpc.BatchRequest(toDelete, toUpdate, toGet));\n-    List<BatchResponse.Result<Boolean>> deletes = transformBatchResult(\n-        toDelete, response.deletes, Functions.<Boolean>identity());\n-    List<BatchResponse.Result<Blob>> updates = transformBatchResult(\n-        toUpdate, response.updates, Blob.FROM_PB_FUNCTION);\n-    List<BatchResponse.Result<Blob>> gets = transformBatchResult(\n-        toGet, response.gets, Blob.FROM_PB_FUNCTION);\n+    StorageRpc.BatchResponse response = storageRpc.batch(new StorageRpc.BatchRequest(toDelete, toUpdate, toGet));\n+    List<BatchResponse.Result<Boolean>> deletes = transformBatchResult(toDelete, response.deletes, Functions.<Boolean>identity());\n+    List<BatchResponse.Result<Blob>> updates = transformBatchResult(toUpdate, response.updates, Blob.FROM_PB_FUNCTION);\n+    List<BatchResponse.Result<Blob>> gets = transformBatchResult(toGet, response.gets, Blob.FROM_PB_FUNCTION);\n     return new BatchResponse(deletes, updates, gets);\n   }\n \n-  private <I, O extends Serializable> List<BatchResponse.Result<O>> transformBatchResult(\n-      Iterable<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> request,\n-      Map<StorageObject, Tuple<I, StorageServiceException>> results, Function<I, O> transform) {\n+  private<I, O extends Serializable> List<BatchResponse.Result<O>> transformBatchResult(Iterable<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> request, Map<StorageObject, Tuple<I, StorageServiceException>> results, Function<I, O> transform) {\n     List<BatchResponse.Result<O>> response = Lists.newArrayListWithCapacity(results.size());\n     for (Tuple<StorageObject, ?> tuple : request) {\n       Tuple<I, StorageServiceException> result = results.get(tuple.x());\n@@ -325,15 +313,13 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     private int position;\n     private boolean isOpen;\n     private boolean endOfStream;\n-\n     private transient StorageRpc storageRpc;\n     private transient RetryParams retryParams;\n     private transient StorageObject storageObject;\n     private transient int bufferPos;\n     private transient byte[] buffer;\n \n-    BlobReadChannelImpl(StorageServiceOptions serviceOptions, Blob blob,\n-        Map<StorageRpc.Option, ?> requestOptions) {\n+    BlobReadChannelImpl(StorageServiceOptions serviceOptions, Blob blob, Map<StorageRpc.Option, ?> requestOptions) {\n       this.serviceOptions = serviceOptions;\n       this.blob = blob;\n       this.requestOptions = requestOptions;\n@@ -430,7 +416,6 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n \n     private static final int CHUNK_SIZE = 256 * 1024;\n     private static final int COMPACT_THRESHOLD = (int) Math.round(CHUNK_SIZE * 0.8);\n-\n     private final StorageServiceOptions options;\n     private final Blob blob;\n     private final String uploadId;\n@@ -438,13 +423,11 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     private byte[] buffer = new byte[CHUNK_SIZE];\n     private int limit;\n     private boolean isOpen;\n-\n     private transient StorageRpc storageRpc;\n     private transient RetryParams retryParams;\n     private transient StorageObject storageObject;\n \n-    public BlobWriterChannelImpl(StorageServiceOptions options, Blob blob,\n-        Map<StorageRpc.Option, ?> optionsMap) {\n+    public BlobWriterChannelImpl(StorageServiceOptions options, Blob blob, Map<StorageRpc.Option, ?> optionsMap) {\n       this.options = options;\n       this.blob = blob;\n       initTransients();\n@@ -469,12 +452,12 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       if (limit >= CHUNK_SIZE) {\n         final int length = limit - limit % CHUNK_SIZE;\n         runWithRetries(callable(new Runnable() {\n-          @Override\n-          public void run() {\n-            System.out.println(\"Going to flush-> \" + length + \" bytes\");\n-            storageRpc.write(buffer, 0, length, storageObject, uploadId, position, false);\n-          }\n-        }));\n+                         @Override\n+                         public void run() {\n+                           System.out.println(\"Going to flush-> \" + length + \" bytes\");\n+                           storageRpc.write(buffer, 0, length, storageObject, uploadId, position, false);\n+                         }\n+                       }));\n         position += length;\n         limit -= length;\n         byte[] temp = new byte[CHUNK_SIZE];\n@@ -530,12 +513,12 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     public void close() throws IOException {\n       if (isOpen) {\n         runWithRetries(callable(new Runnable() {\n-          @Override\n-          public void run() {\n-            System.out.println(\"Going to close-> \" + limit + \" bytes\");\n-            storageRpc.write(buffer, 0, limit, storageObject, uploadId, position, true);\n-          }\n-        }));\n+                         @Override\n+                         public void run() {\n+                           System.out.println(\"Going to close-> \" + limit + \" bytes\");\n+                           storageRpc.write(buffer, 0, limit, storageObject, uploadId, position, true);\n+                         }\n+                       }));\n         position += buffer.length;\n         isOpen = false;\n         buffer = null;\n@@ -549,13 +532,11 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     return new BlobWriterChannelImpl(options(), blob, optionsMap);\n   }\n \n-  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Iterable<? extends Option> options) {\n+  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration, Iterable<? extends Option> options) {\n     return optionMap(generation, metaGeneration, options, false);\n   }\n \n-  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Iterable<? extends Option> options, boolean useAsSource) {\n+  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration, Iterable<? extends Option> options, boolean useAsSource) {\n     Map<StorageRpc.Option, Object> temp = Maps.newEnumMap(StorageRpc.Option.class);\n     for (Option option : options) {\n       Object prev = temp.put(option.rpcOption(), option.value());\n@@ -569,29 +550,28 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     if (value != null) {\n       checkArgument(generation != null, \"missing generation value\");\n       if (value) {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_MATCH\n-            : StorageRpc.Option.IF_GENERATION_MATCH, generation);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_MATCH : StorageRpc.Option.IF_GENERATION_MATCH,\n+          generation);\n       } else {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_NOT_MATCH\n-            : StorageRpc.Option.IF_GENERATION_NOT_MATCH, generation);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_NOT_MATCH : StorageRpc.Option.IF_GENERATION_NOT_MATCH,\n+          generation);\n       }\n     }\n     value = (Boolean) temp.remove(StorageRpc.Option.IF_METAGENERATION_MATCH);\n     if (value != null) {\n       checkArgument(metaGeneration != null, \"missing metaGeneration value\");\n       if (value) {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_MATCH\n-            : StorageRpc.Option.IF_METAGENERATION_MATCH, metaGeneration);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_MATCH : StorageRpc.Option.IF_METAGENERATION_MATCH,\n+          metaGeneration);\n       } else {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_NOT_MATCH\n-            : StorageRpc.Option.IF_METAGENERATION_NOT_MATCH, metaGeneration);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_NOT_MATCH : StorageRpc.Option.IF_METAGENERATION_NOT_MATCH,\n+          metaGeneration);\n       }\n     }\n     return ImmutableMap.copyOf(temp);\n   }\n \n-  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Option... options) {\n+  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration, Option... options) {\n     return optionMap(generation, metaGeneration, Arrays.asList(options));\n   }\n \n@@ -602,4 +582,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   private Map<StorageRpc.Option, ?> optionMap(Blob blob, Option... options) {\n     return optionMap(blob.generation(), blob.metageneration(), options);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 163
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
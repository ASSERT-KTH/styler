{
    "project_name": "Gurux-gurux.dlms.java",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "446",
                "severity": "warning",
                "message": "Line is longer than 80 characters (found 82).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                GXDLMSObject obj = reader.getObjects().findByLN(ot, ln);\n                pushObjectList\n                        .add(new GXSimpleEntry<GXDLMSObject, GXDLMSCaptureObject>(\n                                obj, co));\n            }\n            reader.readEndElement(\"ObjectList\");",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/3/GXDLMSPushSetup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler/3/GXDLMSPushSetup.java\nindex fa65f853d34..5de5f0e96b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/3/GXDLMSPushSetup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler/3/GXDLMSPushSetup.java\n@@ -443,7 +443,7 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n                 GXDLMSCaptureObject co = new GXDLMSCaptureObject(ai, di);\n                 GXDLMSObject obj = reader.getObjects().findByLN(ot, ln);\n                 pushObjectList\n-                        .add(new GXSimpleEntry<GXDLMSObject, GXDLMSCaptureObject>(\n+        .add(new GXSimpleEntry<GXDLMSObject, GXDLMSCaptureObject>(\n                                 obj, co));\n             }\n             reader.readEndElement(\"ObjectList\");\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "442",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/3/GXDLMSPushSetup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/intellij/3/GXDLMSPushSetup.java\nindex fa65f853d34..1c5d98861be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/3/GXDLMSPushSetup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/intellij/3/GXDLMSPushSetup.java\n@@ -75,9 +75,8 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n \n     /**\n      * Constructor.\n-     * \n-     * @param ln\n-     *            Logical Name of the object.\n+     *\n+     * @param ln Logical Name of the object.\n      */\n     public GXDLMSPushSetup(final String ln) {\n         this(ln, 0);\n@@ -85,11 +84,9 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n \n     /**\n      * Constructor.\n-     * \n-     * @param ln\n-     *            Logical Name of the object.\n-     * @param sn\n-     *            Short Name of the object.\n+     *\n+     * @param ln Logical Name of the object.\n+     * @param sn Short Name of the object.\n      */\n     public GXDLMSPushSetup(final String ln, final int sn) {\n         super(ObjectType.PUSH_SETUP, ln, sn);\n@@ -126,11 +123,11 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n \n     /**\n      * @return Defines the list of attributes or objects to be pushed. Upon a\n-     *         call of the push (data) method the selected attributes are sent\n-     *         to the destination defined in getSendDestinationAndMethod.\n+     * call of the push (data) method the selected attributes are sent\n+     * to the destination defined in getSendDestinationAndMethod.\n      */\n     public final List<Entry<GXDLMSObject, GXDLMSCaptureObject>>\n-            getPushObjectList() {\n+    getPushObjectList() {\n         return pushObjectList;\n     }\n \n@@ -140,20 +137,20 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n \n     /**\n      * @return Contains the start and end date/time stamp when the communication\n-     *         window(s) for the push become active (for the start instant), or\n-     *         inactive (for the end instant).\n+     * window(s) for the push become active (for the start instant), or\n+     * inactive (for the end instant).\n      */\n     public final List<Map.Entry<GXDateTime, GXDateTime>>\n-            getCommunicationWindow() {\n+    getCommunicationWindow() {\n         return communicationWindow;\n     }\n \n     /**\n      * @return To avoid simultaneous network connections of a lot of devices at\n-     *         ex-actly the same point in time, a randomisation interval in\n-     *         seconds can be defined. This means that the push operation is not\n-     *         started imme-diately at the beginning of the first communication\n-     *         window but started randomly delayed.\n+     * ex-actly the same point in time, a randomisation interval in\n+     * seconds can be defined. This means that the push operation is not\n+     * started imme-diately at the beginning of the first communication\n+     * window but started randomly delayed.\n      */\n     public final int getRandomisationStartInterval() {\n         return randomisationStartInterval;\n@@ -165,21 +162,20 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n \n     /**\n      * @return The maximum number of re-trials in case of unsuccessful push\n-     *         attempts. After a successful push no further push attempts are\n-     *         made until the push setup is triggered again. A value of 0 means\n-     *         no repetitions, i.e. only the initial connection attempt is made.\n+     * attempts. After a successful push no further push attempts are\n+     * made until the push setup is triggered again. A value of 0 means\n+     * no repetitions, i.e. only the initial connection attempt is made.\n      */\n     public final int getNumberOfRetries() {\n         return numberOfRetries;\n     }\n \n     /**\n-     * @param value\n-     *            The maximum number of re-trials in case of unsuccessful push\n-     *            attempts. After a successful push no further push attempts are\n-     *            made until the push setup is triggered again. A value of 0\n-     *            means no repetitions, i.e. only the initial connection attempt\n-     *            is made.\n+     * @param value The maximum number of re-trials in case of unsuccessful push\n+     *              attempts. After a successful push no further push attempts are\n+     *              made until the push setup is triggered again. A value of 0\n+     *              means no repetitions, i.e. only the initial connection attempt\n+     *              is made.\n      */\n     public final void setNumberOfRetries(final byte value) {\n         numberOfRetries = value;\n@@ -195,15 +191,15 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n \n     @Override\n     public final Object[] getValues() {\n-        return new Object[] { getLogicalName(), pushObjectList,\n+        return new Object[] {getLogicalName(), pushObjectList,\n                 sendDestinationAndMethod, communicationWindow,\n                 new Integer(randomisationStartInterval),\n-                new Integer(numberOfRetries), new Integer(repetitionDelay) };\n+                new Integer(numberOfRetries), new Integer(repetitionDelay)};\n     }\n \n     @Override\n     public final byte[] invoke(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+                               final ValueEventArgs e) {\n         if (e.getIndex() == 1) {\n             e.setError(ErrorCode.READ_WRITE_DENIED);\n         } else {\n@@ -303,7 +299,7 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n      */\n     @Override\n     public final Object getValue(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+                                 final ValueEventArgs e) {\n         if (e.getIndex() == 1) {\n             return GXCommon.logicalNameToBytes(getLogicalName());\n         }\n@@ -369,7 +365,7 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n      */\n     @Override\n     public final void setValue(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+                               final ValueEventArgs e) {\n         if (e.getIndex() == 1) {\n             setLogicalName(GXCommon.toLogicalName(e.getValue()));\n         } else if (e.getIndex() == 2) {\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "218",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "223",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "247",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "333",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "344",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "345",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "346",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "347",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "354",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "356",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "360",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "393",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "402",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 88).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "412",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 88).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "419",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "420",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "421",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "428",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "429",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "430",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "434",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "438",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "447",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "451",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "458",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "462",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "464",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "468",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "469",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "470",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "474",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "482",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "490",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "503",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "504",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "509",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/3/GXDLMSPushSetup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/codebuff/3/GXDLMSPushSetup.java\nindex fa65f853d34..b7890c80561 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/3/GXDLMSPushSetup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/codebuff/3/GXDLMSPushSetup.java\n@@ -38,9 +38,7 @@ import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n-\n import javax.xml.stream.XMLStreamException;\n-\n import gurux.dlms.GXByteBuffer;\n import gurux.dlms.GXDLMSClient;\n import gurux.dlms.GXDLMSSettings;\n@@ -58,7 +56,6 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n     private ServiceType service;\n     private String destination;\n     private MessageType message;\n-\n     private List<Entry<GXDLMSObject, GXDLMSCaptureObject>> pushObjectList;\n     private GXSendDestinationAndMethod sendDestinationAndMethod;\n     private List<Map.Entry<GXDateTime, GXDateTime>> communicationWindow;\n@@ -69,6 +66,8 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n     /**\n      * Constructor.\n      */\n+\n+\n     public GXDLMSPushSetup() {\n         this(\"0.7.25.9.0.255\");\n     }\n@@ -79,6 +78,8 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n      * @param ln\n      *            Logical Name of the object.\n      */\n+\n+\n     public GXDLMSPushSetup(final String ln) {\n         this(ln, 0);\n     }\n@@ -91,35 +92,41 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n      * @param sn\n      *            Short Name of the object.\n      */\n+\n+\n     public GXDLMSPushSetup(final String ln, final int sn) {\n         super(ObjectType.PUSH_SETUP, ln, sn);\n-        pushObjectList =\n-                new ArrayList<Entry<GXDLMSObject, GXDLMSCaptureObject>>();\n+        pushObjectList = new ArrayList<Entry<GXDLMSObject, GXDLMSCaptureObject>>();\n         sendDestinationAndMethod = new GXSendDestinationAndMethod();\n-        communicationWindow =\n-                new ArrayList<Map.Entry<GXDateTime, GXDateTime>>();\n+        communicationWindow = new ArrayList<Map.Entry<GXDateTime, GXDateTime>>();\n     }\n \n+\n     public final ServiceType getService() {\n         return service;\n     }\n \n+\n     public final void setService(final ServiceType value) {\n         service = value;\n     }\n \n+\n     public final String getDestination() {\n         return destination;\n     }\n \n+\n     public final void setDestination(final String value) {\n         destination = value;\n     }\n \n+\n     public final MessageType getMessage() {\n         return message;\n     }\n \n+\n     public final void setMessage(final MessageType value) {\n         message = value;\n     }\n@@ -129,11 +136,13 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n      *         call of the push (data) method the selected attributes are sent\n      *         to the destination defined in getSendDestinationAndMethod.\n      */\n-    public final List<Entry<GXDLMSObject, GXDLMSCaptureObject>>\n-            getPushObjectList() {\n+\n+\n+    public final List<Entry<GXDLMSObject, GXDLMSCaptureObject>> getPushObjectList() {\n         return pushObjectList;\n     }\n \n+\n     public final GXSendDestinationAndMethod getSendDestinationAndMethod() {\n         return sendDestinationAndMethod;\n     }\n@@ -143,8 +152,9 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n      *         window(s) for the push become active (for the start instant), or\n      *         inactive (for the end instant).\n      */\n-    public final List<Map.Entry<GXDateTime, GXDateTime>>\n-            getCommunicationWindow() {\n+\n+\n+    public final List<Map.Entry<GXDateTime, GXDateTime>> getCommunicationWindow() {\n         return communicationWindow;\n     }\n \n@@ -155,10 +165,13 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n      *         started imme-diately at the beginning of the first communication\n      *         window but started randomly delayed.\n      */\n+\n+\n     public final int getRandomisationStartInterval() {\n         return randomisationStartInterval;\n     }\n \n+\n     public final void setRandomisationStartInterval(final int value) {\n         randomisationStartInterval = value;\n     }\n@@ -169,6 +182,8 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n      *         made until the push setup is triggered again. A value of 0 means\n      *         no repetitions, i.e. only the initial connection attempt is made.\n      */\n+\n+\n     public final int getNumberOfRetries() {\n         return numberOfRetries;\n     }\n@@ -181,29 +196,31 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n      *            means no repetitions, i.e. only the initial connection attempt\n      *            is made.\n      */\n+\n+\n     public final void setNumberOfRetries(final byte value) {\n         numberOfRetries = value;\n     }\n \n+\n     public final int getRepetitionDelay() {\n         return repetitionDelay;\n     }\n \n+\n     public final void setRepetitionDelay(final int value) {\n         repetitionDelay = value;\n     }\n \n+\n     @Override\n     public final Object[] getValues() {\n-        return new Object[] { getLogicalName(), pushObjectList,\n-                sendDestinationAndMethod, communicationWindow,\n-                new Integer(randomisationStartInterval),\n-                new Integer(numberOfRetries), new Integer(repetitionDelay) };\n+        return new Object[] { getLogicalName(), pushObjectList, sendDestinationAndMethod, communicationWindow, new Integer(randomisationStartInterval), new Integer(numberOfRetries), new Integer(repetitionDelay) };\n     }\n \n+\n     @Override\n-    public final byte[] invoke(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+    public final byte[] invoke(final GXDLMSSettings settings, final ValueEventArgs e) {\n         if (e.getIndex() == 1) {\n             e.setError(ErrorCode.READ_WRITE_DENIED);\n         } else {\n@@ -215,15 +232,19 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n     /*\n      * Activates the push process.\n      */\n+\n+\n     public final byte[][] activate(final GXDLMSClient client) {\n-        return client.method(getName(), getObjectType(), 1, new Integer(0),\n-                DataType.INT8);\n+        return client.method(getName(),\n+getObjectType(), 1,\n+new Integer(0),\n+DataType.INT8);\n     }\n \n+\n     @Override\n     public final int[] getAttributeIndexToRead() {\n-        java.util.ArrayList<Integer> attributes =\n-                new java.util.ArrayList<Integer>();\n+        java.util.ArrayList<Integer> attributes = new java.util.ArrayList<Integer>();\n         // LN is static and read only once.\n         if (getLogicalName() == null || getLogicalName().compareTo(\"\") == 0) {\n             attributes.add(new Integer(1));\n@@ -258,6 +279,8 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n     /*\n      * Returns amount of attributes.\n      */\n+\n+\n     @Override\n     public final int getAttributeCount() {\n         return 7;\n@@ -266,11 +289,14 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n     /*\n      * Returns amount of methods.\n      */\n+\n+\n     @Override\n     public final int getMethodCount() {\n         return 1;\n     }\n \n+\n     @Override\n     public final DataType getDataType(final int index) {\n         if (index == 1) {\n@@ -295,15 +321,16 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n             return DataType.UINT16;\n         }\n         throw new IllegalArgumentException(\n-                \"getDataType failed. Invalid attribute index.\");\n+            \"getDataType failed. Invalid attribute index.\");\n     }\n \n     /*\n      * Returns value of given attribute.\n      */\n+\n+\n     @Override\n-    public final Object getValue(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+    public final Object getValue(final GXDLMSSettings settings, final ValueEventArgs e) {\n         if (e.getIndex() == 1) {\n             return GXCommon.logicalNameToBytes(getLogicalName());\n         }\n@@ -314,30 +341,23 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n             for (Entry<GXDLMSObject, GXDLMSCaptureObject> it : pushObjectList) {\n                 buff.setUInt8(DataType.STRUCTURE.getValue());\n                 buff.setUInt8(4);\n-                GXCommon.setData(buff, DataType.UINT16,\n-                        new Integer(it.getKey().getObjectType().getValue()));\n-                GXCommon.setData(buff, DataType.OCTET_STRING, GXCommon\n-                        .logicalNameToBytes(it.getKey().getLogicalName()));\n-                GXCommon.setData(buff, DataType.INT8,\n-                        new Integer(it.getValue().getAttributeIndex()));\n-                GXCommon.setData(buff, DataType.UINT16,\n-                        new Integer(it.getValue().getDataIndex()));\n+                GXCommon.setData(buff, DataType.UINT16, new Integer(it.getKey().getObjectType().getValue()));\n+                GXCommon.setData(buff, DataType.OCTET_STRING, GXCommon.logicalNameToBytes(it.getKey().getLogicalName()));\n+                GXCommon.setData(buff, DataType.INT8, new Integer(it.getValue().getAttributeIndex()));\n+                GXCommon.setData(buff, DataType.UINT16, new Integer(it.getValue().getDataIndex()));\n             }\n             return buff.array();\n         }\n         if (e.getIndex() == 3) {\n             buff.setUInt8(DataType.STRUCTURE.getValue());\n             buff.setUInt8(3);\n-            GXCommon.setData(buff, DataType.UINT8, new Integer(\n-                    sendDestinationAndMethod.getService().getValue()));\n+            GXCommon.setData(buff, DataType.UINT8, new Integer(sendDestinationAndMethod.getService().getValue()));\n             if (sendDestinationAndMethod.getDestination() != null) {\n-                GXCommon.setData(buff, DataType.OCTET_STRING,\n-                        sendDestinationAndMethod.getDestination().getBytes());\n+                GXCommon.setData(buff, DataType.OCTET_STRING, sendDestinationAndMethod.getDestination().getBytes());\n             } else {\n                 GXCommon.setData(buff, DataType.OCTET_STRING, null);\n             }\n-            GXCommon.setData(buff, DataType.UINT8,\n-                    sendDestinationAndMethod.getMessage().getValue());\n+            GXCommon.setData(buff, DataType.UINT8, sendDestinationAndMethod.getMessage().getValue());\n             return buff.array();\n         }\n         if (e.getIndex() == 4) {\n@@ -367,9 +387,10 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n     /*\n      * Set value of given attribute.\n      */\n+\n+\n     @Override\n-    public final void setValue(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+    public final void setValue(final GXDLMSSettings settings, final ValueEventArgs e) {\n         if (e.getIndex() == 1) {\n             setLogicalName(GXCommon.toLogicalName(e.getValue()));\n         } else if (e.getIndex() == 2) {\n@@ -378,8 +399,7 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n             if (e.getValue() instanceof Object[]) {\n                 for (Object it : (Object[]) e.getValue()) {\n                     Object[] tmp = (Object[]) it;\n-                    ObjectType type =\n-                            ObjectType.forValue(((Number) tmp[0]).intValue());\n+                    ObjectType type = ObjectType.forValue(((Number) tmp[0]).intValue());\n                     String ln = GXCommon.toLogicalName(tmp[1]);\n                     GXDLMSObject obj = settings.getObjects().findByLN(type, ln);\n                     if (obj == null) {\n@@ -389,100 +409,85 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n                     GXDLMSCaptureObject co = new GXDLMSCaptureObject();\n                     co.setAttributeIndex(((Number) tmp[2]).intValue());\n                     co.setDataIndex(((Number) tmp[3]).intValue());\n-                    ent = new GXSimpleEntry<GXDLMSObject, GXDLMSCaptureObject>(\n-                            obj, co);\n+                    ent = new GXSimpleEntry<GXDLMSObject, GXDLMSCaptureObject>(obj, co);\n                     pushObjectList.add(ent);\n                 }\n             }\n         } else if (e.getIndex() == 3) {\n-            Object[] tmp = (Object[]) e.getValue();\n-            if (tmp != null) {\n-                sendDestinationAndMethod.setService(\n-                        ServiceType.forValue(((Number) tmp[0]).intValue()));\n-                sendDestinationAndMethod\n-                        .setDestination(new String((byte[]) tmp[1]));\n-                sendDestinationAndMethod.setMessage(\n-                        MessageType.forValue(((Number) tmp[2]).intValue()));\n-            }\n-        } else if (e.getIndex() == 4) {\n-            communicationWindow.clear();\n-            if (e.getValue() instanceof Object[]) {\n-                for (Object it : (Object[]) e.getValue()) {\n-                    Object[] tmp = (Object[]) it;\n-                    GXDateTime start = (GXDateTime) GXDLMSClient\n-                            .changeType((byte[]) tmp[0], DataType.DATETIME);\n-                    GXDateTime end = (GXDateTime) GXDLMSClient\n-                            .changeType((byte[]) tmp[1], DataType.DATETIME);\n-                    communicationWindow.add(\n-                            new GXSimpleEntry<GXDateTime, GXDateTime>(start,\n-                                    end));\n-                }\n-            }\n-        } else if (e.getIndex() == 5) {\n-            randomisationStartInterval = ((Number) e.getValue()).intValue();\n-        } else if (e.getIndex() == 6) {\n-            numberOfRetries = ((Number) e.getValue()).intValue();\n-        } else if (e.getIndex() == 7) {\n-            repetitionDelay = ((Number) e.getValue()).intValue();\n-        } else {\n-            e.setError(ErrorCode.READ_WRITE_DENIED);\n-        }\n+                   Object[] tmp = (Object[]) e.getValue();\n+                   if (tmp != null) {\n+                       sendDestinationAndMethod.setService(ServiceType.forValue(((Number) tmp[0]).intValue()));\n+                       sendDestinationAndMethod.setDestination(new String((byte[]) tmp[1]));\n+                       sendDestinationAndMethod.setMessage(MessageType.forValue(((Number) tmp[2]).intValue()));\n+                   }\n+               } else if (e.getIndex() == 4) {\n+                   communicationWindow.clear();\n+                   if (e.getValue() instanceof Object[]) {\n+                       for (Object it : (Object[]) e.getValue()) {\n+                           Object[] tmp = (Object[]) it;\n+                           GXDateTime start = (GXDateTime) GXDLMSClient.changeType((byte[]) tmp[0], DataType.DATETIME);\n+                           GXDateTime end = (GXDateTime) GXDLMSClient.changeType((byte[]) tmp[1], DataType.DATETIME);\n+                           communicationWindow.add(new GXSimpleEntry<GXDateTime, GXDateTime>(start, end));\n+                       }\n+                   }\n+               } else if (e.getIndex() == 5) {\n+                          randomisationStartInterval = ((Number) e.getValue()).intValue();\n+                      } else if (e.getIndex() == 6) {\n+                          numberOfRetries = ((Number) e.getValue()).intValue();\n+                      } else if (e.getIndex() == 7) {\n+                                 repetitionDelay = ((Number) e.getValue()).intValue();\n+                             } else {\n+                                 e.setError(ErrorCode.READ_WRITE_DENIED);\n+               }\n     }\n \n+\n     @Override\n-    public final void load(final GXXmlReader reader) throws XMLStreamException {\n+    public final void load(final GXXmlReader reader)\n+                                                      throws XMLStreamException {\n         pushObjectList.clear();\n         if (reader.isStartElement(\"ObjectList\", true)) {\n             while (reader.isStartElement(\"Item\", true)) {\n-                ObjectType ot = ObjectType\n-                        .forValue(reader.readElementContentAsInt(\"ObjectType\"));\n+                ObjectType ot = ObjectType.forValue(reader.readElementContentAsInt(\"ObjectType\"));\n                 String ln = reader.readElementContentAsString(\"LN\");\n                 int ai = reader.readElementContentAsInt(\"AI\");\n                 int di = reader.readElementContentAsInt(\"DI\");\n                 reader.readEndElement(\"ObjectList\");\n                 GXDLMSCaptureObject co = new GXDLMSCaptureObject(ai, di);\n                 GXDLMSObject obj = reader.getObjects().findByLN(ot, ln);\n-                pushObjectList\n-                        .add(new GXSimpleEntry<GXDLMSObject, GXDLMSCaptureObject>(\n-                                obj, co));\n+                pushObjectList.add(new GXSimpleEntry<GXDLMSObject, GXDLMSCaptureObject>(obj, co));\n             }\n             reader.readEndElement(\"ObjectList\");\n         }\n-\n-        service =\n-                ServiceType.forValue(reader.readElementContentAsInt(\"Service\"));\n+        service = ServiceType.forValue(reader.readElementContentAsInt(\"Service\"));\n         destination = reader.readElementContentAsString(\"Destination\");\n-        message =\n-                MessageType.forValue(reader.readElementContentAsInt(\"Message\"));\n+        message = MessageType.forValue(reader.readElementContentAsInt(\"Message\"));\n         communicationWindow.clear();\n         if (reader.isStartElement(\"CommunicationWindow\", true)) {\n             while (reader.isStartElement(\"Item\", true)) {\n-                GXDateTime start = new GXDateTime(\n-                        reader.readElementContentAsString(\"Start\"));\n-                GXDateTime end = new GXDateTime(\n-                        reader.readElementContentAsString(\"End\"));\n-                communicationWindow.add(\n-                        new GXSimpleEntry<GXDateTime, GXDateTime>(start, end));\n+                GXDateTime start = new GXDateTime(reader.readElementContentAsString(\"Start\"));\n+                GXDateTime end = new GXDateTime(reader.readElementContentAsString(\"End\"));\n+                communicationWindow.add(new GXSimpleEntry<GXDateTime, GXDateTime>(start, end));\n             }\n             reader.readEndElement(\"CommunicationWindow\");\n         }\n-        randomisationStartInterval =\n-                reader.readElementContentAsInt(\"RandomisationStartInterval\");\n+        randomisationStartInterval = reader.readElementContentAsInt(\"RandomisationStartInterval\");\n         numberOfRetries = reader.readElementContentAsInt(\"NumberOfRetries\");\n         repetitionDelay = reader.readElementContentAsInt(\"RepetitionDelay\");\n     }\n \n+\n     @Override\n-    public final void save(final GXXmlWriter writer) throws XMLStreamException {\n+    public final void save(final GXXmlWriter writer)\n+                                                      throws XMLStreamException {\n         if (pushObjectList != null) {\n             writer.writeStartElement(\"ObjectList\");\n             for (Entry<GXDLMSObject, GXDLMSCaptureObject> it : pushObjectList) {\n                 writer.writeStartElement(\"Item\");\n                 writer.writeElementString(\"ObjectType\",\n-                        it.getKey().getObjectType().getValue());\n+                      it.getKey().getObjectType().getValue());\n                 writer.writeElementString(\"LN\", it.getKey().getLogicalName());\n-                writer.writeElementString(\"AI\",\n-                        it.getValue().getAttributeIndex());\n+                writer.writeElementString(\"AI\", it.getValue().getAttributeIndex());\n                 writer.writeElementString(\"DI\", it.getValue().getDataIndex());\n                 writer.writeEndElement();\n             }\n@@ -495,21 +500,20 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n             writer.writeStartElement(\"CommunicationWindow\");\n             for (Entry<GXDateTime, GXDateTime> it : communicationWindow) {\n                 writer.writeStartElement(\"Item\");\n-                writer.writeElementString(\"Start\",\n-                        it.getKey().toFormatString());\n-                writer.writeElementString(\"End\",\n-                        it.getValue().toFormatString());\n+                writer.writeElementString(\"Start\", it.getKey().toFormatString());\n+                writer.writeElementString(\"End\", it.getValue().toFormatString());\n                 writer.writeEndElement();\n             }\n             writer.writeEndElement();\n         }\n-        writer.writeElementString(\"RandomisationStartInterval\",\n-                randomisationStartInterval);\n+        writer.writeElementString(\"RandomisationStartInterval\", randomisationStartInterval);\n         writer.writeElementString(\"NumberOfRetries\", numberOfRetries);\n         writer.writeElementString(\"RepetitionDelay\", repetitionDelay);\n     }\n \n+\n     @Override\n     public final void postLoad(final GXXmlReader reader) {\n+\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 151
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "446",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/3/GXDLMSPushSetup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler_three_grams/3/GXDLMSPushSetup.java\nindex fa65f853d34..5de5f0e96b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/3/GXDLMSPushSetup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler_three_grams/3/GXDLMSPushSetup.java\n@@ -443,7 +443,7 @@ public class GXDLMSPushSetup extends GXDLMSObject implements IGXDLMSBase {\n                 GXDLMSCaptureObject co = new GXDLMSCaptureObject(ai, di);\n                 GXDLMSObject obj = reader.getObjects().findByLN(ot, ln);\n                 pushObjectList\n-                        .add(new GXSimpleEntry<GXDLMSObject, GXDLMSCaptureObject>(\n+        .add(new GXSimpleEntry<GXDLMSObject, GXDLMSCaptureObject>(\n                                 obj, co));\n             }\n             reader.readEndElement(\"ObjectList\");\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
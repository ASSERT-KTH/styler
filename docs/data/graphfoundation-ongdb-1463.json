{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1463",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1463/TemporalValueWriterAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1463/TemporalValueWriterAdapter.java\nindex 65ad123a92e..1aec7218a63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1463/TemporalValueWriterAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1463/TemporalValueWriterAdapter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.time.LocalDate;\n@@ -43,110 +44,109 @@ import static java.time.ZoneOffset.UTC;\n  */\n public abstract class TemporalValueWriterAdapter<E extends Exception> extends ValueWriter.Adapter<E>\n {\n-    @Override\n-    public final void writeDate( LocalDate localDate ) throws E\n-    {\n-        writeDate( localDate.toEpochDay() );\n-    }\n+  @Override\n+  public final void writeDate(LocalDate localDate) throws E\n+  {\n+    writeDate(localDate.toEpochDay());\n+  }\n \n-    @Override\n-    public final void writeLocalTime( LocalTime localTime ) throws E\n-    {\n-        writeLocalTime( localTime.toNanoOfDay() );\n-    }\n+  @Override\n+  public final void writeLocalTime(LocalTime localTime) throws E\n+  {\n+    writeLocalTime(localTime.toNanoOfDay());\n+  }\n \n-    @Override\n-    public final void writeTime( OffsetTime offsetTime ) throws E\n-    {\n-        long nanosOfDayUTC = TemporalUtil.getNanosOfDayUTC( offsetTime );\n-        int offsetSeconds = offsetTime.getOffset().getTotalSeconds();\n-        writeTime( nanosOfDayUTC, offsetSeconds );\n-    }\n+  @Override\n+  public final void writeTime(OffsetTime offsetTime) throws E\n+  {\n+    long nanosOfDayUTC = TemporalUtil.getNanosOfDayUTC(offsetTime);\n+    int offsetSeconds = offsetTime.getOffset().getTotalSeconds();\n+    writeTime(nanosOfDayUTC, offsetSeconds);\n+  }\n \n-    @Override\n-    public final void writeLocalDateTime( LocalDateTime localDateTime ) throws E\n-    {\n-        long epochSecond = localDateTime.toEpochSecond( UTC );\n-        int nano = localDateTime.getNano();\n-        writeLocalDateTime( epochSecond, nano );\n-    }\n+  @Override\n+  public final void writeLocalDateTime(LocalDateTime localDateTime) throws E\n+  {\n+    long epochSecond = localDateTime.toEpochSecond(UTC);\n+    int nano = localDateTime.getNano();\n+    writeLocalDateTime(epochSecond, nano);\n+  }\n \n-    @Override\n-    public final void writeDateTime( ZonedDateTime zonedDateTime ) throws E\n-    {\n-        long epochSecondUTC = zonedDateTime.toEpochSecond();\n-        int nano = zonedDateTime.getNano();\n-\n-        ZoneId zone = zonedDateTime.getZone();\n-        if ( zone instanceof ZoneOffset )\n-        {\n-            int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n-            writeDateTime( epochSecondUTC, nano, offsetSeconds );\n-        }\n-        else\n-        {\n-            String zoneId = zone.getId();\n-            writeDateTime( epochSecondUTC, nano, zoneId );\n-        }\n-    }\n+  @Override\n+  public final void writeDateTime(ZonedDateTime zonedDateTime) throws E\n+  {\n+    long epochSecondUTC = zonedDateTime.toEpochSecond();\n+    int nano = zonedDateTime.getNano();\n \n-    /**\n-     * Write date value obtained from {@link LocalDate} in {@link #writeDate(LocalDate)}.\n-     *\n-     * @param epochDay the epoch day.\n-     */\n-    protected void writeDate( long epochDay ) throws E\n+    ZoneId zone = zonedDateTime.getZone();\n+    if (zone instanceof ZoneOffset)\n     {\n-    }\n-\n-    /**\n-     * Write local time value obtained from {@link LocalTime} in {@link #writeLocalTime(LocalTime)}.\n-     *\n-     * @param nanoOfDay the nanosecond of the day.\n-     */\n-    protected void writeLocalTime( long nanoOfDay ) throws E\n+      int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n+      writeDateTime(epochSecondUTC, nano, offsetSeconds);\n+    } else\n     {\n+      String zoneId = zone.getId();\n+      writeDateTime(epochSecondUTC, nano, zoneId);\n     }\n+  }\n \n-    /**\n-     * Write time value obtained from {@link OffsetTime} in {@link #writeTime(OffsetTime)}.\n-     *\n-     * @param nanosOfDayUTC nanoseconds of day in UTC. will be between -18h and +42h\n-     * @param offsetSeconds time zone offset in seconds\n-     */\n-    protected void writeTime( long nanosOfDayUTC, int offsetSeconds ) throws E\n-    {\n-    }\n+  /**\n+   * Write date value obtained from {@link LocalDate} in {@link #writeDate(LocalDate)}.\n+   *\n+   * @param epochDay the epoch day.\n+   */\n+  protected void writeDate(long epochDay) throws E\n+  {\n+  }\n \n-    /**\n-     * Write local date-time value obtained from {@link LocalDateTime} in {@link #writeLocalDateTime(LocalDateTime)}.\n-     *\n-     * @param epochSecond the epoch second in UTC.\n-     * @param nano the nanosecond.\n-     */\n-    protected void writeLocalDateTime( long epochSecond, int nano ) throws E\n-    {\n-    }\n+  /**\n+   * Write local time value obtained from {@link LocalTime} in {@link #writeLocalTime(LocalTime)}.\n+   *\n+   * @param nanoOfDay the nanosecond of the day.\n+   */\n+  protected void writeLocalTime(long nanoOfDay) throws E\n+  {\n+  }\n \n-    /**\n-     * Write zoned date-time value obtained from {@link ZonedDateTime} in {@link #writeDateTime(ZonedDateTime)}.\n-     *\n-     * @param epochSecondUTC the epoch second in UTC (no offset).\n-     * @param nano the nanosecond.\n-     * @param offsetSeconds the offset in seconds.\n-     */\n-    protected void writeDateTime( long epochSecondUTC, int nano, int offsetSeconds ) throws E\n-    {\n-    }\n+  /**\n+   * Write time value obtained from {@link OffsetTime} in {@link #writeTime(OffsetTime)}.\n+   *\n+   * @param nanosOfDayUTC nanoseconds of day in UTC. will be between -18h and +42h\n+   * @param offsetSeconds time zone offset in seconds\n+   */\n+  protected void writeTime(long nanosOfDayUTC, int offsetSeconds) throws E\n+  {\n+  }\n \n-    /**\n-     * Write zoned date-time value obtained from {@link ZonedDateTime} in {@link #writeDateTime(ZonedDateTime)}.\n-     *\n-     * @param epochSecondUTC the epoch second in UTC (no offset).\n-     * @param nano the nanosecond.\n-     * @param zoneId the timezone id.\n-     */\n-    protected void writeDateTime( long epochSecondUTC, int nano, String zoneId ) throws E\n-    {\n-    }\n+  /**\n+   * Write local date-time value obtained from {@link LocalDateTime} in {@link #writeLocalDateTime(LocalDateTime)}.\n+   *\n+   * @param epochSecond the epoch second in UTC.\n+   * @param nano        the nanosecond.\n+   */\n+  protected void writeLocalDateTime(long epochSecond, int nano) throws E\n+  {\n+  }\n+\n+  /**\n+   * Write zoned date-time value obtained from {@link ZonedDateTime} in {@link #writeDateTime(ZonedDateTime)}.\n+   *\n+   * @param epochSecondUTC the epoch second in UTC (no offset).\n+   * @param nano           the nanosecond.\n+   * @param offsetSeconds  the offset in seconds.\n+   */\n+  protected void writeDateTime(long epochSecondUTC, int nano, int offsetSeconds) throws E\n+  {\n+  }\n+\n+  /**\n+   * Write zoned date-time value obtained from {@link ZonedDateTime} in {@link #writeDateTime(ZonedDateTime)}.\n+   *\n+   * @param epochSecondUTC the epoch second in UTC (no offset).\n+   * @param nano           the nanosecond.\n+   * @param zoneId         the timezone id.\n+   */\n+  protected void writeDateTime(long epochSecondUTC, int nano, String zoneId) throws E\n+  {\n+  }\n }\n",
            "diff_size": 119
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1463/TemporalValueWriterAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1463/TemporalValueWriterAdapter.java\nindex 65ad123a92e..a49cf4d8cf4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1463/TemporalValueWriterAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1463/TemporalValueWriterAdapter.java\n@@ -76,8 +76,7 @@ public abstract class TemporalValueWriterAdapter<E extends Exception> extends Va\n     {\n         long epochSecondUTC = zonedDateTime.toEpochSecond();\n         int nano = zonedDateTime.getNano();\n-\n-        ZoneId zone = zonedDateTime.getZone();\n+ZoneId zone = zonedDateTime.getZone();\n         if ( zone instanceof ZoneOffset )\n         {\n             int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n@@ -149,4 +148,4 @@ public abstract class TemporalValueWriterAdapter<E extends Exception> extends Va\n     protected void writeDateTime( long epochSecondUTC, int nano, String zoneId ) throws E\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
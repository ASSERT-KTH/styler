{
    "project_name": "graphfoundation-ongdb",
    "error_id": "801",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/801/CoreStatus.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/801/CoreStatus.java\nindex 0416d74402f..97b697e9c5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/801/CoreStatus.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/801/CoreStatus.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.causalclustering;\n \n import java.util.stream.Stream;\n@@ -30,38 +31,38 @@ import static org.neo4j.server.rest.causalclustering.CausalClusteringService.BAS\n \n class CoreStatus extends BaseStatus\n {\n-    private final OutputFormat output;\n-    private final CoreGraphDatabase db;\n+  private final OutputFormat output;\n+  private final CoreGraphDatabase db;\n \n-    CoreStatus( OutputFormat output, CoreGraphDatabase db )\n-    {\n-        super( output );\n-        this.output = output;\n-        this.db = db;\n-    }\n+  CoreStatus(OutputFormat output, CoreGraphDatabase db)\n+  {\n+    super(output);\n+    this.output = output;\n+    this.db = db;\n+  }\n \n-    @Override\n-    public Response discover()\n-    {\n-        return output.ok( new CausalClusteringDiscovery( BASE_PATH ) );\n-    }\n+  @Override\n+  public Response discover()\n+  {\n+    return output.ok(new CausalClusteringDiscovery(BASE_PATH));\n+  }\n \n-    @Override\n-    public Response available()\n-    {\n-        return positiveResponse();\n-    }\n+  @Override\n+  public Response available()\n+  {\n+    return positiveResponse();\n+  }\n \n-    @Override\n-    public Response readonly()\n-    {\n-        Role role = db.getRole();\n-        return Stream.of( Role.FOLLOWER, Role.CANDIDATE ).anyMatch( r -> r.equals( role ) ) ? positiveResponse() : negativeResponse();\n-    }\n+  @Override\n+  public Response readonly()\n+  {\n+    Role role = db.getRole();\n+    return Stream.of(Role.FOLLOWER, Role.CANDIDATE).anyMatch(r -> r.equals(role)) ? positiveResponse() : negativeResponse();\n+  }\n \n-    @Override\n-    public Response writable()\n-    {\n-        return db.getRole() == Role.LEADER ? positiveResponse() : negativeResponse();\n-    }\n+  @Override\n+  public Response writable()\n+  {\n+    return db.getRole() == Role.LEADER ? positiveResponse() : negativeResponse();\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/801/CoreStatus.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/801/CoreStatus.java\nindex 0416d74402f..ef6f66f1b6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/801/CoreStatus.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/801/CoreStatus.java\n@@ -64,4 +64,4 @@ class CoreStatus extends BaseStatus\n     {\n         return db.getRole() == Role.LEADER ? positiveResponse() : negativeResponse();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
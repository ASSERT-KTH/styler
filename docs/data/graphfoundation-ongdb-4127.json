{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4127",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4127/IndexReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4127/IndexReference.java\nindex 1ac1aa436fd..b9b82ced5af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4127/IndexReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4127/IndexReference.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.index.IndexWriter;\n@@ -27,99 +28,97 @@ import java.util.concurrent.atomic.AtomicInteger;\n \n abstract class IndexReference\n {\n-    private final IndexIdentifier identifier;\n-    private final IndexSearcher searcher;\n-    private final AtomicInteger refCount = new AtomicInteger( 0 );\n-    private boolean searcherIsClosed;\n-\n-    /**\n-     * We need this because we only want to close the reader/searcher if\n-     * it has been detached... i.e. the {@link LuceneDataSource} no longer\n-     * has any reference to it, only an iterator out in the client has a ref.\n-     * And when that client calls close() it should be closed.\n-     */\n-    private volatile boolean detached;\n-\n-    IndexReference( IndexIdentifier identifier, IndexSearcher searcher )\n+  private final IndexIdentifier identifier;\n+  private final IndexSearcher searcher;\n+  private final AtomicInteger refCount = new AtomicInteger(0);\n+  private boolean searcherIsClosed;\n+\n+  /**\n+   * We need this because we only want to close the reader/searcher if\n+   * it has been detached... i.e. the {@link LuceneDataSource} no longer\n+   * has any reference to it, only an iterator out in the client has a ref.\n+   * And when that client calls close() it should be closed.\n+   */\n+  private volatile boolean detached;\n+\n+  IndexReference(IndexIdentifier identifier, IndexSearcher searcher)\n+  {\n+    this.identifier = identifier;\n+    this.searcher = searcher;\n+  }\n+\n+  abstract IndexWriter getWriter();\n+\n+  abstract void dispose() throws IOException;\n+\n+  abstract boolean checkAndClearStale();\n+\n+  abstract void setStale();\n+\n+  public IndexSearcher getSearcher()\n+  {\n+    return searcher;\n+  }\n+\n+  public IndexIdentifier getIdentifier()\n+  {\n+    return identifier;\n+  }\n+\n+  void incRef()\n+  {\n+    this.refCount.incrementAndGet();\n+  }\n+\n+  void disposeSearcher() throws IOException\n+  {\n+    if (!searcherIsClosed)\n     {\n-        this.identifier = identifier;\n-        this.searcher = searcher;\n+      searcher.getIndexReader().close();\n+      searcherIsClosed = true;\n     }\n+  }\n \n-    abstract IndexWriter getWriter();\n-\n-    abstract void dispose() throws IOException;\n-\n-    abstract boolean checkAndClearStale();\n-\n-    abstract void setStale();\n-\n-    public IndexSearcher getSearcher()\n+  void detachOrClose() throws IOException\n+  {\n+    if (this.refCount.get() == 0)\n     {\n-        return searcher;\n-    }\n-\n-    public IndexIdentifier getIdentifier()\n+      disposeSearcher();\n+    } else\n     {\n-        return identifier;\n+      this.detached = true;\n     }\n+  }\n \n-    void incRef()\n+  public synchronized boolean close()\n+  {\n+    try\n     {\n-        this.refCount.incrementAndGet();\n-    }\n-\n-    void disposeSearcher() throws IOException\n+      if (this.searcherIsClosed || this.refCount.get() == 0)\n+      {\n+        return true;\n+      }\n+\n+      boolean reallyClosed = false;\n+      if (this.refCount.decrementAndGet() <= 0 && this.detached)\n+      {\n+        disposeSearcher();\n+        reallyClosed = true;\n+      }\n+      return reallyClosed;\n+    } catch (IOException e)\n     {\n-        if ( !searcherIsClosed )\n-        {\n-            searcher.getIndexReader().close();\n-            searcherIsClosed = true;\n-        }\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    void detachOrClose() throws IOException\n-    {\n-        if ( this.refCount.get() == 0 )\n-        {\n-            disposeSearcher();\n-        }\n-        else\n-        {\n-            this.detached = true;\n-        }\n-    }\n+  public boolean isClosed()\n+  {\n+    return searcherIsClosed;\n+  }\n \n-    public synchronized boolean close()\n-    {\n-        try\n-        {\n-            if ( this.searcherIsClosed || this.refCount.get() == 0 )\n-            {\n-                return true;\n-            }\n-\n-            boolean reallyClosed = false;\n-            if ( this.refCount.decrementAndGet() <= 0 && this.detached )\n-            {\n-                disposeSearcher();\n-                reallyClosed = true;\n-            }\n-            return reallyClosed;\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n-\n-    public boolean isClosed()\n-    {\n-        return searcherIsClosed;\n-    }\n-\n-    boolean isDetached()\n-    {\n-        return detached;\n-    }\n+  boolean isDetached()\n+  {\n+    return detached;\n+  }\n }\n",
            "diff_size": 129
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4127/IndexReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4127/IndexReference.java\nindex 1ac1aa436fd..57b02076e7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4127/IndexReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4127/IndexReference.java\n@@ -105,7 +105,8 @@ abstract class IndexReference\n                 disposeSearcher();\n                 reallyClosed = true;\n             }\n-            return reallyClosed;\n+\n+return reallyClosed;\n         }\n         catch ( IOException e )\n         {\n@@ -122,4 +123,4 @@ abstract class IndexReference\n     {\n         return detached;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
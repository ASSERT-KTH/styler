{
    "project_name": "neo4j-neo4j",
    "error_id": "1462",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1462/NodeCountsProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1462/NodeCountsProcessor.java\nindex 335a78b0765..d5816820b56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1462/NodeCountsProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1462/NodeCountsProcessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport;\n \n import org.neo4j.common.ProgressReporter;\n@@ -43,8 +44,8 @@ public class NodeCountsProcessor implements RecordProcessor<NodeRecord>\n     private final int anyLabel;\n     private final NodeLabelsCache.Client cacheClient;\n \n-    NodeCountsProcessor( NodeStore nodeStore, NodeLabelsCache cache, int highLabelId,\n-            CountsAccessor.Updater counts, ProgressReporter progressReporter )\n+    NodeCountsProcessor(NodeStore nodeStore, NodeLabelsCache cache, int highLabelId,\n+                        CountsAccessor.Updater counts, ProgressReporter progressReporter)\n     {\n         this.nodeStore = nodeStore;\n         this.cache = cache;\n@@ -57,29 +58,29 @@ public class NodeCountsProcessor implements RecordProcessor<NodeRecord>\n     }\n \n     @Override\n-    public boolean process( NodeRecord node, PageCursorTracer cursorTracer )\n+    public boolean process(NodeRecord node, PageCursorTracer cursorTracer)\n     {\n-        long[] labels = NodeLabelsField.get( node, nodeStore, cursorTracer );\n-        if ( labels.length > 0 )\n+        long[] labels = NodeLabelsField.get(node, nodeStore, cursorTracer);\n+        if (labels.length > 0)\n         {\n-            for ( long labelId : labels )\n+            for (long labelId : labels)\n             {\n                 labelCounts[(int) labelId]++;\n             }\n-            cache.put( cacheClient, node.getId(), labels );\n+            cache.put(cacheClient, node.getId(), labels);\n         }\n         labelCounts[anyLabel]++;\n-        progressReporter.progress( 1 );\n+        progressReporter.progress(1);\n \n         // No need to update the store, we're just reading things here\n         return false;\n     }\n \n     @Override\n-    public void mergeResultsFrom( RecordProcessor<NodeRecord> other )\n+    public void mergeResultsFrom(RecordProcessor<NodeRecord> other)\n     {\n         NodeCountsProcessor o = (NodeCountsProcessor) other;\n-        for ( int i = 0; i < o.labelCounts.length; i++ )\n+        for (int i = 0; i < o.labelCounts.length; i++)\n         {\n             labelCounts[i] += o.labelCounts[i];\n         }\n@@ -88,9 +89,9 @@ public class NodeCountsProcessor implements RecordProcessor<NodeRecord>\n     @Override\n     public void done()\n     {\n-        for ( int i = 0; i < labelCounts.length; i++ )\n+        for (int i = 0; i < labelCounts.length; i++)\n         {\n-            counts.incrementNodeCount( i == anyLabel ? ANY_LABEL : i, labelCounts[i] );\n+            counts.incrementNodeCount(i == anyLabel ? ANY_LABEL : i, labelCounts[i]);\n         }\n     }\n \n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1462/NodeCountsProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1462/NodeCountsProcessor.java\nindex 335a78b0765..67655f9ad04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1462/NodeCountsProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1462/NodeCountsProcessor.java\n@@ -98,4 +98,4 @@ public class NodeCountsProcessor implements RecordProcessor<NodeRecord>\n     public void close()\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
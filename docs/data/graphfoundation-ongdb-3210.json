{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3210",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3210/FilterIterable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3210/FilterIterable.java\nindex e11633e2b30..fcf344b8125 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3210/FilterIterable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3210/FilterIterable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.collection;\n \n import java.util.Iterator;\n@@ -25,91 +26,90 @@ import java.util.function.Predicate;\n \n class FilterIterable<T> implements Iterable<T>\n {\n-    private final Iterable<T> iterable;\n+  private final Iterable<T> iterable;\n+\n+  private final Predicate<? super T> specification;\n+\n+  FilterIterable(Iterable<T> iterable, Predicate<? super T> specification)\n+  {\n+    this.iterable = iterable;\n+    this.specification = specification;\n+  }\n+\n+  @Override\n+  public Iterator<T> iterator()\n+  {\n+    return new FilterIterator<>(iterable.iterator(), specification);\n+  }\n+\n+  static class FilterIterator<T> implements Iterator<T>\n+  {\n+    private final Iterator<T> iterator;\n \n     private final Predicate<? super T> specification;\n \n-    FilterIterable( Iterable<T> iterable, Predicate<? super T> specification )\n-    {\n-        this.iterable = iterable;\n-        this.specification = specification;\n-    }\n+    private T currentValue;\n+    boolean finished;\n+    boolean nextConsumed = true;\n \n-    @Override\n-    public Iterator<T> iterator()\n+    FilterIterator(Iterator<T> iterator, Predicate<? super T> specification)\n     {\n-        return new FilterIterator<>( iterable.iterator(), specification );\n+      this.specification = specification;\n+      this.iterator = iterator;\n     }\n \n-    static class FilterIterator<T> implements Iterator<T>\n+    boolean moveToNextValid()\n     {\n-        private final Iterator<T> iterator;\n-\n-        private final Predicate<? super T> specification;\n+      boolean found = false;\n+      while (!found && iterator.hasNext())\n+      {\n+        T currentValue = iterator.next();\n+        boolean satisfies = specification.test(currentValue);\n \n-        private T currentValue;\n-        boolean finished;\n-        boolean nextConsumed = true;\n-\n-        FilterIterator( Iterator<T> iterator, Predicate<? super T> specification )\n+        if (satisfies)\n         {\n-            this.specification = specification;\n-            this.iterator = iterator;\n-        }\n-\n-        boolean moveToNextValid()\n-        {\n-            boolean found = false;\n-            while ( !found && iterator.hasNext() )\n-            {\n-                T currentValue = iterator.next();\n-                boolean satisfies = specification.test( currentValue );\n-\n-                if ( satisfies )\n-                {\n-                    found = true;\n-                    this.currentValue = currentValue;\n-                    nextConsumed = false;\n-                }\n-            }\n-            if ( !found )\n-            {\n-                finished = true;\n-            }\n-            return found;\n+          found = true;\n+          this.currentValue = currentValue;\n+          nextConsumed = false;\n         }\n+      }\n+      if (!found)\n+      {\n+        finished = true;\n+      }\n+      return found;\n+    }\n \n-        @Override\n-        public T next()\n+    @Override\n+    public T next()\n+    {\n+      if (!nextConsumed)\n+      {\n+        nextConsumed = true;\n+        return currentValue;\n+      } else\n+      {\n+        if (!finished)\n         {\n-            if ( !nextConsumed )\n-            {\n-                nextConsumed = true;\n-                return currentValue;\n-            }\n-            else\n-            {\n-                if ( !finished )\n-                {\n-                    if ( moveToNextValid() )\n-                    {\n-                        nextConsumed = true;\n-                        return currentValue;\n-                    }\n-                }\n-            }\n-            throw new NoSuchElementException( \"This iterator is exhausted.\" );\n+          if (moveToNextValid())\n+          {\n+            nextConsumed = true;\n+            return currentValue;\n+          }\n         }\n+      }\n+      throw new NoSuchElementException(\"This iterator is exhausted.\");\n+    }\n \n-        @Override\n-        public boolean hasNext()\n-        {\n-            return !finished && (!nextConsumed || moveToNextValid());\n-        }\n+    @Override\n+    public boolean hasNext()\n+    {\n+      return !finished && (!nextConsumed || moveToNextValid());\n+    }\n \n-        @Override\n-        public void remove()\n-        {\n-        }\n+    @Override\n+    public void remove()\n+    {\n     }\n+  }\n }\n",
            "diff_size": 111
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3210/FilterIterable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3210/FilterIterable.java\nindex e11633e2b30..27fb5e53d04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3210/FilterIterable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3210/FilterIterable.java\n@@ -64,8 +64,7 @@ class FilterIterable<T> implements Iterable<T>\n             {\n                 T currentValue = iterator.next();\n                 boolean satisfies = specification.test( currentValue );\n-\n-                if ( satisfies )\n+if ( satisfies )\n                 {\n                     found = true;\n                     this.currentValue = currentValue;\n@@ -76,7 +75,8 @@ class FilterIterable<T> implements Iterable<T>\n             {\n                 finished = true;\n             }\n-            return found;\n+\n+return found;\n         }\n \n         @Override\n@@ -104,7 +104,7 @@ class FilterIterable<T> implements Iterable<T>\n         @Override\n         public boolean hasNext()\n         {\n-            return !finished && (!nextConsumed || moveToNextValid());\n+            return !finished && (!nextConsumed || moveToNextValid() );\n         }\n \n         @Override\n@@ -112,4 +112,4 @@ class FilterIterable<T> implements Iterable<T>\n         {\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
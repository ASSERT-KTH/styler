{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1098",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1098/NativeIndexFileFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1098/NativeIndexFileFilter.java\nindex 8fc77919aaf..d88c17fcd94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1098/NativeIndexFileFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1098/NativeIndexFileFilter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.internal;\n \n import java.io.File;\n@@ -29,36 +30,36 @@ import org.neo4j.kernel.api.index.IndexDirectoryStructure;\n  * A {@link FileFilter} which only {@link #accept(File) accepts} native index files.\n  * This class contains logic that is really index provider specific, but to ask index providers becomes tricky since\n  * they aren't always available and this filter is also expected to be used in offline scenarios.\n- *\n+ * <p>\n  * The basic idea is to include everything except known lucene files (or directories known to include lucene files).\n  */\n public class NativeIndexFileFilter implements FileFilter\n {\n-    private final Path indexRoot;\n+  private final Path indexRoot;\n \n-    public NativeIndexFileFilter( File storeDir )\n-    {\n-        indexRoot = IndexDirectoryStructure.baseSchemaIndexFolder( storeDir ).toPath().toAbsolutePath();\n-    }\n+  public NativeIndexFileFilter(File storeDir)\n+  {\n+    indexRoot = IndexDirectoryStructure.baseSchemaIndexFolder(storeDir).toPath().toAbsolutePath();\n+  }\n \n-    @Override\n-    public boolean accept( File file )\n+  @Override\n+  public boolean accept(File file)\n+  {\n+    Path path = file.toPath();\n+    if (!path.toAbsolutePath().startsWith(indexRoot))\n     {\n-        Path path = file.toPath();\n-        if ( !path.toAbsolutePath().startsWith( indexRoot ) )\n-        {\n-            // This file isn't even under the schema/index root directory\n-            return false;\n-        }\n+      // This file isn't even under the schema/index root directory\n+      return false;\n+    }\n \n-        Path schemaPath = indexRoot.relativize( path );\n-        int nameCount = schemaPath.getNameCount();\n+    Path schemaPath = indexRoot.relativize(path);\n+    int nameCount = schemaPath.getNameCount();\n \n-        // - schema/index/lucene/.....\n-        boolean isPureLuceneProviderFile = nameCount >= 1 && schemaPath.getName( 0 ).toString().equals( \"lucene\" );\n-        // - schema/index/lucene_native-x.y/<indexId>/lucene-x.y/x/.....\n-        boolean isFusionLuceneProviderFile = nameCount >= 3 && schemaPath.getName( 2 ).toString().startsWith( \"lucene-\" );\n+    // - schema/index/lucene/.....\n+    boolean isPureLuceneProviderFile = nameCount >= 1 && schemaPath.getName(0).toString().equals(\"lucene\");\n+    // - schema/index/lucene_native-x.y/<indexId>/lucene-x.y/x/.....\n+    boolean isFusionLuceneProviderFile = nameCount >= 3 && schemaPath.getName(2).toString().startsWith(\"lucene-\");\n \n-        return !isPureLuceneProviderFile && !isFusionLuceneProviderFile;\n-    }\n+    return !isPureLuceneProviderFile && !isFusionLuceneProviderFile;\n+  }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1098/NativeIndexFileFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1098/NativeIndexFileFilter.java\nindex 8fc77919aaf..0178649decf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1098/NativeIndexFileFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1098/NativeIndexFileFilter.java\n@@ -58,7 +58,6 @@ public class NativeIndexFileFilter implements FileFilter\n         boolean isPureLuceneProviderFile = nameCount >= 1 && schemaPath.getName( 0 ).toString().equals( \"lucene\" );\n         // - schema/index/lucene_native-x.y/<indexId>/lucene-x.y/x/.....\n         boolean isFusionLuceneProviderFile = nameCount >= 3 && schemaPath.getName( 2 ).toString().startsWith( \"lucene-\" );\n-\n-        return !isPureLuceneProviderFile && !isFusionLuceneProviderFile;\n+return !isPureLuceneProviderFile && !isFusionLuceneProviderFile;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
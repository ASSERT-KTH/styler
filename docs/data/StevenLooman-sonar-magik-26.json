{
    "project_name": "StevenLooman-sonar-magik",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "37",
                "column": "5",
                "severity": "warning",
                "message": "'}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "        }\n      }\n    }\n    catch (IllegalArgumentException ex) {\n      // do nothing\n    } catch (IOException ex) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "37",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/26/FileCharsetDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/26/FileCharsetDeterminer.java\nindex 5adb78e1894..19a8dba5df1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/26/FileCharsetDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/26/FileCharsetDeterminer.java\n@@ -19,7 +19,8 @@ public class FileCharsetDeterminer {\n   /**\n    * Try to determine the charset used in this file.\n    * Magik files usually contain a line specifying the encoding: #% text_encoding = iso8859_1\n-   * @param path Path to file to check\n+   *\n+   * @param path           Path to file to check\n    * @param defaultCharset Default charset to return\n    * @return Charset for file or <code>defaultCharset</code> if undetermined\n    */\n@@ -34,8 +35,7 @@ public class FileCharsetDeterminer {\n           return Charset.forName(line);\n         }\n       }\n-    }\n-    catch (IllegalArgumentException ex) {\n+    } catch (IllegalArgumentException ex) {\n       // do nothing\n     } catch (IOException ex) {\n       // do nothing\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 0, indentation should be the same level as line 25.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/26/FileCharsetDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/26/FileCharsetDeterminer.java\nindex 5adb78e1894..1c0cd75f4fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/26/FileCharsetDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/26/FileCharsetDeterminer.java\n@@ -13,8 +13,7 @@ public class FileCharsetDeterminer {\n   private static final String ENCODING_LINE = \"#% text_encoding =\";\n \n   private FileCharsetDeterminer() {\n-\n-  }\n+}\n \n   /**\n    * Try to determine the charset used in this file.\n@@ -23,19 +22,17 @@ public class FileCharsetDeterminer {\n    * @param defaultCharset Default charset to return\n    * @return Charset for file or <code>defaultCharset</code> if undetermined\n    */\n-\n-  public static Charset determineCharset(Path path, @Nullable Charset defaultCharset) {\n+public static Charset determineCharset(Path path, @Nullable Charset defaultCharset) {\n     try (FileReader fileReader = new FileReader(path.toFile());\n-         BufferedReader bufferedReader = new BufferedReader(fileReader)) {\n-      String line = bufferedReader.readLine();\n+BufferedReader bufferedReader = new BufferedReader(fileReader)) {\n+  String line = bufferedReader.readLine();\n       if (line != null) {\n         if (line.startsWith(ENCODING_LINE)) {\n           line = line.substring(ENCODING_LINE.length()).trim();\n           return Charset.forName(line);\n         }\n       }\n-    }\n-    catch (IllegalArgumentException ex) {\n+    } catch (IllegalArgumentException ex) {\n       // do nothing\n     } catch (IOException ex) {\n       // do nothing\n@@ -44,4 +41,4 @@ public class FileCharsetDeterminer {\n     return defaultCharset;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "column": "8",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'try' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/26/FileCharsetDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/26/FileCharsetDeterminer.java\nindex 5adb78e1894..8197b988677 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/26/FileCharsetDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/26/FileCharsetDeterminer.java\n@@ -5,15 +5,12 @@ import java.io.FileReader;\n import java.io.IOException;\n import java.nio.charset.Charset;\n import java.nio.file.Path;\n-\n import javax.annotation.Nullable;\n \n public class FileCharsetDeterminer {\n \n   private static final String ENCODING_LINE = \"#% text_encoding =\";\n-\n   private FileCharsetDeterminer() {\n-\n   }\n \n   /**\n@@ -24,9 +21,9 @@ public class FileCharsetDeterminer {\n    * @return Charset for file or <code>defaultCharset</code> if undetermined\n    */\n \n+\n   public static Charset determineCharset(Path path, @Nullable Charset defaultCharset) {\n-    try (FileReader fileReader = new FileReader(path.toFile());\n-         BufferedReader bufferedReader = new BufferedReader(fileReader)) {\n+    try(FileReader fileReader = new FileReader(path.toFile()); BufferedReader bufferedReader = new BufferedReader(fileReader)) {\n       String line = bufferedReader.readLine();\n       if (line != null) {\n         if (line.startsWith(ENCODING_LINE)) {\n@@ -34,8 +31,7 @@ public class FileCharsetDeterminer {\n           return Charset.forName(line);\n         }\n       }\n-    }\n-    catch (IllegalArgumentException ex) {\n+    } catch (IllegalArgumentException ex) {\n       // do nothing\n     } catch (IOException ex) {\n       // do nothing\n@@ -43,5 +39,4 @@ public class FileCharsetDeterminer {\n \n     return defaultCharset;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "37",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "37",
                    "column": "6",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'catch' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "6",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/26/FileCharsetDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/26/FileCharsetDeterminer.java\nindex 5adb78e1894..fdd09d3bc92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/26/FileCharsetDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/26/FileCharsetDeterminer.java\n@@ -34,8 +34,7 @@ public class FileCharsetDeterminer {\n           return Charset.forName(line);\n         }\n       }\n-    }\n-    catch (IllegalArgumentException ex) {\n+    }catch (IllegalArgumentException ex) {\n       // do nothing\n     } catch (IOException ex) {\n       // do nothing\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
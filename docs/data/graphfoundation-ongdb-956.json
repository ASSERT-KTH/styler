{
    "project_name": "graphfoundation-ongdb",
    "error_id": "956",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/956/ShellSession.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/956/ShellSession.java\nindex c03e08c5f95..5b4dfff2484 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/956/ShellSession.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/956/ShellSession.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.management.console;\n \n import java.rmi.RemoteException;\n@@ -38,79 +39,76 @@ import org.neo4j.shell.kernel.GraphDatabaseShellServer;\n \n public class ShellSession implements ScriptSession\n {\n-    private static volatile ShellServer fallbackServer;\n+  private static volatile ShellServer fallbackServer;\n \n-    private final ShellClient client;\n-    private final CollectingOutput output;\n-    private final Log log;\n+  private final ShellClient client;\n+  private final CollectingOutput output;\n+  private final Log log;\n \n-    public ShellSession( GraphDatabaseAPI graph )\n+  public ShellSession(GraphDatabaseAPI graph)\n+  {\n+    try\n     {\n-        try\n-        {\n-            this.log = graph.getDependencyResolver().resolveDependency( LogService.class ).getInternalLog( getClass() );\n-            ShellServerKernelExtension extension = graph.getDependencyResolver().resolveDependency( KernelExtensions\n-                    .class ).resolveDependency( ShellServerKernelExtension.class );\n+      this.log = graph.getDependencyResolver().resolveDependency(LogService.class).getInternalLog(getClass());\n+      ShellServerKernelExtension extension = graph.getDependencyResolver().resolveDependency(KernelExtensions\n+          .class).resolveDependency(ShellServerKernelExtension.class);\n \n-            ShellServer server = extension.getServer();\n-            if ( server == null )\n-            {\n-                server = getFallbackServer( graph );\n-            }\n-            output = new CollectingOutput();\n-            client = new SameJvmClient( new HashMap<>(), server, output );\n-            output.asString();\n-        }\n-        catch ( RemoteException | ShellException e )\n-        {\n-            throw new RuntimeException( \"Unable to start shell client\", e );\n-        }\n+      ShellServer server = extension.getServer();\n+      if (server == null)\n+      {\n+        server = getFallbackServer(graph);\n+      }\n+      output = new CollectingOutput();\n+      client = new SameJvmClient(new HashMap<>(), server, output);\n+      output.asString();\n+    } catch (RemoteException | ShellException e)\n+    {\n+      throw new RuntimeException(\"Unable to start shell client\", e);\n     }\n+  }\n \n-    private ShellServer getFallbackServer( GraphDatabaseAPI graph )\n+  private ShellServer getFallbackServer(GraphDatabaseAPI graph)\n+  {\n+    if (fallbackServer == null)\n     {\n-        if ( fallbackServer == null )\n-        {\n-            try\n-            {\n-                fallbackServer = new GraphDatabaseShellServer( graph, false );\n-            }\n-            catch ( RemoteException e )\n-            {\n-                throw new RuntimeException( \"Unable to start the fallback shellserver\", e );\n-            }\n+      try\n+      {\n+        fallbackServer = new GraphDatabaseShellServer(graph, false);\n+      } catch (RemoteException e)\n+      {\n+        throw new RuntimeException(\"Unable to start the fallback shellserver\", e);\n+      }\n \n-        }\n-        return fallbackServer;\n     }\n+    return fallbackServer;\n+  }\n \n-    @Override\n-    public Pair<String, String> evaluate( String script )\n+  @Override\n+  public Pair<String, String> evaluate(String script)\n+  {\n+    if (script.equals(\"init()\"))\n     {\n-        if ( script.equals( \"init()\" ) )\n-        {\n-            return Pair.of( \"\", client.getPrompt() );\n-        }\n-        if ( script.equals( \"exit\" ) || script.equals( \"quit\" ) )\n-        {\n-            return Pair.of( \"Sorry, can't do that.\", client.getPrompt() );\n-        }\n-        try\n-        {\n-            log.debug( script );\n-            client.evaluate( removeInitialNewline( script ) );\n-            return Pair.of( output.asString(), client.getPrompt() );\n-        }\n-        catch ( ShellException e )\n-        {\n-            String message = ((AbstractClient) client).shouldPrintStackTraces() ?\n-                    ShellException.stackTraceAsString( e ) : ShellException.getFirstMessage( e );\n-            return Pair.of( message, client.getPrompt() );\n-        }\n+      return Pair.of(\"\", client.getPrompt());\n     }\n-\n-    private String removeInitialNewline( String script )\n+    if (script.equals(\"exit\") || script.equals(\"quit\"))\n     {\n-        return script != null && script.startsWith( \"\\n\" ) ? script.substring( 1 ) : script;\n+      return Pair.of(\"Sorry, can't do that.\", client.getPrompt());\n     }\n+    try\n+    {\n+      log.debug(script);\n+      client.evaluate(removeInitialNewline(script));\n+      return Pair.of(output.asString(), client.getPrompt());\n+    } catch (ShellException e)\n+    {\n+      String message = ((AbstractClient) client).shouldPrintStackTraces() ?\n+          ShellException.stackTraceAsString(e) : ShellException.getFirstMessage(e);\n+      return Pair.of(message, client.getPrompt());\n+    }\n+  }\n+\n+  private String removeInitialNewline(String script)\n+  {\n+    return script != null && script.startsWith(\"\\n\") ? script.substring(1) : script;\n+  }\n }\n",
            "diff_size": 88
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/956/ShellSession.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/956/ShellSession.java\nindex c03e08c5f95..b0b701b8f3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/956/ShellSession.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/956/ShellSession.java\n@@ -49,15 +49,14 @@ public class ShellSession implements ScriptSession\n         try\n         {\n             this.log = graph.getDependencyResolver().resolveDependency( LogService.class ).getInternalLog( getClass() );\n-            ShellServerKernelExtension extension = graph.getDependencyResolver().resolveDependency( KernelExtensions\n-                    .class ).resolveDependency( ShellServerKernelExtension.class );\n-\n-            ShellServer server = extension.getServer();\n+            ShellServerKernelExtension extension = graph.getDependencyResolver().resolveDependency( KernelExtensions.class ).resolveDependency( ShellServerKernelExtension.class );\n+ShellServer server = extension.getServer();\n             if ( server == null )\n             {\n                 server = getFallbackServer( graph );\n             }\n-            output = new CollectingOutput();\n+\n+output = new CollectingOutput();\n             client = new SameJvmClient( new HashMap<>(), server, output );\n             output.asString();\n         }\n@@ -79,23 +78,24 @@ public class ShellSession implements ScriptSession\n             {\n                 throw new RuntimeException( \"Unable to start the fallback shellserver\", e );\n             }\n-\n-        }\n+    }\n         return fallbackServer;\n     }\n \n     @Override\n-    public Pair<String, String> evaluate( String script )\n+    public Pair<String,String> evaluate( String script )\n     {\n         if ( script.equals( \"init()\" ) )\n         {\n             return Pair.of( \"\", client.getPrompt() );\n         }\n-        if ( script.equals( \"exit\" ) || script.equals( \"quit\" ) )\n+\n+if ( script.equals( \"exit\" ) || script.equals( \"quit\" ) )\n         {\n             return Pair.of( \"Sorry, can't do that.\", client.getPrompt() );\n         }\n-        try\n+\n+try\n         {\n             log.debug( script );\n             client.evaluate( removeInitialNewline( script ) );\n@@ -103,9 +103,8 @@ public class ShellSession implements ScriptSession\n         }\n         catch ( ShellException e )\n         {\n-            String message = ((AbstractClient) client).shouldPrintStackTraces() ?\n-                    ShellException.stackTraceAsString( e ) : ShellException.getFirstMessage( e );\n-            return Pair.of( message, client.getPrompt() );\n+            String message = ((AbstractClient) client).shouldPrintStackTraces() ? ShellException.stackTraceAsString( e ) : ShellException.getFirstMessage( e );\n+return Pair.of( message, client.getPrompt() );\n         }\n     }\n \n@@ -113,4 +112,4 @@ public class ShellSession implements ScriptSession\n     {\n         return script != null && script.startsWith( \"\\n\" ) ? script.substring( 1 ) : script;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
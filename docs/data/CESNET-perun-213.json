{
    "project_name": "CESNET-perun",
    "error_id": "213",
    "information": {
        "errors": [
            {
                "line": "332",
                "severity": "error",
                "message": "Line matches the illegal pattern 'Wrong number of tabs before space on next line. Indent must use tab characters.'.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "\t}\n\n\tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic,\n\t\t\t\t\t\t\t\t\t\t\t\t CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n\n\t\tright.setSelfRights(read.getValue(), write.getValue(), readPublic.getValue(), writePublic.getValue(),",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler/213/CreateAttributeDefinitionTabItem.java\nindex bb246e053fe..77c5fe96b83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler/213/CreateAttributeDefinitionTabItem.java\n@@ -330,7 +330,7 @@ public class CreateAttributeDefinitionTabItem implements TabItem {\n \t}\n \n \tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic,\n-\t\t\t\t\t\t\t\t\t\t\t\t CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n+\t\t\tCheckBox readVo, CheckBox writeVo, AttributeRights right) {\n \n \t\tright.setSelfRights(read.getValue(), write.getValue(), readPublic.getValue(), writePublic.getValue(),\n \t\t\treadVo.getValue(), writeVo.getValue());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/213/CreateAttributeDefinitionTabItem.java\nindex bb246e053fe..dc79de9329e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/213/CreateAttributeDefinitionTabItem.java\n@@ -32,365 +32,371 @@ import java.util.ArrayList;\n  */\n public class CreateAttributeDefinitionTabItem implements TabItem {\n \n-\t/**\n-\t * Perun web session\n-\t */\n-\tprivate PerunWebSession session = PerunWebSession.getInstance();\n-\n-\t/**\n-\t * Content widget - should be simple panel\n-\t */\n-\tprivate SimplePanel contentWidget = new SimplePanel();\n-\n-\t/**\n-\t * Title widget\n-\t */\n-\tprivate Label titleWidget = new Label(\"Create attribute definition\");\n-\tprivate ButtonTranslation buttonTranslation = ButtonTranslation.INSTANCE;\n-\n-\tprivate ArrayList<AttributeRights> rights = new ArrayList<AttributeRights>();\n-\n-\tprivate final CheckBox unique = new CheckBox();\n-\n-\tprivate final CheckBox selfRead = new CheckBox();\n-\tprivate final CheckBox selfWrite = new CheckBox();\n-\tprivate final CheckBox selfReadVo = new CheckBox();\n-\tprivate final CheckBox selfReadPublic = new CheckBox();\n-\tprivate final CheckBox selfWriteVo = new CheckBox();\n-\tprivate final CheckBox selfWritePublic = new CheckBox();\n-\tprivate final CheckBox voRead = new CheckBox();\n-\tprivate final CheckBox voWrite = new CheckBox();\n-\tprivate final CheckBox groupRead = new CheckBox();\n-\tprivate final CheckBox groupWrite = new CheckBox();\n-\tprivate final CheckBox facilityRead = new CheckBox();\n-\tprivate final CheckBox facilityWrite = new CheckBox();\n-\n-\t/**\n-\t * Creates a tab instance\n-\t */\n-\tpublic CreateAttributeDefinitionTabItem(){}\n-\n-\tpublic boolean isPrepared(){\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isRefreshParentOnClose() {\n-\t\treturn false;\n-\t}\n-\n-\t@Override\n-\tpublic void onClose() {\n-\n-\t}\n-\n-\tpublic Widget draw() {\n-\n-\t\tVerticalPanel vp = new VerticalPanel();\n-\t\tvp.setSize(\"100%\", \"100%\");\n-\n-\t\t// creates HTML elements\n-\t\tfinal ExtendedTextBox attributeDisplayName = new ExtendedTextBox();\n-\t\tfinal ExtendedTextBox attributeName = new ExtendedTextBox();\n-\t\tfinal ExtendedTextBox attributeDescription = new ExtendedTextBox();\n-\n-\t\tfinal ExtendedTextBox.TextBoxValidator nameValidator = new ExtendedTextBox.TextBoxValidator() {\n-\t\t\t@Override\n-\t\t\tpublic boolean validateTextBox() {\n-\t\t\t\tif (attributeName.getTextBox().getText().trim().isEmpty()) {\n-\t\t\t\t\tattributeName.setError(\"Name of attribute can't be empty.\");\n-\t\t\t\t} else if (!attributeName.getTextBox().getText().trim().matches(Utils.ATTRIBUTE_FRIENDLY_NAME_MATCHER)) {\n-\t\t\t\t\tattributeName.setError(\"Name of attribute can contain only letters, numbers, dash and colon.\");\n-\t\t\t\t} else {\n-\t\t\t\t\tattributeName.setOk();\n-\t\t\t\t\treturn true;\n-\t\t\t\t}\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t};\n-\n-\t\tfinal ExtendedTextBox.TextBoxValidator descriptionValidator = new ExtendedTextBox.TextBoxValidator() {\n-\t\t\t@Override\n-\t\t\tpublic boolean validateTextBox() {\n-\t\t\t\tif (!attributeDescription.getTextBox().getText().trim().isEmpty()) {\n-\t\t\t\t\tattributeDescription.setOk();\n-\t\t\t\t\treturn true;\n-\t\t\t\t} else {\n-\t\t\t\t\tattributeDescription.setError(\"Description of attribute can't be empty.\");\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t};\n-\n-\t\tfinal ExtendedTextBox.TextBoxValidator displayNameValidator = new ExtendedTextBox.TextBoxValidator() {\n-\t\t\t@Override\n-\t\t\tpublic boolean validateTextBox() {\n-\t\t\t\tif (!attributeDisplayName.getTextBox().getText().trim().isEmpty()) {\n-\t\t\t\t\tattributeDisplayName.setOk();\n-\t\t\t\t\treturn true;\n-\t\t\t\t} else {\n-\t\t\t\t\tattributeDisplayName.setError(\"Display name of attribute can't be empty.\");\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t};\n-\n-\t\tattributeName.setValidator(nameValidator);\n-\t\tattributeDisplayName.setValidator(displayNameValidator);\n-\t\tattributeDescription.setValidator(descriptionValidator);\n-\n-\t\tfinal ListBox entityListBox = new ListBox();\n-\t\tfinal ListBox definitionListBox = new ListBox();\n-\t\tfinal ListBox typeListBox = new ListBox();\n-\n-\t\t// fill listboxs with pre-defined values\n-\t\tentityListBox.addItem(\"facility\", \"urn:perun:facility:\");\n-\t\tentityListBox.addItem(\"resource\", \"urn:perun:resource:\");\n-\t\tentityListBox.addItem(\"group\", \"urn:perun:group:\");\n-\t\tentityListBox.addItem(\"group_resource\", \"urn:perun:group_resource:\");\n-\t\tentityListBox.addItem(\"host\", \"urn:perun:host:\");\n-\t\tentityListBox.addItem(\"member\", \"urn:perun:member:\");\n-\t\tentityListBox.addItem(\"member_group\", \"urn:perun:member_group:\");\n-\t\tentityListBox.addItem(\"member_resource\", \"urn:perun:member_resource:\");\n-\t\tentityListBox.addItem(\"user\", \"urn:perun:user:\");\n-\t\tentityListBox.addItem(\"user_ext_source\", \"urn:perun:ues:\");\n-\t\tentityListBox.addItem(\"user_facility\", \"urn:perun:user_facility:\");\n-\t\tentityListBox.addItem(\"vo\", \"urn:perun:vo:\");\n-\t\tentityListBox.addItem(\"entityless\", \"urn:perun:entityless:\");\n-\n-\t\tdefinitionListBox.addItem(\"def\", \"attribute-def:def\");\n-\t\tdefinitionListBox.addItem(\"opt\", \"attribute-def:opt\");\n-\t\tdefinitionListBox.addItem(\"virt\", \"attribute-def:virt\");\n-\t\tdefinitionListBox.addItem(\"core\", \"attribute-def:core\");\n-\n-\t\ttypeListBox.addItem(\"String\", \"java.lang.String\");\n-\t\ttypeListBox.addItem(\"Integer\", \"java.lang.Integer\");\n-\t\ttypeListBox.addItem(\"Boolean\", \"java.lang.Boolean\");\n-\t\ttypeListBox.addItem(\"Array\", \"java.util.ArrayList\");\n-\t\ttypeListBox.addItem(\"LinkedHashMap\", \"java.util.LinkedHashMap\");\n-\n-\t\t// prepare layout for this tab\n-\t\tFlexTable layout = new FlexTable();\n-\t\tlayout.setStyleName(\"inputFormFlexTable\");\n-\t\tFlexCellFormatter cellFormatter = layout.getFlexCellFormatter();\n-\t\tTabMenu menu = new TabMenu();\n-\n-\t\t// BUTTONS\n-\n-\t\tfinal CustomButton createButton = TabMenu.getPredefinedButton(ButtonType.CREATE, buttonTranslation.createAttributeDefinition());\n-\t\tmenu.addWidget(createButton);\n-\n-\t\t// close tab events & enable, disable buttons\n-\t\tfinal JsonCallbackEvents closeTabEvents = JsonCallbackEvents.closeTabDisableButtonEvents(createButton, this, true);\n-\n-\t\tcreateButton.addClickHandler(new ClickHandler() {\n-\t\t\tpublic void onClick(ClickEvent event) {\n-\n-\t\t\t\tif (nameValidator.validateTextBox() && descriptionValidator.validateTextBox() && displayNameValidator.validateTextBox()) {\n-\n-\t\t\t\t\tString displayName = attributeDisplayName.getTextBox().getText().trim();\n-\t\t\t\t\tString friendlyName = attributeName.getTextBox().getText().trim();\n-\t\t\t\t\tString description = attributeDescription.getTextBox().getText().trim();\n-\t\t\t\t\tString namespace = entityListBox.getValue(entityListBox.getSelectedIndex())+definitionListBox.getValue(definitionListBox.getSelectedIndex());\n-\t\t\t\t\tString type = typeListBox.getValue(typeListBox.getSelectedIndex());\n-\t\t\t\t\tboolean isUnique = unique.getValue();\n-\n-\t\t\t\t\tCreateAttribute request = new CreateAttribute(JsonCallbackEvents.disableButtonEvents(createButton, new JsonCallbackEvents(){\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic void onFinished(JavaScriptObject jso) {\n-\n-\t\t\t\t\t\t\tAttributeDefinition a = jso.cast();\n-\n-\t\t\t\t\t\t\tArrayList<AttributeRights> list = new ArrayList<AttributeRights>();\n-\n-\t\t\t\t\t\t\tAttributeRights right = AttributeRights.create(a.getId(), \"SELF\");\n-\t\t\t\t\t\t\tlist.add(getRightsFromWidgets(selfRead, selfWrite, selfReadPublic, selfWritePublic, selfReadVo, selfWriteVo, right));\n-\n-\t\t\t\t\t\t\tAttributeRights right2 = AttributeRights.create(a.getId(), \"VOADMIN\");\n-\t\t\t\t\t\t\tlist.add(getRightsFromWidgets(voRead, voWrite, right2));\n-\n-\t\t\t\t\t\t\tAttributeRights right3 = AttributeRights.create(a.getId(), \"GROUPADMIN\");\n-\t\t\t\t\t\t\tlist.add(getRightsFromWidgets(groupRead, groupWrite, right3));\n-\n-\t\t\t\t\t\t\tAttributeRights right4 = AttributeRights.create(a.getId(), \"FACILITYADMIN\");\n-\t\t\t\t\t\t\tlist.add(getRightsFromWidgets(facilityRead, facilityWrite, right4));\n-\n-\t\t\t\t\t\t\t// after update - update rights\n-\t\t\t\t\t\t\tSetAttributeRights request = new SetAttributeRights(JsonCallbackEvents.disableButtonEvents(createButton, new JsonCallbackEvents(){\n-\t\t\t\t\t\t\t\t@Override\n-\t\t\t\t\t\t\t\tpublic void onFinished(JavaScriptObject jso) {\n-\t\t\t\t\t\t\t\t\tenableDisableWidgets(true);\n-\t\t\t\t\t\t\t\t\tcloseTabEvents.onFinished(jso);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t@Override\n-\t\t\t\t\t\t\t\tpublic void onLoadingStart() {\n-\t\t\t\t\t\t\t\t\tenableDisableWidgets(false);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t@Override\n-\t\t\t\t\t\t\t\tpublic void onError(PerunError error) {\n-\t\t\t\t\t\t\t\t\tenableDisableWidgets(true);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}));\n-\t\t\t\t\t\t\trequest.setAttributeRights(list);\n-\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}));\n-\t\t\t\t\trequest.createAttributeDefinition(displayName, friendlyName, description, namespace, type, isUnique);\n-\n-\t\t\t\t}\n-\t\t\t}\n-\t\t});\n-\n-\t\t// insert layout\n-\n-\t\tlayout.setHTML(0, 0, \"Friendly name:\");\n-\t\tlayout.setWidget(0, 1, attributeName);\n-\t\tlayout.setHTML(1, 0, \"Display name:\");\n-\t\tlayout.setWidget(1, 1, attributeDisplayName);\n-\t\tlayout.setHTML(2, 0, \"Description:\");\n-\t\tlayout.setWidget(2, 1, attributeDescription);\n-\t\tlayout.setHTML(3, 0, \"Entity:\");\n-\t\tlayout.setWidget(3, 1, entityListBox);\n-\t\tlayout.setHTML(4, 0, \"Definition type:\");\n-\t\tlayout.setWidget(4, 1, definitionListBox);\n-\t\tlayout.setHTML(5, 0, \"Value type:\");\n-\t\tlayout.setWidget(5, 1, typeListBox);\n-\t\tlayout.setHTML(6, 0, \"Unique:\");\n-\t\tlayout.setWidget(6, 1, unique);\n-\n-\t\tfor (int i=0; i<layout.getRowCount(); i++) {\n-\t\t\tcellFormatter.addStyleName(i, 0, \"itemName\");\n-\t\t}\n-\n-\t\tfinal TabItem tab = this;\n-\n-\t\tmenu.addWidget(TabMenu.getPredefinedButton(ButtonType.CANCEL, \"\", new ClickHandler() {\n-\t\t\t@Override\n-\t\t\tpublic void onClick(ClickEvent clickEvent) {\n-\t\t\t\tsession.getTabManager().closeTab(tab, isRefreshParentOnClose());\n-\t\t\t}\n-\t\t}));\n-\n-\t\tfinal FlexTable rightsTable = new FlexTable();\n-\t\trightsTable.setStyleName(\"inputFormFlexTable\");\n-\n-\t\trightsTable.setHTML(0, 1, \"<strong>SELF</strong>\");\n-\t\trightsTable.setHTML(0, 2, \"<strong>SELF_PUBLIC</strong>\");\n-\t\trightsTable.setHTML(0, 3, \"<strong>SELF_VO</strong>\");\n-\t\trightsTable.setHTML(0, 4, \"<strong>VO</strong>\");\n-\t\trightsTable.setHTML(0, 5, \"<strong>GROUP</strong>\");\n-\t\trightsTable.setHTML(0, 6, \"<strong>FACILITY</strong>\");\n-\n-\t\trightsTable.setHTML(1, 0, \"<strong>READ</strong>\");\n-\t\trightsTable.setHTML(2, 0, \"<strong>WRITE</strong>\");\n-\n-\t\trightsTable.setWidget(1, 1, selfRead);\n-\t\trightsTable.setWidget(2, 1, selfWrite);\n-\t\trightsTable.setWidget(1, 2, selfReadPublic);\n-\t\trightsTable.setWidget(2, 2, selfWritePublic);\n-\t\trightsTable.setWidget(1, 3, selfReadVo);\n-\t\trightsTable.setWidget(2, 3, selfWriteVo);\n-\t\trightsTable.setWidget(1, 4, voRead);\n-\t\trightsTable.setWidget(2, 4, voWrite);\n-\t\trightsTable.setWidget(1, 5, groupRead);\n-\t\trightsTable.setWidget(2, 5, groupWrite);\n-\t\trightsTable.setWidget(1, 6, facilityRead);\n-\t\trightsTable.setWidget(2, 6, facilityWrite);\n-\n-\t\trightsTable.addStyleName(\"centeredTable\");\n-\n-\t\tvp.add(layout);\n-\t\tvp.add(rightsTable);\n-\t\tvp.add(menu);\n-\t\tvp.setCellHorizontalAlignment(menu, HasHorizontalAlignment.ALIGN_RIGHT);\n-\n-\t\tthis.contentWidget.setWidget(vp);\n-\n-\t\treturn getWidget();\n-\t}\n-\n-\tpublic Widget getWidget() {\n-\t\treturn this.contentWidget;\n-\t}\n-\n-\tpublic Widget getTitle() {\n-\t\treturn this.titleWidget;\n-\t}\n-\n-\tpublic ImageResource getIcon() {\n-\t\treturn SmallIcons.INSTANCE.addIcon();\n-\t}\n-\n-\tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, AttributeRights right) {\n-\n-\t\tright.setRights(read.getValue(), write.getValue());\n-\n-\t\treturn right;\n-\n-\t}\n-\n-\tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic,\n-\t\t\t\t\t\t\t\t\t\t\t\t CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n-\n-\t\tright.setSelfRights(read.getValue(), write.getValue(), readPublic.getValue(), writePublic.getValue(),\n-\t\t\treadVo.getValue(), writeVo.getValue());\n-\n-\t\treturn right;\n-\n-\t}\n-\n-\tprivate void enableDisableWidgets(boolean enabled) {\n-\n-\t\tselfRead.setEnabled(enabled);\n-\t\tselfWrite.setEnabled(enabled);\n-\t\tselfReadPublic.setEnabled(enabled);\n-\t\tselfWritePublic.setEnabled(enabled);\n-\t\tselfReadVo.setEnabled(enabled);\n-\t\tselfWriteVo.setEnabled(enabled);\n-\t\tvoRead.setEnabled(enabled);\n-\t\tvoWrite.setEnabled(enabled);\n-\t\tgroupRead.setEnabled(enabled);\n-\t\tgroupWrite.setEnabled(enabled);\n-\t\tfacilityRead.setEnabled(enabled);\n-\t\tfacilityWrite.setEnabled(enabled);\n-\n-\t}\n-\n-\t@Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 569;\n-\t\tint result = 1;\n-\t\tresult = prime * result + 135345;\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj)\n-\t\t\treturn true;\n-\t\tif (obj == null)\n-\t\t\treturn false;\n-\t\tif (getClass() != obj.getClass())\n-\t\t\treturn false;\n-\n-\t\treturn true;\n-\t}\n-\n-\tpublic boolean multipleInstancesEnabled() {\n-\t\treturn false;\n-\t}\n+    /**\n+     * Perun web session\n+     */\n+    private PerunWebSession session = PerunWebSession.getInstance();\n+\n+    /**\n+     * Content widget - should be simple panel\n+     */\n+    private SimplePanel contentWidget = new SimplePanel();\n+\n+    /**\n+     * Title widget\n+     */\n+    private Label titleWidget = new Label(\"Create attribute definition\");\n+    private ButtonTranslation buttonTranslation = ButtonTranslation.INSTANCE;\n+\n+    private ArrayList<AttributeRights> rights = new ArrayList<AttributeRights>();\n+\n+    private final CheckBox unique = new CheckBox();\n+\n+    private final CheckBox selfRead = new CheckBox();\n+    private final CheckBox selfWrite = new CheckBox();\n+    private final CheckBox selfReadVo = new CheckBox();\n+    private final CheckBox selfReadPublic = new CheckBox();\n+    private final CheckBox selfWriteVo = new CheckBox();\n+    private final CheckBox selfWritePublic = new CheckBox();\n+    private final CheckBox voRead = new CheckBox();\n+    private final CheckBox voWrite = new CheckBox();\n+    private final CheckBox groupRead = new CheckBox();\n+    private final CheckBox groupWrite = new CheckBox();\n+    private final CheckBox facilityRead = new CheckBox();\n+    private final CheckBox facilityWrite = new CheckBox();\n+\n+    /**\n+     * Creates a tab instance\n+     */\n+    public CreateAttributeDefinitionTabItem() {\n+    }\n+\n+    public boolean isPrepared() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean isRefreshParentOnClose() {\n+        return false;\n+    }\n+\n+    @Override\n+    public void onClose() {\n+\n+    }\n+\n+    public Widget draw() {\n+\n+        VerticalPanel vp = new VerticalPanel();\n+        vp.setSize(\"100%\", \"100%\");\n+\n+        // creates HTML elements\n+        final ExtendedTextBox attributeDisplayName = new ExtendedTextBox();\n+        final ExtendedTextBox attributeName = new ExtendedTextBox();\n+        final ExtendedTextBox attributeDescription = new ExtendedTextBox();\n+\n+        final ExtendedTextBox.TextBoxValidator nameValidator = new ExtendedTextBox.TextBoxValidator() {\n+            @Override\n+            public boolean validateTextBox() {\n+                if (attributeName.getTextBox().getText().trim().isEmpty()) {\n+                    attributeName.setError(\"Name of attribute can't be empty.\");\n+                } else if (!attributeName.getTextBox().getText().trim().matches(Utils.ATTRIBUTE_FRIENDLY_NAME_MATCHER)) {\n+                    attributeName.setError(\"Name of attribute can contain only letters, numbers, dash and colon.\");\n+                } else {\n+                    attributeName.setOk();\n+                    return true;\n+                }\n+                return false;\n+            }\n+        };\n+\n+        final ExtendedTextBox.TextBoxValidator descriptionValidator = new ExtendedTextBox.TextBoxValidator() {\n+            @Override\n+            public boolean validateTextBox() {\n+                if (!attributeDescription.getTextBox().getText().trim().isEmpty()) {\n+                    attributeDescription.setOk();\n+                    return true;\n+                } else {\n+                    attributeDescription.setError(\"Description of attribute can't be empty.\");\n+                    return false;\n+                }\n+            }\n+        };\n+\n+        final ExtendedTextBox.TextBoxValidator displayNameValidator = new ExtendedTextBox.TextBoxValidator() {\n+            @Override\n+            public boolean validateTextBox() {\n+                if (!attributeDisplayName.getTextBox().getText().trim().isEmpty()) {\n+                    attributeDisplayName.setOk();\n+                    return true;\n+                } else {\n+                    attributeDisplayName.setError(\"Display name of attribute can't be empty.\");\n+                    return false;\n+                }\n+            }\n+        };\n+\n+        attributeName.setValidator(nameValidator);\n+        attributeDisplayName.setValidator(displayNameValidator);\n+        attributeDescription.setValidator(descriptionValidator);\n+\n+        final ListBox entityListBox = new ListBox();\n+        final ListBox definitionListBox = new ListBox();\n+        final ListBox typeListBox = new ListBox();\n+\n+        // fill listboxs with pre-defined values\n+        entityListBox.addItem(\"facility\", \"urn:perun:facility:\");\n+        entityListBox.addItem(\"resource\", \"urn:perun:resource:\");\n+        entityListBox.addItem(\"group\", \"urn:perun:group:\");\n+        entityListBox.addItem(\"group_resource\", \"urn:perun:group_resource:\");\n+        entityListBox.addItem(\"host\", \"urn:perun:host:\");\n+        entityListBox.addItem(\"member\", \"urn:perun:member:\");\n+        entityListBox.addItem(\"member_group\", \"urn:perun:member_group:\");\n+        entityListBox.addItem(\"member_resource\", \"urn:perun:member_resource:\");\n+        entityListBox.addItem(\"user\", \"urn:perun:user:\");\n+        entityListBox.addItem(\"user_ext_source\", \"urn:perun:ues:\");\n+        entityListBox.addItem(\"user_facility\", \"urn:perun:user_facility:\");\n+        entityListBox.addItem(\"vo\", \"urn:perun:vo:\");\n+        entityListBox.addItem(\"entityless\", \"urn:perun:entityless:\");\n+\n+        definitionListBox.addItem(\"def\", \"attribute-def:def\");\n+        definitionListBox.addItem(\"opt\", \"attribute-def:opt\");\n+        definitionListBox.addItem(\"virt\", \"attribute-def:virt\");\n+        definitionListBox.addItem(\"core\", \"attribute-def:core\");\n+\n+        typeListBox.addItem(\"String\", \"java.lang.String\");\n+        typeListBox.addItem(\"Integer\", \"java.lang.Integer\");\n+        typeListBox.addItem(\"Boolean\", \"java.lang.Boolean\");\n+        typeListBox.addItem(\"Array\", \"java.util.ArrayList\");\n+        typeListBox.addItem(\"LinkedHashMap\", \"java.util.LinkedHashMap\");\n+\n+        // prepare layout for this tab\n+        FlexTable layout = new FlexTable();\n+        layout.setStyleName(\"inputFormFlexTable\");\n+        FlexCellFormatter cellFormatter = layout.getFlexCellFormatter();\n+        TabMenu menu = new TabMenu();\n+\n+        // BUTTONS\n+\n+        final CustomButton createButton = TabMenu.getPredefinedButton(ButtonType.CREATE, buttonTranslation.createAttributeDefinition());\n+        menu.addWidget(createButton);\n+\n+        // close tab events & enable, disable buttons\n+        final JsonCallbackEvents closeTabEvents = JsonCallbackEvents.closeTabDisableButtonEvents(createButton, this, true);\n+\n+        createButton.addClickHandler(new ClickHandler() {\n+            public void onClick(ClickEvent event) {\n+\n+                if (nameValidator.validateTextBox() && descriptionValidator.validateTextBox() && displayNameValidator.validateTextBox()) {\n+\n+                    String displayName = attributeDisplayName.getTextBox().getText().trim();\n+                    String friendlyName = attributeName.getTextBox().getText().trim();\n+                    String description = attributeDescription.getTextBox().getText().trim();\n+                    String namespace = entityListBox.getValue(entityListBox.getSelectedIndex()) + definitionListBox.getValue(definitionListBox.getSelectedIndex());\n+                    String type = typeListBox.getValue(typeListBox.getSelectedIndex());\n+                    boolean isUnique = unique.getValue();\n+\n+                    CreateAttribute request = new CreateAttribute(JsonCallbackEvents.disableButtonEvents(createButton, new JsonCallbackEvents() {\n+                        @Override\n+                        public void onFinished(JavaScriptObject jso) {\n+\n+                            AttributeDefinition a = jso.cast();\n+\n+                            ArrayList<AttributeRights> list = new ArrayList<AttributeRights>();\n+\n+                            AttributeRights right = AttributeRights.create(a.getId(), \"SELF\");\n+                            list.add(getRightsFromWidgets(selfRead, selfWrite, selfReadPublic, selfWritePublic, selfReadVo, selfWriteVo, right));\n+\n+                            AttributeRights right2 = AttributeRights.create(a.getId(), \"VOADMIN\");\n+                            list.add(getRightsFromWidgets(voRead, voWrite, right2));\n+\n+                            AttributeRights right3 = AttributeRights.create(a.getId(), \"GROUPADMIN\");\n+                            list.add(getRightsFromWidgets(groupRead, groupWrite, right3));\n+\n+                            AttributeRights right4 = AttributeRights.create(a.getId(), \"FACILITYADMIN\");\n+                            list.add(getRightsFromWidgets(facilityRead, facilityWrite, right4));\n+\n+                            // after update - update rights\n+                            SetAttributeRights request = new SetAttributeRights(JsonCallbackEvents.disableButtonEvents(createButton, new JsonCallbackEvents() {\n+                                @Override\n+                                public void onFinished(JavaScriptObject jso) {\n+                                    enableDisableWidgets(true);\n+                                    closeTabEvents.onFinished(jso);\n+                                }\n+\n+                                @Override\n+                                public void onLoadingStart() {\n+                                    enableDisableWidgets(false);\n+                                }\n+\n+                                @Override\n+                                public void onError(PerunError error) {\n+                                    enableDisableWidgets(true);\n+                                }\n+                            }));\n+                            request.setAttributeRights(list);\n+\n+                        }\n+                    }));\n+                    request.createAttributeDefinition(displayName, friendlyName, description, namespace, type, isUnique);\n+\n+                }\n+            }\n+        });\n+\n+        // insert layout\n+\n+        layout.setHTML(0, 0, \"Friendly name:\");\n+        layout.setWidget(0, 1, attributeName);\n+        layout.setHTML(1, 0, \"Display name:\");\n+        layout.setWidget(1, 1, attributeDisplayName);\n+        layout.setHTML(2, 0, \"Description:\");\n+        layout.setWidget(2, 1, attributeDescription);\n+        layout.setHTML(3, 0, \"Entity:\");\n+        layout.setWidget(3, 1, entityListBox);\n+        layout.setHTML(4, 0, \"Definition type:\");\n+        layout.setWidget(4, 1, definitionListBox);\n+        layout.setHTML(5, 0, \"Value type:\");\n+        layout.setWidget(5, 1, typeListBox);\n+        layout.setHTML(6, 0, \"Unique:\");\n+        layout.setWidget(6, 1, unique);\n+\n+        for (int i = 0; i < layout.getRowCount(); i++) {\n+            cellFormatter.addStyleName(i, 0, \"itemName\");\n+        }\n+\n+        final TabItem tab = this;\n+\n+        menu.addWidget(TabMenu.getPredefinedButton(ButtonType.CANCEL, \"\", new ClickHandler() {\n+            @Override\n+            public void onClick(ClickEvent clickEvent) {\n+                session.getTabManager().closeTab(tab, isRefreshParentOnClose());\n+            }\n+        }));\n+\n+        final FlexTable rightsTable = new FlexTable();\n+        rightsTable.setStyleName(\"inputFormFlexTable\");\n+\n+        rightsTable.setHTML(0, 1, \"<strong>SELF</strong>\");\n+        rightsTable.setHTML(0, 2, \"<strong>SELF_PUBLIC</strong>\");\n+        rightsTable.setHTML(0, 3, \"<strong>SELF_VO</strong>\");\n+        rightsTable.setHTML(0, 4, \"<strong>VO</strong>\");\n+        rightsTable.setHTML(0, 5, \"<strong>GROUP</strong>\");\n+        rightsTable.setHTML(0, 6, \"<strong>FACILITY</strong>\");\n+\n+        rightsTable.setHTML(1, 0, \"<strong>READ</strong>\");\n+        rightsTable.setHTML(2, 0, \"<strong>WRITE</strong>\");\n+\n+        rightsTable.setWidget(1, 1, selfRead);\n+        rightsTable.setWidget(2, 1, selfWrite);\n+        rightsTable.setWidget(1, 2, selfReadPublic);\n+        rightsTable.setWidget(2, 2, selfWritePublic);\n+        rightsTable.setWidget(1, 3, selfReadVo);\n+        rightsTable.setWidget(2, 3, selfWriteVo);\n+        rightsTable.setWidget(1, 4, voRead);\n+        rightsTable.setWidget(2, 4, voWrite);\n+        rightsTable.setWidget(1, 5, groupRead);\n+        rightsTable.setWidget(2, 5, groupWrite);\n+        rightsTable.setWidget(1, 6, facilityRead);\n+        rightsTable.setWidget(2, 6, facilityWrite);\n+\n+        rightsTable.addStyleName(\"centeredTable\");\n+\n+        vp.add(layout);\n+        vp.add(rightsTable);\n+        vp.add(menu);\n+        vp.setCellHorizontalAlignment(menu, HasHorizontalAlignment.ALIGN_RIGHT);\n+\n+        this.contentWidget.setWidget(vp);\n+\n+        return getWidget();\n+    }\n+\n+    public Widget getWidget() {\n+        return this.contentWidget;\n+    }\n+\n+    public Widget getTitle() {\n+        return this.titleWidget;\n+    }\n+\n+    public ImageResource getIcon() {\n+        return SmallIcons.INSTANCE.addIcon();\n+    }\n+\n+    private AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, AttributeRights right) {\n+\n+        right.setRights(read.getValue(), write.getValue());\n+\n+        return right;\n+\n+    }\n+\n+    private AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic,\n+                                                 CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n+\n+        right.setSelfRights(read.getValue(), write.getValue(), readPublic.getValue(), writePublic.getValue(),\n+                readVo.getValue(), writeVo.getValue());\n+\n+        return right;\n+\n+    }\n+\n+    private void enableDisableWidgets(boolean enabled) {\n+\n+        selfRead.setEnabled(enabled);\n+        selfWrite.setEnabled(enabled);\n+        selfReadPublic.setEnabled(enabled);\n+        selfWritePublic.setEnabled(enabled);\n+        selfReadVo.setEnabled(enabled);\n+        selfWriteVo.setEnabled(enabled);\n+        voRead.setEnabled(enabled);\n+        voWrite.setEnabled(enabled);\n+        groupRead.setEnabled(enabled);\n+        groupWrite.setEnabled(enabled);\n+        facilityRead.setEnabled(enabled);\n+        facilityWrite.setEnabled(enabled);\n+\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 569;\n+        int result = 1;\n+        result = prime * result + 135345;\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n+    public boolean multipleInstancesEnabled() {\n+        return false;\n+    }\n+\n+    public void open() {\n+    }\n+\n+    public boolean isAuthorized() {\n+\n+        if (session.isPerunAdmin()) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n \n-\tpublic void open() {\n-\t}\n-\n-\tpublic boolean isAuthorized() {\n-\n-\t\tif (session.isPerunAdmin()) {\n-\t\t\treturn true;\n-\t\t} else {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t}\n+    }\n \n }\n",
            "diff_size": 376
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/naturalize/213/CreateAttributeDefinitionTabItem.java\nindex bb246e053fe..ec55b347961 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/naturalize/213/CreateAttributeDefinitionTabItem.java\n@@ -329,13 +329,10 @@ public class CreateAttributeDefinitionTabItem implements TabItem {\n \n \t}\n \n-\tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic,\n-\t\t\t\t\t\t\t\t\t\t\t\t CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n-\n-\t\tright.setSelfRights(read.getValue(), write.getValue(), readPublic.getValue(), writePublic.getValue(),\n+\tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic, CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n+\tright.setSelfRights(read.getValue(), write.getValue(), readPublic.getValue(), writePublic.getValue(),\n \t\t\treadVo.getValue(), writeVo.getValue());\n-\n-\t\treturn right;\n+return right;\n \n \t}\n \n@@ -393,4 +390,4 @@ public class CreateAttributeDefinitionTabItem implements TabItem {\n \n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/213/CreateAttributeDefinitionTabItem.java\nindex bb246e053fe..15523666a69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/213/CreateAttributeDefinitionTabItem.java\n@@ -21,7 +21,6 @@ import cz.metacentrum.perun.webgui.tabs.TabItem;\n import cz.metacentrum.perun.webgui.widgets.CustomButton;\n import cz.metacentrum.perun.webgui.widgets.ExtendedTextBox;\n import cz.metacentrum.perun.webgui.widgets.TabMenu;\n-\n import java.util.ArrayList;\n \n /**\n@@ -30,367 +29,343 @@ import java.util.ArrayList;\n  * @author Pavel Zlamal <256627@mail.muni.cz>\n  * @author Vaclav Mach <374430@mail.muni.cz>\n  */\n-public class CreateAttributeDefinitionTabItem implements TabItem {\n-\n-\t/**\n-\t * Perun web session\n-\t */\n-\tprivate PerunWebSession session = PerunWebSession.getInstance();\n-\n-\t/**\n-\t * Content widget - should be simple panel\n-\t */\n-\tprivate SimplePanel contentWidget = new SimplePanel();\n-\n-\t/**\n-\t * Title widget\n-\t */\n-\tprivate Label titleWidget = new Label(\"Create attribute definition\");\n-\tprivate ButtonTranslation buttonTranslation = ButtonTranslation.INSTANCE;\n-\n-\tprivate ArrayList<AttributeRights> rights = new ArrayList<AttributeRights>();\n-\n-\tprivate final CheckBox unique = new CheckBox();\n-\n-\tprivate final CheckBox selfRead = new CheckBox();\n-\tprivate final CheckBox selfWrite = new CheckBox();\n-\tprivate final CheckBox selfReadVo = new CheckBox();\n-\tprivate final CheckBox selfReadPublic = new CheckBox();\n-\tprivate final CheckBox selfWriteVo = new CheckBox();\n-\tprivate final CheckBox selfWritePublic = new CheckBox();\n-\tprivate final CheckBox voRead = new CheckBox();\n-\tprivate final CheckBox voWrite = new CheckBox();\n-\tprivate final CheckBox groupRead = new CheckBox();\n-\tprivate final CheckBox groupWrite = new CheckBox();\n-\tprivate final CheckBox facilityRead = new CheckBox();\n-\tprivate final CheckBox facilityWrite = new CheckBox();\n-\n-\t/**\n-\t * Creates a tab instance\n-\t */\n-\tpublic CreateAttributeDefinitionTabItem(){}\n-\n-\tpublic boolean isPrepared(){\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isRefreshParentOnClose() {\n-\t\treturn false;\n-\t}\n-\n-\t@Override\n-\tpublic void onClose() {\n-\n-\t}\n-\n-\tpublic Widget draw() {\n-\n-\t\tVerticalPanel vp = new VerticalPanel();\n-\t\tvp.setSize(\"100%\", \"100%\");\n-\n-\t\t// creates HTML elements\n-\t\tfinal ExtendedTextBox attributeDisplayName = new ExtendedTextBox();\n-\t\tfinal ExtendedTextBox attributeName = new ExtendedTextBox();\n-\t\tfinal ExtendedTextBox attributeDescription = new ExtendedTextBox();\n-\n-\t\tfinal ExtendedTextBox.TextBoxValidator nameValidator = new ExtendedTextBox.TextBoxValidator() {\n-\t\t\t@Override\n-\t\t\tpublic boolean validateTextBox() {\n-\t\t\t\tif (attributeName.getTextBox().getText().trim().isEmpty()) {\n-\t\t\t\t\tattributeName.setError(\"Name of attribute can't be empty.\");\n-\t\t\t\t} else if (!attributeName.getTextBox().getText().trim().matches(Utils.ATTRIBUTE_FRIENDLY_NAME_MATCHER)) {\n-\t\t\t\t\tattributeName.setError(\"Name of attribute can contain only letters, numbers, dash and colon.\");\n-\t\t\t\t} else {\n-\t\t\t\t\tattributeName.setOk();\n-\t\t\t\t\treturn true;\n-\t\t\t\t}\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t};\n-\n-\t\tfinal ExtendedTextBox.TextBoxValidator descriptionValidator = new ExtendedTextBox.TextBoxValidator() {\n-\t\t\t@Override\n-\t\t\tpublic boolean validateTextBox() {\n-\t\t\t\tif (!attributeDescription.getTextBox().getText().trim().isEmpty()) {\n-\t\t\t\t\tattributeDescription.setOk();\n-\t\t\t\t\treturn true;\n-\t\t\t\t} else {\n-\t\t\t\t\tattributeDescription.setError(\"Description of attribute can't be empty.\");\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t};\n-\n-\t\tfinal ExtendedTextBox.TextBoxValidator displayNameValidator = new ExtendedTextBox.TextBoxValidator() {\n-\t\t\t@Override\n-\t\t\tpublic boolean validateTextBox() {\n-\t\t\t\tif (!attributeDisplayName.getTextBox().getText().trim().isEmpty()) {\n-\t\t\t\t\tattributeDisplayName.setOk();\n-\t\t\t\t\treturn true;\n-\t\t\t\t} else {\n-\t\t\t\t\tattributeDisplayName.setError(\"Display name of attribute can't be empty.\");\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t};\n-\n-\t\tattributeName.setValidator(nameValidator);\n-\t\tattributeDisplayName.setValidator(displayNameValidator);\n-\t\tattributeDescription.setValidator(descriptionValidator);\n-\n-\t\tfinal ListBox entityListBox = new ListBox();\n-\t\tfinal ListBox definitionListBox = new ListBox();\n-\t\tfinal ListBox typeListBox = new ListBox();\n-\n-\t\t// fill listboxs with pre-defined values\n-\t\tentityListBox.addItem(\"facility\", \"urn:perun:facility:\");\n-\t\tentityListBox.addItem(\"resource\", \"urn:perun:resource:\");\n-\t\tentityListBox.addItem(\"group\", \"urn:perun:group:\");\n-\t\tentityListBox.addItem(\"group_resource\", \"urn:perun:group_resource:\");\n-\t\tentityListBox.addItem(\"host\", \"urn:perun:host:\");\n-\t\tentityListBox.addItem(\"member\", \"urn:perun:member:\");\n-\t\tentityListBox.addItem(\"member_group\", \"urn:perun:member_group:\");\n-\t\tentityListBox.addItem(\"member_resource\", \"urn:perun:member_resource:\");\n-\t\tentityListBox.addItem(\"user\", \"urn:perun:user:\");\n-\t\tentityListBox.addItem(\"user_ext_source\", \"urn:perun:ues:\");\n-\t\tentityListBox.addItem(\"user_facility\", \"urn:perun:user_facility:\");\n-\t\tentityListBox.addItem(\"vo\", \"urn:perun:vo:\");\n-\t\tentityListBox.addItem(\"entityless\", \"urn:perun:entityless:\");\n-\n-\t\tdefinitionListBox.addItem(\"def\", \"attribute-def:def\");\n-\t\tdefinitionListBox.addItem(\"opt\", \"attribute-def:opt\");\n-\t\tdefinitionListBox.addItem(\"virt\", \"attribute-def:virt\");\n-\t\tdefinitionListBox.addItem(\"core\", \"attribute-def:core\");\n-\n-\t\ttypeListBox.addItem(\"String\", \"java.lang.String\");\n-\t\ttypeListBox.addItem(\"Integer\", \"java.lang.Integer\");\n-\t\ttypeListBox.addItem(\"Boolean\", \"java.lang.Boolean\");\n-\t\ttypeListBox.addItem(\"Array\", \"java.util.ArrayList\");\n-\t\ttypeListBox.addItem(\"LinkedHashMap\", \"java.util.LinkedHashMap\");\n-\n-\t\t// prepare layout for this tab\n-\t\tFlexTable layout = new FlexTable();\n-\t\tlayout.setStyleName(\"inputFormFlexTable\");\n-\t\tFlexCellFormatter cellFormatter = layout.getFlexCellFormatter();\n-\t\tTabMenu menu = new TabMenu();\n-\n-\t\t// BUTTONS\n-\n-\t\tfinal CustomButton createButton = TabMenu.getPredefinedButton(ButtonType.CREATE, buttonTranslation.createAttributeDefinition());\n-\t\tmenu.addWidget(createButton);\n-\n-\t\t// close tab events & enable, disable buttons\n-\t\tfinal JsonCallbackEvents closeTabEvents = JsonCallbackEvents.closeTabDisableButtonEvents(createButton, this, true);\n-\n-\t\tcreateButton.addClickHandler(new ClickHandler() {\n-\t\t\tpublic void onClick(ClickEvent event) {\n-\n-\t\t\t\tif (nameValidator.validateTextBox() && descriptionValidator.validateTextBox() && displayNameValidator.validateTextBox()) {\n-\n-\t\t\t\t\tString displayName = attributeDisplayName.getTextBox().getText().trim();\n-\t\t\t\t\tString friendlyName = attributeName.getTextBox().getText().trim();\n-\t\t\t\t\tString description = attributeDescription.getTextBox().getText().trim();\n-\t\t\t\t\tString namespace = entityListBox.getValue(entityListBox.getSelectedIndex())+definitionListBox.getValue(definitionListBox.getSelectedIndex());\n-\t\t\t\t\tString type = typeListBox.getValue(typeListBox.getSelectedIndex());\n-\t\t\t\t\tboolean isUnique = unique.getValue();\n-\n-\t\t\t\t\tCreateAttribute request = new CreateAttribute(JsonCallbackEvents.disableButtonEvents(createButton, new JsonCallbackEvents(){\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic void onFinished(JavaScriptObject jso) {\n-\n-\t\t\t\t\t\t\tAttributeDefinition a = jso.cast();\n-\n-\t\t\t\t\t\t\tArrayList<AttributeRights> list = new ArrayList<AttributeRights>();\n-\n-\t\t\t\t\t\t\tAttributeRights right = AttributeRights.create(a.getId(), \"SELF\");\n-\t\t\t\t\t\t\tlist.add(getRightsFromWidgets(selfRead, selfWrite, selfReadPublic, selfWritePublic, selfReadVo, selfWriteVo, right));\n-\n-\t\t\t\t\t\t\tAttributeRights right2 = AttributeRights.create(a.getId(), \"VOADMIN\");\n-\t\t\t\t\t\t\tlist.add(getRightsFromWidgets(voRead, voWrite, right2));\n-\n-\t\t\t\t\t\t\tAttributeRights right3 = AttributeRights.create(a.getId(), \"GROUPADMIN\");\n-\t\t\t\t\t\t\tlist.add(getRightsFromWidgets(groupRead, groupWrite, right3));\n-\n-\t\t\t\t\t\t\tAttributeRights right4 = AttributeRights.create(a.getId(), \"FACILITYADMIN\");\n-\t\t\t\t\t\t\tlist.add(getRightsFromWidgets(facilityRead, facilityWrite, right4));\n-\n-\t\t\t\t\t\t\t// after update - update rights\n-\t\t\t\t\t\t\tSetAttributeRights request = new SetAttributeRights(JsonCallbackEvents.disableButtonEvents(createButton, new JsonCallbackEvents(){\n-\t\t\t\t\t\t\t\t@Override\n-\t\t\t\t\t\t\t\tpublic void onFinished(JavaScriptObject jso) {\n-\t\t\t\t\t\t\t\t\tenableDisableWidgets(true);\n-\t\t\t\t\t\t\t\t\tcloseTabEvents.onFinished(jso);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t@Override\n-\t\t\t\t\t\t\t\tpublic void onLoadingStart() {\n-\t\t\t\t\t\t\t\t\tenableDisableWidgets(false);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t@Override\n-\t\t\t\t\t\t\t\tpublic void onError(PerunError error) {\n-\t\t\t\t\t\t\t\t\tenableDisableWidgets(true);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}));\n-\t\t\t\t\t\t\trequest.setAttributeRights(list);\n-\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}));\n-\t\t\t\t\trequest.createAttributeDefinition(displayName, friendlyName, description, namespace, type, isUnique);\n-\n-\t\t\t\t}\n-\t\t\t}\n-\t\t});\n-\n-\t\t// insert layout\n-\n-\t\tlayout.setHTML(0, 0, \"Friendly name:\");\n-\t\tlayout.setWidget(0, 1, attributeName);\n-\t\tlayout.setHTML(1, 0, \"Display name:\");\n-\t\tlayout.setWidget(1, 1, attributeDisplayName);\n-\t\tlayout.setHTML(2, 0, \"Description:\");\n-\t\tlayout.setWidget(2, 1, attributeDescription);\n-\t\tlayout.setHTML(3, 0, \"Entity:\");\n-\t\tlayout.setWidget(3, 1, entityListBox);\n-\t\tlayout.setHTML(4, 0, \"Definition type:\");\n-\t\tlayout.setWidget(4, 1, definitionListBox);\n-\t\tlayout.setHTML(5, 0, \"Value type:\");\n-\t\tlayout.setWidget(5, 1, typeListBox);\n-\t\tlayout.setHTML(6, 0, \"Unique:\");\n-\t\tlayout.setWidget(6, 1, unique);\n-\n-\t\tfor (int i=0; i<layout.getRowCount(); i++) {\n-\t\t\tcellFormatter.addStyleName(i, 0, \"itemName\");\n-\t\t}\n-\n-\t\tfinal TabItem tab = this;\n-\n-\t\tmenu.addWidget(TabMenu.getPredefinedButton(ButtonType.CANCEL, \"\", new ClickHandler() {\n-\t\t\t@Override\n-\t\t\tpublic void onClick(ClickEvent clickEvent) {\n-\t\t\t\tsession.getTabManager().closeTab(tab, isRefreshParentOnClose());\n-\t\t\t}\n-\t\t}));\n-\n-\t\tfinal FlexTable rightsTable = new FlexTable();\n-\t\trightsTable.setStyleName(\"inputFormFlexTable\");\n-\n-\t\trightsTable.setHTML(0, 1, \"<strong>SELF</strong>\");\n-\t\trightsTable.setHTML(0, 2, \"<strong>SELF_PUBLIC</strong>\");\n-\t\trightsTable.setHTML(0, 3, \"<strong>SELF_VO</strong>\");\n-\t\trightsTable.setHTML(0, 4, \"<strong>VO</strong>\");\n-\t\trightsTable.setHTML(0, 5, \"<strong>GROUP</strong>\");\n-\t\trightsTable.setHTML(0, 6, \"<strong>FACILITY</strong>\");\n-\n-\t\trightsTable.setHTML(1, 0, \"<strong>READ</strong>\");\n-\t\trightsTable.setHTML(2, 0, \"<strong>WRITE</strong>\");\n-\n-\t\trightsTable.setWidget(1, 1, selfRead);\n-\t\trightsTable.setWidget(2, 1, selfWrite);\n-\t\trightsTable.setWidget(1, 2, selfReadPublic);\n-\t\trightsTable.setWidget(2, 2, selfWritePublic);\n-\t\trightsTable.setWidget(1, 3, selfReadVo);\n-\t\trightsTable.setWidget(2, 3, selfWriteVo);\n-\t\trightsTable.setWidget(1, 4, voRead);\n-\t\trightsTable.setWidget(2, 4, voWrite);\n-\t\trightsTable.setWidget(1, 5, groupRead);\n-\t\trightsTable.setWidget(2, 5, groupWrite);\n-\t\trightsTable.setWidget(1, 6, facilityRead);\n-\t\trightsTable.setWidget(2, 6, facilityWrite);\n-\n-\t\trightsTable.addStyleName(\"centeredTable\");\n-\n-\t\tvp.add(layout);\n-\t\tvp.add(rightsTable);\n-\t\tvp.add(menu);\n-\t\tvp.setCellHorizontalAlignment(menu, HasHorizontalAlignment.ALIGN_RIGHT);\n-\n-\t\tthis.contentWidget.setWidget(vp);\n-\n-\t\treturn getWidget();\n-\t}\n-\n-\tpublic Widget getWidget() {\n-\t\treturn this.contentWidget;\n-\t}\n-\n-\tpublic Widget getTitle() {\n-\t\treturn this.titleWidget;\n-\t}\n-\n-\tpublic ImageResource getIcon() {\n-\t\treturn SmallIcons.INSTANCE.addIcon();\n-\t}\n-\n-\tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, AttributeRights right) {\n-\n-\t\tright.setRights(read.getValue(), write.getValue());\n-\n-\t\treturn right;\n-\n-\t}\n-\n-\tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic,\n-\t\t\t\t\t\t\t\t\t\t\t\t CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n-\n-\t\tright.setSelfRights(read.getValue(), write.getValue(), readPublic.getValue(), writePublic.getValue(),\n-\t\t\treadVo.getValue(), writeVo.getValue());\n-\n-\t\treturn right;\n-\n-\t}\n-\n-\tprivate void enableDisableWidgets(boolean enabled) {\n-\n-\t\tselfRead.setEnabled(enabled);\n-\t\tselfWrite.setEnabled(enabled);\n-\t\tselfReadPublic.setEnabled(enabled);\n-\t\tselfWritePublic.setEnabled(enabled);\n-\t\tselfReadVo.setEnabled(enabled);\n-\t\tselfWriteVo.setEnabled(enabled);\n-\t\tvoRead.setEnabled(enabled);\n-\t\tvoWrite.setEnabled(enabled);\n-\t\tgroupRead.setEnabled(enabled);\n-\t\tgroupWrite.setEnabled(enabled);\n-\t\tfacilityRead.setEnabled(enabled);\n-\t\tfacilityWrite.setEnabled(enabled);\n-\n-\t}\n-\n-\t@Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 569;\n-\t\tint result = 1;\n-\t\tresult = prime * result + 135345;\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj)\n-\t\t\treturn true;\n-\t\tif (obj == null)\n-\t\t\treturn false;\n-\t\tif (getClass() != obj.getClass())\n-\t\t\treturn false;\n \n-\t\treturn true;\n-\t}\n \n-\tpublic boolean multipleInstancesEnabled() {\n-\t\treturn false;\n-\t}\n-\n-\tpublic void open() {\n-\t}\n-\n-\tpublic boolean isAuthorized() {\n-\n-\t\tif (session.isPerunAdmin()) {\n-\t\t\treturn true;\n-\t\t} else {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t}\n+public class CreateAttributeDefinitionTabItem implements TabItem {\n \n-}\n+ /**\n+  * Perun web session\n+  */\n+\n+\n+ private PerunWebSession session = PerunWebSession.getInstance();\n+\n+ /**\n+  * Content widget - should be simple panel\n+  */\n+ private SimplePanel contentWidget = new SimplePanel();\n+\n+ /**\n+  * Title widget\n+  */\n+ private Label titleWidget = new Label(\"Create attribute definition\");\n+ private ButtonTranslation buttonTranslation = ButtonTranslation.INSTANCE;\n+ private ArrayList<AttributeRights> rights = new ArrayList<AttributeRights>();\n+ private final CheckBox unique = new CheckBox();\n+ private final CheckBox selfRead = new CheckBox();\n+ private final CheckBox selfWrite = new CheckBox();\n+ private final CheckBox selfReadVo = new CheckBox();\n+ private final CheckBox selfReadPublic = new CheckBox();\n+ private final CheckBox selfWriteVo = new CheckBox();\n+ private final CheckBox selfWritePublic = new CheckBox();\n+ private final CheckBox voRead = new CheckBox();\n+ private final CheckBox voWrite = new CheckBox();\n+ private final CheckBox groupRead = new CheckBox();\n+ private final CheckBox groupWrite = new CheckBox();\n+ private final CheckBox facilityRead = new CheckBox();\n+ private final CheckBox facilityWrite = new CheckBox();\n+\n+ /**\n+  * Creates a tab instance\n+  */\n+\n+\n+ public CreateAttributeDefinitionTabItem() {}\n+\n+\n+ public boolean isPrepared() {\n+  return true;\n+ }\n+\n+ @Override\n+ public boolean isRefreshParentOnClose() {\n+  return false;\n+ }\n+\n+ @Override\n+ public void onClose() { }\n+\n+ public Widget draw() {\n+  VerticalPanel vp = new VerticalPanel();\n+  vp.setSize(\"100%\", \"100%\");\n+\n+  // creates HTML elements\n+\n+\n+  final ExtendedTextBox attributeDisplayName = new ExtendedTextBox();\n+  final ExtendedTextBox attributeName = new ExtendedTextBox();\n+  final ExtendedTextBox attributeDescription = new ExtendedTextBox();\n+  final ExtendedTextBox.TextBoxValidator nameValidator = new ExtendedTextBox.TextBoxValidator() {\n+   @Override\n+   public boolean validateTextBox() {\n+    if (attributeName.getTextBox().getText().trim().isEmpty()) {\n+     attributeName.setError(\"Name of attribute can't be empty.\");\n+    } else if (!attributeName.getTextBox().getText().trim().matches(Utils.ATTRIBUTE_FRIENDLY_NAME_MATCHER)) {\n+     attributeName.setError(\"Name of attribute can contain only letters, numbers, dash and colon.\");\n+    } else {\n+     attributeName.setOk();\n+     return true;\n+    }\n+\n+    return false;\n+   }\n+  };\n+  final ExtendedTextBox.TextBoxValidator descriptionValidator = new ExtendedTextBox.TextBoxValidator() {\n+   @Override\n+   public boolean validateTextBox() {\n+    if (!attributeDescription.getTextBox().getText().trim().isEmpty()) {\n+     attributeDescription.setOk();\n+     return true;\n+    } else {\n+     attributeDescription.setError(\"Description of attribute can't be empty.\");\n+     return false;\n+    }\n+   }\n+  };\n+  final ExtendedTextBox.TextBoxValidator displayNameValidator = new ExtendedTextBox.TextBoxValidator() {\n+   @Override\n+   public boolean validateTextBox() {\n+    if (!attributeDisplayName.getTextBox().getText().trim().isEmpty()) {\n+     attributeDisplayName.setOk();\n+     return true;\n+    } else {\n+     attributeDisplayName.setError(\"Display name of attribute can't be empty.\");\n+     return false;\n+    }\n+   }\n+  };\n+  attributeName.setValidator(nameValidator);\n+  attributeDisplayName.setValidator(displayNameValidator);\n+  attributeDescription.setValidator(descriptionValidator);\n+\n+\n+  final ListBox entityListBox = new ListBox();\n+  final ListBox definitionListBox = new ListBox();\n+  final ListBox typeListBox = new ListBox();\n+\n+  // fill listboxs with pre-defined values\n+  entityListBox.addItem(\"facility\", \"urn:perun:facility:\");\n+  entityListBox.addItem(\"resource\", \"urn:perun:resource:\");\n+  entityListBox.addItem(\"group\", \"urn:perun:group:\");\n+  entityListBox.addItem(\"group_resource\", \"urn:perun:group_resource:\");\n+  entityListBox.addItem(\"host\", \"urn:perun:host:\");\n+  entityListBox.addItem(\"member\", \"urn:perun:member:\");\n+  entityListBox.addItem(\"member_group\", \"urn:perun:member_group:\");\n+  entityListBox.addItem(\"member_resource\", \"urn:perun:member_resource:\");\n+  entityListBox.addItem(\"user\", \"urn:perun:user:\");\n+  entityListBox.addItem(\"user_ext_source\", \"urn:perun:ues:\");\n+  entityListBox.addItem(\"user_facility\", \"urn:perun:user_facility:\");\n+  entityListBox.addItem(\"vo\", \"urn:perun:vo:\");\n+  entityListBox.addItem(\"entityless\", \"urn:perun:entityless:\");\n+  definitionListBox.addItem(\"def\", \"attribute-def:def\");\n+  definitionListBox.addItem(\"opt\", \"attribute-def:opt\");\n+  definitionListBox.addItem(\"virt\", \"attribute-def:virt\");\n+  definitionListBox.addItem(\"core\", \"attribute-def:core\");\n+  typeListBox.addItem(\"String\", \"java.lang.String\");\n+  typeListBox.addItem(\"Integer\", \"java.lang.Integer\");\n+  typeListBox.addItem(\"Boolean\", \"java.lang.Boolean\");\n+  typeListBox.addItem(\"Array\", \"java.util.ArrayList\");\n+  typeListBox.addItem(\"LinkedHashMap\", \"java.util.LinkedHashMap\");\n+\n+  // prepare layout for this tab\n+  FlexTable layout = new FlexTable();\n+  layout.setStyleName(\"inputFormFlexTable\");\n+  FlexCellFormatter cellFormatter = layout.getFlexCellFormatter();\n+  TabMenu menu = new TabMenu();\n+\n+  // BUTTONS\n+  final CustomButton createButton = TabMenu.getPredefinedButton(ButtonType.CREATE, buttonTranslation.createAttributeDefinition());\n+  menu.addWidget(createButton);\n+\n+  // close tab events & enable, disable buttons\n+\n+\n+  final JsonCallbackEvents closeTabEvents = JsonCallbackEvents.closeTabDisableButtonEvents(createButton, this, true);\n+  createButton.addClickHandler(new ClickHandler() {\n+   public void onClick(ClickEvent event) {\n+    if (nameValidator.validateTextBox() && descriptionValidator.validateTextBox() && displayNameValidator.validateTextBox()) {\n+     String displayName = attributeDisplayName.getTextBox().getText().trim();\n+     String friendlyName = attributeName.getTextBox().getText().trim();\n+     String description = attributeDescription.getTextBox().getText().trim();\n+     String namespace = entityListBox.getValue(entityListBox.getSelectedIndex()) + definitionListBox.getValue(definitionListBox.getSelectedIndex());\n+     String type = typeListBox.getValue(typeListBox.getSelectedIndex());\n+     boolean isUnique = unique.getValue();\n+     CreateAttribute request = new CreateAttribute(JsonCallbackEvents.disableButtonEvents(createButton, new JsonCallbackEvents() {\n+                                                    @Override\n+                                                    public void onFinished(JavaScriptObject jso) {\n+                                                     AttributeDefinition a = jso.cast();\n+                                                     ArrayList<AttributeRights> list = new ArrayList<AttributeRights>();\n+                                                     AttributeRights right = AttributeRights.create(a.getId(), \"SELF\");\n+                                                     list.add(getRightsFromWidgets(selfRead, selfWrite, selfReadPublic, selfWritePublic, selfReadVo, selfWriteVo, right));\n+                                                     AttributeRights right2 = AttributeRights.create(a.getId(), \"VOADMIN\");\n+                                                     list.add(getRightsFromWidgets(voRead, voWrite, right2));\n+                                                     AttributeRights right3 = AttributeRights.create(a.getId(), \"GROUPADMIN\");\n+                                                     list.add(getRightsFromWidgets(groupRead, groupWrite, right3));\n+                                                     AttributeRights right4 = AttributeRights.create(a.getId(), \"FACILITYADMIN\");\n+                                                     list.add(getRightsFromWidgets(facilityRead, facilityWrite, right4));\n+\n+       // after update - update rights\n+                                                     SetAttributeRights request = new SetAttributeRights(JsonCallbackEvents.disableButtonEvents(createButton, new JsonCallbackEvents() {\n+                                                                                                          @Override\n+                                                                                                          public void onFinished(JavaScriptObject jso) {\n+                                                                                                           enableDisableWidgets(true);\n+                                                                                                           closeTabEvents.onFinished(jso);\n+                                                                                                          }\n+\n+                                                                                                          @Override\n+                                                                                                          public void onLoadingStart() {\n+                                                                                                           enableDisableWidgets(false);\n+                                                                                                          }\n+\n+                                                                                                          @Override\n+                                                                                                          public void onError(PerunError error) {\n+                                                                                                           enableDisableWidgets(true);\n+                                                                                                          }\n+                                                                                                          }));\n+                                                     request.setAttributeRights(list);\n+                                                    }\n+                                                   }));\n+     request.createAttributeDefinition(displayName, friendlyName, description, namespace, type, isUnique);\n+    }\n+   }\n+  });\n+\n+  // insert layout\n+  layout.setHTML(0, 0, \"Friendly name:\");\n+  layout.setWidget(0, 1, attributeName);\n+  layout.setHTML(1, 0, \"Display name:\");\n+  layout.setWidget(1, 1, attributeDisplayName);\n+  layout.setHTML(2, 0, \"Description:\");\n+  layout.setWidget(2, 1, attributeDescription);\n+  layout.setHTML(3, 0, \"Entity:\");\n+  layout.setWidget(3, 1, entityListBox);\n+  layout.setHTML(4, 0, \"Definition type:\");\n+  layout.setWidget(4, 1, definitionListBox);\n+  layout.setHTML(5, 0, \"Value type:\");\n+  layout.setWidget(5, 1, typeListBox);\n+  layout.setHTML(6, 0, \"Unique:\");\n+  layout.setWidget(6, 1, unique);\n+  for (int i = 0; i<layout.getRowCount(); i++) {\n+   cellFormatter.addStyleName(i, 0, \"itemName\");\n+  }\n+\n+\n+  final TabItem tab = this;\n+  menu.addWidget(TabMenu.getPredefinedButton(ButtonType.CANCEL, \"\", new ClickHandler() {\n+                  @Override\n+                  public void onClick(ClickEvent clickEvent) {\n+                   session.getTabManager().closeTab(tab, isRefreshParentOnClose());\n+                  }\n+                 }));\n+\n+\n+  final FlexTable rightsTable = new FlexTable();\n+  rightsTable.setStyleName(\"inputFormFlexTable\");\n+  rightsTable.setHTML(0, 1, \"<strong>SELF</strong>\");\n+  rightsTable.setHTML(0, 2, \"<strong>SELF_PUBLIC</strong>\");\n+  rightsTable.setHTML(0, 3, \"<strong>SELF_VO</strong>\");\n+  rightsTable.setHTML(0, 4, \"<strong>VO</strong>\");\n+  rightsTable.setHTML(0, 5, \"<strong>GROUP</strong>\");\n+  rightsTable.setHTML(0, 6, \"<strong>FACILITY</strong>\");\n+  rightsTable.setHTML(1, 0, \"<strong>READ</strong>\");\n+  rightsTable.setHTML(2, 0, \"<strong>WRITE</strong>\");\n+  rightsTable.setWidget(1, 1, selfRead);\n+  rightsTable.setWidget(2, 1, selfWrite);\n+  rightsTable.setWidget(1, 2, selfReadPublic);\n+  rightsTable.setWidget(2, 2, selfWritePublic);\n+  rightsTable.setWidget(1, 3, selfReadVo);\n+  rightsTable.setWidget(2, 3, selfWriteVo);\n+  rightsTable.setWidget(1, 4, voRead);\n+  rightsTable.setWidget(2, 4, voWrite);\n+  rightsTable.setWidget(1, 5, groupRead);\n+  rightsTable.setWidget(2, 5, groupWrite);\n+  rightsTable.setWidget(1, 6, facilityRead);\n+  rightsTable.setWidget(2, 6, facilityWrite);\n+  rightsTable.addStyleName(\"centeredTable\");\n+  vp.add(layout);\n+  vp.add(rightsTable);\n+  vp.add(menu);\n+  vp.setCellHorizontalAlignment(menu, HasHorizontalAlignment.ALIGN_RIGHT);\n+  this.contentWidget.setWidget(vp);\n+  return getWidget();\n+ }\n+\n+ public Widget getWidget() {\n+  return this.contentWidget;\n+ }\n+\n+ public Widget getTitle() {\n+  return this.titleWidget;\n+ }\n+\n+ public ImageResource getIcon() {\n+  return SmallIcons.INSTANCE.addIcon();\n+ }\n+\n+\n+ private AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, AttributeRights right) {\n+  right.setRights(read.getValue(), write.getValue());\n+  return right;\n+ }\n+\n+\n+ private AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic, CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n+  right.setSelfRights(read.getValue(),\n+  write.getValue(),\n+  readPublic.getValue(),\n+  writePublic.getValue(),\n+  readVo.getValue(),\n+  writeVo.getValue());\n+  return right;\n+ }\n+\n+\n+ private void enableDisableWidgets(boolean enabled) {\n+  selfRead.setEnabled(enabled);\n+  selfWrite.setEnabled(enabled);\n+  selfReadPublic.setEnabled(enabled);\n+  selfWritePublic.setEnabled(enabled);\n+  selfReadVo.setEnabled(enabled);\n+  selfWriteVo.setEnabled(enabled);\n+  voRead.setEnabled(enabled);\n+  voWrite.setEnabled(enabled);\n+  groupRead.setEnabled(enabled);\n+  groupWrite.setEnabled(enabled);\n+  facilityRead.setEnabled(enabled);\n+  facilityWrite.setEnabled(enabled);\n+ }\n+\n+ @Override\n+ public int hashCode() {\n+  final int prime = 569;\n+  int result = 1;\n+  result = prime * result + 135345;\n+  return result;\n+ }\n+\n+ @Override\n+ public boolean equals(Object obj) {\n+  if (this == obj)\n+   return true;\n+  if (obj == null)\n+   return false;\n+  if (getClass() != obj.getClass())\n+   return false;\n+  return true;\n+ }\n+\n+ public boolean multipleInstancesEnabled() {\n+  return false;\n+ }\n+\n+ public void open() { }\n+\n+ public boolean isAuthorized() {\n+  if (session.isPerunAdmin()) {\n+   return true;\n+  } else {\n+   return false;\n+  }\n+ }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 697
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_random/213/CreateAttributeDefinitionTabItem.java\nindex bb246e053fe..77c5fe96b83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_random/213/CreateAttributeDefinitionTabItem.java\n@@ -330,7 +330,7 @@ public class CreateAttributeDefinitionTabItem implements TabItem {\n \t}\n \n \tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic,\n-\t\t\t\t\t\t\t\t\t\t\t\t CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n+\t\t\tCheckBox readVo, CheckBox writeVo, AttributeRights right) {\n \n \t\tright.setSelfRights(read.getValue(), write.getValue(), readPublic.getValue(), writePublic.getValue(),\n \t\t\treadVo.getValue(), writeVo.getValue());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/213/CreateAttributeDefinitionTabItem.java\nindex bb246e053fe..79e7bdfaaf2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/213/CreateAttributeDefinitionTabItem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/213/CreateAttributeDefinitionTabItem.java\n@@ -330,7 +330,7 @@ public class CreateAttributeDefinitionTabItem implements TabItem {\n \t}\n \n \tprivate AttributeRights getRightsFromWidgets(CheckBox read, CheckBox write, CheckBox readPublic, CheckBox writePublic,\n-\t\t\t\t\t\t\t\t\t\t\t\t CheckBox readVo, CheckBox writeVo, AttributeRights right) {\n+\tCheckBox readVo, CheckBox writeVo, AttributeRights right) {\n \n \t\tright.setSelfRights(read.getValue(), write.getValue(), readPublic.getValue(), writePublic.getValue(),\n \t\t\treadVo.getValue(), writeVo.getValue());\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
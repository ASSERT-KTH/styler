{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1708",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "92",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1708/ReplicatedTokenRequestSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1708/ReplicatedTokenRequestSerializer.java\nindex a7c218eaee3..c3fe80dcf0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1708/ReplicatedTokenRequestSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1708/ReplicatedTokenRequestSerializer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.token;\n \n import io.netty.buffer.ByteBuf;\n@@ -44,100 +45,98 @@ import org.neo4j.storageengine.api.WritableChannel;\n \n public class ReplicatedTokenRequestSerializer\n {\n-    private ReplicatedTokenRequestSerializer()\n+  private ReplicatedTokenRequestSerializer()\n+  {\n+    throw new AssertionError(\"Should not be instantiated\");\n+  }\n+\n+  public static void marshal(ReplicatedTokenRequest content, WritableChannel channel) throws IOException\n+  {\n+    channel.putInt(content.type().ordinal());\n+    StringMarshal.marshal(channel, content.tokenName());\n+\n+    channel.putInt(content.commandBytes().length);\n+    channel.put(content.commandBytes(), content.commandBytes().length);\n+  }\n+\n+  public static ReplicatedTokenRequest unmarshal(ReadableChannel channel) throws IOException\n+  {\n+    TokenType type = TokenType.values()[channel.getInt()];\n+    String tokenName = StringMarshal.unmarshal(channel);\n+\n+    int commandBytesLength = channel.getInt();\n+    byte[] commandBytes = new byte[commandBytesLength];\n+    channel.get(commandBytes, commandBytesLength);\n+\n+    return new ReplicatedTokenRequest(type, tokenName, commandBytes);\n+  }\n+\n+  public static void marshal(ReplicatedTokenRequest content, ByteBuf buffer)\n+  {\n+    buffer.writeInt(content.type().ordinal());\n+    StringMarshal.marshal(buffer, content.tokenName());\n+\n+    buffer.writeInt(content.commandBytes().length);\n+    buffer.writeBytes(content.commandBytes());\n+  }\n+\n+  public static ReplicatedTokenRequest unmarshal(ByteBuf buffer)\n+  {\n+    TokenType type = TokenType.values()[buffer.readInt()];\n+    String tokenName = StringMarshal.unmarshal(buffer);\n+\n+    int commandBytesLength = buffer.readInt();\n+    byte[] commandBytes = new byte[commandBytesLength];\n+    buffer.readBytes(commandBytes);\n+\n+    return new ReplicatedTokenRequest(type, tokenName, commandBytes);\n+  }\n+\n+  public static byte[] commandBytes(Collection<StorageCommand> commands)\n+  {\n+    ByteBuf commandBuffer = Unpooled.buffer();\n+    NetworkFlushableChannelNetty4 channel = new NetworkFlushableChannelNetty4(commandBuffer);\n+\n+    try\n     {\n-        throw new AssertionError( \"Should not be instantiated\" );\n-    }\n-\n-    public static void marshal( ReplicatedTokenRequest content, WritableChannel channel ) throws IOException\n+      new LogEntryWriter(channel).serialize(commands);\n+    } catch (IOException e)\n     {\n-        channel.putInt( content.type().ordinal() );\n-        StringMarshal.marshal( channel, content.tokenName() );\n-\n-        channel.putInt( content.commandBytes().length );\n-        channel.put( content.commandBytes(), content.commandBytes().length );\n+      e.printStackTrace(); // TODO: Handle or throw.\n     }\n \n-    public static ReplicatedTokenRequest unmarshal( ReadableChannel channel ) throws IOException\n-    {\n-        TokenType type = TokenType.values()[ channel.getInt() ];\n-        String tokenName = StringMarshal.unmarshal( channel );\n+    /*\n+     * This trims down the array to send up to the actual index it was written. Not doing this would send additional\n+     * zeroes which not only wasteful, but also not handled by the LogEntryReader receiving this.\n+     */\n+    byte[] commandsBytes = Arrays.copyOf(commandBuffer.array(), commandBuffer.writerIndex());\n+    commandBuffer.release();\n \n-        int commandBytesLength = channel.getInt();\n-        byte[] commandBytes = new byte[ commandBytesLength ];\n-        channel.get( commandBytes, commandBytesLength );\n+    return commandsBytes;\n+  }\n \n-        return new ReplicatedTokenRequest( type, tokenName, commandBytes );\n-    }\n+  static Collection<StorageCommand> extractCommands(byte[] commandBytes)\n+  {\n+    ByteBuf txBuffer = Unpooled.wrappedBuffer(commandBytes);\n+    NetworkReadableClosableChannelNetty4 channel = new NetworkReadableClosableChannelNetty4(txBuffer);\n \n-    public static void marshal( ReplicatedTokenRequest content, ByteBuf buffer )\n-    {\n-        buffer.writeInt( content.type().ordinal() );\n-        StringMarshal.marshal( buffer, content.tokenName() );\n+    LogEntryReader<ReadableClosablePositionAwareChannel> reader = new VersionAwareLogEntryReader<>(\n+        new RecordStorageCommandReaderFactory(), InvalidLogEntryHandler.STRICT);\n \n-        buffer.writeInt( content.commandBytes().length );\n-        buffer.writeBytes( content.commandBytes() );\n-    }\n+    LogEntryCommand entryRead;\n+    List<StorageCommand> commands = new LinkedList<>();\n \n-    public static ReplicatedTokenRequest unmarshal( ByteBuf buffer )\n+    try\n     {\n-        TokenType type = TokenType.values()[ buffer.readInt() ];\n-        String tokenName = StringMarshal.unmarshal( buffer );\n-\n-        int commandBytesLength = buffer.readInt();\n-        byte[] commandBytes = new byte[ commandBytesLength ];\n-        buffer.readBytes( commandBytes );\n-\n-        return new ReplicatedTokenRequest( type, tokenName, commandBytes );\n-    }\n-\n-    public static byte[] commandBytes( Collection<StorageCommand> commands )\n+      while ((entryRead = (LogEntryCommand) reader.readLogEntry(channel)) != null)\n+      {\n+        commands.add(entryRead.getCommand());\n+      }\n+    } catch (IOException e)\n     {\n-        ByteBuf commandBuffer = Unpooled.buffer();\n-        NetworkFlushableChannelNetty4 channel = new NetworkFlushableChannelNetty4( commandBuffer );\n-\n-        try\n-        {\n-            new LogEntryWriter( channel ).serialize( commands );\n-        }\n-        catch ( IOException e )\n-        {\n-            e.printStackTrace(); // TODO: Handle or throw.\n-        }\n-\n-        /*\n-         * This trims down the array to send up to the actual index it was written. Not doing this would send additional\n-         * zeroes which not only wasteful, but also not handled by the LogEntryReader receiving this.\n-         */\n-        byte[] commandsBytes = Arrays.copyOf( commandBuffer.array(), commandBuffer.writerIndex() );\n-        commandBuffer.release();\n-\n-        return commandsBytes;\n+      e.printStackTrace(); // TODO: Handle or throw.\n     }\n \n-    static Collection<StorageCommand> extractCommands( byte[] commandBytes )\n-    {\n-        ByteBuf txBuffer = Unpooled.wrappedBuffer( commandBytes );\n-        NetworkReadableClosableChannelNetty4 channel = new NetworkReadableClosableChannelNetty4( txBuffer );\n-\n-        LogEntryReader<ReadableClosablePositionAwareChannel> reader = new VersionAwareLogEntryReader<>(\n-                new RecordStorageCommandReaderFactory(), InvalidLogEntryHandler.STRICT );\n-\n-        LogEntryCommand entryRead;\n-        List<StorageCommand> commands = new LinkedList<>();\n-\n-        try\n-        {\n-            while ( (entryRead = (LogEntryCommand) reader.readLogEntry( channel )) != null )\n-            {\n-                commands.add( entryRead.getCommand() );\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            e.printStackTrace(); // TODO: Handle or throw.\n-        }\n-\n-        return commands;\n-    }\n+    return commands;\n+  }\n }\n",
            "diff_size": 140
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1708/ReplicatedTokenRequestSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1708/ReplicatedTokenRequestSerializer.java\nindex a7c218eaee3..0c1cf610567 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1708/ReplicatedTokenRequestSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1708/ReplicatedTokenRequestSerializer.java\n@@ -53,42 +53,38 @@ public class ReplicatedTokenRequestSerializer\n     {\n         channel.putInt( content.type().ordinal() );\n         StringMarshal.marshal( channel, content.tokenName() );\n-\n-        channel.putInt( content.commandBytes().length );\n+channel.putInt( content.commandBytes().length );\n         channel.put( content.commandBytes(), content.commandBytes().length );\n     }\n \n     public static ReplicatedTokenRequest unmarshal( ReadableChannel channel ) throws IOException\n     {\n-        TokenType type = TokenType.values()[ channel.getInt() ];\n+        TokenType type = TokenType.values()[channel.getInt() ];\n         String tokenName = StringMarshal.unmarshal( channel );\n \n         int commandBytesLength = channel.getInt();\n         byte[] commandBytes = new byte[ commandBytesLength ];\n         channel.get( commandBytes, commandBytesLength );\n-\n-        return new ReplicatedTokenRequest( type, tokenName, commandBytes );\n+return new ReplicatedTokenRequest( type, tokenName, commandBytes );\n     }\n \n     public static void marshal( ReplicatedTokenRequest content, ByteBuf buffer )\n     {\n         buffer.writeInt( content.type().ordinal() );\n         StringMarshal.marshal( buffer, content.tokenName() );\n-\n-        buffer.writeInt( content.commandBytes().length );\n+buffer.writeInt( content.commandBytes().length );\n         buffer.writeBytes( content.commandBytes() );\n     }\n \n     public static ReplicatedTokenRequest unmarshal( ByteBuf buffer )\n     {\n-        TokenType type = TokenType.values()[ buffer.readInt() ];\n+        TokenType type = TokenType.values()[buffer.readInt() ];\n         String tokenName = StringMarshal.unmarshal( buffer );\n \n         int commandBytesLength = buffer.readInt();\n         byte[] commandBytes = new byte[ commandBytesLength ];\n         buffer.readBytes( commandBytes );\n-\n-        return new ReplicatedTokenRequest( type, tokenName, commandBytes );\n+return new ReplicatedTokenRequest( type, tokenName, commandBytes );\n     }\n \n     public static byte[] commandBytes( Collection<StorageCommand> commands )\n@@ -111,8 +107,7 @@ public class ReplicatedTokenRequestSerializer\n          */\n         byte[] commandsBytes = Arrays.copyOf( commandBuffer.array(), commandBuffer.writerIndex() );\n         commandBuffer.release();\n-\n-        return commandsBytes;\n+return commandsBytes;\n     }\n \n     static Collection<StorageCommand> extractCommands( byte[] commandBytes )\n@@ -120,10 +115,8 @@ public class ReplicatedTokenRequestSerializer\n         ByteBuf txBuffer = Unpooled.wrappedBuffer( commandBytes );\n         NetworkReadableClosableChannelNetty4 channel = new NetworkReadableClosableChannelNetty4( txBuffer );\n \n-        LogEntryReader<ReadableClosablePositionAwareChannel> reader = new VersionAwareLogEntryReader<>(\n-                new RecordStorageCommandReaderFactory(), InvalidLogEntryHandler.STRICT );\n-\n-        LogEntryCommand entryRead;\n+        LogEntryReader<ReadableClosablePositionAwareChannel> reader = new VersionAwareLogEntryReader<>( new RecordStorageCommandReaderFactory(), InvalidLogEntryHandler.STRICT );\n+LogEntryCommand entryRead;\n         List<StorageCommand> commands = new LinkedList<>();\n \n         try\n@@ -140,4 +133,4 @@ public class ReplicatedTokenRequestSerializer\n \n         return commands;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
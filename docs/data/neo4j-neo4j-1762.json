{
    "project_name": "neo4j-neo4j",
    "error_id": "1762",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1762/GraphDatabaseDependencies.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1762/GraphDatabaseDependencies.java\nindex 5ff9ed118ef..3ef16e262d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1762/GraphDatabaseDependencies.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1762/GraphDatabaseDependencies.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.facade;\n \n import java.util.HashMap;\n@@ -39,24 +40,24 @@ import static org.neo4j.internal.helpers.collection.Iterables.empty;\n \n public class GraphDatabaseDependencies implements ExternalDependencies\n {\n-    public static GraphDatabaseDependencies newDependencies( ExternalDependencies deps )\n+    public static GraphDatabaseDependencies newDependencies(ExternalDependencies deps)\n     {\n-        return new GraphDatabaseDependencies( deps.monitors(), deps.userLogProvider(), deps.dependencies(), deps.extensions(),\n-                deps.urlAccessRules(), deps.databaseEventListeners() );\n+        return new GraphDatabaseDependencies(deps.monitors(), deps.userLogProvider(), deps.dependencies(), deps.extensions(),\n+          deps.urlAccessRules(), deps.databaseEventListeners());\n     }\n \n     public static GraphDatabaseDependencies newDependencies()\n     {\n-        Iterable<ExtensionFactory<?>> extensions = getExtensions( Services.loadAll( ExtensionFactory.class ).iterator() );\n+        Iterable<ExtensionFactory<?>> extensions = getExtensions(Services.loadAll(ExtensionFactory.class).iterator());\n \n-        Map<String,URLAccessRule> urlAccessRules = new HashMap<>();\n-        urlAccessRules.put( \"http\", URLAccessRules.alwaysPermitted() );\n-        urlAccessRules.put( \"https\", URLAccessRules.alwaysPermitted() );\n-        urlAccessRules.put( \"ftp\", URLAccessRules.alwaysPermitted() );\n-        urlAccessRules.put( \"file\", URLAccessRules.fileAccess() );\n+        Map<String, URLAccessRule> urlAccessRules = new HashMap<>();\n+        urlAccessRules.put(\"http\", URLAccessRules.alwaysPermitted());\n+        urlAccessRules.put(\"https\", URLAccessRules.alwaysPermitted());\n+        urlAccessRules.put(\"ftp\", URLAccessRules.alwaysPermitted());\n+        urlAccessRules.put(\"file\", URLAccessRules.fileAccess());\n \n-        return new GraphDatabaseDependencies( null, null, null, extensions,\n-                urlAccessRules, empty() );\n+        return new GraphDatabaseDependencies(null, null, null, extensions,\n+          urlAccessRules, empty());\n     }\n \n     private Monitors monitors;\n@@ -64,59 +65,59 @@ public class GraphDatabaseDependencies implements ExternalDependencies\n     private DependencyResolver dependencies;\n     private List<ExtensionFactory<?>> extensions;\n     private List<DatabaseEventListener> databaseEventListeners;\n-    private final Map<String,URLAccessRule> urlAccessRules;\n+    private final Map<String, URLAccessRule> urlAccessRules;\n \n     private GraphDatabaseDependencies(\n-            Monitors monitors,\n-            LogProvider userLogProvider,\n-            DependencyResolver dependencies,\n-            Iterable<ExtensionFactory<?>> extensions,\n-            Map<String,URLAccessRule> urlAccessRules,\n-            Iterable<DatabaseEventListener> eventListeners\n-            )\n+      Monitors monitors,\n+      LogProvider userLogProvider,\n+      DependencyResolver dependencies,\n+      Iterable<ExtensionFactory<?>> extensions,\n+      Map<String, URLAccessRule> urlAccessRules,\n+      Iterable<DatabaseEventListener> eventListeners\n+    )\n     {\n         this.monitors = monitors;\n         this.userLogProvider = userLogProvider;\n         this.dependencies = dependencies;\n-        this.extensions = asList( extensions );\n+        this.extensions = asList(extensions);\n         this.urlAccessRules = urlAccessRules;\n-        this.databaseEventListeners = asList( eventListeners );\n+        this.databaseEventListeners = asList(eventListeners);\n     }\n \n     // Builder DSL\n-    public GraphDatabaseDependencies monitors( Monitors monitors )\n+    public GraphDatabaseDependencies monitors(Monitors monitors)\n     {\n         this.monitors = monitors;\n         return this;\n     }\n \n-    public GraphDatabaseDependencies userLogProvider( LogProvider userLogProvider )\n+    public GraphDatabaseDependencies userLogProvider(LogProvider userLogProvider)\n     {\n         this.userLogProvider = userLogProvider;\n         return this;\n     }\n \n-    public GraphDatabaseDependencies dependencies( DependencyResolver dependencies )\n+    public GraphDatabaseDependencies dependencies(DependencyResolver dependencies)\n     {\n         this.dependencies = dependencies;\n         return this;\n     }\n \n-    public GraphDatabaseDependencies databaseEventListeners( Iterable<DatabaseEventListener> eventListeners )\n+    public GraphDatabaseDependencies databaseEventListeners(Iterable<DatabaseEventListener> eventListeners)\n     {\n-        this.databaseEventListeners = asList( eventListeners );\n+        this.databaseEventListeners = asList(eventListeners);\n         return this;\n     }\n \n-    public GraphDatabaseDependencies extensions( Iterable<ExtensionFactory<?>> extensions )\n+    public GraphDatabaseDependencies extensions(Iterable<ExtensionFactory<?>> extensions)\n     {\n-        this.extensions = asList( extensions );\n+        this.extensions = asList(extensions);\n         return this;\n     }\n \n-    public GraphDatabaseDependencies urlAccessRules( Map<String,URLAccessRule> urlAccessRules )\n+    public GraphDatabaseDependencies urlAccessRules(Map<String, URLAccessRule> urlAccessRules)\n     {\n-        this.urlAccessRules.putAll( urlAccessRules );\n+        this.urlAccessRules.putAll(urlAccessRules);\n         return this;\n     }\n \n@@ -140,7 +141,7 @@ public class GraphDatabaseDependencies implements ExternalDependencies\n     }\n \n     @Override\n-    public Map<String,URLAccessRule> urlAccessRules()\n+    public Map<String, URLAccessRule> urlAccessRules()\n     {\n         return urlAccessRules;\n     }\n@@ -159,9 +160,9 @@ public class GraphDatabaseDependencies implements ExternalDependencies\n \n     // This method is needed to convert the non generic ExtensionFactory type returned from Service.load\n     // to ExtensionFactory<?> generic types\n-    private static Iterable<ExtensionFactory<?>> getExtensions( Iterator<ExtensionFactory> parent )\n+    private static Iterable<ExtensionFactory<?>> getExtensions(Iterator<ExtensionFactory> parent)\n     {\n-        return Iterators.asList( new Iterator<>()\n+        return Iterators.asList(new Iterator<>()\n         {\n             @Override\n             public boolean hasNext()\n@@ -174,6 +175,6 @@ public class GraphDatabaseDependencies implements ExternalDependencies\n             {\n                 return parent.next();\n             }\n-        } );\n+        });\n     }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
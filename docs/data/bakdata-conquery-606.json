{
    "project_name": "bakdata-conquery",
    "error_id": "606",
    "information": {
        "errors": [
            {
                "line": "55",
                "column": "34",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "\n\t@ToString.Exclude\n\t@Getter(AccessLevel.PRIVATE) // So only Jackson can use this to deserialize\n\t@NotNull\n\tprivate Set<ConqueryPermission> permissions = new HashSet<>();\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/606/PermissionOwner.java\nindex 3f9402e0e2b..944e5caeb77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/606/PermissionOwner.java\n@@ -52,8 +52,9 @@ public abstract class PermissionOwner<T extends PermissionOwnerId<? extends Perm\n \tprotected String label;\r\n \r\n \t@ToString.Exclude\r\n-\t@Getter(AccessLevel.PRIVATE) // So only Jackson can use this to deserialize\r\n-\t@NotNull\r\n+\t@Getter(AccessLevel.PRIVATE)\r\n+\t\t// So only Jackson can use this to deserialize\r\n+\t\t@NotNull\r\n \tprivate Set<ConqueryPermission> permissions = new HashSet<>();\r\n \r\n \r\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "34",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/606/PermissionOwner.java\nindex 3f9402e0e2b..0400a594748 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/606/PermissionOwner.java\n@@ -31,133 +31,133 @@ import org.apache.shiro.authz.Permission;\n @EqualsAndHashCode(callSuper = false)\r\n public abstract class PermissionOwner<T extends PermissionOwnerId<? extends PermissionOwner<T>>> extends IdentifiableImpl<T> implements Comparable<PermissionOwner<?>> {\r\n \r\n-\tprivate static final Comparator<PermissionOwner<?>>\r\n-\t\t\tCOMPARATOR =\r\n-\t\t\tComparator.<PermissionOwner<?>, String>comparing(PermissionOwner::getLabel).thenComparing(po -> po.getId().toString());\r\n-\r\n-\t@Getter\r\n-\t@Setter\r\n-\t@NonNull\r\n-\t@NotNull\r\n-\t@NotEmpty\r\n-\t@ToString.Include\r\n-\tprotected String name;\r\n-\r\n-\t@Getter\r\n-\t@Setter\r\n-\t@NonNull\r\n-\t@NotNull\r\n-\t@NotEmpty\r\n-\t@ToString.Include\r\n-\tprotected String label;\r\n-\r\n-\t@ToString.Exclude\r\n-\t@Getter(AccessLevel.PRIVATE) // So only Jackson can use this to deserialize\r\n-\t@NotNull\r\n-\tprivate Set<ConqueryPermission> permissions = new HashSet<>();\r\n-\r\n-\r\n-\tpublic PermissionOwner(String name, String label) {\r\n-\t\tthis.name = name;\r\n-\t\tthis.label = label;\r\n-\t}\r\n-\r\n-\r\n-\t/**\r\n-\t * Adds permissions to the owner object and to the persistent storage.\r\n-\t *\r\n-\t * @param storage     A storage where the permission are added for persistence.\r\n-\t * @param permissions The permissions to add.\r\n-\t * @return Returns the added Permission\r\n-\t */\r\n-\t//TODO unused?\r\n-\tpublic boolean addPermissions(MetaStorage storage, Set<ConqueryPermission> permissions) {\r\n-\t\tboolean ret = false;\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(this.permissions.size() + permissions.size());\r\n-\t\t\tnewSet.addAll(this.permissions);\r\n-\t\t\tret = newSet.addAll(permissions);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t\treturn ret;\r\n-\t}\r\n-\r\n-\tpublic boolean addPermission(MetaStorage storage, ConqueryPermission permission) {\r\n-\t\tboolean ret = false;\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(this.permissions.size() + 1);\r\n-\t\t\tnewSet.addAll(this.permissions);\r\n-\t\t\tret = newSet.add(permission);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t\treturn ret;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Removes permissions from the owner object and from the persistent storage.\r\n-\t *\r\n-\t * @param storage     A storage where the permission are saved for persistence.\r\n-\t * @param permissions The permission to remove.\r\n-\t * @return Returns the added Permission\r\n-\t */\r\n-\t//todo unsed?\r\n-\tpublic boolean removePermissions(MetaStorage storage, Set<ConqueryPermission> permissions) {\r\n-\t\tboolean ret = false;\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(this.permissions);\r\n-\t\t\tret = newSet.removeAll(permissions);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t\treturn ret;\r\n-\t}\r\n-\r\n-\tpublic boolean removePermission(MetaStorage storage, Permission permission) {\r\n-\t\tboolean ret = false;\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(this.permissions);\r\n-\t\t\tret = newSet.remove(permission);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t\treturn ret;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Returns a copy of the permissions hold by the owner.\r\n-\t * Changes to the returned collection are not persisted and do not alter the\r\n-\t * permissions owned.\r\n-\t *\r\n-\t * @return A set of the permissions hold by the owner.\r\n-\t */\r\n-\tpublic Set<ConqueryPermission> getPermissions() {\r\n-\t\tif (permissions.isEmpty()) {\r\n-\t\t\treturn Collections.emptySet();\r\n-\t\t}\r\n-\t\treturn Collections.unmodifiableSet(permissions);\r\n-\r\n-\t}\r\n-\r\n-\tpublic void setPermissions(MetaStorage storage, Set<ConqueryPermission> permissionsNew) {\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(permissionsNew.size());\r\n-\t\t\tnewSet.addAll(permissionsNew);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Update this instance in the {@link MetaStorage}.\r\n-\t */\r\n-\tprotected abstract void updateStorage(MetaStorage storage);\r\n-\r\n-\r\n-\t@Override\r\n-\tpublic int compareTo(PermissionOwner<?> other) {\r\n-\t\treturn COMPARATOR.compare(this, other);\r\n-\t}\r\n+    private static final Comparator<PermissionOwner<?>>\r\n+        COMPARATOR =\r\n+        Comparator.<PermissionOwner<?>, String>comparing(PermissionOwner::getLabel).thenComparing(po -> po.getId().toString());\r\n+\r\n+    @Getter\r\n+    @Setter\r\n+    @NonNull\r\n+    @NotNull\r\n+    @NotEmpty\r\n+    @ToString.Include\r\n+    protected String name;\r\n+\r\n+    @Getter\r\n+    @Setter\r\n+    @NonNull\r\n+    @NotNull\r\n+    @NotEmpty\r\n+    @ToString.Include\r\n+    protected String label;\r\n+\r\n+    @ToString.Exclude\r\n+    @Getter(AccessLevel.PRIVATE) // So only Jackson can use this to deserialize\r\n+    @NotNull\r\n+    private Set<ConqueryPermission> permissions = new HashSet<>();\r\n+\r\n+\r\n+    public PermissionOwner(String name, String label) {\r\n+        this.name = name;\r\n+        this.label = label;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adds permissions to the owner object and to the persistent storage.\r\n+     *\r\n+     * @param storage     A storage where the permission are added for persistence.\r\n+     * @param permissions The permissions to add.\r\n+     * @return Returns the added Permission\r\n+     */\r\n+    //TODO unused?\r\n+    public boolean addPermissions(MetaStorage storage, Set<ConqueryPermission> permissions) {\r\n+        boolean ret = false;\r\n+        synchronized (this) {\r\n+            Set<ConqueryPermission> newSet = new HashSet<>(this.permissions.size() + permissions.size());\r\n+            newSet.addAll(this.permissions);\r\n+            ret = newSet.addAll(permissions);\r\n+            this.permissions = newSet;\r\n+            updateStorage(storage);\r\n+        }\r\n+        return ret;\r\n+    }\r\n+\r\n+    public boolean addPermission(MetaStorage storage, ConqueryPermission permission) {\r\n+        boolean ret = false;\r\n+        synchronized (this) {\r\n+            Set<ConqueryPermission> newSet = new HashSet<>(this.permissions.size() + 1);\r\n+            newSet.addAll(this.permissions);\r\n+            ret = newSet.add(permission);\r\n+            this.permissions = newSet;\r\n+            updateStorage(storage);\r\n+        }\r\n+        return ret;\r\n+    }\r\n+\r\n+    /**\r\n+     * Removes permissions from the owner object and from the persistent storage.\r\n+     *\r\n+     * @param storage     A storage where the permission are saved for persistence.\r\n+     * @param permissions The permission to remove.\r\n+     * @return Returns the added Permission\r\n+     */\r\n+    //todo unsed?\r\n+    public boolean removePermissions(MetaStorage storage, Set<ConqueryPermission> permissions) {\r\n+        boolean ret = false;\r\n+        synchronized (this) {\r\n+            Set<ConqueryPermission> newSet = new HashSet<>(this.permissions);\r\n+            ret = newSet.removeAll(permissions);\r\n+            this.permissions = newSet;\r\n+            updateStorage(storage);\r\n+        }\r\n+        return ret;\r\n+    }\r\n+\r\n+    public boolean removePermission(MetaStorage storage, Permission permission) {\r\n+        boolean ret = false;\r\n+        synchronized (this) {\r\n+            Set<ConqueryPermission> newSet = new HashSet<>(this.permissions);\r\n+            ret = newSet.remove(permission);\r\n+            this.permissions = newSet;\r\n+            updateStorage(storage);\r\n+        }\r\n+        return ret;\r\n+    }\r\n+\r\n+    /**\r\n+     * Returns a copy of the permissions hold by the owner.\r\n+     * Changes to the returned collection are not persisted and do not alter the\r\n+     * permissions owned.\r\n+     *\r\n+     * @return A set of the permissions hold by the owner.\r\n+     */\r\n+    public Set<ConqueryPermission> getPermissions() {\r\n+        if (permissions.isEmpty()) {\r\n+            return Collections.emptySet();\r\n+        }\r\n+        return Collections.unmodifiableSet(permissions);\r\n+\r\n+    }\r\n+\r\n+    public void setPermissions(MetaStorage storage, Set<ConqueryPermission> permissionsNew) {\r\n+        synchronized (this) {\r\n+            Set<ConqueryPermission> newSet = new HashSet<>(permissionsNew.size());\r\n+            newSet.addAll(permissionsNew);\r\n+            this.permissions = newSet;\r\n+            updateStorage(storage);\r\n+        }\r\n+    }\r\n+\r\n+    /**\r\n+     * Update this instance in the {@link MetaStorage}.\r\n+     */\r\n+    protected abstract void updateStorage(MetaStorage storage);\r\n+\r\n+\r\n+    @Override\r\n+    public int compareTo(PermissionOwner<?> other) {\r\n+        return COMPARATOR.compare(this, other);\r\n+    }\r\n \r\n }\r\n",
            "diff_size": 128
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/606/PermissionOwner.java\nindex 3f9402e0e2b..63ed475a73a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/606/PermissionOwner.java\n@@ -31,11 +31,8 @@ import org.apache.shiro.authz.Permission;\n @EqualsAndHashCode(callSuper = false)\r\n public abstract class PermissionOwner<T extends PermissionOwnerId<? extends PermissionOwner<T>>> extends IdentifiableImpl<T> implements Comparable<PermissionOwner<?>> {\r\n \r\n-\tprivate static final Comparator<PermissionOwner<?>>\r\n-\t\t\tCOMPARATOR =\r\n-\t\t\tComparator.<PermissionOwner<?>, String>comparing(PermissionOwner::getLabel).thenComparing(po -> po.getId().toString());\r\n-\r\n-\t@Getter\r\n+\tprivate static final Comparator<PermissionOwner<?>> COMPARATOR = Comparator.<PermissionOwner<?>, String>comparing(PermissionOwner::getLabel).thenComparing(po -> po.getId().toString());\n+@Getter\r\n \t@Setter\r\n \t@NonNull\r\n \t@NotNull\r\n@@ -52,11 +49,11 @@ public abstract class PermissionOwner<T extends PermissionOwnerId<? extends Perm\n \tprotected String label;\r\n \r\n \t@ToString.Exclude\r\n-\t@Getter(AccessLevel.PRIVATE) // So only Jackson can use this to deserialize\r\n+\t@Getter(AccessLevel.PRIVATE)\n+// So only Jackson can use this to deserialize\r\n \t@NotNull\r\n-\tprivate Set<ConqueryPermission> permissions = new HashSet<>();\r\n-\r\n-\r\n+\tprivate Set<ConqueryPermission> permissions = new HashSet<>();\n+\n \tpublic PermissionOwner(String name, String label) {\r\n \t\tthis.name = name;\r\n \t\tthis.label = label;\r\n@@ -136,8 +133,7 @@ public abstract class PermissionOwner<T extends PermissionOwnerId<? extends Perm\n \t\tif (permissions.isEmpty()) {\r\n \t\t\treturn Collections.emptySet();\r\n \t\t}\r\n-\t\treturn Collections.unmodifiableSet(permissions);\r\n-\r\n+\t\treturn Collections.unmodifiableSet(permissions);\n \t}\r\n \r\n \tpublic void setPermissions(MetaStorage storage, Set<ConqueryPermission> permissionsNew) {\r\n@@ -160,4 +156,4 @@ public abstract class PermissionOwner<T extends PermissionOwnerId<? extends Perm\n \t\treturn COMPARATOR.compare(this, other);\r\n \t}\r\n \r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "column": "49",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "column": "3",
                    "severity": "warning",
                    "message": "'synchronized rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/606/PermissionOwner.java\nindex 3f9402e0e2b..974677529f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/606/PermissionOwner.java\n@@ -1,24 +1,22 @@\n-package com.bakdata.conquery.models.auth.entities;\r\n-\r\n-import java.util.Collections;\r\n-import java.util.Comparator;\r\n-import java.util.HashSet;\r\n-import java.util.Set;\r\n-\r\n-import javax.validation.constraints.NotEmpty;\r\n-import javax.validation.constraints.NotNull;\r\n-\r\n-import com.bakdata.conquery.io.storage.MetaStorage;\r\n-import com.bakdata.conquery.models.auth.permissions.ConqueryPermission;\r\n-import com.bakdata.conquery.models.identifiable.IdentifiableImpl;\r\n-import com.bakdata.conquery.models.identifiable.ids.specific.PermissionOwnerId;\r\n-import lombok.AccessLevel;\r\n-import lombok.EqualsAndHashCode;\r\n-import lombok.Getter;\r\n-import lombok.NonNull;\r\n-import lombok.Setter;\r\n-import lombok.ToString;\r\n-import lombok.extern.slf4j.Slf4j;\r\n+package com.bakdata.conquery.models.auth.entities;\n+\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.validation.constraints.NotEmpty;\n+import javax.validation.constraints.NotNull;\n+import com.bakdata.conquery.io.storage.MetaStorage;\n+import com.bakdata.conquery.models.auth.permissions.ConqueryPermission;\n+import com.bakdata.conquery.models.identifiable.IdentifiableImpl;\n+import com.bakdata.conquery.models.identifiable.ids.specific.PermissionOwnerId;\n+import lombok.AccessLevel;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.NonNull;\n+import lombok.Setter;\n+import lombok.ToString;\n+import lombok.extern.slf4j.Slf4j;\n import org.apache.shiro.authz.Permission;\r\n \r\n /**\r\n@@ -26,138 +24,124 @@ import org.apache.shiro.authz.Permission;\n  * persons and groups with permissions.\r\n  *\r\n  * @param <T> The id type by which an instance is identified\r\n- */\r\n-@Slf4j\r\n-@EqualsAndHashCode(callSuper = false)\r\n-public abstract class PermissionOwner<T extends PermissionOwnerId<? extends PermissionOwner<T>>> extends IdentifiableImpl<T> implements Comparable<PermissionOwner<?>> {\r\n-\r\n-\tprivate static final Comparator<PermissionOwner<?>>\r\n-\t\t\tCOMPARATOR =\r\n-\t\t\tComparator.<PermissionOwner<?>, String>comparing(PermissionOwner::getLabel).thenComparing(po -> po.getId().toString());\r\n-\r\n-\t@Getter\r\n-\t@Setter\r\n-\t@NonNull\r\n-\t@NotNull\r\n-\t@NotEmpty\r\n-\t@ToString.Include\r\n-\tprotected String name;\r\n-\r\n-\t@Getter\r\n-\t@Setter\r\n-\t@NonNull\r\n-\t@NotNull\r\n-\t@NotEmpty\r\n-\t@ToString.Include\r\n-\tprotected String label;\r\n-\r\n-\t@ToString.Exclude\r\n-\t@Getter(AccessLevel.PRIVATE) // So only Jackson can use this to deserialize\r\n-\t@NotNull\r\n-\tprivate Set<ConqueryPermission> permissions = new HashSet<>();\r\n-\r\n-\r\n-\tpublic PermissionOwner(String name, String label) {\r\n-\t\tthis.name = name;\r\n-\t\tthis.label = label;\r\n-\t}\r\n-\r\n-\r\n-\t/**\r\n-\t * Adds permissions to the owner object and to the persistent storage.\r\n-\t *\r\n-\t * @param storage     A storage where the permission are added for persistence.\r\n-\t * @param permissions The permissions to add.\r\n-\t * @return Returns the added Permission\r\n-\t */\r\n-\t//TODO unused?\r\n-\tpublic boolean addPermissions(MetaStorage storage, Set<ConqueryPermission> permissions) {\r\n-\t\tboolean ret = false;\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(this.permissions.size() + permissions.size());\r\n-\t\t\tnewSet.addAll(this.permissions);\r\n-\t\t\tret = newSet.addAll(permissions);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t\treturn ret;\r\n-\t}\r\n-\r\n-\tpublic boolean addPermission(MetaStorage storage, ConqueryPermission permission) {\r\n-\t\tboolean ret = false;\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(this.permissions.size() + 1);\r\n-\t\t\tnewSet.addAll(this.permissions);\r\n-\t\t\tret = newSet.add(permission);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t\treturn ret;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Removes permissions from the owner object and from the persistent storage.\r\n-\t *\r\n-\t * @param storage     A storage where the permission are saved for persistence.\r\n-\t * @param permissions The permission to remove.\r\n-\t * @return Returns the added Permission\r\n-\t */\r\n-\t//todo unsed?\r\n-\tpublic boolean removePermissions(MetaStorage storage, Set<ConqueryPermission> permissions) {\r\n-\t\tboolean ret = false;\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(this.permissions);\r\n-\t\t\tret = newSet.removeAll(permissions);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t\treturn ret;\r\n-\t}\r\n-\r\n-\tpublic boolean removePermission(MetaStorage storage, Permission permission) {\r\n-\t\tboolean ret = false;\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(this.permissions);\r\n-\t\t\tret = newSet.remove(permission);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t\treturn ret;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Returns a copy of the permissions hold by the owner.\r\n-\t * Changes to the returned collection are not persisted and do not alter the\r\n-\t * permissions owned.\r\n-\t *\r\n-\t * @return A set of the permissions hold by the owner.\r\n-\t */\r\n-\tpublic Set<ConqueryPermission> getPermissions() {\r\n-\t\tif (permissions.isEmpty()) {\r\n-\t\t\treturn Collections.emptySet();\r\n-\t\t}\r\n-\t\treturn Collections.unmodifiableSet(permissions);\r\n-\r\n-\t}\r\n-\r\n-\tpublic void setPermissions(MetaStorage storage, Set<ConqueryPermission> permissionsNew) {\r\n-\t\tsynchronized (this) {\r\n-\t\t\tSet<ConqueryPermission> newSet = new HashSet<>(permissionsNew.size());\r\n-\t\t\tnewSet.addAll(permissionsNew);\r\n-\t\t\tthis.permissions = newSet;\r\n-\t\t\tupdateStorage(storage);\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Update this instance in the {@link MetaStorage}.\r\n-\t */\r\n-\tprotected abstract void updateStorage(MetaStorage storage);\r\n-\r\n-\r\n-\t@Override\r\n-\tpublic int compareTo(PermissionOwner<?> other) {\r\n-\t\treturn COMPARATOR.compare(this, other);\r\n-\t}\r\n-\r\n-}\r\n+ */\n+\n+@Slf4j @EqualsAndHashCode(callSuper=false)\n+public abstract class PermissionOwner<T extends PermissionOwnerId<? extends PermissionOwner<T>>> extends IdentifiableImpl<T> implements Comparable<PermissionOwner<?>> {\n+\n+ private static final Comparator<PermissionOwner<?>> COMPARATOR = Comparator.<PermissionOwner<?>, String>comparing(PermissionOwner::getLabel).thenComparing(po -> po.getId().toString());\n+\n+ @Getter @Setter @NonNull @NotNull @NotEmpty @ToString.Include\n+ protected String name;\n+\n+ @Getter @Setter @NonNull @NotNull @NotEmpty @ToString.Include\n+ protected String label;\n+\n+ @ToString.Exclude @Getter(AccessLevel.PRIVATE) // So only Jackson can use this to deserialize @NotNull\n+ private Set<ConqueryPermission> permissions = new HashSet<>();\n+\n+ public PermissionOwner(String name, String label) {\n+  this.name = name;\n+  this.label = label;\n+ }\r\n+\r\n+\r\n+ /**\r\n+  * Adds permissions to the owner object and to the persistent storage.\r\n+  *\r\n+  * @param storage     A storage where the permission are added for persistence.\r\n+  * @param permissions The permissions to add.\r\n+  * @return Returns the added Permission\r\n+  */\r\n+ //TODO unused?\n+\n+ public boolean addPermissions(MetaStorage storage, Set<ConqueryPermission> permissions) {\n+  boolean ret = false;\n+  synchronized (this) {\n+   Set<ConqueryPermission> newSet = new HashSet<>(this.permissions.size()+permissions.size());\n+   newSet.addAll(this.permissions);\n+   ret = newSet.addAll(permissions);\n+   this.permissions = newSet;\n+   updateStorage(storage);\n+  }\n+  return ret;\n+ }\n+\n+ public boolean addPermission(MetaStorage storage, ConqueryPermission permission) {\n+  boolean ret = false;\n+  synchronized (this) {\n+   Set<ConqueryPermission> newSet = new HashSet<>(this.permissions.size()+ 1);\n+   newSet.addAll(this.permissions);\n+   ret = newSet.add(permission);\n+   this.permissions = newSet;\n+   updateStorage(storage);\n+  }\n+  return ret;\n+ }\r\n+\r\n+ /**\r\n+  * Removes permissions from the owner object and from the persistent storage.\r\n+  *\r\n+  * @param storage     A storage where the permission are saved for persistence.\r\n+  * @param permissions The permission to remove.\r\n+  * @return Returns the added Permission\r\n+  */\r\n+ //todo unsed?\n+\n+ public boolean removePermissions(MetaStorage storage, Set<ConqueryPermission> permissions) {\n+  boolean ret = false;\n+  synchronized (this) {\n+   Set<ConqueryPermission> newSet = new HashSet<>(this.permissions);\n+   ret = newSet.removeAll(permissions);\n+   this.permissions = newSet;\n+   updateStorage(storage);\n+  }\n+  return ret;\n+ }\n+\n+ public boolean removePermission(MetaStorage storage, Permission permission) {\n+  boolean ret = false;\n+  synchronized (this) {\n+   Set<ConqueryPermission> newSet = new HashSet<>(this.permissions);\n+   ret = newSet.remove(permission);\n+   this.permissions = newSet;\n+   updateStorage(storage);\n+  }\n+  return ret;\n+ }\r\n+\r\n+ /**\r\n+  * Returns a copy of the permissions hold by the owner.\r\n+  * Changes to the returned collection are not persisted and do not alter the\r\n+  * permissions owned.\r\n+  *\r\n+  * @return A set of the permissions hold by the owner.\r\n+  */\n+\n+ public Set<ConqueryPermission> getPermissions() {\n+  if (permissions.isEmpty()) {\n+   return Collections.emptySet();\n+  }\n+  return Collections.unmodifiableSet(permissions);\n+ }\n+\n+ public void setPermissions(MetaStorage storage, Set<ConqueryPermission> permissionsNew) {\n+  synchronized (this) {\n+   Set<ConqueryPermission> newSet = new HashSet<>(permissionsNew.size());\n+   newSet.addAll(permissionsNew);\n+   this.permissions = newSet;\n+   updateStorage(storage);\n+  }\n+ }\r\n+\r\n+ /**\r\n+  * Update this instance in the {@link MetaStorage}.\r\n+  */\n+\n+ protected abstract void updateStorage(MetaStorage storage);\n+\n+ @Override\n+ public int compareTo(PermissionOwner<?> other) {\n+  return COMPARATOR.compare(this, other);\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 156
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/606/PermissionOwner.java\nindex 3f9402e0e2b..944e5caeb77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/606/PermissionOwner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/606/PermissionOwner.java\n@@ -52,8 +52,9 @@ public abstract class PermissionOwner<T extends PermissionOwnerId<? extends Perm\n \tprotected String label;\r\n \r\n \t@ToString.Exclude\r\n-\t@Getter(AccessLevel.PRIVATE) // So only Jackson can use this to deserialize\r\n-\t@NotNull\r\n+\t@Getter(AccessLevel.PRIVATE)\r\n+\t\t// So only Jackson can use this to deserialize\r\n+\t\t@NotNull\r\n \tprivate Set<ConqueryPermission> permissions = new HashSet<>();\r\n \r\n \r\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "55",
                    "column": "34",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
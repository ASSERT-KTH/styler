{
    "project_name": "graphfoundation-ongdb",
    "error_id": "242",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/242/KernelDiagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/242/KernelDiagnostics.java\nindex e0d9d9f9ddf..46b2316d812 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/242/KernelDiagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/242/KernelDiagnostics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.internal;\n \n import java.io.File;\n@@ -38,154 +39,153 @@ import org.neo4j.logging.Logger;\n \n public abstract class KernelDiagnostics implements DiagnosticsProvider\n {\n-    public static class Versions extends KernelDiagnostics\n-    {\n-        private final DatabaseInfo databaseInfo;\n-        private final StoreId storeId;\n-\n-        public Versions( DatabaseInfo databaseInfo, StoreId storeId )\n-        {\n-            this.databaseInfo = databaseInfo;\n-            this.storeId = storeId;\n-        }\n+  public static class Versions extends KernelDiagnostics\n+  {\n+    private final DatabaseInfo databaseInfo;\n+    private final StoreId storeId;\n \n-        @Override\n-        void dump( Logger logger )\n-        {\n-            logger.log( \"Graph Database: \" + databaseInfo + \" \" + storeId );\n-            logger.log( \"Kernel version: \" + Version.getKernelVersion() );\n-        }\n+    public Versions(DatabaseInfo databaseInfo, StoreId storeId)\n+    {\n+      this.databaseInfo = databaseInfo;\n+      this.storeId = storeId;\n     }\n \n-    public static class StoreFiles extends KernelDiagnostics\n+    @Override\n+    void dump(Logger logger)\n     {\n-        private final File storeDir;\n-        private static String FORMAT_DATE_ISO = \"yyyy-MM-dd'T'HH:mm:ssZ\";\n-        private final SimpleDateFormat dateFormat;\n+      logger.log(\"Graph Database: \" + databaseInfo + \" \" + storeId);\n+      logger.log(\"Kernel version: \" + Version.getKernelVersion());\n+    }\n+  }\n \n-        public StoreFiles( File storeDir )\n-        {\n-            this.storeDir = storeDir;\n-            TimeZone tz = TimeZone.getDefault();\n-            dateFormat = new SimpleDateFormat( FORMAT_DATE_ISO );\n-            dateFormat.setTimeZone( tz );\n-        }\n+  public static class StoreFiles extends KernelDiagnostics\n+  {\n+    private final File storeDir;\n+    private static String FORMAT_DATE_ISO = \"yyyy-MM-dd'T'HH:mm:ssZ\";\n+    private final SimpleDateFormat dateFormat;\n \n-        @Override\n-        void dump( Logger logger )\n-        {\n-            logger.log( getDiskSpace( storeDir ) );\n-            logger.log( \"Storage files: (filename : modification date - size)\" );\n-            MappedFileCounter mappedCounter = new MappedFileCounter( storeDir );\n-            long totalSize = logStoreFiles( logger, \"  \", storeDir, mappedCounter );\n-            logger.log( \"Storage summary: \" );\n-            logger.log( \"  Total size of store: \" + Format.bytes( totalSize ) );\n-            logger.log( \"  Total size of mapped files: \" + Format.bytes( mappedCounter.getSize() ) );\n-        }\n+    public StoreFiles(File storeDir)\n+    {\n+      this.storeDir = storeDir;\n+      TimeZone tz = TimeZone.getDefault();\n+      dateFormat = new SimpleDateFormat(FORMAT_DATE_ISO);\n+      dateFormat.setTimeZone(tz);\n+    }\n \n-        private long logStoreFiles( Logger logger, String prefix, File dir, MappedFileCounter mappedCounter )\n-        {\n-            if ( !dir.isDirectory() )\n-            {\n-                return 0;\n-            }\n-            File[] files = dir.listFiles();\n-            if ( files == null )\n-            {\n-                logger.log( prefix + \"<INACCESSIBLE>\" );\n-                return 0;\n-            }\n-            long total = 0;\n-\n-            // Sort by name\n-            List<File> fileList = Arrays.asList( files );\n-            fileList.sort( Comparator.comparing( File::getName ) );\n-\n-            for ( File file : fileList )\n-            {\n-                long size;\n-                String filename = file.getName();\n-                if ( file.isDirectory() )\n-                {\n-                    logger.log( prefix + filename + \":\" );\n-                    size = logStoreFiles( logger, prefix + \"  \", file, mappedCounter );\n-                    filename = \"- Total\";\n-                }\n-                else\n-                {\n-                    size = file.length();\n-                    mappedCounter.addFile( file );\n-                }\n-\n-                String fileModificationDate = getFileModificationDate( file );\n-                String bytes = Format.bytes( size );\n-                String fileInformation = String.format( \"%s%s: %s - %s\", prefix, filename, fileModificationDate, bytes );\n-                logger.log( fileInformation );\n-\n-                total += size;\n-            }\n-            return total;\n-        }\n+    @Override\n+    void dump(Logger logger)\n+    {\n+      logger.log(getDiskSpace(storeDir));\n+      logger.log(\"Storage files: (filename : modification date - size)\");\n+      MappedFileCounter mappedCounter = new MappedFileCounter(storeDir);\n+      long totalSize = logStoreFiles(logger, \"  \", storeDir, mappedCounter);\n+      logger.log(\"Storage summary: \");\n+      logger.log(\"  Total size of store: \" + Format.bytes(totalSize));\n+      logger.log(\"  Total size of mapped files: \" + Format.bytes(mappedCounter.getSize()));\n+    }\n \n-        private String getFileModificationDate( File file )\n+    private long logStoreFiles(Logger logger, String prefix, File dir, MappedFileCounter mappedCounter)\n+    {\n+      if (!dir.isDirectory())\n+      {\n+        return 0;\n+      }\n+      File[] files = dir.listFiles();\n+      if (files == null)\n+      {\n+        logger.log(prefix + \"<INACCESSIBLE>\");\n+        return 0;\n+      }\n+      long total = 0;\n+\n+      // Sort by name\n+      List<File> fileList = Arrays.asList(files);\n+      fileList.sort(Comparator.comparing(File::getName));\n+\n+      for (File file : fileList)\n+      {\n+        long size;\n+        String filename = file.getName();\n+        if (file.isDirectory())\n         {\n-            Date modifiedDate = new Date( file.lastModified() );\n-            return dateFormat.format( modifiedDate );\n-        }\n-\n-        private String getDiskSpace( File storeDir )\n+          logger.log(prefix + filename + \":\");\n+          size = logStoreFiles(logger, prefix + \"  \", file, mappedCounter);\n+          filename = \"- Total\";\n+        } else\n         {\n-            long free = storeDir.getFreeSpace();\n-            long total = storeDir.getTotalSpace();\n-            long percentage = total != 0 ? (free * 100 / total) : 0;\n-            return String.format( \"Disk space on partition (Total / Free / Free %%): %s / %s / %s\", total, free, percentage );\n+          size = file.length();\n+          mappedCounter.addFile(file);\n         }\n \n-        private static class MappedFileCounter\n-        {\n-            private final FileFilter mappedIndexFilter;\n-            private long size;\n-\n-            MappedFileCounter( File storeDir )\n-            {\n-                mappedIndexFilter = new NativeIndexFileFilter( storeDir );\n-            }\n-\n-            void addFile( File file )\n-            {\n-                if ( StoreType.canBeManagedByPageCache( file.getName() ) || mappedIndexFilter.accept( file ) )\n-                {\n-                    size += file.length();\n-                }\n-            }\n-\n-            public long getSize()\n-            {\n-                return size;\n-            }\n-        }\n+        String fileModificationDate = getFileModificationDate(file);\n+        String bytes = Format.bytes(size);\n+        String fileInformation = String.format(\"%s%s: %s - %s\", prefix, filename, fileModificationDate, bytes);\n+        logger.log(fileInformation);\n+\n+        total += size;\n+      }\n+      return total;\n     }\n \n-    @Override\n-    public String getDiagnosticsIdentifier()\n+    private String getFileModificationDate(File file)\n     {\n-        return getClass().getDeclaringClass().getSimpleName() + \":\" + getClass().getSimpleName();\n+      Date modifiedDate = new Date(file.lastModified());\n+      return dateFormat.format(modifiedDate);\n     }\n \n-    @Override\n-    public void acceptDiagnosticsVisitor( Object visitor )\n+    private String getDiskSpace(File storeDir)\n     {\n-        // nothing visits ConfigurationLogging\n+      long free = storeDir.getFreeSpace();\n+      long total = storeDir.getTotalSpace();\n+      long percentage = total != 0 ? (free * 100 / total) : 0;\n+      return String.format(\"Disk space on partition (Total / Free / Free %%): %s / %s / %s\", total, free, percentage);\n     }\n \n-    @Override\n-    public void dump( DiagnosticsPhase phase, Logger log )\n+    private static class MappedFileCounter\n     {\n-        if ( phase.isInitialization() || phase.isExplicitlyRequested() )\n+      private final FileFilter mappedIndexFilter;\n+      private long size;\n+\n+      MappedFileCounter(File storeDir)\n+      {\n+        mappedIndexFilter = new NativeIndexFileFilter(storeDir);\n+      }\n+\n+      void addFile(File file)\n+      {\n+        if (StoreType.canBeManagedByPageCache(file.getName()) || mappedIndexFilter.accept(file))\n         {\n-            dump( log );\n+          size += file.length();\n         }\n+      }\n+\n+      public long getSize()\n+      {\n+        return size;\n+      }\n+    }\n+  }\n+\n+  @Override\n+  public String getDiagnosticsIdentifier()\n+  {\n+    return getClass().getDeclaringClass().getSimpleName() + \":\" + getClass().getSimpleName();\n+  }\n+\n+  @Override\n+  public void acceptDiagnosticsVisitor(Object visitor)\n+  {\n+    // nothing visits ConfigurationLogging\n+  }\n+\n+  @Override\n+  public void dump(DiagnosticsPhase phase, Logger log)\n+  {\n+    if (phase.isInitialization() || phase.isExplicitlyRequested())\n+    {\n+      dump(log);\n     }\n+  }\n \n-    abstract void dump( Logger logger );\n+  abstract void dump(Logger logger);\n }\n",
            "diff_size": 192
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/242/KernelDiagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/242/KernelDiagnostics.java\nindex e0d9d9f9ddf..dfbb1184d6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/242/KernelDiagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/242/KernelDiagnostics.java\n@@ -89,7 +89,8 @@ public abstract class KernelDiagnostics implements DiagnosticsProvider\n             {\n                 return 0;\n             }\n-            File[] files = dir.listFiles();\n+\n+File[] files = dir.listFiles();\n             if ( files == null )\n             {\n                 logger.log( prefix + \"<INACCESSIBLE>\" );\n@@ -100,8 +101,7 @@ public abstract class KernelDiagnostics implements DiagnosticsProvider\n             // Sort by name\n             List<File> fileList = Arrays.asList( files );\n             fileList.sort( Comparator.comparing( File::getName ) );\n-\n-            for ( File file : fileList )\n+for ( File file : fileList )\n             {\n                 long size;\n                 String filename = file.getName();\n@@ -121,10 +121,10 @@ public abstract class KernelDiagnostics implements DiagnosticsProvider\n                 String bytes = Format.bytes( size );\n                 String fileInformation = String.format( \"%s%s: %s - %s\", prefix, filename, fileModificationDate, bytes );\n                 logger.log( fileInformation );\n-\n-                total += size;\n+total += size;\n             }\n-            return total;\n+\n+return total;\n         }\n \n         private String getFileModificationDate( File file )\n@@ -137,7 +137,7 @@ public abstract class KernelDiagnostics implements DiagnosticsProvider\n         {\n             long free = storeDir.getFreeSpace();\n             long total = storeDir.getTotalSpace();\n-            long percentage = total != 0 ? (free * 100 / total) : 0;\n+            long percentage = total != 0 ? ( free * 100 / total) : 0;\n             return String.format( \"Disk space on partition (Total / Free / Free %%): %s / %s / %s\", total, free, percentage );\n         }\n \n@@ -188,4 +188,4 @@ public abstract class KernelDiagnostics implements DiagnosticsProvider\n     }\n \n     abstract void dump( Logger logger );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
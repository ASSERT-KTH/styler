{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2803",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2803/LogIndexTxHeaderEncoding.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2803/LogIndexTxHeaderEncoding.java\nindex b97d867ec1d..6cce4463409 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2803/LogIndexTxHeaderEncoding.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2803/LogIndexTxHeaderEncoding.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.tx;\n \n /**\n@@ -24,35 +25,35 @@ package org.neo4j.causalclustering.core.state.machines.tx;\n  */\n public class LogIndexTxHeaderEncoding\n {\n-    private LogIndexTxHeaderEncoding()\n+  private LogIndexTxHeaderEncoding()\n+  {\n+  }\n+\n+  public static byte[] encodeLogIndexAsTxHeader(long logIndex)\n+  {\n+    byte[] b = new byte[Long.BYTES];\n+    for (int i = Long.BYTES - 1; i > 0; i--)\n     {\n+      b[i] = (byte) logIndex;\n+      logIndex >>>= Byte.SIZE;\n     }\n+    b[0] = (byte) logIndex;\n+    return b;\n+  }\n \n-    public static byte[] encodeLogIndexAsTxHeader( long logIndex )\n+  public static long decodeLogIndexFromTxHeader(byte[] bytes)\n+  {\n+    if (bytes.length < Long.BYTES)\n     {\n-        byte[] b = new byte[Long.BYTES];\n-        for ( int i = Long.BYTES - 1; i > 0; i-- )\n-        {\n-            b[i] = (byte) logIndex;\n-            logIndex >>>= Byte.SIZE;\n-        }\n-        b[0] = (byte) logIndex;\n-        return b;\n+      throw new IllegalArgumentException(\"Unable to decode RAFT log index from transaction header\");\n     }\n \n-    public static long decodeLogIndexFromTxHeader( byte[] bytes )\n+    long logIndex = 0;\n+    for (int i = 0; i < Long.BYTES; i++)\n     {\n-        if ( bytes.length < Long.BYTES )\n-        {\n-            throw new IllegalArgumentException( \"Unable to decode RAFT log index from transaction header\" );\n-        }\n-\n-        long logIndex = 0;\n-        for ( int i = 0; i < Long.BYTES; i++ )\n-        {\n-            logIndex <<= Byte.SIZE;\n-            logIndex ^= bytes[i] & 0xFF;\n-        }\n-        return logIndex;\n+      logIndex <<= Byte.SIZE;\n+      logIndex ^= bytes[i] & 0xFF;\n     }\n+    return logIndex;\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2803/LogIndexTxHeaderEncoding.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2803/LogIndexTxHeaderEncoding.java\nindex b97d867ec1d..fac5695aeec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2803/LogIndexTxHeaderEncoding.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2803/LogIndexTxHeaderEncoding.java\n@@ -36,7 +36,8 @@ public class LogIndexTxHeaderEncoding\n             b[i] = (byte) logIndex;\n             logIndex >>>= Byte.SIZE;\n         }\n-        b[0] = (byte) logIndex;\n+\n+b[0] = (byte) logIndex;\n         return b;\n     }\n \n@@ -53,6 +54,7 @@ public class LogIndexTxHeaderEncoding\n             logIndex <<= Byte.SIZE;\n             logIndex ^= bytes[i] & 0xFF;\n         }\n-        return logIndex;\n+\n+return logIndex;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
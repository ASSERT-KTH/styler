{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3641",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3641/HttpMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3641/HttpMethod.java\nindex 37a731151ba..a0daab61bea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3641/HttpMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3641/HttpMethod.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import java.util.HashMap;\n@@ -27,32 +28,32 @@ import static java.util.Collections.unmodifiableMap;\n \n public enum HttpMethod\n {\n-    OPTIONS,\n-    GET,\n-    HEAD,\n-    POST,\n-    PUT,\n-    PATCH,\n-    DELETE,\n-    TRACE,\n-    CONNECT;\n+  OPTIONS,\n+  GET,\n+  HEAD,\n+  POST,\n+  PUT,\n+  PATCH,\n+  DELETE,\n+  TRACE,\n+  CONNECT;\n \n-    private static final Map<String,HttpMethod> methodsByName = indexMethodsByName();\n+  private static final Map<String, HttpMethod> methodsByName = indexMethodsByName();\n \n-    @Nullable\n-    public static HttpMethod valueOfOrNull( String name )\n-    {\n-        return methodsByName.get( name );\n-    }\n+  @Nullable\n+  public static HttpMethod valueOfOrNull(String name)\n+  {\n+    return methodsByName.get(name);\n+  }\n \n-    private static Map<String,HttpMethod> indexMethodsByName()\n+  private static Map<String, HttpMethod> indexMethodsByName()\n+  {\n+    HttpMethod[] methods = HttpMethod.values();\n+    Map<String, HttpMethod> result = new HashMap<>(methods.length * 2);\n+    for (HttpMethod method : methods)\n     {\n-        HttpMethod[] methods = HttpMethod.values();\n-        Map<String,HttpMethod> result = new HashMap<>( methods.length * 2 );\n-        for ( HttpMethod method : methods )\n-        {\n-            result.put( method.name(), method );\n-        }\n-        return unmodifiableMap( result );\n+      result.put(method.name(), method);\n     }\n+    return unmodifiableMap(result);\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3641/HttpMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3641/HttpMethod.java\nindex 37a731151ba..caf8f35d097 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3641/HttpMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3641/HttpMethod.java\n@@ -27,14 +27,7 @@ import static java.util.Collections.unmodifiableMap;\n \n public enum HttpMethod\n {\n-    OPTIONS,\n-    GET,\n-    HEAD,\n-    POST,\n-    PUT,\n-    PATCH,\n-    DELETE,\n-    TRACE,\n+    OPTIONS, GET, HEAD, POST, PUT, PATCH, DELETE, TRACE,\n     CONNECT;\n \n     private static final Map<String,HttpMethod> methodsByName = indexMethodsByName();\n@@ -53,6 +46,7 @@ public enum HttpMethod\n         {\n             result.put( method.name(), method );\n         }\n-        return unmodifiableMap( result );\n+\n+return unmodifiableMap( result );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
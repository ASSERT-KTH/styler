{
    "project_name": "neo4j-neo4j",
    "error_id": "2471",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "177",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "229",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "286",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "318",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2471/SchemaCalculator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2471/SchemaCalculator.java\nindex f59c3fc851e..3b778788ddf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2471/SchemaCalculator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2471/SchemaCalculator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.builtin;\n \n import org.eclipse.collections.api.set.primitive.MutableIntSet;\n@@ -48,7 +49,7 @@ import org.neo4j.values.storable.Value;\n \n public class SchemaCalculator\n {\n-    private Map<Integer,String> propertyIdToPropertyNameMapping;\n+    private Map<Integer, String> propertyIdToPropertyNameMapping;\n \n     private final MutableIntSet emptyPropertyIdSet = IntSets.mutable.empty();\n \n@@ -58,7 +59,7 @@ public class SchemaCalculator\n     private final PageCursorTracer cursorTracer;\n     private final MemoryTracker memoryTracker;\n \n-    SchemaCalculator( KernelTransaction ktx )\n+    SchemaCalculator(KernelTransaction ktx)\n     {\n         this.dataRead = ktx.dataRead();\n         this.tokenRead = ktx.tokenRead();\n@@ -67,266 +68,259 @@ public class SchemaCalculator\n         this.memoryTracker = ktx.memoryTracker();\n \n         // the only one that is common for both nodes and rels so thats why we can do it here\n-        propertyIdToPropertyNameMapping = new HashMap<>( tokenRead.propertyKeyCount() );\n-        addNamesToCollection( tokenRead.propertyKeyGetAllTokens(), propertyIdToPropertyNameMapping );\n+        propertyIdToPropertyNameMapping = new HashMap<>(tokenRead.propertyKeyCount());\n+        addNamesToCollection(tokenRead.propertyKeyGetAllTokens(), propertyIdToPropertyNameMapping);\n     }\n \n     private NodeMappings initializeMappingsForNodes()\n     {\n         int labelCount = tokenRead.labelCount();\n-        return new NodeMappings( labelCount );\n+        return new NodeMappings(labelCount);\n     }\n \n     private RelationshipMappings initializeMappingsForRels()\n     {\n         int relationshipTypeCount = tokenRead.relationshipTypeCount();\n-        return new RelationshipMappings( relationshipTypeCount );\n+        return new RelationshipMappings(relationshipTypeCount);\n     }\n \n     // If we would have this schema information in the count store (or somewhere), this could be super fast\n     public Stream<NodePropertySchemaInfoResult> calculateTabularResultStreamForNodes()\n     {\n         NodeMappings nodeMappings = initializeMappingsForNodes();\n-        scanEverythingBelongingToNodes( nodeMappings, cursorTracer, memoryTracker );\n+        scanEverythingBelongingToNodes(nodeMappings, cursorTracer, memoryTracker);\n \n         // go through all labels to get actual names\n-        addNamesToCollection( tokenRead.labelsGetAllTokens(), nodeMappings.labelIdToLabelName );\n+        addNamesToCollection(tokenRead.labelsGetAllTokens(), nodeMappings.labelIdToLabelName);\n \n-        return produceResultsForNodes( nodeMappings ).stream();\n+        return produceResultsForNodes(nodeMappings).stream();\n     }\n \n     public Stream<RelationshipPropertySchemaInfoResult> calculateTabularResultStreamForRels()\n     {\n         RelationshipMappings relMappings = initializeMappingsForRels();\n-        scanEverythingBelongingToRelationships( relMappings, cursorTracer, memoryTracker );\n+        scanEverythingBelongingToRelationships(relMappings, cursorTracer, memoryTracker);\n \n         // go through all relationshipTypes to get actual names\n-        addNamesToCollection( tokenRead.relationshipTypesGetAllTokens(), relMappings.relationshipTypIdToRelationshipName );\n+        addNamesToCollection(tokenRead.relationshipTypesGetAllTokens(), relMappings.relationshipTypIdToRelationshipName);\n \n-        return produceResultsForRelationships( relMappings ).stream();\n+        return produceResultsForRelationships(relMappings).stream();\n     }\n \n-    private List<RelationshipPropertySchemaInfoResult> produceResultsForRelationships( RelationshipMappings relMappings )\n+    private List<RelationshipPropertySchemaInfoResult> produceResultsForRelationships(RelationshipMappings relMappings)\n     {\n         List<RelationshipPropertySchemaInfoResult> results = new ArrayList<>();\n-        for ( Integer typeId : relMappings.relationshipTypeIdToPropertyKeys.keySet() )\n+        for (Integer typeId : relMappings.relationshipTypeIdToPropertyKeys.keySet())\n         {\n             // lookup typ name\n-            String name = relMappings.relationshipTypIdToRelationshipName.get( typeId );\n+            String name = relMappings.relationshipTypIdToRelationshipName.get(typeId);\n             name = \":`\" + name + \"`\";  // escaping\n \n             // lookup property value types\n-            MutableIntSet propertyIds = relMappings.relationshipTypeIdToPropertyKeys.get( typeId );\n-            if ( propertyIds.size() == 0 )\n+            MutableIntSet propertyIds = relMappings.relationshipTypeIdToPropertyKeys.get(typeId);\n+            if (propertyIds.size() == 0)\n             {\n-                results.add( new RelationshipPropertySchemaInfoResult( name, null, null, false ) );\n-            }\n-            else\n+                results.add(new RelationshipPropertySchemaInfoResult(name, null, null, false));\n+            } else\n             {\n                 String finalName = name;\n-                propertyIds.forEach( propId -> {\n+                propertyIds.forEach(propId -> {\n                     // lookup propId name and valueGroup\n-                    String propName = propertyIdToPropertyNameMapping.get( propId );\n-                    ValueTypeListHelper valueTypeListHelper = relMappings.relationshipTypeIdANDPropertyTypeIdToValueType.get( Pair.of( typeId, propId ) );\n-                    if ( relMappings.nullableRelationshipTypes.contains( typeId ) )\n+                    String propName = propertyIdToPropertyNameMapping.get(propId);\n+                    ValueTypeListHelper valueTypeListHelper = relMappings.relationshipTypeIdANDPropertyTypeIdToValueType.get(Pair.of(typeId, propId));\n+                    if (relMappings.nullableRelationshipTypes.contains(typeId))\n                     {\n-                        results.add( new RelationshipPropertySchemaInfoResult( finalName, propName, valueTypeListHelper.getCypherTypesList(),\n-                                false ) );\n-                    }\n-                    else\n+                        results.add(new RelationshipPropertySchemaInfoResult(finalName, propName, valueTypeListHelper.getCypherTypesList(),\n+                          false));\n+                    } else\n                     {\n-                        results.add( new RelationshipPropertySchemaInfoResult( finalName, propName, valueTypeListHelper.getCypherTypesList(),\n-                                valueTypeListHelper.isMandatory() ) );\n+                        results.add(new RelationshipPropertySchemaInfoResult(finalName, propName, valueTypeListHelper.getCypherTypesList(),\n+                          valueTypeListHelper.isMandatory()));\n                     }\n-                } );\n+                });\n             }\n         }\n         return results;\n     }\n \n-    private List<NodePropertySchemaInfoResult> produceResultsForNodes( NodeMappings nodeMappings )\n+    private List<NodePropertySchemaInfoResult> produceResultsForNodes(NodeMappings nodeMappings)\n     {\n         List<NodePropertySchemaInfoResult> results = new ArrayList<>();\n-        for ( SortedLabels labelSet : nodeMappings.labelSetToPropertyKeys.keySet() )\n+        for (SortedLabels labelSet : nodeMappings.labelSetToPropertyKeys.keySet())\n         {\n             // lookup label names and produce list of names and produce String out of them\n             List<String> labelNames = new ArrayList<>();\n-            for ( int i = 0; i < labelSet.numberOfLabels(); i++ )\n+            for (int i = 0; i < labelSet.numberOfLabels(); i++)\n             {\n-                String name = nodeMappings.labelIdToLabelName.get( labelSet.label( i ) );\n-                labelNames.add( name );\n+                String name = nodeMappings.labelIdToLabelName.get(labelSet.label(i));\n+                labelNames.add(name);\n             }\n-            Collections.sort( labelNames );  // this is optional but waaaaay nicer\n+            Collections.sort(labelNames);  // this is optional but waaaaay nicer\n             StringBuilder labelsConcatenator = new StringBuilder();\n-            for ( String item : labelNames )\n+            for (String item : labelNames)\n             {\n-                labelsConcatenator.append( \":`\" ).append( item ).append( '`' );\n+                labelsConcatenator.append(\":`\").append(item).append('`');\n             }\n             String labels = labelsConcatenator.toString();\n \n             // lookup property value types\n-            MutableIntSet propertyIds = nodeMappings.labelSetToPropertyKeys.get( labelSet );\n-            if ( propertyIds.size() == 0 )\n+            MutableIntSet propertyIds = nodeMappings.labelSetToPropertyKeys.get(labelSet);\n+            if (propertyIds.size() == 0)\n             {\n-                results.add( new NodePropertySchemaInfoResult( labels, labelNames, null, null, false ) );\n-            }\n-            else\n+                results.add(new NodePropertySchemaInfoResult(labels, labelNames, null, null, false));\n+            } else\n             {\n-                propertyIds.forEach( propId -> {\n+                propertyIds.forEach(propId -> {\n                     // lookup propId name and valueGroup\n-                    String propName = propertyIdToPropertyNameMapping.get( propId );\n-                    ValueTypeListHelper valueTypeListHelper = nodeMappings.labelSetANDNodePropertyKeyIdToValueType.get( Pair.of( labelSet, propId ) );\n-                    if ( nodeMappings.nullableLabelSets.contains( labelSet ) )\n+                    String propName = propertyIdToPropertyNameMapping.get(propId);\n+                    ValueTypeListHelper valueTypeListHelper = nodeMappings.labelSetANDNodePropertyKeyIdToValueType.get(Pair.of(labelSet, propId));\n+                    if (nodeMappings.nullableLabelSets.contains(labelSet))\n                     {\n-                        results.add( new NodePropertySchemaInfoResult( labels, labelNames, propName, valueTypeListHelper.getCypherTypesList(), false ) );\n-                    }\n-                    else\n+                        results.add(new NodePropertySchemaInfoResult(labels, labelNames, propName, valueTypeListHelper.getCypherTypesList(), false));\n+                    } else\n                     {\n-                        results.add( new NodePropertySchemaInfoResult( labels, labelNames, propName, valueTypeListHelper.getCypherTypesList(),\n-                                valueTypeListHelper.isMandatory() ) );\n+                        results.add(new NodePropertySchemaInfoResult(labels, labelNames, propName, valueTypeListHelper.getCypherTypesList(),\n+                          valueTypeListHelper.isMandatory()));\n                     }\n-                } );\n+                });\n             }\n         }\n         return results;\n     }\n \n-    private void scanEverythingBelongingToRelationships( RelationshipMappings relMappings, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    private void scanEverythingBelongingToRelationships(RelationshipMappings relMappings, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        try ( RelationshipScanCursor relationshipScanCursor = cursors.allocateRelationshipScanCursor( cursorTracer );\n-                PropertyCursor propertyCursor = cursors.allocatePropertyCursor( cursorTracer, memoryTracker ) )\n+        try (RelationshipScanCursor relationshipScanCursor = cursors.allocateRelationshipScanCursor(cursorTracer);\n+             PropertyCursor propertyCursor = cursors.allocatePropertyCursor(cursorTracer, memoryTracker))\n         {\n-            dataRead.allRelationshipsScan( relationshipScanCursor );\n-            while ( relationshipScanCursor.next() )\n+            dataRead.allRelationshipsScan(relationshipScanCursor);\n+            while (relationshipScanCursor.next())\n             {\n                 int typeId = relationshipScanCursor.type();\n-                relationshipScanCursor.properties( propertyCursor );\n+                relationshipScanCursor.properties(propertyCursor);\n                 MutableIntSet propertyIds = IntSets.mutable.empty();\n \n-                while ( propertyCursor.next() )\n+                while (propertyCursor.next())\n                 {\n                     int propertyKey = propertyCursor.propertyKey();\n \n                     Value currentValue = propertyCursor.propertyValue();\n-                    Pair<Integer,Integer> key = Pair.of( typeId, propertyKey );\n-                    updateValueTypeInMapping( currentValue, key, relMappings.relationshipTypeIdANDPropertyTypeIdToValueType );\n+                    Pair<Integer, Integer> key = Pair.of(typeId, propertyKey);\n+                    updateValueTypeInMapping(currentValue, key, relMappings.relationshipTypeIdANDPropertyTypeIdToValueType);\n \n-                    propertyIds.add( propertyKey );\n+                    propertyIds.add(propertyKey);\n                 }\n                 propertyCursor.close();\n \n-                MutableIntSet oldPropertyKeySet = relMappings.relationshipTypeIdToPropertyKeys.getOrDefault( typeId, emptyPropertyIdSet );\n+                MutableIntSet oldPropertyKeySet = relMappings.relationshipTypeIdToPropertyKeys.getOrDefault(typeId, emptyPropertyIdSet);\n \n                 // find out which old properties we did not visited and mark them as nullable\n-                if ( oldPropertyKeySet == emptyPropertyIdSet )\n+                if (oldPropertyKeySet == emptyPropertyIdSet)\n                 {\n-                    if ( propertyIds.size() == 0 )\n+                    if (propertyIds.size() == 0)\n                     {\n                         // Even if we find property key on other rels with this type, set all of them nullable\n-                        relMappings.nullableRelationshipTypes.add( typeId );\n+                        relMappings.nullableRelationshipTypes.add(typeId);\n                     }\n \n-                    propertyIds.addAll( oldPropertyKeySet );\n-                }\n-                else\n+                    propertyIds.addAll(oldPropertyKeySet);\n+                } else\n                 {\n-                    MutableIntSet currentPropertyIdsHelperSet = new IntHashSet( propertyIds.size() );\n-                    currentPropertyIdsHelperSet.addAll( propertyIds );\n-                    propertyIds.removeAll( oldPropertyKeySet );  // only the brand new ones in propIds now\n-                    oldPropertyKeySet.removeAll( currentPropertyIdsHelperSet );  // only the old ones that are not on the new rel\n-\n-                    propertyIds.addAll( oldPropertyKeySet );\n-                    propertyIds.forEach( id -> {\n-                        Pair<Integer,Integer> key = Pair.of( typeId, id );\n-                        relMappings.relationshipTypeIdANDPropertyTypeIdToValueType.get( key ).setNullable();\n-                    } );\n-\n-                    propertyIds.addAll( currentPropertyIdsHelperSet );\n+                    MutableIntSet currentPropertyIdsHelperSet = new IntHashSet(propertyIds.size());\n+                    currentPropertyIdsHelperSet.addAll(propertyIds);\n+                    propertyIds.removeAll(oldPropertyKeySet);  // only the brand new ones in propIds now\n+                    oldPropertyKeySet.removeAll(currentPropertyIdsHelperSet);  // only the old ones that are not on the new rel\n+\n+                    propertyIds.addAll(oldPropertyKeySet);\n+                    propertyIds.forEach(id -> {\n+                        Pair<Integer, Integer> key = Pair.of(typeId, id);\n+                        relMappings.relationshipTypeIdANDPropertyTypeIdToValueType.get(key).setNullable();\n+                    });\n+\n+                    propertyIds.addAll(currentPropertyIdsHelperSet);\n                 }\n \n-                relMappings.relationshipTypeIdToPropertyKeys.put( typeId, propertyIds );\n+                relMappings.relationshipTypeIdToPropertyKeys.put(typeId, propertyIds);\n             }\n         }\n     }\n \n-    private void scanEverythingBelongingToNodes( NodeMappings nodeMappings, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    private void scanEverythingBelongingToNodes(NodeMappings nodeMappings, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        try ( NodeCursor nodeCursor = cursors.allocateNodeCursor( cursorTracer );\n-                PropertyCursor propertyCursor = cursors.allocatePropertyCursor( cursorTracer, memoryTracker ) )\n+        try (NodeCursor nodeCursor = cursors.allocateNodeCursor(cursorTracer);\n+             PropertyCursor propertyCursor = cursors.allocatePropertyCursor(cursorTracer, memoryTracker))\n         {\n-            dataRead.allNodesScan( nodeCursor );\n-            while ( nodeCursor.next() )\n+            dataRead.allNodesScan(nodeCursor);\n+            while (nodeCursor.next())\n             {\n                 // each node\n-                SortedLabels labels = SortedLabels.from( nodeCursor.labels() );\n-                nodeCursor.properties( propertyCursor );\n+                SortedLabels labels = SortedLabels.from(nodeCursor.labels());\n+                nodeCursor.properties(propertyCursor);\n                 MutableIntSet propertyIds = IntSets.mutable.empty();\n \n-                while ( propertyCursor.next() )\n+                while (propertyCursor.next())\n                 {\n                     Value currentValue = propertyCursor.propertyValue();\n                     int propertyKeyId = propertyCursor.propertyKey();\n-                    Pair<SortedLabels,Integer> key = Pair.of( labels, propertyKeyId );\n-                    updateValueTypeInMapping( currentValue, key, nodeMappings.labelSetANDNodePropertyKeyIdToValueType );\n+                    Pair<SortedLabels, Integer> key = Pair.of(labels, propertyKeyId);\n+                    updateValueTypeInMapping(currentValue, key, nodeMappings.labelSetANDNodePropertyKeyIdToValueType);\n \n-                    propertyIds.add( propertyKeyId );\n+                    propertyIds.add(propertyKeyId);\n                 }\n                 propertyCursor.close();\n \n-                MutableIntSet oldPropertyKeySet = nodeMappings.labelSetToPropertyKeys.getOrDefault( labels, emptyPropertyIdSet );\n+                MutableIntSet oldPropertyKeySet = nodeMappings.labelSetToPropertyKeys.getOrDefault(labels, emptyPropertyIdSet);\n \n                 // find out which old properties we did not visited and mark them as nullable\n-                if ( oldPropertyKeySet == emptyPropertyIdSet )\n+                if (oldPropertyKeySet == emptyPropertyIdSet)\n                 {\n-                    if ( propertyIds.size() == 0 )\n+                    if (propertyIds.size() == 0)\n                     {\n                         // Even if we find property key on other nodes with those labels, set all of them nullable\n-                        nodeMappings.nullableLabelSets.add( labels );\n+                        nodeMappings.nullableLabelSets.add(labels);\n                     }\n \n-                    propertyIds.addAll( oldPropertyKeySet );\n-                }\n-                else\n+                    propertyIds.addAll(oldPropertyKeySet);\n+                } else\n                 {\n-                    MutableIntSet currentPropertyIdsHelperSet = new IntHashSet( propertyIds.size() );\n-                    currentPropertyIdsHelperSet.addAll( propertyIds );\n-                    propertyIds.removeAll( oldPropertyKeySet );  // only the brand new ones in propIds now\n-                    oldPropertyKeySet.removeAll( currentPropertyIdsHelperSet );  // only the old ones that are not on the new node\n-\n-                    propertyIds.addAll( oldPropertyKeySet );\n-                    propertyIds.forEach( id -> {\n-                        Pair<SortedLabels,Integer> key = Pair.of( labels, id );\n-                        nodeMappings.labelSetANDNodePropertyKeyIdToValueType.get( key ).setNullable();\n-                    } );\n-\n-                    propertyIds.addAll( currentPropertyIdsHelperSet );\n+                    MutableIntSet currentPropertyIdsHelperSet = new IntHashSet(propertyIds.size());\n+                    currentPropertyIdsHelperSet.addAll(propertyIds);\n+                    propertyIds.removeAll(oldPropertyKeySet);  // only the brand new ones in propIds now\n+                    oldPropertyKeySet.removeAll(currentPropertyIdsHelperSet);  // only the old ones that are not on the new node\n+\n+                    propertyIds.addAll(oldPropertyKeySet);\n+                    propertyIds.forEach(id -> {\n+                        Pair<SortedLabels, Integer> key = Pair.of(labels, id);\n+                        nodeMappings.labelSetANDNodePropertyKeyIdToValueType.get(key).setNullable();\n+                    });\n+\n+                    propertyIds.addAll(currentPropertyIdsHelperSet);\n                 }\n \n-                nodeMappings.labelSetToPropertyKeys.put( labels, propertyIds );\n+                nodeMappings.labelSetToPropertyKeys.put(labels, propertyIds);\n             }\n         }\n     }\n \n-    private <X, Y> void updateValueTypeInMapping( Value currentValue, Pair<X,Y> key, Map<Pair<X,Y>,ValueTypeListHelper> mappingToUpdate )\n+    private <X, Y> void updateValueTypeInMapping(Value currentValue, Pair<X, Y> key, Map<Pair<X, Y>, ValueTypeListHelper> mappingToUpdate)\n     {\n-        ValueTypeListHelper helper = mappingToUpdate.get( key );\n-        if ( helper == null )\n+        ValueTypeListHelper helper = mappingToUpdate.get(key);\n+        if (helper == null)\n         {\n-            helper = new ValueTypeListHelper( currentValue );\n-            mappingToUpdate.put( key, helper );\n-        }\n-        else\n+            helper = new ValueTypeListHelper(currentValue);\n+            mappingToUpdate.put(key, helper);\n+        } else\n         {\n-            helper.updateValueTypesWith( currentValue );\n+            helper.updateValueTypesWith(currentValue);\n         }\n     }\n \n-    private void addNamesToCollection( Iterator<NamedToken> labelIterator, Map<Integer,String> collection )\n+    private void addNamesToCollection(Iterator<NamedToken> labelIterator, Map<Integer, String> collection)\n     {\n-        while ( labelIterator.hasNext() )\n+        while (labelIterator.hasNext())\n         {\n             NamedToken label = labelIterator.next();\n-            collection.put( label.id(), label.name() );\n+            collection.put(label.id(), label.name());\n         }\n     }\n \n@@ -335,15 +329,15 @@ public class SchemaCalculator\n         private final Set<String> seenValueTypes;\n         private boolean isMandatory = true;\n \n-        ValueTypeListHelper( Value v )\n+        ValueTypeListHelper(Value v)\n         {\n             seenValueTypes = new HashSet<>();\n-            updateValueTypesWith( v );\n+            updateValueTypesWith(v);\n         }\n \n         private void setNullable()\n         {\n-                isMandatory = false;\n+            isMandatory = false;\n         }\n \n         public boolean isMandatory()\n@@ -353,16 +347,16 @@ public class SchemaCalculator\n \n         List<String> getCypherTypesList()\n         {\n-            return new ArrayList<>( seenValueTypes );\n+            return new ArrayList<>(seenValueTypes);\n         }\n \n-        void updateValueTypesWith( Value newValue )\n+        void updateValueTypesWith(Value newValue)\n         {\n-            if ( newValue == null )\n+            if (newValue == null)\n             {\n                 throw new IllegalArgumentException();\n             }\n-            seenValueTypes.add( newValue.getTypeName() );\n+            seenValueTypes.add(newValue.getTypeName());\n         }\n     }\n \n@@ -371,15 +365,15 @@ public class SchemaCalculator\n      */\n     private static class NodeMappings\n     {\n-        final Map<SortedLabels,MutableIntSet> labelSetToPropertyKeys;\n-        final Map<Pair<SortedLabels,Integer>,ValueTypeListHelper> labelSetANDNodePropertyKeyIdToValueType;\n+        final Map<SortedLabels, MutableIntSet> labelSetToPropertyKeys;\n+        final Map<Pair<SortedLabels, Integer>, ValueTypeListHelper> labelSetANDNodePropertyKeyIdToValueType;\n         final Set<SortedLabels> nullableLabelSets; // used for label combinations without properties -> all properties are viewed as nullable\n-        final Map<Integer,String> labelIdToLabelName;\n+        final Map<Integer, String> labelIdToLabelName;\n \n-        NodeMappings( int labelCount )\n+        NodeMappings(int labelCount)\n         {\n-            labelSetToPropertyKeys = new HashMap<>( labelCount );\n-            labelIdToLabelName = new HashMap<>( labelCount );\n+            labelSetToPropertyKeys = new HashMap<>(labelCount);\n+            labelIdToLabelName = new HashMap<>(labelCount);\n             labelSetANDNodePropertyKeyIdToValueType = new HashMap<>();\n             nullableLabelSets = new HashSet<>();\n         }\n@@ -390,15 +384,15 @@ public class SchemaCalculator\n      */\n     private static class RelationshipMappings\n     {\n-        final Map<Integer,String> relationshipTypIdToRelationshipName;\n-        final Map<Integer,MutableIntSet> relationshipTypeIdToPropertyKeys;\n-        final Map<Pair<Integer,Integer>,ValueTypeListHelper> relationshipTypeIdANDPropertyTypeIdToValueType;\n+        final Map<Integer, String> relationshipTypIdToRelationshipName;\n+        final Map<Integer, MutableIntSet> relationshipTypeIdToPropertyKeys;\n+        final Map<Pair<Integer, Integer>, ValueTypeListHelper> relationshipTypeIdANDPropertyTypeIdToValueType;\n         final Set<Integer> nullableRelationshipTypes; // used for types without properties -> all properties are viewed as nullable\n \n-        RelationshipMappings( int relationshipTypeCount )\n+        RelationshipMappings(int relationshipTypeCount)\n         {\n-            relationshipTypIdToRelationshipName = new HashMap<>( relationshipTypeCount );\n-            relationshipTypeIdToPropertyKeys = new HashMap<>( relationshipTypeCount );\n+            relationshipTypIdToRelationshipName = new HashMap<>(relationshipTypeCount);\n+            relationshipTypeIdToPropertyKeys = new HashMap<>(relationshipTypeCount);\n             relationshipTypeIdANDPropertyTypeIdToValueType = new HashMap<>();\n             nullableRelationshipTypes = new HashSet<>();\n         }\n",
            "diff_size": 146
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2471/SchemaCalculator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2471/SchemaCalculator.java\nindex f59c3fc851e..6a446310f1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2471/SchemaCalculator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2471/SchemaCalculator.java\n@@ -343,8 +343,8 @@ public class SchemaCalculator\n \n         private void setNullable()\n         {\n-                isMandatory = false;\n-        }\n+    isMandatory = false;\n+    }\n \n         public boolean isMandatory()\n         {\n@@ -403,4 +403,4 @@ public class SchemaCalculator\n             nullableRelationshipTypes = new HashSet<>();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
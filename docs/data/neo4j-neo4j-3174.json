{
    "project_name": "neo4j-neo4j",
    "error_id": "3174",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "99",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "188",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "193",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "204",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "247",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "158",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "321",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "325",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "340",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3174/FulltextIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3174/FulltextIndexProvider.java\nindex d3b8c257b6b..5bcabbe5eba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3174/FulltextIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3174/FulltextIndexProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import org.apache.commons.lang3.StringUtils;\n@@ -95,34 +96,35 @@ public class FulltextIndexProvider extends IndexProvider implements FulltextAdap\n     private final IndexUpdateSink indexUpdateSink;\n     private final IndexStorageFactory indexStorageFactory;\n \n-    public FulltextIndexProvider( IndexProviderDescriptor descriptor, IndexDirectoryStructure.Factory directoryStructureFactory,\n-            FileSystemAbstraction fileSystem, Config config, TokenHolders tokenHolders, DirectoryFactory directoryFactory, boolean isSingleInstance,\n-            JobScheduler scheduler, Log log )\n+    public FulltextIndexProvider(IndexProviderDescriptor descriptor, IndexDirectoryStructure.Factory directoryStructureFactory,\n+                                 FileSystemAbstraction fileSystem, Config config, TokenHolders tokenHolders, DirectoryFactory directoryFactory,\n+                                 boolean isSingleInstance,\n+                                 JobScheduler scheduler, Log log)\n     {\n-        super( descriptor, directoryStructureFactory );\n+        super(descriptor, directoryStructureFactory);\n         this.fileSystem = fileSystem;\n         this.config = config;\n         this.tokenHolders = tokenHolders;\n         this.isSingleInstance = isSingleInstance;\n         this.log = log;\n \n-        defaultAnalyzerName = config.get( FulltextSettings.fulltext_default_analyzer );\n-        defaultEventuallyConsistentSetting = config.get( FulltextSettings.eventually_consistent );\n-        indexUpdateSink = new IndexUpdateSink( scheduler, config.get( FulltextSettings.eventually_consistent_index_update_queue_max_length ) );\n-        indexStorageFactory = buildIndexStorageFactory( fileSystem, directoryFactory, directoryStructure() );\n+        defaultAnalyzerName = config.get(FulltextSettings.fulltext_default_analyzer);\n+        defaultEventuallyConsistentSetting = config.get(FulltextSettings.eventually_consistent);\n+        indexUpdateSink = new IndexUpdateSink(scheduler, config.get(FulltextSettings.eventually_consistent_index_update_queue_max_length));\n+        indexStorageFactory = buildIndexStorageFactory(fileSystem, directoryFactory, directoryStructure());\n     }\n \n-    private static IndexStorageFactory buildIndexStorageFactory( FileSystemAbstraction fileSystem, DirectoryFactory directoryFactory,\n-            IndexDirectoryStructure structure )\n+    private static IndexStorageFactory buildIndexStorageFactory(FileSystemAbstraction fileSystem, DirectoryFactory directoryFactory,\n+                                                                IndexDirectoryStructure structure)\n     {\n-        return new IndexStorageFactory( directoryFactory, fileSystem, structure );\n+        return new IndexStorageFactory(directoryFactory, fileSystem, structure);\n     }\n \n-    private boolean indexIsOnline( PartitionedIndexStorage indexStorage, IndexDescriptor descriptor ) throws IOException\n+    private boolean indexIsOnline(PartitionedIndexStorage indexStorage, IndexDescriptor descriptor) throws IOException\n     {\n-        try ( SchemaIndex index = LuceneSchemaIndexBuilder.create( descriptor, config ).withIndexStorage( indexStorage ).build() )\n+        try (SchemaIndex index = LuceneSchemaIndexBuilder.create(descriptor, config).withIndexStorage(indexStorage).build())\n         {\n-            if ( index.exists() )\n+            if (index.exists())\n             {\n                 index.open();\n                 return index.isOnline();\n@@ -131,9 +133,9 @@ public class FulltextIndexProvider extends IndexProvider implements FulltextAdap\n         }\n     }\n \n-    private PartitionedIndexStorage getIndexStorage( long indexId )\n+    private PartitionedIndexStorage getIndexStorage(long indexId)\n     {\n-        return indexStorageFactory.indexStorageOf( indexId );\n+        return indexStorageFactory.indexStorageOf(indexId);\n     }\n \n     @Override\n@@ -145,35 +147,35 @@ public class FulltextIndexProvider extends IndexProvider implements FulltextAdap\n     }\n \n     @Override\n-    public IndexDescriptor completeConfiguration( IndexDescriptor index )\n+    public IndexDescriptor completeConfiguration(IndexDescriptor index)\n     {\n         IndexConfig indexConfig = index.getIndexConfig();\n-        indexConfig = addMissingDefaultIndexConfig( indexConfig );\n-        index = index.withIndexConfig( indexConfig );\n-        if ( index.getCapability().equals( IndexCapability.NO_CAPABILITY ) )\n+        indexConfig = addMissingDefaultIndexConfig(indexConfig);\n+        index = index.withIndexConfig(indexConfig);\n+        if (index.getCapability().equals(IndexCapability.NO_CAPABILITY))\n         {\n-            index = index.withIndexCapability( getCapability( index ) );\n+            index = index.withIndexCapability(getCapability(index));\n         }\n         return index;\n     }\n \n-    private IndexCapability getCapability( IndexDescriptor index )\n+    private IndexCapability getCapability(IndexDescriptor index)\n     {\n-        return new FulltextIndexCapability( isEventuallyConsistent( index ) );\n+        return new FulltextIndexCapability(isEventuallyConsistent(index));\n     }\n \n     @Override\n-    public String getPopulationFailure( IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n+    public String getPopulationFailure(IndexDescriptor descriptor, PageCursorTracer cursorTracer)\n     {\n-        return defaultIfEmpty( getIndexStorage( descriptor.getId() ).getStoredIndexFailure(), StringUtils.EMPTY );\n+        return defaultIfEmpty(getIndexStorage(descriptor.getId()).getStoredIndexFailure(), StringUtils.EMPTY);\n     }\n \n     @Override\n-    public InternalIndexState getInitialState( IndexDescriptor index, PageCursorTracer cursorTracer )\n+    public InternalIndexState getInitialState(IndexDescriptor index, PageCursorTracer cursorTracer)\n     {\n-        PartitionedIndexStorage indexStorage = getIndexStorage( index.getId() );\n+        PartitionedIndexStorage indexStorage = getIndexStorage(index.getId());\n         String failure = indexStorage.getStoredIndexFailure();\n-        if ( failure != null )\n+        if (failure != null)\n         {\n             return InternalIndexState.FAILED;\n         }\n@@ -182,177 +184,170 @@ public class FulltextIndexProvider extends IndexProvider implements FulltextAdap\n         // For instance, that it doesn't refer to an analyzer that has since been removed.\n         try\n         {\n-            validateIndexRef( index );\n-        }\n-        catch ( Exception e )\n+            validateIndexRef(index);\n+        } catch (Exception e)\n         {\n             try\n             {\n-                indexStorage.storeIndexFailure( Exceptions.stringify( e ) );\n-            }\n-            catch ( IOException ex )\n+                indexStorage.storeIndexFailure(Exceptions.stringify(e));\n+            } catch (IOException ex)\n             {\n-                ex.addSuppressed( e );\n-                log.warn( \"Failed to persist index failure. Index failure added as suppressed exception.\", ex );\n+                ex.addSuppressed(e);\n+                log.warn(\"Failed to persist index failure. Index failure added as suppressed exception.\", ex);\n             }\n             return InternalIndexState.FAILED;\n         }\n \n         try\n         {\n-            return indexIsOnline( indexStorage, index ) ? InternalIndexState.ONLINE : InternalIndexState.POPULATING;\n-        }\n-        catch ( IOException e )\n+            return indexIsOnline(indexStorage, index) ? InternalIndexState.ONLINE : InternalIndexState.POPULATING;\n+        } catch (IOException e)\n         {\n             return InternalIndexState.POPULATING;\n         }\n     }\n \n     @Override\n-    public MinimalIndexAccessor getMinimalIndexAccessor( IndexDescriptor descriptor )\n+    public MinimalIndexAccessor getMinimalIndexAccessor(IndexDescriptor descriptor)\n     {\n-        PartitionedIndexStorage indexStorage = getIndexStorage( descriptor.getId() );\n+        PartitionedIndexStorage indexStorage = getIndexStorage(descriptor.getId());\n         DatabaseIndex<FulltextIndexReader> fulltextIndex = new DroppableIndex<>(\n-                new DroppableLuceneIndex<>( indexStorage, new ReadOnlyIndexPartitionFactory(), descriptor ) );\n-        log.debug( \"Creating dropper for fulltext schema index: %s\", descriptor );\n-        return new LuceneMinimalIndexAccessor<>( descriptor, fulltextIndex, isReadOnly() );\n+          new DroppableLuceneIndex<>(indexStorage, new ReadOnlyIndexPartitionFactory(), descriptor));\n+        log.debug(\"Creating dropper for fulltext schema index: %s\", descriptor);\n+        return new LuceneMinimalIndexAccessor<>(descriptor, fulltextIndex, isReadOnly());\n     }\n \n     private boolean isReadOnly()\n     {\n-        return isSingleInstance && config.get( GraphDatabaseSettings.read_only );\n+        return isSingleInstance && config.get(GraphDatabaseSettings.read_only);\n     }\n \n     @Override\n-    public IndexPopulator getPopulator( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig,\n-            ByteBufferFactory bufferFactory, MemoryTracker memoryTracker, TokenNameLookup tokenNameLookup )\n+    public IndexPopulator getPopulator(IndexDescriptor descriptor, IndexSamplingConfig samplingConfig,\n+                                       ByteBufferFactory bufferFactory, MemoryTracker memoryTracker, TokenNameLookup tokenNameLookup)\n     {\n-        if ( isReadOnly() )\n+        if (isReadOnly())\n         {\n-            throw new UnsupportedOperationException( \"Can't create populator for read only index\" );\n+            throw new UnsupportedOperationException(\"Can't create populator for read only index\");\n         }\n         try\n         {\n-            PartitionedIndexStorage indexStorage = getIndexStorage( descriptor.getId() );\n-            Analyzer analyzer = createAnalyzer( descriptor, tokenNameLookup );\n-            String[] propertyNames = createPropertyNames( descriptor, tokenNameLookup );\n+            PartitionedIndexStorage indexStorage = getIndexStorage(descriptor.getId());\n+            Analyzer analyzer = createAnalyzer(descriptor, tokenNameLookup);\n+            String[] propertyNames = createPropertyNames(descriptor, tokenNameLookup);\n             DatabaseIndex<FulltextIndexReader> fulltextIndex = FulltextIndexBuilder\n-                    .create( descriptor, config, tokenHolders.propertyKeyTokens(), analyzer, propertyNames )\n-                    .withFileSystem( fileSystem )\n-                    .withOperationalMode( isSingleInstance )\n-                    .withIndexStorage( indexStorage )\n-                    .withPopulatingMode( true )\n-                    .build();\n-            log.debug( \"Creating populator for fulltext schema index: %s\", descriptor );\n-            return new FulltextIndexPopulator( descriptor, fulltextIndex, propertyNames );\n-        }\n-        catch ( Exception e )\n+              .create(descriptor, config, tokenHolders.propertyKeyTokens(), analyzer, propertyNames)\n+              .withFileSystem(fileSystem)\n+              .withOperationalMode(isSingleInstance)\n+              .withIndexStorage(indexStorage)\n+              .withPopulatingMode(true)\n+              .build();\n+            log.debug(\"Creating populator for fulltext schema index: %s\", descriptor);\n+            return new FulltextIndexPopulator(descriptor, fulltextIndex, propertyNames);\n+        } catch (Exception e)\n         {\n-            PartitionedIndexStorage indexStorage = getIndexStorage( descriptor.getId() );\n+            PartitionedIndexStorage indexStorage = getIndexStorage(descriptor.getId());\n             DatabaseIndex<FulltextIndexReader> fulltextIndex = new DroppableIndex<>(\n-                    new DroppableLuceneIndex<>( indexStorage, new ReadOnlyIndexPartitionFactory(), descriptor ) );\n-            log.debug( \"Creating failed index populator for fulltext schema index: %s\", descriptor, e );\n-            return new FailedFulltextIndexPopulator( descriptor, fulltextIndex, e );\n+              new DroppableLuceneIndex<>(indexStorage, new ReadOnlyIndexPartitionFactory(), descriptor));\n+            log.debug(\"Creating failed index populator for fulltext schema index: %s\", descriptor, e);\n+            return new FailedFulltextIndexPopulator(descriptor, fulltextIndex, e);\n         }\n     }\n \n     @Override\n-    public IndexAccessor getOnlineAccessor( IndexDescriptor index, IndexSamplingConfig samplingConfig, TokenNameLookup tokenNameLookup ) throws IOException\n+    public IndexAccessor getOnlineAccessor(IndexDescriptor index, IndexSamplingConfig samplingConfig, TokenNameLookup tokenNameLookup) throws IOException\n     {\n-        PartitionedIndexStorage indexStorage = getIndexStorage( index.getId() );\n-        Analyzer analyzer = createAnalyzer( index, tokenHolders );\n-        String[] propertyNames = createPropertyNames( index, tokenHolders );\n+        PartitionedIndexStorage indexStorage = getIndexStorage(index.getId());\n+        Analyzer analyzer = createAnalyzer(index, tokenHolders);\n+        String[] propertyNames = createPropertyNames(index, tokenHolders);\n         FulltextIndexBuilder fulltextIndexBuilder = FulltextIndexBuilder\n-                .create( index, config, tokenHolders.propertyKeyTokens(), analyzer, propertyNames )\n-                .withFileSystem( fileSystem )\n-                .withOperationalMode( isSingleInstance )\n-                .withIndexStorage( indexStorage )\n-                .withPopulatingMode( false );\n-        if ( isEventuallyConsistent( index ) )\n+          .create(index, config, tokenHolders.propertyKeyTokens(), analyzer, propertyNames)\n+          .withFileSystem(fileSystem)\n+          .withOperationalMode(isSingleInstance)\n+          .withIndexStorage(indexStorage)\n+          .withPopulatingMode(false);\n+        if (isEventuallyConsistent(index))\n         {\n-            fulltextIndexBuilder = fulltextIndexBuilder.withIndexUpdateSink( indexUpdateSink );\n+            fulltextIndexBuilder = fulltextIndexBuilder.withIndexUpdateSink(indexUpdateSink);\n         }\n         DatabaseIndex<FulltextIndexReader> fulltextIndex = fulltextIndexBuilder.build();\n         fulltextIndex.open();\n \n-        FulltextIndexAccessor accessor = new FulltextIndexAccessor( indexUpdateSink, fulltextIndex, index, propertyNames );\n-        log.debug( \"Created online accessor for fulltext schema index %s: %s\", index, accessor );\n+        FulltextIndexAccessor accessor = new FulltextIndexAccessor(indexUpdateSink, fulltextIndex, index, propertyNames);\n+        log.debug(\"Created online accessor for fulltext schema index %s: %s\", index, accessor);\n         return accessor;\n     }\n \n     @Override\n-    public StoreMigrationParticipant storeMigrationParticipant( final FileSystemAbstraction fs, PageCache pageCache, StorageEngineFactory storageEngineFactory )\n+    public StoreMigrationParticipant storeMigrationParticipant(final FileSystemAbstraction fs, PageCache pageCache, StorageEngineFactory storageEngineFactory)\n     {\n-        return new SchemaIndexMigrator( \"Fulltext indexes\",  fs, this.directoryStructure(), storageEngineFactory );\n+        return new SchemaIndexMigrator(\"Fulltext indexes\", fs, this.directoryStructure(), storageEngineFactory);\n     }\n \n     @Override\n-    public void validatePrototype( IndexPrototype prototype )\n+    public void validatePrototype(IndexPrototype prototype)\n     {\n-        validateIndexRef( prototype );\n+        validateIndexRef(prototype);\n     }\n \n-    private void validateIndexRef( IndexRef<?> ref )\n+    private void validateIndexRef(IndexRef<?> ref)\n     {\n         String providerName = getProviderDescriptor().name();\n-        if ( ref.getIndexType() != IndexType.FULLTEXT )\n+        if (ref.getIndexType() != IndexType.FULLTEXT)\n         {\n-            throw new IllegalArgumentException( \"The '\" + providerName + \"' index provider only supports FULLTEXT index types: \" + ref );\n+            throw new IllegalArgumentException(\"The '\" + providerName + \"' index provider only supports FULLTEXT index types: \" + ref);\n         }\n-        if ( !ref.schema().isFulltextSchemaDescriptor() )\n+        if (!ref.schema().isFulltextSchemaDescriptor())\n         {\n-            throw new IllegalArgumentException( \"The \" + ref.schema() + \" index schema is not a full-text index schema, \" +\n-                    \"which it is required to be for the '\" + providerName + \"' index provider to be able to create an index.\" );\n+            throw new IllegalArgumentException(\"The \" + ref.schema() + \" index schema is not a full-text index schema, \" +\n+              \"which it is required to be for the '\" + providerName + \"' index provider to be able to create an index.\");\n         }\n-        Value value = ref.getIndexConfig().get( ANALYZER );\n-        if ( value != null )\n+        Value value = ref.getIndexConfig().get(ANALYZER);\n+        if (value != null)\n         {\n-            if ( value.valueGroup() == ValueGroup.TEXT )\n+            if (value.valueGroup() == ValueGroup.TEXT)\n             {\n                 String analyzerName = ((TextValue) value).stringValue();\n                 Optional<AnalyzerProvider> analyzerProvider = listAvailableAnalyzers()\n-                        .filter( analyzer -> analyzer.getName().equals( analyzerName ) )\n-                        .findFirst();\n-                if ( analyzerProvider.isPresent() )\n+                  .filter(analyzer -> analyzer.getName().equals(analyzerName))\n+                  .findFirst();\n+                if (analyzerProvider.isPresent())\n                 {\n                     // Verify that the analyzer provider works.\n                     Analyzer analyzer = analyzerProvider.get().createAnalyzer();\n-                    Objects.requireNonNull( analyzer, \"The '\" + analyzerName + \"' analyzer returned a 'null' analyzer.\" );\n-                }\n-                else\n+                    Objects.requireNonNull(analyzer, \"The '\" + analyzerName + \"' analyzer returned a 'null' analyzer.\");\n+                } else\n                 {\n-                    throw new IllegalArgumentException( \"No such full-text analyzer: '\" + analyzerName + \"'.\" );\n+                    throw new IllegalArgumentException(\"No such full-text analyzer: '\" + analyzerName + \"'.\");\n                 }\n-            }\n-            else\n+            } else\n             {\n-                throw new IllegalArgumentException( \"Wrong index setting value type for fulltext analyzer: '\" + value + \"'.\" );\n+                throw new IllegalArgumentException(\"Wrong index setting value type for fulltext analyzer: '\" + value + \"'.\");\n             }\n         }\n \n         TokenHolder propertyKeyTokens = tokenHolders.propertyKeyTokens();\n-        for ( int propertyId : ref.schema().getPropertyIds() )\n+        for (int propertyId : ref.schema().getPropertyIds())\n         {\n             try\n             {\n-                NamedToken token = propertyKeyTokens.getTokenById( propertyId );\n-                if ( token.name().equals( LuceneFulltextDocumentStructure.FIELD_ENTITY_ID ) )\n+                NamedToken token = propertyKeyTokens.getTokenById(propertyId);\n+                if (token.name().equals(LuceneFulltextDocumentStructure.FIELD_ENTITY_ID))\n                 {\n-                    throw new IllegalArgumentException( \"Unable to index the property, the name is reserved for internal use \" +\n-                            LuceneFulltextDocumentStructure.FIELD_ENTITY_ID );\n+                    throw new IllegalArgumentException(\"Unable to index the property, the name is reserved for internal use \" +\n+                      LuceneFulltextDocumentStructure.FIELD_ENTITY_ID);\n                 }\n-            }\n-            catch ( TokenNotFoundException e )\n+            } catch (TokenNotFoundException e)\n             {\n-                throw new IllegalArgumentException( \"Schema references non-existing property key token id: \" + propertyId + \".\", e );\n+                throw new IllegalArgumentException(\"Schema references non-existing property key token id: \" + propertyId + \".\", e);\n             }\n         }\n     }\n \n-    private IndexConfig addMissingDefaultIndexConfig( IndexConfig indexConfig )\n+    private IndexConfig addMissingDefaultIndexConfig(IndexConfig indexConfig)\n     {\n-        indexConfig = indexConfig.withIfAbsent( ANALYZER, Values.stringValue( defaultAnalyzerName ) );\n-        indexConfig = indexConfig.withIfAbsent( FulltextIndexSettingsKeys.EVENTUALLY_CONSISTENT, Values.booleanValue( defaultEventuallyConsistentSetting ) );\n+        indexConfig = indexConfig.withIfAbsent(ANALYZER, Values.stringValue(defaultAnalyzerName));\n+        indexConfig = indexConfig.withIfAbsent(FulltextIndexSettingsKeys.EVENTUALLY_CONSISTENT, Values.booleanValue(defaultEventuallyConsistentSetting));\n         return indexConfig;\n     }\n \n@@ -365,6 +360,6 @@ public class FulltextIndexProvider extends IndexProvider implements FulltextAdap\n     @Override\n     public Stream<AnalyzerProvider> listAvailableAnalyzers()\n     {\n-        return Services.loadAll( AnalyzerProvider.class ).stream();\n+        return Services.loadAll(AnalyzerProvider.class).stream();\n     }\n }\n",
            "diff_size": 116
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
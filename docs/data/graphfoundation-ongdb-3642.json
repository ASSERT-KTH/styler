{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3642",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3642/SrvRecordResolverImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3642/SrvRecordResolverImpl.java\nindex 9ff0a64523f..a14b92281b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3642/SrvRecordResolverImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3642/SrvRecordResolverImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import java.util.Enumeration;\n@@ -35,49 +36,48 @@ import javax.naming.directory.InitialDirContext;\n \n public class SrvRecordResolverImpl extends SrvRecordResolver\n {\n-    private final String[] SRV_RECORDS = {\"SRV\"};\n-    private final String SRV_ATTR = \"srv\";\n+  private final String[] SRV_RECORDS = {\"SRV\"};\n+  private final String SRV_ATTR = \"srv\";\n \n-    private Optional<InitialDirContext> _idc = Optional.empty();\n+  private Optional<InitialDirContext> _idc = Optional.empty();\n \n-    public Stream<SrvRecord> resolveSrvRecord( String url ) throws NamingException\n-    {\n-        Attributes attrs = _idc.orElseGet( this::setIdc ).getAttributes( url, SRV_RECORDS );\n+  public Stream<SrvRecord> resolveSrvRecord(String url) throws NamingException\n+  {\n+    Attributes attrs = _idc.orElseGet(this::setIdc).getAttributes(url, SRV_RECORDS);\n \n-        return enumerationAsStream( (NamingEnumeration<String>) attrs.get( SRV_ATTR ).getAll() ).map( SrvRecord::parse );\n-    }\n+    return enumerationAsStream((NamingEnumeration<String>) attrs.get(SRV_ATTR).getAll()).map(SrvRecord::parse);\n+  }\n \n-    private synchronized InitialDirContext setIdc()\n+  private synchronized InitialDirContext setIdc()\n+  {\n+    return _idc.orElseGet(() ->\n     {\n-        return _idc.orElseGet( () ->\n-        {\n-            Properties env = new Properties();\n-            env.put( Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.dns.DnsContextFactory\" );\n-            try\n-            {\n-                _idc = Optional.of( new InitialDirContext( env ) );\n-                return _idc.get();\n-            }\n-            catch ( NamingException e )\n-            {\n-                throw new RuntimeException( e );\n-            }\n-        } );\n-    }\n+      Properties env = new Properties();\n+      env.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.dns.DnsContextFactory\");\n+      try\n+      {\n+        _idc = Optional.of(new InitialDirContext(env));\n+        return _idc.get();\n+      } catch (NamingException e)\n+      {\n+        throw new RuntimeException(e);\n+      }\n+    });\n+  }\n \n-    private static <T> Stream<T> enumerationAsStream( Enumeration<T> e )\n+  private static <T> Stream<T> enumerationAsStream(Enumeration<T> e)\n+  {\n+    return StreamSupport.stream(Spliterators.spliteratorUnknownSize(new Iterator<T>()\n     {\n-        return StreamSupport.stream( Spliterators.spliteratorUnknownSize( new Iterator<T>()\n-        {\n-            public T next()\n-            {\n-                return e.nextElement();\n-            }\n+      public T next()\n+      {\n+        return e.nextElement();\n+      }\n \n-            public boolean hasNext()\n-            {\n-                return e.hasMoreElements();\n-            }\n-        }, Spliterator.ORDERED ), false );\n-    }\n+      public boolean hasNext()\n+      {\n+        return e.hasMoreElements();\n+      }\n+    }, Spliterator.ORDERED), false);\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3642/SrvRecordResolverImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3642/SrvRecordResolverImpl.java\nindex 9ff0a64523f..b86291ee487 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3642/SrvRecordResolverImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3642/SrvRecordResolverImpl.java\n@@ -43,8 +43,7 @@ public class SrvRecordResolverImpl extends SrvRecordResolver\n     public Stream<SrvRecord> resolveSrvRecord( String url ) throws NamingException\n     {\n         Attributes attrs = _idc.orElseGet( this::setIdc ).getAttributes( url, SRV_RECORDS );\n-\n-        return enumerationAsStream( (NamingEnumeration<String>) attrs.get( SRV_ATTR ).getAll() ).map( SrvRecord::parse );\n+return enumerationAsStream( (NamingEnumeration<String>) attrs.get( SRV_ATTR ).getAll() ).map( SrvRecord::parse );\n     }\n \n     private synchronized InitialDirContext setIdc()\n@@ -80,4 +79,4 @@ public class SrvRecordResolverImpl extends SrvRecordResolver\n             }\n         }, Spliterator.ORDERED ), false );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1414",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1414/ServerCommandLineArgs.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1414/ServerCommandLineArgs.java\nindex a773391facf..996e3e97547 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1414/ServerCommandLineArgs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1414/ServerCommandLineArgs.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server;\n \n import java.io.File;\n@@ -44,67 +45,67 @@ import static org.neo4j.helpers.collection.Pair.pair;\n  */\n public class ServerCommandLineArgs\n {\n-    public static final String CONFIG_DIR_ARG = \"config-dir\";\n-    public static final String HOME_DIR_ARG = \"home-dir\";\n-    public static final String VERSION_ARG = \"version\";\n-    private final Args args;\n-    private final Map<String, String> configOverrides;\n+  public static final String CONFIG_DIR_ARG = \"config-dir\";\n+  public static final String HOME_DIR_ARG = \"home-dir\";\n+  public static final String VERSION_ARG = \"version\";\n+  private final Args args;\n+  private final Map<String, String> configOverrides;\n \n-    private ServerCommandLineArgs( Args args, Map<String, String> configOverrides )\n-    {\n-        this.args = args;\n-        this.configOverrides = configOverrides;\n-    }\n+  private ServerCommandLineArgs(Args args, Map<String, String> configOverrides)\n+  {\n+    this.args = args;\n+    this.configOverrides = configOverrides;\n+  }\n \n-    public static ServerCommandLineArgs parse( String[] argv )\n-    {\n-        Args args = Args.withFlags( VERSION_ARG ).parse( argv );\n-        return new ServerCommandLineArgs( args, parseConfigOverrides( args ) );\n-    }\n+  public static ServerCommandLineArgs parse(String[] argv)\n+  {\n+    Args args = Args.withFlags(VERSION_ARG).parse(argv);\n+    return new ServerCommandLineArgs(args, parseConfigOverrides(args));\n+  }\n \n-    public Map<String, String> configOverrides()\n-    {\n-        return configOverrides;\n-    }\n+  public Map<String, String> configOverrides()\n+  {\n+    return configOverrides;\n+  }\n \n-    public Optional<File> configFile()\n-    {\n-        return Optional.ofNullable( args.get( CONFIG_DIR_ARG ) )\n-                .map( dirPath -> new File( dirPath, Config.DEFAULT_CONFIG_FILE_NAME ) );\n-    }\n+  public Optional<File> configFile()\n+  {\n+    return Optional.ofNullable(args.get(CONFIG_DIR_ARG))\n+        .map(dirPath -> new File(dirPath, Config.DEFAULT_CONFIG_FILE_NAME));\n+  }\n \n-    private static Map<String, String> parseConfigOverrides( Args arguments )\n-    {\n-        Collection<Pair<String, String>> options = arguments.interpretOptions( \"c\",\n-                Converters.optional(), s ->\n-                {\n-                    if ( s.contains( \"=\" ) )\n-                    {\n-                        String[] keyVal = s.split( \"=\", 2 );\n-                        return pair( keyVal[0], keyVal[1] );\n-                    }\n-                    // Shortcut to specify boolean flags (\"-c dbms.enableTheFeature\")\n-                    return pair( s, \"true\" );\n-                } );\n+  private static Map<String, String> parseConfigOverrides(Args arguments)\n+  {\n+    Collection<Pair<String, String>> options = arguments.interpretOptions(\"c\",\n+        Converters.optional(), s ->\n+        {\n+          if (s.contains(\"=\"))\n+          {\n+            String[] keyVal = s.split(\"=\", 2);\n+            return pair(keyVal[0], keyVal[1]);\n+          }\n+          // Shortcut to specify boolean flags (\"-c dbms.enableTheFeature\")\n+          return pair(s, \"true\");\n+        });\n \n-        Map<String,String> ret = stringMap();\n-        options.forEach( pair -> ret.put( pair.first(), pair.other() ) );\n+    Map<String, String> ret = stringMap();\n+    options.forEach(pair -> ret.put(pair.first(), pair.other()));\n \n-        return ret;\n-    }\n+    return ret;\n+  }\n \n-    public File homeDir()\n+  public File homeDir()\n+  {\n+    if (args.get(HOME_DIR_ARG) == null)\n     {\n-        if ( args.get( HOME_DIR_ARG ) == null )\n-        {\n-            return null;\n-        }\n-\n-        return new File( args.get( HOME_DIR_ARG ) );\n+      return null;\n     }\n \n-    public boolean version()\n-    {\n-        return args.getBoolean( VERSION_ARG, false );\n-    }\n+    return new File(args.get(HOME_DIR_ARG));\n+  }\n+\n+  public boolean version()\n+  {\n+    return args.getBoolean(VERSION_ARG, false);\n+  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1414/ServerCommandLineArgs.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1414/ServerCommandLineArgs.java\nindex a773391facf..b5d09029b98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1414/ServerCommandLineArgs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1414/ServerCommandLineArgs.java\n@@ -45,12 +45,14 @@ import static org.neo4j.helpers.collection.Pair.pair;\n public class ServerCommandLineArgs\n {\n     public static final String CONFIG_DIR_ARG = \"config-dir\";\n-    public static final String HOME_DIR_ARG = \"home-dir\";\n-    public static final String VERSION_ARG = \"version\";\n+\n+public static final String HOME_DIR_ARG = \"home-dir\";\n+\n+public static final String VERSION_ARG = \"version\";\n     private final Args args;\n-    private final Map<String, String> configOverrides;\n+    private final Map<String,String> configOverrides;\n \n-    private ServerCommandLineArgs( Args args, Map<String, String> configOverrides )\n+    private ServerCommandLineArgs( Args args, Map<String,String> configOverrides )\n     {\n         this.args = args;\n         this.configOverrides = configOverrides;\n@@ -62,18 +64,17 @@ public class ServerCommandLineArgs\n         return new ServerCommandLineArgs( args, parseConfigOverrides( args ) );\n     }\n \n-    public Map<String, String> configOverrides()\n+    public Map<String,String> configOverrides()\n     {\n         return configOverrides;\n     }\n \n     public Optional<File> configFile()\n     {\n-        return Optional.ofNullable( args.get( CONFIG_DIR_ARG ) )\n-                .map( dirPath -> new File( dirPath, Config.DEFAULT_CONFIG_FILE_NAME ) );\n+        return Optional.ofNullable( args.get( CONFIG_DIR_ARG ) ).map( dirPath -> new File( dirPath, Config.DEFAULT_CONFIG_FILE_NAME ) );\n     }\n \n-    private static Map<String, String> parseConfigOverrides( Args arguments )\n+    private static Map<String,String> parseConfigOverrides( Args arguments )\n     {\n         Collection<Pair<String, String>> options = arguments.interpretOptions( \"c\",\n                 Converters.optional(), s ->\n@@ -86,11 +87,9 @@ public class ServerCommandLineArgs\n                     // Shortcut to specify boolean flags (\"-c dbms.enableTheFeature\")\n                     return pair( s, \"true\" );\n                 } );\n-\n-        Map<String,String> ret = stringMap();\n+Map<String,String> ret = stringMap();\n         options.forEach( pair -> ret.put( pair.first(), pair.other() ) );\n-\n-        return ret;\n+return ret;\n     }\n \n     public File homeDir()\n@@ -107,4 +106,4 @@ public class ServerCommandLineArgs\n     {\n         return args.getBoolean( VERSION_ARG, false );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
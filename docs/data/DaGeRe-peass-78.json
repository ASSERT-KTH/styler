{
    "project_name": "DaGeRe-peass",
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "14",
                "column": "27",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "public class ChangeProperty {\n   \n   public enum TraceChange{\n      NO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n   }\n   ",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/78/ChangeProperty.java\nindex 5f0cba56442..f65a4e3c315 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/78/ChangeProperty.java\n@@ -11,8 +11,8 @@ import de.peass.analysis.changes.Change;\n \n public class ChangeProperty {\n    \n-   public enum TraceChange{\n-      NO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n+   public enum TraceChange {\n+\t\t\t\tNO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n    }\n    \n    private String method;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/78/ChangeProperty.java\nindex 5f0cba56442..5ac5162093a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/78/ChangeProperty.java\n@@ -10,181 +10,181 @@ import java.util.Set;\n import de.peass.analysis.changes.Change;\n \n public class ChangeProperty {\n-   \n-   public enum TraceChange{\n-      NO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n-   }\n-   \n-   private String method;\n-   private Map<String, Integer> addedMap = new LinkedHashMap<>();\n-   private Map<String, Integer> removedMap = new LinkedHashMap<>();\n-   private double oldTime;\n-   private double changePercent;\n-   private int calls;\n-   private int callsOld;\n-   private int affectedClasses;\n-   private int affectedLines;\n-   private int newLines;\n-   private int oldLines;\n-   private String diff;\n-   private boolean affectsSource = false;\n-   private boolean affectsTestSource = false;\n-   private Set<String> affectedMethods = new HashSet<>();\n-   private List<String> types = new LinkedList<>();\n-   private List<String> guessedTypes = new LinkedList<>();\n-   private TraceChange traceChangeType;\n-\n-   public ChangeProperty() {\n-   }\n-\n-   public ChangeProperty(final Change change) {\n-      setMethod(change.getMethod());\n-      setOldTime(change.getOldTime());\n-      setChangePercent(change.getChangePercent());\n-      setDiff(change.getDiff());\n-   }\n-\n-   public int getNewLines() {\n-      return newLines;\n-   }\n-\n-   public void setNewLines(final int newLines) {\n-      this.newLines = newLines;\n-   }\n-\n-   public int getOldLines() {\n-      return oldLines;\n-   }\n-\n-   public void setOldLines(final int oldLines) {\n-      this.oldLines = oldLines;\n-   }\n-\n-   public double getOldTime() {\n-      return oldTime;\n-   }\n-\n-   public void setOldTime(final double oldTime) {\n-      this.oldTime = oldTime;\n-   }\n-\n-   public int getAffectedClasses() {\n-      return affectedClasses;\n-   }\n-\n-   public void setAffectedClasses(final int affectedClasses) {\n-      this.affectedClasses = affectedClasses;\n-   }\n-\n-   public int getAffectedLines() {\n-      return affectedLines;\n-   }\n-\n-   public void setAffectedLines(final int affectedLines) {\n-      this.affectedLines = affectedLines;\n-   }\n-\n-   public List<String> getTypes() {\n-      return types;\n-   }\n-\n-   public void setTypes(final List<String> types) {\n-      this.types = types;\n-   }\n-\n-   public int getCalls() {\n-      return calls;\n-   }\n-\n-   public void setCalls(final int calls) {\n-      this.calls = calls;\n-   }\n-\n-   public int getCallsOld() {\n-      return callsOld;\n-   }\n-\n-   public void setCallsOld(final int callsOld) {\n-      this.callsOld = callsOld;\n-   }\n-\n-   public boolean isAffectsSource() {\n-      return affectsSource;\n-   }\n-\n-   public void setAffectsSource(final boolean affectsSource) {\n-      this.affectsSource = affectsSource;\n-   }\n-\n-   public boolean isAffectsTestSource() {\n-      return affectsTestSource;\n-   }\n-\n-   public void setAffectsTestSource(final boolean affectsTestSource) {\n-      this.affectsTestSource = affectsTestSource;\n-   }\n-\n-   public String getDiff() {\n-      return diff;\n-   }\n-\n-   public void setDiff(final String diff) {\n-      this.diff = diff;\n-   }\n-\n-   public String getMethod() {\n-      return method;\n-   }\n-\n-   public void setMethod(final String method) {\n-      this.method = method;\n-   }\n-\n-   public Map<String, Integer> getAddedMap() {\n-      return addedMap;\n-   }\n \n-   public void setAddedMap(final Map<String, Integer> addedMap) {\n-      this.addedMap = addedMap;\n-   }\n+  public enum TraceChange {\n+    NO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n+  }\n+\n+  private String method;\n+  private Map<String, Integer> addedMap = new LinkedHashMap<>();\n+  private Map<String, Integer> removedMap = new LinkedHashMap<>();\n+  private double oldTime;\n+  private double changePercent;\n+  private int calls;\n+  private int callsOld;\n+  private int affectedClasses;\n+  private int affectedLines;\n+  private int newLines;\n+  private int oldLines;\n+  private String diff;\n+  private boolean affectsSource = false;\n+  private boolean affectsTestSource = false;\n+  private Set<String> affectedMethods = new HashSet<>();\n+  private List<String> types = new LinkedList<>();\n+  private List<String> guessedTypes = new LinkedList<>();\n+  private TraceChange traceChangeType;\n+\n+  public ChangeProperty() {\n+  }\n+\n+  public ChangeProperty(final Change change) {\n+    setMethod(change.getMethod());\n+    setOldTime(change.getOldTime());\n+    setChangePercent(change.getChangePercent());\n+    setDiff(change.getDiff());\n+  }\n+\n+  public int getNewLines() {\n+    return newLines;\n+  }\n+\n+  public void setNewLines(final int newLines) {\n+    this.newLines = newLines;\n+  }\n+\n+  public int getOldLines() {\n+    return oldLines;\n+  }\n+\n+  public void setOldLines(final int oldLines) {\n+    this.oldLines = oldLines;\n+  }\n+\n+  public double getOldTime() {\n+    return oldTime;\n+  }\n+\n+  public void setOldTime(final double oldTime) {\n+    this.oldTime = oldTime;\n+  }\n+\n+  public int getAffectedClasses() {\n+    return affectedClasses;\n+  }\n+\n+  public void setAffectedClasses(final int affectedClasses) {\n+    this.affectedClasses = affectedClasses;\n+  }\n+\n+  public int getAffectedLines() {\n+    return affectedLines;\n+  }\n+\n+  public void setAffectedLines(final int affectedLines) {\n+    this.affectedLines = affectedLines;\n+  }\n+\n+  public List<String> getTypes() {\n+    return types;\n+  }\n+\n+  public void setTypes(final List<String> types) {\n+    this.types = types;\n+  }\n+\n+  public int getCalls() {\n+    return calls;\n+  }\n+\n+  public void setCalls(final int calls) {\n+    this.calls = calls;\n+  }\n+\n+  public int getCallsOld() {\n+    return callsOld;\n+  }\n+\n+  public void setCallsOld(final int callsOld) {\n+    this.callsOld = callsOld;\n+  }\n+\n+  public boolean isAffectsSource() {\n+    return affectsSource;\n+  }\n+\n+  public void setAffectsSource(final boolean affectsSource) {\n+    this.affectsSource = affectsSource;\n+  }\n+\n+  public boolean isAffectsTestSource() {\n+    return affectsTestSource;\n+  }\n+\n+  public void setAffectsTestSource(final boolean affectsTestSource) {\n+    this.affectsTestSource = affectsTestSource;\n+  }\n+\n+  public String getDiff() {\n+    return diff;\n+  }\n+\n+  public void setDiff(final String diff) {\n+    this.diff = diff;\n+  }\n+\n+  public String getMethod() {\n+    return method;\n+  }\n+\n+  public void setMethod(final String method) {\n+    this.method = method;\n+  }\n+\n+  public Map<String, Integer> getAddedMap() {\n+    return addedMap;\n+  }\n \n-   public Map<String, Integer> getRemovedMap() {\n-      return removedMap;\n-   }\n+  public void setAddedMap(final Map<String, Integer> addedMap) {\n+    this.addedMap = addedMap;\n+  }\n \n-   public void setRemovedMap(final Map<String, Integer> removedMap) {\n-      this.removedMap = removedMap;\n-   }\n+  public Map<String, Integer> getRemovedMap() {\n+    return removedMap;\n+  }\n \n-   public double getChangePercent() {\n-      return changePercent;\n-   }\n+  public void setRemovedMap(final Map<String, Integer> removedMap) {\n+    this.removedMap = removedMap;\n+  }\n \n-   public void setChangePercent(final double changePercent) {\n-      this.changePercent = changePercent;\n-   }\n+  public double getChangePercent() {\n+    return changePercent;\n+  }\n \n-   public TraceChange getTraceChangeType() {\n-      return traceChangeType;\n-   }\n+  public void setChangePercent(final double changePercent) {\n+    this.changePercent = changePercent;\n+  }\n \n-   public void setTraceChangeType(final TraceChange traceChangeType) {\n-      this.traceChangeType = traceChangeType;\n-   }\n+  public TraceChange getTraceChangeType() {\n+    return traceChangeType;\n+  }\n \n-   public List<String> getGuessedTypes() {\n-      return guessedTypes;\n-   }\n+  public void setTraceChangeType(final TraceChange traceChangeType) {\n+    this.traceChangeType = traceChangeType;\n+  }\n \n-   public void setGuessedTypes(final List<String> guessedTypes) {\n-      this.guessedTypes = guessedTypes;\n-   }\n+  public List<String> getGuessedTypes() {\n+    return guessedTypes;\n+  }\n \n-   public Set<String> getAffectedMethods() {\n-      return affectedMethods;\n-   }\n+  public void setGuessedTypes(final List<String> guessedTypes) {\n+    this.guessedTypes = guessedTypes;\n+  }\n \n-   public void setAffectedMethods(final Set<String> affectedMethods) {\n-      this.affectedMethods = affectedMethods;\n-   }\n+  public Set<String> getAffectedMethods() {\n+    return affectedMethods;\n+  }\n+\n+  public void setAffectedMethods(final Set<String> affectedMethods) {\n+    this.affectedMethods = affectedMethods;\n+  }\n }\n\\ No newline at end of file\n",
            "diff_size": 299
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/78/ChangeProperty.java\nindex 5f0cba56442..fbd4860486a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/78/ChangeProperty.java\n@@ -6,185 +6,186 @@ import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-\n import de.peass.analysis.changes.Change;\n \n+\n public class ChangeProperty {\n-   \n-   public enum TraceChange{\n-      NO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n-   }\n-   \n-   private String method;\n-   private Map<String, Integer> addedMap = new LinkedHashMap<>();\n-   private Map<String, Integer> removedMap = new LinkedHashMap<>();\n-   private double oldTime;\n-   private double changePercent;\n-   private int calls;\n-   private int callsOld;\n-   private int affectedClasses;\n-   private int affectedLines;\n-   private int newLines;\n-   private int oldLines;\n-   private String diff;\n-   private boolean affectsSource = false;\n-   private boolean affectsTestSource = false;\n-   private Set<String> affectedMethods = new HashSet<>();\n-   private List<String> types = new LinkedList<>();\n-   private List<String> guessedTypes = new LinkedList<>();\n-   private TraceChange traceChangeType;\n-\n-   public ChangeProperty() {\n-   }\n-\n-   public ChangeProperty(final Change change) {\n-      setMethod(change.getMethod());\n-      setOldTime(change.getOldTime());\n-      setChangePercent(change.getChangePercent());\n-      setDiff(change.getDiff());\n-   }\n-\n-   public int getNewLines() {\n-      return newLines;\n-   }\n-\n-   public void setNewLines(final int newLines) {\n-      this.newLines = newLines;\n-   }\n-\n-   public int getOldLines() {\n-      return oldLines;\n-   }\n-\n-   public void setOldLines(final int oldLines) {\n-      this.oldLines = oldLines;\n-   }\n-\n-   public double getOldTime() {\n-      return oldTime;\n-   }\n-\n-   public void setOldTime(final double oldTime) {\n-      this.oldTime = oldTime;\n-   }\n-\n-   public int getAffectedClasses() {\n-      return affectedClasses;\n-   }\n-\n-   public void setAffectedClasses(final int affectedClasses) {\n-      this.affectedClasses = affectedClasses;\n-   }\n-\n-   public int getAffectedLines() {\n-      return affectedLines;\n-   }\n-\n-   public void setAffectedLines(final int affectedLines) {\n-      this.affectedLines = affectedLines;\n-   }\n-\n-   public List<String> getTypes() {\n-      return types;\n-   }\n-\n-   public void setTypes(final List<String> types) {\n-      this.types = types;\n-   }\n-\n-   public int getCalls() {\n-      return calls;\n-   }\n-\n-   public void setCalls(final int calls) {\n-      this.calls = calls;\n-   }\n-\n-   public int getCallsOld() {\n-      return callsOld;\n-   }\n-\n-   public void setCallsOld(final int callsOld) {\n-      this.callsOld = callsOld;\n-   }\n-\n-   public boolean isAffectsSource() {\n-      return affectsSource;\n-   }\n-\n-   public void setAffectsSource(final boolean affectsSource) {\n-      this.affectsSource = affectsSource;\n-   }\n-\n-   public boolean isAffectsTestSource() {\n-      return affectsTestSource;\n-   }\n-\n-   public void setAffectsTestSource(final boolean affectsTestSource) {\n-      this.affectsTestSource = affectsTestSource;\n-   }\n-\n-   public String getDiff() {\n-      return diff;\n-   }\n-\n-   public void setDiff(final String diff) {\n-      this.diff = diff;\n-   }\n-\n-   public String getMethod() {\n-      return method;\n-   }\n-\n-   public void setMethod(final String method) {\n-      this.method = method;\n-   }\n-\n-   public Map<String, Integer> getAddedMap() {\n-      return addedMap;\n-   }\n+ public enum TraceChange {\n+NO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n+ }\n+\n+ private String method;\n+ private Map<String, Integer> addedMap = new LinkedHashMap<>();\n+ private Map<String, Integer> removedMap = new LinkedHashMap<>();\n+ private double oldTime;\n+ private double changePercent;\n+ private int calls;\n+ private int callsOld;\n+ private int affectedClasses;\n+ private int affectedLines;\n+ private int newLines;\n+ private int oldLines;\n+ private String diff;\n+ private boolean affectsSource = false;\n+ private boolean affectsTestSource = false;\n+ private Set<String> affectedMethods = new HashSet<>();\n+ private List<String> types = new LinkedList<>();\n+ private List<String> guessedTypes = new LinkedList<>();\n+ private TraceChange traceChangeType;\n+\n+ public ChangeProperty() {\n+\n+ }\n+\n+ public ChangeProperty(final Change change) {\n+  setMethod(change.getMethod());\n+  setOldTime(change.getOldTime());\n+  setChangePercent(change.getChangePercent());\n+  setDiff(change.getDiff());\n+ }\n+\n+\n+ public int getNewLines() {\n+  return newLines;\n+ }\n+\n+ public void setNewLines(final int newLines) {\n+  this.newLines = newLines;\n+ }\n+\n+ public int getOldLines() {\n+  return oldLines;\n+ }\n+\n+ public void setOldLines(final int oldLines) {\n+  this.oldLines = oldLines;\n+ }\n+\n+ public double getOldTime() {\n+  return oldTime;\n+ }\n+\n+ public void setOldTime(final double oldTime) {\n+  this.oldTime = oldTime;\n+ }\n+\n+ public int getAffectedClasses() {\n+  return affectedClasses;\n+ }\n+\n+ public void setAffectedClasses(final int affectedClasses) {\n+  this.affectedClasses = affectedClasses;\n+ }\n+\n+ public int getAffectedLines() {\n+  return affectedLines;\n+ }\n+\n+ public void setAffectedLines(final int affectedLines) {\n+  this.affectedLines = affectedLines;\n+ }\n+\n+ public List<String> getTypes() {\n+  return types;\n+ }\n+\n+ public void setTypes(final List<String> types) {\n+  this.types = types;\n+ }\n+\n+ public int getCalls() {\n+  return calls;\n+ }\n+\n+ public void setCalls(final int calls) {\n+  this.calls = calls;\n+ }\n+\n+ public int getCallsOld() {\n+  return callsOld;\n+ }\n+\n+ public void setCallsOld(final int callsOld) {\n+  this.callsOld = callsOld;\n+ }\n+\n+ public boolean isAffectsSource() {\n+  return affectsSource;\n+ }\n+\n+ public void setAffectsSource(final boolean affectsSource) {\n+  this.affectsSource = affectsSource;\n+ }\n+\n+ public boolean isAffectsTestSource() {\n+  return affectsTestSource;\n+ }\n+\n+ public void setAffectsTestSource(final boolean affectsTestSource) {\n+  this.affectsTestSource = affectsTestSource;\n+ }\n+\n+ public String getDiff() {\n+  return diff;\n+ }\n+\n+ public void setDiff(final String diff) {\n+  this.diff = diff;\n+ }\n+\n+ public String getMethod() {\n+  return method;\n+ }\n+\n+ public void setMethod(final String method) {\n+  this.method = method;\n+ }\n+\n+ public Map<String, Integer> getAddedMap() {\n+  return addedMap;\n+ }\n \n-   public void setAddedMap(final Map<String, Integer> addedMap) {\n-      this.addedMap = addedMap;\n-   }\n+ public void setAddedMap(final Map<String, Integer> addedMap) {\n+  this.addedMap = addedMap;\n+ }\n \n-   public Map<String, Integer> getRemovedMap() {\n-      return removedMap;\n-   }\n+ public Map<String, Integer> getRemovedMap() {\n+  return removedMap;\n+ }\n \n-   public void setRemovedMap(final Map<String, Integer> removedMap) {\n-      this.removedMap = removedMap;\n-   }\n+ public void setRemovedMap(final Map<String, Integer> removedMap) {\n+  this.removedMap = removedMap;\n+ }\n \n-   public double getChangePercent() {\n-      return changePercent;\n-   }\n+ public double getChangePercent() {\n+  return changePercent;\n+ }\n \n-   public void setChangePercent(final double changePercent) {\n-      this.changePercent = changePercent;\n-   }\n+ public void setChangePercent(final double changePercent) {\n+  this.changePercent = changePercent;\n+ }\n \n-   public TraceChange getTraceChangeType() {\n-      return traceChangeType;\n-   }\n+ public TraceChange getTraceChangeType() {\n+  return traceChangeType;\n+ }\n \n-   public void setTraceChangeType(final TraceChange traceChangeType) {\n-      this.traceChangeType = traceChangeType;\n-   }\n+ public void setTraceChangeType(final TraceChange traceChangeType) {\n+  this.traceChangeType = traceChangeType;\n+ }\n \n-   public List<String> getGuessedTypes() {\n-      return guessedTypes;\n-   }\n+ public List<String> getGuessedTypes() {\n+  return guessedTypes;\n+ }\n \n-   public void setGuessedTypes(final List<String> guessedTypes) {\n-      this.guessedTypes = guessedTypes;\n-   }\n+ public void setGuessedTypes(final List<String> guessedTypes) {\n+  this.guessedTypes = guessedTypes;\n+ }\n \n-   public Set<String> getAffectedMethods() {\n-      return affectedMethods;\n-   }\n+ public Set<String> getAffectedMethods() {\n+  return affectedMethods;\n+ }\n \n-   public void setAffectedMethods(final Set<String> affectedMethods) {\n-      this.affectedMethods = affectedMethods;\n-   }\n+ public void setAffectedMethods(final Set<String> affectedMethods) {\n+  this.affectedMethods = affectedMethods;\n+ }\n }\n\\ No newline at end of file\n",
            "diff_size": 169
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/78/ChangeProperty.java\nindex 5f0cba56442..f65a4e3c315 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/78/ChangeProperty.java\n@@ -11,8 +11,8 @@ import de.peass.analysis.changes.Change;\n \n public class ChangeProperty {\n    \n-   public enum TraceChange{\n-      NO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n+   public enum TraceChange {\n+\t\t\t\tNO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n    }\n    \n    private String method;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/78/ChangeProperty.java\nindex 5f0cba56442..f65a4e3c315 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/78/ChangeProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/78/ChangeProperty.java\n@@ -11,8 +11,8 @@ import de.peass.analysis.changes.Change;\n \n public class ChangeProperty {\n    \n-   public enum TraceChange{\n-      NO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n+   public enum TraceChange {\n+\t\t\t\tNO_CALL_CHANGE, ADDED_CALLS, REMOVED_CALLS, BOTH, UNKNOWN;\n    }\n    \n    private String method;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
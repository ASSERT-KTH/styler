{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3105",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3105/SpatialIndexCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3105/SpatialIndexCache.java\nindex f4de2f9e642..446af35a85f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3105/SpatialIndexCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3105/SpatialIndexCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -28,114 +29,111 @@ import org.neo4j.values.storable.CoordinateReferenceSystem;\n /**\n  * Cache for lazily creating parts of the spatial index. Each part is created using the factory\n  * the first time it is selected in a select() query.\n- *\n+ * <p>\n  * Iterating over the cache will return all currently created parts.\n  *\n  * @param <T> Type of parts\n  */\n-class SpatialIndexCache<T> extends IndexPartsCache<CoordinateReferenceSystem,T>\n+class SpatialIndexCache<T> extends IndexPartsCache<CoordinateReferenceSystem, T>\n {\n-    private final Factory<T> factory;\n+  private final Factory<T> factory;\n \n-    SpatialIndexCache( Factory<T> factory )\n-    {\n-        this.factory = factory;\n-    }\n+  SpatialIndexCache(Factory<T> factory)\n+  {\n+    this.factory = factory;\n+  }\n \n-    /**\n-     * Select the part corresponding to the given CoordinateReferenceSystem. Creates the part if needed,\n-     * and rethrows any create time exception as a RuntimeException.\n-     *\n-     * @param crs target coordinate reference system\n-     * @return selected part\n-     */\n-    T uncheckedSelect( CoordinateReferenceSystem crs )\n+  /**\n+   * Select the part corresponding to the given CoordinateReferenceSystem. Creates the part if needed,\n+   * and rethrows any create time exception as a RuntimeException.\n+   *\n+   * @param crs target coordinate reference system\n+   * @return selected part\n+   */\n+  T uncheckedSelect(CoordinateReferenceSystem crs)\n+  {\n+    T existing = cache.get(crs);\n+    if (existing != null)\n     {\n-        T existing = cache.get( crs );\n-        if ( existing != null )\n-        {\n-            return existing;\n-        }\n-\n-        // Instantiate from factory. Do this under lock so that we coordinate with any concurrent call to close.\n-        // Concurrent calls to instantiating parts won't contend with each other since there's only\n-        // a single writer at a time anyway.\n-        instantiateCloseLock.lock();\n-        try\n-        {\n-            assertOpen();\n-            return cache.computeIfAbsent( crs, key ->\n-            {\n-                try\n-                {\n-                    return factory.newSpatial( crs );\n-                }\n-                catch ( IOException e )\n-                {\n-                    throw new UncheckedIOException( e );\n-                }\n-            } );\n-        }\n-        finally\n-        {\n-            instantiateCloseLock.unlock();\n-        }\n+      return existing;\n     }\n \n-    /**\n-     * Select the part corresponding to the given CoordinateReferenceSystem. Creates the part if needed,\n-     * in which case an exception of type E might be thrown.\n-     *\n-     * @param crs target coordinate reference system\n-     * @return selected part\n-     */\n-    T select( CoordinateReferenceSystem crs ) throws IOException\n+    // Instantiate from factory. Do this under lock so that we coordinate with any concurrent call to close.\n+    // Concurrent calls to instantiating parts won't contend with each other since there's only\n+    // a single writer at a time anyway.\n+    instantiateCloseLock.lock();\n+    try\n     {\n+      assertOpen();\n+      return cache.computeIfAbsent(crs, key ->\n+      {\n         try\n         {\n-            return uncheckedSelect( crs );\n-        }\n-        catch ( UncheckedIOException e )\n+          return factory.newSpatial(crs);\n+        } catch (IOException e)\n         {\n-            throw e.getCause();\n+          throw new UncheckedIOException(e);\n         }\n+      });\n+    } finally\n+    {\n+      instantiateCloseLock.unlock();\n     }\n+  }\n \n-    /**\n-     * Select the part corresponding to the given CoordinateReferenceSystem, apply function to it and return the result.\n-     * If the part isn't created yet return orElse.\n-     *\n-     * @param crs target coordinate reference system\n-     * @param function function to apply to part\n-     * @param orElse result to return if part isn't created yet\n-     * @param <RESULT> type of result\n-     * @return the result\n-     */\n-    <RESULT> RESULT selectOrElse( CoordinateReferenceSystem crs, Function<T, RESULT> function, RESULT orElse )\n+  /**\n+   * Select the part corresponding to the given CoordinateReferenceSystem. Creates the part if needed,\n+   * in which case an exception of type E might be thrown.\n+   *\n+   * @param crs target coordinate reference system\n+   * @return selected part\n+   */\n+  T select(CoordinateReferenceSystem crs) throws IOException\n+  {\n+    try\n     {\n-        T part = cache.get( crs );\n-        if ( part == null )\n-        {\n-            return orElse;\n-        }\n-        return function.apply( part );\n+      return uncheckedSelect(crs);\n+    } catch (UncheckedIOException e)\n+    {\n+      throw e.getCause();\n     }\n+  }\n \n-    void loadAll()\n+  /**\n+   * Select the part corresponding to the given CoordinateReferenceSystem, apply function to it and return the result.\n+   * If the part isn't created yet return orElse.\n+   *\n+   * @param crs      target coordinate reference system\n+   * @param function function to apply to part\n+   * @param orElse   result to return if part isn't created yet\n+   * @param <RESULT> type of result\n+   * @return the result\n+   */\n+  <RESULT> RESULT selectOrElse(CoordinateReferenceSystem crs, Function<T, RESULT> function, RESULT orElse)\n+  {\n+    T part = cache.get(crs);\n+    if (part == null)\n     {\n-        for ( CoordinateReferenceSystem crs : CoordinateReferenceSystem.all() )\n-        {\n-            uncheckedSelect( crs );\n-        }\n+      return orElse;\n     }\n+    return function.apply(part);\n+  }\n \n-    /**\n-     * Factory used by the SpatialIndexCache to create parts.\n-     *\n-     * @param <T> Type of parts\n-     */\n-    interface Factory<T>\n+  void loadAll()\n+  {\n+    for (CoordinateReferenceSystem crs : CoordinateReferenceSystem.all())\n     {\n-        T newSpatial( CoordinateReferenceSystem crs ) throws IOException;\n+      uncheckedSelect(crs);\n     }\n+  }\n+\n+  /**\n+   * Factory used by the SpatialIndexCache to create parts.\n+   *\n+   * @param <T> Type of parts\n+   */\n+  interface Factory<T>\n+  {\n+    T newSpatial(CoordinateReferenceSystem crs) throws IOException;\n+  }\n }\n",
            "diff_size": 124
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3105/SpatialIndexCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3105/SpatialIndexCache.java\nindex f4de2f9e642..efe2b8c8dcc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3105/SpatialIndexCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3105/SpatialIndexCache.java\n@@ -111,14 +111,15 @@ class SpatialIndexCache<T> extends IndexPartsCache<CoordinateReferenceSystem,T>\n      * @param <RESULT> type of result\n      * @return the result\n      */\n-    <RESULT> RESULT selectOrElse( CoordinateReferenceSystem crs, Function<T, RESULT> function, RESULT orElse )\n+    <RESULT> RESULT selectOrElse( CoordinateReferenceSystem crs, Function<T,RESULT> function, RESULT orElse )\n     {\n         T part = cache.get( crs );\n         if ( part == null )\n         {\n             return orElse;\n         }\n-        return function.apply( part );\n+\n+return function.apply( part );\n     }\n \n     void loadAll()\n@@ -138,4 +139,4 @@ class SpatialIndexCache<T> extends IndexPartsCache<CoordinateReferenceSystem,T>\n     {\n         T newSpatial( CoordinateReferenceSystem crs ) throws IOException;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "st-js-st-js",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "33",
                "column": "34",
                "severity": "error",
                "message": "'{' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "@Target({ ElementType.TYPE, ElementType.PACKAGE })\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface SyntheticType {//\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/14/SyntheticType.java\nindex 604cb02d998..8ee97e243e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/14/SyntheticType.java\n@@ -30,6 +30,6 @@ import java.lang.annotation.Target;\n  */\n @Target({ ElementType.TYPE, ElementType.PACKAGE })\n @Retention(RetentionPolicy.RUNTIME)\n-public @interface SyntheticType {//\n+public @interface SyntheticType { //\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "34",
                    "column": "34",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/14/SyntheticType.java\nindex 604cb02d998..1719d30efdb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/14/SyntheticType.java\n@@ -1,18 +1,19 @@\n /**\n- *  Copyright 2011 Alexandru Craciun, Eyal Kaspi\n- *\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n+ * Copyright 2011 Alexandru Craciun, Eyal Kaspi\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n+\n package org.stjs.javascript.annotation;\n \n import java.lang.annotation.ElementType;\n@@ -25,10 +26,10 @@ import java.lang.annotation.Target;\n  * constructor of these types should be replaced with a anonymous object constructor in javascript: {}. If annotated\n  * type is an interface, when the Javascript code is generated for a class implementing this interface, the interface\n  * name does not appear in the \"extends\" part.\n- * \n+ *\n  * @author acraciun\n  */\n-@Target({ ElementType.TYPE, ElementType.PACKAGE })\n+@Target({ElementType.TYPE, ElementType.PACKAGE})\n @Retention(RetentionPolicy.RUNTIME)\n public @interface SyntheticType {//\n \n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/14/SyntheticType.java\nindex 604cb02d998..0c7abcbc360 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/14/SyntheticType.java\n@@ -30,6 +30,8 @@ import java.lang.annotation.Target;\n  */\n @Target({ ElementType.TYPE, ElementType.PACKAGE })\n @Retention(RetentionPolicy.RUNTIME)\n-public @interface SyntheticType {//\n+public @interface SyntheticType {\n \n-}\n+\t//\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "column": "34",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/14/SyntheticType.java\nindex 604cb02d998..41db2d9dede 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/14/SyntheticType.java\n@@ -28,8 +28,9 @@ import java.lang.annotation.Target;\n  * \n  * @author acraciun\n  */\n+\n @Target({ ElementType.TYPE, ElementType.PACKAGE })\n @Retention(RetentionPolicy.RUNTIME)\n public @interface SyntheticType {//\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/14/SyntheticType.java\nindex 604cb02d998..8ee97e243e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/14/SyntheticType.java\n@@ -30,6 +30,6 @@ import java.lang.annotation.Target;\n  */\n @Target({ ElementType.TYPE, ElementType.PACKAGE })\n @Retention(RetentionPolicy.RUNTIME)\n-public @interface SyntheticType {//\n+public @interface SyntheticType { //\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/14/SyntheticType.java\nindex 604cb02d998..8ee97e243e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/14/SyntheticType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/14/SyntheticType.java\n@@ -30,6 +30,6 @@ import java.lang.annotation.Target;\n  */\n @Target({ ElementType.TYPE, ElementType.PACKAGE })\n @Retention(RetentionPolicy.RUNTIME)\n-public @interface SyntheticType {//\n+public @interface SyntheticType { //\n \n }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
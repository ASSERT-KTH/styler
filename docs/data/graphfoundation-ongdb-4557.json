{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4557",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4557/DefaultPageCursorTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4557/DefaultPageCursorTracer.java\nindex a1ed948e8ff..c41b28ce6c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4557/DefaultPageCursorTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4557/DefaultPageCursorTracer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.tracing.cursor;\n \n import java.io.IOException;\n@@ -32,293 +33,293 @@ import org.neo4j.io.pagecache.tracing.PinEvent;\n \n public class DefaultPageCursorTracer implements PageCursorTracer\n {\n-    private long pins;\n-    private long unpins;\n-    private long hits;\n-    private long historicalHits;\n-    private long faults;\n-    private long historicalFaults;\n-    private long bytesRead;\n-    private long bytesWritten;\n-    private long evictions;\n-    private long evictionExceptions;\n-    private long flushes;\n-\n-    private PageCacheTracer pageCacheTracer = PageCacheTracer.NULL;\n-    private DefaultPinEvent pinTracingEvent = new DefaultPinEvent();\n-\n+  private long pins;\n+  private long unpins;\n+  private long hits;\n+  private long historicalHits;\n+  private long faults;\n+  private long historicalFaults;\n+  private long bytesRead;\n+  private long bytesWritten;\n+  private long evictions;\n+  private long evictionExceptions;\n+  private long flushes;\n+\n+  private PageCacheTracer pageCacheTracer = PageCacheTracer.NULL;\n+  private DefaultPinEvent pinTracingEvent = new DefaultPinEvent();\n+\n+  @Override\n+  public void init(PageCacheTracer pageCacheTracer)\n+  {\n+    this.pageCacheTracer = pageCacheTracer;\n+  }\n+\n+  @Override\n+  public void reportEvents()\n+  {\n+    if (pins > 0)\n+    {\n+      pageCacheTracer.pins(pins);\n+    }\n+    if (unpins > 0)\n+    {\n+      pageCacheTracer.unpins(unpins);\n+    }\n+    if (hits > 0)\n+    {\n+      pageCacheTracer.hits(hits);\n+      historicalHits = historicalHits + hits;\n+    }\n+    if (faults > 0)\n+    {\n+      pageCacheTracer.faults(faults);\n+      historicalFaults = historicalFaults + faults;\n+    }\n+    if (bytesRead > 0)\n+    {\n+      pageCacheTracer.bytesRead(bytesRead);\n+    }\n+    if (evictions > 0)\n+    {\n+      pageCacheTracer.evictions(evictions);\n+    }\n+    if (evictionExceptions > 0)\n+    {\n+      pageCacheTracer.evictionExceptions(evictionExceptions);\n+    }\n+    if (bytesWritten > 0)\n+    {\n+      pageCacheTracer.bytesWritten(bytesWritten);\n+    }\n+    if (flushes > 0)\n+    {\n+      pageCacheTracer.flushes(flushes);\n+    }\n+    reset();\n+  }\n+\n+  @Override\n+  public long accumulatedHits()\n+  {\n+    return historicalHits + hits;\n+  }\n+\n+  @Override\n+  public long accumulatedFaults()\n+  {\n+    return historicalFaults + faults;\n+  }\n+\n+  private void reset()\n+  {\n+    pins = 0;\n+    unpins = 0;\n+    hits = 0;\n+    faults = 0;\n+    bytesRead = 0;\n+    bytesWritten = 0;\n+    evictions = 0;\n+    evictionExceptions = 0;\n+    flushes = 0;\n+  }\n+\n+  @Override\n+  public long faults()\n+  {\n+    return faults;\n+  }\n+\n+  @Override\n+  public long pins()\n+  {\n+    return pins;\n+  }\n+\n+  @Override\n+  public long unpins()\n+  {\n+    return unpins;\n+  }\n+\n+  @Override\n+  public long hits()\n+  {\n+    return hits;\n+  }\n+\n+  @Override\n+  public long bytesRead()\n+  {\n+    return bytesRead;\n+  }\n+\n+  @Override\n+  public long evictions()\n+  {\n+    return evictions;\n+  }\n+\n+  @Override\n+  public long evictionExceptions()\n+  {\n+    return evictionExceptions;\n+  }\n+\n+  @Override\n+  public long bytesWritten()\n+  {\n+    return bytesWritten;\n+  }\n+\n+  @Override\n+  public long flushes()\n+  {\n+    return flushes;\n+  }\n+\n+  @Override\n+  public double hitRatio()\n+  {\n+    return MathUtil.portion(hits(), faults());\n+  }\n+\n+  @Override\n+  public PinEvent beginPin(boolean writeLock, long filePageId, PageSwapper swapper)\n+  {\n+    pins++;\n+    pinTracingEvent.eventHits = 1;\n+    return pinTracingEvent;\n+  }\n+\n+  private final EvictionEvent evictionEvent = new EvictionEvent()\n+  {\n     @Override\n-    public void init( PageCacheTracer pageCacheTracer )\n+    public void setFilePageId(long filePageId)\n     {\n-        this.pageCacheTracer = pageCacheTracer;\n     }\n \n     @Override\n-    public void reportEvents()\n+    public void setSwapper(PageSwapper swapper)\n     {\n-        if ( pins > 0 )\n-        {\n-            pageCacheTracer.pins( pins );\n-        }\n-        if ( unpins > 0 )\n-        {\n-            pageCacheTracer.unpins( unpins );\n-        }\n-        if ( hits > 0 )\n-        {\n-            pageCacheTracer.hits( hits );\n-            historicalHits = historicalHits + hits;\n-        }\n-        if ( faults > 0 )\n-        {\n-            pageCacheTracer.faults( faults );\n-            historicalFaults = historicalFaults + faults;\n-        }\n-        if ( bytesRead > 0 )\n-        {\n-            pageCacheTracer.bytesRead( bytesRead );\n-        }\n-        if ( evictions > 0 )\n-        {\n-            pageCacheTracer.evictions( evictions );\n-        }\n-        if ( evictionExceptions > 0 )\n-        {\n-            pageCacheTracer.evictionExceptions( evictionExceptions );\n-        }\n-        if ( bytesWritten > 0 )\n-        {\n-            pageCacheTracer.bytesWritten( bytesWritten );\n-        }\n-        if ( flushes > 0 )\n-        {\n-            pageCacheTracer.flushes( flushes );\n-        }\n-        reset();\n     }\n \n     @Override\n-    public long accumulatedHits()\n+    public FlushEventOpportunity flushEventOpportunity()\n     {\n-        return historicalHits + hits;\n+      return flushEventOpportunity;\n     }\n \n     @Override\n-    public long accumulatedFaults()\n+    public void threwException(IOException exception)\n     {\n-        return historicalFaults + faults;\n+      evictionExceptions++;\n     }\n \n-    private void reset()\n+    @Override\n+    public void setCachePageId(long cachePageId)\n     {\n-        pins = 0;\n-        unpins = 0;\n-        hits = 0;\n-        faults = 0;\n-        bytesRead = 0;\n-        bytesWritten = 0;\n-        evictions = 0;\n-        evictionExceptions = 0;\n-        flushes = 0;\n     }\n \n     @Override\n-    public long faults()\n+    public void close()\n     {\n-        return faults;\n+      evictions++;\n     }\n+  };\n \n+  private final PageFaultEvent pageFaultEvent = new PageFaultEvent()\n+  {\n     @Override\n-    public long pins()\n+    public void addBytesRead(long bytes)\n     {\n-        return pins;\n+      bytesRead += bytes;\n     }\n \n     @Override\n-    public long unpins()\n+    public void done()\n     {\n-        return unpins;\n+      faults++;\n     }\n \n     @Override\n-    public long hits()\n+    public void done(Throwable throwable)\n     {\n-        return hits;\n+      done();\n     }\n \n     @Override\n-    public long bytesRead()\n+    public EvictionEvent beginEviction()\n     {\n-        return bytesRead;\n+      return evictionEvent;\n     }\n \n     @Override\n-    public long evictions()\n+    public void setCachePageId(long cachePageId)\n     {\n-        return evictions;\n     }\n+  };\n \n+  private final FlushEventOpportunity flushEventOpportunity = new FlushEventOpportunity()\n+  {\n     @Override\n-    public long evictionExceptions()\n+    public FlushEvent beginFlush(long filePageId, long cachePageId, PageSwapper swapper)\n     {\n-        return evictionExceptions;\n+      return flushEvent;\n     }\n+  };\n \n+  private final FlushEvent flushEvent = new FlushEvent()\n+  {\n     @Override\n-    public long bytesWritten()\n+    public void addBytesWritten(long bytes)\n     {\n-        return bytesWritten;\n+      bytesWritten += bytes;\n     }\n \n     @Override\n-    public long flushes()\n+    public void done()\n     {\n-        return flushes;\n+      flushes++;\n     }\n \n     @Override\n-    public double hitRatio()\n+    public void done(IOException exception)\n     {\n-        return MathUtil.portion( hits(), faults() );\n+      done();\n     }\n \n     @Override\n-    public PinEvent beginPin( boolean writeLock, long filePageId, PageSwapper swapper )\n+    public void addPagesFlushed(int pageCount)\n     {\n-        pins++;\n-        pinTracingEvent.eventHits = 1;\n-        return pinTracingEvent;\n     }\n+  };\n \n-    private final EvictionEvent evictionEvent = new EvictionEvent()\n-    {\n-        @Override\n-        public void setFilePageId( long filePageId )\n-        {\n-        }\n-\n-        @Override\n-        public void setSwapper( PageSwapper swapper )\n-        {\n-        }\n-\n-        @Override\n-        public FlushEventOpportunity flushEventOpportunity()\n-        {\n-            return flushEventOpportunity;\n-        }\n-\n-        @Override\n-        public void threwException( IOException exception )\n-        {\n-            evictionExceptions++;\n-        }\n-\n-        @Override\n-        public void setCachePageId( long cachePageId )\n-        {\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            evictions++;\n-        }\n-    };\n-\n-    private final PageFaultEvent pageFaultEvent = new PageFaultEvent()\n+  private class DefaultPinEvent implements PinEvent\n+  {\n+    int eventHits = 1;\n+\n+    @Override\n+    public void setCachePageId(long cachePageId)\n     {\n-        @Override\n-        public void addBytesRead( long bytes )\n-        {\n-            bytesRead += bytes;\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-            faults++;\n-        }\n-\n-        @Override\n-        public void done( Throwable throwable )\n-        {\n-            done();\n-        }\n-\n-        @Override\n-        public EvictionEvent beginEviction()\n-        {\n-            return evictionEvent;\n-        }\n-\n-        @Override\n-        public void setCachePageId( long cachePageId )\n-        {\n-        }\n-    };\n-\n-    private final FlushEventOpportunity flushEventOpportunity = new FlushEventOpportunity()\n+    }\n+\n+    @Override\n+    public PageFaultEvent beginPageFault()\n     {\n-        @Override\n-        public FlushEvent beginFlush( long filePageId, long cachePageId, PageSwapper swapper )\n-        {\n-            return flushEvent;\n-        }\n-    };\n-\n-    private final FlushEvent flushEvent = new FlushEvent()\n+      eventHits = 0;\n+      return pageFaultEvent;\n+    }\n+\n+    @Override\n+    public void hit()\n     {\n-        @Override\n-        public void addBytesWritten( long bytes )\n-        {\n-            bytesWritten += bytes;\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-            flushes++;\n-        }\n-\n-        @Override\n-        public void done( IOException exception )\n-        {\n-            done();\n-        }\n-\n-        @Override\n-        public void addPagesFlushed( int pageCount )\n-        {\n-        }\n-    };\n-\n-    private class DefaultPinEvent implements PinEvent\n+      hits += eventHits;\n+    }\n+\n+    @Override\n+    public void done()\n     {\n-        int eventHits = 1;\n-\n-        @Override\n-        public void setCachePageId( long cachePageId )\n-        {\n-        }\n-\n-        @Override\n-        public PageFaultEvent beginPageFault()\n-        {\n-            eventHits = 0;\n-            return pageFaultEvent;\n-        }\n-\n-        @Override\n-        public void hit()\n-        {\n-            hits += eventHits;\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-            unpins++;\n-        }\n+      unpins++;\n     }\n+  }\n }\n",
            "diff_size": 379
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4557/DefaultPageCursorTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4557/DefaultPageCursorTracer.java\nindex a1ed948e8ff..89b4df203f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4557/DefaultPageCursorTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4557/DefaultPageCursorTracer.java\n@@ -60,41 +60,50 @@ public class DefaultPageCursorTracer implements PageCursorTracer\n         {\n             pageCacheTracer.pins( pins );\n         }\n-        if ( unpins > 0 )\n+\n+if ( unpins > 0 )\n         {\n             pageCacheTracer.unpins( unpins );\n         }\n-        if ( hits > 0 )\n+\n+if ( hits > 0 )\n         {\n             pageCacheTracer.hits( hits );\n             historicalHits = historicalHits + hits;\n         }\n-        if ( faults > 0 )\n+\n+if ( faults > 0 )\n         {\n             pageCacheTracer.faults( faults );\n             historicalFaults = historicalFaults + faults;\n         }\n-        if ( bytesRead > 0 )\n+\n+if ( bytesRead > 0 )\n         {\n             pageCacheTracer.bytesRead( bytesRead );\n         }\n-        if ( evictions > 0 )\n+\n+if ( evictions > 0 )\n         {\n             pageCacheTracer.evictions( evictions );\n         }\n-        if ( evictionExceptions > 0 )\n+\n+if ( evictionExceptions > 0 )\n         {\n             pageCacheTracer.evictionExceptions( evictionExceptions );\n         }\n-        if ( bytesWritten > 0 )\n+\n+if ( bytesWritten > 0 )\n         {\n             pageCacheTracer.bytesWritten( bytesWritten );\n         }\n-        if ( flushes > 0 )\n+\n+if ( flushes > 0 )\n         {\n             pageCacheTracer.flushes( flushes );\n         }\n-        reset();\n+\n+reset();\n     }\n \n     @Override\n@@ -321,4 +330,4 @@ public class DefaultPageCursorTracer implements PageCursorTracer\n             unpins++;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4557/DefaultPageCursorTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4557/DefaultPageCursorTracer.java\nindex a1ed948e8ff..a6e73f7b63b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4557/DefaultPageCursorTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4557/DefaultPageCursorTracer.java\n@@ -20,7 +20,6 @@\n package org.neo4j.io.pagecache.tracing.cursor;\n \n import java.io.IOException;\n-\n import org.neo4j.helpers.MathUtil;\n import org.neo4j.io.pagecache.PageSwapper;\n import org.neo4j.io.pagecache.tracing.EvictionEvent;\n@@ -43,10 +42,8 @@ public class DefaultPageCursorTracer implements PageCursorTracer\n     private long evictions;\n     private long evictionExceptions;\n     private long flushes;\n-\n     private PageCacheTracer pageCacheTracer = PageCacheTracer.NULL;\n     private DefaultPinEvent pinTracingEvent = new DefaultPinEvent();\n-\n     @Override\n     public void init( PageCacheTracer pageCacheTracer )\n     {\n@@ -60,40 +57,49 @@ public class DefaultPageCursorTracer implements PageCursorTracer\n         {\n             pageCacheTracer.pins( pins );\n         }\n+\n         if ( unpins > 0 )\n         {\n             pageCacheTracer.unpins( unpins );\n         }\n+\n         if ( hits > 0 )\n         {\n             pageCacheTracer.hits( hits );\n             historicalHits = historicalHits + hits;\n         }\n+\n         if ( faults > 0 )\n         {\n             pageCacheTracer.faults( faults );\n             historicalFaults = historicalFaults + faults;\n         }\n+\n         if ( bytesRead > 0 )\n         {\n             pageCacheTracer.bytesRead( bytesRead );\n         }\n+\n         if ( evictions > 0 )\n         {\n             pageCacheTracer.evictions( evictions );\n         }\n+\n         if ( evictionExceptions > 0 )\n         {\n             pageCacheTracer.evictionExceptions( evictionExceptions );\n         }\n+\n         if ( bytesWritten > 0 )\n         {\n             pageCacheTracer.bytesWritten( bytesWritten );\n         }\n+\n         if ( flushes > 0 )\n         {\n             pageCacheTracer.flushes( flushes );\n         }\n+\n         reset();\n     }\n \n@@ -191,112 +197,107 @@ public class DefaultPageCursorTracer implements PageCursorTracer\n     }\n \n     private final EvictionEvent evictionEvent = new EvictionEvent()\n+{\n+    @Override\n+    public void setFilePageId( long filePageId )\n     {\n-        @Override\n-        public void setFilePageId( long filePageId )\n-        {\n-        }\n-\n-        @Override\n-        public void setSwapper( PageSwapper swapper )\n-        {\n-        }\n+    }\n \n-        @Override\n-        public FlushEventOpportunity flushEventOpportunity()\n-        {\n-            return flushEventOpportunity;\n-        }\n+    @Override\n+    public void setSwapper( PageSwapper swapper )\n+    {\n+    }\n \n-        @Override\n-        public void threwException( IOException exception )\n-        {\n-            evictionExceptions++;\n-        }\n+    @Override\n+    public FlushEventOpportunity flushEventOpportunity()\n+    {\n+        return flushEventOpportunity;\n+    }\n \n-        @Override\n-        public void setCachePageId( long cachePageId )\n-        {\n-        }\n+    @Override\n+    public void threwException( IOException exception )\n+    {\n+        evictionExceptions++;\n+    }\n \n-        @Override\n-        public void close()\n-        {\n-            evictions++;\n-        }\n-    };\n+    @Override\n+    public void setCachePageId( long cachePageId )\n+    {\n+    }\n \n+    @Override\n+    public void close()\n+    {\n+        evictions++;\n+    }\n+};\n     private final PageFaultEvent pageFaultEvent = new PageFaultEvent()\n+{\n+    @Override\n+    public void addBytesRead( long bytes )\n     {\n-        @Override\n-        public void addBytesRead( long bytes )\n-        {\n-            bytesRead += bytes;\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-            faults++;\n-        }\n+        bytesRead += bytes;\n+    }\n \n-        @Override\n-        public void done( Throwable throwable )\n-        {\n-            done();\n-        }\n+    @Override\n+    public void done()\n+    {\n+        faults++;\n+    }\n \n-        @Override\n-        public EvictionEvent beginEviction()\n-        {\n-            return evictionEvent;\n-        }\n+    @Override\n+    public void done( Throwable throwable )\n+    {\n+        done();\n+    }\n \n-        @Override\n-        public void setCachePageId( long cachePageId )\n-        {\n-        }\n-    };\n+    @Override\n+    public EvictionEvent beginEviction()\n+    {\n+        return evictionEvent;\n+    }\n \n+    @Override\n+    public void setCachePageId( long cachePageId )\n+    {\n+    }\n+};\n     private final FlushEventOpportunity flushEventOpportunity = new FlushEventOpportunity()\n+{\n+    @Override\n+    public FlushEvent beginFlush( long filePageId, long cachePageId, PageSwapper swapper )\n     {\n-        @Override\n-        public FlushEvent beginFlush( long filePageId, long cachePageId, PageSwapper swapper )\n-        {\n-            return flushEvent;\n-        }\n-    };\n-\n+        return flushEvent;\n+    }\n+};\n     private final FlushEvent flushEvent = new FlushEvent()\n+{\n+    @Override\n+    public void addBytesWritten( long bytes )\n     {\n-        @Override\n-        public void addBytesWritten( long bytes )\n-        {\n-            bytesWritten += bytes;\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-            flushes++;\n-        }\n+        bytesWritten += bytes;\n+    }\n \n-        @Override\n-        public void done( IOException exception )\n-        {\n-            done();\n-        }\n+    @Override\n+    public void done()\n+    {\n+        flushes++;\n+    }\n \n-        @Override\n-        public void addPagesFlushed( int pageCount )\n-        {\n-        }\n-    };\n+    @Override\n+    public void done( IOException exception )\n+    {\n+        done();\n+    }\n \n+    @Override\n+    public void addPagesFlushed( int pageCount )\n+    {\n+    }\n+};\n     private class DefaultPinEvent implements PinEvent\n     {\n         int eventHits = 1;\n-\n         @Override\n         public void setCachePageId( long cachePageId )\n         {\n@@ -321,4 +322,4 @@ public class DefaultPageCursorTracer implements PageCursorTracer\n             unpins++;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 126
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
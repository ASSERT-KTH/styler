{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2066",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2066/ReadOnlyTransactionIdStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2066/ReadOnlyTransactionIdStore.java\nindex 2eeda6ee62b..9198798f776 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2066/ReadOnlyTransactionIdStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2066/ReadOnlyTransactionIdStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.File;\n@@ -33,107 +34,107 @@ import static org.neo4j.kernel.impl.store.MetaDataStore.getRecord;\n \n public class ReadOnlyTransactionIdStore implements TransactionIdStore\n {\n-    private final long transactionId;\n-    private final long transactionChecksum;\n-    private final long logVersion;\n-    private final long byteOffset;\n-\n-    public ReadOnlyTransactionIdStore( PageCache pageCache, File storeDir ) throws IOException\n-    {\n-        long id = 0;\n-        long checksum = 0;\n-        long logVersion = 0;\n-        long byteOffset = 0;\n-        if ( NeoStores.isStorePresent( pageCache, storeDir ) )\n-        {\n-            File neoStore = new File( storeDir, MetaDataStore.DEFAULT_NAME );\n-            id = getRecord( pageCache, neoStore, Position.LAST_TRANSACTION_ID );\n-            checksum = getRecord( pageCache, neoStore, Position.LAST_TRANSACTION_CHECKSUM );\n-            logVersion = getRecord( pageCache, neoStore, Position.LAST_CLOSED_TRANSACTION_LOG_VERSION );\n-            byteOffset = getRecord( pageCache, neoStore, Position.LAST_CLOSED_TRANSACTION_LOG_BYTE_OFFSET );\n-        }\n-\n-        this.transactionId = id;\n-        this.transactionChecksum = checksum;\n-        this.logVersion = logVersion;\n-        this.byteOffset = byteOffset;\n-    }\n-\n-    @Override\n-    public long nextCommittingTransactionId()\n-    {\n-        throw new UnsupportedOperationException( \"Read-only transaction ID store\" );\n-    }\n-\n-    @Override\n-    public long committingTransactionId()\n-    {\n-        throw new UnsupportedOperationException( \"Read-only transaction ID store\" );\n-    }\n-\n-    @Override\n-    public void transactionCommitted( long transactionId, long checksum, long commitTimestamp )\n-    {\n-        throw new UnsupportedOperationException( \"Read-only transaction ID store\" );\n-    }\n-\n-    @Override\n-    public long getLastCommittedTransactionId()\n-    {\n-        return transactionId;\n-    }\n-\n-    @Override\n-    public TransactionId getLastCommittedTransaction()\n-    {\n-        return new TransactionId( transactionId, transactionChecksum, BASE_TX_COMMIT_TIMESTAMP );\n-    }\n-\n-    @Override\n-    public TransactionId getUpgradeTransaction()\n+  private final long transactionId;\n+  private final long transactionChecksum;\n+  private final long logVersion;\n+  private final long byteOffset;\n+\n+  public ReadOnlyTransactionIdStore(PageCache pageCache, File storeDir) throws IOException\n+  {\n+    long id = 0;\n+    long checksum = 0;\n+    long logVersion = 0;\n+    long byteOffset = 0;\n+    if (NeoStores.isStorePresent(pageCache, storeDir))\n     {\n-        return getLastCommittedTransaction();\n+      File neoStore = new File(storeDir, MetaDataStore.DEFAULT_NAME);\n+      id = getRecord(pageCache, neoStore, Position.LAST_TRANSACTION_ID);\n+      checksum = getRecord(pageCache, neoStore, Position.LAST_TRANSACTION_CHECKSUM);\n+      logVersion = getRecord(pageCache, neoStore, Position.LAST_CLOSED_TRANSACTION_LOG_VERSION);\n+      byteOffset = getRecord(pageCache, neoStore, Position.LAST_CLOSED_TRANSACTION_LOG_BYTE_OFFSET);\n     }\n \n-    @Override\n-    public long getLastClosedTransactionId()\n-    {\n-        return transactionId;\n-    }\n-\n-    @Override\n-    public void awaitClosedTransactionId( long txId, long timeoutMillis )\n-    {\n-        throw new UnsupportedOperationException( \"Not implemented\" );\n-    }\n-\n-    @Override\n-    public long[] getLastClosedTransaction()\n-    {\n-        return new long[]{transactionId, logVersion, byteOffset};\n-    }\n-\n-    @Override\n-    public void setLastCommittedAndClosedTransactionId( long transactionId, long checksum, long commitTimestamp,\n-            long logByteOffset, long logVersion )\n-    {\n-        throw new UnsupportedOperationException( \"Read-only transaction ID store\" );\n-    }\n-\n-    @Override\n-    public void transactionClosed( long transactionId, long logVersion, long logByteOffset )\n-    {\n-        throw new UnsupportedOperationException( \"Read-only transaction ID store\" );\n-    }\n-\n-    @Override\n-    public boolean closedTransactionIdIsOnParWithOpenedTransactionId()\n-    {\n-        throw new UnsupportedOperationException( \"Read-only transaction ID store\" );\n-    }\n-\n-    @Override\n-    public void flush()\n-    {   // Nothing to flush\n-    }\n+    this.transactionId = id;\n+    this.transactionChecksum = checksum;\n+    this.logVersion = logVersion;\n+    this.byteOffset = byteOffset;\n+  }\n+\n+  @Override\n+  public long nextCommittingTransactionId()\n+  {\n+    throw new UnsupportedOperationException(\"Read-only transaction ID store\");\n+  }\n+\n+  @Override\n+  public long committingTransactionId()\n+  {\n+    throw new UnsupportedOperationException(\"Read-only transaction ID store\");\n+  }\n+\n+  @Override\n+  public void transactionCommitted(long transactionId, long checksum, long commitTimestamp)\n+  {\n+    throw new UnsupportedOperationException(\"Read-only transaction ID store\");\n+  }\n+\n+  @Override\n+  public long getLastCommittedTransactionId()\n+  {\n+    return transactionId;\n+  }\n+\n+  @Override\n+  public TransactionId getLastCommittedTransaction()\n+  {\n+    return new TransactionId(transactionId, transactionChecksum, BASE_TX_COMMIT_TIMESTAMP);\n+  }\n+\n+  @Override\n+  public TransactionId getUpgradeTransaction()\n+  {\n+    return getLastCommittedTransaction();\n+  }\n+\n+  @Override\n+  public long getLastClosedTransactionId()\n+  {\n+    return transactionId;\n+  }\n+\n+  @Override\n+  public void awaitClosedTransactionId(long txId, long timeoutMillis)\n+  {\n+    throw new UnsupportedOperationException(\"Not implemented\");\n+  }\n+\n+  @Override\n+  public long[] getLastClosedTransaction()\n+  {\n+    return new long[] {transactionId, logVersion, byteOffset};\n+  }\n+\n+  @Override\n+  public void setLastCommittedAndClosedTransactionId(long transactionId, long checksum, long commitTimestamp,\n+                                                     long logByteOffset, long logVersion)\n+  {\n+    throw new UnsupportedOperationException(\"Read-only transaction ID store\");\n+  }\n+\n+  @Override\n+  public void transactionClosed(long transactionId, long logVersion, long logByteOffset)\n+  {\n+    throw new UnsupportedOperationException(\"Read-only transaction ID store\");\n+  }\n+\n+  @Override\n+  public boolean closedTransactionIdIsOnParWithOpenedTransactionId()\n+  {\n+    throw new UnsupportedOperationException(\"Read-only transaction ID store\");\n+  }\n+\n+  @Override\n+  public void flush()\n+  {   // Nothing to flush\n+  }\n }\n",
            "diff_size": 147
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2066/ReadOnlyTransactionIdStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2066/ReadOnlyTransactionIdStore.java\nindex 2eeda6ee62b..03e56ceb3c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2066/ReadOnlyTransactionIdStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2066/ReadOnlyTransactionIdStore.java\n@@ -134,6 +134,7 @@ public class ReadOnlyTransactionIdStore implements TransactionIdStore\n \n     @Override\n     public void flush()\n-    {   // Nothing to flush\n+    {\n+    // Nothing to flush\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
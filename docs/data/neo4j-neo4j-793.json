{
    "project_name": "neo4j-neo4j",
    "error_id": "793",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "87",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "325",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "456",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "465",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "512",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "583",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "589",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "589",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "625",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "637",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "637",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "712",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "712",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "724",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "724",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "733",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "733",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "743",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "743",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "767",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "767",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "772",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "772",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "774",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "774",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "812",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "812",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "825",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "825",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "827",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "827",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "830",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "837",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "837",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "839",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "839",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "847",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "847",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "849",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "849",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "857",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "857",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "859",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "859",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "867",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "867",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "869",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "869",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "879",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "879",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "887",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "887",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "889",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "889",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "897",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "897",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "899",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "899",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "911",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "911",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "934",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "934",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "937",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "937",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "945",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "945",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "947",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "947",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "951",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "951",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "953",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "953",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "959",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "959",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "963",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "963",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "965",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "965",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "969",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "969",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "971",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "971",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "977",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "977",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "981",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "981",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "983",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "983",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "996",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "996",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1012",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1012",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1028",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1028",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1045",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1045",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1065",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1065",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1091",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1091",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/793/Command.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/793/Command.java\nindex 1b83ad12bc6..23842e50c29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/793/Command.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/793/Command.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.io.IOException;\n@@ -83,26 +84,26 @@ public abstract class Command implements StorageCommand\n         UPDATE,\n         DELETE;\n \n-        public static Mode fromRecordState( boolean created, boolean inUse )\n+        public static Mode fromRecordState(boolean created, boolean inUse)\n         {\n-            if ( !inUse )\n+            if (!inUse)\n             {\n                 return DELETE;\n             }\n-            if ( created )\n+            if (created)\n             {\n                 return CREATE;\n             }\n             return UPDATE;\n         }\n \n-        public static Mode fromRecordState( AbstractBaseRecord record )\n+        public static Mode fromRecordState(AbstractBaseRecord record)\n         {\n-            return fromRecordState( record.isCreated(), record.inUse() );\n+            return fromRecordState(record.isCreated(), record.inUse());\n         }\n     }\n \n-    protected final void setup( long key, Mode mode )\n+    protected final void setup(long key, Mode mode)\n     {\n         this.mode = mode;\n         this.keyHash = (int) ((key >>> 32) ^ key);\n@@ -130,61 +131,60 @@ public abstract class Command implements StorageCommand\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        return o != null && o.getClass().equals( getClass() ) && getKey() == ((Command) o).getKey();\n+        return o != null && o.getClass().equals(getClass()) && getKey() == ((Command) o).getKey();\n     }\n \n-    public abstract boolean handle( CommandVisitor handler ) throws IOException;\n+    public abstract boolean handle(CommandVisitor handler) throws IOException;\n \n-    protected String beforeAndAfterToString( AbstractBaseRecord before, AbstractBaseRecord after )\n+    protected String beforeAndAfterToString(AbstractBaseRecord before, AbstractBaseRecord after)\n     {\n-        return format( \"\\t-%s%n\\t+%s\", before, after );\n+        return format(\"\\t-%s%n\\t+%s\", before, after);\n     }\n \n-    void writeDynamicRecords( WritableChannel channel, Collection<DynamicRecord> records ) throws IOException\n+    void writeDynamicRecords(WritableChannel channel, Collection<DynamicRecord> records) throws IOException\n     {\n-        writeDynamicRecords( channel, records, records.size() );\n+        writeDynamicRecords(channel, records, records.size());\n     }\n \n-    void writeDynamicRecords( WritableChannel channel, Iterable<DynamicRecord> records, int size ) throws IOException\n+    void writeDynamicRecords(WritableChannel channel, Iterable<DynamicRecord> records, int size) throws IOException\n     {\n-        channel.putInt( size ); // 4\n-        for ( DynamicRecord record : records )\n+        channel.putInt(size); // 4\n+        for (DynamicRecord record : records)\n         {\n-            writeDynamicRecord( channel, record );\n+            writeDynamicRecord(channel, record);\n         }\n     }\n \n-    void writeDynamicRecord( WritableChannel channel, DynamicRecord record ) throws IOException\n+    void writeDynamicRecord(WritableChannel channel, DynamicRecord record) throws IOException\n     {\n         // id+type+in_use(byte)+nr_of_bytes(int)+next_block(long)\n-        if ( record.inUse() )\n+        if (record.inUse())\n         {\n             byte inUse = Record.IN_USE.byteValue();\n-            if ( record.isCreated() )\n+            if (record.isCreated())\n             {\n                 inUse |= Record.CREATED_IN_TX;\n             }\n-            if ( record.isStartRecord() )\n+            if (record.isStartRecord())\n             {\n                 inUse |= Record.ADDITIONAL_FLAG_1;\n             }\n-            channel.putLong( record.getId() )\n-                   .putInt( record.getTypeAsInt() )\n-                   .put( inUse )\n-                   .putInt( record.getLength() )\n-                   .putLong( record.getNextBlock() );\n+            channel.putLong(record.getId())\n+              .putInt(record.getTypeAsInt())\n+              .put(inUse)\n+              .putInt(record.getLength())\n+              .putLong(record.getNextBlock());\n             byte[] data = record.getData();\n             assert data != null;\n-            channel.put( data, data.length );\n-        }\n-        else\n+            channel.put(data, data.length);\n+        } else\n         {\n             byte inUse = Record.NOT_IN_USE.byteValue();\n-            channel.putLong( record.getId() )\n-                   .putInt( record.getTypeAsInt() )\n-                   .put( inUse );\n+            channel.putLong(record.getId())\n+              .putInt(record.getTypeAsInt())\n+              .put(inUse);\n         }\n     }\n \n@@ -193,9 +193,9 @@ public abstract class Command implements StorageCommand\n         protected final RECORD before;\n         protected final RECORD after;\n \n-        public BaseCommand( RECORD before, RECORD after )\n+        public BaseCommand(RECORD before, RECORD after)\n         {\n-            setup( after.getId(), Mode.fromRecordState( after ) );\n+            setup(after.getId(), Mode.fromRecordState(after));\n             this.before = before;\n             this.after = after;\n         }\n@@ -203,7 +203,7 @@ public abstract class Command implements StorageCommand\n         @Override\n         public String toString()\n         {\n-            return beforeAndAfterToString( before, after );\n+            return beforeAndAfterToString(before, after);\n         }\n \n         public RECORD getBefore()\n@@ -219,195 +219,194 @@ public abstract class Command implements StorageCommand\n \n     public static class NodeCommand extends BaseCommand<NodeRecord>\n     {\n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( NodeCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(NodeCommand.class);\n         static final long HEAP_SIZE = NodeCommand.SHALLOW_SIZE + 2 * NodeRecord.SHALLOW_SIZE;\n \n-        public NodeCommand( NodeRecord before, NodeRecord after )\n+        public NodeCommand(NodeRecord before, NodeRecord after)\n         {\n-            super( before, after );\n+            super(before, after);\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitNodeCommand( this );\n+            return handler.visitNodeCommand(this);\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.NODE_COMMAND );\n-            channel.putLong( after.getId() );\n-            writeNodeRecord( channel, before );\n-            writeNodeRecord( channel, after );\n+            channel.put(NeoCommandType.NODE_COMMAND);\n+            channel.putLong(after.getId());\n+            writeNodeRecord(channel, before);\n+            writeNodeRecord(channel, after);\n         }\n \n-        private void writeNodeRecord( WritableChannel channel, NodeRecord record ) throws IOException\n+        private void writeNodeRecord(WritableChannel channel, NodeRecord record) throws IOException\n         {\n-            byte flags = bitFlags( bitFlag( record.inUse(), Record.IN_USE.byteValue() ),\n-                                   bitFlag( record.isCreated(), Record.CREATED_IN_TX ),\n-                                   bitFlag( record.requiresSecondaryUnit(), Record.REQUIRE_SECONDARY_UNIT ),\n-                                   bitFlag( record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT ),\n-                                   bitFlag( record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT ) );\n-            channel.put( flags );\n-            if ( record.inUse() )\n+            byte flags = bitFlags(bitFlag(record.inUse(), Record.IN_USE.byteValue()),\n+              bitFlag(record.isCreated(), Record.CREATED_IN_TX),\n+              bitFlag(record.requiresSecondaryUnit(), Record.REQUIRE_SECONDARY_UNIT),\n+              bitFlag(record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT),\n+              bitFlag(record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT));\n+            channel.put(flags);\n+            if (record.inUse())\n             {\n-                channel.put( record.isDense() ? (byte) 1 : (byte) 0 );\n-                channel.putLong( record.getNextRel() ).putLong( record.getNextProp() );\n-                channel.putLong( record.getLabelField() );\n-                if ( record.hasSecondaryUnitId() )\n+                channel.put(record.isDense() ? (byte) 1 : (byte) 0);\n+                channel.putLong(record.getNextRel()).putLong(record.getNextProp());\n+                channel.putLong(record.getLabelField());\n+                if (record.hasSecondaryUnitId())\n                 {\n-                    channel.putLong( record.getSecondaryUnitId() );\n+                    channel.putLong(record.getSecondaryUnitId());\n                 }\n             }\n             // Always write dynamic label records because we want to know which ones have been deleted\n             // especially if the node has been deleted.\n-            writeDynamicRecords( channel, record.getDynamicLabelRecords() );\n+            writeDynamicRecords(channel, record.getDynamicLabelRecords());\n         }\n     }\n \n     public static class RelationshipCommand extends BaseCommand<RelationshipRecord>\n     {\n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( RelationshipCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(RelationshipCommand.class);\n         static final long HEAP_SIZE = RelationshipCommand.SHALLOW_SIZE + 2 * RelationshipRecord.SHALLOW_SIZE;\n \n-        public RelationshipCommand( RelationshipRecord before, RelationshipRecord after )\n+        public RelationshipCommand(RelationshipRecord before, RelationshipRecord after)\n         {\n-            super( before, after );\n+            super(before, after);\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitRelationshipCommand( this );\n+            return handler.visitRelationshipCommand(this);\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.REL_COMMAND );\n-            channel.putLong( after.getId() );\n-            writeRelationshipRecord( channel, before );\n-            writeRelationshipRecord( channel, after );\n+            channel.put(NeoCommandType.REL_COMMAND);\n+            channel.putLong(after.getId());\n+            writeRelationshipRecord(channel, before);\n+            writeRelationshipRecord(channel, after);\n         }\n \n-        private void writeRelationshipRecord( WritableChannel channel, RelationshipRecord record ) throws IOException\n+        private void writeRelationshipRecord(WritableChannel channel, RelationshipRecord record) throws IOException\n         {\n-            byte flags = bitFlags( bitFlag( record.inUse(), Record.IN_USE.byteValue() ),\n-                                   bitFlag( record.isCreated(), Record.CREATED_IN_TX ),\n-                                   bitFlag( record.requiresSecondaryUnit(), Record.REQUIRE_SECONDARY_UNIT ),\n-                                   bitFlag( record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT ),\n-                                   bitFlag( record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT ) );\n-            channel.put( flags );\n-            if ( record.inUse() )\n+            byte flags = bitFlags(bitFlag(record.inUse(), Record.IN_USE.byteValue()),\n+              bitFlag(record.isCreated(), Record.CREATED_IN_TX),\n+              bitFlag(record.requiresSecondaryUnit(), Record.REQUIRE_SECONDARY_UNIT),\n+              bitFlag(record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT),\n+              bitFlag(record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT));\n+            channel.put(flags);\n+            if (record.inUse())\n             {\n-                channel.putLong( record.getFirstNode() ).putLong( record.getSecondNode() ).putInt( record.getType() )\n-                       .putLong( record.getFirstPrevRel() ).putLong( record.getFirstNextRel() )\n-                       .putLong( record.getSecondPrevRel() ).putLong( record.getSecondNextRel() )\n-                       .putLong( record.getNextProp() )\n-                       .put( (byte) ((record.isFirstInFirstChain() ? 1 : 0) | (record.isFirstInSecondChain() ? 2 : 0)) );\n-                if ( record.hasSecondaryUnitId() )\n+                channel.putLong(record.getFirstNode()).putLong(record.getSecondNode()).putInt(record.getType())\n+                  .putLong(record.getFirstPrevRel()).putLong(record.getFirstNextRel())\n+                  .putLong(record.getSecondPrevRel()).putLong(record.getSecondNextRel())\n+                  .putLong(record.getNextProp())\n+                  .put((byte) ((record.isFirstInFirstChain() ? 1 : 0) | (record.isFirstInSecondChain() ? 2 : 0)));\n+                if (record.hasSecondaryUnitId())\n                 {\n-                    channel.putLong( record.getSecondaryUnitId() );\n+                    channel.putLong(record.getSecondaryUnitId());\n                 }\n-            }\n-            else\n+            } else\n             {\n-                channel.putInt( record.getType() );\n+                channel.putInt(record.getType());\n             }\n         }\n     }\n \n     public static class RelationshipGroupCommand extends BaseCommand<RelationshipGroupRecord>\n     {\n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( RelationshipGroupCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(RelationshipGroupCommand.class);\n         static final long HEAP_SIZE = RelationshipGroupCommand.SHALLOW_SIZE + 2 * RelationshipGroupRecord.SHALLOW_SIZE;\n \n-        public RelationshipGroupCommand( RelationshipGroupRecord before, RelationshipGroupRecord after )\n+        public RelationshipGroupCommand(RelationshipGroupRecord before, RelationshipGroupRecord after)\n         {\n-            super( before, after );\n+            super(before, after);\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitRelationshipGroupCommand( this );\n+            return handler.visitRelationshipGroupCommand(this);\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n-        {\n-            channel.put( NeoCommandType.REL_GROUP_COMMAND );\n-            channel.putLong( after.getId() );\n-            writeRelationshipGroupRecord( channel, before );\n-            writeRelationshipGroupRecord( channel, after );\n-        }\n-\n-        private void writeRelationshipGroupRecord( WritableChannel channel, RelationshipGroupRecord record )\n-                throws IOException\n-        {\n-            byte flags = bitFlags( bitFlag( record.inUse(), Record.IN_USE.byteValue() ),\n-                                   bitFlag( record.requiresSecondaryUnit(), Record.REQUIRE_SECONDARY_UNIT ),\n-                                   bitFlag( record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT ),\n-                                   bitFlag( record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT ) );\n-            channel.put( flags );\n-            channel.putShort( (short) record.getType() );\n-            channel.putLong( record.getNext() );\n-            channel.putLong( record.getFirstOut() );\n-            channel.putLong( record.getFirstIn() );\n-            channel.putLong( record.getFirstLoop() );\n-            channel.putLong( record.getOwningNode() );\n-            if ( record.hasSecondaryUnitId() )\n+        public void serialize(WritableChannel channel) throws IOException\n+        {\n+            channel.put(NeoCommandType.REL_GROUP_COMMAND);\n+            channel.putLong(after.getId());\n+            writeRelationshipGroupRecord(channel, before);\n+            writeRelationshipGroupRecord(channel, after);\n+        }\n+\n+        private void writeRelationshipGroupRecord(WritableChannel channel, RelationshipGroupRecord record)\n+          throws IOException\n+        {\n+            byte flags = bitFlags(bitFlag(record.inUse(), Record.IN_USE.byteValue()),\n+              bitFlag(record.requiresSecondaryUnit(), Record.REQUIRE_SECONDARY_UNIT),\n+              bitFlag(record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT),\n+              bitFlag(record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT));\n+            channel.put(flags);\n+            channel.putShort((short) record.getType());\n+            channel.putLong(record.getNext());\n+            channel.putLong(record.getFirstOut());\n+            channel.putLong(record.getFirstIn());\n+            channel.putLong(record.getFirstLoop());\n+            channel.putLong(record.getOwningNode());\n+            if (record.hasSecondaryUnitId())\n             {\n-                channel.putLong( record.getSecondaryUnitId() );\n+                channel.putLong(record.getSecondaryUnitId());\n             }\n         }\n     }\n \n     // Command that was used for graph properties.\n     // Here only for compatibility reasons for older versions (before 4.0)\n-    @Deprecated( forRemoval = true )\n+    @Deprecated(forRemoval = true)\n     public static class NeoStoreCommand extends BaseCommand<NeoStoreRecord>\n     {\n-        NeoStoreCommand( NeoStoreRecord before, NeoStoreRecord after )\n+        NeoStoreCommand(NeoStoreRecord before, NeoStoreRecord after)\n         {\n-            super( before, after );\n+            super(before, after);\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n             return false;\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.NEOSTORE_COMMAND );\n-            writeNeoStoreRecord( channel, before );\n-            writeNeoStoreRecord( channel, after );\n+            channel.put(NeoCommandType.NEOSTORE_COMMAND);\n+            writeNeoStoreRecord(channel, before);\n+            writeNeoStoreRecord(channel, after);\n         }\n \n-        private void writeNeoStoreRecord( WritableChannel channel, NeoStoreRecord record ) throws IOException\n+        private void writeNeoStoreRecord(WritableChannel channel, NeoStoreRecord record) throws IOException\n         {\n-            channel.putLong( record.getNextProp() );\n+            channel.putLong(record.getNextProp());\n         }\n     }\n \n     public static class PropertyCommand extends BaseCommand<PropertyRecord> implements PropertyRecordChange\n     {\n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( PropertyCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(PropertyCommand.class);\n         static final long HEAP_SIZE = PropertyCommand.SHALLOW_SIZE + 2 * PropertyRecord.INITIAL_SIZE;\n \n-        public PropertyCommand( PropertyRecord before, PropertyRecord after )\n+        public PropertyCommand(PropertyRecord before, PropertyRecord after)\n         {\n-            super( before, after );\n+            super(before, after);\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitPropertyCommand( this );\n+            return handler.visitPropertyCommand(this);\n         }\n \n         public long getEntityId()\n@@ -431,62 +430,60 @@ public abstract class Command implements StorageCommand\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.PROP_COMMAND );\n-            channel.putLong( after.getId() );\n-            writePropertyRecord( channel, before );\n-            writePropertyRecord( channel, after );\n+            channel.put(NeoCommandType.PROP_COMMAND);\n+            channel.putLong(after.getId());\n+            writePropertyRecord(channel, before);\n+            writePropertyRecord(channel, after);\n         }\n \n-        private void writePropertyRecord( WritableChannel channel, PropertyRecord record ) throws IOException\n+        private void writePropertyRecord(WritableChannel channel, PropertyRecord record) throws IOException\n         {\n-            byte flags = bitFlags( bitFlag( record.inUse(), Record.IN_USE.byteValue() ),\n-                                   bitFlag( record.getRelId() != -1, Record.REL_PROPERTY.byteValue() ),\n-                                   bitFlag( record.requiresSecondaryUnit(), Record.REQUIRE_SECONDARY_UNIT ),\n-                                   bitFlag( record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT ),\n-                                   bitFlag( record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT ) );\n+            byte flags = bitFlags(bitFlag(record.inUse(), Record.IN_USE.byteValue()),\n+              bitFlag(record.getRelId() != -1, Record.REL_PROPERTY.byteValue()),\n+              bitFlag(record.requiresSecondaryUnit(), Record.REQUIRE_SECONDARY_UNIT),\n+              bitFlag(record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT),\n+              bitFlag(record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT));\n \n-            channel.put( flags ); // 1\n-            channel.putLong( record.getNextProp() ).putLong( record.getPrevProp() ); // 8 + 8\n+            channel.put(flags); // 1\n+            channel.putLong(record.getNextProp()).putLong(record.getPrevProp()); // 8 + 8\n             long nodeId = record.getNodeId();\n             long relId = record.getRelId();\n-            if ( nodeId != -1 )\n+            if (nodeId != -1)\n             {\n-                channel.putLong( nodeId ); // 8 or\n-            }\n-            else if ( relId != -1 )\n+                channel.putLong(nodeId); // 8 or\n+            } else if (relId != -1)\n             {\n-                channel.putLong( relId ); // 8 or\n-            }\n-            else\n+                channel.putLong(relId); // 8 or\n+            } else\n             {\n                 // means this records value has not changed, only place in\n                 // prop chain\n-                channel.putLong( -1 ); // 8\n+                channel.putLong(-1); // 8\n             }\n-            if ( record.hasSecondaryUnitId() )\n+            if (record.hasSecondaryUnitId())\n             {\n-                channel.putLong( record.getSecondaryUnitId() );\n+                channel.putLong(record.getSecondaryUnitId());\n             }\n-            channel.put( (byte) record.numberOfProperties() ); // 1\n-            for ( PropertyBlock block : record )\n+            channel.put((byte) record.numberOfProperties()); // 1\n+            for (PropertyBlock block : record)\n             {\n                 assert block.getSize() > 0 : record + \" seems kinda broken\";\n-                writePropertyBlock( channel, block );\n+                writePropertyBlock(channel, block);\n             }\n-            writeDynamicRecords( channel, record.getDeletedRecords() );\n+            writeDynamicRecords(channel, record.getDeletedRecords());\n         }\n \n-        private void writePropertyBlock( WritableChannel channel, PropertyBlock block ) throws IOException\n+        private void writePropertyBlock(WritableChannel channel, PropertyBlock block) throws IOException\n         {\n             byte blockSize = (byte) block.getSize();\n             assert blockSize > 0 : blockSize + \" is not a valid block size value\";\n-            channel.put( blockSize ); // 1\n+            channel.put(blockSize); // 1\n             long[] propBlockValues = block.getValueBlocks();\n-            for ( long propBlockValue : propBlockValues )\n+            for (long propBlockValue : propBlockValues)\n             {\n-                channel.putLong( propBlockValue );\n+                channel.putLong(propBlockValue);\n             }\n             /*\n              * For each block we need to keep its dynamic record chain if\n@@ -494,7 +491,7 @@ public abstract class Command implements StorageCommand\n              * record and dynamic records are never modified. Also, they are\n              * assigned as a whole, so just checking the first should be enough.\n              */\n-            if ( block.isLight() )\n+            if (block.isLight())\n             {\n                 /*\n                  *  This has to be int. If this record is not light\n@@ -502,26 +499,25 @@ public abstract class Command implements StorageCommand\n                  *  which is an int. We do not currently want/have a flag bit so\n                  *  we simplify by putting an int here always\n                  */\n-                channel.putInt( 0 ); // 4 or\n-            }\n-            else\n+                channel.putInt(0); // 4 or\n+            } else\n             {\n-                writeDynamicRecords( channel, block.getValueRecords() );\n+                writeDynamicRecords(channel, block.getValueRecords());\n             }\n         }\n     }\n \n     public abstract static class TokenCommand<RECORD extends TokenRecord> extends BaseCommand<RECORD> implements StorageCommand.TokenCommand\n     {\n-        public TokenCommand( RECORD before, RECORD after )\n+        public TokenCommand(RECORD before, RECORD after)\n         {\n-            super( before, after );\n+            super(before, after);\n         }\n \n         @Override\n         public int tokenId()\n         {\n-            return toIntExact( getKey() );\n+            return toIntExact(getKey());\n         }\n \n         @Override\n@@ -533,128 +529,126 @@ public abstract class Command implements StorageCommand\n         @Override\n         public String toString()\n         {\n-            return beforeAndAfterToString( before, after );\n+            return beforeAndAfterToString(before, after);\n         }\n     }\n \n     public static class PropertyKeyTokenCommand extends TokenCommand<PropertyKeyTokenRecord>\n     {\n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( PropertyKeyTokenCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(PropertyKeyTokenCommand.class);\n         static final long HEAP_SIZE = PropertyKeyTokenCommand.SHALLOW_SIZE + 2 * PropertyKeyTokenRecord.SHALLOW_SIZE;\n \n-        public PropertyKeyTokenCommand( PropertyKeyTokenRecord before, PropertyKeyTokenRecord after )\n+        public PropertyKeyTokenCommand(PropertyKeyTokenRecord before, PropertyKeyTokenRecord after)\n         {\n-            super( before, after );\n+            super(before, after);\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitPropertyKeyTokenCommand( this );\n+            return handler.visitPropertyKeyTokenCommand(this);\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.PROP_INDEX_COMMAND );\n-            channel.putInt( after.getIntId() );\n-            writePropertyKeyTokenRecord( channel, before );\n-            writePropertyKeyTokenRecord( channel, after );\n+            channel.put(NeoCommandType.PROP_INDEX_COMMAND);\n+            channel.putInt(after.getIntId());\n+            writePropertyKeyTokenRecord(channel, before);\n+            writePropertyKeyTokenRecord(channel, after);\n         }\n \n-        private void writePropertyKeyTokenRecord( WritableChannel channel, PropertyKeyTokenRecord record ) throws IOException\n+        private void writePropertyKeyTokenRecord(WritableChannel channel, PropertyKeyTokenRecord record) throws IOException\n         {\n             // id+in_use(byte)+count(int)+key_blockId(int)+nr_key_records(int)\n             byte headerByte = record.inUse() ? Record.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n             headerByte += record.isInternal() ? Record.ADDITIONAL_FLAG_1 : 0;\n-            channel.put( headerByte );\n-            channel.putInt( record.getPropertyCount() ).putInt( record.getNameId() );\n-            if ( record.isLight() )\n+            channel.put(headerByte);\n+            channel.putInt(record.getPropertyCount()).putInt(record.getNameId());\n+            if (record.isLight())\n             {\n-                channel.putInt( 0 );\n-            }\n-            else\n+                channel.putInt(0);\n+            } else\n             {\n-                writeDynamicRecords( channel, record.getNameRecords() );\n+                writeDynamicRecords(channel, record.getNameRecords());\n             }\n         }\n     }\n \n     public static class RelationshipTypeTokenCommand extends TokenCommand<RelationshipTypeTokenRecord>\n     {\n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( RelationshipTypeTokenCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(RelationshipTypeTokenCommand.class);\n         static final long HEAP_SIZE = RelationshipTypeTokenCommand.SHALLOW_SIZE + 2 * RelationshipTypeTokenRecord.SHALLOW_SIZE;\n \n-        public RelationshipTypeTokenCommand( RelationshipTypeTokenRecord before, RelationshipTypeTokenRecord after )\n+        public RelationshipTypeTokenCommand(RelationshipTypeTokenRecord before, RelationshipTypeTokenRecord after)\n         {\n-            super( before, after );\n+            super(before, after);\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitRelationshipTypeTokenCommand( this );\n+            return handler.visitRelationshipTypeTokenCommand(this);\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.REL_TYPE_COMMAND );\n-            channel.putInt( after.getIntId() );\n-            writeRelationshipTypeTokenRecord( channel, before );\n-            writeRelationshipTypeTokenRecord( channel, after );\n+            channel.put(NeoCommandType.REL_TYPE_COMMAND);\n+            channel.putInt(after.getIntId());\n+            writeRelationshipTypeTokenRecord(channel, before);\n+            writeRelationshipTypeTokenRecord(channel, after);\n         }\n \n-        private void writeRelationshipTypeTokenRecord( WritableChannel channel, RelationshipTypeTokenRecord record ) throws IOException\n+        private void writeRelationshipTypeTokenRecord(WritableChannel channel, RelationshipTypeTokenRecord record) throws IOException\n         {\n             // id+in_use(byte)+count(int)+key_blockId(int)+nr_key_records(int)\n             byte headerByte = record.inUse() ? Record.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n             headerByte += record.isInternal() ? Record.ADDITIONAL_FLAG_1 : 0;\n-            channel.put( headerByte );\n-            channel.putInt( record.getNameId() );\n-            if ( record.isLight() )\n+            channel.put(headerByte);\n+            channel.putInt(record.getNameId());\n+            if (record.isLight())\n             {\n-                channel.putInt( 0 );\n-            }\n-            else\n+                channel.putInt(0);\n+            } else\n             {\n-                writeDynamicRecords( channel, record.getNameRecords() );\n+                writeDynamicRecords(channel, record.getNameRecords());\n             }\n         }\n     }\n \n     public static class LabelTokenCommand extends TokenCommand<LabelTokenRecord>\n     {\n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( LabelTokenCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(LabelTokenCommand.class);\n         static final long HEAP_SIZE = LabelTokenCommand.SHALLOW_SIZE + 2 * LabelTokenRecord.SHALLOW_SIZE;\n \n-        public LabelTokenCommand( LabelTokenRecord before, LabelTokenRecord after )\n+        public LabelTokenCommand(LabelTokenRecord before, LabelTokenRecord after)\n         {\n-            super( before, after );\n+            super(before, after);\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitLabelTokenCommand( this );\n+            return handler.visitLabelTokenCommand(this);\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.LABEL_KEY_COMMAND );\n-            channel.putInt( after.getIntId() );\n-            writeLabelTokenRecord( channel, before );\n-            writeLabelTokenRecord( channel, after );\n+            channel.put(NeoCommandType.LABEL_KEY_COMMAND);\n+            channel.putInt(after.getIntId());\n+            writeLabelTokenRecord(channel, before);\n+            writeLabelTokenRecord(channel, after);\n         }\n \n-        private void writeLabelTokenRecord( WritableChannel channel, LabelTokenRecord record ) throws IOException\n+        private void writeLabelTokenRecord(WritableChannel channel, LabelTokenRecord record) throws IOException\n         {\n             // id+in_use(byte)+type_blockId(int)+nr_type_records(int)\n             byte headerByte = record.inUse() ? Record.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n             headerByte += record.isInternal() ? Record.ADDITIONAL_FLAG_1 : 0;\n-            channel.put( headerByte ).putInt( record.getNameId() );\n-            writeDynamicRecords( channel, record.getNameRecords() );\n+            channel.put(headerByte).putInt(record.getNameId());\n+            writeDynamicRecords(channel, record.getNameRecords());\n         }\n     }\n \n@@ -662,12 +656,12 @@ public abstract class Command implements StorageCommand\n     {\n         private final SchemaRule schemaRule;\n \n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( SchemaRuleCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(SchemaRuleCommand.class);\n         static final long HEAP_SIZE = SchemaRuleCommand.SHALLOW_SIZE + 2 * SchemaRecord.SHALLOW_SIZE;\n \n-        public SchemaRuleCommand( SchemaRecord recordBefore, SchemaRecord recordAfter, SchemaRule schemaRule )\n+        public SchemaRuleCommand(SchemaRecord recordBefore, SchemaRecord recordAfter, SchemaRule schemaRule)\n         {\n-            super( recordBefore, recordAfter );\n+            super(recordBefore, recordAfter);\n             this.schemaRule = schemaRule;\n         }\n \n@@ -675,7 +669,7 @@ public abstract class Command implements StorageCommand\n         public String toString()\n         {\n             String beforeAndAfterRecords = super.toString();\n-            if ( schemaRule != null )\n+            if (schemaRule != null)\n             {\n                 return beforeAndAfterRecords + \" : \" + schemaRule;\n             }\n@@ -683,9 +677,9 @@ public abstract class Command implements StorageCommand\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitSchemaRuleCommand( this );\n+            return handler.visitSchemaRuleCommand(this);\n         }\n \n         public SchemaRule getSchemaRule()\n@@ -694,62 +688,62 @@ public abstract class Command implements StorageCommand\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.SCHEMA_RULE_COMMAND );\n-            channel.putLong( before.getId() );\n+            channel.put(NeoCommandType.SCHEMA_RULE_COMMAND);\n+            channel.putLong(before.getId());\n             boolean hasSchemaRule = schemaRule != null;\n-            channel.put( hasSchemaRule ? SchemaRecord.COMMAND_HAS_SCHEMA_RULE : SchemaRecord.COMMAND_HAS_NO_SCHEMA_RULE );\n-            writeSchemaRecord( channel, before );\n-            writeSchemaRecord( channel, after );\n-            if ( hasSchemaRule )\n+            channel.put(hasSchemaRule ? SchemaRecord.COMMAND_HAS_SCHEMA_RULE : SchemaRecord.COMMAND_HAS_NO_SCHEMA_RULE);\n+            writeSchemaRecord(channel, before);\n+            writeSchemaRecord(channel, after);\n+            if (hasSchemaRule)\n             {\n-                writeSchemaRule( channel );\n+                writeSchemaRule(channel);\n             }\n         }\n \n-        private void writeSchemaRecord( WritableChannel channel, SchemaRecord record ) throws IOException\n+        private void writeSchemaRecord(WritableChannel channel, SchemaRecord record) throws IOException\n         {\n-            byte flags = bitFlags( bitFlag( record.inUse(), Record.IN_USE.byteValue() ),\n-                                   bitFlag( record.isCreated(), Record.CREATED_IN_TX ),\n-                                   bitFlag( record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT ),\n-                                   bitFlag( record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT ) );\n-            channel.put( flags );\n-            if ( record.inUse() )\n+            byte flags = bitFlags(bitFlag(record.inUse(), Record.IN_USE.byteValue()),\n+              bitFlag(record.isCreated(), Record.CREATED_IN_TX),\n+              bitFlag(record.isUseFixedReferences(), Record.USES_FIXED_REFERENCE_FORMAT),\n+              bitFlag(record.hasSecondaryUnitId(), Record.HAS_SECONDARY_UNIT));\n+            channel.put(flags);\n+            if (record.inUse())\n             {\n-                byte schemaFlags = bitFlags( bitFlag( record.isConstraint(), SchemaRecord.SCHEMA_FLAG_IS_CONSTRAINT ) );\n-                channel.put( schemaFlags );\n-                channel.putLong( record.getNextProp() );\n-                if ( record.hasSecondaryUnitId() )\n+                byte schemaFlags = bitFlags(bitFlag(record.isConstraint(), SchemaRecord.SCHEMA_FLAG_IS_CONSTRAINT));\n+                channel.put(schemaFlags);\n+                channel.putLong(record.getNextProp());\n+                if (record.hasSecondaryUnitId())\n                 {\n-                    channel.putLong( record.getSecondaryUnitId() );\n+                    channel.putLong(record.getSecondaryUnitId());\n                 }\n             }\n         }\n \n-        private void writeSchemaRule( WritableChannel channel ) throws IOException\n+        private void writeSchemaRule(WritableChannel channel) throws IOException\n         {\n-            Map<String,Value> ruleMap = SchemaStore.mapifySchemaRule( schemaRule );\n-            writeStringValueMap( channel, ruleMap );\n+            Map<String, Value> ruleMap = SchemaStore.mapifySchemaRule(schemaRule);\n+            writeStringValueMap(channel, ruleMap);\n         }\n \n         /**\n          * @see PhysicalLogCommandReaderV4_0#readStringValueMap(ReadableChannel)\n          */\n-        void writeStringValueMap( WritableChannel channel, Map<String,Value> ruleMap ) throws IOException\n+        void writeStringValueMap(WritableChannel channel, Map<String, Value> ruleMap) throws IOException\n         {\n-            channel.putInt( ruleMap.size() );\n-            for ( Map.Entry<String,Value> entry : ruleMap.entrySet() )\n+            channel.putInt(ruleMap.size());\n+            for (Map.Entry<String, Value> entry : ruleMap.entrySet())\n             {\n-                writeMapKeyByteArray( channel, UTF8.encode( entry.getKey() ) );\n-                writeMapValue( channel, entry.getValue() );\n+                writeMapKeyByteArray(channel, UTF8.encode(entry.getKey()));\n+                writeMapValue(channel, entry.getValue());\n             }\n         }\n \n-        private void writeMapKeyByteArray( WritableChannel channel, byte[] bytes ) throws IOException\n+        private void writeMapKeyByteArray(WritableChannel channel, byte[] bytes) throws IOException\n         {\n-            channel.putInt( bytes.length );\n-            channel.put( bytes, bytes.length );\n+            channel.putInt(bytes.length);\n+            channel.put(bytes, bytes.length);\n         }\n \n         enum SchemaMapValueType\n@@ -770,42 +764,42 @@ public abstract class Command implements StorageCommand\n \n             private static final SchemaMapValueType[] TYPE_ID_TO_ENUM = values(); // This works because 'type' is equal to ordinal.\n \n-            public static SchemaMapValueType map( byte type )\n+            public static SchemaMapValueType map(byte type)\n             {\n                 return TYPE_ID_TO_ENUM[type];\n             }\n \n-            public static SchemaMapValueType map( ValueWriter.ArrayType arrayType ) throws IOException\n+            public static SchemaMapValueType map(ValueWriter.ArrayType arrayType) throws IOException\n             {\n-                switch ( arrayType )\n+                switch (arrayType)\n                 {\n-                case BYTE:\n-                    return BYTE;\n-                case SHORT:\n-                    return SHORT;\n-                case INT:\n-                    return INT;\n-                case LONG:\n-                    return LONG;\n-                case FLOAT:\n-                    return FLOAT;\n-                case DOUBLE:\n-                    return DOUBLE;\n-                case BOOLEAN:\n-                    return BOOL_ARRAY_ELEMENT;\n-                case STRING:\n-                    return STRING;\n-                case CHAR:\n-                    return CHAR;\n-                case POINT:\n-                case ZONED_DATE_TIME:\n-                case LOCAL_DATE_TIME:\n-                case DATE:\n-                case ZONED_TIME:\n-                case LOCAL_TIME:\n-                case DURATION:\n-                default:\n-                    throw new IOException( \"Unsupported schema record map value type: \" + arrayType );\n+                    case BYTE:\n+                        return BYTE;\n+                    case SHORT:\n+                        return SHORT;\n+                    case INT:\n+                        return INT;\n+                    case LONG:\n+                        return LONG;\n+                    case FLOAT:\n+                        return FLOAT;\n+                    case DOUBLE:\n+                        return DOUBLE;\n+                    case BOOLEAN:\n+                        return BOOL_ARRAY_ELEMENT;\n+                    case STRING:\n+                        return STRING;\n+                    case CHAR:\n+                        return CHAR;\n+                    case POINT:\n+                    case ZONED_DATE_TIME:\n+                    case LOCAL_DATE_TIME:\n+                    case DATE:\n+                    case ZONED_TIME:\n+                    case LOCAL_TIME:\n+                    case DURATION:\n+                    default:\n+                        throw new IOException(\"Unsupported schema record map value type: \" + arrayType);\n                 }\n             }\n \n@@ -815,120 +809,119 @@ public abstract class Command implements StorageCommand\n             }\n         }\n \n-        private void writeMapValue( WritableChannel channel, Value value ) throws IOException\n+        private void writeMapValue(WritableChannel channel, Value value) throws IOException\n         {\n-            value.writeTo( new ValueWriter<IOException>()\n+            value.writeTo(new ValueWriter<IOException>()\n             {\n                 private boolean arrayContext;\n \n                 @Override\n                 public void writeNull() throws IOException\n                 {\n-                    throw new IOException( \"Cannot write null entry value in schema record map representation.\" );\n+                    throw new IOException(\"Cannot write null entry value in schema record map representation.\");\n                 }\n \n                 @Override\n-                public void writeBoolean( boolean value ) throws IOException\n+                public void writeBoolean(boolean value) throws IOException\n                 {\n-                    if ( value )\n+                    if (value)\n                     {\n-                        channel.put( SchemaMapValueType.BOOL_LITERAL_TRUE.type() );\n-                    }\n-                    else\n+                        channel.put(SchemaMapValueType.BOOL_LITERAL_TRUE.type());\n+                    } else\n                     {\n-                        channel.put( SchemaMapValueType.BOOL_LITERAL_FALSE.type() );\n+                        channel.put(SchemaMapValueType.BOOL_LITERAL_FALSE.type());\n                     }\n                 }\n \n                 @Override\n-                public void writeInteger( byte value ) throws IOException\n+                public void writeInteger(byte value) throws IOException\n                 {\n-                    if ( !arrayContext )\n+                    if (!arrayContext)\n                     {\n-                        channel.put( SchemaMapValueType.BYTE.type() );\n+                        channel.put(SchemaMapValueType.BYTE.type());\n                     }\n-                    channel.put( value );\n+                    channel.put(value);\n                 }\n \n                 @Override\n-                public void writeInteger( short value ) throws IOException\n+                public void writeInteger(short value) throws IOException\n                 {\n-                    if ( !arrayContext )\n+                    if (!arrayContext)\n                     {\n-                        channel.put( SchemaMapValueType.SHORT.type() );\n+                        channel.put(SchemaMapValueType.SHORT.type());\n                     }\n-                    channel.putShort( value );\n+                    channel.putShort(value);\n                 }\n \n                 @Override\n-                public void writeInteger( int value ) throws IOException\n+                public void writeInteger(int value) throws IOException\n                 {\n-                    if ( !arrayContext )\n+                    if (!arrayContext)\n                     {\n-                        channel.put( SchemaMapValueType.INT.type() );\n+                        channel.put(SchemaMapValueType.INT.type());\n                     }\n-                    channel.putInt( value );\n+                    channel.putInt(value);\n                 }\n \n                 @Override\n-                public void writeInteger( long value ) throws IOException\n+                public void writeInteger(long value) throws IOException\n                 {\n-                    if ( !arrayContext )\n+                    if (!arrayContext)\n                     {\n-                        channel.put( SchemaMapValueType.LONG.type() );\n+                        channel.put(SchemaMapValueType.LONG.type());\n                     }\n-                    channel.putLong( value );\n+                    channel.putLong(value);\n                 }\n \n                 @Override\n-                public void writeFloatingPoint( float value ) throws IOException\n+                public void writeFloatingPoint(float value) throws IOException\n                 {\n-                    if ( !arrayContext )\n+                    if (!arrayContext)\n                     {\n-                        channel.put( SchemaMapValueType.FLOAT.type() );\n+                        channel.put(SchemaMapValueType.FLOAT.type());\n                     }\n-                    channel.putFloat( value );\n+                    channel.putFloat(value);\n                 }\n \n                 @Override\n-                public void writeFloatingPoint( double value ) throws IOException\n+                public void writeFloatingPoint(double value) throws IOException\n                 {\n-                    if ( !arrayContext )\n+                    if (!arrayContext)\n                     {\n-                        channel.put( SchemaMapValueType.DOUBLE.type() );\n+                        channel.put(SchemaMapValueType.DOUBLE.type());\n                     }\n-                    channel.putDouble( value );\n+                    channel.putDouble(value);\n                 }\n \n                 @Override\n-                public void writeString( String value ) throws IOException\n+                public void writeString(String value) throws IOException\n                 {\n-                    if ( !arrayContext )\n+                    if (!arrayContext)\n                     {\n-                        channel.put( SchemaMapValueType.STRING.type() );\n+                        channel.put(SchemaMapValueType.STRING.type());\n                     }\n-                    byte[] bytes = UTF8.encode( value );\n-                    channel.putInt( bytes.length );\n-                    channel.put( bytes, bytes.length );\n+                    byte[] bytes = UTF8.encode(value);\n+                    channel.putInt(bytes.length);\n+                    channel.put(bytes, bytes.length);\n                 }\n \n                 @Override\n-                public void writeString( char value ) throws IOException\n+                public void writeString(char value) throws IOException\n                 {\n-                    if ( !arrayContext )\n+                    if (!arrayContext)\n                     {\n-                        channel.put( SchemaMapValueType.CHAR.type() );\n+                        channel.put(SchemaMapValueType.CHAR.type());\n                     }\n-                    channel.putInt( value );\n+                    channel.putInt(value);\n                 }\n \n                 @Override\n-                public void beginArray( int size, ArrayType arrayType ) throws IOException\n+                public void beginArray(int size, ArrayType arrayType) throws IOException\n                 {\n                     arrayContext = true;\n-                    channel.put( SchemaMapValueType.ARRAY.type() );\n-                    channel.putInt( size );\n-                    channel.put( SchemaMapValueType.map( arrayType ).type() );\n+                    channel.put(SchemaMapValueType.ARRAY.type());\n+                    channel.putInt(size);\n+                    channel.put(SchemaMapValueType.map(arrayType).type());\n                 }\n \n                 @Override\n@@ -938,71 +931,71 @@ public abstract class Command implements StorageCommand\n                 }\n \n                 @Override\n-                public void writeByteArray( byte[] value ) throws IOException\n+                public void writeByteArray(byte[] value) throws IOException\n                 {\n-                    beginArray( value.length, ArrayType.BYTE );\n-                    for ( byte b : value )\n+                    beginArray(value.length, ArrayType.BYTE);\n+                    for (byte b : value)\n                     {\n-                        writeInteger( b );\n+                        writeInteger(b);\n                     }\n                     endArray();\n                 }\n \n                 @Override\n-                public void writePoint( CoordinateReferenceSystem crs, double[] coordinate ) throws IOException\n+                public void writePoint(CoordinateReferenceSystem crs, double[] coordinate) throws IOException\n                 {\n-                    throw new IOException( \"Point is not a supported schema map value type.\" );\n+                    throw new IOException(\"Point is not a supported schema map value type.\");\n                 }\n \n                 @Override\n-                public void writeDuration( long months, long days, long seconds, int nanos ) throws IOException\n+                public void writeDuration(long months, long days, long seconds, int nanos) throws IOException\n                 {\n-                    throw new IOException( \"Duration is not a supported schema map value type.\" );\n+                    throw new IOException(\"Duration is not a supported schema map value type.\");\n                 }\n \n                 @Override\n-                public void writeDate( LocalDate localDate ) throws IOException\n+                public void writeDate(LocalDate localDate) throws IOException\n                 {\n-                    throw new IOException( \"Date is not a supported schema map value type.\" );\n+                    throw new IOException(\"Date is not a supported schema map value type.\");\n                 }\n \n                 @Override\n-                public void writeLocalTime( LocalTime localTime ) throws IOException\n+                public void writeLocalTime(LocalTime localTime) throws IOException\n                 {\n-                    throw new IOException( \"LocalTime is not a supported schema map value type.\" );\n+                    throw new IOException(\"LocalTime is not a supported schema map value type.\");\n                 }\n \n                 @Override\n-                public void writeTime( OffsetTime offsetTime ) throws IOException\n+                public void writeTime(OffsetTime offsetTime) throws IOException\n                 {\n-                    throw new IOException( \"OffsetTime is not a supported schema map value type.\" );\n+                    throw new IOException(\"OffsetTime is not a supported schema map value type.\");\n                 }\n \n                 @Override\n-                public void writeLocalDateTime( LocalDateTime localDateTime ) throws IOException\n+                public void writeLocalDateTime(LocalDateTime localDateTime) throws IOException\n                 {\n-                    throw new IOException( \"LocalDateTime is not a supported schema map value type.\" );\n+                    throw new IOException(\"LocalDateTime is not a supported schema map value type.\");\n                 }\n \n                 @Override\n-                public void writeDateTime( ZonedDateTime zonedDateTime ) throws IOException\n+                public void writeDateTime(ZonedDateTime zonedDateTime) throws IOException\n                 {\n-                    throw new IOException( \"DateTime is not a supported schema map value type.\" );\n+                    throw new IOException(\"DateTime is not a supported schema map value type.\");\n                 }\n-            } );\n+            });\n         }\n     }\n \n     public static class NodeCountsCommand extends Command\n     {\n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( NodeCountsCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(NodeCountsCommand.class);\n \n         private final int labelId;\n         private final long delta;\n \n-        public NodeCountsCommand( int labelId, long delta )\n+        public NodeCountsCommand(int labelId, long delta)\n         {\n-            setup( labelId, Mode.UPDATE );\n+            setup(labelId, Mode.UPDATE);\n             assert delta != 0 : \"Tried to create a NodeCountsCommand for something that didn't change any count\";\n             this.labelId = labelId;\n             this.delta = delta;\n@@ -1011,14 +1004,14 @@ public abstract class Command implements StorageCommand\n         @Override\n         public String toString()\n         {\n-            return String.format( \"UpdateCounts[(%s) %s %d]\",\n-                    label( labelId ), delta < 0 ? \"-\" : \"+\", Math.abs( delta ) );\n+            return String.format(\"UpdateCounts[(%s) %s %d]\",\n+              label(labelId), delta < 0 ? \"-\" : \"+\", Math.abs(delta));\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitNodeCountsCommand( this );\n+            return handler.visitNodeCountsCommand(this);\n         }\n \n         public int labelId()\n@@ -1032,28 +1025,28 @@ public abstract class Command implements StorageCommand\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.UPDATE_NODE_COUNTS_COMMAND );\n-            channel.putInt( labelId() )\n-                   .putLong( delta() );\n+            channel.put(NeoCommandType.UPDATE_NODE_COUNTS_COMMAND);\n+            channel.putInt(labelId())\n+              .putLong(delta());\n         }\n     }\n \n     public static class RelationshipCountsCommand extends Command\n     {\n-        static final long SHALLOW_SIZE = shallowSizeOfInstance( RelationshipCountsCommand.class );\n+        static final long SHALLOW_SIZE = shallowSizeOfInstance(RelationshipCountsCommand.class);\n \n         private final int startLabelId;\n         private final int typeId;\n         private final int endLabelId;\n         private final long delta;\n \n-        public RelationshipCountsCommand( int startLabelId, int typeId, int endLabelId, long delta )\n+        public RelationshipCountsCommand(int startLabelId, int typeId, int endLabelId, long delta)\n         {\n-            setup( typeId, Mode.UPDATE );\n+            setup(typeId, Mode.UPDATE);\n             assert delta !=\n-                   0 : \"Tried to create a RelationshipCountsCommand for something that didn't change any count\";\n+              0 : \"Tried to create a RelationshipCountsCommand for something that didn't change any count\";\n             this.startLabelId = startLabelId;\n             this.typeId = typeId;\n             this.endLabelId = endLabelId;\n@@ -1063,15 +1056,15 @@ public abstract class Command implements StorageCommand\n         @Override\n         public String toString()\n         {\n-            return String.format( \"UpdateCounts[(%s)-%s->(%s) %s %d]\",\n-                    label( startLabelId ), relationshipType( typeId ), label( endLabelId ),\n-                    delta < 0 ? \"-\" : \"+\", Math.abs( delta ) );\n+            return String.format(\"UpdateCounts[(%s)-%s->(%s) %s %d]\",\n+              label(startLabelId), relationshipType(typeId), label(endLabelId),\n+              delta < 0 ? \"-\" : \"+\", Math.abs(delta));\n         }\n \n         @Override\n-        public boolean handle( CommandVisitor handler ) throws IOException\n+        public boolean handle(CommandVisitor handler) throws IOException\n         {\n-            return handler.visitRelationshipCountsCommand( this );\n+            return handler.visitRelationshipCountsCommand(this);\n         }\n \n         public int startLabelId()\n@@ -1095,13 +1088,13 @@ public abstract class Command implements StorageCommand\n         }\n \n         @Override\n-        public void serialize( WritableChannel channel ) throws IOException\n+        public void serialize(WritableChannel channel) throws IOException\n         {\n-            channel.put( NeoCommandType.UPDATE_RELATIONSHIP_COUNTS_COMMAND );\n-            channel.putInt( startLabelId() )\n-                   .putInt( typeId() )\n-                   .putInt( endLabelId() )\n-                   .putLong( delta() );\n+            channel.put(NeoCommandType.UPDATE_RELATIONSHIP_COUNTS_COMMAND);\n+            channel.putInt(startLabelId())\n+              .putInt(typeId())\n+              .putInt(endLabelId())\n+              .putLong(delta());\n         }\n     }\n }\n",
            "diff_size": 380
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "1090",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1090/AngelController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1090/AngelController.java\nindex 4bb887728fb..c14fb1e16f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1090/AngelController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1090/AngelController.java\n@@ -52,7 +52,6 @@ public class AngelController extends Controller implements AngelParams {\n \n   public void workerThreadStackPage() {\n     render(WorkerThreadStackPage.class);\n-\n   }\n \n   // user choose a workerGroupID from the workergroups page,\n@@ -84,4 +83,4 @@ public class AngelController extends Controller implements AngelParams {\n   public void taskCountersPage() {\n     render(TaskCountersPage.class);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1090/AngelController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1090/AngelController.java\nindex 4bb887728fb..e6d0cb76f8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1090/AngelController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1090/AngelController.java\n@@ -22,9 +22,11 @@ import com.tencent.angel.webapp.page.*;\n import org.apache.hadoop.yarn.webapp.Controller;\n \n public class AngelController extends Controller implements AngelParams {\n+\n   protected final AMContext appContext;\n \n   // The app injection is optional\n+\n   @Inject\n   AngelController(AMContext appCtx, RequestContext ctx) {\n     super(ctx);\n@@ -47,16 +49,15 @@ public class AngelController extends Controller implements AngelParams {\n \n   public void parameterServerThreadStackPage() {\n     render(ParameterServerThreadStackPage.class);\n-\n   }\n \n   public void workerThreadStackPage() {\n     render(WorkerThreadStackPage.class);\n-\n   }\n \n   // user choose a workerGroupID from the workergroups page,\n   // now we should change the AngelApp params and render the workergroup page;\n+\n   public void workerGroupPage() {\n     render(WorkerGroupPage.class);\n   }\n@@ -84,4 +85,5 @@ public class AngelController extends Controller implements AngelParams {\n   public void taskCountersPage() {\n     render(TaskCountersPage.class);\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
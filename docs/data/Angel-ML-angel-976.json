{
    "project_name": "Angel-ML-angel",
    "error_id": "976",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/976/WorkerGroup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/976/WorkerGroup.java\nindex f599962a167..740870a8847 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/976/WorkerGroup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/976/WorkerGroup.java\n@@ -104,4 +104,4 @@ public class WorkerGroup {\n   public SplitClassification getSplits() {\n     return splits;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/976/WorkerGroup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/976/WorkerGroup.java\nindex f599962a167..d8fdc6467f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/976/WorkerGroup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/976/WorkerGroup.java\n@@ -17,14 +17,15 @@\n package com.tencent.angel.worker;\n \n import com.tencent.angel.split.SplitClassification;\n-\n import java.util.HashMap;\n import java.util.Map;\n \n /**\n  * The group of worker\n  */\n+\n public class WorkerGroup {\n+\n   private final WorkerGroupId workerGroupId;\n   private final Map<WorkerId, WorkerRef> workerMap;\n   private final SplitClassification splits;\n@@ -35,6 +36,7 @@ public class WorkerGroup {\n    * @param workerGroupId the worker group id\n    * @param splits        the splits\n    */\n+\n   public WorkerGroup(WorkerGroupId workerGroupId, SplitClassification splits) {\n     this.workerGroupId = workerGroupId;\n     this.splits = splits;\n@@ -46,6 +48,7 @@ public class WorkerGroup {\n    *\n    * @return the worker group id\n    */\n+\n   public WorkerGroupId getWorkerGroupId() {\n     return workerGroupId;\n   }\n@@ -55,6 +58,7 @@ public class WorkerGroup {\n    *\n    * @return the worker map\n    */\n+\n   public Map<WorkerId, WorkerRef> getWorkerMap() {\n     return workerMap;\n   }\n@@ -64,6 +68,7 @@ public class WorkerGroup {\n    *\n    * @param workerRef the worker ref\n    */\n+\n   public void addWorkerRef(WorkerRef workerRef) {\n     workerMap.put(workerRef.getWorkerAttemptId().getWorkerId(), workerRef);\n   }\n@@ -73,6 +78,7 @@ public class WorkerGroup {\n    *\n    * @param workerRef the worker ref\n    */\n+\n   public void removeWorkerRef(WorkerRef workerRef) {\n     workerMap.remove(workerRef.getWorkerAttemptId().getWorkerId());\n   }\n@@ -82,6 +88,7 @@ public class WorkerGroup {\n    *\n    * @param id the id\n    */\n+\n   public void removeWorkerRef(WorkerId id) {\n     workerMap.remove(id);\n   }\n@@ -92,6 +99,7 @@ public class WorkerGroup {\n    * @param id the id\n    * @return the worker ref\n    */\n+\n   public WorkerRef getWorkerRef(WorkerId id) {\n     return workerMap.get(id);\n   }\n@@ -101,7 +109,9 @@ public class WorkerGroup {\n    *\n    * @return the splits\n    */\n+\n   public SplitClassification getSplits() {\n     return splits;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
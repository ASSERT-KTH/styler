{
    "project_name": "codefollower-H2-Research",
    "error_id": "75",
    "information": {
        "errors": [
            {
                "line": "35",
                "column": "35",
                "severity": "warning",
                "message": "')' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "        // normaly existingValue will always be there except of db initialization\n        // where some undo log enty was captured on disk but actual map entry was not\n        if (existingValue != null ) {\n            VersionedValue valueToRestore = (VersionedValue) existingValue[2];\n            long operationId;\n            if (valueToRestore == null ||",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/75/RollbackDecisionMaker.java\nindex 18f6c17996d..c0d95548f3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/75/RollbackDecisionMaker.java\n@@ -32,7 +32,7 @@ final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n         assert decision == null;\n         // normaly existingValue will always be there except of db initialization\n         // where some undo log enty was captured on disk but actual map entry was not\n-        if (existingValue != null ) {\n+        if (existingValue != null) {\n             VersionedValue valueToRestore = (VersionedValue) existingValue[2];\n             long operationId;\n             if (valueToRestore == null ||\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/75/RollbackDecisionMaker.java\nindex 18f6c17996d..c10fffd98d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/75/RollbackDecisionMaker.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (http://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.mvstore.tx;\n \n import org.h2.mvstore.MVMap;\n@@ -13,52 +14,52 @@ import org.h2.mvstore.MVMap;\n  * @author <a href='mailto:andrei.tokar@gmail.com'>Andrei Tokar</a>\n  */\n final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n-    private final TransactionStore store;\n-    private final long transactionId;\n-    private final long toLogId;\n-    private final TransactionStore.RollbackListener listener;\n-    private MVMap.Decision decision;\n+  private final TransactionStore store;\n+  private final long transactionId;\n+  private final long toLogId;\n+  private final TransactionStore.RollbackListener listener;\n+  private MVMap.Decision decision;\n \n-    RollbackDecisionMaker(TransactionStore store, long transactionId, long toLogId,\n-                            TransactionStore.RollbackListener listener) {\n-        this.store = store;\n-        this.transactionId = transactionId;\n-        this.toLogId = toLogId;\n-        this.listener = listener;\n-    }\n+  RollbackDecisionMaker(TransactionStore store, long transactionId, long toLogId,\n+                        TransactionStore.RollbackListener listener) {\n+    this.store = store;\n+    this.transactionId = transactionId;\n+    this.toLogId = toLogId;\n+    this.listener = listener;\n+  }\n \n-    @Override\n-    public MVMap.Decision decide(Object[] existingValue, Object[] providedValue) {\n-        assert decision == null;\n-        // normaly existingValue will always be there except of db initialization\n-        // where some undo log enty was captured on disk but actual map entry was not\n-        if (existingValue != null ) {\n-            VersionedValue valueToRestore = (VersionedValue) existingValue[2];\n-            long operationId;\n-            if (valueToRestore == null ||\n-                    (operationId = valueToRestore.getOperationId()) == 0 ||\n-                    TransactionStore.getTransactionId(operationId) == transactionId\n-                            && TransactionStore.getLogId(operationId) < toLogId) {\n-                int mapId = (Integer) existingValue[0];\n-                MVMap<Object, VersionedValue> map = store.openMap(mapId);\n-                if (map != null && !map.isClosed()) {\n-                    Object key = existingValue[1];\n-                    VersionedValue previousValue = map.operate(key, valueToRestore, MVMap.DecisionMaker.DEFAULT);\n-                    listener.onRollback(map, key, previousValue, valueToRestore);\n-                }\n-            }\n+  @Override\n+  public MVMap.Decision decide(Object[] existingValue, Object[] providedValue) {\n+    assert decision == null;\n+    // normaly existingValue will always be there except of db initialization\n+    // where some undo log enty was captured on disk but actual map entry was not\n+    if (existingValue != null) {\n+      VersionedValue valueToRestore = (VersionedValue) existingValue[2];\n+      long operationId;\n+      if (valueToRestore == null ||\n+          (operationId = valueToRestore.getOperationId()) == 0 ||\n+          TransactionStore.getTransactionId(operationId) == transactionId\n+              && TransactionStore.getLogId(operationId) < toLogId) {\n+        int mapId = (Integer) existingValue[0];\n+        MVMap<Object, VersionedValue> map = store.openMap(mapId);\n+        if (map != null && !map.isClosed()) {\n+          Object key = existingValue[1];\n+          VersionedValue previousValue = map.operate(key, valueToRestore, MVMap.DecisionMaker.DEFAULT);\n+          listener.onRollback(map, key, previousValue, valueToRestore);\n         }\n-        decision = MVMap.Decision.REMOVE;\n-        return decision;\n+      }\n     }\n+    decision = MVMap.Decision.REMOVE;\n+    return decision;\n+  }\n \n-    @Override\n-    public void reset() {\n-        decision = null;\n-    }\n+  @Override\n+  public void reset() {\n+    decision = null;\n+  }\n \n-    @Override\n-    public String toString() {\n-        return \"rollback-\" + transactionId;\n-    }\n+  @Override\n+  public String toString() {\n+    return \"rollback-\" + transactionId;\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/75/RollbackDecisionMaker.java\nindex 18f6c17996d..1a8c2ad291b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/75/RollbackDecisionMaker.java\n@@ -19,9 +19,8 @@ final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n     private final TransactionStore.RollbackListener listener;\n     private MVMap.Decision decision;\n \n-    RollbackDecisionMaker(TransactionStore store, long transactionId, long toLogId,\n-                            TransactionStore.RollbackListener listener) {\n-        this.store = store;\n+    RollbackDecisionMaker(TransactionStore store, long transactionId, long toLogId, TransactionStore.RollbackListener listener) {\n+    this.store = store;\n         this.transactionId = transactionId;\n         this.toLogId = toLogId;\n         this.listener = listener;\n@@ -32,14 +31,14 @@ final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n         assert decision == null;\n         // normaly existingValue will always be there except of db initialization\n         // where some undo log enty was captured on disk but actual map entry was not\n-        if (existingValue != null ) {\n+        if (existingValue != null) {\n             VersionedValue valueToRestore = (VersionedValue) existingValue[2];\n             long operationId;\n             if (valueToRestore == null ||\n                     (operationId = valueToRestore.getOperationId()) == 0 ||\n                     TransactionStore.getTransactionId(operationId) == transactionId\n                             && TransactionStore.getLogId(operationId) < toLogId) {\n-                int mapId = (Integer) existingValue[0];\n+    int mapId = (Integer) existingValue[0];\n                 MVMap<Object, VersionedValue> map = store.openMap(mapId);\n                 if (map != null && !map.isClosed()) {\n                     Object key = existingValue[1];\n@@ -61,4 +60,4 @@ final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n     public String toString() {\n         return \"rollback-\" + transactionId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/75/RollbackDecisionMaker.java\nindex 18f6c17996d..bcab9409317 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/75/RollbackDecisionMaker.java\n@@ -12,15 +12,17 @@ import org.h2.mvstore.MVMap;\n  *\n  * @author <a href='mailto:andrei.tokar@gmail.com'>Andrei Tokar</a>\n  */\n+\n+\n final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n+\n     private final TransactionStore store;\n     private final long transactionId;\n     private final long toLogId;\n     private final TransactionStore.RollbackListener listener;\n     private MVMap.Decision decision;\n \n-    RollbackDecisionMaker(TransactionStore store, long transactionId, long toLogId,\n-                            TransactionStore.RollbackListener listener) {\n+    RollbackDecisionMaker(TransactionStore store, long transactionId, long toLogId, TransactionStore.RollbackListener listener) {\n         this.store = store;\n         this.transactionId = transactionId;\n         this.toLogId = toLogId;\n@@ -32,13 +34,11 @@ final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n         assert decision == null;\n         // normaly existingValue will always be there except of db initialization\n         // where some undo log enty was captured on disk but actual map entry was not\n-        if (existingValue != null ) {\n+        if (existingValue != null) {\n             VersionedValue valueToRestore = (VersionedValue) existingValue[2];\n             long operationId;\n             if (valueToRestore == null ||\n-                    (operationId = valueToRestore.getOperationId()) == 0 ||\n-                    TransactionStore.getTransactionId(operationId) == transactionId\n-                            && TransactionStore.getLogId(operationId) < toLogId) {\n+                    (operationId = valueToRestore.getOperationId()) == 0 || TransactionStore.getTransactionId(operationId) == transactionId && TransactionStore.getLogId(operationId) < toLogId) {\n                 int mapId = (Integer) existingValue[0];\n                 MVMap<Object, VersionedValue> map = store.openMap(mapId);\n                 if (map != null && !map.isClosed()) {\n@@ -61,4 +61,5 @@ final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n     public String toString() {\n         return \"rollback-\" + transactionId;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/75/RollbackDecisionMaker.java\nindex 18f6c17996d..c0d95548f3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/75/RollbackDecisionMaker.java\n@@ -32,7 +32,7 @@ final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n         assert decision == null;\n         // normaly existingValue will always be there except of db initialization\n         // where some undo log enty was captured on disk but actual map entry was not\n-        if (existingValue != null ) {\n+        if (existingValue != null) {\n             VersionedValue valueToRestore = (VersionedValue) existingValue[2];\n             long operationId;\n             if (valueToRestore == null ||\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/75/RollbackDecisionMaker.java\nindex 18f6c17996d..c0d95548f3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/75/RollbackDecisionMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/75/RollbackDecisionMaker.java\n@@ -32,7 +32,7 @@ final class RollbackDecisionMaker extends MVMap.DecisionMaker<Object[]> {\n         assert decision == null;\n         // normaly existingValue will always be there except of db initialization\n         // where some undo log enty was captured on disk but actual map entry was not\n-        if (existingValue != null ) {\n+        if (existingValue != null) {\n             VersionedValue valueToRestore = (VersionedValue) existingValue[2];\n             long operationId;\n             if (valueToRestore == null ||\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
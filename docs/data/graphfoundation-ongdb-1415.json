{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1415",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1415/StoreVersionCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1415/StoreVersionCheck.java\nindex e7c8e3625e0..8f83adcb967 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1415/StoreVersionCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1415/StoreVersionCheck.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.File;\n@@ -32,78 +33,77 @@ import static org.neo4j.kernel.impl.storemigration.StoreVersionCheck.Result.Outc\n \n public class StoreVersionCheck\n {\n-    private final PageCache pageCache;\n+  private final PageCache pageCache;\n+\n+  public StoreVersionCheck(PageCache pageCache)\n+  {\n+    this.pageCache = pageCache;\n+  }\n \n-    public StoreVersionCheck( PageCache pageCache )\n+  public Optional<String> getVersion(File neostoreFile) throws IOException\n+  {\n+    long record = MetaDataStore.getRecord(pageCache, neostoreFile, STORE_VERSION);\n+    if (record == MetaDataRecordFormat.FIELD_NOT_PRESENT)\n     {\n-        this.pageCache = pageCache;\n+      return Optional.empty();\n     }\n+    return Optional.of(MetaDataStore.versionLongToString(record));\n+  }\n+\n+  public Result hasVersion(File neostoreFile, String expectedVersion)\n+  {\n+    Optional<String> storeVersion;\n \n-    public Optional<String> getVersion( File neostoreFile ) throws IOException\n+    try\n     {\n-        long record = MetaDataStore.getRecord( pageCache, neostoreFile, STORE_VERSION );\n-        if ( record == MetaDataRecordFormat.FIELD_NOT_PRESENT )\n-        {\n-            return Optional.empty();\n-        }\n-        return Optional.of( MetaDataStore.versionLongToString( record ) );\n+      storeVersion = getVersion(neostoreFile);\n+    } catch (IOException e)\n+    {\n+      // since we cannot read let's assume the file is not there\n+      return new Result(Outcome.missingStoreFile, null, neostoreFile.getName());\n     }\n \n-    public Result hasVersion( File neostoreFile, String expectedVersion )\n+    return storeVersion\n+        .map(v ->\n+            expectedVersion.equals(v) ?\n+                new Result(Outcome.ok, null, neostoreFile.getName()) :\n+                new Result(Outcome.unexpectedStoreVersion, v, neostoreFile.getName()))\n+        .orElseGet(() -> new Result(Outcome.storeVersionNotFound, null, neostoreFile.getName()));\n+  }\n+\n+  public static class Result\n+  {\n+    public final Outcome outcome;\n+    public final String actualVersion;\n+    public final String storeFilename;\n+\n+    public Result(Outcome outcome, String actualVersion, String storeFilename)\n     {\n-        Optional<String> storeVersion;\n-\n-        try\n-        {\n-            storeVersion = getVersion( neostoreFile );\n-        }\n-        catch ( IOException e )\n-        {\n-            // since we cannot read let's assume the file is not there\n-            return new Result( Outcome.missingStoreFile, null, neostoreFile.getName() );\n-        }\n-\n-        return storeVersion\n-                .map( v ->\n-                        expectedVersion.equals( v ) ?\n-                        new Result( Outcome.ok, null, neostoreFile.getName() ) :\n-                        new Result( Outcome.unexpectedStoreVersion, v, neostoreFile.getName() ) )\n-                .orElseGet( () -> new Result( Outcome.storeVersionNotFound, null, neostoreFile.getName() ) );\n+      this.outcome = outcome;\n+      this.actualVersion = actualVersion;\n+      this.storeFilename = storeFilename;\n     }\n \n-    public static class Result\n+    public enum Outcome\n     {\n-        public final Outcome outcome;\n-        public final String actualVersion;\n-        public final String storeFilename;\n-\n-        public Result( Outcome outcome, String actualVersion, String storeFilename )\n-        {\n-            this.outcome = outcome;\n-            this.actualVersion = actualVersion;\n-            this.storeFilename = storeFilename;\n-        }\n-\n-        public enum Outcome\n-        {\n-            ok( true ),\n-            missingStoreFile( false ),\n-            storeVersionNotFound( false ),\n-            unexpectedStoreVersion( false ),\n-            attemptedStoreDowngrade( false ),\n-            storeNotCleanlyShutDown( false );\n-\n-            private final boolean success;\n-\n-            Outcome( boolean success )\n-            {\n-                this.success = success;\n-            }\n-\n-            public boolean isSuccessful()\n-            {\n-                return this.success;\n-            }\n-        }\n+      ok(true),\n+      missingStoreFile(false),\n+      storeVersionNotFound(false),\n+      unexpectedStoreVersion(false),\n+      attemptedStoreDowngrade(false),\n+      storeNotCleanlyShutDown(false);\n+\n+      private final boolean success;\n+\n+      Outcome(boolean success)\n+      {\n+        this.success = success;\n+      }\n+\n+      public boolean isSuccessful()\n+      {\n+        return this.success;\n+      }\n     }\n+  }\n }\n",
            "diff_size": 92
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1415/StoreVersionCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1415/StoreVersionCheck.java\nindex e7c8e3625e0..a7f064c23d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1415/StoreVersionCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1415/StoreVersionCheck.java\n@@ -46,7 +46,8 @@ public class StoreVersionCheck\n         {\n             return Optional.empty();\n         }\n-        return Optional.of( MetaDataStore.versionLongToString( record ) );\n+\n+return Optional.of( MetaDataStore.versionLongToString( record ) );\n     }\n \n     public Result hasVersion( File neostoreFile, String expectedVersion )\n@@ -63,19 +64,16 @@ public class StoreVersionCheck\n             return new Result( Outcome.missingStoreFile, null, neostoreFile.getName() );\n         }\n \n-        return storeVersion\n-                .map( v ->\n-                        expectedVersion.equals( v ) ?\n-                        new Result( Outcome.ok, null, neostoreFile.getName() ) :\n-                        new Result( Outcome.unexpectedStoreVersion, v, neostoreFile.getName() ) )\n-                .orElseGet( () -> new Result( Outcome.storeVersionNotFound, null, neostoreFile.getName() ) );\n+        return storeVersion.map( v -> expectedVersion.equals( v ) ? new Result( Outcome.ok, null, neostoreFile.getName() ) : new Result( Outcome.unexpectedStoreVersion, v, neostoreFile.getName() ) ).orElseGet( () -> new Result( Outcome.storeVersionNotFound, null, neostoreFile.getName() ) );\n     }\n \n     public static class Result\n     {\n         public final Outcome outcome;\n-        public final String actualVersion;\n-        public final String storeFilename;\n+\n+public final String actualVersion;\n+\n+public final String storeFilename;\n \n         public Result( Outcome outcome, String actualVersion, String storeFilename )\n         {\n@@ -86,12 +84,7 @@ public class StoreVersionCheck\n \n         public enum Outcome\n         {\n-            ok( true ),\n-            missingStoreFile( false ),\n-            storeVersionNotFound( false ),\n-            unexpectedStoreVersion( false ),\n-            attemptedStoreDowngrade( false ),\n-            storeNotCleanlyShutDown( false );\n+            ok( true ), missingStoreFile( false ), storeVersionNotFound( false ), unexpectedStoreVersion( false ), attemptedStoreDowngrade( false ), storeNotCleanlyShutDown( false );\n \n             private final boolean success;\n \n@@ -106,4 +99,4 @@ public class StoreVersionCheck\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
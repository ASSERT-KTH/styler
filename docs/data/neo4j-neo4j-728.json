{
    "project_name": "neo4j-neo4j",
    "error_id": "728",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/728/StorageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/728/StorageReader.java\nindex 21dcf9573ff..9612bd2d0e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/728/StorageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/728/StorageReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api;\n \n import java.util.Collection;\n@@ -47,63 +48,64 @@ public interface StorageReader extends AutoCloseable, StorageSchemaReader\n \n     /**\n      * Check whether or not the given index exists in the store.\n+     *\n      * @param index The index to check.\n      * @return {@code true} if the index exists, {@code false} otherwise.\n      */\n-    boolean indexExists( IndexDescriptor index );\n+    boolean indexExists(IndexDescriptor index);\n \n     /**\n      * Returns all indexes (including unique) related to a property, any of the tokens (labels or relationship types) and the entity type.\n      */\n-    Collection<IndexDescriptor> indexesGetRelated( long[] tokens, int propertyKeyId, EntityType entityType );\n+    Collection<IndexDescriptor> indexesGetRelated(long[] tokens, int propertyKeyId, EntityType entityType);\n \n-    Collection<IndexDescriptor> indexesGetRelated( long[] tokens, int[] propertyKeyIds, EntityType entityType );\n+    Collection<IndexDescriptor> indexesGetRelated(long[] tokens, int[] propertyKeyIds, EntityType entityType);\n \n-    Collection<IndexBackedConstraintDescriptor> uniquenessConstraintsGetRelated( long[] labels, int propertyKeyId, EntityType entityType );\n+    Collection<IndexBackedConstraintDescriptor> uniquenessConstraintsGetRelated(long[] labels, int propertyKeyId, EntityType entityType);\n \n-    Collection<IndexBackedConstraintDescriptor> uniquenessConstraintsGetRelated( long[] labels, int[] propertyKeyIds, EntityType entityType );\n+    Collection<IndexBackedConstraintDescriptor> uniquenessConstraintsGetRelated(long[] labels, int[] propertyKeyIds, EntityType entityType);\n \n-    boolean hasRelatedSchema( long[] tokens, int propertyKey, EntityType entityType );\n+    boolean hasRelatedSchema(long[] tokens, int propertyKey, EntityType entityType);\n \n-    boolean hasRelatedSchema( int token, EntityType entityType );\n+    boolean hasRelatedSchema(int token, EntityType entityType);\n \n     /**\n      * @param index {@link IndexDescriptor} to get related uniqueness constraint for.\n      * @return schema rule id of uniqueness constraint that owns the given {@code index}, or {@code null}\n      * if the given index isn't related to a uniqueness constraint.\n      */\n-    Long indexGetOwningUniquenessConstraintId( IndexDescriptor index );\n+    Long indexGetOwningUniquenessConstraintId(IndexDescriptor index);\n \n     /**\n      * @param descriptor describing the label and property key (or keys) defining the requested constraint.\n      * @return node property constraints associated with the label and one or more property keys token ids.\n      */\n-    Iterator<ConstraintDescriptor> constraintsGetForSchema( SchemaDescriptor descriptor );\n+    Iterator<ConstraintDescriptor> constraintsGetForSchema(SchemaDescriptor descriptor);\n \n-    boolean constraintExists( ConstraintDescriptor descriptor );\n+    boolean constraintExists(ConstraintDescriptor descriptor);\n \n     /**\n      * Returns number of stored nodes labeled with the label represented by {@code labelId}.\n      *\n-     * @param labelId label id to match.\n+     * @param labelId      label id to match.\n      * @param cursorTracer underlying page cursor tracer\n      * @return number of stored nodes with this label.\n      */\n-    long countsForNode( int labelId, PageCursorTracer cursorTracer );\n+    long countsForNode(int labelId, PageCursorTracer cursorTracer);\n \n     /**\n      * Returns number of stored relationships of a certain {@code typeId} whose start/end nodes are labeled\n      * with the {@code startLabelId} and {@code endLabelId} respectively.\n      *\n      * @param startLabelId label id of start nodes to match.\n-     * @param typeId relationship type id to match.\n-     * @param endLabelId label id of end nodes to match.\n+     * @param typeId       relationship type id to match.\n+     * @param endLabelId   label id of end nodes to match.\n      * @param cursorTracer underlying page cursor tracer\n      * @return number of stored relationships matching these criteria.\n      */\n-    long countsForRelationship( int startLabelId, int typeId, int endLabelId, PageCursorTracer cursorTracer );\n+    long countsForRelationship(int startLabelId, int typeId, int endLabelId, PageCursorTracer cursorTracer);\n \n-    long nodesGetCount( PageCursorTracer cursorTracer );\n+    long nodesGetCount(PageCursorTracer cursorTracer);\n \n     long relationshipsGetCount();\n \n@@ -113,20 +115,22 @@ public interface StorageReader extends AutoCloseable, StorageSchemaReader\n \n     int relationshipTypeCount();\n \n-    boolean nodeExists( long id, PageCursorTracer cursorTracer );\n+    boolean nodeExists(long id, PageCursorTracer cursorTracer);\n \n-    boolean relationshipExists( long id, PageCursorTracer cursorTracer );\n+    boolean relationshipExists(long id, PageCursorTracer cursorTracer);\n \n-    <T> T getOrCreateSchemaDependantState( Class<T> type, Function<StorageReader, T> factory );\n+    <T> T getOrCreateSchemaDependantState(Class<T> type, Function<StorageReader, T> factory);\n \n     /**\n      * Batched all node scan\n+     *\n      * @return a new AllNodeScan maintaining the state of the batched all-node scan\n      */\n     AllNodeScan allNodeScan();\n \n     /**\n      * Batched all relationship scan\n+     *\n      * @return a new AllRelationship maintaining the state of the batched all-relationship scan\n      */\n     AllRelationshipsScan allRelationshipScan();\n@@ -134,22 +138,22 @@ public interface StorageReader extends AutoCloseable, StorageSchemaReader\n     /**\n      * @return a new {@link StorageNodeCursor} capable of reading node data from the underlying storage.\n      */\n-    StorageNodeCursor allocateNodeCursor( PageCursorTracer cursorTracer );\n+    StorageNodeCursor allocateNodeCursor(PageCursorTracer cursorTracer);\n \n     /**\n      * @return a new {@link StoragePropertyCursor} capable of reading property data from the underlying storage.\n      */\n-    StoragePropertyCursor allocatePropertyCursor( PageCursorTracer cursorTracer, MemoryTracker memoryTracker );\n+    StoragePropertyCursor allocatePropertyCursor(PageCursorTracer cursorTracer, MemoryTracker memoryTracker);\n \n     /**\n      * @return a new {@link StorageRelationshipTraversalCursor} capable of traversing relationships from the underlying storage.\n      */\n-    StorageRelationshipTraversalCursor allocateRelationshipTraversalCursor( PageCursorTracer cursorTracer );\n+    StorageRelationshipTraversalCursor allocateRelationshipTraversalCursor(PageCursorTracer cursorTracer);\n \n     /**\n      * @return a new {@link StorageRelationshipScanCursor} capable of reading relationship data from the underlying storage.\n      */\n-    StorageRelationshipScanCursor allocateRelationshipScanCursor( PageCursorTracer cursorTracer );\n+    StorageRelationshipScanCursor allocateRelationshipScanCursor(PageCursorTracer cursorTracer);\n \n     /**\n      * Get a lock-free snapshot of the current schema, for inspecting the current schema when no mutations are intended.\n@@ -164,6 +168,7 @@ public interface StorageReader extends AutoCloseable, StorageSchemaReader\n \n     /**\n      * Get a non-transactional {@link TokenNameLookup} instance.\n+     *\n      * @return a token name lookup instance.\n      */\n     TokenNameLookup tokenNameLookup();\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
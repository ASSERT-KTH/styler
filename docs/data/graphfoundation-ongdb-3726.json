{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3726",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "278",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "294",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "308",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "329",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "342",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "355",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "397",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "403",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "443",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3726/DefaultRelationshipGroupCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3726/DefaultRelationshipGroupCursor.java\nindex 2fa069a934c..8d7959c75af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3726/DefaultRelationshipGroupCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3726/DefaultRelationshipGroupCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.neo4j.collection.primitive.Primitive;\n@@ -42,498 +43,487 @@ import static org.neo4j.kernel.impl.newapi.RelationshipReferenceEncoding.encodeN\n \n class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements RelationshipGroupCursor\n {\n-    private Read read;\n-    private final RelationshipRecord edge = new RelationshipRecord( NO_ID );\n-    private final DefaultCursors pool;\n-\n-    private BufferedGroup bufferedGroup;\n-    private PageCursor page;\n-    private PageCursor edgePage;\n-    private boolean hasCheckedTxState;\n-    private final PrimitiveIntSet txTypes = Primitive.intSet();\n-    private PrimitiveIntIterator txTypeIterator;\n-\n-    DefaultRelationshipGroupCursor( DefaultCursors pool )\n+  private Read read;\n+  private final RelationshipRecord edge = new RelationshipRecord(NO_ID);\n+  private final DefaultCursors pool;\n+\n+  private BufferedGroup bufferedGroup;\n+  private PageCursor page;\n+  private PageCursor edgePage;\n+  private boolean hasCheckedTxState;\n+  private final PrimitiveIntSet txTypes = Primitive.intSet();\n+  private PrimitiveIntIterator txTypeIterator;\n+\n+  DefaultRelationshipGroupCursor(DefaultCursors pool)\n+  {\n+    super(NO_ID);\n+    this.pool = pool;\n+  }\n+\n+  void buffer(long nodeReference, long relationshipReference, Read read)\n+  {\n+    setOwningNode(nodeReference);\n+    setId(NO_ID);\n+    setNext(NO_ID);\n+    // TODO: read first record to get the required capacity (from the count value in the prev field)\n+    try (PrimitiveIntObjectMap<BufferedGroup> buffer = Primitive.intObjectMap();\n+         PageCursor edgePage = read.relationshipPage(relationshipReference))\n     {\n-        super( NO_ID );\n-        this.pool = pool;\n+      BufferedGroup current = null;\n+      while (relationshipReference != NO_ID)\n+      {\n+        read.relationshipFull(edge, relationshipReference, edgePage);\n+        // find the group\n+        BufferedGroup group = buffer.get(edge.getType());\n+        if (group == null)\n+        {\n+          buffer.put(edge.getType(), current = group = new BufferedGroup(edge, current));\n+        }\n+        // buffer the relationship into the group\n+        if (edge.getFirstNode() == nodeReference) // outgoing or loop\n+        {\n+          if (edge.getSecondNode() == nodeReference) // loop\n+          {\n+            group.loop(edge);\n+          } else // outgoing\n+          {\n+            group.outgoing(edge);\n+          }\n+          relationshipReference = edge.getFirstNextRel();\n+        } else if (edge.getSecondNode() == nodeReference) // incoming\n+        {\n+          group.incoming(edge);\n+          relationshipReference = edge.getSecondNextRel();\n+        } else\n+        {\n+          throw new IllegalStateException(\"not a part of the chain! TODO: better exception\");\n+        }\n+      }\n+      this.txTypes.clear();\n+      this.txTypeIterator = null;\n+      this.hasCheckedTxState = false;\n+      this.bufferedGroup = new BufferedGroup(edge, current); // we need a dummy before the first to denote the initial pos\n+      this.read = read;\n     }\n-\n-    void buffer( long nodeReference, long relationshipReference, Read read )\n+  }\n+\n+  void direct(long nodeReference, long reference, Read read)\n+  {\n+    bufferedGroup = null;\n+    clear();\n+    txTypes.clear();\n+    txTypeIterator = null;\n+    hasCheckedTxState = false;\n+    setOwningNode(nodeReference);\n+    setNext(reference);\n+    if (page == null)\n     {\n-        setOwningNode( nodeReference );\n-        setId( NO_ID );\n-        setNext( NO_ID );\n-        // TODO: read first record to get the required capacity (from the count value in the prev field)\n-        try ( PrimitiveIntObjectMap<BufferedGroup> buffer = Primitive.intObjectMap();\n-              PageCursor edgePage = read.relationshipPage( relationshipReference ) )\n-        {\n-            BufferedGroup current = null;\n-            while ( relationshipReference != NO_ID )\n-            {\n-                read.relationshipFull( edge, relationshipReference, edgePage );\n-                // find the group\n-                BufferedGroup group = buffer.get( edge.getType() );\n-                if ( group == null )\n-                {\n-                    buffer.put( edge.getType(), current = group = new BufferedGroup( edge, current ) );\n-                }\n-                // buffer the relationship into the group\n-                if ( edge.getFirstNode() == nodeReference ) // outgoing or loop\n-                {\n-                    if ( edge.getSecondNode() == nodeReference ) // loop\n-                    {\n-                        group.loop( edge );\n-                    }\n-                    else // outgoing\n-                    {\n-                        group.outgoing( edge );\n-                    }\n-                    relationshipReference = edge.getFirstNextRel();\n-                }\n-                else if ( edge.getSecondNode() == nodeReference ) // incoming\n-                {\n-                    group.incoming( edge );\n-                    relationshipReference = edge.getSecondNextRel();\n-                }\n-                else\n-                {\n-                    throw new IllegalStateException( \"not a part of the chain! TODO: better exception\" );\n-                }\n-            }\n-            this.txTypes.clear();\n-            this.txTypeIterator = null;\n-            this.hasCheckedTxState = false;\n-            this.bufferedGroup = new BufferedGroup( edge, current ); // we need a dummy before the first to denote the initial pos\n-            this.read = read;\n-        }\n+      page = read.groupPage(reference);\n     }\n-\n-    void direct( long nodeReference, long reference, Read read )\n+    this.read = read;\n+  }\n+\n+  @Override\n+  public Position suspend()\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public void resume(Position position)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean next()\n+  {\n+    //We need to check tx state if there are new types added\n+    //on the first call of next\n+    if (!hasCheckedTxState)\n     {\n-        bufferedGroup = null;\n-        clear();\n-        txTypes.clear();\n-        txTypeIterator = null;\n-        hasCheckedTxState = false;\n-        setOwningNode( nodeReference );\n-        setNext( reference );\n-        if ( page == null )\n-        {\n-            page = read.groupPage( reference );\n-        }\n-        this.read = read;\n+      checkTxStateForUpdates();\n+      hasCheckedTxState = true;\n     }\n \n-    @Override\n-    public Position suspend()\n+    if (isBuffered())\n     {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n+      bufferedGroup = bufferedGroup.next;\n+      if (bufferedGroup != null)\n+      {\n+        loadFromBuffer();\n+        return true;\n+      }\n     }\n \n-    @Override\n-    public void resume( Position position )\n+    do\n     {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean next()\n+      if (getNext() == NO_ID)\n+      {\n+        //We have now run out of groups from the store, however there may still\n+        //be new types that was added in the transaction that we haven't visited yet.\n+        return nextFromTxState();\n+      }\n+      read.group(this, getNext(), page);\n+    } while (!inUse());\n+\n+    markTypeAsSeen(type());\n+    return true;\n+  }\n+\n+  private void loadFromBuffer()\n+  {\n+    markTypeAsSeen(bufferedGroup.label);\n+    setType(bufferedGroup.label);\n+    setFirstOut(bufferedGroup.outgoing());\n+    setFirstIn(bufferedGroup.incoming());\n+    setFirstLoop(bufferedGroup.loops());\n+  }\n+\n+  private boolean nextFromTxState()\n+  {\n+    if (txTypeIterator == null && !txTypes.isEmpty())\n     {\n-        //We need to check tx state if there are new types added\n-        //on the first call of next\n-        if ( !hasCheckedTxState )\n-        {\n-            checkTxStateForUpdates();\n-            hasCheckedTxState = true;\n-        }\n-\n-        if ( isBuffered() )\n-        {\n-            bufferedGroup = bufferedGroup.next;\n-            if ( bufferedGroup != null )\n-            {\n-                loadFromBuffer();\n-                return true;\n-            }\n-        }\n-\n-        do\n-        {\n-            if ( getNext() == NO_ID )\n-            {\n-                //We have now run out of groups from the store, however there may still\n-                //be new types that was added in the transaction that we haven't visited yet.\n-                return nextFromTxState();\n-            }\n-            read.group( this, getNext(), page );\n-        } while ( !inUse() );\n-\n-        markTypeAsSeen( type() );\n-        return true;\n+      txTypeIterator = txTypes.iterator();\n+      //here it may be tempting to do txTypes.clear()\n+      //however that will also clear the iterator\n     }\n-\n-    private void loadFromBuffer()\n+    if (txTypeIterator != null && txTypeIterator.hasNext())\n     {\n-        markTypeAsSeen( bufferedGroup.label );\n-        setType( bufferedGroup.label );\n-        setFirstOut( bufferedGroup.outgoing() );\n-        setFirstIn( bufferedGroup.incoming() );\n-        setFirstLoop( bufferedGroup.loops() );\n+      setType(txTypeIterator.next());\n+      setFirstOut(NO_ID);\n+      setFirstIn(NO_ID);\n+      setFirstLoop(NO_ID);\n+      return true;\n     }\n-\n-    private boolean nextFromTxState()\n+    return false;\n+  }\n+\n+  /**\n+   * Marks the given type as already seen\n+   *\n+   * @param type the type we have seen\n+   */\n+  private void markTypeAsSeen(int type)\n+  {\n+    if (txTypes != null)\n     {\n-        if ( txTypeIterator == null && !txTypes.isEmpty() )\n-        {\n-            txTypeIterator = txTypes.iterator();\n-            //here it may be tempting to do txTypes.clear()\n-            //however that will also clear the iterator\n-        }\n-        if ( txTypeIterator != null && txTypeIterator.hasNext() )\n-        {\n-            setType( txTypeIterator.next() );\n-            setFirstOut( NO_ID );\n-            setFirstIn( NO_ID );\n-            setFirstLoop( NO_ID );\n-            return true;\n-        }\n-        return false;\n+      txTypes.remove(type);\n     }\n-\n-    /**\n-     * Marks the given type as already seen\n-     * @param type the type we have seen\n-     */\n-    private void markTypeAsSeen( int type )\n+  }\n+\n+  /**\n+   * Store all types that was added in the transaction for the current node\n+   */\n+  private void checkTxStateForUpdates()\n+  {\n+    if (read.hasTxStateWithChanges())\n     {\n-        if ( txTypes != null )\n-        {\n-            txTypes.remove( type );\n-        }\n+      NodeState nodeState = read.txState().getNodeState(getOwningNode());\n+      PrimitiveLongIterator addedRelationships = nodeState.getAddedRelationships();\n+      while (addedRelationships.hasNext())\n+      {\n+        RelationshipState relationshipState = read.txState().getRelationshipState(addedRelationships.next());\n+        relationshipState.accept(\n+            (RelationshipVisitor<RuntimeException>) (relationshipId, typeId, startNodeId, endNodeId) ->\n+                txTypes.add(typeId));\n+      }\n     }\n+  }\n \n-    /**\n-     * Store all types that was added in the transaction for the current node\n-     */\n-    private void checkTxStateForUpdates()\n+  @Override\n+  public void close()\n+  {\n+    if (!isClosed())\n     {\n-        if ( read.hasTxStateWithChanges() )\n-        {\n-            NodeState nodeState = read.txState().getNodeState( getOwningNode() );\n-            PrimitiveLongIterator addedRelationships = nodeState.getAddedRelationships();\n-            while ( addedRelationships.hasNext() )\n-            {\n-                RelationshipState relationshipState = read.txState().getRelationshipState( addedRelationships.next() );\n-                relationshipState.accept(\n-                        (RelationshipVisitor<RuntimeException>) ( relationshipId, typeId, startNodeId, endNodeId ) ->\n-                                txTypes.add( typeId ) );\n-            }\n-        }\n+      bufferedGroup = null;\n+      read = null;\n+      setId(NO_ID);\n+      clear();\n+\n+      if (pool != null)\n+      {\n+        pool.accept(this);\n+      }\n     }\n-\n-    @Override\n-    public void close()\n+  }\n+\n+  @Override\n+  public int type()\n+  {\n+    return getType();\n+  }\n+\n+  @Override\n+  public int outgoingCount()\n+  {\n+    int count;\n+    if (isBuffered())\n     {\n-        if ( !isClosed() )\n-        {\n-            bufferedGroup = null;\n-            read = null;\n-            setId( NO_ID );\n-            clear();\n-\n-            if ( pool != null )\n-            {\n-                pool.accept( this );\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public int type()\n+      count = bufferedGroup.outgoingCount;\n+    } else\n     {\n-        return getType();\n+      count = count(outgoingRawId());\n     }\n+    return read.hasTxStateWithChanges()\n+        ? read.txState().getNodeState(getOwningNode())\n+        .augmentDegree(RelationshipDirection.OUTGOING, count, getType()) : count;\n+  }\n \n-    @Override\n-    public int outgoingCount()\n-    {\n-        int count;\n-        if ( isBuffered() )\n-        {\n-            count = bufferedGroup.outgoingCount;\n-        }\n-        else\n-        {\n-            count = count( outgoingRawId() );\n-        }\n-        return read.hasTxStateWithChanges()\n-               ? read.txState().getNodeState( getOwningNode() )\n-                       .augmentDegree( RelationshipDirection.OUTGOING, count, getType() ) : count;\n-    }\n+  @Override\n+  public int incomingCount()\n+  {\n+    int count;\n \n-    @Override\n-    public int incomingCount()\n+    if (isBuffered())\n     {\n-        int count;\n-\n-        if ( isBuffered() )\n-        {\n-            count = bufferedGroup.incomingCount;\n-        }\n-        else\n-        {\n-            count = count( incomingRawId() );\n-        }\n-        return read.hasTxStateWithChanges()\n-               ? read.txState().getNodeState( getOwningNode() )\n-                       .augmentDegree( RelationshipDirection.INCOMING, count, getType() ) : count;\n+      count = bufferedGroup.incomingCount;\n+    } else\n+    {\n+      count = count(incomingRawId());\n     }\n-\n-    @Override\n-    public int loopCount()\n+    return read.hasTxStateWithChanges()\n+        ? read.txState().getNodeState(getOwningNode())\n+        .augmentDegree(RelationshipDirection.INCOMING, count, getType()) : count;\n+  }\n+\n+  @Override\n+  public int loopCount()\n+  {\n+    int count;\n+    if (isBuffered())\n     {\n-        int count;\n-        if ( isBuffered() )\n-        {\n-            count = bufferedGroup.loopsCount;\n-        }\n-        else\n-        {\n-            count = count( loopsRawId() );\n-        }\n+      count = bufferedGroup.loopsCount;\n+    } else\n+    {\n+      count = count(loopsRawId());\n+    }\n \n-        return read.hasTxStateWithChanges()\n-               ? read.txState().getNodeState( getOwningNode() )\n-                       .augmentDegree( RelationshipDirection.LOOP, count, getType() ) : count;\n+    return read.hasTxStateWithChanges()\n+        ? read.txState().getNodeState(getOwningNode())\n+        .augmentDegree(RelationshipDirection.LOOP, count, getType()) : count;\n \n-    }\n+  }\n \n-    private int count( long reference )\n+  private int count(long reference)\n+  {\n+    if (reference == NO_ID)\n     {\n-        if ( reference == NO_ID )\n-        {\n-            return 0;\n-        }\n-        if ( edgePage == null )\n-        {\n-            edgePage = read.relationshipPage( reference );\n-        }\n-        read.relationship( edge, reference, edgePage );\n-        if ( edge.getFirstNode() == getOwningNode() )\n-        {\n-            return (int) edge.getFirstPrevRel();\n-        }\n-        else\n-        {\n-            return (int) edge.getSecondPrevRel();\n-        }\n+      return 0;\n     }\n-\n-    @Override\n-    public void outgoing( RelationshipTraversalCursor cursor )\n+    if (edgePage == null)\n     {\n-        if ( isBuffered() )\n-        {\n-            ((DefaultRelationshipTraversalCursor) cursor).buffered(\n-                    getOwningNode(), bufferedGroup.outgoing, RelationshipDirection.OUTGOING, bufferedGroup.label, read );\n-        }\n-        else\n-        {\n-            read.relationships( getOwningNode(), outgoingReference(), cursor );\n-        }\n+      edgePage = read.relationshipPage(reference);\n     }\n-\n-    @Override\n-    public void incoming( RelationshipTraversalCursor cursor )\n+    read.relationship(edge, reference, edgePage);\n+    if (edge.getFirstNode() == getOwningNode())\n     {\n-        if ( isBuffered() )\n-        {\n-            ((DefaultRelationshipTraversalCursor) cursor).buffered(\n-                    getOwningNode(), bufferedGroup.incoming, RelationshipDirection.INCOMING, bufferedGroup.label, read );\n-        }\n-        else\n-        {\n-            read.relationships( getOwningNode(), incomingReference(), cursor );\n-        }\n+      return (int) edge.getFirstPrevRel();\n+    } else\n+    {\n+      return (int) edge.getSecondPrevRel();\n     }\n+  }\n \n-    @Override\n-    public void loops( RelationshipTraversalCursor cursor )\n+  @Override\n+  public void outgoing(RelationshipTraversalCursor cursor)\n+  {\n+    if (isBuffered())\n     {\n-        if ( isBuffered() )\n-        {\n-            ((DefaultRelationshipTraversalCursor) cursor).buffered(\n-                    getOwningNode(), bufferedGroup.loops, RelationshipDirection.LOOP, bufferedGroup.label, read );\n-        }\n-        else\n-        {\n-            read.relationships( getOwningNode(), loopsReference(), cursor );\n-        }\n+      ((DefaultRelationshipTraversalCursor) cursor).buffered(\n+          getOwningNode(), bufferedGroup.outgoing, RelationshipDirection.OUTGOING, bufferedGroup.label, read);\n+    } else\n+    {\n+      read.relationships(getOwningNode(), outgoingReference(), cursor);\n     }\n+  }\n \n-    @Override\n-    public long outgoingReference()\n+  @Override\n+  public void incoming(RelationshipTraversalCursor cursor)\n+  {\n+    if (isBuffered())\n     {\n-        long outgoing = getFirstOut();\n-        return outgoing == NO_ID ? encodeNoOutgoingRels( getType() ) : encodeRelationshipReference( outgoing );\n+      ((DefaultRelationshipTraversalCursor) cursor).buffered(\n+          getOwningNode(), bufferedGroup.incoming, RelationshipDirection.INCOMING, bufferedGroup.label, read);\n+    } else\n+    {\n+      read.relationships(getOwningNode(), incomingReference(), cursor);\n     }\n+  }\n \n-    @Override\n-    public long incomingReference()\n+  @Override\n+  public void loops(RelationshipTraversalCursor cursor)\n+  {\n+    if (isBuffered())\n+    {\n+      ((DefaultRelationshipTraversalCursor) cursor).buffered(\n+          getOwningNode(), bufferedGroup.loops, RelationshipDirection.LOOP, bufferedGroup.label, read);\n+    } else\n     {\n-        long incoming = getFirstIn();\n-        return incoming == NO_ID ? encodeNoIncomingRels( getType() ) : encodeRelationshipReference( incoming );\n+      read.relationships(getOwningNode(), loopsReference(), cursor);\n     }\n-\n-    @Override\n-    public long loopsReference()\n+  }\n+\n+  @Override\n+  public long outgoingReference()\n+  {\n+    long outgoing = getFirstOut();\n+    return outgoing == NO_ID ? encodeNoOutgoingRels(getType()) : encodeRelationshipReference(outgoing);\n+  }\n+\n+  @Override\n+  public long incomingReference()\n+  {\n+    long incoming = getFirstIn();\n+    return incoming == NO_ID ? encodeNoIncomingRels(getType()) : encodeRelationshipReference(incoming);\n+  }\n+\n+  @Override\n+  public long loopsReference()\n+  {\n+    long loops = getFirstLoop();\n+    return loops == NO_ID ? encodeNoLoopRels(getType()) : encodeRelationshipReference(loops);\n+  }\n+\n+  @Override\n+  public boolean isClosed()\n+  {\n+    return read == null && bufferedGroup == null;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    if (isClosed())\n+    {\n+      return \"RelationshipGroupCursor[closed state]\";\n+    } else\n     {\n-        long loops = getFirstLoop();\n-        return loops == NO_ID ? encodeNoLoopRels( getType() ) : encodeRelationshipReference( loops );\n+      String mode = \"mode=\";\n+      if (isBuffered())\n+      {\n+        mode = mode + \"group\";\n+      } else\n+      {\n+        mode = mode + \"direct\";\n+      }\n+      return \"RelationshipGroupCursor[id=\" + getId() + \", open state with: \" + mode + \", underlying record=\" + super.toString() + \" ]\";\n     }\n-\n-    @Override\n-    public boolean isClosed()\n+  }\n+\n+  /**\n+   * Implementation detail which provides the raw non-encoded outgoing relationship id\n+   */\n+  long outgoingRawId()\n+  {\n+    return getFirstOut();\n+  }\n+\n+  /**\n+   * Implementation detail which provides the raw non-encoded incoming relationship id\n+   */\n+  long incomingRawId()\n+  {\n+    return getFirstIn();\n+  }\n+\n+  /**\n+   * Implementation detail which provides the raw non-encoded loops relationship id\n+   */\n+  long loopsRawId()\n+  {\n+    return getFirstLoop();\n+  }\n+\n+  private boolean isBuffered()\n+  {\n+    return bufferedGroup != null;\n+  }\n+\n+  private long encodeRelationshipReference(long relationshipId)\n+  {\n+    assert relationshipId != NO_ID;\n+    return isBuffered() ? encodeForFiltering(relationshipId) : encodeForTxStateFiltering(relationshipId);\n+  }\n+\n+  public void release()\n+  {\n+    if (edgePage != null)\n     {\n-        return read == null && bufferedGroup == null;\n+      edgePage.close();\n+      edgePage = null;\n     }\n \n-    @Override\n-    public String toString()\n+    if (page != null)\n     {\n-        if ( isClosed() )\n-        {\n-            return \"RelationshipGroupCursor[closed state]\";\n-        }\n-        else\n-        {\n-            String mode = \"mode=\";\n-            if ( isBuffered() )\n-            {\n-                mode = mode + \"group\";\n-            }\n-            else\n-            {\n-                mode = mode + \"direct\";\n-            }\n-            return \"RelationshipGroupCursor[id=\" + getId() + \", open state with: \" + mode + \", underlying record=\" + super.toString() + \" ]\";\n-        }\n+      page.close();\n+      page = null;\n     }\n-\n-    /**\n-     * Implementation detail which provides the raw non-encoded outgoing relationship id\n-     */\n-    long outgoingRawId()\n+  }\n+\n+  static class BufferedGroup\n+  {\n+    final int label;\n+    final BufferedGroup next;\n+    Record outgoing;\n+    Record incoming;\n+    Record loops;\n+    private long firstOut = NO_ID;\n+    private long firstIn = NO_ID;\n+    private long firstLoop = NO_ID;\n+    int outgoingCount;\n+    int incomingCount;\n+    int loopsCount;\n+\n+    BufferedGroup(RelationshipRecord edge, BufferedGroup next)\n     {\n-        return getFirstOut();\n+      this.label = edge.getType();\n+      this.next = next;\n     }\n \n-    /**\n-     * Implementation detail which provides the raw non-encoded incoming relationship id\n-     */\n-    long incomingRawId()\n+    void outgoing(RelationshipRecord edge)\n     {\n-        return getFirstIn();\n+      if (outgoing == null)\n+      {\n+        firstOut = edge.getId();\n+      }\n+      outgoing = new DefaultRelationshipTraversalCursor.Record(edge, outgoing);\n+      outgoingCount++;\n     }\n \n-    /**\n-     * Implementation detail which provides the raw non-encoded loops relationship id\n-     */\n-    long loopsRawId()\n+    void incoming(RelationshipRecord edge)\n     {\n-        return getFirstLoop();\n+      if (incoming == null)\n+      {\n+        firstIn = edge.getId();\n+      }\n+      incoming = new DefaultRelationshipTraversalCursor.Record(edge, incoming);\n+      incomingCount++;\n     }\n \n-    private boolean isBuffered()\n+    void loop(RelationshipRecord edge)\n     {\n-        return bufferedGroup != null;\n+      if (loops == null)\n+      {\n+        firstLoop = edge.getId();\n+      }\n+      loops = new DefaultRelationshipTraversalCursor.Record(edge, loops);\n+      loopsCount++;\n     }\n \n-    private long encodeRelationshipReference( long relationshipId )\n+    long outgoing()\n     {\n-        assert relationshipId != NO_ID;\n-        return isBuffered() ? encodeForFiltering( relationshipId ) : encodeForTxStateFiltering( relationshipId );\n+      return firstOut;\n     }\n \n-    public void release()\n+    long incoming()\n     {\n-        if ( edgePage != null )\n-        {\n-            edgePage.close();\n-            edgePage = null;\n-        }\n-\n-        if ( page != null )\n-        {\n-            page.close();\n-            page = null;\n-        }\n+      return firstIn;\n     }\n \n-    static class BufferedGroup\n-    {\n-        final int label;\n-        final BufferedGroup next;\n-        Record outgoing;\n-        Record incoming;\n-        Record loops;\n-        private long firstOut = NO_ID;\n-        private long firstIn = NO_ID;\n-        private long firstLoop = NO_ID;\n-        int outgoingCount;\n-        int incomingCount;\n-        int loopsCount;\n-\n-        BufferedGroup( RelationshipRecord edge, BufferedGroup next )\n-        {\n-            this.label = edge.getType();\n-            this.next = next;\n-        }\n-\n-        void outgoing( RelationshipRecord edge )\n-        {\n-            if ( outgoing == null )\n-            {\n-                firstOut = edge.getId();\n-            }\n-            outgoing = new DefaultRelationshipTraversalCursor.Record( edge, outgoing );\n-            outgoingCount++;\n-        }\n-\n-        void incoming( RelationshipRecord edge )\n-        {\n-            if ( incoming == null )\n-            {\n-                firstIn = edge.getId();\n-            }\n-            incoming = new DefaultRelationshipTraversalCursor.Record( edge, incoming );\n-            incomingCount++;\n-        }\n-\n-        void loop( RelationshipRecord edge )\n-        {\n-            if ( loops == null )\n-            {\n-                firstLoop = edge.getId();\n-            }\n-            loops = new DefaultRelationshipTraversalCursor.Record( edge, loops );\n-            loopsCount++;\n-        }\n-\n-        long outgoing()\n-        {\n-            return firstOut;\n-        }\n-\n-        long incoming()\n-        {\n-            return firstIn;\n-        }\n-\n-        long loops()\n-        {\n-            return firstLoop;\n-        }\n+    long loops()\n+    {\n+      return firstLoop;\n     }\n+  }\n }\n",
            "diff_size": 684
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "304",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "321",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "334",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "347",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "360",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3726/DefaultRelationshipGroupCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3726/DefaultRelationshipGroupCursor.java\nindex 2fa069a934c..f2e9099b040 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3726/DefaultRelationshipGroupCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3726/DefaultRelationshipGroupCursor.java\n@@ -66,8 +66,8 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n         setNext( NO_ID );\n         // TODO: read first record to get the required capacity (from the count value in the prev field)\n         try ( PrimitiveIntObjectMap<BufferedGroup> buffer = Primitive.intObjectMap();\n-              PageCursor edgePage = read.relationshipPage( relationshipReference ) )\n-        {\n+PageCursor edgePage = read.relationshipPage( relationshipReference ) )\n+{\n             BufferedGroup current = null;\n             while ( relationshipReference != NO_ID )\n             {\n@@ -89,7 +89,8 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n                     {\n                         group.outgoing( edge );\n                     }\n-                    relationshipReference = edge.getFirstNextRel();\n+\n+relationshipReference = edge.getFirstNextRel();\n                 }\n                 else if ( edge.getSecondNode() == nodeReference ) // incoming\n                 {\n@@ -190,7 +191,8 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n             //here it may be tempting to do txTypes.clear()\n             //however that will also clear the iterator\n         }\n-        if ( txTypeIterator != null && txTypeIterator.hasNext() )\n+\n+if ( txTypeIterator != null && txTypeIterator.hasNext() )\n         {\n             setType( txTypeIterator.next() );\n             setFirstOut( NO_ID );\n@@ -225,10 +227,9 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n             while ( addedRelationships.hasNext() )\n             {\n                 RelationshipState relationshipState = read.txState().getRelationshipState( addedRelationships.next() );\n-                relationshipState.accept(\n-                        (RelationshipVisitor<RuntimeException>) ( relationshipId, typeId, startNodeId, endNodeId ) ->\n-                                txTypes.add( typeId ) );\n-            }\n+                relationshipState.accept((RelationshipVisitor<RuntimeException>) ( relationshipId, typeId, startNodeId, endNodeId ) ->\n+txTypes.add( typeId ) );\n+    }\n         }\n     }\n \n@@ -241,8 +242,7 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n             read = null;\n             setId( NO_ID );\n             clear();\n-\n-            if ( pool != null )\n+if ( pool != null )\n             {\n                 pool.accept( this );\n             }\n@@ -267,9 +267,8 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n         {\n             count = count( outgoingRawId() );\n         }\n-        return read.hasTxStateWithChanges()\n-               ? read.txState().getNodeState( getOwningNode() )\n-                       .augmentDegree( RelationshipDirection.OUTGOING, count, getType() ) : count;\n+\n+return read.hasTxStateWithChanges() ? read.txState().getNodeState( getOwningNode() ).augmentDegree( RelationshipDirection.OUTGOING, count, getType() ) : count;\n     }\n \n     @Override\n@@ -285,9 +284,8 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n         {\n             count = count( incomingRawId() );\n         }\n-        return read.hasTxStateWithChanges()\n-               ? read.txState().getNodeState( getOwningNode() )\n-                       .augmentDegree( RelationshipDirection.INCOMING, count, getType() ) : count;\n+\n+return read.hasTxStateWithChanges() ? read.txState().getNodeState( getOwningNode() ).augmentDegree( RelationshipDirection.INCOMING, count, getType() ) : count;\n     }\n \n     @Override\n@@ -303,10 +301,7 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n             count = count( loopsRawId() );\n         }\n \n-        return read.hasTxStateWithChanges()\n-               ? read.txState().getNodeState( getOwningNode() )\n-                       .augmentDegree( RelationshipDirection.LOOP, count, getType() ) : count;\n-\n+        return read.hasTxStateWithChanges() ? read.txState().getNodeState( getOwningNode() ).augmentDegree( RelationshipDirection.LOOP, count, getType() ) : count;\n     }\n \n     private int count( long reference )\n@@ -315,18 +310,19 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n         {\n             return 0;\n         }\n-        if ( edgePage == null )\n+\n+if ( edgePage == null )\n         {\n             edgePage = read.relationshipPage( reference );\n         }\n         read.relationship( edge, reference, edgePage );\n         if ( edge.getFirstNode() == getOwningNode() )\n         {\n-            return (int) edge.getFirstPrevRel();\n+            return ( int) edge.getFirstPrevRel();\n         }\n         else\n         {\n-            return (int) edge.getSecondPrevRel();\n+            return ( int) edge.getSecondPrevRel();\n         }\n     }\n \n@@ -335,8 +331,7 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n     {\n         if ( isBuffered() )\n         {\n-            ((DefaultRelationshipTraversalCursor) cursor).buffered(\n-                    getOwningNode(), bufferedGroup.outgoing, RelationshipDirection.OUTGOING, bufferedGroup.label, read );\n+            ((DefaultRelationshipTraversalCursor) cursor).buffered( getOwningNode(), bufferedGroup.outgoing, RelationshipDirection.OUTGOING, bufferedGroup.label, read );\n         }\n         else\n         {\n@@ -349,8 +344,7 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n     {\n         if ( isBuffered() )\n         {\n-            ((DefaultRelationshipTraversalCursor) cursor).buffered(\n-                    getOwningNode(), bufferedGroup.incoming, RelationshipDirection.INCOMING, bufferedGroup.label, read );\n+            ((DefaultRelationshipTraversalCursor) cursor).buffered( getOwningNode(), bufferedGroup.incoming, RelationshipDirection.INCOMING, bufferedGroup.label, read );\n         }\n         else\n         {\n@@ -363,8 +357,7 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n     {\n         if ( isBuffered() )\n         {\n-            ((DefaultRelationshipTraversalCursor) cursor).buffered(\n-                    getOwningNode(), bufferedGroup.loops, RelationshipDirection.LOOP, bufferedGroup.label, read );\n+            ((DefaultRelationshipTraversalCursor) cursor).buffered( getOwningNode(), bufferedGroup.loops, RelationshipDirection.LOOP, bufferedGroup.label, read );\n         }\n         else\n         {\n@@ -497,7 +490,8 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n             {\n                 firstOut = edge.getId();\n             }\n-            outgoing = new DefaultRelationshipTraversalCursor.Record( edge, outgoing );\n+\n+outgoing = new DefaultRelationshipTraversalCursor.Record( edge, outgoing );\n             outgoingCount++;\n         }\n \n@@ -507,7 +501,8 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n             {\n                 firstIn = edge.getId();\n             }\n-            incoming = new DefaultRelationshipTraversalCursor.Record( edge, incoming );\n+\n+incoming = new DefaultRelationshipTraversalCursor.Record( edge, incoming );\n             incomingCount++;\n         }\n \n@@ -517,7 +512,8 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n             {\n                 firstLoop = edge.getId();\n             }\n-            loops = new DefaultRelationshipTraversalCursor.Record( edge, loops );\n+\n+loops = new DefaultRelationshipTraversalCursor.Record( edge, loops );\n             loopsCount++;\n         }\n \n@@ -536,4 +532,4 @@ class DefaultRelationshipGroupCursor extends RelationshipGroupRecord implements\n             return firstLoop;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
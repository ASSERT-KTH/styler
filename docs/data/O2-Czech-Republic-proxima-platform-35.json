{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "35",
    "information": {
        "errors": [
            {
                "line": "74",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 93).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public void testGetValueSchemaDescriptor() {\n    SchemaTypeDescriptor<byte[]> descriptor = serializer.getValueSchemaDescriptor();\n    assertEquals(AttributeValueType.BYTE, descriptor.asArrayTypeDescriptor().getValueType());\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/35/BytesSerializerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/35/BytesSerializerTest.java\nindex 61402a30417..e970c3c3e36 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/35/BytesSerializerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/35/BytesSerializerTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.scheme;\n \n import static org.junit.Assert.*;\n@@ -71,6 +72,7 @@ public class BytesSerializerTest {\n   @Test\n   public void testGetValueSchemaDescriptor() {\n     SchemaTypeDescriptor<byte[]> descriptor = serializer.getValueSchemaDescriptor();\n-    assertEquals(AttributeValueType.BYTE, descriptor.asArrayTypeDescriptor().getValueType());\n+    assertEquals(AttributeValueType.BYTE,\n+        descriptor.asArrayTypeDescriptor().getValueType());\n   }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/35/BytesSerializerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/35/BytesSerializerTest.java\nindex 61402a30417..080f9f85429 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/35/BytesSerializerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/35/BytesSerializerTest.java\n@@ -73,4 +73,4 @@ public class BytesSerializerTest {\n     SchemaTypeDescriptor<byte[]> descriptor = serializer.getValueSchemaDescriptor();\n     assertEquals(AttributeValueType.BYTE, descriptor.asArrayTypeDescriptor().getValueType());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/35/BytesSerializerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/35/BytesSerializerTest.java\nindex 61402a30417..8a240ec0ee4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/35/BytesSerializerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/35/BytesSerializerTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.scheme;\n \n import static org.junit.Assert.*;\n-\n import cz.o2.proxima.scheme.SchemaDescriptors.SchemaTypeDescriptor;\n import java.net.URI;\n import java.net.URISyntaxException;\n@@ -25,7 +24,10 @@ import org.junit.Before;\n import org.junit.Test;\n \n /** Simple test for {@link BytesSerializer} */\n+\n+\n public class BytesSerializerTest {\n+\n   private final BytesSerializer factory = new BytesSerializer();\n   private ValueSerializer<byte[]> serializer;\n \n@@ -64,7 +66,7 @@ public class BytesSerializerTest {\n \n   @Test\n   public void testJsonValue() {\n-    byte[] value = new byte[] {1, 2};\n+    byte[] value = new byte[]{1, 2};\n     assertArrayEquals(value, serializer.fromJsonValue(serializer.asJsonValue(value)));\n   }\n \n@@ -73,4 +75,4 @@ public class BytesSerializerTest {\n     SchemaTypeDescriptor<byte[]> descriptor = serializer.getValueSchemaDescriptor();\n     assertEquals(AttributeValueType.BYTE, descriptor.asArrayTypeDescriptor().getValueType());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "column": "94",
                    "severity": "error",
                    "message": "'}' at column 94 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "94",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "74",
                    "column": "95",
                    "severity": "error",
                    "message": "'}' at column 95 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "95",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "74",
                    "column": "95",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/35/BytesSerializerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/35/BytesSerializerTest.java\nindex 61402a30417..f7244defc5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/35/BytesSerializerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/35/BytesSerializerTest.java\n@@ -71,6 +71,4 @@ public class BytesSerializerTest {\n   @Test\n   public void testGetValueSchemaDescriptor() {\n     SchemaTypeDescriptor<byte[]> descriptor = serializer.getValueSchemaDescriptor();\n-    assertEquals(AttributeValueType.BYTE, descriptor.asArrayTypeDescriptor().getValueType());\n-  }\n-}\n+    assertEquals(AttributeValueType.BYTE, descriptor.asArrayTypeDescriptor().getValueType());}}\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
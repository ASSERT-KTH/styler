{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1252",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "128",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "166",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "179",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "249",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "302",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "326",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "528",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "535",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "560",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "572",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "596",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "620",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "620",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "620",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "669",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "675",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "679",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "679",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "694",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "694",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "720",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "728",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "733",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "740",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "741",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "745",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "748",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "748",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "100",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "769",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "770",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "776",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "783",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "783",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "790",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "790",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "800",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "800",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "804",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "804",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "806",
                    "column": "100",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "806",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "811",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "811",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "812",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "812",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "819",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "819",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "827",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "828",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "830",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "830",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "832",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "832",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "835",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "835",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "840",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "840",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "841",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "841",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "848",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "848",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "858",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "858",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "862",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "863",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "868",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "868",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "870",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "870",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "876",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "878",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "878",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "880",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "880",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "885",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "885",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "890",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "891",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "891",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "891",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "897",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "903",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "903",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "908",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "912",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "912",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "915",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "916",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "922",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "922",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "922",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "924",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "925",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "926",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "929",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "929",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "934",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "935",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "935",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "935",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "948",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "948",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "956",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "956",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "962",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "962",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "964",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "964",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "977",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "977",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "982",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "982",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "984",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "984",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "991",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "991",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "998",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "998",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1000",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1000",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1008",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1009",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1018",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1018",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1021",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1021",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1026",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1027",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1030",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1030",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1033",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1034",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1039",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1040",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1042",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1042",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1047",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1047",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1055",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1060",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1060",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1066",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1066",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1075",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1076",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1085",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1086",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1088",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1088",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1091",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1091",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1096",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1096",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1099",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1100",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1103",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1105",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1106",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1112",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1112",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1115",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1122",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1126",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1127",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1134",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1139",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1139",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1142",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1142",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1145",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1154",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1154",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1155",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1156",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1158",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1158",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1164",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1164",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1171",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1171",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1172",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1173",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1175",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1175",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1183",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1186",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1186",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1192",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1193",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1204",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1204",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1207",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1207",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1229",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1229",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1231",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1253",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1254",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1256",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1256",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1273",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1273",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1289",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1289",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1297",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1297",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1305",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1305",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1313",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1314",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1320",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1320",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1326",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1327",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1329",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1329",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1332",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1334",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1334",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1337",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1342",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1342",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1345",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1345",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1347",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1347",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1350",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1350",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1350",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1353",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1353",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1353",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1356",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1364",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1364",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1372",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1372",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1374",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1374",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1376",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1376",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1380",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1380",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1384",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1384",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1387",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1387",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1387",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1391",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1393",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1394",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1398",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1398",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1401",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1401",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1403",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1403",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1407",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1407",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1410",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1410",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1416",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1416",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1419",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1419",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1422",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1422",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1426",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1426",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1432",
                    "column": "114",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1434",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1435",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1435",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1438",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1438",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1441",
                    "column": "114",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1443",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1444",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1444",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1447",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1447",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1450",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1450",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1453",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1453",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1463",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1464",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1467",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1467",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1472",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1472",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1475",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1475",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1480",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1480",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1487",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1487",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1492",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1492",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1499",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1499",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1504",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1504",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1511",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1511",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1516",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1516",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1519",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1519",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1520",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1524",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1528",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1529",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1534",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1534",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1537",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1537",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1538",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1542",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1546",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1546",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1551",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1551",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1554",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1554",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1555",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1559",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1563",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1564",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1570",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1571",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1578",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1578",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1583",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1583",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1588",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1588",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1594",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1594",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1600",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1600",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1608",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1609",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1612",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1612",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1614",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1615",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1618",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1618",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1620",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1621",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1624",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1624",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1626",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1627",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1630",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1630",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1632",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1633",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1252/DatabaseActions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1252/DatabaseActions.java\nindex 4e31c6bb12c..631469c5bd1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1252/DatabaseActions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1252/DatabaseActions.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.web;\n \n import com.sun.jersey.api.core.HttpContext;\n@@ -111,1547 +112,1524 @@ import static org.neo4j.server.rest.repr.RepresentationType.CONSTRAINT_DEFINITIO\n \n public class DatabaseActions\n {\n-    public static final String SCORE_ORDER = \"score\";\n-    public static final String RELEVANCE_ORDER = \"relevance\";\n-    public static final String INDEX_ORDER = \"index\";\n-    private final GraphDatabaseAPI graphDb;\n-    private final LeaseManager leases;\n+  public static final String SCORE_ORDER = \"score\";\n+  public static final String RELEVANCE_ORDER = \"relevance\";\n+  public static final String INDEX_ORDER = \"index\";\n+  private final GraphDatabaseAPI graphDb;\n+  private final LeaseManager leases;\n \n-    private final TraversalDescriptionBuilder traversalDescriptionBuilder;\n-    private final PropertySettingStrategy propertySetter;\n+  private final TraversalDescriptionBuilder traversalDescriptionBuilder;\n+  private final PropertySettingStrategy propertySetter;\n \n-    public static class Provider extends InjectableProvider<DatabaseActions>\n-    {\n-        private final DatabaseActions database;\n+  public static class Provider extends InjectableProvider<DatabaseActions>\n+  {\n+    private final DatabaseActions database;\n \n-        public Provider( DatabaseActions database )\n-        {\n-            super( DatabaseActions.class );\n-            this.database = database;\n-        }\n-\n-        @Override\n-        public DatabaseActions getValue( HttpContext c )\n-        {\n-            return database;\n-        }\n-    }\n-\n-    private final Function<ConstraintDefinition,Representation> CONSTRAINT_DEF_TO_REPRESENTATION =\n-            ConstraintDefinitionRepresentation::new;\n-\n-    public DatabaseActions( LeaseManager leaseManager, ScriptExecutionMode executionMode,\n-            GraphDatabaseAPI graphDatabaseAPI )\n+    public Provider(DatabaseActions database)\n     {\n-        this.leases = leaseManager;\n-        this.graphDb = graphDatabaseAPI;\n-        this.traversalDescriptionBuilder = new TraversalDescriptionBuilder( executionMode );\n-        this.propertySetter = new PropertySettingStrategy( graphDb );\n+      super(DatabaseActions.class);\n+      this.database = database;\n     }\n \n-    /**\n-     * This method is only meant for testing.\n-     */\n-    public DatabaseActions( LeaseManager leaseManager, GraphDatabaseAPI graphDatabaseAPI )\n+    @Override\n+    public DatabaseActions getValue(HttpContext c)\n     {\n-        this( leaseManager, ScriptExecutionMode.SANDBOXED, graphDatabaseAPI );\n+      return database;\n     }\n+  }\n \n-    private Node node( long id ) throws NodeNotFoundException\n-    {\n-        try\n-        {\n-            return graphDb.getNodeById( id );\n-        }\n-        catch ( NotFoundException e )\n-        {\n-            throw new NodeNotFoundException( String.format(\n-                    \"Cannot find node with id [%d] in database.\", id ), e );\n-        }\n-    }\n+  private final Function<ConstraintDefinition, Representation> CONSTRAINT_DEF_TO_REPRESENTATION =\n+      ConstraintDefinitionRepresentation::new;\n \n-    private Relationship relationship( long id )\n-            throws RelationshipNotFoundException\n-    {\n-        try\n-        {\n-            return graphDb.getRelationshipById( id );\n-        }\n-        catch ( NotFoundException e )\n-        {\n-            throw new RelationshipNotFoundException( e );\n-        }\n-    }\n+  public DatabaseActions(LeaseManager leaseManager, ScriptExecutionMode executionMode,\n+                         GraphDatabaseAPI graphDatabaseAPI)\n+  {\n+    this.leases = leaseManager;\n+    this.graphDb = graphDatabaseAPI;\n+    this.traversalDescriptionBuilder = new TraversalDescriptionBuilder(executionMode);\n+    this.propertySetter = new PropertySettingStrategy(graphDb);\n+  }\n \n-    // API\n+  /**\n+   * This method is only meant for testing.\n+   */\n+  public DatabaseActions(LeaseManager leaseManager, GraphDatabaseAPI graphDatabaseAPI)\n+  {\n+    this(leaseManager, ScriptExecutionMode.SANDBOXED, graphDatabaseAPI);\n+  }\n \n-    public DatabaseRepresentation root()\n+  private Node node(long id) throws NodeNotFoundException\n+  {\n+    try\n     {\n-        return new DatabaseRepresentation();\n-    }\n-\n-    // Nodes\n-\n-    public NodeRepresentation createNode( Map<String,Object> properties, Label... labels )\n-            throws PropertyValueException\n+      return graphDb.getNodeById(id);\n+    } catch (NotFoundException e)\n     {\n-        Node node = graphDb.createNode();\n-        propertySetter.setProperties( node, properties );\n-        if ( labels != null )\n-        {\n-            for ( Label label : labels )\n-            {\n-                node.addLabel( label );\n-            }\n-        }\n-        return new NodeRepresentation( node );\n+      throw new NodeNotFoundException(String.format(\n+          \"Cannot find node with id [%d] in database.\", id), e);\n     }\n+  }\n \n-    public NodeRepresentation getNode( long nodeId )\n-            throws NodeNotFoundException\n+  private Relationship relationship(long id)\n+      throws RelationshipNotFoundException\n+  {\n+    try\n     {\n-        return new NodeRepresentation( node( nodeId ) );\n-    }\n-\n-    public void deleteNode( long nodeId ) throws NodeNotFoundException, ConstraintViolationException\n+      return graphDb.getRelationshipById(id);\n+    } catch (NotFoundException e)\n     {\n-        Node node = node( nodeId );\n-\n-        if ( node.hasRelationship() )\n-        {\n-            throw new ConstraintViolationException(\n-                    String.format(\n-                            \"The node with id %d cannot be deleted. Check that the node is orphaned before deletion.\",\n-                            nodeId ) );\n-        }\n-\n-        node.delete();\n+      throw new RelationshipNotFoundException(e);\n     }\n+  }\n \n-    // Property keys\n+  // API\n \n-    public Representation getAllPropertyKeys()\n-    {\n-        Collection<ValueRepresentation> propKeys =\n-                Iterables.asSet( map( ValueRepresentation::string, graphDb.getAllPropertyKeys() ) );\n-\n-        return new ListRepresentation( RepresentationType.STRING, propKeys );\n-    }\n+  public DatabaseRepresentation root()\n+  {\n+    return new DatabaseRepresentation();\n+  }\n \n-    // Node properties\n+  // Nodes\n \n-    public Representation getNodeProperty( long nodeId, String key )\n-            throws NodeNotFoundException, NoSuchPropertyException\n+  public NodeRepresentation createNode(Map<String, Object> properties, Label... labels)\n+      throws PropertyValueException\n+  {\n+    Node node = graphDb.createNode();\n+    propertySetter.setProperties(node, properties);\n+    if (labels != null)\n     {\n-        Node node = node( nodeId );\n-        try\n-        {\n-            return PropertiesRepresentation.value( node.getProperty( key ) );\n-        }\n-        catch ( NotFoundException e )\n-        {\n-            throw new NoSuchPropertyException( node, key );\n-        }\n+      for (Label label : labels)\n+      {\n+        node.addLabel(label);\n+      }\n     }\n+    return new NodeRepresentation(node);\n+  }\n \n-    public void setNodeProperty( long nodeId, String key, Object value )\n-            throws PropertyValueException, NodeNotFoundException\n-    {\n-        Node node = node( nodeId );\n-        propertySetter.setProperty( node, key, value );\n-    }\n+  public NodeRepresentation getNode(long nodeId)\n+      throws NodeNotFoundException\n+  {\n+    return new NodeRepresentation(node(nodeId));\n+  }\n \n-    public void removeNodeProperty( long nodeId, String key ) throws NodeNotFoundException, NoSuchPropertyException\n-    {\n-        Node node = node( nodeId );\n-        if ( node.removeProperty( key ) == null )\n-        {\n-            throw new NoSuchPropertyException( node, key );\n-        }\n-    }\n+  public void deleteNode(long nodeId) throws NodeNotFoundException, ConstraintViolationException\n+  {\n+    Node node = node(nodeId);\n \n-    public PropertiesRepresentation getAllNodeProperties( long nodeId )\n-            throws NodeNotFoundException\n+    if (node.hasRelationship())\n     {\n-        return new PropertiesRepresentation( node( nodeId ) );\n+      throw new ConstraintViolationException(\n+          String.format(\n+              \"The node with id %d cannot be deleted. Check that the node is orphaned before deletion.\",\n+              nodeId));\n     }\n \n-    public void setAllNodeProperties( long nodeId,\n-            Map<String,Object> properties ) throws PropertyValueException,\n-            NodeNotFoundException\n-    {\n-        propertySetter.setAllProperties( node( nodeId ), properties );\n-    }\n+    node.delete();\n+  }\n \n-    public void removeAllNodeProperties( long nodeId )\n-            throws NodeNotFoundException, PropertyValueException\n-    {\n-        propertySetter.setAllProperties( node( nodeId ), null );\n-    }\n+  // Property keys\n \n-    // Labels\n+  public Representation getAllPropertyKeys()\n+  {\n+    Collection<ValueRepresentation> propKeys =\n+        Iterables.asSet(map(ValueRepresentation::string, graphDb.getAllPropertyKeys()));\n \n-    public void addLabelToNode( long nodeId, Collection<String> labelNames ) throws NodeNotFoundException,\n-            BadInputException\n-    {\n-        try\n-        {\n-            Node node = node( nodeId );\n-            for ( String labelName : labelNames )\n-            {\n-                node.addLabel( label( labelName ) );\n-            }\n-        }\n-        catch ( org.neo4j.graphdb.ConstraintViolationException e )\n-        {\n-            throw new BadInputException( \"Unable to add label, see nested exception.\", e );\n-        }\n-    }\n+    return new ListRepresentation(RepresentationType.STRING, propKeys);\n+  }\n \n-    public void setLabelsOnNode( long nodeId, Collection<String> labels ) throws NodeNotFoundException,\n-            BadInputException\n+  // Node properties\n \n+  public Representation getNodeProperty(long nodeId, String key)\n+      throws NodeNotFoundException, NoSuchPropertyException\n+  {\n+    Node node = node(nodeId);\n+    try\n     {\n-        Node node = node( nodeId );\n-        try\n-        {\n-            // Remove current labels\n-            for ( Label label : node.getLabels() )\n-            {\n-                node.removeLabel( label );\n-            }\n-\n-            // Add new labels\n-            for ( String labelName : labels )\n-            {\n-                node.addLabel( label( labelName ) );\n-            }\n-        }\n-        catch ( org.neo4j.graphdb.ConstraintViolationException e )\n-        {\n-            throw new BadInputException( \"Unable to add label, see nested exception.\", e );\n-        }\n-    }\n-\n-    public void removeLabelFromNode( long nodeId, String labelName ) throws NodeNotFoundException\n+      return PropertiesRepresentation.value(node.getProperty(key));\n+    } catch (NotFoundException e)\n     {\n-        node( nodeId ).removeLabel( label( labelName ) );\n+      throw new NoSuchPropertyException(node, key);\n     }\n+  }\n \n-    public ListRepresentation getNodeLabels( long nodeId ) throws NodeNotFoundException\n-    {\n-        Iterable<String> labels = new IterableWrapper<String,Label>( node( nodeId ).getLabels() )\n-        {\n-            @Override\n-            protected String underlyingObjectToObject( Label object )\n-            {\n-                return object.name();\n-            }\n-        };\n-        return ListRepresentation.string( labels );\n-    }\n-\n-    public String[] getNodeIndexNames()\n-    {\n-        return graphDb.index().nodeIndexNames();\n-    }\n+  public void setNodeProperty(long nodeId, String key, Object value)\n+      throws PropertyValueException, NodeNotFoundException\n+  {\n+    Node node = node(nodeId);\n+    propertySetter.setProperty(node, key, value);\n+  }\n \n-    public String[] getRelationshipIndexNames()\n+  public void removeNodeProperty(long nodeId, String key) throws NodeNotFoundException, NoSuchPropertyException\n+  {\n+    Node node = node(nodeId);\n+    if (node.removeProperty(key) == null)\n     {\n-        return graphDb.index().relationshipIndexNames();\n+      throw new NoSuchPropertyException(node, key);\n     }\n+  }\n \n-    public IndexRepresentation createNodeIndex(\n-            Map<String,Object> indexSpecification )\n-    {\n-        final String indexName = (String) indexSpecification.get( \"name\" );\n-\n-        assertIsLegalIndexName( indexName );\n-\n-        if ( indexSpecification.containsKey( \"config\" ) )\n-        {\n+  public PropertiesRepresentation getAllNodeProperties(long nodeId)\n+      throws NodeNotFoundException\n+  {\n+    return new PropertiesRepresentation(node(nodeId));\n+  }\n \n-            @SuppressWarnings( \"unchecked\" )\n-            Map<String,String> config = (Map<String,String>) indexSpecification.get( \"config\" );\n-            graphDb.index().forNodes( indexName, config );\n+  public void setAllNodeProperties(long nodeId,\n+                                   Map<String, Object> properties) throws PropertyValueException,\n+      NodeNotFoundException\n+  {\n+    propertySetter.setAllProperties(node(nodeId), properties);\n+  }\n \n-            return new NodeIndexRepresentation( indexName, config );\n-        }\n+  public void removeAllNodeProperties(long nodeId)\n+      throws NodeNotFoundException, PropertyValueException\n+  {\n+    propertySetter.setAllProperties(node(nodeId), null);\n+  }\n \n-        graphDb.index().forNodes( indexName );\n-        return new NodeIndexRepresentation( indexName,\n-                Collections.emptyMap() );\n-    }\n+  // Labels\n \n-    public IndexRepresentation createRelationshipIndex(\n-            Map<String,Object> indexSpecification )\n+  public void addLabelToNode(long nodeId, Collection<String> labelNames) throws NodeNotFoundException,\n+      BadInputException\n+  {\n+    try\n     {\n-        final String indexName = (String) indexSpecification.get( \"name\" );\n-\n-        assertIsLegalIndexName( indexName );\n-\n-        if ( indexSpecification.containsKey( \"config\" ) )\n-        {\n-\n-            @SuppressWarnings( \"unchecked\" )\n-            Map<String,String> config = (Map<String,String>) indexSpecification.get( \"config\" );\n-            graphDb.index().forRelationships( indexName, config );\n-\n-            return new RelationshipIndexRepresentation( indexName, config );\n-        }\n-\n-        graphDb.index().forRelationships( indexName );\n-        return new RelationshipIndexRepresentation( indexName,\n-                Collections.emptyMap() );\n-    }\n-\n-    public void removeNodeIndex( String indexName )\n+      Node node = node(nodeId);\n+      for (String labelName : labelNames)\n+      {\n+        node.addLabel(label(labelName));\n+      }\n+    } catch (org.neo4j.graphdb.ConstraintViolationException e)\n     {\n-        if ( !graphDb.index().existsForNodes( indexName ) )\n-        {\n-            throw new NotFoundException( \"No node index named '\" + indexName + \"'.\" );\n-        }\n-\n-        graphDb.index().forNodes( indexName ).delete();\n+      throw new BadInputException(\"Unable to add label, see nested exception.\", e);\n     }\n+  }\n \n-    public void removeRelationshipIndex( String indexName )\n-    {\n-        if ( !graphDb.index().existsForRelationships( indexName ) )\n-        {\n-            throw new NotFoundException( \"No relationship index named '\" + indexName + \"'.\" );\n-        }\n-\n-        graphDb.index().forRelationships( indexName ).delete();\n-    }\n+  public void setLabelsOnNode(long nodeId, Collection<String> labels) throws NodeNotFoundException,\n+      BadInputException\n \n-    public boolean nodeIsIndexed( String indexName, String key, Object value, long nodeId )\n+  {\n+    Node node = node(nodeId);\n+    try\n     {\n-        Index<Node> index = graphDb.index().forNodes( indexName );\n-        Node expectedNode = graphDb.getNodeById( nodeId );\n-        try ( IndexHits<Node> hits = index.get( key, value ) )\n-        {\n-            return iterableContains( hits, expectedNode );\n-        }\n-    }\n+      // Remove current labels\n+      for (Label label : node.getLabels())\n+      {\n+        node.removeLabel(label);\n+      }\n \n-    public boolean relationshipIsIndexed( String indexName, String key, Object value, long relationshipId )\n+      // Add new labels\n+      for (String labelName : labels)\n+      {\n+        node.addLabel(label(labelName));\n+      }\n+    } catch (org.neo4j.graphdb.ConstraintViolationException e)\n     {\n-\n-        Index<Relationship> index = graphDb.index().forRelationships( indexName );\n-        Relationship expectedNode = graphDb.getRelationshipById( relationshipId );\n-        try ( IndexHits<Relationship> hits = index.get( key, value ) )\n-        {\n-            return iterableContains( hits, expectedNode );\n-        }\n+      throw new BadInputException(\"Unable to add label, see nested exception.\", e);\n     }\n+  }\n \n-    private <T> boolean iterableContains( Iterable<T> iterable,\n-            T expectedElement )\n-    {\n-        for ( T possibleMatch : iterable )\n-        {\n-            if ( possibleMatch.equals( expectedElement ) )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n+  public void removeLabelFromNode(long nodeId, String labelName) throws NodeNotFoundException\n+  {\n+    node(nodeId).removeLabel(label(labelName));\n+  }\n \n-    public Representation isAutoIndexerEnabled( String type )\n+  public ListRepresentation getNodeLabels(long nodeId) throws NodeNotFoundException\n+  {\n+    Iterable<String> labels = new IterableWrapper<String, Label>(node(nodeId).getLabels())\n     {\n-        AutoIndexer<? extends PropertyContainer> index = getAutoIndexerForType( type );\n-        return ValueRepresentation.bool( index.isEnabled() );\n-    }\n+      @Override\n+      protected String underlyingObjectToObject(Label object)\n+      {\n+        return object.name();\n+      }\n+    };\n+    return ListRepresentation.string(labels);\n+  }\n \n-    public void setAutoIndexerEnabled( String type, boolean enable )\n-    {\n-        AutoIndexer<? extends PropertyContainer> index = getAutoIndexerForType( type );\n-        index.setEnabled( enable );\n-    }\n+  public String[] getNodeIndexNames()\n+  {\n+    return graphDb.index().nodeIndexNames();\n+  }\n \n-    private AutoIndexer<? extends PropertyContainer> getAutoIndexerForType( String type )\n-    {\n-        final IndexManager indexManager = graphDb.index();\n-        switch ( type )\n-        {\n-        case \"node\":\n-            return indexManager.getNodeAutoIndexer();\n-        case \"relationship\":\n-            return indexManager.getRelationshipAutoIndexer();\n-        default:\n-            throw new IllegalArgumentException( \"invalid type \" + type );\n-        }\n-    }\n+  public String[] getRelationshipIndexNames()\n+  {\n+    return graphDb.index().relationshipIndexNames();\n+  }\n \n-    public Representation getAutoIndexedProperties( String type )\n-    {\n-        AutoIndexer<? extends PropertyContainer> indexer = getAutoIndexerForType( type );\n-        return ListRepresentation.string( indexer.getAutoIndexedProperties() );\n-    }\n+  public IndexRepresentation createNodeIndex(\n+      Map<String, Object> indexSpecification)\n+  {\n+    final String indexName = (String) indexSpecification.get(\"name\");\n \n-    public void startAutoIndexingProperty( String type, String property )\n-    {\n-        AutoIndexer<? extends PropertyContainer> indexer = getAutoIndexerForType( type );\n-        indexer.startAutoIndexingProperty( property );\n-    }\n+    assertIsLegalIndexName(indexName);\n \n-    public void stopAutoIndexingProperty( String type, String property )\n+    if (indexSpecification.containsKey(\"config\"))\n     {\n-        AutoIndexer<? extends PropertyContainer> indexer = getAutoIndexerForType( type );\n-        indexer.stopAutoIndexingProperty( property );\n-    }\n-\n-    // Relationships\n \n-    public enum RelationshipDirection\n-    {\n-        all( Direction.BOTH ),\n-        in( Direction.INCOMING ),\n-        out( Direction.OUTGOING );\n-        final Direction internal;\n+      @SuppressWarnings(\"unchecked\")\n+      Map<String, String> config = (Map<String, String>) indexSpecification.get(\"config\");\n+      graphDb.index().forNodes(indexName, config);\n \n-        RelationshipDirection( Direction internal )\n-        {\n-            this.internal = internal;\n-        }\n+      return new NodeIndexRepresentation(indexName, config);\n     }\n \n-    public RelationshipRepresentation createRelationship( long startNodeId,\n-            long endNodeId, String type, Map<String,Object> properties )\n-            throws StartNodeNotFoundException, EndNodeNotFoundException,\n-            PropertyValueException\n-    {\n+    graphDb.index().forNodes(indexName);\n+    return new NodeIndexRepresentation(indexName,\n+        Collections.emptyMap());\n+  }\n \n-        Node start;\n-        Node end;\n-        try\n-        {\n-            start = node( startNodeId );\n-        }\n-        catch ( NodeNotFoundException e )\n-        {\n-            throw new StartNodeNotFoundException( e );\n-        }\n-        try\n-        {\n-            end = node( endNodeId );\n-        }\n-        catch ( NodeNotFoundException e )\n-        {\n-            throw new EndNodeNotFoundException( e );\n-        }\n-\n-        Relationship rel = start.createRelationshipTo( end,\n-                RelationshipType.withName( type ) );\n+  public IndexRepresentation createRelationshipIndex(\n+      Map<String, Object> indexSpecification)\n+  {\n+    final String indexName = (String) indexSpecification.get(\"name\");\n \n-        propertySetter.setProperties( rel, properties );\n-\n-        return new RelationshipRepresentation( rel );\n-    }\n+    assertIsLegalIndexName(indexName);\n \n-    public RelationshipRepresentation getRelationship( long relationshipId )\n-            throws RelationshipNotFoundException\n+    if (indexSpecification.containsKey(\"config\"))\n     {\n-        return new RelationshipRepresentation( relationship( relationshipId ) );\n-    }\n \n-    public void deleteRelationship( long relationshipId ) throws RelationshipNotFoundException\n-    {\n-        relationship( relationshipId ).delete();\n-    }\n+      @SuppressWarnings(\"unchecked\")\n+      Map<String, String> config = (Map<String, String>) indexSpecification.get(\"config\");\n+      graphDb.index().forRelationships(indexName, config);\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public ListRepresentation getNodeRelationships( long nodeId,\n-            RelationshipDirection direction, Collection<String> types )\n-            throws NodeNotFoundException\n-    {\n-        Node node = node( nodeId );\n-        PathExpander expander;\n-        if ( types.isEmpty() )\n-        {\n-            expander = PathExpanders.forDirection( direction.internal );\n-        }\n-        else\n-        {\n-            PathExpanderBuilder builder = PathExpanderBuilder.empty();\n-            for ( String type : types )\n-            {\n-                builder = builder.add(\n-                        RelationshipType.withName( type ),\n-                        direction.internal );\n-            }\n-            expander = builder.build();\n-        }\n-        return RelationshipRepresentation.list( expander.expand( Paths.singleNodePath( node ), BranchState.NO_STATE ) );\n+      return new RelationshipIndexRepresentation(indexName, config);\n     }\n \n-    // Node degrees\n+    graphDb.index().forRelationships(indexName);\n+    return new RelationshipIndexRepresentation(indexName,\n+        Collections.emptyMap());\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public Representation getNodeDegree( long nodeId, RelationshipDirection direction, Collection<String> types )\n-            throws NodeNotFoundException\n+  public void removeNodeIndex(String indexName)\n+  {\n+    if (!graphDb.index().existsForNodes(indexName))\n     {\n-        Node node = node( nodeId );\n-        if ( types.isEmpty() )\n-        {\n-            return PropertiesRepresentation.value( node.getDegree( direction.internal ) );\n-        }\n-        else\n-        {\n-            int sum = 0;\n-            for ( String type : types )\n-            {\n-                sum += node.getDegree( RelationshipType.withName( type ), direction.internal );\n-            }\n-            return PropertiesRepresentation.value( sum );\n-        }\n+      throw new NotFoundException(\"No node index named '\" + indexName + \"'.\");\n     }\n \n-    // Relationship properties\n+    graphDb.index().forNodes(indexName).delete();\n+  }\n \n-    public PropertiesRepresentation getAllRelationshipProperties(\n-            long relationshipId ) throws RelationshipNotFoundException\n+  public void removeRelationshipIndex(String indexName)\n+  {\n+    if (!graphDb.index().existsForRelationships(indexName))\n     {\n-        return new PropertiesRepresentation( relationship( relationshipId ) );\n+      throw new NotFoundException(\"No relationship index named '\" + indexName + \"'.\");\n     }\n \n-    public Representation getRelationshipProperty( long relationshipId,\n-            String key ) throws NoSuchPropertyException,\n-            RelationshipNotFoundException\n-    {\n-        Relationship relationship = relationship( relationshipId );\n-        try\n-        {\n-            return PropertiesRepresentation.value( relationship.getProperty( key ) );\n-        }\n-        catch ( NotFoundException e )\n-        {\n-            throw new NoSuchPropertyException( relationship, key );\n-        }\n-    }\n+    graphDb.index().forRelationships(indexName).delete();\n+  }\n \n-    public void setAllRelationshipProperties( long relationshipId,\n-            Map<String,Object> properties ) throws PropertyValueException,\n-            RelationshipNotFoundException\n+  public boolean nodeIsIndexed(String indexName, String key, Object value, long nodeId)\n+  {\n+    Index<Node> index = graphDb.index().forNodes(indexName);\n+    Node expectedNode = graphDb.getNodeById(nodeId);\n+    try (IndexHits<Node> hits = index.get(key, value))\n     {\n-        propertySetter.setAllProperties( relationship( relationshipId ), properties );\n+      return iterableContains(hits, expectedNode);\n     }\n+  }\n \n-    public void setRelationshipProperty( long relationshipId, String key,\n-            Object value ) throws PropertyValueException,\n-            RelationshipNotFoundException\n-    {\n-        Relationship relationship = relationship( relationshipId );\n-        propertySetter.setProperty( relationship, key, value );\n-    }\n+  public boolean relationshipIsIndexed(String indexName, String key, Object value, long relationshipId)\n+  {\n \n-    public void removeAllRelationshipProperties( long relationshipId )\n-            throws RelationshipNotFoundException, PropertyValueException\n+    Index<Relationship> index = graphDb.index().forRelationships(indexName);\n+    Relationship expectedNode = graphDb.getRelationshipById(relationshipId);\n+    try (IndexHits<Relationship> hits = index.get(key, value))\n     {\n-        propertySetter.setAllProperties( relationship( relationshipId ), null );\n+      return iterableContains(hits, expectedNode);\n     }\n+  }\n \n-    public void removeRelationshipProperty( long relationshipId, String key )\n-            throws RelationshipNotFoundException, NoSuchPropertyException\n+  private <T> boolean iterableContains(Iterable<T> iterable,\n+                                       T expectedElement)\n+  {\n+    for (T possibleMatch : iterable)\n     {\n-        Relationship relationship = relationship( relationshipId );\n-\n-        if ( relationship.removeProperty( key ) == null )\n-        {\n-            throw new NoSuchPropertyException( relationship, key );\n-        }\n+      if (possibleMatch.equals(expectedElement))\n+      {\n+        return true;\n+      }\n     }\n+    return false;\n+  }\n \n-    public Representation nodeIndexRoot()\n-    {\n-        return new NodeIndexRootRepresentation( graphDb.index() );\n-    }\n+  public Representation isAutoIndexerEnabled(String type)\n+  {\n+    AutoIndexer<? extends PropertyContainer> index = getAutoIndexerForType(type);\n+    return ValueRepresentation.bool(index.isEnabled());\n+  }\n \n-    public Representation relationshipIndexRoot()\n-    {\n-        return new RelationshipIndexRootRepresentation( graphDb.index() );\n-    }\n+  public void setAutoIndexerEnabled(String type, boolean enable)\n+  {\n+    AutoIndexer<? extends PropertyContainer> index = getAutoIndexerForType(type);\n+    index.setEnabled(enable);\n+  }\n \n-    public IndexedEntityRepresentation addToRelationshipIndex( String indexName, String key, String value,\n-            long relationshipId )\n+  private AutoIndexer<? extends PropertyContainer> getAutoIndexerForType(String type)\n+  {\n+    final IndexManager indexManager = graphDb.index();\n+    switch (type)\n     {\n-        Relationship relationship = graphDb.getRelationshipById( relationshipId );\n-        Index<Relationship> index = graphDb.index().forRelationships( indexName );\n-        index.add( relationship, key, value );\n-        return new IndexedEntityRepresentation( relationship, key, value,\n-                new RelationshipIndexRepresentation( indexName,\n-                        Collections.emptyMap() ) );\n+      case \"node\":\n+        return indexManager.getNodeAutoIndexer();\n+      case \"relationship\":\n+        return indexManager.getRelationshipAutoIndexer();\n+      default:\n+        throw new IllegalArgumentException(\"invalid type \" + type);\n     }\n+  }\n \n-    public IndexedEntityRepresentation addToNodeIndex( String indexName, String key, String value, long nodeId )\n-    {\n-        Node node = graphDb.getNodeById( nodeId );\n-        Index<Node> index = graphDb.index().forNodes( indexName );\n-        index.add( node, key, value );\n-        return new IndexedEntityRepresentation( node, key, value,\n-                new NodeIndexRepresentation( indexName,\n-                        Collections.emptyMap() ) );\n-    }\n+  public Representation getAutoIndexedProperties(String type)\n+  {\n+    AutoIndexer<? extends PropertyContainer> indexer = getAutoIndexerForType(type);\n+    return ListRepresentation.string(indexer.getAutoIndexedProperties());\n+  }\n \n-    public void removeFromNodeIndex( String indexName, String key, String value, long id )\n-    {\n-        graphDb.index().forNodes( indexName ).remove( graphDb.getNodeById( id ), key, value );\n-    }\n+  public void startAutoIndexingProperty(String type, String property)\n+  {\n+    AutoIndexer<? extends PropertyContainer> indexer = getAutoIndexerForType(type);\n+    indexer.startAutoIndexingProperty(property);\n+  }\n \n-    public void removeFromNodeIndexNoValue( String indexName, String key, long id )\n-    {\n-        graphDb.index().forNodes( indexName ).remove( graphDb.getNodeById( id ), key );\n-    }\n+  public void stopAutoIndexingProperty(String type, String property)\n+  {\n+    AutoIndexer<? extends PropertyContainer> indexer = getAutoIndexerForType(type);\n+    indexer.stopAutoIndexingProperty(property);\n+  }\n \n-    public void removeFromNodeIndexNoKeyValue( String indexName, long id )\n-    {\n-        graphDb.index().forNodes( indexName ).remove( graphDb.getNodeById( id ) );\n-    }\n+  // Relationships\n \n-    public void removeFromRelationshipIndex( String indexName, String key, String value, long id )\n-    {\n-        graphDb.index().forRelationships( indexName ).remove( graphDb.getRelationshipById( id ), key, value );\n-    }\n+  public enum RelationshipDirection\n+  {\n+    all(Direction.BOTH),\n+    in(Direction.INCOMING),\n+    out(Direction.OUTGOING);\n+    final Direction internal;\n \n-    public void removeFromRelationshipIndexNoValue( String indexName, String key, long id )\n+    RelationshipDirection(Direction internal)\n     {\n-        graphDb.index().forRelationships( indexName ).remove( graphDb.getRelationshipById( id ), key );\n+      this.internal = internal;\n     }\n+  }\n \n-    public void removeFromRelationshipIndexNoKeyValue( String indexName, long id )\n-    {\n-        graphDb.index().forRelationships( indexName ).remove( graphDb.getRelationshipById( id ) );\n-    }\n+  public RelationshipRepresentation createRelationship(long startNodeId,\n+                                                       long endNodeId, String type, Map<String, Object> properties)\n+      throws StartNodeNotFoundException, EndNodeNotFoundException,\n+      PropertyValueException\n+  {\n \n-    public IndexedEntityRepresentation getIndexedNode( String indexName,\n-            String key, String value, long id )\n+    Node start;\n+    Node end;\n+    try\n     {\n-        if ( !nodeIsIndexed( indexName, key, value, id ) )\n-        {\n-            throw new NotFoundException();\n-        }\n-        Node node = graphDb.getNodeById( id );\n-        return new IndexedEntityRepresentation( node, key, value,\n-                new NodeIndexRepresentation( indexName,\n-                        Collections.emptyMap() ) );\n-    }\n-\n-    public IndexedEntityRepresentation getIndexedRelationship(\n-            String indexName, String key, String value, long id )\n+      start = node(startNodeId);\n+    } catch (NodeNotFoundException e)\n     {\n-        if ( !relationshipIsIndexed( indexName, key, value, id ) )\n-        {\n-            throw new NotFoundException();\n-        }\n-        Relationship node = graphDb.getRelationshipById( id );\n-        return new IndexedEntityRepresentation( node, key, value,\n-                new RelationshipIndexRepresentation( indexName,\n-                        Collections.emptyMap() ) );\n+      throw new StartNodeNotFoundException(e);\n     }\n-\n-    public ListRepresentation getIndexedNodes( String indexName, final String key,\n-            final String value )\n+    try\n     {\n-        if ( !graphDb.index().existsForNodes( indexName ) )\n-        {\n-            throw new NotFoundException();\n-        }\n-\n-        Index<Node> index = graphDb.index().forNodes( indexName );\n-\n-        final IndexRepresentation indexRepresentation = new NodeIndexRepresentation( indexName );\n-        final IndexHits<Node> indexHits = index.get( key, value );\n+      end = node(endNodeId);\n+    } catch (NodeNotFoundException e)\n+    {\n+      throw new EndNodeNotFoundException(e);\n+    }\n+\n+    Relationship rel = start.createRelationshipTo(end,\n+        RelationshipType.withName(type));\n+\n+    propertySetter.setProperties(rel, properties);\n+\n+    return new RelationshipRepresentation(rel);\n+  }\n+\n+  public RelationshipRepresentation getRelationship(long relationshipId)\n+      throws RelationshipNotFoundException\n+  {\n+    return new RelationshipRepresentation(relationship(relationshipId));\n+  }\n+\n+  public void deleteRelationship(long relationshipId) throws RelationshipNotFoundException\n+  {\n+    relationship(relationshipId).delete();\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public ListRepresentation getNodeRelationships(long nodeId,\n+                                                 RelationshipDirection direction, Collection<String> types)\n+      throws NodeNotFoundException\n+  {\n+    Node node = node(nodeId);\n+    PathExpander expander;\n+    if (types.isEmpty())\n+    {\n+      expander = PathExpanders.forDirection(direction.internal);\n+    } else\n+    {\n+      PathExpanderBuilder builder = PathExpanderBuilder.empty();\n+      for (String type : types)\n+      {\n+        builder = builder.add(\n+            RelationshipType.withName(type),\n+            direction.internal);\n+      }\n+      expander = builder.build();\n+    }\n+    return RelationshipRepresentation.list(expander.expand(Paths.singleNodePath(node), BranchState.NO_STATE));\n+  }\n+\n+  // Node degrees\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public Representation getNodeDegree(long nodeId, RelationshipDirection direction, Collection<String> types)\n+      throws NodeNotFoundException\n+  {\n+    Node node = node(nodeId);\n+    if (types.isEmpty())\n+    {\n+      return PropertiesRepresentation.value(node.getDegree(direction.internal));\n+    } else\n+    {\n+      int sum = 0;\n+      for (String type : types)\n+      {\n+        sum += node.getDegree(RelationshipType.withName(type), direction.internal);\n+      }\n+      return PropertiesRepresentation.value(sum);\n+    }\n+  }\n+\n+  // Relationship properties\n+\n+  public PropertiesRepresentation getAllRelationshipProperties(\n+      long relationshipId) throws RelationshipNotFoundException\n+  {\n+    return new PropertiesRepresentation(relationship(relationshipId));\n+  }\n+\n+  public Representation getRelationshipProperty(long relationshipId,\n+                                                String key) throws NoSuchPropertyException,\n+      RelationshipNotFoundException\n+  {\n+    Relationship relationship = relationship(relationshipId);\n+    try\n+    {\n+      return PropertiesRepresentation.value(relationship.getProperty(key));\n+    } catch (NotFoundException e)\n+    {\n+      throw new NoSuchPropertyException(relationship, key);\n+    }\n+  }\n+\n+  public void setAllRelationshipProperties(long relationshipId,\n+                                           Map<String, Object> properties) throws PropertyValueException,\n+      RelationshipNotFoundException\n+  {\n+    propertySetter.setAllProperties(relationship(relationshipId), properties);\n+  }\n+\n+  public void setRelationshipProperty(long relationshipId, String key,\n+                                      Object value) throws PropertyValueException,\n+      RelationshipNotFoundException\n+  {\n+    Relationship relationship = relationship(relationshipId);\n+    propertySetter.setProperty(relationship, key, value);\n+  }\n+\n+  public void removeAllRelationshipProperties(long relationshipId)\n+      throws RelationshipNotFoundException, PropertyValueException\n+  {\n+    propertySetter.setAllProperties(relationship(relationshipId), null);\n+  }\n+\n+  public void removeRelationshipProperty(long relationshipId, String key)\n+      throws RelationshipNotFoundException, NoSuchPropertyException\n+  {\n+    Relationship relationship = relationship(relationshipId);\n+\n+    if (relationship.removeProperty(key) == null)\n+    {\n+      throw new NoSuchPropertyException(relationship, key);\n+    }\n+  }\n+\n+  public Representation nodeIndexRoot()\n+  {\n+    return new NodeIndexRootRepresentation(graphDb.index());\n+  }\n+\n+  public Representation relationshipIndexRoot()\n+  {\n+    return new RelationshipIndexRootRepresentation(graphDb.index());\n+  }\n+\n+  public IndexedEntityRepresentation addToRelationshipIndex(String indexName, String key, String value,\n+                                                            long relationshipId)\n+  {\n+    Relationship relationship = graphDb.getRelationshipById(relationshipId);\n+    Index<Relationship> index = graphDb.index().forRelationships(indexName);\n+    index.add(relationship, key, value);\n+    return new IndexedEntityRepresentation(relationship, key, value,\n+        new RelationshipIndexRepresentation(indexName,\n+            Collections.emptyMap()));\n+  }\n+\n+  public IndexedEntityRepresentation addToNodeIndex(String indexName, String key, String value, long nodeId)\n+  {\n+    Node node = graphDb.getNodeById(nodeId);\n+    Index<Node> index = graphDb.index().forNodes(indexName);\n+    index.add(node, key, value);\n+    return new IndexedEntityRepresentation(node, key, value,\n+        new NodeIndexRepresentation(indexName,\n+            Collections.emptyMap()));\n+  }\n+\n+  public void removeFromNodeIndex(String indexName, String key, String value, long id)\n+  {\n+    graphDb.index().forNodes(indexName).remove(graphDb.getNodeById(id), key, value);\n+  }\n+\n+  public void removeFromNodeIndexNoValue(String indexName, String key, long id)\n+  {\n+    graphDb.index().forNodes(indexName).remove(graphDb.getNodeById(id), key);\n+  }\n+\n+  public void removeFromNodeIndexNoKeyValue(String indexName, long id)\n+  {\n+    graphDb.index().forNodes(indexName).remove(graphDb.getNodeById(id));\n+  }\n+\n+  public void removeFromRelationshipIndex(String indexName, String key, String value, long id)\n+  {\n+    graphDb.index().forRelationships(indexName).remove(graphDb.getRelationshipById(id), key, value);\n+  }\n+\n+  public void removeFromRelationshipIndexNoValue(String indexName, String key, long id)\n+  {\n+    graphDb.index().forRelationships(indexName).remove(graphDb.getRelationshipById(id), key);\n+  }\n+\n+  public void removeFromRelationshipIndexNoKeyValue(String indexName, long id)\n+  {\n+    graphDb.index().forRelationships(indexName).remove(graphDb.getRelationshipById(id));\n+  }\n+\n+  public IndexedEntityRepresentation getIndexedNode(String indexName,\n+                                                    String key, String value, long id)\n+  {\n+    if (!nodeIsIndexed(indexName, key, value, id))\n+    {\n+      throw new NotFoundException();\n+    }\n+    Node node = graphDb.getNodeById(id);\n+    return new IndexedEntityRepresentation(node, key, value,\n+        new NodeIndexRepresentation(indexName,\n+            Collections.emptyMap()));\n+  }\n+\n+  public IndexedEntityRepresentation getIndexedRelationship(\n+      String indexName, String key, String value, long id)\n+  {\n+    if (!relationshipIsIndexed(indexName, key, value, id))\n+    {\n+      throw new NotFoundException();\n+    }\n+    Relationship node = graphDb.getRelationshipById(id);\n+    return new IndexedEntityRepresentation(node, key, value,\n+        new RelationshipIndexRepresentation(indexName,\n+            Collections.emptyMap()));\n+  }\n+\n+  public ListRepresentation getIndexedNodes(String indexName, final String key,\n+                                            final String value)\n+  {\n+    if (!graphDb.index().existsForNodes(indexName))\n+    {\n+      throw new NotFoundException();\n+    }\n+\n+    Index<Node> index = graphDb.index().forNodes(indexName);\n+\n+    final IndexRepresentation indexRepresentation = new NodeIndexRepresentation(indexName);\n+    final IndexHits<Node> indexHits = index.get(key, value);\n+\n+    final IterableWrapper<Representation, Node> results = new IterableWrapper<Representation, Node>(indexHits)\n+    {\n+      @Override\n+      protected Representation underlyingObjectToObject(Node node)\n+      {\n+        return new IndexedEntityRepresentation(node, key, value, indexRepresentation);\n+      }\n+    };\n+    return new ListRepresentation(RepresentationType.NODE, results);\n+  }\n+\n+  public ListRepresentation getIndexedNodesByQuery(String indexName,\n+                                                   String query, String sort)\n+  {\n+    return getIndexedNodesByQuery(indexName, null, query, sort);\n+  }\n+\n+  public ListRepresentation getIndexedNodesByQuery(String indexName,\n+                                                   String key, String query, String sort)\n+  {\n+    if (!graphDb.index().existsForNodes(indexName))\n+    {\n+      throw new NotFoundException();\n+    }\n+\n+    if (query == null)\n+    {\n+      return toListNodeRepresentation();\n+    }\n+    Index<Node> index = graphDb.index().forNodes(indexName);\n+\n+    IndexResultOrder order = getOrdering(sort);\n+    QueryContext queryCtx = order.updateQueryContext(new QueryContext(query));\n+    IndexHits<Node> result = index.query(key, queryCtx);\n+    return toListNodeRepresentation(result, order);\n+  }\n+\n+  private ListRepresentation toListNodeRepresentation()\n+  {\n+    return new ListRepresentation(RepresentationType.NODE, Collections.emptyList());\n+  }\n+\n+  private ListRepresentation toListNodeRepresentation(final IndexHits<Node> result, final IndexResultOrder order)\n+  {\n+    if (result == null)\n+    {\n+      return new ListRepresentation(RepresentationType.NODE, Collections.emptyList());\n+    }\n+    final IterableWrapper<Representation, Node> results = new IterableWrapper<Representation, Node>(result)\n+    {\n+      @Override\n+      protected Representation underlyingObjectToObject(Node node)\n+      {\n+        final NodeRepresentation nodeRepresentation = new NodeRepresentation(node);\n+        if (order == null)\n+        {\n+          return nodeRepresentation;\n+        }\n+        return order.getRepresentationFor(nodeRepresentation, result.currentScore());\n+      }\n+    };\n+    return new ListRepresentation(RepresentationType.NODE, results);\n+  }\n+\n+  private ListRepresentation toListRelationshipRepresentation()\n+  {\n+    return new ListRepresentation(RepresentationType.RELATIONSHIP, Collections.emptyList());\n+  }\n+\n+  private ListRepresentation toListRelationshipRepresentation(final IndexHits<Relationship> result,\n+                                                              final IndexResultOrder order)\n+  {\n+    if (result == null)\n+    {\n+      return new ListRepresentation(RepresentationType.RELATIONSHIP, Collections.emptyList());\n+    }\n+    final IterableWrapper<Representation, Relationship> results = new IterableWrapper<Representation,\n+        Relationship>(result)\n+    {\n+      @Override\n+      protected Representation underlyingObjectToObject(Relationship rel)\n+      {\n+        final RelationshipRepresentation relationshipRepresentation = new RelationshipRepresentation(rel);\n+        if (order != null)\n+        {\n+          return order.getRepresentationFor(relationshipRepresentation, result.currentScore());\n+        }\n+        return relationshipRepresentation;\n+      }\n+    };\n+    return new ListRepresentation(RepresentationType.RELATIONSHIP, results);\n+  }\n+\n+  public Pair<IndexedEntityRepresentation, Boolean> getOrCreateIndexedNode(\n+      String indexName, String key, String value, Long nodeOrNull, Map<String, Object> properties)\n+      throws BadInputException, NodeNotFoundException\n+  {\n+    assertIsLegalIndexName(indexName);\n+    Node result;\n+    boolean created;\n+    if (nodeOrNull != null)\n+    {\n+      if (properties != null)\n+      {\n+        throw new InvalidArgumentsException(\"Cannot specify properties for a new node, \" +\n+            \"when a node to index is specified.\");\n+      }\n+      Node node = node(nodeOrNull);\n+      result = graphDb.index().forNodes(indexName).putIfAbsent(node, key, value);\n+      created = result == null;\n+      if (created)\n+      {\n+        UniqueNodeFactory factory = new UniqueNodeFactory(indexName, properties);\n+        UniqueEntity<Node> entity = factory.getOrCreateWithOutcome(key, value);\n+        // when given a node id, return as created if that node was newly added to the index\n+        created = entity.entity().getId() == node.getId() || entity.wasCreated();\n+        result = entity.entity();\n+      }\n+    } else\n+    {\n+      if (properties != null)\n+      {\n+        for (Map.Entry<String, Object> entry : properties.entrySet())\n+        {\n+          entry.setValue(propertySetter.convert(entry.getValue()));\n+        }\n+      }\n+      UniqueNodeFactory factory = new UniqueNodeFactory(indexName, properties);\n+      UniqueEntity<Node> entity = factory.getOrCreateWithOutcome(key, value);\n+      result = entity.entity();\n+      created = entity.wasCreated();\n+    }\n+    return Pair.of(new IndexedEntityRepresentation(result, key, value,\n+        new NodeIndexRepresentation(indexName, Collections.emptyMap())), created);\n+  }\n+\n+  public Pair<IndexedEntityRepresentation, Boolean> getOrCreateIndexedRelationship(\n+      String indexName, String key, String value,\n+      Long relationshipOrNull, Long startNode, String type, Long endNode,\n+      Map<String, Object> properties)\n+      throws BadInputException, RelationshipNotFoundException, NodeNotFoundException\n+  {\n+    assertIsLegalIndexName(indexName);\n+    Relationship result;\n+    boolean created;\n+    if (relationshipOrNull != null)\n+    {\n+      if (startNode != null || type != null || endNode != null || properties != null)\n+      {\n+        throw new InvalidArgumentsException(\"Either specify a relationship to index uniquely, \" +\n+            \"or the means for creating it.\");\n+      }\n+      Relationship relationship = relationship(relationshipOrNull);\n+      result = graphDb.index().forRelationships(indexName).putIfAbsent(relationship, key, value);\n+      if (created = result == null)\n+      {\n+        UniqueRelationshipFactory factory =\n+            new UniqueRelationshipFactory(indexName, relationship.getStartNode(),\n+                relationship.getEndNode(), relationship.getType().name(), properties);\n+        UniqueEntity<Relationship> entity = factory.getOrCreateWithOutcome(key, value);\n+        // when given a relationship id, return as created if that relationship was newly added to the index\n+        created = entity.entity().getId() == relationship.getId() || entity.wasCreated();\n+        result = entity.entity();\n+      }\n+    } else if (startNode == null || type == null || endNode == null)\n+    {\n+      throw new InvalidArgumentsException(\"Either specify a relationship to index uniquely, \" +\n+          \"or the means for creating it.\");\n+    } else\n+    {\n+      UniqueRelationshipFactory factory =\n+          new UniqueRelationshipFactory(indexName, node(startNode), node(endNode), type, properties);\n+      UniqueEntity<Relationship> entity = factory.getOrCreateWithOutcome(key, value);\n+      result = entity.entity();\n+      created = entity.wasCreated();\n+    }\n+    return Pair.of(new IndexedEntityRepresentation(result, key, value,\n+            new RelationshipIndexRepresentation(indexName, Collections.emptyMap())),\n+        created);\n+  }\n+\n+  private class UniqueRelationshipFactory extends UniqueFactory.UniqueRelationshipFactory\n+  {\n+    private final Node start;\n+    private final Node end;\n+    private final RelationshipType type;\n+    private final Map<String, Object> properties;\n+\n+    UniqueRelationshipFactory(String index, Node start, Node end, String type, Map<String, Object> properties)\n+    {\n+      super(graphDb, index);\n+      this.start = start;\n+      this.end = end;\n+      this.type = RelationshipType.withName(type);\n+      this.properties = properties;\n+    }\n+\n+    @Override\n+    protected Relationship create(Map<String, Object> ignored)\n+    {\n+      return start.createRelationshipTo(end, type);\n+    }\n+\n+    @Override\n+    protected void initialize(Relationship relationship, Map<String, Object> indexed)\n+    {\n+      for (Map.Entry<String, Object> property : (properties == null ? indexed : properties).entrySet())\n+      {\n+        relationship.setProperty(property.getKey(), property.getValue());\n+      }\n+    }\n+  }\n+\n+  private class UniqueNodeFactory extends UniqueFactory.UniqueNodeFactory\n+  {\n+    private final Map<String, Object> properties;\n \n-        final IterableWrapper<Representation,Node> results = new IterableWrapper<Representation,Node>( indexHits )\n-        {\n-            @Override\n-            protected Representation underlyingObjectToObject( Node node )\n-            {\n-                return new IndexedEntityRepresentation( node, key, value, indexRepresentation );\n-            }\n-        };\n-        return new ListRepresentation( RepresentationType.NODE, results );\n-    }\n-\n-    public ListRepresentation getIndexedNodesByQuery( String indexName,\n-            String query, String sort )\n+    UniqueNodeFactory(String index, Map<String, Object> properties)\n     {\n-        return getIndexedNodesByQuery( indexName, null, query, sort );\n+      super(graphDb, index);\n+      this.properties = properties;\n     }\n \n-    public ListRepresentation getIndexedNodesByQuery( String indexName,\n-            String key, String query, String sort )\n+    @Override\n+    protected void initialize(Node node, Map<String, Object> indexed)\n     {\n-        if ( !graphDb.index().existsForNodes( indexName ) )\n-        {\n-            throw new NotFoundException();\n-        }\n-\n-        if ( query == null )\n-        {\n-            return toListNodeRepresentation();\n-        }\n-        Index<Node> index = graphDb.index().forNodes( indexName );\n-\n-        IndexResultOrder order = getOrdering( sort );\n-        QueryContext queryCtx = order.updateQueryContext( new QueryContext( query ) );\n-        IndexHits<Node> result = index.query( key, queryCtx );\n-        return toListNodeRepresentation( result, order );\n+      for (Map.Entry<String, Object> property : (properties == null ? indexed : properties).entrySet())\n+      {\n+        node.setProperty(property.getKey(), property.getValue());\n+      }\n     }\n+  }\n \n-    private ListRepresentation toListNodeRepresentation()\n-    {\n-        return new ListRepresentation( RepresentationType.NODE, Collections.emptyList() );\n-    }\n+  public Representation getAutoIndexedNodes(String key, String value)\n+  {\n+    ReadableIndex<Node> index = graphDb.index().getNodeAutoIndexer().getAutoIndex();\n \n-    private ListRepresentation toListNodeRepresentation( final IndexHits<Node> result, final IndexResultOrder order )\n-    {\n-        if ( result == null )\n-        {\n-            return new ListRepresentation( RepresentationType.NODE, Collections.emptyList() );\n-        }\n-        final IterableWrapper<Representation,Node> results = new IterableWrapper<Representation,Node>( result )\n-        {\n-            @Override\n-            protected Representation underlyingObjectToObject( Node node )\n-            {\n-                final NodeRepresentation nodeRepresentation = new NodeRepresentation( node );\n-                if ( order == null )\n-                {\n-                    return nodeRepresentation;\n-                }\n-                return order.getRepresentationFor( nodeRepresentation, result.currentScore() );\n-            }\n-        };\n-        return new ListRepresentation( RepresentationType.NODE, results );\n-    }\n+    return toListNodeRepresentation(index.get(key, value), null);\n+  }\n \n-    private ListRepresentation toListRelationshipRepresentation()\n+  public ListRepresentation getAutoIndexedNodesByQuery(String query)\n+  {\n+    if (query != null)\n     {\n-        return new ListRepresentation( RepresentationType.RELATIONSHIP, Collections.emptyList() );\n+      ReadableIndex<Node> index = graphDb.index().getNodeAutoIndexer().getAutoIndex();\n+      return toListNodeRepresentation(index.query(query), null);\n     }\n+    return toListNodeRepresentation();\n+  }\n \n-    private ListRepresentation toListRelationshipRepresentation( final IndexHits<Relationship> result,\n-            final IndexResultOrder order )\n+  public ListRepresentation getIndexedRelationships(String indexName,\n+                                                    final String key, final String value)\n+  {\n+    if (!graphDb.index().existsForRelationships(indexName))\n     {\n-        if ( result == null )\n-        {\n-            return new ListRepresentation( RepresentationType.RELATIONSHIP, Collections.emptyList() );\n-        }\n-        final IterableWrapper<Representation,Relationship> results = new IterableWrapper<Representation,\n-                Relationship>( result )\n-        {\n-            @Override\n-            protected Representation underlyingObjectToObject( Relationship rel )\n-            {\n-                final RelationshipRepresentation relationshipRepresentation = new RelationshipRepresentation( rel );\n-                if ( order != null )\n-                {\n-                    return order.getRepresentationFor( relationshipRepresentation, result.currentScore() );\n-                }\n-                return relationshipRepresentation;\n-            }\n-        };\n-        return new ListRepresentation( RepresentationType.RELATIONSHIP, results );\n-    }\n-\n-    public Pair<IndexedEntityRepresentation,Boolean> getOrCreateIndexedNode(\n-            String indexName, String key, String value, Long nodeOrNull, Map<String,Object> properties )\n-            throws BadInputException, NodeNotFoundException\n-    {\n-        assertIsLegalIndexName( indexName );\n-        Node result;\n-        boolean created;\n-        if ( nodeOrNull != null )\n-        {\n-            if ( properties != null )\n-            {\n-                throw new InvalidArgumentsException( \"Cannot specify properties for a new node, \" +\n-                                                     \"when a node to index is specified.\" );\n-            }\n-            Node node = node( nodeOrNull );\n-            result = graphDb.index().forNodes( indexName ).putIfAbsent( node, key, value );\n-            created = result == null;\n-            if ( created )\n-            {\n-                UniqueNodeFactory factory = new UniqueNodeFactory( indexName, properties );\n-                UniqueEntity<Node> entity = factory.getOrCreateWithOutcome( key, value );\n-                // when given a node id, return as created if that node was newly added to the index\n-                created = entity.entity().getId() == node.getId() || entity.wasCreated();\n-                result = entity.entity();\n-            }\n-        }\n-        else\n-        {\n-            if ( properties != null )\n-            {\n-                for ( Map.Entry<String,Object> entry : properties.entrySet() )\n-                {\n-                    entry.setValue( propertySetter.convert( entry.getValue() ) );\n-                }\n-            }\n-            UniqueNodeFactory factory = new UniqueNodeFactory( indexName, properties );\n-            UniqueEntity<Node> entity = factory.getOrCreateWithOutcome( key, value );\n-            result = entity.entity();\n-            created = entity.wasCreated();\n-        }\n-        return Pair.of( new IndexedEntityRepresentation( result, key, value,\n-                new NodeIndexRepresentation( indexName, Collections.emptyMap() ) ), created );\n-    }\n-\n-    public Pair<IndexedEntityRepresentation,Boolean> getOrCreateIndexedRelationship(\n-            String indexName, String key, String value,\n-            Long relationshipOrNull, Long startNode, String type, Long endNode,\n-            Map<String,Object> properties )\n-            throws BadInputException, RelationshipNotFoundException, NodeNotFoundException\n-    {\n-        assertIsLegalIndexName( indexName );\n-        Relationship result;\n-        boolean created;\n-        if ( relationshipOrNull != null )\n-        {\n-            if ( startNode != null || type != null || endNode != null || properties != null )\n-            {\n-                throw new InvalidArgumentsException( \"Either specify a relationship to index uniquely, \" +\n-                                                     \"or the means for creating it.\" );\n-            }\n-            Relationship relationship = relationship( relationshipOrNull );\n-            result = graphDb.index().forRelationships( indexName ).putIfAbsent( relationship, key, value );\n-            if ( created = result == null )\n-            {\n-                UniqueRelationshipFactory factory =\n-                        new UniqueRelationshipFactory( indexName, relationship.getStartNode(),\n-                                relationship.getEndNode(), relationship.getType().name(), properties );\n-                UniqueEntity<Relationship> entity = factory.getOrCreateWithOutcome( key, value );\n-                // when given a relationship id, return as created if that relationship was newly added to the index\n-                created = entity.entity().getId() == relationship.getId() || entity.wasCreated();\n-                result = entity.entity();\n-            }\n-        }\n-        else if ( startNode == null || type == null || endNode == null )\n-        {\n-            throw new InvalidArgumentsException( \"Either specify a relationship to index uniquely, \" +\n-                                                 \"or the means for creating it.\" );\n-        }\n-        else\n-        {\n-            UniqueRelationshipFactory factory =\n-                    new UniqueRelationshipFactory( indexName, node( startNode ), node( endNode ), type, properties );\n-            UniqueEntity<Relationship> entity = factory.getOrCreateWithOutcome( key, value );\n-            result = entity.entity();\n-            created = entity.wasCreated();\n-        }\n-        return Pair.of( new IndexedEntityRepresentation( result, key, value,\n-                        new RelationshipIndexRepresentation( indexName, Collections.emptyMap() ) ),\n-                created );\n+      throw new NotFoundException();\n     }\n \n-    private class UniqueRelationshipFactory extends UniqueFactory.UniqueRelationshipFactory\n-    {\n-        private final Node start;\n-        private final Node end;\n-        private final RelationshipType type;\n-        private final Map<String,Object> properties;\n+    Index<Relationship> index = graphDb.index().forRelationships(indexName);\n \n-        UniqueRelationshipFactory( String index, Node start, Node end, String type, Map<String,Object> properties )\n-        {\n-            super( graphDb, index );\n-            this.start = start;\n-            this.end = end;\n-            this.type = RelationshipType.withName( type );\n-            this.properties = properties;\n-        }\n+    final IndexRepresentation indexRepresentation = new RelationshipIndexRepresentation(indexName);\n \n-        @Override\n-        protected Relationship create( Map<String,Object> ignored )\n+    IterableWrapper<Representation, Relationship> result =\n+        new IterableWrapper<Representation, Relationship>(index.get(key, value))\n         {\n-            return start.createRelationshipTo( end, type );\n-        }\n-\n-        @Override\n-        protected void initialize( Relationship relationship, Map<String,Object> indexed )\n-        {\n-            for ( Map.Entry<String,Object> property : (properties == null ? indexed : properties).entrySet() )\n-            {\n-                relationship.setProperty( property.getKey(), property.getValue() );\n-            }\n-        }\n-    }\n-\n-    private class UniqueNodeFactory extends UniqueFactory.UniqueNodeFactory\n-    {\n-        private final Map<String,Object> properties;\n+          @Override\n+          protected Representation underlyingObjectToObject(Relationship relationship)\n+          {\n+            return new IndexedEntityRepresentation(relationship,\n+                key, value, indexRepresentation);\n+          }\n+        };\n+    return new ListRepresentation(RepresentationType.RELATIONSHIP, result);\n+  }\n \n-        UniqueNodeFactory( String index, Map<String,Object> properties )\n-        {\n-            super( graphDb, index );\n-            this.properties = properties;\n-        }\n+  public ListRepresentation getIndexedRelationshipsByQuery(String indexName,\n+                                                           String query, String sort)\n+  {\n+    return getIndexedRelationshipsByQuery(indexName, null, query, sort);\n+  }\n \n-        @Override\n-        protected void initialize( Node node, Map<String,Object> indexed )\n-        {\n-            for ( Map.Entry<String,Object> property : (properties == null ? indexed : properties).entrySet() )\n-            {\n-                node.setProperty( property.getKey(), property.getValue() );\n-            }\n-        }\n-    }\n-\n-    public Representation getAutoIndexedNodes( String key, String value )\n+  public ListRepresentation getIndexedRelationshipsByQuery(String indexName,\n+                                                           String key, String query, String sort)\n+  {\n+    if (!graphDb.index().existsForRelationships(indexName))\n     {\n-        ReadableIndex<Node> index = graphDb.index().getNodeAutoIndexer().getAutoIndex();\n-\n-        return toListNodeRepresentation( index.get( key, value ), null );\n+      throw new NotFoundException();\n     }\n \n-    public ListRepresentation getAutoIndexedNodesByQuery( String query )\n+    if (query == null)\n     {\n-        if ( query != null )\n-        {\n-            ReadableIndex<Node> index = graphDb.index().getNodeAutoIndexer().getAutoIndex();\n-            return toListNodeRepresentation( index.query( query ), null );\n-        }\n-        return toListNodeRepresentation();\n+      return toListRelationshipRepresentation();\n     }\n+    Index<Relationship> index = graphDb.index().forRelationships(indexName);\n \n-    public ListRepresentation getIndexedRelationships( String indexName,\n-            final String key, final String value )\n-    {\n-        if ( !graphDb.index().existsForRelationships( indexName ) )\n-        {\n-            throw new NotFoundException();\n-        }\n-\n-        Index<Relationship> index = graphDb.index().forRelationships( indexName );\n-\n-        final IndexRepresentation indexRepresentation = new RelationshipIndexRepresentation( indexName );\n+    IndexResultOrder order = getOrdering(sort);\n+    QueryContext queryCtx = order.updateQueryContext(new QueryContext(\n+        query));\n \n-        IterableWrapper<Representation,Relationship> result =\n-                new IterableWrapper<Representation,Relationship>( index.get( key, value ) )\n-                {\n-                    @Override\n-                    protected Representation underlyingObjectToObject( Relationship relationship )\n-                    {\n-                        return new IndexedEntityRepresentation( relationship,\n-                                key, value, indexRepresentation );\n-                    }\n-                };\n-        return new ListRepresentation( RepresentationType.RELATIONSHIP, result );\n-    }\n+    return toListRelationshipRepresentation(index.query(key, queryCtx), order);\n+  }\n \n-    public ListRepresentation getIndexedRelationshipsByQuery( String indexName,\n-            String query, String sort )\n-    {\n-        return getIndexedRelationshipsByQuery( indexName, null, query, sort );\n-    }\n+  public Representation getAutoIndexedRelationships(String key, String value)\n+  {\n+    final ReadableIndex<Relationship> index = graphDb.index().getRelationshipAutoIndexer().getAutoIndex();\n+    return toListRelationshipRepresentation(index.get(key, value), null);\n+  }\n \n-    public ListRepresentation getIndexedRelationshipsByQuery( String indexName,\n-            String key, String query, String sort )\n-    {\n-        if ( !graphDb.index().existsForRelationships( indexName ) )\n-        {\n-            throw new NotFoundException();\n-        }\n+  public ListRepresentation getAutoIndexedRelationshipsByQuery(String query)\n+  {\n+    final ReadableIndex<Relationship> index = graphDb.index().getRelationshipAutoIndexer().getAutoIndex();\n+    final IndexHits<Relationship> results = query != null ? index.query(query) : null;\n+    return toListRelationshipRepresentation(results, null);\n+  }\n \n-        if ( query == null )\n-        {\n-            return toListRelationshipRepresentation();\n-        }\n-        Index<Relationship> index = graphDb.index().forRelationships( indexName );\n+  // Traversal\n \n-        IndexResultOrder order = getOrdering( sort );\n-        QueryContext queryCtx = order.updateQueryContext( new QueryContext(\n-                query ) );\n+  public ListRepresentation traverse(long startNode,\n+                                     Map<String, Object> description, final TraverserReturnType returnType)\n+  {\n+    Node node = graphDb.getNodeById(startNode);\n \n-        return toListRelationshipRepresentation( index.query( key, queryCtx ), order );\n-    }\n+    TraversalDescription traversalDescription = traversalDescriptionBuilder.from(description);\n+    final Iterable<Path> paths = traversalDescription.traverse(node);\n+    return toListPathRepresentation(paths, returnType);\n+  }\n \n-    public Representation getAutoIndexedRelationships( String key, String value )\n+  private ListRepresentation toListPathRepresentation(final Iterable<Path> paths,\n+                                                      final TraverserReturnType returnType)\n+  {\n+    IterableWrapper<Representation, Path> result = new IterableWrapper<Representation, Path>(paths)\n     {\n-        final ReadableIndex<Relationship> index = graphDb.index().getRelationshipAutoIndexer().getAutoIndex();\n-        return toListRelationshipRepresentation( index.get( key, value ), null );\n-    }\n+      @Override\n+      protected Representation underlyingObjectToObject(Path position)\n+      {\n+        return returnType.toRepresentation(position);\n+      }\n+    };\n+    return new ListRepresentation(returnType.repType, result);\n+  }\n \n-    public ListRepresentation getAutoIndexedRelationshipsByQuery( String query )\n+  public ListRepresentation pagedTraverse(String traverserId,\n+                                          TraverserReturnType returnType)\n+  {\n+    Lease lease = leases.getLeaseById(traverserId);\n+    if (lease == null)\n     {\n-        final ReadableIndex<Relationship> index = graphDb.index().getRelationshipAutoIndexer().getAutoIndex();\n-        final IndexHits<Relationship> results = query != null ? index.query( query ) : null;\n-        return toListRelationshipRepresentation( results, null );\n+      throw new NotFoundException(String.format(\n+          \"The traverser with id [%s] was not found\", traverserId));\n     }\n \n-    // Traversal\n+    PagedTraverser traverser = lease.getLeasedItemAndRenewLease();\n+    List<Path> paths = traverser.next();\n \n-    public ListRepresentation traverse( long startNode,\n-            Map<String,Object> description, final TraverserReturnType returnType )\n+    if (paths != null)\n     {\n-        Node node = graphDb.getNodeById( startNode );\n-\n-        TraversalDescription traversalDescription = traversalDescriptionBuilder.from( description );\n-        final Iterable<Path> paths = traversalDescription.traverse( node );\n-        return toListPathRepresentation( paths, returnType );\n-    }\n-\n-    private ListRepresentation toListPathRepresentation( final Iterable<Path> paths,\n-            final TraverserReturnType returnType )\n+      return toListPathRepresentation(paths, returnType);\n+    } else\n     {\n-        IterableWrapper<Representation,Path> result = new IterableWrapper<Representation,Path>( paths )\n-        {\n-            @Override\n-            protected Representation underlyingObjectToObject( Path position )\n-            {\n-                return returnType.toRepresentation( position );\n-            }\n-        };\n-        return new ListRepresentation( returnType.repType, result );\n+      leases.remove(traverserId);\n+      // Yuck.\n+      throw new NotFoundException(\n+          String.format(\n+              \"The results for paged traverser with id [%s] have been fully enumerated\",\n+              traverserId));\n     }\n+  }\n \n-    public ListRepresentation pagedTraverse( String traverserId,\n-            TraverserReturnType returnType )\n-    {\n-        Lease lease = leases.getLeaseById( traverserId );\n-        if ( lease == null )\n-        {\n-            throw new NotFoundException( String.format(\n-                    \"The traverser with id [%s] was not found\", traverserId ) );\n-        }\n+  public String createPagedTraverser(long nodeId,\n+                                     Map<String, Object> description, int pageSize, int leaseTime)\n+  {\n+    Node node = graphDb.getNodeById(nodeId);\n \n-        PagedTraverser traverser = lease.getLeasedItemAndRenewLease();\n-        List<Path> paths = traverser.next();\n+    TraversalDescription traversalDescription = traversalDescriptionBuilder.from(description);\n \n-        if ( paths != null )\n-        {\n-            return toListPathRepresentation( paths, returnType );\n-        }\n-        else\n-        {\n-            leases.remove( traverserId );\n-            // Yuck.\n-            throw new NotFoundException(\n-                    String.format(\n-                            \"The results for paged traverser with id [%s] have been fully enumerated\",\n-                            traverserId ) );\n-        }\n-    }\n-\n-    public String createPagedTraverser( long nodeId,\n-            Map<String,Object> description, int pageSize, int leaseTime )\n-    {\n-        Node node = graphDb.getNodeById( nodeId );\n+    PagedTraverser traverser = new PagedTraverser(\n+        traversalDescription.traverse(node), pageSize);\n \n-        TraversalDescription traversalDescription = traversalDescriptionBuilder.from( description );\n-\n-        PagedTraverser traverser = new PagedTraverser(\n-                traversalDescription.traverse( node ), pageSize );\n-\n-        return leases.createLease( leaseTime, traverser ).getId();\n-    }\n+    return leases.createLease(leaseTime, traverser).getId();\n+  }\n \n-    public boolean removePagedTraverse( String traverserId )\n+  public boolean removePagedTraverse(String traverserId)\n+  {\n+    Lease lease = leases.getLeaseById(traverserId);\n+    if (lease == null)\n     {\n-        Lease lease = leases.getLeaseById( traverserId );\n-        if ( lease == null )\n-        {\n-            return false;\n-        }\n-        else\n-        {\n-            leases.remove( lease.getId() );\n-            return true;\n-        }\n-    }\n-\n-    // Graph algos\n-\n-    @SuppressWarnings( \"rawtypes\" )\n-    public PathRepresentation findSinglePath( long startId, long endId,\n-            Map<String,Object> map )\n+      return false;\n+    } else\n     {\n-        FindParams findParams = new FindParams( startId, endId, map ).invoke();\n-        PathFinder finder = findParams.getFinder();\n-        Node startNode = findParams.getStartNode();\n-        Node endNode = findParams.getEndNode();\n-\n-        Path path = finder.findSinglePath( startNode, endNode );\n-        if ( path == null )\n-        {\n-            throw new NotFoundException();\n-        }\n-        return findParams.pathRepresentationOf( path );\n+      leases.remove(lease.getId());\n+      return true;\n     }\n+  }\n \n-    @SuppressWarnings( {\"rawtypes\", \"unchecked\"} )\n-    public ListRepresentation findPaths( long startId, long endId,\n-            Map<String,Object> map )\n-    {\n-        final FindParams findParams = new FindParams( startId, endId, map ).invoke();\n-        PathFinder finder = findParams.getFinder();\n-        Node startNode = findParams.getStartNode();\n-        Node endNode = findParams.getEndNode();\n+  // Graph algos\n \n-        Iterable paths = finder.findAllPaths( startNode, endNode );\n+  @SuppressWarnings(\"rawtypes\")\n+  public PathRepresentation findSinglePath(long startId, long endId,\n+                                           Map<String, Object> map)\n+  {\n+    FindParams findParams = new FindParams(startId, endId, map).invoke();\n+    PathFinder finder = findParams.getFinder();\n+    Node startNode = findParams.getStartNode();\n+    Node endNode = findParams.getEndNode();\n \n-        IterableWrapper<PathRepresentation,Path> pathRepresentations = new IterableWrapper<PathRepresentation,Path>(\n-                paths )\n-        {\n-            @Override\n-            protected PathRepresentation underlyingObjectToObject( Path path )\n-            {\n-                return findParams.pathRepresentationOf( path );\n-            }\n-        };\n-\n-        return new ListRepresentation( RepresentationType.PATH,\n-                pathRepresentations );\n-    }\n-\n-    private class FindParams\n+    Path path = finder.findSinglePath(startNode, endNode);\n+    if (path == null)\n     {\n-        private final long startId;\n-        private final long endId;\n-        private final Map<String,Object> map;\n-        private Node startNode;\n-        private Node endNode;\n-        private PathFinder<? extends Path> finder;\n-        @SuppressWarnings( \"rawtypes\" )\n-        private PathRepresentationCreator representationCreator = PATH_REPRESENTATION_CREATOR;\n-\n-        FindParams( final long startId, final long endId, final Map<String,Object> map )\n-        {\n-            this.startId = startId;\n-            this.endId = endId;\n-            this.map = map;\n-        }\n-\n-        public Node getStartNode()\n-        {\n-            return startNode;\n-        }\n-\n-        public Node getEndNode()\n-        {\n-            return endNode;\n-        }\n-\n-        public PathFinder<? extends Path> getFinder()\n-        {\n-            return finder;\n-        }\n-\n-        @SuppressWarnings( \"unchecked\" )\n-        public PathRepresentation<? extends Path> pathRepresentationOf(\n-                Path path )\n-        {\n-            return representationCreator.from( path );\n-        }\n-\n-        public FindParams invoke()\n-        {\n-            startNode = graphDb.getNodeById( startId );\n-            endNode = graphDb.getNodeById( endId );\n-\n-            Integer maxDepthObj = (Integer) map.get( \"max_depth\" );\n-            int maxDepth = (maxDepthObj != null) ? maxDepthObj : 1;\n-\n-            PathExpander expander = RelationshipExpanderBuilder.describeRelationships( map );\n-\n-            String algorithm = (String) map.get( \"algorithm\" );\n-            algorithm = (algorithm != null) ? algorithm : \"shortestPath\";\n-\n-            finder = getAlgorithm( algorithm, expander, maxDepth );\n-            return this;\n-        }\n-\n-        private PathFinder<? extends Path> getAlgorithm( String algorithm,\n-                PathExpander expander, int maxDepth )\n-        {\n-            switch ( algorithm )\n-            {\n-            case \"shortestPath\":\n-                return GraphAlgoFactory.shortestPath( expander, maxDepth );\n-            case \"allSimplePaths\":\n-                return GraphAlgoFactory.allSimplePaths( expander, maxDepth );\n-            case \"allPaths\":\n-                return GraphAlgoFactory.allPaths( expander, maxDepth );\n-            case \"dijkstra\":\n-                String costProperty = (String) map.get( \"cost_property\" );\n-                Number defaultCost = (Number) map.get( \"default_cost\" );\n-                CostEvaluator<Double> costEvaluator =\n-                        defaultCost == null ? CommonEvaluators.doubleCostEvaluator( costProperty ) : CommonEvaluators\n-                                .doubleCostEvaluator( costProperty, defaultCost.doubleValue() );\n-                representationCreator = WEIGHTED_PATH_REPRESENTATION_CREATOR;\n-                return GraphAlgoFactory.dijkstra( expander, costEvaluator );\n-            default:\n-                throw new RuntimeException( \"Failed to find matching algorithm\" );\n-            }\n-        }\n+      throw new NotFoundException();\n     }\n+    return findParams.pathRepresentationOf(path);\n+  }\n \n-    /*\n-     * This enum binds the parameter-string-to-result-order mapping and\n-     * the kind of results returned. This is not correct in general but\n-     * at the time of writing it is the way things are done and is\n-     * quite handy. Feel free to rip out if requirements change.\n-     */\n-    private enum IndexResultOrder\n-    {\n-        INDEX_ORDER\n-                {\n-                    @Override\n-                    QueryContext updateQueryContext( QueryContext original )\n-                    {\n-                        return original.sort( Sort.INDEXORDER );\n-                    }\n-                },\n-        RELEVANCE_ORDER\n-                {\n-                    @Override\n-                    QueryContext updateQueryContext( QueryContext original )\n-                    {\n-                        return original.sort( Sort.RELEVANCE );\n-                    }\n-                },\n-        SCORE_ORDER\n-                {\n-                    @Override\n-                    QueryContext updateQueryContext( QueryContext original )\n-                    {\n-                        return original.sortByScore();\n-                    }\n-                },\n-        NONE\n-                {\n-                    @Override\n-                    Representation getRepresentationFor( Representation delegate,\n-                            float score )\n-                    {\n-                        return delegate;\n-                    }\n-\n-                    @Override\n-                    QueryContext updateQueryContext( QueryContext original )\n-                    {\n-                        return original;\n-                    }\n-                };\n-\n-        Representation getRepresentationFor( Representation delegate,\n-                float score )\n-        {\n-            if ( delegate instanceof NodeRepresentation )\n-            {\n-                return new ScoredNodeRepresentation(\n-                        (NodeRepresentation) delegate, score );\n-            }\n-            if ( delegate instanceof RelationshipRepresentation )\n-            {\n-                return new ScoredRelationshipRepresentation(\n-                        (RelationshipRepresentation) delegate, score );\n-            }\n-            return delegate;\n-        }\n+  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+  public ListRepresentation findPaths(long startId, long endId,\n+                                      Map<String, Object> map)\n+  {\n+    final FindParams findParams = new FindParams(startId, endId, map).invoke();\n+    PathFinder finder = findParams.getFinder();\n+    Node startNode = findParams.getStartNode();\n+    Node endNode = findParams.getEndNode();\n \n-        abstract QueryContext updateQueryContext( QueryContext original );\n-    }\n-\n-    private IndexResultOrder getOrdering( String order )\n-    {\n-        if ( INDEX_ORDER.equalsIgnoreCase( order ) )\n-        {\n-            return IndexResultOrder.INDEX_ORDER;\n-        }\n-        else if ( RELEVANCE_ORDER.equalsIgnoreCase( order ) )\n-        {\n-            return IndexResultOrder.RELEVANCE_ORDER;\n-        }\n-        else if ( SCORE_ORDER.equalsIgnoreCase( order ) )\n-        {\n-            return IndexResultOrder.SCORE_ORDER;\n-        }\n-        else\n-        {\n-            return IndexResultOrder.NONE;\n-        }\n-    }\n+    Iterable paths = finder.findAllPaths(startNode, endNode);\n \n-    private interface PathRepresentationCreator<T extends Path>\n+    IterableWrapper<PathRepresentation, Path> pathRepresentations = new IterableWrapper<PathRepresentation, Path>(\n+        paths)\n     {\n-        PathRepresentation<T> from( T path );\n-    }\n+      @Override\n+      protected PathRepresentation underlyingObjectToObject(Path path)\n+      {\n+        return findParams.pathRepresentationOf(path);\n+      }\n+    };\n \n-    private static final PathRepresentationCreator<Path> PATH_REPRESENTATION_CREATOR = PathRepresentation::new;\n+    return new ListRepresentation(RepresentationType.PATH,\n+        pathRepresentations);\n+  }\n \n-    private static final PathRepresentationCreator<WeightedPath> WEIGHTED_PATH_REPRESENTATION_CREATOR =\n-            WeightedPathRepresentation::new;\n+  private class FindParams\n+  {\n+    private final long startId;\n+    private final long endId;\n+    private final Map<String, Object> map;\n+    private Node startNode;\n+    private Node endNode;\n+    private PathFinder<? extends Path> finder;\n+    @SuppressWarnings(\"rawtypes\")\n+    private PathRepresentationCreator representationCreator = PATH_REPRESENTATION_CREATOR;\n \n-    private void assertIsLegalIndexName( String indexName )\n+    FindParams(final long startId, final long endId, final Map<String, Object> map)\n     {\n-        if ( indexName == null || indexName.equals( \"\" ) )\n-        {\n-            throw new IllegalArgumentException( \"Index name must not be empty.\" );\n-        }\n+      this.startId = startId;\n+      this.endId = endId;\n+      this.map = map;\n     }\n \n-    public ListRepresentation getNodesWithLabel( String labelName, Map<String,Object> properties )\n+    public Node getStartNode()\n     {\n-        Iterator<Node> nodes;\n-\n-        if ( properties.size() == 0 )\n-        {\n-            nodes = graphDb.findNodes( label( labelName ) );\n-        }\n-        else if ( properties.size() == 1 )\n-        {\n-            Map.Entry<String,Object> prop = Iterables.single( properties.entrySet() );\n-            nodes = graphDb.findNodes( label( labelName ), prop.getKey(), prop.getValue() );\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException( \"Too many properties specified. Either specify one property to \" +\n-                                                \"filter by, or none at all.\" );\n-        }\n-\n-        IterableWrapper<NodeRepresentation,Node> nodeRepresentations =\n-                new IterableWrapper<NodeRepresentation,Node>( asList( nodes ) )\n-                {\n-                    @Override\n-                    protected NodeRepresentation underlyingObjectToObject( Node node )\n-                    {\n-                        return new NodeRepresentation( node );\n-                    }\n-                };\n-\n-        return new ListRepresentation( RepresentationType.NODE, nodeRepresentations );\n+      return startNode;\n     }\n \n-    public ListRepresentation getAllLabels( boolean inUse )\n+    public Node getEndNode()\n     {\n-        ResourceIterable<Label> labels = inUse ? graphDb.getAllLabelsInUse() : graphDb.getAllLabels();\n-        Collection<ValueRepresentation> labelNames = Iterables.asSet( map(\n-                label -> ValueRepresentation.string( label.name() ), labels ) );\n-\n-        return new ListRepresentation( RepresentationType.STRING, labelNames );\n+      return endNode;\n     }\n \n-    public IndexDefinitionRepresentation createSchemaIndex( String labelName, Iterable<String> propertyKey )\n+    public PathFinder<? extends Path> getFinder()\n     {\n-        IndexCreator indexCreator = graphDb.schema().indexFor( label( labelName ) );\n-        for ( String key : propertyKey )\n-        {\n-            indexCreator = indexCreator.on( key );\n-        }\n-        return new IndexDefinitionRepresentation( indexCreator.create() );\n+      return finder;\n     }\n \n-    public ListRepresentation getSchemaIndexes()\n+    @SuppressWarnings(\"unchecked\")\n+    public PathRepresentation<? extends Path> pathRepresentationOf(\n+        Path path)\n     {\n-        Iterable<IndexDefinition> definitions = graphDb.schema().getIndexes();\n-        Iterable<IndexDefinitionRepresentation> representations = map( definition -> new IndexDefinitionRepresentation( definition,\n-                graphDb.schema().getIndexState( definition ),\n-                graphDb.schema().getIndexPopulationProgress( definition ) ), definitions );\n-        return new ListRepresentation( RepresentationType.INDEX_DEFINITION, representations );\n+      return representationCreator.from(path);\n     }\n \n-    public ListRepresentation getSchemaIndexes( String labelName )\n+    public FindParams invoke()\n     {\n-        Iterable<IndexDefinition> definitions = graphDb.schema().getIndexes( label( labelName ) );\n-        Iterable<IndexDefinitionRepresentation> representations = map( definition -> new IndexDefinitionRepresentation( definition,\n-                graphDb.schema().getIndexState( definition ),\n-                graphDb.schema().getIndexPopulationProgress( definition ) ), definitions );\n-        return new ListRepresentation( RepresentationType.INDEX_DEFINITION, representations );\n-    }\n+      startNode = graphDb.getNodeById(startId);\n+      endNode = graphDb.getNodeById(endId);\n \n-    public boolean dropSchemaIndex( String labelName, String propertyKey )\n-    {\n-        boolean found = false;\n-        for ( IndexDefinition index : graphDb.schema().getIndexes( label( labelName ) ) )\n-        {\n-            // TODO Assumption about single property key\n-            if ( propertyKey.equals( Iterables.single( index.getPropertyKeys() ) ) )\n-            {\n-                index.drop();\n-                found = true;\n-                break;\n-            }\n-        }\n-        return found;\n-    }\n+      Integer maxDepthObj = (Integer) map.get(\"max_depth\");\n+      int maxDepth = (maxDepthObj != null) ? maxDepthObj : 1;\n \n-    public ConstraintDefinitionRepresentation createPropertyUniquenessConstraint( String labelName,\n-            Iterable<String> propertyKeys )\n-    {\n-        ConstraintCreator constraintCreator = graphDb.schema().constraintFor( label( labelName ) );\n-        for ( String key : propertyKeys )\n-        {\n-            constraintCreator = constraintCreator.assertPropertyIsUnique( key );\n-        }\n-        ConstraintDefinition constraintDefinition = constraintCreator.create();\n-        return new ConstraintDefinitionRepresentation( constraintDefinition );\n-    }\n+      PathExpander expander = RelationshipExpanderBuilder.describeRelationships(map);\n \n-    public boolean dropPropertyUniquenessConstraint( String labelName, Iterable<String> propertyKeys )\n-    {\n-        final Set<String> propertyKeysSet = Iterables.asSet( propertyKeys );\n-        ConstraintDefinition constraint =\n-                Iterables.singleOrNull( filteredNodeConstraints( labelName, propertyUniquenessFilter( propertyKeysSet ) ) );\n-        if ( constraint != null )\n-        {\n-            constraint.drop();\n-        }\n-        return constraint != null;\n-    }\n+      String algorithm = (String) map.get(\"algorithm\");\n+      algorithm = (algorithm != null) ? algorithm : \"shortestPath\";\n \n-    public boolean dropNodePropertyExistenceConstraint( String labelName, Iterable<String> propertyKeys )\n-    {\n-        final Set<String> propertyKeysSet = Iterables.asSet( propertyKeys );\n-        ConstraintDefinition constraint =\n-                Iterables.singleOrNull( filteredNodeConstraints( labelName, nodePropertyExistenceFilter( propertyKeysSet ) ) );\n-        if ( constraint != null )\n-        {\n-            constraint.drop();\n-        }\n-        return constraint != null;\n+      finder = getAlgorithm(algorithm, expander, maxDepth);\n+      return this;\n     }\n \n-    public boolean dropRelationshipPropertyExistenceConstraint( String typeName, Iterable<String> propertyKeys )\n+    private PathFinder<? extends Path> getAlgorithm(String algorithm,\n+                                                    PathExpander expander, int maxDepth)\n     {\n-        final Set<String> propertyKeysSet = Iterables.asSet( propertyKeys );\n-        ConstraintDefinition constraint = Iterables.singleOrNull( filteredRelationshipConstraints( typeName,\n-                relationshipPropertyExistenceFilter( propertyKeysSet ) ) );\n-        if ( constraint != null )\n-        {\n-            constraint.drop();\n-        }\n-        return constraint != null;\n-    }\n+      switch (algorithm)\n+      {\n+        case \"shortestPath\":\n+          return GraphAlgoFactory.shortestPath(expander, maxDepth);\n+        case \"allSimplePaths\":\n+          return GraphAlgoFactory.allSimplePaths(expander, maxDepth);\n+        case \"allPaths\":\n+          return GraphAlgoFactory.allPaths(expander, maxDepth);\n+        case \"dijkstra\":\n+          String costProperty = (String) map.get(\"cost_property\");\n+          Number defaultCost = (Number) map.get(\"default_cost\");\n+          CostEvaluator<Double> costEvaluator =\n+              defaultCost == null ? CommonEvaluators.doubleCostEvaluator(costProperty) : CommonEvaluators\n+                  .doubleCostEvaluator(costProperty, defaultCost.doubleValue());\n+          representationCreator = WEIGHTED_PATH_REPRESENTATION_CREATOR;\n+          return GraphAlgoFactory.dijkstra(expander, costEvaluator);\n+        default:\n+          throw new RuntimeException(\"Failed to find matching algorithm\");\n+      }\n+    }\n+  }\n+\n+  /*\n+   * This enum binds the parameter-string-to-result-order mapping and\n+   * the kind of results returned. This is not correct in general but\n+   * at the time of writing it is the way things are done and is\n+   * quite handy. Feel free to rip out if requirements change.\n+   */\n+  private enum IndexResultOrder\n+  {\n+    INDEX_ORDER\n+        {\n+          @Override\n+          QueryContext updateQueryContext(QueryContext original)\n+          {\n+            return original.sort(Sort.INDEXORDER);\n+          }\n+        },\n+    RELEVANCE_ORDER\n+        {\n+          @Override\n+          QueryContext updateQueryContext(QueryContext original)\n+          {\n+            return original.sort(Sort.RELEVANCE);\n+          }\n+        },\n+    SCORE_ORDER\n+        {\n+          @Override\n+          QueryContext updateQueryContext(QueryContext original)\n+          {\n+            return original.sortByScore();\n+          }\n+        },\n+    NONE\n+        {\n+          @Override\n+          Representation getRepresentationFor(Representation delegate,\n+                                              float score)\n+          {\n+            return delegate;\n+          }\n \n-    public ListRepresentation getNodePropertyExistenceConstraint( String labelName, Iterable<String> propertyKeys )\n-    {\n-        Set<String> propertyKeysSet = Iterables.asSet( propertyKeys );\n-        Iterable<ConstraintDefinition> constraints =\n-                filteredNodeConstraints( labelName, nodePropertyExistenceFilter( propertyKeysSet ) );\n-        if ( constraints.iterator().hasNext() )\n-        {\n-            Iterable<Representation> representationIterable = map( CONSTRAINT_DEF_TO_REPRESENTATION, constraints );\n-            return new ListRepresentation( CONSTRAINT_DEFINITION, representationIterable );\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException(\n-                    String.format( \"Constraint with label %s for properties %s does not exist\", labelName,\n-                            propertyKeys ) );\n-        }\n-    }\n+          @Override\n+          QueryContext updateQueryContext(QueryContext original)\n+          {\n+            return original;\n+          }\n+        };\n \n-    public ListRepresentation getRelationshipPropertyExistenceConstraint( String typeName,\n-            Iterable<String> propertyKeys )\n+    Representation getRepresentationFor(Representation delegate,\n+                                        float score)\n     {\n-        Set<String> propertyKeysSet = Iterables.asSet( propertyKeys );\n-        Iterable<ConstraintDefinition> constraints =\n-                filteredRelationshipConstraints( typeName, relationshipPropertyExistenceFilter( propertyKeysSet ) );\n-        if ( constraints.iterator().hasNext() )\n-        {\n-            Iterable<Representation> representationIterable = map( CONSTRAINT_DEF_TO_REPRESENTATION, constraints );\n-            return new ListRepresentation( CONSTRAINT_DEFINITION, representationIterable );\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException(\n-                    String.format( \"Constraint with relationship type %s for properties %s does not exist\",\n-                            typeName, propertyKeys ) );\n-        }\n+      if (delegate instanceof NodeRepresentation)\n+      {\n+        return new ScoredNodeRepresentation(\n+            (NodeRepresentation) delegate, score);\n+      }\n+      if (delegate instanceof RelationshipRepresentation)\n+      {\n+        return new ScoredRelationshipRepresentation(\n+            (RelationshipRepresentation) delegate, score);\n+      }\n+      return delegate;\n     }\n \n-    public ListRepresentation getPropertyUniquenessConstraint( String labelName, Iterable<String> propertyKeys )\n-    {\n-        Set<String> propertyKeysSet = Iterables.asSet( propertyKeys );\n-        Iterable<ConstraintDefinition> constraints =\n-                filteredNodeConstraints( labelName, propertyUniquenessFilter( propertyKeysSet ) );\n-        if ( constraints.iterator().hasNext() )\n-        {\n-            Iterable<Representation> representationIterable = map( CONSTRAINT_DEF_TO_REPRESENTATION, constraints );\n-            return new ListRepresentation( CONSTRAINT_DEFINITION, representationIterable );\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException(\n-                    String.format( \"Constraint with label %s for properties %s does not exist\", labelName,\n-                            propertyKeys ) );\n-        }\n-    }\n+    abstract QueryContext updateQueryContext(QueryContext original);\n+  }\n \n-    private Iterable<ConstraintDefinition> filteredNodeConstraints( String labelName,\n-            Predicate<ConstraintDefinition> filter )\n+  private IndexResultOrder getOrdering(String order)\n+  {\n+    if (INDEX_ORDER.equalsIgnoreCase(order))\n     {\n-        Iterable<ConstraintDefinition> constraints = graphDb.schema().getConstraints( label( labelName ) );\n-        return filter( filter, constraints );\n-    }\n-\n-    private Iterable<ConstraintDefinition> filteredRelationshipConstraints( String typeName,\n-            Predicate<ConstraintDefinition> filter )\n+      return IndexResultOrder.INDEX_ORDER;\n+    } else if (RELEVANCE_ORDER.equalsIgnoreCase(order))\n     {\n-        RelationshipType type = RelationshipType.withName( typeName );\n-        Iterable<ConstraintDefinition> constraints = graphDb.schema().getConstraints( type );\n-        return filter( filter, constraints );\n-    }\n-\n-    private Iterable<ConstraintDefinition> filteredNodeConstraints( String labelName, final ConstraintType type )\n+      return IndexResultOrder.RELEVANCE_ORDER;\n+    } else if (SCORE_ORDER.equalsIgnoreCase(order))\n     {\n-        return filter( item -> item.isConstraintType( type ), graphDb.schema().getConstraints( label( labelName ) ) );\n-    }\n-\n-    private Iterable<ConstraintDefinition> filteredRelationshipConstraints( String typeName, final ConstraintType type )\n+      return IndexResultOrder.SCORE_ORDER;\n+    } else\n     {\n-        return filter( item -> item.isConstraintType( type ), graphDb.schema().getConstraints( RelationshipType.withName( typeName ) ) );\n+      return IndexResultOrder.NONE;\n     }\n+  }\n \n-    private Predicate<ConstraintDefinition> propertyUniquenessFilter( final Set<String> propertyKeysSet )\n-    {\n-        return item -> item.isConstraintType( ConstraintType.UNIQUENESS ) &&\n-               propertyKeysSet.equals( Iterables.asSet( item.getPropertyKeys() ) );\n-    }\n+  private interface PathRepresentationCreator<T extends Path>\n+  {\n+    PathRepresentation<T> from(T path);\n+  }\n \n-    private Predicate<ConstraintDefinition> nodePropertyExistenceFilter( final Set<String> propertyKeysSet )\n-    {\n-        return item -> item.isConstraintType( ConstraintType.NODE_PROPERTY_EXISTENCE ) &&\n-               propertyKeysSet.equals( Iterables.asSet( item.getPropertyKeys() ) );\n-    }\n+  private static final PathRepresentationCreator<Path> PATH_REPRESENTATION_CREATOR = PathRepresentation::new;\n \n-    private Predicate<ConstraintDefinition> relationshipPropertyExistenceFilter( final Set<String> propertyKeysSet )\n-    {\n-        return item -> item.isConstraintType( ConstraintType.RELATIONSHIP_PROPERTY_EXISTENCE ) &&\n-               propertyKeysSet.equals( Iterables.asSet( item.getPropertyKeys() ) );\n-    }\n+  private static final PathRepresentationCreator<WeightedPath> WEIGHTED_PATH_REPRESENTATION_CREATOR =\n+      WeightedPathRepresentation::new;\n \n-    public ListRepresentation getConstraints()\n+  private void assertIsLegalIndexName(String indexName)\n+  {\n+    if (indexName == null || indexName.equals(\"\"))\n     {\n-        return new ListRepresentation( CONSTRAINT_DEFINITION,\n-                map( CONSTRAINT_DEF_TO_REPRESENTATION, graphDb.schema().getConstraints() ) );\n+      throw new IllegalArgumentException(\"Index name must not be empty.\");\n     }\n+  }\n \n-    public ListRepresentation getLabelConstraints( String labelName )\n-    {\n-        return new ListRepresentation( CONSTRAINT_DEFINITION, map( CONSTRAINT_DEF_TO_REPRESENTATION,\n-                filteredNodeConstraints( labelName, Predicates.alwaysTrue() ) ) );\n-    }\n+  public ListRepresentation getNodesWithLabel(String labelName, Map<String, Object> properties)\n+  {\n+    Iterator<Node> nodes;\n \n-    public Representation getLabelUniquenessConstraints( String labelName )\n+    if (properties.size() == 0)\n     {\n-        return new ListRepresentation( CONSTRAINT_DEFINITION, map( CONSTRAINT_DEF_TO_REPRESENTATION,\n-                filteredNodeConstraints( labelName, ConstraintType.UNIQUENESS ) ) );\n-    }\n-\n-    public Representation getLabelExistenceConstraints( String labelName )\n+      nodes = graphDb.findNodes(label(labelName));\n+    } else if (properties.size() == 1)\n     {\n-        return new ListRepresentation( CONSTRAINT_DEFINITION, map( CONSTRAINT_DEF_TO_REPRESENTATION,\n-                filteredNodeConstraints( labelName, ConstraintType.NODE_PROPERTY_EXISTENCE ) ) );\n-    }\n-\n-    public Representation getRelationshipTypeExistenceConstraints( String typeName )\n+      Map.Entry<String, Object> prop = Iterables.single(properties.entrySet());\n+      nodes = graphDb.findNodes(label(labelName), prop.getKey(), prop.getValue());\n+    } else\n     {\n-        return new ListRepresentation( CONSTRAINT_DEFINITION, map( CONSTRAINT_DEF_TO_REPRESENTATION,\n-                filteredRelationshipConstraints( typeName, ConstraintType.RELATIONSHIP_PROPERTY_EXISTENCE ) ) );\n+      throw new IllegalArgumentException(\"Too many properties specified. Either specify one property to \" +\n+          \"filter by, or none at all.\");\n     }\n+\n+    IterableWrapper<NodeRepresentation, Node> nodeRepresentations =\n+        new IterableWrapper<NodeRepresentation, Node>(asList(nodes))\n+        {\n+          @Override\n+          protected NodeRepresentation underlyingObjectToObject(Node node)\n+          {\n+            return new NodeRepresentation(node);\n+          }\n+        };\n+\n+    return new ListRepresentation(RepresentationType.NODE, nodeRepresentations);\n+  }\n+\n+  public ListRepresentation getAllLabels(boolean inUse)\n+  {\n+    ResourceIterable<Label> labels = inUse ? graphDb.getAllLabelsInUse() : graphDb.getAllLabels();\n+    Collection<ValueRepresentation> labelNames = Iterables.asSet(map(\n+        label -> ValueRepresentation.string(label.name()), labels));\n+\n+    return new ListRepresentation(RepresentationType.STRING, labelNames);\n+  }\n+\n+  public IndexDefinitionRepresentation createSchemaIndex(String labelName, Iterable<String> propertyKey)\n+  {\n+    IndexCreator indexCreator = graphDb.schema().indexFor(label(labelName));\n+    for (String key : propertyKey)\n+    {\n+      indexCreator = indexCreator.on(key);\n+    }\n+    return new IndexDefinitionRepresentation(indexCreator.create());\n+  }\n+\n+  public ListRepresentation getSchemaIndexes()\n+  {\n+    Iterable<IndexDefinition> definitions = graphDb.schema().getIndexes();\n+    Iterable<IndexDefinitionRepresentation> representations = map(definition -> new IndexDefinitionRepresentation(definition,\n+        graphDb.schema().getIndexState(definition),\n+        graphDb.schema().getIndexPopulationProgress(definition)), definitions);\n+    return new ListRepresentation(RepresentationType.INDEX_DEFINITION, representations);\n+  }\n+\n+  public ListRepresentation getSchemaIndexes(String labelName)\n+  {\n+    Iterable<IndexDefinition> definitions = graphDb.schema().getIndexes(label(labelName));\n+    Iterable<IndexDefinitionRepresentation> representations = map(definition -> new IndexDefinitionRepresentation(definition,\n+        graphDb.schema().getIndexState(definition),\n+        graphDb.schema().getIndexPopulationProgress(definition)), definitions);\n+    return new ListRepresentation(RepresentationType.INDEX_DEFINITION, representations);\n+  }\n+\n+  public boolean dropSchemaIndex(String labelName, String propertyKey)\n+  {\n+    boolean found = false;\n+    for (IndexDefinition index : graphDb.schema().getIndexes(label(labelName)))\n+    {\n+      // TODO Assumption about single property key\n+      if (propertyKey.equals(Iterables.single(index.getPropertyKeys())))\n+      {\n+        index.drop();\n+        found = true;\n+        break;\n+      }\n+    }\n+    return found;\n+  }\n+\n+  public ConstraintDefinitionRepresentation createPropertyUniquenessConstraint(String labelName,\n+                                                                               Iterable<String> propertyKeys)\n+  {\n+    ConstraintCreator constraintCreator = graphDb.schema().constraintFor(label(labelName));\n+    for (String key : propertyKeys)\n+    {\n+      constraintCreator = constraintCreator.assertPropertyIsUnique(key);\n+    }\n+    ConstraintDefinition constraintDefinition = constraintCreator.create();\n+    return new ConstraintDefinitionRepresentation(constraintDefinition);\n+  }\n+\n+  public boolean dropPropertyUniquenessConstraint(String labelName, Iterable<String> propertyKeys)\n+  {\n+    final Set<String> propertyKeysSet = Iterables.asSet(propertyKeys);\n+    ConstraintDefinition constraint =\n+        Iterables.singleOrNull(filteredNodeConstraints(labelName, propertyUniquenessFilter(propertyKeysSet)));\n+    if (constraint != null)\n+    {\n+      constraint.drop();\n+    }\n+    return constraint != null;\n+  }\n+\n+  public boolean dropNodePropertyExistenceConstraint(String labelName, Iterable<String> propertyKeys)\n+  {\n+    final Set<String> propertyKeysSet = Iterables.asSet(propertyKeys);\n+    ConstraintDefinition constraint =\n+        Iterables.singleOrNull(filteredNodeConstraints(labelName, nodePropertyExistenceFilter(propertyKeysSet)));\n+    if (constraint != null)\n+    {\n+      constraint.drop();\n+    }\n+    return constraint != null;\n+  }\n+\n+  public boolean dropRelationshipPropertyExistenceConstraint(String typeName, Iterable<String> propertyKeys)\n+  {\n+    final Set<String> propertyKeysSet = Iterables.asSet(propertyKeys);\n+    ConstraintDefinition constraint = Iterables.singleOrNull(filteredRelationshipConstraints(typeName,\n+        relationshipPropertyExistenceFilter(propertyKeysSet)));\n+    if (constraint != null)\n+    {\n+      constraint.drop();\n+    }\n+    return constraint != null;\n+  }\n+\n+  public ListRepresentation getNodePropertyExistenceConstraint(String labelName, Iterable<String> propertyKeys)\n+  {\n+    Set<String> propertyKeysSet = Iterables.asSet(propertyKeys);\n+    Iterable<ConstraintDefinition> constraints =\n+        filteredNodeConstraints(labelName, nodePropertyExistenceFilter(propertyKeysSet));\n+    if (constraints.iterator().hasNext())\n+    {\n+      Iterable<Representation> representationIterable = map(CONSTRAINT_DEF_TO_REPRESENTATION, constraints);\n+      return new ListRepresentation(CONSTRAINT_DEFINITION, representationIterable);\n+    } else\n+    {\n+      throw new IllegalArgumentException(\n+          String.format(\"Constraint with label %s for properties %s does not exist\", labelName,\n+              propertyKeys));\n+    }\n+  }\n+\n+  public ListRepresentation getRelationshipPropertyExistenceConstraint(String typeName,\n+                                                                       Iterable<String> propertyKeys)\n+  {\n+    Set<String> propertyKeysSet = Iterables.asSet(propertyKeys);\n+    Iterable<ConstraintDefinition> constraints =\n+        filteredRelationshipConstraints(typeName, relationshipPropertyExistenceFilter(propertyKeysSet));\n+    if (constraints.iterator().hasNext())\n+    {\n+      Iterable<Representation> representationIterable = map(CONSTRAINT_DEF_TO_REPRESENTATION, constraints);\n+      return new ListRepresentation(CONSTRAINT_DEFINITION, representationIterable);\n+    } else\n+    {\n+      throw new IllegalArgumentException(\n+          String.format(\"Constraint with relationship type %s for properties %s does not exist\",\n+              typeName, propertyKeys));\n+    }\n+  }\n+\n+  public ListRepresentation getPropertyUniquenessConstraint(String labelName, Iterable<String> propertyKeys)\n+  {\n+    Set<String> propertyKeysSet = Iterables.asSet(propertyKeys);\n+    Iterable<ConstraintDefinition> constraints =\n+        filteredNodeConstraints(labelName, propertyUniquenessFilter(propertyKeysSet));\n+    if (constraints.iterator().hasNext())\n+    {\n+      Iterable<Representation> representationIterable = map(CONSTRAINT_DEF_TO_REPRESENTATION, constraints);\n+      return new ListRepresentation(CONSTRAINT_DEFINITION, representationIterable);\n+    } else\n+    {\n+      throw new IllegalArgumentException(\n+          String.format(\"Constraint with label %s for properties %s does not exist\", labelName,\n+              propertyKeys));\n+    }\n+  }\n+\n+  private Iterable<ConstraintDefinition> filteredNodeConstraints(String labelName,\n+                                                                 Predicate<ConstraintDefinition> filter)\n+  {\n+    Iterable<ConstraintDefinition> constraints = graphDb.schema().getConstraints(label(labelName));\n+    return filter(filter, constraints);\n+  }\n+\n+  private Iterable<ConstraintDefinition> filteredRelationshipConstraints(String typeName,\n+                                                                         Predicate<ConstraintDefinition> filter)\n+  {\n+    RelationshipType type = RelationshipType.withName(typeName);\n+    Iterable<ConstraintDefinition> constraints = graphDb.schema().getConstraints(type);\n+    return filter(filter, constraints);\n+  }\n+\n+  private Iterable<ConstraintDefinition> filteredNodeConstraints(String labelName, final ConstraintType type)\n+  {\n+    return filter(item -> item.isConstraintType(type), graphDb.schema().getConstraints(label(labelName)));\n+  }\n+\n+  private Iterable<ConstraintDefinition> filteredRelationshipConstraints(String typeName, final ConstraintType type)\n+  {\n+    return filter(item -> item.isConstraintType(type), graphDb.schema().getConstraints(RelationshipType.withName(typeName)));\n+  }\n+\n+  private Predicate<ConstraintDefinition> propertyUniquenessFilter(final Set<String> propertyKeysSet)\n+  {\n+    return item -> item.isConstraintType(ConstraintType.UNIQUENESS) &&\n+        propertyKeysSet.equals(Iterables.asSet(item.getPropertyKeys()));\n+  }\n+\n+  private Predicate<ConstraintDefinition> nodePropertyExistenceFilter(final Set<String> propertyKeysSet)\n+  {\n+    return item -> item.isConstraintType(ConstraintType.NODE_PROPERTY_EXISTENCE) &&\n+        propertyKeysSet.equals(Iterables.asSet(item.getPropertyKeys()));\n+  }\n+\n+  private Predicate<ConstraintDefinition> relationshipPropertyExistenceFilter(final Set<String> propertyKeysSet)\n+  {\n+    return item -> item.isConstraintType(ConstraintType.RELATIONSHIP_PROPERTY_EXISTENCE) &&\n+        propertyKeysSet.equals(Iterables.asSet(item.getPropertyKeys()));\n+  }\n+\n+  public ListRepresentation getConstraints()\n+  {\n+    return new ListRepresentation(CONSTRAINT_DEFINITION,\n+        map(CONSTRAINT_DEF_TO_REPRESENTATION, graphDb.schema().getConstraints()));\n+  }\n+\n+  public ListRepresentation getLabelConstraints(String labelName)\n+  {\n+    return new ListRepresentation(CONSTRAINT_DEFINITION, map(CONSTRAINT_DEF_TO_REPRESENTATION,\n+        filteredNodeConstraints(labelName, Predicates.alwaysTrue())));\n+  }\n+\n+  public Representation getLabelUniquenessConstraints(String labelName)\n+  {\n+    return new ListRepresentation(CONSTRAINT_DEFINITION, map(CONSTRAINT_DEF_TO_REPRESENTATION,\n+        filteredNodeConstraints(labelName, ConstraintType.UNIQUENESS)));\n+  }\n+\n+  public Representation getLabelExistenceConstraints(String labelName)\n+  {\n+    return new ListRepresentation(CONSTRAINT_DEFINITION, map(CONSTRAINT_DEF_TO_REPRESENTATION,\n+        filteredNodeConstraints(labelName, ConstraintType.NODE_PROPERTY_EXISTENCE)));\n+  }\n+\n+  public Representation getRelationshipTypeExistenceConstraints(String typeName)\n+  {\n+    return new ListRepresentation(CONSTRAINT_DEFINITION, map(CONSTRAINT_DEF_TO_REPRESENTATION,\n+        filteredRelationshipConstraints(typeName, ConstraintType.RELATIONSHIP_PROPERTY_EXISTENCE)));\n+  }\n }\n",
            "diff_size": 2192
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
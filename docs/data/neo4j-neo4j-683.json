{
    "project_name": "neo4j-neo4j",
    "error_id": "683",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "72",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "186",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/683/RelationshipImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/683/RelationshipImporter.java\nindex 0a871de3adf..4a424d6daa3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/683/RelationshipImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/683/RelationshipImporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport;\n \n import java.util.function.LongFunction;\n@@ -68,11 +69,11 @@ public class RelationshipImporter extends EntityImporter\n     private Group endIdGroup;\n     private String type;\n \n-    protected RelationshipImporter( BatchingNeoStores stores, IdMapper idMapper, DataStatistics typeDistribution,\n-            DataImporter.Monitor monitor, Collector badCollector, boolean validateRelationshipData, boolean doubleRecordUnits,\n-            PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker )\n+    protected RelationshipImporter(BatchingNeoStores stores, IdMapper idMapper, DataStatistics typeDistribution,\n+                                   DataImporter.Monitor monitor, Collector badCollector, boolean validateRelationshipData, boolean doubleRecordUnits,\n+                                   PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker)\n     {\n-        super( stores, monitor, pageCacheTracer, memoryTracker );\n+        super(stores, monitor, pageCacheTracer, memoryTracker);\n         this.doubleRecordUnits = doubleRecordUnits;\n         this.relationshipTypeTokenRepository = stores.getRelationshipTypeRepository();\n         this.idMapper = idMapper;\n@@ -80,11 +81,11 @@ public class RelationshipImporter extends EntityImporter\n         this.validateRelationshipData = validateRelationshipData;\n         this.relationshipStore = stores.getRelationshipStore();\n         this.relationshipRecord = relationshipStore.newRecord();\n-        this.relationshipIds = new BatchingIdGetter( relationshipStore );\n+        this.relationshipIds = new BatchingIdGetter(relationshipStore);\n         this.typeCounts = typeDistribution.newClient();\n-        this.prepareIdSequence = PrepareIdSequence.of( doubleRecordUnits ).apply( stores.getRelationshipStore() );\n-        this.relationshipUpdateCursor = relationshipStore.openPageCursorForWriting( 0, cursorTracer );\n-        relationshipRecord.setInUse( true );\n+        this.prepareIdSequence = PrepareIdSequence.of(doubleRecordUnits).apply(stores.getRelationshipStore());\n+        this.relationshipUpdateCursor = relationshipStore.openPageCursorForWriting(0, cursorTracer);\n+        relationshipRecord.setInUse(true);\n     }\n \n     @Override\n@@ -94,47 +95,47 @@ public class RelationshipImporter extends EntityImporter\n     }\n \n     @Override\n-    public boolean startId( long id )\n+    public boolean startId(long id)\n     {\n-        relationshipRecord.setFirstNode( id );\n+        relationshipRecord.setFirstNode(id);\n         return true;\n     }\n \n     @Override\n-    public boolean startId( Object id, Group group )\n+    public boolean startId(Object id, Group group)\n     {\n         this.startId = id;\n         this.startIdGroup = group;\n \n-        long nodeId = nodeId( id, group );\n-        relationshipRecord.setFirstNode( nodeId );\n+        long nodeId = nodeId(id, group);\n+        relationshipRecord.setFirstNode(nodeId);\n         return true;\n     }\n \n     @Override\n-    public boolean endId( long id )\n+    public boolean endId(long id)\n     {\n-        relationshipRecord.setSecondNode( id );\n+        relationshipRecord.setSecondNode(id);\n         return true;\n     }\n \n     @Override\n-    public boolean endId( Object id, Group group )\n+    public boolean endId(Object id, Group group)\n     {\n         this.endId = id;\n         this.endIdGroup = group;\n \n-        long nodeId = nodeId( id, group );\n-        relationshipRecord.setSecondNode( nodeId );\n+        long nodeId = nodeId(id, group);\n+        relationshipRecord.setSecondNode(nodeId);\n         return true;\n     }\n \n-    private long nodeId( Object id, Group group )\n+    private long nodeId(Object id, Group group)\n     {\n-        long nodeId = idMapper.get( id, group );\n-        if ( nodeId == IdMapper.ID_NOT_FOUND )\n+        long nodeId = idMapper.get(id, group);\n+        if (nodeId == IdMapper.ID_NOT_FOUND)\n         {\n-            relationshipRecord.setInUse( false );\n+            relationshipRecord.setInUse(false);\n             return IdMapper.ID_NOT_FOUND;\n         }\n \n@@ -142,64 +143,63 @@ public class RelationshipImporter extends EntityImporter\n     }\n \n     @Override\n-    public boolean type( int typeId )\n+    public boolean type(int typeId)\n     {\n-        relationshipRecord.setType( typeId );\n+        relationshipRecord.setType(typeId);\n         return true;\n     }\n \n     @Override\n-    public boolean type( String type )\n+    public boolean type(String type)\n     {\n         this.type = type;\n-        int typeId = relationshipTypeTokenRepository.getOrCreateId( type );\n-        return type( typeId );\n+        int typeId = relationshipTypeTokenRepository.getOrCreateId(type);\n+        return type(typeId);\n     }\n \n     @Override\n     public void endOfEntity()\n     {\n-        if ( relationshipRecord.inUse() &&\n-                relationshipRecord.getFirstNode() != IdMapper.ID_NOT_FOUND &&\n-                relationshipRecord.getSecondNode() != IdMapper.ID_NOT_FOUND &&\n-                relationshipRecord.getType() != -1 )\n+        if (relationshipRecord.inUse() &&\n+          relationshipRecord.getFirstNode() != IdMapper.ID_NOT_FOUND &&\n+          relationshipRecord.getSecondNode() != IdMapper.ID_NOT_FOUND &&\n+          relationshipRecord.getType() != -1)\n         {\n-            relationshipRecord.setId( relationshipIds.nextId( cursorTracer ) );\n-            if ( doubleRecordUnits )\n+            relationshipRecord.setId(relationshipIds.nextId(cursorTracer));\n+            if (doubleRecordUnits)\n             {\n                 // simply reserve one id for this relationship to grow during linking stage\n-                relationshipIds.nextId( cursorTracer );\n+                relationshipIds.nextId(cursorTracer);\n             }\n-            relationshipRecord.setNextProp( createAndWritePropertyChain( cursorTracer ) );\n-            relationshipRecord.setFirstInFirstChain( false );\n-            relationshipRecord.setFirstInSecondChain( false );\n-            relationshipRecord.setFirstPrevRel( Record.NO_NEXT_RELATIONSHIP.intValue() );\n-            relationshipRecord.setSecondPrevRel( Record.NO_NEXT_RELATIONSHIP.intValue() );\n-\n-            relationshipStore.prepareForCommit( relationshipRecord, prepareIdSequence.apply( relationshipRecord.getId() ), cursorTracer );\n-            relationshipStore.updateRecord( relationshipRecord, IGNORE, relationshipUpdateCursor, cursorTracer );\n+            relationshipRecord.setNextProp(createAndWritePropertyChain(cursorTracer));\n+            relationshipRecord.setFirstInFirstChain(false);\n+            relationshipRecord.setFirstInSecondChain(false);\n+            relationshipRecord.setFirstPrevRel(Record.NO_NEXT_RELATIONSHIP.intValue());\n+            relationshipRecord.setSecondPrevRel(Record.NO_NEXT_RELATIONSHIP.intValue());\n+\n+            relationshipStore.prepareForCommit(relationshipRecord, prepareIdSequence.apply(relationshipRecord.getId()), cursorTracer);\n+            relationshipStore.updateRecord(relationshipRecord, IGNORE, relationshipUpdateCursor, cursorTracer);\n             relationshipCount++;\n-            typeCounts.increment( relationshipRecord.getType() );\n-        }\n-        else\n+            typeCounts.increment(relationshipRecord.getType());\n+        } else\n         {\n-            if ( validateRelationshipData )\n+            if (validateRelationshipData)\n             {\n-                validateNode( startId, Type.START_ID );\n-                validateNode( endId, Type.END_ID );\n-                if ( relationshipRecord.getType() == -1 )\n+                validateNode(startId, Type.START_ID);\n+                validateNode(endId, Type.END_ID);\n+                if (relationshipRecord.getType() == -1)\n                 {\n-                    throw new MissingRelationshipDataException( Type.TYPE,\n-                            relationshipDataString() + \" is missing \" + Type.TYPE + \" field\" );\n+                    throw new MissingRelationshipDataException(Type.TYPE,\n+                      relationshipDataString() + \" is missing \" + Type.TYPE + \" field\");\n                 }\n             }\n-            badCollector.collectBadRelationship( startId, group( startIdGroup ).name(), type, endId, group( endIdGroup ).name(),\n-                    relationshipRecord.getFirstNode() == IdMapper.ID_NOT_FOUND ? startId : endId );\n+            badCollector.collectBadRelationship(startId, group(startIdGroup).name(), type, endId, group(endIdGroup).name(),\n+              relationshipRecord.getFirstNode() == IdMapper.ID_NOT_FOUND ? startId : endId);\n             entityPropertyCount = 0;\n         }\n \n         relationshipRecord.clear();\n-        relationshipRecord.setInUse( true );\n+        relationshipRecord.setInUse(true);\n         startId = null;\n         startIdGroup = null;\n         endId = null;\n@@ -208,24 +208,24 @@ public class RelationshipImporter extends EntityImporter\n         super.endOfEntity();\n     }\n \n-    private Group group( Group group )\n+    private Group group(Group group)\n     {\n         return group != null ? group : Group.GLOBAL;\n     }\n \n-    private void validateNode( Object id, Type fieldType )\n+    private void validateNode(Object id, Type fieldType)\n     {\n-        if ( id == null )\n+        if (id == null)\n         {\n-            throw new MissingRelationshipDataException( fieldType, relationshipDataString() +\n-                    \" is missing \" + fieldType + \" field\" );\n+            throw new MissingRelationshipDataException(fieldType, relationshipDataString() +\n+              \" is missing \" + fieldType + \" field\");\n         }\n     }\n \n     private String relationshipDataString()\n     {\n-        return format( \"start:%s (%s) type:%s end:%s (%s)\",\n-                startId, group( startIdGroup ).name(), type, endId, group( endIdGroup ).name() );\n+        return format(\"start:%s (%s) type:%s end:%s (%s)\",\n+          startId, group(startIdGroup).name(), type, endId, group(endIdGroup).name());\n     }\n \n     @Override\n@@ -233,7 +233,7 @@ public class RelationshipImporter extends EntityImporter\n     {\n         super.close();\n         typeCounts.close();\n-        monitor.relationshipsImported( relationshipCount );\n+        monitor.relationshipsImported(relationshipCount);\n         relationshipUpdateCursor.close();\n         cursorTracer.close();\n     }\n@@ -242,6 +242,6 @@ public class RelationshipImporter extends EntityImporter\n     void freeUnusedIds()\n     {\n         super.freeUnusedIds();\n-        freeUnusedIds( relationshipStore, relationshipIds, cursorTracer );\n+        freeUnusedIds(relationshipStore, relationshipIds, cursorTracer);\n     }\n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
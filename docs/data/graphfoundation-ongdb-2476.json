{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2476",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2476/NeoStoreIndexStoreView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2476/NeoStoreIndexStoreView.java\nindex 394afac3336..ca5fa3386ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2476/NeoStoreIndexStoreView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2476/NeoStoreIndexStoreView.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state.storeview;\n \n import java.util.function.IntPredicate;\n@@ -51,140 +52,140 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n  */\n public class NeoStoreIndexStoreView implements IndexStoreView\n {\n-    protected final PropertyStore propertyStore;\n-    protected final NodeStore nodeStore;\n-    protected final LockService locks;\n-    private final CountsTracker counts;\n+  protected final PropertyStore propertyStore;\n+  protected final NodeStore nodeStore;\n+  protected final LockService locks;\n+  private final CountsTracker counts;\n+\n+  public NeoStoreIndexStoreView(LockService locks, NeoStores neoStores)\n+  {\n+    this.locks = locks;\n+    this.propertyStore = neoStores.getPropertyStore();\n+    this.nodeStore = neoStores.getNodeStore();\n+    this.counts = neoStores.getCounts();\n+  }\n+\n+  @Override\n+  public DoubleLongRegister indexUpdatesAndSize(long indexId, DoubleLongRegister output)\n+  {\n+    return counts.indexUpdatesAndSize(indexId, output);\n+  }\n \n-    public NeoStoreIndexStoreView( LockService locks, NeoStores neoStores )\n+  @Override\n+  public void replaceIndexCounts(long indexId, long uniqueElements, long maxUniqueElements, long indexSize)\n+  {\n+    try (CountsAccessor.IndexStatsUpdater updater = counts.updateIndexCounts())\n     {\n-        this.locks = locks;\n-        this.propertyStore = neoStores.getPropertyStore();\n-        this.nodeStore = neoStores.getNodeStore();\n-        this.counts = neoStores.getCounts();\n+      updater.replaceIndexSample(indexId, uniqueElements, maxUniqueElements);\n+      updater.replaceIndexUpdateAndSize(indexId, 0L, indexSize);\n     }\n+  }\n \n-    @Override\n-    public DoubleLongRegister indexUpdatesAndSize( long indexId, DoubleLongRegister output )\n+  @Override\n+  public void incrementIndexUpdates(long indexId, long updatesDelta)\n+  {\n+    try (CountsAccessor.IndexStatsUpdater updater = counts.updateIndexCounts())\n     {\n-        return counts.indexUpdatesAndSize( indexId, output );\n+      updater.incrementIndexUpdates(indexId, updatesDelta);\n     }\n+  }\n+\n+  @Override\n+  public DoubleLongRegister indexSample(long indexId, DoubleLongRegister output)\n+  {\n+    return counts.indexSample(indexId, output);\n+  }\n+\n+  @Override\n+  public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(\n+      final int[] labelIds, IntPredicate propertyKeyIdFilter,\n+      final Visitor<NodeUpdates, FAILURE> propertyUpdatesVisitor,\n+      final Visitor<NodeLabelUpdate, FAILURE> labelUpdateVisitor,\n+      boolean forceStoreScan)\n+  {\n+    return new StoreViewNodeStoreScan<>(nodeStore, locks, propertyStore, labelUpdateVisitor,\n+        propertyUpdatesVisitor, labelIds, propertyKeyIdFilter);\n+  }\n \n-    @Override\n-    public void replaceIndexCounts( long indexId, long uniqueElements, long maxUniqueElements, long indexSize )\n+  @Override\n+  public NodeUpdates nodeAsUpdates(long nodeId)\n+  {\n+    NodeRecord node = nodeStore.getRecord(nodeId, nodeStore.newRecord(), FORCE);\n+    if (!node.inUse())\n     {\n-        try ( CountsAccessor.IndexStatsUpdater updater = counts.updateIndexCounts() )\n-        {\n-            updater.replaceIndexSample( indexId, uniqueElements, maxUniqueElements );\n-            updater.replaceIndexUpdateAndSize( indexId, 0L, indexSize );\n-        }\n+      return null;\n     }\n-\n-    @Override\n-    public void incrementIndexUpdates( long indexId, long updatesDelta )\n+    long firstPropertyId = node.getNextProp();\n+    if (firstPropertyId == Record.NO_NEXT_PROPERTY.intValue())\n     {\n-        try ( CountsAccessor.IndexStatsUpdater updater = counts.updateIndexCounts() )\n-        {\n-            updater.incrementIndexUpdates( indexId, updatesDelta );\n-        }\n+      return null; // no properties => no updates (it's not going to be in any index)\n     }\n-\n-    @Override\n-    public DoubleLongRegister indexSample( long indexId, DoubleLongRegister output )\n+    long[] labels = parseLabelsField(node).get(nodeStore);\n+    if (labels.length == 0)\n     {\n-        return counts.indexSample( indexId, output );\n+      return null; // no labels => no updates (it's not going to be in any index)\n     }\n-\n-    @Override\n-    public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(\n-            final int[] labelIds, IntPredicate propertyKeyIdFilter,\n-            final Visitor<NodeUpdates, FAILURE> propertyUpdatesVisitor,\n-            final Visitor<NodeLabelUpdate, FAILURE> labelUpdateVisitor,\n-            boolean forceStoreScan )\n+    NodeUpdates.Builder update = NodeUpdates.forNode(nodeId, labels);\n+    for (PropertyRecord propertyRecord : propertyStore.getPropertyRecordChain(firstPropertyId))\n     {\n-        return new StoreViewNodeStoreScan<>( nodeStore, locks, propertyStore, labelUpdateVisitor,\n-                propertyUpdatesVisitor, labelIds, propertyKeyIdFilter );\n+      for (PropertyBlock property : propertyRecord)\n+      {\n+        Value value = property.getType().value(property, propertyStore);\n+        update.added(property.getKeyIndexId(), value);\n+      }\n     }\n+    return update.build();\n+  }\n \n-    @Override\n-    public NodeUpdates nodeAsUpdates( long nodeId )\n+  @Override\n+  public Value getPropertyValue(long nodeId, int propertyKeyId) throws EntityNotFoundException\n+  {\n+    NodeRecord node = nodeStore.getRecord(nodeId, nodeStore.newRecord(), FORCE);\n+    if (!node.inUse())\n     {\n-        NodeRecord node = nodeStore.getRecord( nodeId, nodeStore.newRecord(), FORCE );\n-        if ( !node.inUse() )\n-        {\n-            return null;\n-        }\n-        long firstPropertyId = node.getNextProp();\n-        if ( firstPropertyId == Record.NO_NEXT_PROPERTY.intValue() )\n-        {\n-            return null; // no properties => no updates (it's not going to be in any index)\n-        }\n-        long[] labels = parseLabelsField( node ).get( nodeStore );\n-        if ( labels.length == 0 )\n-        {\n-            return null; // no labels => no updates (it's not going to be in any index)\n-        }\n-        NodeUpdates.Builder update = NodeUpdates.forNode( nodeId, labels );\n-        for ( PropertyRecord propertyRecord : propertyStore.getPropertyRecordChain( firstPropertyId ) )\n-        {\n-            for ( PropertyBlock property : propertyRecord )\n-            {\n-                Value value = property.getType().value( property, propertyStore );\n-                update.added( property.getKeyIndexId(), value );\n-            }\n-        }\n-        return update.build();\n+      throw new EntityNotFoundException(EntityType.NODE, nodeId);\n     }\n-\n-    @Override\n-    public Value getPropertyValue( long nodeId, int propertyKeyId ) throws EntityNotFoundException\n+    long firstPropertyId = node.getNextProp();\n+    if (firstPropertyId == Record.NO_NEXT_PROPERTY.intValue())\n     {\n-        NodeRecord node = nodeStore.getRecord( nodeId, nodeStore.newRecord(), FORCE );\n-        if ( !node.inUse() )\n-        {\n-            throw new EntityNotFoundException( EntityType.NODE, nodeId );\n-        }\n-        long firstPropertyId = node.getNextProp();\n-        if ( firstPropertyId == Record.NO_NEXT_PROPERTY.intValue() )\n-        {\n-            return Values.NO_VALUE;\n-        }\n-        for ( PropertyRecord propertyRecord : propertyStore.getPropertyRecordChain( firstPropertyId ) )\n-        {\n-            PropertyBlock propertyBlock = propertyRecord.getPropertyBlock( propertyKeyId );\n-            if ( propertyBlock != null )\n-            {\n-                return propertyBlock.newPropertyValue( propertyStore );\n-            }\n-        }\n-        return Values.NO_VALUE;\n+      return Values.NO_VALUE;\n+    }\n+    for (PropertyRecord propertyRecord : propertyStore.getPropertyRecordChain(firstPropertyId))\n+    {\n+      PropertyBlock propertyBlock = propertyRecord.getPropertyBlock(propertyKeyId);\n+      if (propertyBlock != null)\n+      {\n+        return propertyBlock.newPropertyValue(propertyStore);\n+      }\n     }\n+    return Values.NO_VALUE;\n+  }\n \n-    @Override\n-    public void loadProperties( long nodeId, PrimitiveIntSet propertyIds, PropertyLoadSink sink )\n+  @Override\n+  public void loadProperties(long nodeId, PrimitiveIntSet propertyIds, PropertyLoadSink sink)\n+  {\n+    NodeRecord node = nodeStore.getRecord(nodeId, nodeStore.newRecord(), FORCE);\n+    if (!node.inUse())\n     {\n-        NodeRecord node = nodeStore.getRecord( nodeId, nodeStore.newRecord(), FORCE );\n-        if ( !node.inUse() )\n-        {\n-            return;\n-        }\n-        long firstPropertyId = node.getNextProp();\n-        if ( firstPropertyId == Record.NO_NEXT_PROPERTY.intValue() )\n-        {\n-            return;\n-        }\n-        for ( PropertyRecord propertyRecord : propertyStore.getPropertyRecordChain( firstPropertyId ) )\n+      return;\n+    }\n+    long firstPropertyId = node.getNextProp();\n+    if (firstPropertyId == Record.NO_NEXT_PROPERTY.intValue())\n+    {\n+      return;\n+    }\n+    for (PropertyRecord propertyRecord : propertyStore.getPropertyRecordChain(firstPropertyId))\n+    {\n+      for (PropertyBlock block : propertyRecord)\n+      {\n+        int currentPropertyId = block.getKeyIndexId();\n+        if (propertyIds.contains(currentPropertyId))\n         {\n-            for ( PropertyBlock block : propertyRecord )\n-            {\n-                int currentPropertyId = block.getKeyIndexId();\n-                if ( propertyIds.contains( currentPropertyId ) )\n-                {\n-                    Value currentValue = block.getType().value( block, propertyStore );\n-                    sink.onProperty( currentPropertyId, currentValue );\n-                    propertyIds.remove( currentPropertyId );\n-                }\n-            }\n+          Value currentValue = block.getType().value(block, propertyStore);\n+          sink.onProperty(currentPropertyId, currentValue);\n+          propertyIds.remove(currentPropertyId);\n         }\n+      }\n     }\n+  }\n }\n",
            "diff_size": 170
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2476/NeoStoreIndexStoreView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2476/NeoStoreIndexStoreView.java\nindex 394afac3336..5a09cf10e39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2476/NeoStoreIndexStoreView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2476/NeoStoreIndexStoreView.java\n@@ -96,10 +96,7 @@ public class NeoStoreIndexStoreView implements IndexStoreView\n     }\n \n     @Override\n-    public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(\n-            final int[] labelIds, IntPredicate propertyKeyIdFilter,\n-            final Visitor<NodeUpdates, FAILURE> propertyUpdatesVisitor,\n-            final Visitor<NodeLabelUpdate, FAILURE> labelUpdateVisitor,\n+    public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes( final int[] labelIds, IntPredicate propertyKeyIdFilter, final Visitor<NodeUpdates,FAILURE> propertyUpdatesVisitor, final Visitor<NodeLabelUpdate,FAILURE> labelUpdateVisitor,\n             boolean forceStoreScan )\n     {\n         return new StoreViewNodeStoreScan<>( nodeStore, locks, propertyStore, labelUpdateVisitor,\n@@ -187,4 +184,4 @@ public class NeoStoreIndexStoreView implements IndexStoreView\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
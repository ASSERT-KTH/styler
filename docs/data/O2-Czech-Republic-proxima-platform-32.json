{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 95).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public class CommitTest {\n\n  private final Repository repo = Repository.ofTest(ConfigFactory.load(\"test-reference.conf\"));\n  private final EntityDescriptor gateway = repo.getEntity(\"gateway\");\n  private final AttributeDescriptor<?> status = gateway.getAttribute(\"status\");\n  private final AttributeDescriptor<?> device = gateway.getAttribute(\"device.*\");",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/32/CommitTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/32/CommitTest.java\nindex 1262cc23ba3..2d991c18be8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/32/CommitTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/32/CommitTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.transaction;\n \n import static org.junit.Assert.*;\n@@ -29,7 +30,8 @@ import org.junit.Test;\n \n public class CommitTest {\n \n-  private final Repository repo = Repository.ofTest(ConfigFactory.load(\"test-reference.conf\"));\n+  private final Repository repo =\n+      Repository.ofTest(ConfigFactory.load(\"test-reference.conf\"));\n   private final EntityDescriptor gateway = repo.getEntity(\"gateway\");\n   private final AttributeDescriptor<?> status = gateway.getAttribute(\"status\");\n   private final AttributeDescriptor<?> device = gateway.getAttribute(\"device.*\");\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/32/CommitTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/32/CommitTest.java\nindex 1262cc23ba3..da4379101f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/32/CommitTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/32/CommitTest.java\n@@ -36,8 +36,7 @@ public class CommitTest {\n \n   @Test\n   public void testCreation() {\n-    StreamElement upsert =\n-        StreamElement.upsert(\n+    StreamElement upsert = StreamElement.upsert(\n             gateway,\n             status,\n             UUID.randomUUID().toString(),\n@@ -45,8 +44,7 @@ public class CommitTest {\n             status.getName(),\n             0L,\n             new byte[] {1, 2, 3});\n-    StreamElement delete =\n-        StreamElement.delete(\n+    StreamElement delete = StreamElement.delete(\n             gateway, status, UUID.randomUUID().toString(), \"key\", status.getName(), 1L);\n     Commit commit = Commit.of(1L, 1234567890000L, Arrays.asList(upsert, delete));\n     assertEquals(1L, commit.getSeqId());\n@@ -69,4 +67,4 @@ public class CommitTest {\n             StreamElement.deleteWildcard(\n                 gateway, device, UUID.randomUUID().toString(), \"key\", 1L)));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/32/CommitTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/32/CommitTest.java\nindex 1262cc23ba3..53736c5790f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/32/CommitTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/32/CommitTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.transaction;\n \n import static org.junit.Assert.*;\n-\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.repository.AttributeDescriptor;\n import cz.o2.proxima.repository.EntityDescriptor;\n@@ -27,6 +26,7 @@ import java.util.Collections;\n import java.util.UUID;\n import org.junit.Test;\n \n+\n public class CommitTest {\n \n   private final Repository repo = Repository.ofTest(ConfigFactory.load(\"test-reference.conf\"));\n@@ -36,37 +36,29 @@ public class CommitTest {\n \n   @Test\n   public void testCreation() {\n-    StreamElement upsert =\n-        StreamElement.upsert(\n-            gateway,\n-            status,\n-            UUID.randomUUID().toString(),\n-            \"key\",\n-            status.getName(),\n-            0L,\n-            new byte[] {1, 2, 3});\n-    StreamElement delete =\n-        StreamElement.delete(\n-            gateway, status, UUID.randomUUID().toString(), \"key\", status.getName(), 1L);\n+    StreamElement upsert = StreamElement.upsert(gateway, status, UUID.randomUUID().toString(), \"key\", status.getName(), 0L, new byte[]{1, 2, 3});\n+    StreamElement delete = StreamElement.delete(gateway, status, UUID.randomUUID().toString(), \"key\", status.getName(), 1L);\n     Commit commit = Commit.of(1L, 1234567890000L, Arrays.asList(upsert, delete));\n     assertEquals(1L, commit.getSeqId());\n     assertEquals(1234567890000L, commit.getStamp());\n     assertEquals(2, commit.getUpdates().size());\n-    assertFalse(commit.getUpdates().get(0).isDelete());\n-    assertTrue(commit.getUpdates().get(1).isDelete());\n+    assertFalse(commit.getUpdates().get(0)\n+                                   .isDelete());\n+    assertTrue(commit.getUpdates().get(1)\n+                                  .isDelete());\n     for (int i = 0; i < 2; i++) {\n-      assertEquals(1L, commit.getUpdates().get(i).getSequentialId());\n-      assertEquals(1234567890000L, commit.getUpdates().get(i).getStamp());\n+      assertEquals(1L, commit.getUpdates().get(i)\n+                                          .getSequentialId());\n+      assertEquals(1234567890000L, commit.getUpdates().get(i)\n+                                                      .getStamp());\n     }\n   }\n \n-  @Test(expected = IllegalArgumentException.class)\n+  @Test(expected = IllegalArgumentException.class )\n   public void testWildcardDeleteUnsupported() {\n     Commit.of(\n-        1L,\n-        System.currentTimeMillis(),\n-        Collections.singletonList(\n-            StreamElement.deleteWildcard(\n-                gateway, device, UUID.randomUUID().toString(), \"key\", 1L)));\n+           1L,\n+           System.currentTimeMillis(),\n+           Collections.singletonList(StreamElement.deleteWildcard(gateway, device, UUID.randomUUID().toString(), \"key\", 1L)));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "StevenLooman-sonar-magik",
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "17",
                "column": "20",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    MagikCheck check = new ParserErrorCheck();\n    String code =\n        \"_block\\n\" +\n        \"_endbloc\";\n    List<MagikIssue> issues = runCheck(code, check);\n    assertThat(issues).isNotEmpty();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "17",
                    "column": "20",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "17",
                    "column": "20",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/13/ParserErrorCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/13/ParserErrorCheckTest.java\nindex 44e1fa08970..ac47016d471 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/13/ParserErrorCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/13/ParserErrorCheckTest.java\n@@ -15,7 +15,7 @@ public class ParserErrorCheckTest extends MagikCheckTestBase {\n     MagikCheck check = new ParserErrorCheck();\n     String code =\n         \"_block\\n\" +\n-        \"_endbloc\";\n+            \"_endbloc\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/13/ParserErrorCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/13/ParserErrorCheckTest.java\nindex 44e1fa08970..cd2a964d16f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/13/ParserErrorCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/13/ParserErrorCheckTest.java\n@@ -14,10 +14,9 @@ public class ParserErrorCheckTest extends MagikCheckTestBase {\n   public void testParserError() {\n     MagikCheck check = new ParserErrorCheck();\n     String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+        \"_block\\n\" + \"_endbloc\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/13/ParserErrorCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/13/ParserErrorCheckTest.java\nindex 44e1fa08970..1713fff1539 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/13/ParserErrorCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/13/ParserErrorCheckTest.java\n@@ -1,23 +1,17 @@\n package org.stevenlooman.sw.magik.checks;\n \n import static org.fest.assertions.Assertions.assertThat;\n-\n import org.junit.Test;\n import org.stevenlooman.sw.magik.MagikCheck;\n import org.stevenlooman.sw.magik.MagikIssue;\n-\n import java.util.List;\n \n public class ParserErrorCheckTest extends MagikCheckTestBase {\n-\n   @Test\n   public void testParserError() {\n     MagikCheck check = new ParserErrorCheck();\n-    String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+    String code = \"_block\\n\" + \"_endbloc\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "17",
                    "column": "20",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "17",
                    "column": "21",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/13/ParserErrorCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/13/ParserErrorCheckTest.java\nindex 44e1fa08970..fd7b6ceff22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/13/ParserErrorCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/13/ParserErrorCheckTest.java\n@@ -14,8 +14,7 @@ public class ParserErrorCheckTest extends MagikCheckTestBase {\n   public void testParserError() {\n     MagikCheck check = new ParserErrorCheck();\n     String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+        \"_block\\n\" +\"_endbloc\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ]
}
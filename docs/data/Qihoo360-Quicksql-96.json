{
    "project_name": "Qihoo360-Quicksql",
    "error_id": "96",
    "information": {
        "errors": [
            {
                "line": "17",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.calcite.rel.type;\n\n/**\n * Describes a policy for resolving fields in record types.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/96/StructKind.java\nindex 1c48ada5754..f0ace004708 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/96/StructKind.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.rel.type;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/96/StructKind.java\nindex 1c48ada5754..10aec398a7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/96/StructKind.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.rel.type;\r\n \r\n /**\r\n@@ -49,40 +50,49 @@ package org.apache.calcite.rel.type;\n  * </ol>\r\n  */\r\n public enum StructKind {\r\n-  /** This is not a structured type. */\r\n-  NONE,\r\n+    /**\r\n+     * This is not a structured type.\r\n+     */\r\n+    NONE,\r\n \r\n-  /** This is a traditional structured type, where each field must be\r\n-   * referenced explicitly.\r\n-   *\r\n-   * <p>Also, when referencing a struct column, you\r\n-   * need to qualify it with the table alias, per standard SQL. For instance,\r\n-   * {@code SELECT c.address.zipcode FROM customer AS c}\r\n-   * is valid but\r\n-   * {@code SELECT address.zipcode FROM customer}\r\n-   * it not valid.\r\n-   */\r\n-  FULLY_QUALIFIED,\r\n+    /**\r\n+     * This is a traditional structured type, where each field must be\r\n+     * referenced explicitly.\r\n+     *\r\n+     * <p>Also, when referencing a struct column, you\r\n+     * need to qualify it with the table alias, per standard SQL. For instance,\r\n+     * {@code SELECT c.address.zipcode FROM customer AS c}\r\n+     * is valid but\r\n+     * {@code SELECT address.zipcode FROM customer}\r\n+     * it not valid.\r\n+     */\r\n+    FULLY_QUALIFIED,\r\n \r\n-  /** As {@link #PEEK_FIELDS}, but takes priority if another struct-typed\r\n-   * field also has a field of the name being sought.\r\n-   *\r\n-   * <p>In Phoenix, only one of a table's columns is labeled\r\n-   * {@code PEEK_FIELDS_DEFAULT} - the default column family - but in principle\r\n-   * there could be more than one. */\r\n-  PEEK_FIELDS_DEFAULT,\r\n+    /**\r\n+     * As {@link #PEEK_FIELDS}, but takes priority if another struct-typed\r\n+     * field also has a field of the name being sought.\r\n+     *\r\n+     * <p>In Phoenix, only one of a table's columns is labeled\r\n+     * {@code PEEK_FIELDS_DEFAULT} - the default column family - but in principle\r\n+     * there could be more than one.\r\n+     */\r\n+    PEEK_FIELDS_DEFAULT,\r\n \r\n-  /** If a field has this type, you can see its fields without qualifying them\r\n-   * with the name of this field.\r\n-   *\r\n-   * <p>For example, if {@code address} is labeled {@code PEEK_FIELDS}, you\r\n-   * could write {@code zipcode} as shorthand for {@code address.zipcode}. */\r\n-  PEEK_FIELDS,\r\n+    /**\r\n+     * If a field has this type, you can see its fields without qualifying them\r\n+     * with the name of this field.\r\n+     *\r\n+     * <p>For example, if {@code address} is labeled {@code PEEK_FIELDS}, you\r\n+     * could write {@code zipcode} as shorthand for {@code address.zipcode}.\r\n+     */\r\n+    PEEK_FIELDS,\r\n \r\n-  /** As {@link #PEEK_FIELDS}, but fields are not expanded in \"SELECT *\".\r\n-   *\r\n-   * <p>Used in Flink, not Phoenix. */\r\n-  PEEK_FIELDS_NO_EXPAND,\r\n+    /**\r\n+     * As {@link #PEEK_FIELDS}, but fields are not expanded in \"SELECT *\".\r\n+     *\r\n+     * <p>Used in Flink, not Phoenix.\r\n+     */\r\n+    PEEK_FIELDS_NO_EXPAND,\r\n }\r\n \r\n // End StructKind.java\r\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 66.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 38, indentation should be the same level as line 73.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 78, indentation should be the same level as line 79.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 39, indentation should be the same level as line 83.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/96/StructKind.java\nindex 1c48ada5754..d447e323e9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/96/StructKind.java\n@@ -47,10 +47,12 @@ package org.apache.calcite.rel.type;\n  *   will beat one that uses {@code PEEK_FIELDS_DEFAULT} at some point, which\r\n  *   will beat one that uses {@code PEEK_FIELDS} at some point.\r\n  * </ol>\r\n- */\r\n+ */\n+\n+\n public enum StructKind {\r\n-  /** This is not a structured type. */\r\n-  NONE,\r\n+  /** This is not a structured type. */\n+    NONE,\r\n \r\n   /** This is a traditional structured type, where each field must be\r\n    * referenced explicitly.\r\n@@ -61,28 +63,22 @@ public enum StructKind {\n    * is valid but\r\n    * {@code SELECT address.zipcode FROM customer}\r\n    * it not valid.\r\n-   */\r\n-  FULLY_QUALIFIED,\r\n+   */ FULLY_QUALIFIED,\r\n \r\n   /** As {@link #PEEK_FIELDS}, but takes priority if another struct-typed\r\n    * field also has a field of the name being sought.\r\n    *\r\n    * <p>In Phoenix, only one of a table's columns is labeled\r\n    * {@code PEEK_FIELDS_DEFAULT} - the default column family - but in principle\r\n-   * there could be more than one. */\r\n-  PEEK_FIELDS_DEFAULT,\r\n+   * there could be more than one. */ PEEK_FIELDS_DEFAULT,\r\n \r\n   /** If a field has this type, you can see its fields without qualifying them\r\n    * with the name of this field.\r\n    *\r\n    * <p>For example, if {@code address} is labeled {@code PEEK_FIELDS}, you\r\n-   * could write {@code zipcode} as shorthand for {@code address.zipcode}. */\r\n-  PEEK_FIELDS,\r\n+   * could write {@code zipcode} as shorthand for {@code address.zipcode}. */ PEEK_FIELDS,\r\n \r\n   /** As {@link #PEEK_FIELDS}, but fields are not expanded in \"SELECT *\".\r\n    *\r\n-   * <p>Used in Flink, not Phoenix. */\r\n-  PEEK_FIELDS_NO_EXPAND,\r\n-}\r\n-\r\n-// End StructKind.java\r\n+   * <p>Used in Flink, not Phoenix. */ PEEK_FIELDS_NO_EXPAND,\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/96/StructKind.java\nindex 1c48ada5754..f0ace004708 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/96/StructKind.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.rel.type;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/96/StructKind.java\nindex 1c48ada5754..f0ace004708 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/96/StructKind.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/96/StructKind.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.rel.type;\r\n \r\n /**\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
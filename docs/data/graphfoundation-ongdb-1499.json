{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1499",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1499/ParameterExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1499/ParameterExtractor.java\nindex 6f0aa748eb3..e3171306739 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1499/ParameterExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1499/ParameterExtractor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.plugins;\n \n import org.neo4j.kernel.internal.GraphDatabaseAPI;\n@@ -24,35 +25,35 @@ import org.neo4j.server.rest.repr.BadInputException;\n \n class ParameterExtractor extends DataExtractor\n {\n-    final String name;\n-    final Class<?> type;\n-    final boolean optional;\n-    final String description;\n-    final TypeCaster caster;\n+  final String name;\n+  final Class<?> type;\n+  final boolean optional;\n+  final String description;\n+  final TypeCaster caster;\n \n-    ParameterExtractor( TypeCaster caster, Class<?> type, Parameter param, Description description )\n-    {\n-        this.caster = caster;\n-        this.type = type;\n-        this.name = param.name();\n-        this.optional = param.optional();\n-        this.description = description == null ? \"\" : description.value();\n-    }\n+  ParameterExtractor(TypeCaster caster, Class<?> type, Parameter param, Description description)\n+  {\n+    this.caster = caster;\n+    this.type = type;\n+    this.name = param.name();\n+    this.optional = param.optional();\n+    this.description = description == null ? \"\" : description.value();\n+  }\n \n-    @Override\n-    Object extract( GraphDatabaseAPI graphDb, Object source, ParameterList parameters ) throws BadInputException\n+  @Override\n+  Object extract(GraphDatabaseAPI graphDb, Object source, ParameterList parameters) throws BadInputException\n+  {\n+    Object result = caster.get(graphDb, parameters, name);\n+    if (optional || result != null)\n     {\n-        Object result = caster.get( graphDb, parameters, name );\n-        if ( optional || result != null )\n-        {\n-            return result;\n-        }\n-        throw new IllegalArgumentException( \"Mandatory argument \\\"\" + name + \"\\\" not supplied.\" );\n+      return result;\n     }\n+    throw new IllegalArgumentException(\"Mandatory argument \\\"\" + name + \"\\\" not supplied.\");\n+  }\n \n-    @Override\n-    void describe( ParameterDescriptionConsumer consumer )\n-    {\n-        consumer.describeParameter( name, type, optional, description );\n-    }\n+  @Override\n+  void describe(ParameterDescriptionConsumer consumer)\n+  {\n+    consumer.describeParameter(name, type, optional, description);\n+  }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1499/ParameterExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1499/ParameterExtractor.java\nindex 6f0aa748eb3..053d360eca6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1499/ParameterExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1499/ParameterExtractor.java\n@@ -55,4 +55,4 @@ class ParameterExtractor extends DataExtractor\n     {\n         consumer.describeParameter( name, type, optional, description );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Annotation 'Override' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1499/ParameterExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1499/ParameterExtractor.java\nindex 6f0aa748eb3..2a8bb0001ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1499/ParameterExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1499/ParameterExtractor.java\n@@ -39,20 +39,19 @@ class ParameterExtractor extends DataExtractor\n         this.description = description == null ? \"\" : description.value();\n     }\n \n-    @Override\n-    Object extract( GraphDatabaseAPI graphDb, Object source, ParameterList parameters ) throws BadInputException\n+    @Override Object extract( GraphDatabaseAPI graphDb, Object source, ParameterList parameters ) throws BadInputException\n     {\n         Object result = caster.get( graphDb, parameters, name );\n-        if ( optional || result != null )\n+        if ( optional|| result != null )\n         {\n             return result;\n         }\n+\n         throw new IllegalArgumentException( \"Mandatory argument \\\"\" + name + \"\\\" not supplied.\" );\n     }\n \n-    @Override\n-    void describe( ParameterDescriptionConsumer consumer )\n+    @Override void describe( ParameterDescriptionConsumer consumer )\n     {\n         consumer.describeParameter( name, type, optional, description );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
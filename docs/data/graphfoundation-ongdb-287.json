{
    "project_name": "graphfoundation-ongdb",
    "error_id": "287",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "112",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/287/ConsecutiveInFlightCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/287/ConsecutiveInFlightCache.java\nindex 865ec3a3697..e6bcc8ec57f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/287/ConsecutiveInFlightCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/287/ConsecutiveInFlightCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.cache;\n \n import org.neo4j.causalclustering.core.consensus.log.RaftLogEntry;\n@@ -35,134 +36,133 @@ import org.neo4j.causalclustering.core.state.machines.tx.CoreReplicatedContent;\n  */\n public class ConsecutiveInFlightCache implements InFlightCache\n {\n-    private final ConsecutiveCache<RaftLogEntry> cache;\n-    private final RaftLogEntry[] evictions;\n-    private final InFlightCacheMonitor monitor;\n-\n-    private long totalBytes;\n-    private long maxBytes;\n-    private boolean enabled;\n-\n-    public ConsecutiveInFlightCache()\n+  private final ConsecutiveCache<RaftLogEntry> cache;\n+  private final RaftLogEntry[] evictions;\n+  private final InFlightCacheMonitor monitor;\n+\n+  private long totalBytes;\n+  private long maxBytes;\n+  private boolean enabled;\n+\n+  public ConsecutiveInFlightCache()\n+  {\n+    this(1024, 8 * 1024 * 1024, InFlightCacheMonitor.VOID, true);\n+  }\n+\n+  public ConsecutiveInFlightCache(int capacity, long maxBytes, InFlightCacheMonitor monitor, boolean enabled)\n+  {\n+    this.cache = new ConsecutiveCache<>(capacity);\n+    this.evictions = new RaftLogEntry[capacity];\n+\n+    this.maxBytes = maxBytes;\n+    this.monitor = monitor;\n+    this.enabled = enabled;\n+\n+    monitor.setMaxBytes(maxBytes);\n+    monitor.setMaxElements(capacity);\n+  }\n+\n+  @Override\n+  public synchronized void enable()\n+  {\n+    enabled = true;\n+  }\n+\n+  @Override\n+  public synchronized void put(long logIndex, RaftLogEntry entry)\n+  {\n+    if (!enabled)\n     {\n-        this( 1024, 8 * 1024 * 1024, InFlightCacheMonitor.VOID, true );\n+      return;\n     }\n \n-    public ConsecutiveInFlightCache( int capacity, long maxBytes, InFlightCacheMonitor monitor, boolean enabled )\n-    {\n-        this.cache = new ConsecutiveCache<>( capacity );\n-        this.evictions = new RaftLogEntry[capacity];\n-\n-        this.maxBytes = maxBytes;\n-        this.monitor = monitor;\n-        this.enabled = enabled;\n+    totalBytes += sizeOf(entry);\n+    cache.put(logIndex, entry, evictions);\n+    processEvictions();\n \n-        monitor.setMaxBytes( maxBytes );\n-        monitor.setMaxElements( capacity );\n-    }\n-\n-    @Override\n-    public synchronized void enable()\n+    while (totalBytes > maxBytes)\n     {\n-        enabled = true;\n+      RaftLogEntry evicted = cache.remove();\n+      totalBytes -= sizeOf(evicted);\n     }\n+  }\n \n-    @Override\n-    public synchronized void put( long logIndex, RaftLogEntry entry )\n+  @Override\n+  public synchronized RaftLogEntry get(long logIndex)\n+  {\n+    if (!enabled)\n     {\n-        if ( !enabled )\n-        {\n-            return;\n-        }\n-\n-        totalBytes += sizeOf( entry );\n-        cache.put( logIndex, entry, evictions );\n-        processEvictions();\n-\n-        while ( totalBytes > maxBytes )\n-        {\n-            RaftLogEntry evicted = cache.remove();\n-            totalBytes -= sizeOf( evicted );\n-        }\n+      return null;\n     }\n \n-    @Override\n-    public synchronized RaftLogEntry get( long logIndex )\n-    {\n-        if ( !enabled )\n-        {\n-            return null;\n-        }\n-\n-        RaftLogEntry entry = cache.get( logIndex );\n-\n-        if ( entry == null )\n-        {\n-            monitor.miss();\n-        }\n-        else\n-        {\n-            monitor.hit();\n-        }\n-\n-        return entry;\n-    }\n+    RaftLogEntry entry = cache.get(logIndex);\n \n-    @Override\n-    public synchronized void truncate( long fromIndex )\n+    if (entry == null)\n     {\n-        if ( !enabled )\n-        {\n-            return;\n-        }\n-\n-        cache.truncate( fromIndex, evictions );\n-        processEvictions();\n-    }\n-\n-    @Override\n-    public synchronized void prune( long upToIndex )\n+      monitor.miss();\n+    } else\n     {\n-        if ( !enabled )\n-        {\n-            return;\n-        }\n-\n-        cache.prune( upToIndex, evictions );\n-        processEvictions();\n+      monitor.hit();\n     }\n \n-    @Override\n-    public synchronized long totalBytes()\n-    {\n-        return totalBytes;\n-    }\n+    return entry;\n+  }\n \n-    @Override\n-    public synchronized int elementCount()\n+  @Override\n+  public synchronized void truncate(long fromIndex)\n+  {\n+    if (!enabled)\n     {\n-        return cache.size();\n+      return;\n     }\n \n-    private long sizeOf( RaftLogEntry entry )\n+    cache.truncate(fromIndex, evictions);\n+    processEvictions();\n+  }\n+\n+  @Override\n+  public synchronized void prune(long upToIndex)\n+  {\n+    if (!enabled)\n     {\n-        return entry.content().hasSize() ? entry.content().size() : 0;\n+      return;\n     }\n \n-    private void processEvictions()\n+    cache.prune(upToIndex, evictions);\n+    processEvictions();\n+  }\n+\n+  @Override\n+  public synchronized long totalBytes()\n+  {\n+    return totalBytes;\n+  }\n+\n+  @Override\n+  public synchronized int elementCount()\n+  {\n+    return cache.size();\n+  }\n+\n+  private long sizeOf(RaftLogEntry entry)\n+  {\n+    return entry.content().hasSize() ? entry.content().size() : 0;\n+  }\n+\n+  private void processEvictions()\n+  {\n+    for (int i = 0; i < evictions.length; i++)\n     {\n-        for ( int i = 0; i < evictions.length; i++ )\n-        {\n-            RaftLogEntry entry = evictions[i];\n-            if ( entry == null )\n-            {\n-                break;\n-            }\n-            evictions[i] = null;\n-            totalBytes -= sizeOf( entry );\n-        }\n-\n-        monitor.setTotalBytes( totalBytes );\n-        monitor.setElementCount( cache.size() );\n+      RaftLogEntry entry = evictions[i];\n+      if (entry == null)\n+      {\n+        break;\n+      }\n+      evictions[i] = null;\n+      totalBytes -= sizeOf(entry);\n     }\n+\n+    monitor.setTotalBytes(totalBytes);\n+    monitor.setElementCount(cache.size());\n+  }\n }\n",
            "diff_size": 174
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "column": "27",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/287/ConsecutiveInFlightCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/287/ConsecutiveInFlightCache.java\nindex 865ec3a3697..66d9cec3b62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/287/ConsecutiveInFlightCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/287/ConsecutiveInFlightCache.java\n@@ -52,8 +52,7 @@ public class ConsecutiveInFlightCache implements InFlightCache\n     {\n         this.cache = new ConsecutiveCache<>( capacity );\n         this.evictions = new RaftLogEntry[capacity];\n-\n-        this.maxBytes = maxBytes;\n+this.maxBytes = maxBytes;\n         this.monitor = monitor;\n         this.enabled = enabled;\n \n@@ -79,7 +78,7 @@ public class ConsecutiveInFlightCache implements InFlightCache\n         cache.put( logIndex, entry, evictions );\n         processEvictions();\n \n-        while ( totalBytes > maxBytes )\n+        while ( totalBytes> maxBytes )\n         {\n             RaftLogEntry evicted = cache.remove();\n             totalBytes -= sizeOf( evicted );\n@@ -95,8 +94,7 @@ public class ConsecutiveInFlightCache implements InFlightCache\n         }\n \n         RaftLogEntry entry = cache.get( logIndex );\n-\n-        if ( entry == null )\n+if ( entry == null )\n         {\n             monitor.miss();\n         }\n@@ -158,11 +156,12 @@ public class ConsecutiveInFlightCache implements InFlightCache\n             {\n                 break;\n             }\n-            evictions[i] = null;\n+\n+evictions[i] = null;\n             totalBytes -= sizeOf( entry );\n         }\n \n         monitor.setTotalBytes( totalBytes );\n         monitor.setElementCount( cache.size() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
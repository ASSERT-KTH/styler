{
    "project_name": "graphfoundation-ongdb",
    "error_id": "686",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/686/CypherResultSubGraph.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/686/CypherResultSubGraph.java\nindex 19a9c541ef9..1c6d84532d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/686/CypherResultSubGraph.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/686/CypherResultSubGraph.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.export;\n \n import java.util.Collection;\n@@ -41,164 +42,164 @@ import static org.neo4j.helpers.collection.Iterators.loop;\n public class CypherResultSubGraph implements SubGraph\n {\n \n-    private final SortedMap<Long, Node> nodes = new TreeMap<>();\n-    private final SortedMap<Long, Relationship> relationships = new TreeMap<>();\n-    private final Collection<Label> labels = new HashSet<>();\n-    private final Collection<IndexDefinition> indexes = new HashSet<>();\n-    private final Collection<ConstraintDefinition> constraints = new HashSet<>();\n+  private final SortedMap<Long, Node> nodes = new TreeMap<>();\n+  private final SortedMap<Long, Relationship> relationships = new TreeMap<>();\n+  private final Collection<Label> labels = new HashSet<>();\n+  private final Collection<IndexDefinition> indexes = new HashSet<>();\n+  private final Collection<ConstraintDefinition> constraints = new HashSet<>();\n \n-    public void add( Node node )\n+  public void add(Node node)\n+  {\n+    final long id = node.getId();\n+    if (!nodes.containsKey(id))\n     {\n-        final long id = node.getId();\n-        if ( !nodes.containsKey( id ) )\n-        {\n-            addNode( id, node );\n-        }\n+      addNode(id, node);\n     }\n-\n-    void addNode( long id, Node data )\n+  }\n+\n+  void addNode(long id, Node data)\n+  {\n+    nodes.put(id, data);\n+    labels.addAll(Iterables.asCollection(data.getLabels()));\n+  }\n+\n+  public void add(Relationship rel)\n+  {\n+    final long id = rel.getId();\n+    if (!relationships.containsKey(id))\n     {\n-        nodes.put( id, data );\n-        labels.addAll( Iterables.asCollection( data.getLabels() ) );\n+      addRel(id, rel);\n+      add(rel.getStartNode());\n+      add(rel.getEndNode());\n     }\n+  }\n \n-    public void add( Relationship rel )\n+  public static SubGraph from(Result result, GraphDatabaseService gds, boolean addBetween)\n+  {\n+    final CypherResultSubGraph graph = new CypherResultSubGraph();\n+    final List<String> columns = result.columns();\n+    for (Map<String, Object> row : loop(result))\n     {\n-        final long id = rel.getId();\n-        if ( !relationships.containsKey( id ) )\n-        {\n-            addRel( id, rel );\n-            add( rel.getStartNode() );\n-            add( rel.getEndNode() );\n-        }\n+      for (String column : columns)\n+      {\n+        final Object value = row.get(column);\n+        graph.addToGraph(value);\n+      }\n     }\n-\n-    public static SubGraph from( Result result, GraphDatabaseService gds, boolean addBetween )\n+    for (IndexDefinition def : gds.schema().getIndexes())\n     {\n-        final CypherResultSubGraph graph = new CypherResultSubGraph();\n-        final List<String> columns = result.columns();\n-        for ( Map<String, Object> row : loop( result ) )\n-        {\n-            for ( String column : columns )\n-            {\n-                final Object value = row.get( column );\n-                graph.addToGraph( value );\n-            }\n-        }\n-        for ( IndexDefinition def : gds.schema().getIndexes() )\n-        {\n-            if ( graph.getLabels().contains( def.getLabel() ) )\n-            {\n-                graph.addIndex( def );\n-            }\n-        }\n-        for ( ConstraintDefinition def : gds.schema().getConstraints() )\n-        {\n-            if ( graph.getLabels().contains( def.getLabel() ) )\n-            {\n-                graph.addConstraint( def );\n-            }\n-        }\n-        if ( addBetween )\n-        {\n-            graph.addRelationshipsBetweenNodes();\n-        }\n-        return graph;\n+      if (graph.getLabels().contains(def.getLabel()))\n+      {\n+        graph.addIndex(def);\n+      }\n     }\n-\n-    private void addIndex( IndexDefinition def )\n+    for (ConstraintDefinition def : gds.schema().getConstraints())\n     {\n-        indexes.add( def );\n+      if (graph.getLabels().contains(def.getLabel()))\n+      {\n+        graph.addConstraint(def);\n+      }\n     }\n-\n-    private void addConstraint( ConstraintDefinition def )\n+    if (addBetween)\n     {\n-        constraints.add( def );\n+      graph.addRelationshipsBetweenNodes();\n     }\n-\n-    private void addRelationshipsBetweenNodes()\n+    return graph;\n+  }\n+\n+  private void addIndex(IndexDefinition def)\n+  {\n+    indexes.add(def);\n+  }\n+\n+  private void addConstraint(ConstraintDefinition def)\n+  {\n+    constraints.add(def);\n+  }\n+\n+  private void addRelationshipsBetweenNodes()\n+  {\n+    Set<Node> newNodes = new HashSet<>();\n+    for (Node node : nodes.values())\n     {\n-        Set<Node> newNodes = new HashSet<>();\n-        for ( Node node : nodes.values() )\n-        {\n-            for ( Relationship relationship : node.getRelationships() )\n-            {\n-                if ( !relationships.containsKey( relationship.getId() ) )\n-                {\n-                    continue;\n-                }\n-\n-                final Node other = relationship.getOtherNode( node );\n-                if ( nodes.containsKey( other.getId() ) || newNodes.contains( other ) )\n-                {\n-                    continue;\n-                }\n-                newNodes.add( other );\n-            }\n-        }\n-        for ( Node node : newNodes )\n+      for (Relationship relationship : node.getRelationships())\n+      {\n+        if (!relationships.containsKey(relationship.getId()))\n         {\n-            add( node );\n+          continue;\n         }\n-    }\n \n-    private void addToGraph( Object value )\n-    {\n-        if ( value instanceof Node )\n-        {\n-            add( (Node) value );\n-        }\n-        if ( value instanceof Relationship )\n+        final Node other = relationship.getOtherNode(node);\n+        if (nodes.containsKey(other.getId()) || newNodes.contains(other))\n         {\n-            add( (Relationship) value );\n-        }\n-        if ( value instanceof Iterable )\n-        {\n-            for ( Object inner : (Iterable) value )\n-            {\n-                addToGraph( inner );\n-            }\n+          continue;\n         }\n+        newNodes.add(other);\n+      }\n     }\n-\n-    @Override\n-    public Iterable<Node> getNodes()\n+    for (Node node : newNodes)\n     {\n-        return nodes.values();\n+      add(node);\n     }\n+  }\n \n-    @Override\n-    public Iterable<Relationship> getRelationships()\n+  private void addToGraph(Object value)\n+  {\n+    if (value instanceof Node)\n     {\n-        return relationships.values();\n+      add((Node) value);\n     }\n-\n-    public Collection<Label> getLabels()\n+    if (value instanceof Relationship)\n     {\n-        return labels;\n+      add((Relationship) value);\n     }\n-\n-    void addRel( Long id, Relationship rel )\n-    {\n-        relationships.put( id, rel );\n-    }\n-\n-    @Override\n-    public boolean contains( Relationship relationship )\n-    {\n-        return relationships.containsKey( relationship.getId() );\n-    }\n-\n-    @Override\n-    public Iterable<IndexDefinition> getIndexes()\n-    {\n-        return indexes;\n-    }\n-\n-    @Override\n-    public Iterable<ConstraintDefinition> getConstraints()\n+    if (value instanceof Iterable)\n     {\n-        return constraints;\n+      for (Object inner : (Iterable) value)\n+      {\n+        addToGraph(inner);\n+      }\n     }\n+  }\n+\n+  @Override\n+  public Iterable<Node> getNodes()\n+  {\n+    return nodes.values();\n+  }\n+\n+  @Override\n+  public Iterable<Relationship> getRelationships()\n+  {\n+    return relationships.values();\n+  }\n+\n+  public Collection<Label> getLabels()\n+  {\n+    return labels;\n+  }\n+\n+  void addRel(Long id, Relationship rel)\n+  {\n+    relationships.put(id, rel);\n+  }\n+\n+  @Override\n+  public boolean contains(Relationship relationship)\n+  {\n+    return relationships.containsKey(relationship.getId());\n+  }\n+\n+  @Override\n+  public Iterable<IndexDefinition> getIndexes()\n+  {\n+    return indexes;\n+  }\n+\n+  @Override\n+  public Iterable<ConstraintDefinition> getConstraints()\n+  {\n+    return constraints;\n+  }\n \n }\n",
            "diff_size": 215
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/686/CypherResultSubGraph.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/686/CypherResultSubGraph.java\nindex 19a9c541ef9..89fe227fd54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/686/CypherResultSubGraph.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/686/CypherResultSubGraph.java\n@@ -40,9 +40,8 @@ import static org.neo4j.helpers.collection.Iterators.loop;\n \n public class CypherResultSubGraph implements SubGraph\n {\n-\n-    private final SortedMap<Long, Node> nodes = new TreeMap<>();\n-    private final SortedMap<Long, Relationship> relationships = new TreeMap<>();\n+    private final SortedMap<Long,Node> nodes = new TreeMap<>();\n+    private final SortedMap<Long,Relationship> relationships = new TreeMap<>();\n     private final Collection<Label> labels = new HashSet<>();\n     private final Collection<IndexDefinition> indexes = new HashSet<>();\n     private final Collection<ConstraintDefinition> constraints = new HashSet<>();\n@@ -77,7 +76,7 @@ public class CypherResultSubGraph implements SubGraph\n     {\n         final CypherResultSubGraph graph = new CypherResultSubGraph();\n         final List<String> columns = result.columns();\n-        for ( Map<String, Object> row : loop( result ) )\n+        for ( Map<String,Object> row : loop( result ) )\n         {\n             for ( String column : columns )\n             {\n@@ -103,7 +102,8 @@ public class CypherResultSubGraph implements SubGraph\n         {\n             graph.addRelationshipsBetweenNodes();\n         }\n-        return graph;\n+\n+return graph;\n     }\n \n     private void addIndex( IndexDefinition def )\n@@ -148,11 +148,13 @@ public class CypherResultSubGraph implements SubGraph\n         {\n             add( (Node) value );\n         }\n-        if ( value instanceof Relationship )\n+\n+if ( value instanceof Relationship )\n         {\n             add( (Relationship) value );\n         }\n-        if ( value instanceof Iterable )\n+\n+if ( value instanceof Iterable )\n         {\n             for ( Object inner : (Iterable) value )\n             {\n@@ -200,5 +202,4 @@ public class CypherResultSubGraph implements SubGraph\n     {\n         return constraints;\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
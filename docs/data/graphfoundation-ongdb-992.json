{
    "project_name": "graphfoundation-ongdb",
    "error_id": "992",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/992/CodeGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/992/CodeGenerator.java\nindex 01547bbec16..827ab892fb6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/992/CodeGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/992/CodeGenerator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import static java.util.Objects.requireNonNull;\n@@ -28,93 +29,92 @@ import static org.neo4j.codegen.TypeReference.typeReferences;\n \n public abstract class CodeGenerator\n {\n-    private final CodeLoader loader;\n-    private long generation;\n-    private long classes;\n-    private ByteCodeVisitor byteCodeVisitor = DO_NOTHING;\n-\n-    public static CodeGenerator generateCode( CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options )\n-            throws CodeGenerationNotSupportedException\n-    {\n-        return generateCode( Thread.currentThread().getContextClassLoader(), strategy, options );\n-    }\n-\n-    public static CodeGenerator generateCode( ClassLoader loader, CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options )\n-            throws CodeGenerationNotSupportedException\n-    {\n-        return codeGenerator( requireNonNull( loader, \"ClassLoader\" ), strategy, options );\n-    }\n-\n-    public CodeGenerator( ClassLoader loader )\n-    {\n-        this.loader = new CodeLoader( loader );\n-    }\n-\n-    public ClassGenerator generateClass( String packageName, String name, Class<?> firstInterface, Class<?>... more )\n-    {\n-        return generateClass( packageName, name, typeReferences( firstInterface, more ) );\n-    }\n-\n-    public ClassGenerator generateClass( Class<?> base, String packageName, String name, Class<?>... interfaces )\n-    {\n-        return generateClass( typeReference( base ), packageName, name, typeReferences( interfaces ) );\n-    }\n-\n-    public ClassGenerator generateClass( String packageName, String name, TypeReference... interfaces )\n-    {\n-        return generateClass( OBJECT, packageName, name, interfaces );\n-    }\n-\n-    public ClassGenerator generateClass( TypeReference base, String packageName, String name,\n-            TypeReference... interfaces )\n+  private final CodeLoader loader;\n+  private long generation;\n+  private long classes;\n+  private ByteCodeVisitor byteCodeVisitor = DO_NOTHING;\n+\n+  public static CodeGenerator generateCode(CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options)\n+      throws CodeGenerationNotSupportedException\n+  {\n+    return generateCode(Thread.currentThread().getContextClassLoader(), strategy, options);\n+  }\n+\n+  public static CodeGenerator generateCode(ClassLoader loader, CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options)\n+      throws CodeGenerationNotSupportedException\n+  {\n+    return codeGenerator(requireNonNull(loader, \"ClassLoader\"), strategy, options);\n+  }\n+\n+  public CodeGenerator(ClassLoader loader)\n+  {\n+    this.loader = new CodeLoader(loader);\n+  }\n+\n+  public ClassGenerator generateClass(String packageName, String name, Class<?> firstInterface, Class<?>... more)\n+  {\n+    return generateClass(packageName, name, typeReferences(firstInterface, more));\n+  }\n+\n+  public ClassGenerator generateClass(Class<?> base, String packageName, String name, Class<?>... interfaces)\n+  {\n+    return generateClass(typeReference(base), packageName, name, typeReferences(interfaces));\n+  }\n+\n+  public ClassGenerator generateClass(String packageName, String name, TypeReference... interfaces)\n+  {\n+    return generateClass(OBJECT, packageName, name, interfaces);\n+  }\n+\n+  public ClassGenerator generateClass(TypeReference base, String packageName, String name,\n+                                      TypeReference... interfaces)\n+  {\n+    return generateClass(makeHandle(packageName, name, base), base, interfaces);\n+  }\n+\n+  private synchronized ClassHandle makeHandle(String packageName, String name, TypeReference parent)\n+  {\n+    classes++;\n+    return new ClassHandle(packageName, name, parent, this, generation);\n+  }\n+\n+  private ClassGenerator generateClass(ClassHandle handle, TypeReference base, TypeReference... interfaces)\n+  {\n+    return new ClassGenerator(handle, generate(handle, base, interfaces));\n+  }\n+\n+  protected abstract ClassEmitter generate(TypeReference type, TypeReference base, TypeReference... interfaces);\n+\n+  protected abstract Iterable<? extends ByteCodes> compile(ClassLoader classpathLoader)\n+      throws CompilationFailureException;\n+\n+  synchronized Class<?> loadClass(String name, long generation) throws CompilationFailureException\n+  {\n+    if (generation == this.generation)\n     {\n-        return generateClass( makeHandle( packageName, name, base ), base, interfaces );\n+      if (classes != 0)\n+      {\n+        throw new IllegalStateException(\"Compilation has not completed.\");\n+      }\n+      this.generation++;\n+      loader.addSources(compile(loader.getParent()), byteCodeVisitor);\n     }\n-\n-    private synchronized ClassHandle makeHandle( String packageName, String name, TypeReference parent )\n-    {\n-        classes++;\n-        return new ClassHandle( packageName, name, parent, this, generation );\n-    }\n-\n-    private ClassGenerator generateClass( ClassHandle handle, TypeReference base, TypeReference... interfaces )\n+    try\n     {\n-        return new ClassGenerator( handle, generate( handle, base, interfaces ) );\n-    }\n-\n-    protected abstract ClassEmitter generate( TypeReference type, TypeReference base, TypeReference... interfaces );\n-\n-    protected abstract Iterable<? extends ByteCodes> compile( ClassLoader classpathLoader )\n-            throws CompilationFailureException;\n-\n-    synchronized Class<?> loadClass( String name, long generation ) throws CompilationFailureException\n+      return loader.loadClass(name);\n+    } catch (ClassNotFoundException e)\n     {\n-        if ( generation == this.generation )\n-        {\n-            if ( classes != 0 )\n-            {\n-                throw new IllegalStateException( \"Compilation has not completed.\" );\n-            }\n-            this.generation++;\n-            loader.addSources( compile( loader.getParent() ), byteCodeVisitor );\n-        }\n-        try\n-        {\n-            return loader.loadClass( name );\n-        }\n-        catch ( ClassNotFoundException e )\n-        {\n-            throw new IllegalStateException( \"Could not find defined class.\", e );\n-        }\n+      throw new IllegalStateException(\"Could not find defined class.\", e);\n     }\n+  }\n \n-    synchronized void closeClass()\n-    {\n-        classes--;\n-    }\n+  synchronized void closeClass()\n+  {\n+    classes--;\n+  }\n \n-    void setByteCodeVisitor( ByteCodeVisitor visitor )\n-    {\n-        this.byteCodeVisitor = visitor;\n-    }\n+  void setByteCodeVisitor(ByteCodeVisitor visitor)\n+  {\n+    this.byteCodeVisitor = visitor;\n+  }\n }\n",
            "diff_size": 112
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/992/CodeGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/992/CodeGenerator.java\nindex 01547bbec16..8f68f856ee5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/992/CodeGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/992/CodeGenerator.java\n@@ -33,15 +33,13 @@ public abstract class CodeGenerator\n     private long classes;\n     private ByteCodeVisitor byteCodeVisitor = DO_NOTHING;\n \n-    public static CodeGenerator generateCode( CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options )\n-            throws CodeGenerationNotSupportedException\n-    {\n+    public static CodeGenerator generateCode( CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options ) throws CodeGenerationNotSupportedException\n+{\n         return generateCode( Thread.currentThread().getContextClassLoader(), strategy, options );\n     }\n \n-    public static CodeGenerator generateCode( ClassLoader loader, CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options )\n-            throws CodeGenerationNotSupportedException\n-    {\n+    public static CodeGenerator generateCode( ClassLoader loader, CodeGenerationStrategy<?> strategy, CodeGeneratorOption... options ) throws CodeGenerationNotSupportedException\n+{\n         return codeGenerator( requireNonNull( loader, \"ClassLoader\" ), strategy, options );\n     }\n \n@@ -84,9 +82,7 @@ public abstract class CodeGenerator\n \n     protected abstract ClassEmitter generate( TypeReference type, TypeReference base, TypeReference... interfaces );\n \n-    protected abstract Iterable<? extends ByteCodes> compile( ClassLoader classpathLoader )\n-            throws CompilationFailureException;\n-\n+    protected abstract Iterable<? extends ByteCodes> compile( ClassLoader classpathLoader ) throws CompilationFailureException;\n     synchronized Class<?> loadClass( String name, long generation ) throws CompilationFailureException\n     {\n         if ( generation == this.generation )\n@@ -98,7 +94,8 @@ public abstract class CodeGenerator\n             this.generation++;\n             loader.addSources( compile( loader.getParent() ), byteCodeVisitor );\n         }\n-        try\n+\n+try\n         {\n             return loader.loadClass( name );\n         }\n@@ -117,4 +114,4 @@ public abstract class CodeGenerator\n     {\n         this.byteCodeVisitor = visitor;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
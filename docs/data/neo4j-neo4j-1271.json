{
    "project_name": "neo4j-neo4j",
    "error_id": "1271",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "51",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "88",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1271/AuthToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1271/AuthToken.java\nindex 428d9b33714..5bb22cda2e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1271/AuthToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1271/AuthToken.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.security;\n \n import org.apache.commons.lang3.StringUtils;\n@@ -41,128 +42,124 @@ public interface AuthToken\n     String BASIC_SCHEME = \"basic\";\n     String NATIVE_REALM = \"native\";\n \n-    static String safeCast( String key, Map<String,Object> authToken ) throws InvalidAuthTokenException\n+    static String safeCast(String key, Map<String, Object> authToken) throws InvalidAuthTokenException\n     {\n-        Object value = authToken.get( key );\n-        if ( value == null )\n+        Object value = authToken.get(key);\n+        if (value == null)\n         {\n-            throw invalidToken( \"missing key `\" + key + \"`\" );\n-        }\n-        else if ( !(value instanceof String) )\n+            throw invalidToken(\"missing key `\" + key + \"`\");\n+        } else if (!(value instanceof String))\n         {\n-            throw invalidToken( \"the value associated with the key `\" + key + \"` must be a String but was: \"\n-                    + value.getClass().getSimpleName() );\n+            throw invalidToken(\"the value associated with the key `\" + key + \"` must be a String but was: \"\n+              + value.getClass().getSimpleName());\n         }\n         return (String) value;\n     }\n \n-    static byte[] safeCastCredentials( String key, Map<String,Object> authToken ) throws InvalidAuthTokenException\n+    static byte[] safeCastCredentials(String key, Map<String, Object> authToken) throws InvalidAuthTokenException\n     {\n-        Object value = authToken.get( key );\n-        if ( value == null )\n+        Object value = authToken.get(key);\n+        if (value == null)\n         {\n-            throw invalidToken( \"missing key `\" + key + \"`\" );\n-        }\n-        else if ( !(value instanceof byte[]) )\n+            throw invalidToken(\"missing key `\" + key + \"`\");\n+        } else if (!(value instanceof byte[]))\n         {\n-            throw invalidToken( \"the value associated with the key `\" + key + \"` must be a UTF-8 encoded string but was: \"\n-                    + value.getClass().getSimpleName() );\n+            throw invalidToken(\"the value associated with the key `\" + key + \"` must be a UTF-8 encoded string but was: \"\n+              + value.getClass().getSimpleName());\n         }\n         return (byte[]) value;\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    static Map<String,Object> safeCastMap( String key, Map<String,Object> authToken )\n-            throws InvalidAuthTokenException\n+    @SuppressWarnings(\"unchecked\")\n+    static Map<String, Object> safeCastMap(String key, Map<String, Object> authToken)\n+      throws InvalidAuthTokenException\n     {\n-        Object value = authToken.get( key );\n-        if ( value == null )\n+        Object value = authToken.get(key);\n+        if (value == null)\n         {\n             return Collections.emptyMap();\n-        }\n-        else if ( value instanceof Map )\n+        } else if (value instanceof Map)\n         {\n-            return (Map<String,Object>) value;\n-        }\n-        else\n+            return (Map<String, Object>) value;\n+        } else\n         {\n             throw new InvalidAuthTokenException(\n-                    \"The value associated with the key `\" + key + \"` must be a Map but was: \" +\n-                    value.getClass().getSimpleName() );\n+              \"The value associated with the key `\" + key + \"` must be a Map but was: \" +\n+                value.getClass().getSimpleName());\n         }\n     }\n \n-    static boolean containsSensitiveInformation( String key )\n+    static boolean containsSensitiveInformation(String key)\n     {\n-        return CREDENTIALS.equals( key );\n+        return CREDENTIALS.equals(key);\n     }\n \n-    static void clearCredentials( Map<String,Object> authToken )\n+    static void clearCredentials(Map<String, Object> authToken)\n     {\n-        Object credentials = authToken.get( CREDENTIALS );\n-        if ( credentials instanceof byte[] )\n+        Object credentials = authToken.get(CREDENTIALS);\n+        if (credentials instanceof byte[])\n         {\n-            Arrays.fill( (byte[]) credentials, (byte) 0 );\n+            Arrays.fill((byte[]) credentials, (byte) 0);\n         }\n     }\n \n-    static InvalidAuthTokenException invalidToken( String explanation )\n+    static InvalidAuthTokenException invalidToken(String explanation)\n     {\n-        if ( StringUtils.isNotEmpty( explanation ) && !explanation.matches( \"^[,.:;].*\" ) )\n+        if (StringUtils.isNotEmpty(explanation) && !explanation.matches(\"^[,.:;].*\"))\n         {\n             explanation = \", \" + explanation;\n         }\n-        return new InvalidAuthTokenException( format( \"Unsupported authentication token%s\", explanation ) );\n+        return new InvalidAuthTokenException(format(\"Unsupported authentication token%s\", explanation));\n     }\n \n-    static Map<String,Object> newBasicAuthToken( String username, byte[] password )\n+    static Map<String, Object> newBasicAuthToken(String username, byte[] password)\n     {\n-        return map( AuthToken.SCHEME_KEY, BASIC_SCHEME, AuthToken.PRINCIPAL, username, AuthToken.CREDENTIALS,\n-                password );\n+        return map(AuthToken.SCHEME_KEY, BASIC_SCHEME, AuthToken.PRINCIPAL, username, AuthToken.CREDENTIALS,\n+          password);\n     }\n \n-    static Map<String,Object> newBasicAuthToken( String username, byte[] password, String realm )\n+    static Map<String, Object> newBasicAuthToken(String username, byte[] password, String realm)\n     {\n-        return map( AuthToken.SCHEME_KEY, BASIC_SCHEME, AuthToken.PRINCIPAL, username, AuthToken.CREDENTIALS, password,\n-                AuthToken.REALM_KEY, realm );\n+        return map(AuthToken.SCHEME_KEY, BASIC_SCHEME, AuthToken.PRINCIPAL, username, AuthToken.CREDENTIALS, password,\n+          AuthToken.REALM_KEY, realm);\n     }\n \n-    static Map<String,Object> newCustomAuthToken( String principle, byte[] credentials, String realm, String scheme )\n+    static Map<String, Object> newCustomAuthToken(String principle, byte[] credentials, String realm, String scheme)\n     {\n-        return map( AuthToken.SCHEME_KEY, scheme, AuthToken.PRINCIPAL, principle, AuthToken.CREDENTIALS, credentials,\n-                AuthToken.REALM_KEY, realm );\n+        return map(AuthToken.SCHEME_KEY, scheme, AuthToken.PRINCIPAL, principle, AuthToken.CREDENTIALS, credentials,\n+          AuthToken.REALM_KEY, realm);\n     }\n \n-    static Map<String,Object> newCustomAuthToken( String principle, byte[] credentials, String realm, String scheme,\n-            Map<String,Object> parameters )\n+    static Map<String, Object> newCustomAuthToken(String principle, byte[] credentials, String realm, String scheme,\n+                                                  Map<String, Object> parameters)\n     {\n-        return map( AuthToken.SCHEME_KEY, scheme, AuthToken.PRINCIPAL, principle, AuthToken.CREDENTIALS, credentials,\n-                AuthToken.REALM_KEY, realm, AuthToken.PARAMETERS, parameters );\n+        return map(AuthToken.SCHEME_KEY, scheme, AuthToken.PRINCIPAL, principle, AuthToken.CREDENTIALS, credentials,\n+          AuthToken.REALM_KEY, realm, AuthToken.PARAMETERS, parameters);\n     }\n \n     // For testing purposes only\n-    static Map<String,Object> newBasicAuthToken( String username, String password )\n+    static Map<String, Object> newBasicAuthToken(String username, String password)\n     {\n-        return newBasicAuthToken( username, UTF8.encode( password ) );\n+        return newBasicAuthToken(username, UTF8.encode(password));\n     }\n \n     // For testing purposes only\n-    static Map<String,Object> newBasicAuthToken( String username, String password, String realm )\n+    static Map<String, Object> newBasicAuthToken(String username, String password, String realm)\n     {\n-        return newBasicAuthToken( username, UTF8.encode( password ), realm );\n+        return newBasicAuthToken(username, UTF8.encode(password), realm);\n     }\n \n     // For testing purposes only\n-    static Map<String,Object> newCustomAuthToken( String principle, String credentials, String realm, String scheme )\n+    static Map<String, Object> newCustomAuthToken(String principle, String credentials, String realm, String scheme)\n     {\n-        return newCustomAuthToken( principle, UTF8.encode( credentials ), realm, scheme );\n+        return newCustomAuthToken(principle, UTF8.encode(credentials), realm, scheme);\n     }\n \n     // For testing purposes only\n-    static Map<String,Object> newCustomAuthToken( String principle, String credentials, String realm, String scheme,\n-            Map<String,Object> parameters )\n+    static Map<String, Object> newCustomAuthToken(String principle, String credentials, String realm, String scheme,\n+                                                  Map<String, Object> parameters)\n     {\n-        return newCustomAuthToken( principle, UTF8.encode( credentials ), realm, scheme, parameters );\n+        return newCustomAuthToken(principle, UTF8.encode(credentials), realm, scheme, parameters);\n     }\n \n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1271/AuthToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1271/AuthToken.java\nindex 428d9b33714..13733f1e54e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1271/AuthToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1271/AuthToken.java\n@@ -165,4 +165,4 @@ public interface AuthToken\n         return newCustomAuthToken( principle, UTF8.encode( credentials ), realm, scheme, parameters );\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
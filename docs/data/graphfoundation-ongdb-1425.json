{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1425",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "186",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "255",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "276",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "292",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "307",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "344",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "403",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1425/NativeLabelScanStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1425/NativeLabelScanStore.java\nindex 324aadf58c3..8b29646ca15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1425/NativeLabelScanStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1425/NativeLabelScanStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.labelscan;\n \n import org.apache.commons.lang3.mutable.MutableBoolean;\n@@ -77,455 +78,449 @@ import static org.neo4j.kernel.impl.store.MetaDataStore.DEFAULT_NAME;\n  */\n public class NativeLabelScanStore implements LabelScanStore\n {\n-    /**\n-     * Name of the file used for the native label scan store.\n-     */\n-    public static final String FILE_NAME = DEFAULT_NAME + \".labelscanstore.db\";\n-\n-    /**\n-     * Written in header to indicate native label scan store is clean\n-     */\n-    private static final byte CLEAN = (byte) 0x00;\n-\n-    /**\n-     * Written in header to indicate native label scan store is rebuilding\n-     */\n-    private static final byte NEEDS_REBUILDING = (byte) 0x01;\n-\n-    /**\n-     * Whether or not this label scan store is read-only.\n-     */\n-    private final boolean readOnly;\n-\n-    /**\n-     * Monitoring internal events.\n-     */\n-    private final Monitor monitor;\n-\n-    /**\n-     * Monitors used to pass down monitor to underlying {@link GBPTree}\n-     */\n-    private final Monitors monitors;\n-\n-    /**\n-     * {@link PageCache} to {@link PageCache#map(File, int, java.nio.file.OpenOption...)}\n-     * store file backing this label scan store. Passed to {@link GBPTree}.\n-     */\n-    private final PageCache pageCache;\n-\n-    /**\n-     * Store file {@link PageCache#map(File, int, java.nio.file.OpenOption...)}.\n-     */\n-    private final File storeFile;\n-\n-    /**\n-     * Used in {@link #start()} if the store is empty, where this will provide all data for fully populating\n-     * this label scan store. This can be the case when changing label scan store provider on an existing database.\n-     */\n-    private final FullStoreChangeStream fullStoreChangeStream;\n-\n-    /**\n-     * {@link FileSystemAbstraction} the backing file lives on.\n-     */\n-    private final FileSystemAbstraction fs;\n-\n-    /**\n-     * Directory of the store to place the backing file in.\n-     */\n-    private final File storeDir;\n-\n-    /**\n-     * Page size to use for each tree node in {@link GBPTree}. Passed to {@link GBPTree}.\n-     */\n-    private final int pageSize;\n-\n-    /**\n-     * Used for all file operations on the gbpTree file.\n-     */\n-    private final GBPTreeFileUtil gbpTreeUtil;\n-\n-    /**\n-     * The index which backs this label scan store. Instantiated in {@link #init()} and considered\n-     * started after call to {@link #start()}.\n-     */\n-    private GBPTree<LabelScanKey,LabelScanValue> index;\n-\n-    /**\n-     * Set during {@link #init()} if {@link #start()} will need to rebuild the whole label scan store from\n-     * {@link FullStoreChangeStream}.\n-     */\n-    private boolean needsRebuild;\n-\n-    /**\n-     * Passed to underlying {@link GBPTree} which use it to submit recovery cleanup jobs.\n-     */\n-    private final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n-\n-    /**\n-     * The single instance of {@link NativeLabelScanWriter} used for updates.\n-     */\n-    private NativeLabelScanWriter singleWriter;\n-\n-    /**\n-     * Monitor for all writes going into this label scan store.\n-     */\n-    private NativeLabelScanWriter.WriteMonitor writeMonitor;\n-\n-    /**\n-     * Write rebuilding bit to header.\n-     */\n-    private static final Consumer<PageCursor> needsRebuildingWriter =\n-            pageCursor -> pageCursor.putByte( NEEDS_REBUILDING );\n-\n-    /**\n-     * Write clean header.\n-     */\n-    private static final Consumer<PageCursor> writeClean = pageCursor -> pageCursor.putByte( CLEAN );\n-\n-    public NativeLabelScanStore( PageCache pageCache, FileSystemAbstraction fs, File storeDir, FullStoreChangeStream fullStoreChangeStream,\n-            boolean readOnly, Monitors monitors, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector )\n+  /**\n+   * Name of the file used for the native label scan store.\n+   */\n+  public static final String FILE_NAME = DEFAULT_NAME + \".labelscanstore.db\";\n+\n+  /**\n+   * Written in header to indicate native label scan store is clean\n+   */\n+  private static final byte CLEAN = (byte) 0x00;\n+\n+  /**\n+   * Written in header to indicate native label scan store is rebuilding\n+   */\n+  private static final byte NEEDS_REBUILDING = (byte) 0x01;\n+\n+  /**\n+   * Whether or not this label scan store is read-only.\n+   */\n+  private final boolean readOnly;\n+\n+  /**\n+   * Monitoring internal events.\n+   */\n+  private final Monitor monitor;\n+\n+  /**\n+   * Monitors used to pass down monitor to underlying {@link GBPTree}\n+   */\n+  private final Monitors monitors;\n+\n+  /**\n+   * {@link PageCache} to {@link PageCache#map(File, int, java.nio.file.OpenOption...)}\n+   * store file backing this label scan store. Passed to {@link GBPTree}.\n+   */\n+  private final PageCache pageCache;\n+\n+  /**\n+   * Store file {@link PageCache#map(File, int, java.nio.file.OpenOption...)}.\n+   */\n+  private final File storeFile;\n+\n+  /**\n+   * Used in {@link #start()} if the store is empty, where this will provide all data for fully populating\n+   * this label scan store. This can be the case when changing label scan store provider on an existing database.\n+   */\n+  private final FullStoreChangeStream fullStoreChangeStream;\n+\n+  /**\n+   * {@link FileSystemAbstraction} the backing file lives on.\n+   */\n+  private final FileSystemAbstraction fs;\n+\n+  /**\n+   * Directory of the store to place the backing file in.\n+   */\n+  private final File storeDir;\n+\n+  /**\n+   * Page size to use for each tree node in {@link GBPTree}. Passed to {@link GBPTree}.\n+   */\n+  private final int pageSize;\n+\n+  /**\n+   * Used for all file operations on the gbpTree file.\n+   */\n+  private final GBPTreeFileUtil gbpTreeUtil;\n+\n+  /**\n+   * The index which backs this label scan store. Instantiated in {@link #init()} and considered\n+   * started after call to {@link #start()}.\n+   */\n+  private GBPTree<LabelScanKey, LabelScanValue> index;\n+\n+  /**\n+   * Set during {@link #init()} if {@link #start()} will need to rebuild the whole label scan store from\n+   * {@link FullStoreChangeStream}.\n+   */\n+  private boolean needsRebuild;\n+\n+  /**\n+   * Passed to underlying {@link GBPTree} which use it to submit recovery cleanup jobs.\n+   */\n+  private final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n+\n+  /**\n+   * The single instance of {@link NativeLabelScanWriter} used for updates.\n+   */\n+  private NativeLabelScanWriter singleWriter;\n+\n+  /**\n+   * Monitor for all writes going into this label scan store.\n+   */\n+  private NativeLabelScanWriter.WriteMonitor writeMonitor;\n+\n+  /**\n+   * Write rebuilding bit to header.\n+   */\n+  private static final Consumer<PageCursor> needsRebuildingWriter =\n+      pageCursor -> pageCursor.putByte(NEEDS_REBUILDING);\n+\n+  /**\n+   * Write clean header.\n+   */\n+  private static final Consumer<PageCursor> writeClean = pageCursor -> pageCursor.putByte(CLEAN);\n+\n+  public NativeLabelScanStore(PageCache pageCache, FileSystemAbstraction fs, File storeDir, FullStoreChangeStream fullStoreChangeStream,\n+                              boolean readOnly, Monitors monitors, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector)\n+  {\n+    this(pageCache, fs, storeDir, fullStoreChangeStream, readOnly, monitors, recoveryCleanupWorkCollector,\n+        /*means no opinion about page size*/ 0);\n+  }\n+\n+  /*\n+   * Test access to be able to control page size.\n+   */\n+  NativeLabelScanStore(PageCache pageCache, FileSystemAbstraction fs, File storeDir,\n+                       FullStoreChangeStream fullStoreChangeStream, boolean readOnly, Monitors monitors,\n+                       RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, int pageSize)\n+  {\n+    this.pageCache = pageCache;\n+    this.fs = fs;\n+    this.pageSize = pageSize;\n+    this.fullStoreChangeStream = fullStoreChangeStream;\n+    this.storeDir = storeDir;\n+    this.storeFile = getLabelScanStoreFile(storeDir);\n+    this.readOnly = readOnly;\n+    this.monitors = monitors;\n+    this.monitor = monitors.newMonitor(Monitor.class);\n+    this.recoveryCleanupWorkCollector = recoveryCleanupWorkCollector;\n+    this.gbpTreeUtil = new GBPTreePageCacheFileUtil(pageCache);\n+  }\n+\n+  /**\n+   * Returns the file backing the label scan store.\n+   *\n+   * @param storeDir The store directory to use.\n+   * @return the file backing the label scan store\n+   */\n+  public static File getLabelScanStoreFile(File storeDir)\n+  {\n+    return new File(storeDir, FILE_NAME);\n+  }\n+\n+  /**\n+   * @return {@link LabelScanReader} capable of finding node ids with given label ids.\n+   * Readers will immediately see updates made by {@link LabelScanWriter}, although {@link LabelScanWriter}\n+   * may internally batch updates so functionality isn't reliable. The only given is that readers will\n+   * see at least updates from closed {@link LabelScanWriter writers}.\n+   */\n+  @Override\n+  public LabelScanReader newReader()\n+  {\n+    return new NativeLabelScanReader(index);\n+  }\n+\n+  /**\n+   * Returns {@link LabelScanWriter} capable of making changes to this {@link LabelScanStore}.\n+   * Only a single writer is allowed at any given point in time.\n+   *\n+   * @return {@link LabelScanWriter} capable of making changes to this {@link LabelScanStore}.\n+   * @throws IllegalStateException if someone else has already acquired a writer and hasn't yet\n+   *                               called {@link LabelScanWriter#close()}.\n+   */\n+  @Override\n+  public LabelScanWriter newWriter()\n+  {\n+    if (readOnly)\n     {\n-        this( pageCache, fs, storeDir, fullStoreChangeStream, readOnly, monitors, recoveryCleanupWorkCollector,\n-                /*means no opinion about page size*/ 0 );\n+      throw new UnsupportedOperationException(\"Can't create index writer in read only mode.\");\n     }\n \n-    /*\n-     * Test access to be able to control page size.\n-     */\n-    NativeLabelScanStore( PageCache pageCache, FileSystemAbstraction fs, File storeDir,\n-                FullStoreChangeStream fullStoreChangeStream, boolean readOnly, Monitors monitors,\n-                RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, int pageSize )\n+    try\n     {\n-        this.pageCache = pageCache;\n-        this.fs = fs;\n-        this.pageSize = pageSize;\n-        this.fullStoreChangeStream = fullStoreChangeStream;\n-        this.storeDir = storeDir;\n-        this.storeFile = getLabelScanStoreFile( storeDir );\n-        this.readOnly = readOnly;\n-        this.monitors = monitors;\n-        this.monitor = monitors.newMonitor( Monitor.class );\n-        this.recoveryCleanupWorkCollector = recoveryCleanupWorkCollector;\n-        this.gbpTreeUtil = new GBPTreePageCacheFileUtil( pageCache );\n-    }\n-\n-    /**\n-     * Returns the file backing the label scan store.\n-     *\n-     * @param storeDir The store directory to use.\n-     * @return the file backing the label scan store\n-     */\n-    public static File getLabelScanStoreFile( File storeDir )\n+      return writer();\n+    } catch (IOException e)\n     {\n-        return new File( storeDir, FILE_NAME );\n+      throw new UncheckedIOException(e);\n     }\n-\n-    /**\n-     * @return {@link LabelScanReader} capable of finding node ids with given label ids.\n-     * Readers will immediately see updates made by {@link LabelScanWriter}, although {@link LabelScanWriter}\n-     * may internally batch updates so functionality isn't reliable. The only given is that readers will\n-     * see at least updates from closed {@link LabelScanWriter writers}.\n-     */\n-    @Override\n-    public LabelScanReader newReader()\n+  }\n+\n+  /**\n+   * Forces all changes to {@link PageCache} and creates a checkpoint so that the {@link LabelScanStore}\n+   * is recoverable from this point, given that the same transactions which will be applied after this point\n+   * and non-clean shutdown will be applied again on next startup.\n+   *\n+   * @param limiter {@link IOLimiter}.\n+   * @throws UnderlyingStorageException on failure writing changes to {@link PageCache}.\n+   */\n+  @Override\n+  public void force(IOLimiter limiter) throws UnderlyingStorageException\n+  {\n+    try\n     {\n-        return new NativeLabelScanReader( index );\n-    }\n-\n-    /**\n-     * Returns {@link LabelScanWriter} capable of making changes to this {@link LabelScanStore}.\n-     * Only a single writer is allowed at any given point in time.\n-     *\n-     * @return {@link LabelScanWriter} capable of making changes to this {@link LabelScanStore}.\n-     * @throws IllegalStateException if someone else has already acquired a writer and hasn't yet\n-     * called {@link LabelScanWriter#close()}.\n-     */\n-    @Override\n-    public LabelScanWriter newWriter()\n+      index.checkpoint(limiter);\n+      writeMonitor.force();\n+    } catch (IOException e)\n     {\n-        if ( readOnly )\n-        {\n-            throw new UnsupportedOperationException( \"Can't create index writer in read only mode.\" );\n-        }\n-\n-        try\n-        {\n-            return writer();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      throw new UnderlyingStorageException(e);\n     }\n+  }\n \n-    /**\n-     * Forces all changes to {@link PageCache} and creates a checkpoint so that the {@link LabelScanStore}\n-     * is recoverable from this point, given that the same transactions which will be applied after this point\n-     * and non-clean shutdown will be applied again on next startup.\n-     *\n-     * @param limiter {@link IOLimiter}.\n-     * @throws UnderlyingStorageException on failure writing changes to {@link PageCache}.\n-     */\n-    @Override\n-    public void force( IOLimiter limiter ) throws UnderlyingStorageException\n+  @Override\n+  public AllEntriesLabelScanReader allNodeLabelRanges()\n+  {\n+    IntFunction<RawCursor<Hit<LabelScanKey, LabelScanValue>, IOException>> seekProvider = labelId ->\n     {\n-        try\n-        {\n-            index.checkpoint( limiter );\n-            writeMonitor.force();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UnderlyingStorageException( e );\n-        }\n-    }\n-\n-    @Override\n-    public AllEntriesLabelScanReader allNodeLabelRanges()\n+      try\n+      {\n+        return index.seek(\n+            new LabelScanKey().set(labelId, 0),\n+            new LabelScanKey().set(labelId, Long.MAX_VALUE));\n+      } catch (IOException e)\n+      {\n+        throw new RuntimeException(e);\n+      }\n+    };\n+\n+    int highestLabelId = -1;\n+    try (RawCursor<Hit<LabelScanKey, LabelScanValue>, IOException> cursor = index.seek(\n+        new LabelScanKey().set(Integer.MAX_VALUE, Long.MAX_VALUE),\n+        new LabelScanKey().set(0, -1)))\n     {\n-        IntFunction<RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException>> seekProvider = labelId ->\n-        {\n-            try\n-            {\n-                return index.seek(\n-                        new LabelScanKey().set( labelId, 0 ),\n-                        new LabelScanKey().set( labelId, Long.MAX_VALUE ) );\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new RuntimeException( e );\n-            }\n-        };\n-\n-        int highestLabelId = -1;\n-        try ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek(\n-                new LabelScanKey().set( Integer.MAX_VALUE, Long.MAX_VALUE ),\n-                new LabelScanKey().set( 0, -1 ) ) )\n-        {\n-            if ( cursor.next() )\n-            {\n-                highestLabelId = cursor.get().key().labelId;\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-        return new NativeAllEntriesLabelScanReader( seekProvider, highestLabelId );\n-    }\n-\n-    /**\n-     * @return store files, namely the single \"neostore.labelscanstore.db\" store file.\n-     */\n-    @Override\n-    public ResourceIterator<File> snapshotStoreFiles()\n+      if (cursor.next())\n+      {\n+        highestLabelId = cursor.get().key().labelId;\n+      }\n+    } catch (IOException e)\n     {\n-        return asResourceIterator( iterator( storeFile ) );\n+      throw new RuntimeException(e);\n     }\n-\n-    /**\n-     * Instantiates the underlying {@link GBPTree} and its resources.\n-     *\n-     * @throws IOException on {@link PageCache} exceptions.\n-     */\n-    @Override\n-    public void init() throws IOException\n+    return new NativeAllEntriesLabelScanReader(seekProvider, highestLabelId);\n+  }\n+\n+  /**\n+   * @return store files, namely the single \"neostore.labelscanstore.db\" store file.\n+   */\n+  @Override\n+  public ResourceIterator<File> snapshotStoreFiles()\n+  {\n+    return asResourceIterator(iterator(storeFile));\n+  }\n+\n+  /**\n+   * Instantiates the underlying {@link GBPTree} and its resources.\n+   *\n+   * @throws IOException on {@link PageCache} exceptions.\n+   */\n+  @Override\n+  public void init() throws IOException\n+  {\n+    monitor.init();\n+\n+    boolean storeExists = hasStore();\n+    boolean isDirty;\n+    try\n     {\n-        monitor.init();\n-\n-        boolean storeExists = hasStore();\n-        boolean isDirty;\n-        try\n-        {\n-            needsRebuild = !storeExists;\n-            if ( !storeExists )\n-            {\n-                monitor.noIndex();\n-            }\n-\n-            isDirty = instantiateTree();\n-        }\n-        catch ( MetadataMismatchException e )\n-        {\n-            // GBPTree is corrupt. Try to rebuild.\n-            isDirty = true;\n-        }\n-\n-        writeMonitor = LabelScanWriteMonitor.ENABLED ? new LabelScanWriteMonitor( fs, storeDir ) : NativeLabelScanWriter.EMPTY;\n-        singleWriter = new NativeLabelScanWriter( 1_000, writeMonitor );\n-\n-        if ( isDirty )\n-        {\n-            monitor.notValidIndex();\n-            if ( !readOnly )\n-            {\n-                dropStrict();\n-                instantiateTree();\n-            }\n-            needsRebuild = true;\n-        }\n-    }\n-\n-    @Override\n-    public boolean hasStore()\n+      needsRebuild = !storeExists;\n+      if (!storeExists)\n+      {\n+        monitor.noIndex();\n+      }\n+\n+      isDirty = instantiateTree();\n+    } catch (MetadataMismatchException e)\n     {\n-        return gbpTreeUtil.storeFileExists( storeFile );\n+      // GBPTree is corrupt. Try to rebuild.\n+      isDirty = true;\n     }\n \n-    @Override\n-    public File getLabelScanStoreFile()\n-    {\n-        return storeFile;\n-    }\n+    writeMonitor = LabelScanWriteMonitor.ENABLED ? new LabelScanWriteMonitor(fs, storeDir) : NativeLabelScanWriter.EMPTY;\n+    singleWriter = new NativeLabelScanWriter(1_000, writeMonitor);\n \n-    /**\n-     * @return true if instantiated tree needs to be rebuilt.\n-     */\n-    private boolean instantiateTree() throws IOException\n+    if (isDirty)\n     {\n-        monitors.addMonitorListener( treeMonitor() );\n-        GBPTree.Monitor monitor = monitors.newMonitor( GBPTree.Monitor.class );\n-        MutableBoolean isRebuilding = new MutableBoolean();\n-        Header.Reader readRebuilding =\n-                headerData -> isRebuilding.setValue( headerData.get() == NEEDS_REBUILDING );\n-        index = new GBPTree<>( pageCache, storeFile, new LabelScanLayout(), pageSize, monitor, readRebuilding,\n-                needsRebuildingWriter, recoveryCleanupWorkCollector );\n-        return isRebuilding.getValue();\n+      monitor.notValidIndex();\n+      if (!readOnly)\n+      {\n+        dropStrict();\n+        instantiateTree();\n+      }\n+      needsRebuild = true;\n     }\n-\n-    private GBPTree.Monitor treeMonitor()\n+  }\n+\n+  @Override\n+  public boolean hasStore()\n+  {\n+    return gbpTreeUtil.storeFileExists(storeFile);\n+  }\n+\n+  @Override\n+  public File getLabelScanStoreFile()\n+  {\n+    return storeFile;\n+  }\n+\n+  /**\n+   * @return true if instantiated tree needs to be rebuilt.\n+   */\n+  private boolean instantiateTree() throws IOException\n+  {\n+    monitors.addMonitorListener(treeMonitor());\n+    GBPTree.Monitor monitor = monitors.newMonitor(GBPTree.Monitor.class);\n+    MutableBoolean isRebuilding = new MutableBoolean();\n+    Header.Reader readRebuilding =\n+        headerData -> isRebuilding.setValue(headerData.get() == NEEDS_REBUILDING);\n+    index = new GBPTree<>(pageCache, storeFile, new LabelScanLayout(), pageSize, monitor, readRebuilding,\n+        needsRebuildingWriter, recoveryCleanupWorkCollector);\n+    return isRebuilding.getValue();\n+  }\n+\n+  private GBPTree.Monitor treeMonitor()\n+  {\n+    return new LabelIndexTreeMonitor();\n+  }\n+\n+  @Override\n+  public void drop() throws IOException\n+  {\n+    try\n     {\n-        return new LabelIndexTreeMonitor();\n-    }\n-\n-    @Override\n-    public void drop() throws IOException\n+      dropStrict();\n+    } catch (NoSuchFileException e)\n     {\n-        try\n-        {\n-            dropStrict();\n-        }\n-        catch ( NoSuchFileException e )\n-        {\n-            // Even better, it didn't even exist\n-        }\n+      // Even better, it didn't even exist\n     }\n+  }\n \n-    private void dropStrict() throws IOException\n+  private void dropStrict() throws IOException\n+  {\n+    if (index != null)\n     {\n-        if ( index != null )\n-        {\n-            index.close();\n-            index = null;\n-        }\n-        gbpTreeUtil.deleteFile( storeFile );\n+      index.close();\n+      index = null;\n     }\n-\n-    /**\n-     * Starts the store and makes it available for queries and updates.\n-     * Any required recovery must take place before calling this method.\n-     *\n-     * @throws IOException on {@link PageCache} exceptions.\n-     */\n-    @Override\n-    public void start() throws IOException\n+    gbpTreeUtil.deleteFile(storeFile);\n+  }\n+\n+  /**\n+   * Starts the store and makes it available for queries and updates.\n+   * Any required recovery must take place before calling this method.\n+   *\n+   * @throws IOException on {@link PageCache} exceptions.\n+   */\n+  @Override\n+  public void start() throws IOException\n+  {\n+    if (needsRebuild && !readOnly)\n     {\n-        if ( needsRebuild && !readOnly )\n-        {\n-            monitor.rebuilding();\n-            long numberOfNodes;\n-\n-            // Intentionally ignore read-only flag here when rebuilding.\n-            try ( LabelScanWriter writer = writer() )\n-            {\n-                numberOfNodes = fullStoreChangeStream.applyTo( writer );\n-            }\n-\n-            index.checkpoint( IOLimiter.unlimited(), writeClean );\n-\n-            monitor.rebuilt( numberOfNodes );\n-            needsRebuild = false;\n-        }\n-    }\n+      monitor.rebuilding();\n+      long numberOfNodes;\n \n-    private NativeLabelScanWriter writer() throws IOException\n+      // Intentionally ignore read-only flag here when rebuilding.\n+      try (LabelScanWriter writer = writer())\n+      {\n+        numberOfNodes = fullStoreChangeStream.applyTo(writer);\n+      }\n+\n+      index.checkpoint(IOLimiter.unlimited(), writeClean);\n+\n+      monitor.rebuilt(numberOfNodes);\n+      needsRebuild = false;\n+    }\n+  }\n+\n+  private NativeLabelScanWriter writer() throws IOException\n+  {\n+    return singleWriter.initialize(index.writer());\n+  }\n+\n+  @Override\n+  public boolean isEmpty() throws IOException\n+  {\n+    try (RawCursor<Hit<LabelScanKey, LabelScanValue>, IOException> cursor = index.seek(\n+        new LabelScanKey(0, 0),\n+        new LabelScanKey(Integer.MAX_VALUE, Long.MAX_VALUE)))\n     {\n-        return singleWriter.initialize( index.writer() );\n+      return !cursor.next();\n     }\n-\n-    @Override\n-    public boolean isEmpty() throws IOException\n+  }\n+\n+  @Override\n+  public void stop()\n+  {   // Not needed\n+  }\n+\n+  /**\n+   * Shuts down this store so that no more queries or updates can be accepted.\n+   *\n+   * @throws IOException on {@link PageCache} exceptions.\n+   */\n+  @Override\n+  public void shutdown() throws IOException\n+  {\n+    if (index != null)\n     {\n-        try ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek(\n-                new LabelScanKey( 0, 0 ),\n-                new LabelScanKey( Integer.MAX_VALUE, Long.MAX_VALUE ) ) )\n-        {\n-            return !cursor.next();\n-        }\n+      index.close();\n+      index = null;\n+      writeMonitor.close();\n     }\n+  }\n \n+  @Override\n+  public boolean isReadOnly()\n+  {\n+    return readOnly;\n+  }\n+\n+  public boolean isDirty()\n+  {\n+    return index == null || index.wasDirtyOnStartup();\n+  }\n+\n+  private class LabelIndexTreeMonitor extends GBPTree.Monitor.Adaptor\n+  {\n     @Override\n-    public void stop()\n-    {   // Not needed\n+    public void cleanupRegistered()\n+    {\n+      monitor.recoveryCleanupRegistered();\n     }\n \n-    /**\n-     * Shuts down this store so that no more queries or updates can be accepted.\n-     *\n-     * @throws IOException on {@link PageCache} exceptions.\n-     */\n     @Override\n-    public void shutdown() throws IOException\n+    public void cleanupStarted()\n     {\n-        if ( index != null )\n-        {\n-            index.close();\n-            index = null;\n-            writeMonitor.close();\n-        }\n+      monitor.recoveryCleanupStarted();\n     }\n \n     @Override\n-    public boolean isReadOnly()\n+    public void cleanupFinished(long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis)\n     {\n-        return readOnly;\n+      monitor.recoveryCleanupFinished(numberOfPagesVisited, numberOfCleanedCrashPointers, durationMillis);\n     }\n \n-    public boolean isDirty()\n+    @Override\n+    public void cleanupClosed()\n     {\n-        return index == null || index.wasDirtyOnStartup();\n+      monitor.recoveryCleanupClosed();\n     }\n \n-    private class LabelIndexTreeMonitor extends GBPTree.Monitor.Adaptor\n+    @Override\n+    public void cleanupFailed(Throwable throwable)\n     {\n-        @Override\n-        public void cleanupRegistered()\n-        {\n-            monitor.recoveryCleanupRegistered();\n-        }\n-\n-        @Override\n-        public void cleanupStarted()\n-        {\n-            monitor.recoveryCleanupStarted();\n-        }\n-\n-        @Override\n-        public void cleanupFinished( long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis )\n-        {\n-            monitor.recoveryCleanupFinished( numberOfPagesVisited, numberOfCleanedCrashPointers, durationMillis );\n-        }\n-\n-        @Override\n-        public void cleanupClosed()\n-        {\n-            monitor.recoveryCleanupClosed();\n-        }\n-\n-        @Override\n-        public void cleanupFailed( Throwable throwable )\n-        {\n-            monitor.recoveryCleanupFailed( throwable );\n-        }\n+      monitor.recoveryCleanupFailed(throwable);\n     }\n+  }\n }\n",
            "diff_size": 585
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "298",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "453",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1425/NativeLabelScanStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1425/NativeLabelScanStore.java\nindex 324aadf58c3..9b95aa058f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1425/NativeLabelScanStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1425/NativeLabelScanStore.java\n@@ -177,7 +177,7 @@ public class NativeLabelScanStore implements LabelScanStore\n     private static final Consumer<PageCursor> needsRebuildingWriter =\n             pageCursor -> pageCursor.putByte( NEEDS_REBUILDING );\n \n-    /**\n+/**\n      * Write clean header.\n      */\n     private static final Consumer<PageCursor> writeClean = pageCursor -> pageCursor.putByte( CLEAN );\n@@ -192,10 +192,9 @@ public class NativeLabelScanStore implements LabelScanStore\n     /*\n      * Test access to be able to control page size.\n      */\n-    NativeLabelScanStore( PageCache pageCache, FileSystemAbstraction fs, File storeDir,\n-                FullStoreChangeStream fullStoreChangeStream, boolean readOnly, Monitors monitors,\n+    NativeLabelScanStore( PageCache pageCache, FileSystemAbstraction fs, File storeDir, FullStoreChangeStream fullStoreChangeStream, boolean readOnly, Monitors monitors,\n                 RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, int pageSize )\n-    {\n+{\n         this.pageCache = pageCache;\n         this.fs = fs;\n         this.pageSize = pageSize;\n@@ -287,10 +286,8 @@ public class NativeLabelScanStore implements LabelScanStore\n         {\n             try\n             {\n-                return index.seek(\n-                        new LabelScanKey().set( labelId, 0 ),\n-                        new LabelScanKey().set( labelId, Long.MAX_VALUE ) );\n-            }\n+                return index.seek( new LabelScanKey().set( labelId, 0 ), new LabelScanKey().set( labelId, Long.MAX_VALUE ) );\n+    }\n             catch ( IOException e )\n             {\n                 throw new RuntimeException( e );\n@@ -298,10 +295,8 @@ public class NativeLabelScanStore implements LabelScanStore\n         };\n \n         int highestLabelId = -1;\n-        try ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek(\n-                new LabelScanKey().set( Integer.MAX_VALUE, Long.MAX_VALUE ),\n-                new LabelScanKey().set( 0, -1 ) ) )\n-        {\n+        try ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek( new LabelScanKey().set( Integer.MAX_VALUE, Long.MAX_VALUE ), new LabelScanKey().set( 0, -1 ) ) )\n+{\n             if ( cursor.next() )\n             {\n                 highestLabelId = cursor.get().key().labelId;\n@@ -353,8 +348,7 @@ public class NativeLabelScanStore implements LabelScanStore\n \n         writeMonitor = LabelScanWriteMonitor.ENABLED ? new LabelScanWriteMonitor( fs, storeDir ) : NativeLabelScanWriter.EMPTY;\n         singleWriter = new NativeLabelScanWriter( 1_000, writeMonitor );\n-\n-        if ( isDirty )\n+if ( isDirty )\n         {\n             monitor.notValidIndex();\n             if ( !readOnly )\n@@ -362,7 +356,8 @@ public class NativeLabelScanStore implements LabelScanStore\n                 dropStrict();\n                 instantiateTree();\n             }\n-            needsRebuild = true;\n+\n+needsRebuild = true;\n         }\n     }\n \n@@ -388,9 +383,9 @@ public class NativeLabelScanStore implements LabelScanStore\n         MutableBoolean isRebuilding = new MutableBoolean();\n         Header.Reader readRebuilding =\n                 headerData -> isRebuilding.setValue( headerData.get() == NEEDS_REBUILDING );\n-        index = new GBPTree<>( pageCache, storeFile, new LabelScanLayout(), pageSize, monitor, readRebuilding,\n+index = new GBPTree<>( pageCache, storeFile, new LabelScanLayout(), pageSize, monitor, readRebuilding,\n                 needsRebuildingWriter, recoveryCleanupWorkCollector );\n-        return isRebuilding.getValue();\n+return isRebuilding.getValue();\n     }\n \n     private GBPTree.Monitor treeMonitor()\n@@ -442,8 +437,7 @@ public class NativeLabelScanStore implements LabelScanStore\n             }\n \n             index.checkpoint( IOLimiter.unlimited(), writeClean );\n-\n-            monitor.rebuilt( numberOfNodes );\n+monitor.rebuilt( numberOfNodes );\n             needsRebuild = false;\n         }\n     }\n@@ -456,9 +450,7 @@ public class NativeLabelScanStore implements LabelScanStore\n     @Override\n     public boolean isEmpty() throws IOException\n     {\n-        try ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek(\n-                new LabelScanKey( 0, 0 ),\n-                new LabelScanKey( Integer.MAX_VALUE, Long.MAX_VALUE ) ) )\n+        try ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek( new LabelScanKey( 0, 0 ), new LabelScanKey( Integer.MAX_VALUE, Long.MAX_VALUE ) ) )\n         {\n             return !cursor.next();\n         }\n@@ -466,7 +458,8 @@ public class NativeLabelScanStore implements LabelScanStore\n \n     @Override\n     public void stop()\n-    {   // Not needed\n+    {\n+    // Not needed\n     }\n \n     /**\n@@ -528,4 +521,4 @@ public class NativeLabelScanStore implements LabelScanStore\n             monitor.recoveryCleanupFailed( throwable );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "300",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "300",
                    "column": "183",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "433",
                    "column": "26",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "440",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "460",
                    "column": "173",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "29",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1425/NativeLabelScanStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1425/NativeLabelScanStore.java\nindex 324aadf58c3..992a76feaf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1425/NativeLabelScanStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1425/NativeLabelScanStore.java\n@@ -20,14 +20,12 @@\n package org.neo4j.kernel.impl.index.labelscan;\n \n import org.apache.commons.lang3.mutable.MutableBoolean;\n-\n import java.io.File;\n import java.io.IOException;\n import java.io.UncheckedIOException;\n import java.nio.file.NoSuchFileException;\n import java.util.function.Consumer;\n import java.util.function.IntFunction;\n-\n import org.neo4j.cursor.RawCursor;\n import org.neo4j.graphdb.ResourceIterator;\n import org.neo4j.index.internal.gbptree.GBPTree;\n@@ -48,9 +46,10 @@ import org.neo4j.kernel.impl.index.GBPTreeFileUtil;\n import org.neo4j.kernel.impl.store.UnderlyingStorageException;\n import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.storageengine.api.schema.LabelScanReader;\n-\n import static org.neo4j.helpers.collection.Iterators.asResourceIterator;\n+\n import static org.neo4j.helpers.collection.Iterators.iterator;\n+\n import static org.neo4j.kernel.impl.store.MetaDataStore.DEFAULT_NAME;\n \n /**\n@@ -75,6 +74,7 @@ import static org.neo4j.kernel.impl.store.MetaDataStore.DEFAULT_NAME;\n  * <p>\n  * This store is backed by a single store file \"neostore.labelscanstore.db\".\n  */\n+\n public class NativeLabelScanStore implements LabelScanStore\n {\n     /**\n@@ -174,16 +174,14 @@ public class NativeLabelScanStore implements LabelScanStore\n     /**\n      * Write rebuilding bit to header.\n      */\n-    private static final Consumer<PageCursor> needsRebuildingWriter =\n-            pageCursor -> pageCursor.putByte( NEEDS_REBUILDING );\n+    private static final Consumer<PageCursor> needsRebuildingWriter = pageCursor -> pageCursor.putByte( NEEDS_REBUILDING );\n \n     /**\n      * Write clean header.\n      */\n     private static final Consumer<PageCursor> writeClean = pageCursor -> pageCursor.putByte( CLEAN );\n \n-    public NativeLabelScanStore( PageCache pageCache, FileSystemAbstraction fs, File storeDir, FullStoreChangeStream fullStoreChangeStream,\n-            boolean readOnly, Monitors monitors, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector )\n+    public NativeLabelScanStore( PageCache pageCache, FileSystemAbstraction fs, File storeDir, FullStoreChangeStream fullStoreChangeStream, boolean readOnly, Monitors monitors, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector )\n     {\n         this( pageCache, fs, storeDir, fullStoreChangeStream, readOnly, monitors, recoveryCleanupWorkCollector,\n                 /*means no opinion about page size*/ 0 );\n@@ -192,9 +190,8 @@ public class NativeLabelScanStore implements LabelScanStore\n     /*\n      * Test access to be able to control page size.\n      */\n-    NativeLabelScanStore( PageCache pageCache, FileSystemAbstraction fs, File storeDir,\n-                FullStoreChangeStream fullStoreChangeStream, boolean readOnly, Monitors monitors,\n-                RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, int pageSize )\n+\n+    NativeLabelScanStore( PageCache pageCache, FileSystemAbstraction fs, File storeDir, FullStoreChangeStream fullStoreChangeStream, boolean readOnly, Monitors monitors, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector, int pageSize )\n     {\n         this.pageCache = pageCache;\n         this.fs = fs;\n@@ -215,6 +212,7 @@ public class NativeLabelScanStore implements LabelScanStore\n      * @param storeDir The store directory to use.\n      * @return the file backing the label scan store\n      */\n+\n     public static File getLabelScanStoreFile( File storeDir )\n     {\n         return new File( storeDir, FILE_NAME );\n@@ -226,6 +224,7 @@ public class NativeLabelScanStore implements LabelScanStore\n      * may internally batch updates so functionality isn't reliable. The only given is that readers will\n      * see at least updates from closed {@link LabelScanWriter writers}.\n      */\n+\n     @Override\n     public LabelScanReader newReader()\n     {\n@@ -240,6 +239,7 @@ public class NativeLabelScanStore implements LabelScanStore\n      * @throws IllegalStateException if someone else has already acquired a writer and hasn't yet\n      * called {@link LabelScanWriter#close()}.\n      */\n+\n     @Override\n     public LabelScanWriter newWriter()\n     {\n@@ -266,6 +266,7 @@ public class NativeLabelScanStore implements LabelScanStore\n      * @param limiter {@link IOLimiter}.\n      * @throws UnderlyingStorageException on failure writing changes to {@link PageCache}.\n      */\n+\n     @Override\n     public void force( IOLimiter limiter ) throws UnderlyingStorageException\n     {\n@@ -287,20 +288,16 @@ public class NativeLabelScanStore implements LabelScanStore\n         {\n             try\n             {\n-                return index.seek(\n-                        new LabelScanKey().set( labelId, 0 ),\n-                        new LabelScanKey().set( labelId, Long.MAX_VALUE ) );\n+                return index.seek( new LabelScanKey().set( labelId, 0 ), new LabelScanKey().set( labelId, Long.MAX_VALUE ) );\n             }\n             catch ( IOException e )\n             {\n                 throw new RuntimeException( e );\n             }\n         };\n-\n-        int highestLabelId = -1;\n-        try ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek(\n-                new LabelScanKey().set( Integer.MAX_VALUE, Long.MAX_VALUE ),\n-                new LabelScanKey().set( 0, -1 ) ) )\n+        int highestLabelId = - 1;\n+        try\n+        ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek( new LabelScanKey().set( Integer.MAX_VALUE, Long.MAX_VALUE ), new LabelScanKey().set( 0, - 1 ) ))\n         {\n             if ( cursor.next() )\n             {\n@@ -311,12 +308,14 @@ public class NativeLabelScanStore implements LabelScanStore\n         {\n             throw new RuntimeException( e );\n         }\n+\n         return new NativeAllEntriesLabelScanReader( seekProvider, highestLabelId );\n     }\n \n     /**\n      * @return store files, namely the single \"neostore.labelscanstore.db\" store file.\n      */\n+\n     @Override\n     public ResourceIterator<File> snapshotStoreFiles()\n     {\n@@ -328,17 +327,17 @@ public class NativeLabelScanStore implements LabelScanStore\n      *\n      * @throws IOException on {@link PageCache} exceptions.\n      */\n+\n     @Override\n     public void init() throws IOException\n     {\n         monitor.init();\n-\n         boolean storeExists = hasStore();\n         boolean isDirty;\n         try\n         {\n-            needsRebuild = !storeExists;\n-            if ( !storeExists )\n+            needsRebuild = ! storeExists;\n+            if ( ! storeExists )\n             {\n                 monitor.noIndex();\n             }\n@@ -353,15 +352,15 @@ public class NativeLabelScanStore implements LabelScanStore\n \n         writeMonitor = LabelScanWriteMonitor.ENABLED ? new LabelScanWriteMonitor( fs, storeDir ) : NativeLabelScanWriter.EMPTY;\n         singleWriter = new NativeLabelScanWriter( 1_000, writeMonitor );\n-\n         if ( isDirty )\n         {\n             monitor.notValidIndex();\n-            if ( !readOnly )\n+            if ( ! readOnly )\n             {\n                 dropStrict();\n                 instantiateTree();\n             }\n+\n             needsRebuild = true;\n         }\n     }\n@@ -381,15 +380,14 @@ public class NativeLabelScanStore implements LabelScanStore\n     /**\n      * @return true if instantiated tree needs to be rebuilt.\n      */\n+\n     private boolean instantiateTree() throws IOException\n     {\n         monitors.addMonitorListener( treeMonitor() );\n         GBPTree.Monitor monitor = monitors.newMonitor( GBPTree.Monitor.class );\n         MutableBoolean isRebuilding = new MutableBoolean();\n-        Header.Reader readRebuilding =\n-                headerData -> isRebuilding.setValue( headerData.get() == NEEDS_REBUILDING );\n-        index = new GBPTree<>( pageCache, storeFile, new LabelScanLayout(), pageSize, monitor, readRebuilding,\n-                needsRebuildingWriter, recoveryCleanupWorkCollector );\n+        Header.Reader readRebuilding = headerData -> isRebuilding.setValue( headerData.get() == NEEDS_REBUILDING );\n+        index = new GBPTree<>( pageCache, storeFile, new LabelScanLayout(), pageSize, monitor, readRebuilding, needsRebuildingWriter, recoveryCleanupWorkCollector );\n         return isRebuilding.getValue();\n     }\n \n@@ -418,6 +416,7 @@ public class NativeLabelScanStore implements LabelScanStore\n             index.close();\n             index = null;\n         }\n+\n         gbpTreeUtil.deleteFile( storeFile );\n     }\n \n@@ -427,22 +426,23 @@ public class NativeLabelScanStore implements LabelScanStore\n      *\n      * @throws IOException on {@link PageCache} exceptions.\n      */\n+\n     @Override\n     public void start() throws IOException\n     {\n-        if ( needsRebuild && !readOnly )\n+        if ( needsRebuild&& ! readOnly )\n         {\n             monitor.rebuilding();\n             long numberOfNodes;\n \n             // Intentionally ignore read-only flag here when rebuilding.\n-            try ( LabelScanWriter writer = writer() )\n+            try\n+            ( LabelScanWriter writer = writer())\n             {\n                 numberOfNodes = fullStoreChangeStream.applyTo( writer );\n             }\n \n             index.checkpoint( IOLimiter.unlimited(), writeClean );\n-\n             monitor.rebuilt( numberOfNodes );\n             needsRebuild = false;\n         }\n@@ -456,11 +456,10 @@ public class NativeLabelScanStore implements LabelScanStore\n     @Override\n     public boolean isEmpty() throws IOException\n     {\n-        try ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek(\n-                new LabelScanKey( 0, 0 ),\n-                new LabelScanKey( Integer.MAX_VALUE, Long.MAX_VALUE ) ) )\n+        try\n+            ( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor = index.seek( new LabelScanKey( 0, 0 ), new LabelScanKey( Integer.MAX_VALUE, Long.MAX_VALUE ) ))\n         {\n-            return !cursor.next();\n+            return ! cursor.next();\n         }\n     }\n \n@@ -474,6 +473,7 @@ public class NativeLabelScanStore implements LabelScanStore\n      *\n      * @throws IOException on {@link PageCache} exceptions.\n      */\n+\n     @Override\n     public void shutdown() throws IOException\n     {\n@@ -493,7 +493,7 @@ public class NativeLabelScanStore implements LabelScanStore\n \n     public boolean isDirty()\n     {\n-        return index == null || index.wasDirtyOnStartup();\n+        return index == null|| index.wasDirtyOnStartup();\n     }\n \n     private class LabelIndexTreeMonitor extends GBPTree.Monitor.Adaptor\n@@ -528,4 +528,4 @@ public class NativeLabelScanStore implements LabelScanStore\n             monitor.recoveryCleanupFailed( throwable );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
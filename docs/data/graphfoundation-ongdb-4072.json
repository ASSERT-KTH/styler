{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4072",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4072/PrimitiveLongIntHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4072/PrimitiveLongIntHashMap.java\nindex 0c8b98d870f..ef25b6367ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4072/PrimitiveLongIntHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4072/PrimitiveLongIntHashMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive.hopscotch;\n \n import org.neo4j.collection.primitive.PrimitiveLongIntMap;\n@@ -27,156 +28,156 @@ import static org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm\n \n public class PrimitiveLongIntHashMap extends AbstractLongHopScotchCollection<int[]> implements PrimitiveLongIntMap\n {\n-    private final int[] transport = new int[1];\n-    private final Monitor monitor;\n-\n-    public PrimitiveLongIntHashMap( Table<int[]> table, Monitor monitor )\n+  private final int[] transport = new int[1];\n+  private final Monitor monitor;\n+\n+  public PrimitiveLongIntHashMap(Table<int[]> table, Monitor monitor)\n+  {\n+    super(table);\n+    this.monitor = monitor;\n+  }\n+\n+  @Override\n+  public int put(long key, int value)\n+  {\n+    return unpack(HopScotchHashingAlgorithm.put(table, monitor, DEFAULT_HASHING, key, pack(value), this));\n+  }\n+\n+  @Override\n+  public boolean containsKey(long key)\n+  {\n+    return HopScotchHashingAlgorithm.get(table, monitor, DEFAULT_HASHING, key) != null;\n+  }\n+\n+  @Override\n+  public int get(long key)\n+  {\n+    return unpack(HopScotchHashingAlgorithm.get(table, monitor, DEFAULT_HASHING, key));\n+  }\n+\n+  @Override\n+  public int remove(long key)\n+  {\n+    return unpack(HopScotchHashingAlgorithm.remove(table, monitor, DEFAULT_HASHING, key));\n+  }\n+\n+  @Override\n+  public int size()\n+  {\n+    return table.size();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return table.toString();\n+  }\n+\n+  private int[] pack(int value)\n+  {\n+    transport[0] = value;\n+    return transport;\n+  }\n+\n+  private int unpack(int[] result)\n+  {\n+    return result != null ? result[0] : LongKeyIntValueTable.NULL;\n+  }\n+\n+  @Override\n+  public <E extends Exception> void visitEntries(PrimitiveLongIntVisitor<E> visitor) throws E\n+  {\n+    long nullKey = table.nullKey();\n+    int capacity = table.capacity();\n+    for (int i = 0; i < capacity; i++)\n     {\n-        super( table );\n-        this.monitor = monitor;\n+      int[] value = table.value(i);\n+      if (value != null)\n+      {\n+        long key = table.key(i);\n+        if (key != nullKey && visitor.visited(key, value[0]))\n+        {\n+          return;\n+        }\n+      }\n     }\n+  }\n \n-    @Override\n-    public int put( long key, int value )\n+  @SuppressWarnings(\"EqualsWhichDoesntCheckParameterClass\") // yes it does\n+  @Override\n+  public boolean equals(Object other)\n+  {\n+    if (typeAndSizeEqual(other))\n     {\n-        return unpack( HopScotchHashingAlgorithm.put( table, monitor, DEFAULT_HASHING, key, pack( value ), this ) );\n+      PrimitiveLongIntHashMap that = (PrimitiveLongIntHashMap) other;\n+      LongIntEquality equality = new LongIntEquality(that);\n+      visitEntries(equality);\n+      return equality.isEqual();\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public boolean containsKey( long key )\n-    {\n-        return HopScotchHashingAlgorithm.get( table, monitor, DEFAULT_HASHING, key ) != null;\n-    }\n+  private static class LongIntEquality implements PrimitiveLongIntVisitor<RuntimeException>\n+  {\n+    private PrimitiveLongIntHashMap other;\n+    private boolean equal = true;\n \n-    @Override\n-    public int get( long key )\n+    LongIntEquality(PrimitiveLongIntHashMap that)\n     {\n-        return unpack( HopScotchHashingAlgorithm.get( table, monitor, DEFAULT_HASHING, key ) );\n+      this.other = that;\n     }\n \n     @Override\n-    public int remove( long key )\n+    public boolean visited(long key, int value)\n     {\n-        return unpack( HopScotchHashingAlgorithm.remove( table, monitor, DEFAULT_HASHING, key ) );\n+      equal = other.get(key) == value;\n+      return !equal;\n     }\n \n-    @Override\n-    public int size()\n+    public boolean isEqual()\n     {\n-        return table.size();\n+      return equal;\n     }\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return table.toString();\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    HashCodeComputer hash = new HashCodeComputer();\n+    visitEntries(hash);\n+    return hash.hashCode();\n+  }\n \n-    private int[] pack( int value )\n-    {\n-        transport[0] = value;\n-        return transport;\n-    }\n-\n-    private int unpack( int[] result )\n-    {\n-        return result != null ? result[0] : LongKeyIntValueTable.NULL;\n-    }\n-\n-    @Override\n-    public <E extends Exception> void visitEntries( PrimitiveLongIntVisitor<E> visitor ) throws E\n-    {\n-        long nullKey = table.nullKey();\n-        int capacity = table.capacity();\n-        for ( int i = 0; i < capacity; i++ )\n-        {\n-            int[] value = table.value( i );\n-            if ( value != null )\n-            {\n-                long key = table.key( i );\n-                if ( key != nullKey && visitor.visited( key, value[0] ) )\n-                {\n-                    return;\n-                }\n-            }\n-        }\n-    }\n+  private static class HashCodeComputer implements PrimitiveLongIntVisitor<RuntimeException>\n+  {\n+    private int hash = 1337;\n \n-    @SuppressWarnings( \"EqualsWhichDoesntCheckParameterClass\" ) // yes it does\n     @Override\n-    public boolean equals( Object other )\n-    {\n-        if ( typeAndSizeEqual( other ) )\n-        {\n-            PrimitiveLongIntHashMap that = (PrimitiveLongIntHashMap) other;\n-            LongIntEquality equality = new LongIntEquality( that );\n-            visitEntries( equality );\n-            return equality.isEqual();\n-        }\n-        return false;\n-    }\n-\n-    private static class LongIntEquality implements PrimitiveLongIntVisitor<RuntimeException>\n+    public boolean visited(long key, int value) throws RuntimeException\n     {\n-        private PrimitiveLongIntHashMap other;\n-        private boolean equal = true;\n-\n-        LongIntEquality( PrimitiveLongIntHashMap that )\n-        {\n-            this.other = that;\n-        }\n-\n-        @Override\n-        public boolean visited( long key, int value )\n-        {\n-            equal = other.get( key ) == value;\n-            return !equal;\n-        }\n-\n-        public boolean isEqual()\n-        {\n-            return equal;\n-        }\n+      hash += DEFAULT_HASHING.hashSingleValueToInt(key + DEFAULT_HASHING.hashSingleValueToInt(value));\n+      return false;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        HashCodeComputer hash = new HashCodeComputer();\n-        visitEntries( hash );\n-        return hash.hashCode();\n+      return hash;\n     }\n \n-    private static class HashCodeComputer implements PrimitiveLongIntVisitor<RuntimeException>\n+    @Override\n+    public boolean equals(Object o)\n     {\n-        private int hash = 1337;\n-\n-        @Override\n-        public boolean visited( long key, int value ) throws RuntimeException\n-        {\n-            hash += DEFAULT_HASHING.hashSingleValueToInt( key + DEFAULT_HASHING.hashSingleValueToInt( value ) );\n-            return false;\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return hash;\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            HashCodeComputer that = (HashCodeComputer) o;\n-            return hash == that.hash;\n-        }\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      HashCodeComputer that = (HashCodeComputer) o;\n+      return hash == that.hash;\n     }\n+  }\n }\n",
            "diff_size": 203
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
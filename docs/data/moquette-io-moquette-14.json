{
    "project_name": "moquette-io-moquette",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "warning",
                "message": "missing copyright header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "package io.moquette.broker;\n\nimport java.util.Objects;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler/14/ClientDescriptor.java\nindex 6cca2f631a0..bc5e12a2242 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler/14/ClientDescriptor.java\n@@ -1,4 +1,4 @@\n-package io.moquette.broker;\n+package io .moquette.broker;\n \n import java.util.Objects;\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/intellij/14/ClientDescriptor.java\nindex 6cca2f631a0..ca1303c3fa5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/intellij/14/ClientDescriptor.java\n@@ -4,49 +4,53 @@ import java.util.Objects;\n \n public class ClientDescriptor {\n \n-    private final String clientID;\n-    private final String address;\n-    private final int port;\n-\n-    ClientDescriptor(String clientID, String address, int port) {\n-        this.clientID = clientID;\n-        this.address = address;\n-        this.port = port;\n+  private final String clientID;\n+  private final String address;\n+  private final int port;\n+\n+  ClientDescriptor(String clientID, String address, int port) {\n+    this.clientID = clientID;\n+    this.address = address;\n+    this.port = port;\n+  }\n+\n+  public String getClientID() {\n+    return clientID;\n+  }\n+\n+  public String getAddress() {\n+    return address;\n+  }\n+\n+  public int getPort() {\n+    return port;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n     }\n-\n-    public String getClientID() {\n-        return clientID;\n-    }\n-\n-    public String getAddress() {\n-        return address;\n-    }\n-\n-    public int getPort() {\n-        return port;\n-    }\n-\n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (o == null || getClass() != o.getClass()) return false;\n-        ClientDescriptor that = (ClientDescriptor) o;\n-        return port == that.port &&\n-            Objects.equals(clientID, that.clientID) &&\n-            Objects.equals(address, that.address);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(clientID, address, port);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"ClientDescriptor{\" +\n-            \"clientID='\" + clientID + '\\'' +\n-            \", address='\" + address + '\\'' +\n-            \", port=\" + port +\n-            '}';\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n+    ClientDescriptor that = (ClientDescriptor) o;\n+    return port == that.port &&\n+        Objects.equals(clientID, that.clientID) &&\n+        Objects.equals(address, that.address);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(clientID, address, port);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"ClientDescriptor{\" +\n+        \"clientID='\" + clientID + '\\'' +\n+        \", address='\" + address + '\\'' +\n+        \", port=\" + port +\n+        '}';\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/naturalize/14/ClientDescriptor.java\nindex 6cca2f631a0..14712e05057 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/naturalize/14/ClientDescriptor.java\n@@ -28,12 +28,12 @@ public class ClientDescriptor {\n \n     @Override\n     public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (o == null || getClass() != o.getClass()) return false;\n+        if (this == o)\n+    return true;\n+        if (o == null || getClass() != o.getClass())\n+    return false;\n         ClientDescriptor that = (ClientDescriptor) o;\n-        return port == that.port &&\n-            Objects.equals(clientID, that.clientID) &&\n-            Objects.equals(address, that.address);\n+        return port == that.port && Objects.equals(clientID, that.clientID) && Objects.equals(address, that.address);\n     }\n \n     @Override\n@@ -43,10 +43,6 @@ public class ClientDescriptor {\n \n     @Override\n     public String toString() {\n-        return \"ClientDescriptor{\" +\n-            \"clientID='\" + clientID + '\\'' +\n-            \", address='\" + address + '\\'' +\n-            \", port=\" + port +\n-            '}';\n+        return \"ClientDescriptor{\" + \"clientID='\" + clientID + '\\'' + \", address='\" + address + '\\'' + \", port=\" + port + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/codebuff/14/ClientDescriptor.java\nindex 6cca2f631a0..b479416c36c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/codebuff/14/ClientDescriptor.java\n@@ -2,6 +2,7 @@ package io.moquette.broker;\n \n import java.util.Objects;\n \n+\n public class ClientDescriptor {\n \n     private final String clientID;\n@@ -28,12 +29,12 @@ public class ClientDescriptor {\n \n     @Override\n     public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (o == null || getClass() != o.getClass()) return false;\n+        if (this == o)\n+            return true;\n+        if (o == null || getClass() != o.getClass())\n+            return false;\n         ClientDescriptor that = (ClientDescriptor) o;\n-        return port == that.port &&\n-            Objects.equals(clientID, that.clientID) &&\n-            Objects.equals(address, that.address);\n+        return port == that.port && Objects.equals(clientID, that.clientID) && Objects.equals(address, that.address);\n     }\n \n     @Override\n@@ -43,10 +44,6 @@ public class ClientDescriptor {\n \n     @Override\n     public String toString() {\n-        return \"ClientDescriptor{\" +\n-            \"clientID='\" + clientID + '\\'' +\n-            \", address='\" + address + '\\'' +\n-            \", port=\" + port +\n-            '}';\n+        return \"ClientDescriptor{\" + \"clientID='\" + clientID + '\\'' + \", address='\" + address + '\\'' + \", port=\" + port + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler_random/14/ClientDescriptor.java\nindex 6cca2f631a0..831b457b140 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler_random/14/ClientDescriptor.java\n@@ -1,6 +1,7 @@\n-package io.moquette.broker;\n+package\n+        io.moquette.broker;\n \n-import java.util.Objects;\n+ import java.util.Objects;\n \n public class ClientDescriptor {\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler_three_grams/14/ClientDescriptor.java\nindex 6cca2f631a0..bc5e12a2242 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/14/ClientDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler_three_grams/14/ClientDescriptor.java\n@@ -1,4 +1,4 @@\n-package io.moquette.broker;\n+package io .moquette.broker;\n \n import java.util.Objects;\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
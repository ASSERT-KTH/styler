{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "310",
    "information": {
        "errors": [
            {
                "line": "140",
                "column": "5",
                "severity": "error",
                "message": "'{' at column 5 should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "     */\n    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n    {\n        // verify the required parameter 'DestPath' is set\n        if (getDestPath() == null) {\n            throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'DestPath' when calling moveFolder\");",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/310/MoveFolderRequest.java\nindex a3ace6800e7..f5e532b0b9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/310/MoveFolderRequest.java\n@@ -136,8 +136,7 @@ public class MoveFolderRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'DestPath' is set\n         if (getDestPath() == null) {\n             throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'DestPath' when calling moveFolder\");\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/310/MoveFolderRequest.java\nindex a3ace6800e7..4c5021b1476 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/310/MoveFolderRequest.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -30,6 +30,7 @@ package com.aspose.words.cloud.model.requests;\n import com.aspose.words.cloud.*;\n import com.aspose.words.cloud.model.*;\n import com.squareup.okhttp.*;\n+\n import java.io.*;\n import java.lang.reflect.Type;\n import java.util.*;\n@@ -136,8 +137,7 @@ public class MoveFolderRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'DestPath' is set\n         if (getDestPath() == null) {\n             throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'DestPath' when calling moveFolder\");\n@@ -171,8 +171,8 @@ public class MoveFolderRequest implements RequestIfc {\n                 public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {\n                     com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());\n                     return originalResponse.newBuilder()\n-                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))\n-                    .build();\n+                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))\n+                        .build();\n                 }\n             });\n         }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/310/MoveFolderRequest.java\nindex a3ace6800e7..ca2d6a24ddd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/310/MoveFolderRequest.java\n@@ -136,8 +136,7 @@ public class MoveFolderRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'DestPath' is set\n         if (getDestPath() == null) {\n             throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'DestPath' when calling moveFolder\");\n@@ -186,4 +185,4 @@ public class MoveFolderRequest implements RequestIfc {\n     public Type getResponseType() {\n         return null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/310/MoveFolderRequest.java\nindex a3ace6800e7..98ec0348e45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/310/MoveFolderRequest.java\n@@ -26,7 +26,6 @@\n  */\n \n package com.aspose.words.cloud.model.requests;\n-\n import com.aspose.words.cloud.*;\n import com.aspose.words.cloud.model.*;\n import com.squareup.okhttp.*;\n@@ -37,26 +36,35 @@ import java.util.*;\n /*\n  * Request model for moveFolder operation.\n  */\n+\n+\n public class MoveFolderRequest implements RequestIfc {\n     /*\n      * Destination folder path to move to e.g '/dst'.\n      */\n-    private String destPath;\n+\n+  private String destPath;\n \n     /*\n      * Source folder path e.g. /Folder1.\n      */\n-    private String srcPath;\n+\n+\n+  private String srcPath;\n \n     /*\n      * Source storage name.\n      */\n-    private String srcStorageName;\n+\n+\n+  private String srcStorageName;\n \n     /*\n      * Destination storage name.\n      */\n-    private String destStorageName;\n+\n+\n+  private String destStorageName;\n \n     /*\n      * Initializes a new instance of the MoveFolderRequest class.\n@@ -66,68 +74,79 @@ public class MoveFolderRequest implements RequestIfc {\n      * @param String srcStorageName Source storage name.\n      * @param String destStorageName Destination storage name.\n      */\n-    public MoveFolderRequest(String destPath, String srcPath, String srcStorageName, String destStorageName) {\n-        this.destPath = destPath;\n-        this.srcPath = srcPath;\n-        this.srcStorageName = srcStorageName;\n-        this.destStorageName = destStorageName;\n-    }\n+\n+\n+  public MoveFolderRequest(String destPath,  String srcPath,  String srcStorageName,  String destStorageName) {\n+    this.destPath = destPath;\n+    this.srcPath = srcPath;\n+    this.srcStorageName = srcStorageName;\n+    this.destStorageName = destStorageName;\n+  }\n \n     /*\n      * Gets Destination folder path to move to e.g '/dst'.\n      */\n-    public String getDestPath() {\n-        return this.destPath;\n-    }\n+\n+\n+  public String getDestPath() {\n+    return this.destPath;\n+  }\n \n     /*\n      * Sets Destination folder path to move to e.g '/dst'.\n      */\n-    public void setDestPath(String value) {\n-        this.destPath = value;\n-    }\n+\n+  public void setDestPath(String value) {\n+    this.destPath = value;\n+  }\n \n     /*\n      * Gets Source folder path e.g. /Folder1.\n      */\n-    public String getSrcPath() {\n-        return this.srcPath;\n-    }\n+\n+  public String getSrcPath() {\n+    return this.srcPath;\n+  }\n \n     /*\n      * Sets Source folder path e.g. /Folder1.\n      */\n-    public void setSrcPath(String value) {\n-        this.srcPath = value;\n-    }\n+\n+  public void setSrcPath(String value) {\n+    this.srcPath = value;\n+  }\n \n     /*\n      * Gets Source storage name.\n      */\n-    public String getSrcStorageName() {\n-        return this.srcStorageName;\n-    }\n+\n+  public String getSrcStorageName() {\n+    return this.srcStorageName;\n+  }\n \n     /*\n      * Sets Source storage name.\n      */\n-    public void setSrcStorageName(String value) {\n-        this.srcStorageName = value;\n-    }\n+\n+  public void setSrcStorageName(String value) {\n+    this.srcStorageName = value;\n+  }\n \n     /*\n      * Gets Destination storage name.\n      */\n-    public String getDestStorageName() {\n-        return this.destStorageName;\n-    }\n+\n+  public String getDestStorageName() {\n+    return this.destStorageName;\n+  }\n \n     /*\n      * Sets Destination storage name.\n      */\n-    public void setDestStorageName(String value) {\n-        this.destStorageName = value;\n-    }\n+\n+  public void setDestStorageName(String value) {\n+    this.destStorageName = value;\n+  }\n \n     /*\n      * Creates the http request based on this request model.\n@@ -136,54 +155,52 @@ public class MoveFolderRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+\n+  public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener,  Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'DestPath' is set\n-        if (getDestPath() == null) {\n-            throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'DestPath' when calling moveFolder\");\n-        }\n+    if (getDestPath() == null) {\n+      throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'DestPath' when calling moveFolder\");\n+    }\n \n         // verify the required parameter 'SrcPath' is set\n-        if (getSrcPath() == null) {\n-            throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'SrcPath' when calling moveFolder\");\n-        }\n+    if (getSrcPath() == null) {\n+      throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'SrcPath' when calling moveFolder\");\n+    }\n \n-        Object localVarPostBody = null;\n+    Object localVarPostBody = null;\n \n         // create path and map variables\n-        String localVarPath = \"/words/storage/folder/move/{srcPath}\";\n-        localVarPath = apiClient.addParameterToPath(localVarPath, \"srcPath\", getSrcPath());\n-        localVarPath = localVarPath.replaceAll(\"//\", \"/\");\n-\n-        List<Pair> localVarQueryParams = new ArrayList<Pair>();\n-        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();\n-        apiClient.addParameterToQuery(localVarQueryParams, \"destPath\", getDestPath());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"srcStorageName\", getSrcStorageName());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"destStorageName\", getDestStorageName());\n-\n-        Map<String, String> localVarHeaderParams = new HashMap<String, String>();\n-\n-        Map<String, Object> localVarFormParams = new LinkedHashMap<String, Object>();\n-\n-        if (progressListener != null) {\n-            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {\n-                @Override\n-                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {\n-                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());\n-                    return originalResponse.newBuilder()\n-                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))\n-                    .build();\n-                }\n-            });\n-        }\n-\n-        return apiClient.buildRequest(localVarPath, \"PUT\", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, addAuthHeaders, progressRequestListener);\n+    String localVarPath = \"/words/storage/folder/move/{srcPath}\";\n+    localVarPath = apiClient.addParameterToPath(localVarPath, \"srcPath\", getSrcPath());\n+    localVarPath = localVarPath.replaceAll(\"//\", \"/\");\n+\n+    List<Pair> localVarQueryParams = new ArrayList<Pair>();\n+    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();\n+    apiClient.addParameterToQuery(localVarQueryParams, \"destPath\", getDestPath());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"srcStorageName\", getSrcStorageName());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"destStorageName\", getDestStorageName());\n+\n+    Map<String, String> localVarHeaderParams = new HashMap<String, String>();\n+    Map<String, Object> localVarFormParams = new LinkedHashMap<String, Object>();\n+    if (progressListener != null) {\n+        apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {\n+          @Override\n+          public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {\n+            com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());\n+            return originalResponse.newBuilder().body(new ProgressResponseBody(originalResponse.body(), progressListener))\n+                                                .build();\n+          }\n+        });\n     }\n+    return apiClient.buildRequest(localVarPath, \"PUT\", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, addAuthHeaders, progressRequestListener);\n+  }\n \n     /*\n      * Gets response type for this request.\n      */\n-    public Type getResponseType() {\n-        return null;\n-    }\n-}\n+\n+  public Type getResponseType() {\n+    return null;\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 99
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/310/MoveFolderRequest.java\nindex a3ace6800e7..f5e532b0b9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/310/MoveFolderRequest.java\n@@ -136,8 +136,7 @@ public class MoveFolderRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'DestPath' is set\n         if (getDestPath() == null) {\n             throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'DestPath' when calling moveFolder\");\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/310/MoveFolderRequest.java\nindex a3ace6800e7..f5e532b0b9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/310/MoveFolderRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/310/MoveFolderRequest.java\n@@ -136,8 +136,7 @@ public class MoveFolderRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'DestPath' is set\n         if (getDestPath() == null) {\n             throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'DestPath' when calling moveFolder\");\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "142",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 199).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    /**\n     * @param values - a map<String, Element>, the key is a part name (without curly braces), the value the replacement value for the part name. If the value is not a simple type, it will be skipped.\n     * @return the encoded params\n     */\n    public String transform(Map<String, Element> values) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/142/URLEncodedTransformer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/142/URLEncodedTransformer.java\nindex 985e3245bb7..f0feb7cf063 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/142/URLEncodedTransformer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/142/URLEncodedTransformer.java\n@@ -39,41 +39,43 @@ import java.util.ArrayList;\n public class URLEncodedTransformer {\n \n \n-    private static final Log log = LogFactory.getLog(URLEncodedTransformer.class);\n+  private static final Log log = LogFactory.getLog(URLEncodedTransformer.class);\n \n-    /**\n-     * @param values - a map<String, Element>, the key is a part name (without curly braces), the value the replacement value for the part name. If the value is not a simple type, it will be skipped.\n-     * @return the encoded params\n-     */\n-    public String transform(Map<String, Element> values) {\n-        if (values.isEmpty()) return null;\n-        List<NameValuePair> l = new ArrayList<NameValuePair>(values.size());\n-        for (Map.Entry<String, Element> e : values.entrySet()) {\n-            String partName = e.getKey();\n-            Element value = e.getValue();\n-            String textValue;\n-            if (DOMUtils.isEmptyElement(value)) {\n-                textValue = \"\";\n-            } else {\n+  /**\n+   * @param values - a map<String, Element>, the key is a part name (without curly braces), the value the replacement value for the part name. If the value is not a simple type, it will be skipped.\n+   * @return the encoded params\n+   */\n+  public String transform(Map<String, Element> values) {\n+    if (values.isEmpty()) {\n+      return null;\n+    }\n+    List<NameValuePair> l = new ArrayList<NameValuePair>(values.size());\n+    for (Map.Entry<String, Element> e : values.entrySet()) {\n+      String partName = e.getKey();\n+      Element value = e.getValue();\n+      String textValue;\n+      if (DOMUtils.isEmptyElement(value)) {\n+        textValue = \"\";\n+      } else {\n                 /*\n                 The expected part value could be a simple type\n                 or an element of a simple type.\n                 So if a element is there, take its text content\n                 else take the text content of the part element itself\n                 */\n-                Element childElement = DOMUtils.getFirstChildElement(value);\n-                if (childElement != null) {\n-                    textValue = DOMUtils.getTextContent(childElement);\n-                } else {\n-                    textValue = DOMUtils.getTextContent(value);\n-                }\n-            }\n-            // if it is not a simple type, skip it\n-            if (textValue != null) {\n-                l.add(new NameValuePair(e.getKey(), textValue));\n-            }\n+        Element childElement = DOMUtils.getFirstChildElement(value);\n+        if (childElement != null) {\n+          textValue = DOMUtils.getTextContent(childElement);\n+        } else {\n+          textValue = DOMUtils.getTextContent(value);\n         }\n-        return EncodingUtil.formUrlEncode(l.toArray(new NameValuePair[0]), \"UTF-8\");\n+      }\n+      // if it is not a simple type, skip it\n+      if (textValue != null) {\n+        l.add(new NameValuePair(e.getKey(), textValue));\n+      }\n     }\n+    return EncodingUtil.formUrlEncode(l.toArray(new NameValuePair[0]), \"UTF-8\");\n+  }\n \n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/142/URLEncodedTransformer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/142/URLEncodedTransformer.java\nindex 985e3245bb7..d5265aca947 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/142/URLEncodedTransformer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/142/URLEncodedTransformer.java\n@@ -76,4 +76,4 @@ public class URLEncodedTransformer {\n         return EncodingUtil.formUrlEncode(l.toArray(new NameValuePair[0]), \"UTF-8\");\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
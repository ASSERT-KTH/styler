{
    "project_name": "neo4j-neo4j",
    "error_id": "81",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "202",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/81/BoltQueryExecutionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/81/BoltQueryExecutionImpl.java\nindex 2ebede7ec6e..b7662c4a9c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/81/BoltQueryExecutionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/81/BoltQueryExecutionImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.bolt;\n \n import reactor.core.publisher.Flux;\n@@ -48,13 +49,13 @@ public class BoltQueryExecutionImpl implements BoltQueryExecution\n     private final QueryExecutionImpl queryExecution;\n     private final QuerySubscriber subscriber;\n \n-    public BoltQueryExecutionImpl( StatementResult statementResult, QuerySubscriber subscriber, FabricConfig fabricConfig )\n+    public BoltQueryExecutionImpl(StatementResult statementResult, QuerySubscriber subscriber, FabricConfig fabricConfig)\n     {\n         this.subscriber = subscriber;\n         var config = fabricConfig.getDataStream();\n-        var rx2SyncStream = new Rx2SyncStream( statementResult.records(), config.getBatchSize() );\n+        var rx2SyncStream = new Rx2SyncStream(statementResult.records(), config.getBatchSize());\n         queryExecution =\n-                new QueryExecutionImpl( rx2SyncStream, subscriber, statementResult.columns(), statementResult.summary(), statementResult.executionType() );\n+          new QueryExecutionImpl(rx2SyncStream, subscriber, statementResult.columns(), statementResult.summary(), statementResult.executionType());\n     }\n \n     public void initialize() throws Exception\n@@ -68,15 +69,15 @@ public class BoltQueryExecutionImpl implements BoltQueryExecution\n \n         boolean triggerArtificialDemand = isWriteOnly || isExplain || noResult;\n \n-        if ( triggerArtificialDemand )\n+        if (triggerArtificialDemand)\n         {\n-            queryExecution.request( 1 );\n+            queryExecution.request(1);\n             queryExecution.await();\n         }\n \n-        if ( subscriber instanceof ResultSubscriber && (!isReadOnly || isExplain) )\n+        if (subscriber instanceof ResultSubscriber && (!isReadOnly || isExplain))\n         {\n-            ((ResultSubscriber) subscriber).materialize( queryExecution );\n+            ((ResultSubscriber) subscriber).materialize(queryExecution);\n         }\n     }\n \n@@ -109,8 +110,8 @@ public class BoltQueryExecutionImpl implements BoltQueryExecution\n         private final Mono<QueryExecutionType> queryExecutionType;\n         private final Supplier<List<String>> columns;\n \n-        private QueryExecutionImpl( Rx2SyncStream rx2SyncStream, QuerySubscriber subscriber, Flux<String> columns, Mono<Summary> summary,\n-                                    Mono<QueryExecutionType> queryExecutionType )\n+        private QueryExecutionImpl(Rx2SyncStream rx2SyncStream, QuerySubscriber subscriber, Flux<String> columns, Mono<Summary> summary,\n+                                   Mono<QueryExecutionType> queryExecutionType)\n         {\n             this.rx2SyncStream = rx2SyncStream;\n             this.subscriber = subscriber;\n@@ -120,9 +121,9 @@ public class BoltQueryExecutionImpl implements BoltQueryExecution\n             AtomicReference<List<String>> columnsStore = new AtomicReference<>();\n             this.columns = () ->\n             {\n-                if ( columnsStore.get() == null )\n+                if (columnsStore.get() == null)\n                 {\n-                    columnsStore.compareAndSet( null, columns.collectList().block() );\n+                    columnsStore.compareAndSet(null, columns.collectList().block());\n                 }\n \n                 return columnsStore.get();\n@@ -155,61 +156,60 @@ public class BoltQueryExecutionImpl implements BoltQueryExecution\n         @Override\n         public String[] fieldNames()\n         {\n-            return columns.get().toArray( new String[0] );\n+            return columns.get().toArray(new String[0]);\n         }\n \n         @Override\n-        public void request( long numberOfRecords ) throws Exception\n+        public void request(long numberOfRecords) throws Exception\n         {\n-            if ( !hasMore )\n+            if (!hasMore)\n             {\n                 return;\n             }\n \n-            if ( !initialised )\n+            if (!initialised)\n             {\n                 initialised = true;\n-                subscriber.onResult( columns.get().size() );\n+                subscriber.onResult(columns.get().size());\n             }\n \n             try\n             {\n-                for ( int i = 0; i < numberOfRecords; i++ )\n+                for (int i = 0; i < numberOfRecords; i++)\n                 {\n                     Record record = rx2SyncStream.readRecord();\n \n-                    if ( record == null )\n+                    if (record == null)\n                     {\n                         hasMore = false;\n-                        subscriber.onResultCompleted( getSummary().getQueryStatistics() );\n+                        subscriber.onResultCompleted(getSummary().getQueryStatistics());\n                         return;\n                     }\n \n                     subscriber.onRecord();\n-                    publishFields( record );\n+                    publishFields(record);\n                     subscriber.onRecordCompleted();\n                 }\n \n                 // Let's check if the last record exhausted the stream,\n                 // This is not necessary for correctness, but might save one extra\n                 // round trip.\n-                if ( rx2SyncStream.completed() )\n+                if (rx2SyncStream.completed())\n                 {\n                     hasMore = false;\n-                    subscriber.onResultCompleted( getSummary().getQueryStatistics() );\n+                    subscriber.onResultCompleted(getSummary().getQueryStatistics());\n                 }\n-            }\n-            catch ( Exception e )\n+            } catch (Exception e)\n             {\n-                throw Exceptions.transform( Status.Statement.ExecutionFailed, e );\n+                throw Exceptions.transform(Status.Statement.ExecutionFailed, e);\n             }\n         }\n \n-        private void publishFields( Record record ) throws Exception\n+        private void publishFields(Record record) throws Exception\n         {\n-            for ( int i = 0; i < columns.get().size(); i++ )\n+            for (int i = 0; i < columns.get().size(); i++)\n             {\n-                subscriber.onField( i, record.getValue( i ) );\n+                subscriber.onField(i, record.getValue(i));\n             }\n         }\n \n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/81/BoltQueryExecutionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/81/BoltQueryExecutionImpl.java\nindex 2ebede7ec6e..d2fa44145c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/81/BoltQueryExecutionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/81/BoltQueryExecutionImpl.java\n@@ -109,9 +109,8 @@ public class BoltQueryExecutionImpl implements BoltQueryExecution\n         private final Mono<QueryExecutionType> queryExecutionType;\n         private final Supplier<List<String>> columns;\n \n-        private QueryExecutionImpl( Rx2SyncStream rx2SyncStream, QuerySubscriber subscriber, Flux<String> columns, Mono<Summary> summary,\n-                                    Mono<QueryExecutionType> queryExecutionType )\n-        {\n+        private QueryExecutionImpl( Rx2SyncStream rx2SyncStream, QuerySubscriber subscriber, Flux<String> columns, Mono<Summary> summary, Mono<QueryExecutionType> queryExecutionType )\n+{\n             this.rx2SyncStream = rx2SyncStream;\n             this.subscriber = subscriber;\n             this.summary = summary;\n@@ -225,4 +224,4 @@ public class BoltQueryExecutionImpl implements BoltQueryExecution\n             return hasMore;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
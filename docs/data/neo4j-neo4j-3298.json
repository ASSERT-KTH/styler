{
    "project_name": "neo4j-neo4j",
    "error_id": "3298",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3298/RelationshipGroupRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3298/RelationshipGroupRecordFormat.java\nindex 34a346b972b..910389aedf5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3298/RelationshipGroupRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3298/RelationshipGroupRecordFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.standard;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -28,35 +29,35 @@ import org.neo4j.kernel.impl.store.record.RelationshipGroupRecord;\n \n public class RelationshipGroupRecordFormat extends BaseOneByteHeaderRecordFormat<RelationshipGroupRecord>\n {\n-   /* Record layout\n-    *\n-    * [type+inUse+highbits,next,firstOut,firstIn,firstLoop,owningNode] = 25B\n-    *\n-    * One record holds first relationship links (out,in,loop) to relationships for one type for one entity.\n-    */\n+    /* Record layout\n+     *\n+     * [type+inUse+highbits,next,firstOut,firstIn,firstLoop,owningNode] = 25B\n+     *\n+     * One record holds first relationship links (out,in,loop) to relationships for one type for one entity.\n+     */\n \n     public static final int RECORD_SIZE = 25;\n \n     public RelationshipGroupRecordFormat()\n     {\n-        this( false );\n+        this(false);\n     }\n \n-    public RelationshipGroupRecordFormat( boolean pageAligned )\n+    public RelationshipGroupRecordFormat(boolean pageAligned)\n     {\n-        super( fixedRecordSize( RECORD_SIZE ), 0, IN_USE_BIT, StandardFormatSettings.RELATIONSHIP_GROUP_MAXIMUM_ID_BITS, pageAligned );\n+        super(fixedRecordSize(RECORD_SIZE), 0, IN_USE_BIT, StandardFormatSettings.RELATIONSHIP_GROUP_MAXIMUM_ID_BITS, pageAligned);\n     }\n \n     @Override\n-    public void read( RelationshipGroupRecord record, PageCursor cursor, RecordLoad mode, int recordSize, int recordsPerPage )\n+    public void read(RelationshipGroupRecord record, PageCursor cursor, RecordLoad mode, int recordSize, int recordsPerPage)\n     {\n         // [    ,   x] in use\n         // [    ,xxx ] high next id bits\n         // [ xxx,    ] high firstOut bits\n         long headerByte = cursor.getByte();\n-        boolean inUse = isInUse( (byte) headerByte );\n-        record.setInUse( inUse );\n-        if ( mode.shouldLoad( inUse ) )\n+        boolean inUse = isInUse((byte) headerByte);\n+        record.setInUse(inUse);\n+        if (mode.shouldLoad(inUse))\n         {\n             // [    ,xxx ] high firstIn bits\n             // [ xxx,    ] high firstLoop bits\n@@ -67,67 +68,66 @@ public class RelationshipGroupRecordFormat extends BaseOneByteHeaderRecordFormat\n             long nextOutLowBits = cursor.getInt() & 0xFFFFFFFFL;\n             long nextInLowBits = cursor.getInt() & 0xFFFFFFFFL;\n             long nextLoopLowBits = cursor.getInt() & 0xFFFFFFFFL;\n-            long owningNode = (cursor.getInt() & 0xFFFFFFFFL) | (((long)cursor.getByte()) << 32);\n+            long owningNode = (cursor.getInt() & 0xFFFFFFFFL) | (((long) cursor.getByte()) << 32);\n \n             long nextMod = (headerByte & 0xE) << 31;\n             long nextOutMod = (headerByte & 0x70) << 28;\n             long nextInMod = (highByte & 0xE) << 31;\n             long nextLoopMod = (highByte & 0x70) << 28;\n \n-            record.initialize( inUse, type,\n-                    BaseRecordFormat.longFromIntAndMod( nextOutLowBits, nextOutMod ),\n-                    BaseRecordFormat.longFromIntAndMod( nextInLowBits, nextInMod ),\n-                    BaseRecordFormat.longFromIntAndMod( nextLoopLowBits, nextLoopMod ),\n-                    owningNode,\n-                    BaseRecordFormat.longFromIntAndMod( nextLowBits, nextMod ) );\n+            record.initialize(inUse, type,\n+              BaseRecordFormat.longFromIntAndMod(nextOutLowBits, nextOutMod),\n+              BaseRecordFormat.longFromIntAndMod(nextInLowBits, nextInMod),\n+              BaseRecordFormat.longFromIntAndMod(nextLoopLowBits, nextLoopMod),\n+              owningNode,\n+              BaseRecordFormat.longFromIntAndMod(nextLowBits, nextMod));\n         }\n     }\n \n     @Override\n-    public void write( RelationshipGroupRecord record, PageCursor cursor, int recordSize, int recordsPerPage )\n+    public void write(RelationshipGroupRecord record, PageCursor cursor, int recordSize, int recordsPerPage)\n     {\n-        if ( record.inUse() )\n+        if (record.inUse())\n         {\n             long nextMod = record.getNext() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 :\n-                           (record.getNext() & 0x700000000L) >> 31;\n+              (record.getNext() & 0x700000000L) >> 31;\n             long nextOutMod = record.getFirstOut() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 :\n-                              (record.getFirstOut() & 0x700000000L) >> 28;\n+              (record.getFirstOut() & 0x700000000L) >> 28;\n             long nextInMod = record.getFirstIn() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 :\n-                             (record.getFirstIn() & 0x700000000L) >> 31;\n+              (record.getFirstIn() & 0x700000000L) >> 31;\n             long nextLoopMod = record.getFirstLoop() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 :\n-                               (record.getFirstLoop() & 0x700000000L) >> 28;\n+              (record.getFirstLoop() & 0x700000000L) >> 28;\n \n             // [    ,   x] in use\n             // [    ,xxx ] high next id bits\n             // [ xxx,    ] high firstOut bits\n-            cursor.putByte( (byte) (nextOutMod | nextMod | 1) );\n+            cursor.putByte((byte) (nextOutMod | nextMod | 1));\n \n             // [    ,xxx ] high firstIn bits\n             // [ xxx,    ] high firstLoop bits\n-            cursor.putByte( (byte) (nextLoopMod | nextInMod) );\n-\n-            cursor.putShort( (short) record.getType() );\n-            cursor.putInt( (int) record.getNext() );\n-            cursor.putInt( (int) record.getFirstOut() );\n-            cursor.putInt( (int) record.getFirstIn() );\n-            cursor.putInt( (int) record.getFirstLoop() );\n-            cursor.putInt( (int) record.getOwningNode() );\n-            cursor.putByte( (byte) (record.getOwningNode() >> 32) );\n-        }\n-        else\n+            cursor.putByte((byte) (nextLoopMod | nextInMod));\n+\n+            cursor.putShort((short) record.getType());\n+            cursor.putInt((int) record.getNext());\n+            cursor.putInt((int) record.getFirstOut());\n+            cursor.putInt((int) record.getFirstIn());\n+            cursor.putInt((int) record.getFirstLoop());\n+            cursor.putInt((int) record.getOwningNode());\n+            cursor.putByte((byte) (record.getOwningNode() >> 32));\n+        } else\n         {\n-            markAsUnused( cursor );\n+            markAsUnused(cursor);\n         }\n     }\n \n     @Override\n     public RelationshipGroupRecord newRecord()\n     {\n-        return new RelationshipGroupRecord( -1 );\n+        return new RelationshipGroupRecord(-1);\n     }\n \n     @Override\n-    public long getNextRecordReference( RelationshipGroupRecord record )\n+    public long getNextRecordReference(RelationshipGroupRecord record)\n     {\n         return record.getNext();\n     }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1738",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1738/OptionalNamedArg.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1738/OptionalNamedArg.java\nindex ccbc23325ec..91756b43ea2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1738/OptionalNamedArg.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1738/OptionalNamedArg.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.arguments;\n \n import java.util.Arrays;\n@@ -30,102 +31,102 @@ import static org.neo4j.kernel.impl.util.Converters.withDefault;\n \n public class OptionalNamedArg implements NamedArgument\n {\n-    protected final String name;\n-    protected final String exampleValue;\n-    protected final String defaultValue;\n-    protected final String description;\n-    protected final String[] allowedValues;\n+  protected final String name;\n+  protected final String exampleValue;\n+  protected final String defaultValue;\n+  protected final String description;\n+  protected final String[] allowedValues;\n \n-    public OptionalNamedArg( String name, String exampleValue, String defaultValue, String description )\n-    {\n-        this.name = name;\n-        this.exampleValue = exampleValue;\n-        this.defaultValue = defaultValue;\n-        this.description = description;\n-        allowedValues = new String[]{};\n-    }\n+  public OptionalNamedArg(String name, String exampleValue, String defaultValue, String description)\n+  {\n+    this.name = name;\n+    this.exampleValue = exampleValue;\n+    this.defaultValue = defaultValue;\n+    this.description = description;\n+    allowedValues = new String[] {};\n+  }\n \n-    public OptionalNamedArg( String name, String[] allowedValues, String defaultValue, String description )\n-    {\n-        this.name = name;\n-        this.allowedValues = allowedValues;\n-        this.exampleValue = String.join( \"|\", allowedValues );\n-        this.defaultValue = defaultValue;\n-        this.description = description;\n-    }\n+  public OptionalNamedArg(String name, String[] allowedValues, String defaultValue, String description)\n+  {\n+    this.name = name;\n+    this.allowedValues = allowedValues;\n+    this.exampleValue = String.join(\"|\", allowedValues);\n+    this.defaultValue = defaultValue;\n+    this.description = description;\n+  }\n \n-    @Override\n-    public String optionsListing()\n-    {\n-        return String.format( \"--%s=<%s>\", name, exampleValue );\n-    }\n+  @Override\n+  public String optionsListing()\n+  {\n+    return String.format(\"--%s=<%s>\", name, exampleValue);\n+  }\n \n-    @Override\n-    public String usage()\n-    {\n-        return String.format( \"[--%s=<%s>]\", name, exampleValue );\n-    }\n+  @Override\n+  public String usage()\n+  {\n+    return String.format(\"[--%s=<%s>]\", name, exampleValue);\n+  }\n \n-    @Override\n-    public String description()\n-    {\n-        return description;\n-    }\n+  @Override\n+  public String description()\n+  {\n+    return description;\n+  }\n \n-    @Override\n-    public String name()\n-    {\n-        return name;\n-    }\n+  @Override\n+  public String name()\n+  {\n+    return name;\n+  }\n \n-    @Override\n-    public String exampleValue()\n-    {\n-        return exampleValue;\n-    }\n+  @Override\n+  public String exampleValue()\n+  {\n+    return exampleValue;\n+  }\n \n-    public String defaultValue()\n-    {\n-        return defaultValue;\n-    }\n+  public String defaultValue()\n+  {\n+    return defaultValue;\n+  }\n \n-    @Override\n-    public String parse( Args parsedArgs )\n+  @Override\n+  public String parse(Args parsedArgs)\n+  {\n+    String value = parsedArgs.interpretOption(name, withDefault(defaultValue), identity());\n+    if (allowedValues.length > 0)\n     {\n-        String value = parsedArgs.interpretOption( name, withDefault( defaultValue ), identity() );\n-        if ( allowedValues.length > 0 )\n+      for (String allowedValue : allowedValues)\n+      {\n+        if (allowedValue.equals(value))\n         {\n-            for ( String allowedValue : allowedValues )\n-            {\n-                if ( allowedValue.equals( value ) )\n-                {\n-                    return value;\n-                }\n-            }\n-            throw new IllegalArgumentException(\n-                    String.format( \"'%s' must be one of [%s], not: %s\", name, String.join( \",\", allowedValues ),\n-                            value ) );\n+          return value;\n         }\n-        return value;\n+      }\n+      throw new IllegalArgumentException(\n+          String.format(\"'%s' must be one of [%s], not: %s\", name, String.join(\",\", allowedValues),\n+              value));\n     }\n+    return value;\n+  }\n \n-    @Override\n-    public Collection<String> parseMultiple( Args parsedArgs )\n+  @Override\n+  public Collection<String> parseMultiple(Args parsedArgs)\n+  {\n+    Collection<String> values = parsedArgs.interpretOptions(name, withDefault(defaultValue), identity());\n+    for (String value : values)\n     {\n-        Collection<String> values = parsedArgs.interpretOptions( name, withDefault( defaultValue ), identity() );\n-        for ( String value : values )\n+      if (allowedValues.length > 0)\n+      {\n+        List<String> allowed = Arrays.asList(allowedValues);\n+        if (!allowed.contains(value))\n         {\n-            if ( allowedValues.length > 0 )\n-            {\n-                List<String> allowed = Arrays.asList( allowedValues );\n-                if ( !allowed.contains( value ) )\n-                {\n-                    throw new IllegalArgumentException(\n-                            String.format( \"'%s' must be one of [%s], not: %s\", name, String.join( \",\", allowedValues ),\n-                                    value ) );\n-                }\n-            }\n+          throw new IllegalArgumentException(\n+              String.format(\"'%s' must be one of [%s], not: %s\", name, String.join(\",\", allowedValues),\n+                  value));\n         }\n-        return values;\n+      }\n     }\n+    return values;\n+  }\n }\n",
            "diff_size": 97
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "96",
                    "column": "34",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "116",
                    "column": "38",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1738/OptionalNamedArg.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1738/OptionalNamedArg.java\nindex ccbc23325ec..8b9e46f51bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1738/OptionalNamedArg.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1738/OptionalNamedArg.java\n@@ -93,7 +93,7 @@ public class OptionalNamedArg implements NamedArgument\n     public String parse( Args parsedArgs )\n     {\n         String value = parsedArgs.interpretOption( name, withDefault( defaultValue ), identity() );\n-        if ( allowedValues.length > 0 )\n+        if ( allowedValues.length> 0 )\n         {\n             for ( String allowedValue : allowedValues )\n             {\n@@ -102,10 +102,8 @@ public class OptionalNamedArg implements NamedArgument\n                     return value;\n                 }\n             }\n-            throw new IllegalArgumentException(\n-                    String.format( \"'%s' must be one of [%s], not: %s\", name, String.join( \",\", allowedValues ),\n-                            value ) );\n-        }\n+            throw new IllegalArgumentException( String.format( \"'%s' must be one of [%s], not: %s\", name, String.join( \",\", allowedValues ), value ) );\n+    }\n         return value;\n     }\n \n@@ -115,17 +113,15 @@ public class OptionalNamedArg implements NamedArgument\n         Collection<String> values = parsedArgs.interpretOptions( name, withDefault( defaultValue ), identity() );\n         for ( String value : values )\n         {\n-            if ( allowedValues.length > 0 )\n+            if ( allowedValues.length> 0 )\n             {\n                 List<String> allowed = Arrays.asList( allowedValues );\n                 if ( !allowed.contains( value ) )\n                 {\n-                    throw new IllegalArgumentException(\n-                            String.format( \"'%s' must be one of [%s], not: %s\", name, String.join( \",\", allowedValues ),\n-                                    value ) );\n-                }\n+                    throw new IllegalArgumentException( String.format( \"'%s' must be one of [%s], not: %s\", name, String.join( \",\", allowedValues ), value ) );\n+    }\n             }\n         }\n         return values;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4540",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4540/ReadOnlyIdGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4540/ReadOnlyIdGeneratorFactory.java\nindex 12b64dcd616..a095666e794 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4540/ReadOnlyIdGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4540/ReadOnlyIdGeneratorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.id;\n \n import java.io.File;\n@@ -34,126 +35,124 @@ import org.neo4j.kernel.impl.store.UnderlyingStorageException;\n  */\n public class ReadOnlyIdGeneratorFactory implements IdGeneratorFactory\n {\n-    private final EnumMap<IdType,IdGenerator> idGenerators = new EnumMap<>( IdType.class );\n-    private final FileSystemAbstraction fileSystemAbstraction;\n-\n-    public ReadOnlyIdGeneratorFactory()\n+  private final EnumMap<IdType, IdGenerator> idGenerators = new EnumMap<>(IdType.class);\n+  private final FileSystemAbstraction fileSystemAbstraction;\n+\n+  public ReadOnlyIdGeneratorFactory()\n+  {\n+    this.fileSystemAbstraction = new DefaultFileSystemAbstraction();\n+  }\n+\n+  public ReadOnlyIdGeneratorFactory(FileSystemAbstraction fileSystemAbstraction)\n+  {\n+    this.fileSystemAbstraction = fileSystemAbstraction;\n+  }\n+\n+  @Override\n+  public IdGenerator open(File filename, IdType idType, LongSupplier highId, long maxId)\n+  {\n+    return open(filename, 0, idType, highId, maxId);\n+  }\n+\n+  @Override\n+  public IdGenerator open(File filename, int grabSize, IdType idType, LongSupplier highId, long maxId)\n+  {\n+    IdGenerator generator = new ReadOnlyIdGenerator(highId, fileSystemAbstraction, filename);\n+    idGenerators.put(idType, generator);\n+    return generator;\n+  }\n+\n+  @Override\n+  public void create(File filename, long highId, boolean throwIfFileExists)\n+  {\n+    // Don't\n+  }\n+\n+  @Override\n+  public IdGenerator get(IdType idType)\n+  {\n+    return idGenerators.get(idType);\n+  }\n+\n+  static class ReadOnlyIdGenerator implements IdGenerator\n+  {\n+    private final long highId;\n+    private final long defragCount;\n+\n+    ReadOnlyIdGenerator(LongSupplier highId, FileSystemAbstraction fs, File filename)\n     {\n-        this.fileSystemAbstraction = new DefaultFileSystemAbstraction();\n+      if (fs != null && fs.fileExists(filename))\n+      {\n+        try\n+        {\n+          this.highId = IdGeneratorImpl.readHighId(fs, filename);\n+          defragCount = IdGeneratorImpl.readDefragCount(fs, filename);\n+        } catch (IOException e)\n+        {\n+          throw new UnderlyingStorageException(\n+              \"Failed to read id counts of the id file: \" + filename, e);\n+        }\n+      } else\n+      {\n+        this.highId = highId.getAsLong();\n+        defragCount = 0;\n+      }\n     }\n \n-    public ReadOnlyIdGeneratorFactory( FileSystemAbstraction fileSystemAbstraction )\n+    @Override\n+    public long nextId()\n     {\n-        this.fileSystemAbstraction = fileSystemAbstraction;\n+      throw new UnsupportedOperationException();\n     }\n \n     @Override\n-    public IdGenerator open( File filename, IdType idType, LongSupplier highId, long maxId )\n+    public IdRange nextIdBatch(int size)\n     {\n-        return open( filename, 0, idType, highId, maxId );\n+      throw new UnsupportedOperationException();\n     }\n \n     @Override\n-    public IdGenerator open( File filename, int grabSize, IdType idType, LongSupplier highId, long maxId )\n-    {\n-        IdGenerator generator = new ReadOnlyIdGenerator( highId, fileSystemAbstraction, filename );\n-        idGenerators.put( idType, generator );\n-        return generator;\n+    public void setHighId(long id)\n+    {   // OK\n     }\n \n     @Override\n-    public void create( File filename, long highId, boolean throwIfFileExists )\n+    public long getHighId()\n     {\n-        // Don't\n+      return highId;\n     }\n \n     @Override\n-    public IdGenerator get( IdType idType )\n+    public long getHighestPossibleIdInUse()\n     {\n-        return idGenerators.get( idType );\n+      return highId - 1;\n     }\n \n-    static class ReadOnlyIdGenerator implements IdGenerator\n-    {\n-        private final long highId;\n-        private final long defragCount;\n-\n-        ReadOnlyIdGenerator( LongSupplier highId, FileSystemAbstraction fs, File filename )\n-        {\n-            if ( fs != null && fs.fileExists( filename ) )\n-            {\n-                try\n-                {\n-                    this.highId = IdGeneratorImpl.readHighId( fs, filename );\n-                    defragCount = IdGeneratorImpl.readDefragCount( fs, filename );\n-                }\n-                catch ( IOException e )\n-                {\n-                    throw new UnderlyingStorageException(\n-                            \"Failed to read id counts of the id file: \" + filename, e );\n-                }\n-            }\n-            else\n-            {\n-                this.highId = highId.getAsLong();\n-                defragCount = 0;\n-            }\n-        }\n-\n-        @Override\n-        public long nextId()\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public IdRange nextIdBatch( int size )\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public void setHighId( long id )\n-        {   // OK\n-        }\n-\n-        @Override\n-        public long getHighId()\n-        {\n-            return highId;\n-        }\n-\n-        @Override\n-        public long getHighestPossibleIdInUse()\n-        {\n-            return highId - 1;\n-        }\n-\n-        @Override\n-        public void freeId( long id )\n-        {   // Don't\n-        }\n+    @Override\n+    public void freeId(long id)\n+    {   // Don't\n+    }\n \n-        @Override\n-        public void close()\n-        {   // Nothing to close\n-        }\n+    @Override\n+    public void close()\n+    {   // Nothing to close\n+    }\n \n-        @Override\n-        public long getNumberOfIdsInUse()\n-        {\n-            return highId - defragCount;\n-        }\n+    @Override\n+    public long getNumberOfIdsInUse()\n+    {\n+      return highId - defragCount;\n+    }\n \n-        @Override\n-        public long getDefragCount()\n-        {\n-            return defragCount;\n-        }\n+    @Override\n+    public long getDefragCount()\n+    {\n+      return defragCount;\n+    }\n \n-        @Override\n-        public void delete()\n-        {   // Nothing to delete\n-        }\n+    @Override\n+    public void delete()\n+    {   // Nothing to delete\n     }\n+  }\n }\n",
            "diff_size": 155
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4540/ReadOnlyIdGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4540/ReadOnlyIdGeneratorFactory.java\nindex 12b64dcd616..5010d2019d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4540/ReadOnlyIdGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4540/ReadOnlyIdGeneratorFactory.java\n@@ -89,9 +89,8 @@ public class ReadOnlyIdGeneratorFactory implements IdGeneratorFactory\n                 }\n                 catch ( IOException e )\n                 {\n-                    throw new UnderlyingStorageException(\n-                            \"Failed to read id counts of the id file: \" + filename, e );\n-                }\n+                    throw new UnderlyingStorageException( \"Failed to read id counts of the id file: \" + filename, e );\n+    }\n             }\n             else\n             {\n@@ -114,7 +113,8 @@ public class ReadOnlyIdGeneratorFactory implements IdGeneratorFactory\n \n         @Override\n         public void setHighId( long id )\n-        {   // OK\n+        {\n+    // OK\n         }\n \n         @Override\n@@ -131,12 +131,14 @@ public class ReadOnlyIdGeneratorFactory implements IdGeneratorFactory\n \n         @Override\n         public void freeId( long id )\n-        {   // Don't\n+        {\n+    // Don't\n         }\n \n         @Override\n         public void close()\n-        {   // Nothing to close\n+        {\n+    // Nothing to close\n         }\n \n         @Override\n@@ -153,7 +155,8 @@ public class ReadOnlyIdGeneratorFactory implements IdGeneratorFactory\n \n         @Override\n         public void delete()\n-        {   // Nothing to delete\n+        {\n+    // Nothing to delete\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
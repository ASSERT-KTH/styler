{
    "project_name": "Angel-ML-angel",
    "error_id": "734",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/734/PGDUpdateFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/734/PGDUpdateFunc.java\nindex fc45d4f3802..3f1631bf9c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/734/PGDUpdateFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/734/PGDUpdateFunc.java\n@@ -39,8 +39,8 @@ public class PGDUpdateFunc extends OptMMUpdateFunc {\n   }\n \n   public PGDUpdateFunc(int matId, int factor, double lr, double l1RegParam, double l2RegParam,\n-      int batchSize) {\n-    super(matId, new int[]{factor}, new double[]{lr, l1RegParam, l2RegParam, batchSize});\n+                       int batchSize) {\n+    super(matId, new int[] {factor}, new double[] {lr, l1RegParam, l2RegParam, batchSize});\n   }\n \n   @Override\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/734/PGDUpdateFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/734/PGDUpdateFunc.java\nindex fc45d4f3802..f9470229a50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/734/PGDUpdateFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/734/PGDUpdateFunc.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ml.psf.optimizer;\n \n import com.tencent.angel.ml.math2.ufuncs.Ufuncs;\n@@ -38,8 +37,7 @@ public class PGDUpdateFunc extends OptMMUpdateFunc {\n     this(matId, factor, lr, l1RegParam, l2RegParam, 1);\n   }\n \n-  public PGDUpdateFunc(int matId, int factor, double lr, double l1RegParam, double l2RegParam,\n-      int batchSize) {\n+  public PGDUpdateFunc(int matId, int factor, double lr, double l1RegParam, double l2RegParam, int batchSize) {\n     super(matId, new int[]{factor}, new double[]{lr, l1RegParam, l2RegParam, batchSize});\n   }\n \n@@ -80,4 +78,4 @@ public class PGDUpdateFunc extends OptMMUpdateFunc {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/734/PGDUpdateFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/734/PGDUpdateFunc.java\nindex fc45d4f3802..4ccc688ff86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/734/PGDUpdateFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/734/PGDUpdateFunc.java\n@@ -38,25 +38,23 @@ public class PGDUpdateFunc extends OptMMUpdateFunc {\n     this(matId, factor, lr, l1RegParam, l2RegParam, 1);\n   }\n \n-  public PGDUpdateFunc(int matId, int factor, double lr, double l1RegParam, double l2RegParam,\n-      int batchSize) {\n+  public PGDUpdateFunc(int matId, int factor, double lr, double l1RegParam, double l2RegParam, int batchSize) {\n     super(matId, new int[]{factor}, new double[]{lr, l1RegParam, l2RegParam, batchSize});\n   }\n \n   @Override\n-  public void update(RowBasedPartition partition, int factor, double[] scalars) {\n+  public void update(\n+    RowBasedPartition partition, int factor, double[] scalars) {\n     double lr = scalars[0];\n     double l1RegParam = scalars[1];\n     double l2RegParam = scalars[2];\n     double batchSize = (int) scalars[3];\n-\n     for (int f = 0; f < factor; f++) {\n       ServerRow gradientServerRow = partition.getRow(f + factor);\n       try {\n         gradientServerRow.startWrite();\n         Vector weight = ServerRowUtils.getVector(partition.getRow(f));\n         Vector gradient = ServerRowUtils.getVector(gradientServerRow);\n-\n         if (batchSize > 1) {\n           gradient.idiv(batchSize);\n         }\n@@ -71,13 +69,11 @@ public class PGDUpdateFunc extends OptMMUpdateFunc {\n         if (l1RegParam != 0) {\n           Ufuncs.isoftthreshold(weight, lrTemp * l1RegParam);\n         }\n-\n         gradient.clear();\n       } finally {\n         gradientServerRow.endWrite();\n       }\n-\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
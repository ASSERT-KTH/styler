{
    "project_name": "neo4j-neo4j",
    "error_id": "1200",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "127",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1200/Result.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1200/Result.java\nindex bdaa1f12ffd..13dd5e9fe10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1200/Result.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1200/Result.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb;\n \n import java.io.PrintWriter;\n@@ -80,7 +81,7 @@ import org.neo4j.annotations.api.PublicApi;\n  * can be queried.\n  */\n @PublicApi\n-public interface Result extends ResourceIterator<Map<String,Object>>\n+public interface Result extends ResourceIterator<Map<String, Object>>\n {\n     /**\n      * Indicates what kind of query execution produced this result.\n@@ -118,12 +119,12 @@ public interface Result extends ResourceIterator<Map<String,Object>>\n      * </code></pre>\n      *\n      * @param name exact name of the column, as it appeared in the original query\n-     * @param <T> desired type cast for the result objects\n+     * @param <T>  desired type cast for the result objects\n      * @return an iterator of the result objects, possibly empty\n-     * @throws ClassCastException when the result object can not be cast to the requested type\n+     * @throws ClassCastException                  when the result object can not be cast to the requested type\n      * @throws org.neo4j.graphdb.NotFoundException when the column name does not appear in the original query\n      */\n-    <T> ResourceIterator<T> columnAs( String name );\n+    <T> ResourceIterator<T> columnAs(String name);\n \n     /**\n      * Denotes there being more rows available in this result. These rows must either be consumed, by invoking\n@@ -140,7 +141,7 @@ public interface Result extends ResourceIterator<Map<String,Object>>\n      * @return the next row in this result.\n      */\n     @Override\n-    Map<String,Object> next();\n+    Map<String, Object> next();\n \n     /**\n      * Closes the result, freeing up any resources held by the result.\n@@ -194,9 +195,11 @@ public interface Result extends ResourceIterator<Map<String,Object>>\n      *\n      * @param writer the {@link java.io.PrintWriter} to receive the textual representation of the query result.\n      */\n-    void writeAsStringTo( PrintWriter writer );\n+    void writeAsStringTo(PrintWriter writer);\n \n-    /** Removing rows from the result is not supported. */\n+    /**\n+     * Removing rows from the result is not supported.\n+     */\n     @Override\n     void remove();\n \n@@ -216,13 +219,13 @@ public interface Result extends ResourceIterator<Map<String,Object>>\n      * This is an alternative to using the iterator form of Result. Using the visitor is better from a object\n      * creation perspective.\n      *\n-     * @param visitor the ResultVisitor instance that will see the results of the visit.\n+     * @param visitor               the ResultVisitor instance that will see the results of the visit.\n      * @param <VisitationException> the type of the exception that might get thrown\n      * @throws VisitationException if the {@code visit(ResultRow)} method of {@link ResultVisitor} throws such an\n-     * exception.\n+     *                             exception.\n      */\n-    <VisitationException extends Exception> void accept( ResultVisitor<VisitationException> visitor )\n-            throws VisitationException;\n+    <VisitationException extends Exception> void accept(ResultVisitor<VisitationException> visitor)\n+      throws VisitationException;\n \n     /**\n      * Describes a row of a result. The contents of this object is only stable during the\n@@ -234,19 +237,19 @@ public interface Result extends ResourceIterator<Map<String,Object>>\n     interface ResultRow\n     {\n         // TODO: Type safe getters for collections and maps?\n-        Node getNode( String key );\n+        Node getNode(String key);\n \n-        Relationship getRelationship( String key );\n+        Relationship getRelationship(String key);\n \n-        Object get( String key );\n+        Object get(String key);\n \n-        String getString( String key );\n+        String getString(String key);\n \n-        Number getNumber( String key );\n+        Number getNumber(String key);\n \n-        Boolean getBoolean( String key );\n+        Boolean getBoolean(String key);\n \n-        Path getPath( String key );\n+        Path getPath(String key);\n     }\n \n     /**\n@@ -258,13 +261,13 @@ public interface Result extends ResourceIterator<Map<String,Object>>\n          * Visits the specified row.\n          *\n          * @param row the row to visit. The row object is only guaranteed to be stable until flow of control has\n-         * returned from this method.\n+         *            returned from this method.\n          * @return true if the next row should also be visited. Returning false will terminate the iteration of\n          * result rows.\n          * @throws VisitationException if there is a problem in the execution of this method. This exception will close\n-         * the result being visited, and the exception will propagate out through the\n-         * {@linkplain #accept(ResultVisitor) accept method}.\n+         *                             the result being visited, and the exception will propagate out through the\n+         *                             {@linkplain #accept(ResultVisitor) accept method}.\n          */\n-        boolean visit( ResultRow row ) throws VisitationException;\n+        boolean visit(ResultRow row) throws VisitationException;\n     }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1200/Result.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1200/Result.java\nindex bdaa1f12ffd..1bbe5d47754 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1200/Result.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1200/Result.java\n@@ -267,4 +267,4 @@ public interface Result extends ResourceIterator<Map<String,Object>>\n          */\n         boolean visit( ResultRow row ) throws VisitationException;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
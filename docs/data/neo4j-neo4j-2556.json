{
    "project_name": "neo4j-neo4j",
    "error_id": "2556",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2556/LuceneFulltextDocumentStructure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2556/LuceneFulltextDocumentStructure.java\nindex e8b56d72685..1143d8895c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2556/LuceneFulltextDocumentStructure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2556/LuceneFulltextDocumentStructure.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import org.apache.lucene.document.Document;\n@@ -43,16 +44,16 @@ public class LuceneFulltextDocumentStructure\n {\n     public static final String FIELD_ENTITY_ID = \"__neo4j__lucene__fulltext__index__internal__id__\";\n \n-    private static final ThreadLocal<DocWithId> perThreadDocument = ThreadLocal.withInitial( DocWithId::new );\n+    private static final ThreadLocal<DocWithId> perThreadDocument = ThreadLocal.withInitial(DocWithId::new);\n \n     private LuceneFulltextDocumentStructure()\n     {\n     }\n \n-    private static DocWithId reuseDocument( long id )\n+    private static DocWithId reuseDocument(long id)\n     {\n         DocWithId doc = perThreadDocument.get();\n-        doc.setId( id );\n+        doc.setId(id);\n         return doc;\n     }\n \n@@ -60,45 +61,45 @@ public class LuceneFulltextDocumentStructure\n      * @return A document with the properties set, or null if no properties were\n      * relevant (= none of the properties were of type TEXT - which is the only type we support in the fulltext indexes).\n      */\n-    public static Document documentRepresentingProperties( long id, String[] propertyNames, Value[] values )\n+    public static Document documentRepresentingProperties(long id, String[] propertyNames, Value[] values)\n     {\n-        DocWithId document = reuseDocument( id );\n-        int setValues = document.setValues( propertyNames, values );\n+        DocWithId document = reuseDocument(id);\n+        int setValues = document.setValues(propertyNames, values);\n         return setValues == 0 ? null : document.document;\n     }\n \n-    private static Field encodeValueField( String propertyKey, Value value )\n+    private static Field encodeValueField(String propertyKey, Value value)\n     {\n         TextValue textValue = (TextValue) value;\n         String stringValue = textValue.stringValue();\n-        return new TextField( propertyKey, stringValue, NO );\n+        return new TextField(propertyKey, stringValue, NO);\n     }\n \n-    static long getNodeId( Document from )\n+    static long getNodeId(Document from)\n     {\n-        String entityId = from.get( FIELD_ENTITY_ID );\n-        return Long.parseLong( entityId );\n+        String entityId = from.get(FIELD_ENTITY_ID);\n+        return Long.parseLong(entityId);\n     }\n \n-    static Term newTermForChangeOrRemove( long id )\n+    static Term newTermForChangeOrRemove(long id)\n     {\n-        return new Term( FIELD_ENTITY_ID, \"\" + id );\n+        return new Term(FIELD_ENTITY_ID, \"\" + id);\n     }\n \n-    static Query newCountEntityEntriesQuery( long nodeId, String[] propertyKeys, Value... propertyValues )\n+    static Query newCountEntityEntriesQuery(long nodeId, String[] propertyKeys, Value... propertyValues)\n     {\n         BooleanQuery.Builder builder = new BooleanQuery.Builder();\n-        builder.add( new TermQuery( newTermForChangeOrRemove( nodeId ) ), BooleanClause.Occur.MUST );\n-        for ( int i = 0; i < propertyKeys.length; i++ )\n+        builder.add(new TermQuery(newTermForChangeOrRemove(nodeId)), BooleanClause.Occur.MUST);\n+        for (int i = 0; i < propertyKeys.length; i++)\n         {\n             String propertyKey = propertyKeys[i];\n             Value value = propertyValues[i];\n             // Only match on entries that doesn't contain fields we don't expect\n-            if ( value.valueGroup() != ValueGroup.TEXT )\n+            if (value.valueGroup() != ValueGroup.TEXT)\n             {\n                 Query valueQuery = new ConstantScoreQuery(\n-                        new WildcardQuery( new Term( propertyKey, \"*\" ) ) );\n-                builder.add( valueQuery, BooleanClause.Occur.MUST_NOT );\n+                  new WildcardQuery(new Term(propertyKey, \"*\")));\n+                builder.add(valueQuery, BooleanClause.Occur.MUST_NOT);\n             }\n             // Why don't we match on the TEXT values that actually should be in the index?\n             // 1. The analyzer used for our index can have split the property value into several terms so we cannot\n@@ -118,31 +119,31 @@ public class LuceneFulltextDocumentStructure\n \n         private DocWithId()\n         {\n-            idField = new StringField( FIELD_ENTITY_ID, \"\", YES );\n-            idValueField = new NumericDocValuesField( FIELD_ENTITY_ID, 0L );\n+            idField = new StringField(FIELD_ENTITY_ID, \"\", YES);\n+            idValueField = new NumericDocValuesField(FIELD_ENTITY_ID, 0L);\n             document = new Document();\n-            document.add( idField );\n-            document.add( idValueField );\n+            document.add(idField);\n+            document.add(idValueField);\n         }\n \n-        private void setId( long id )\n+        private void setId(long id)\n         {\n             removeAllValueFields();\n-            idField.setStringValue( Long.toString( id ) );\n-            idValueField.setLongValue( id );\n+            idField.setStringValue(Long.toString(id));\n+            idValueField.setLongValue(id);\n         }\n \n-        private int setValues( String[] names, Value[] values )\n+        private int setValues(String[] names, Value[] values)\n         {\n             int i = 0;\n             int nbrAddedValues = 0;\n-            for ( String name : names )\n+            for (String name : names)\n             {\n                 Value value = values[i++];\n-                if ( value != null && value.valueGroup() == ValueGroup.TEXT )\n+                if (value != null && value.valueGroup() == ValueGroup.TEXT)\n                 {\n-                    Field field = encodeValueField( name, value );\n-                    document.add( field );\n+                    Field field = encodeValueField(name, value);\n+                    document.add(field);\n                     nbrAddedValues++;\n                 }\n             }\n@@ -152,8 +153,8 @@ public class LuceneFulltextDocumentStructure\n         private void removeAllValueFields()\n         {\n             document.clear();\n-            document.add( idField );\n-            document.add( idValueField );\n+            document.add(idField);\n+            document.add(idValueField);\n         }\n     }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "157",
    "information": {
        "errors": [
            {
                "line": "42",
                "column": "30",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    this.defaultValue = defaultValue;\n    this.required = required;\n    if (defaultValue == null &&\n        targetType != null && targetType.getRawClass().isPrimitive()) {\n      this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/157/AbstractParamProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/157/AbstractParamProcessor.java\nindex 2513388db4a..7a173c3bae9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/157/AbstractParamProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/157/AbstractParamProcessor.java\n@@ -39,8 +39,7 @@ public abstract class AbstractParamProcessor implements ParamValueProcessor {\n     this.targetType = targetType;\n     this.defaultValue = defaultValue;\n     this.required = required;\n-    if (defaultValue == null &&\n-        targetType != null && targetType.getRawClass().isPrimitive()) {\n+    if (defaultValue == null && targetType != null && targetType.getRawClass().isPrimitive()) {\n       this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n     }\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "42",
                    "column": "30",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/157/AbstractParamProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/157/AbstractParamProcessor.java\nindex 2513388db4a..57d33c8b927 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/157/AbstractParamProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/157/AbstractParamProcessor.java\n@@ -39,8 +39,7 @@ public abstract class AbstractParamProcessor implements ParamValueProcessor {\n     this.targetType = targetType;\n     this.defaultValue = defaultValue;\n     this.required = required;\n-    if (defaultValue == null &&\n-        targetType != null && targetType.getRawClass().isPrimitive()) {\n+    if (defaultValue == null && targetType != null && targetType.getRawClass().isPrimitive()) {\n       this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n     }\n   }\n@@ -57,4 +56,4 @@ public abstract class AbstractParamProcessor implements ParamValueProcessor {\n   public boolean isRequired() {\n     return required;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/157/AbstractParamProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/157/AbstractParamProcessor.java\nindex 2513388db4a..7a173c3bae9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/157/AbstractParamProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/157/AbstractParamProcessor.java\n@@ -39,8 +39,7 @@ public abstract class AbstractParamProcessor implements ParamValueProcessor {\n     this.targetType = targetType;\n     this.defaultValue = defaultValue;\n     this.required = required;\n-    if (defaultValue == null &&\n-        targetType != null && targetType.getRawClass().isPrimitive()) {\n+    if (defaultValue == null && targetType != null && targetType.getRawClass().isPrimitive()) {\n       this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n     }\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/157/AbstractParamProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/157/AbstractParamProcessor.java\nindex 2513388db4a..7a173c3bae9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/157/AbstractParamProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/157/AbstractParamProcessor.java\n@@ -39,8 +39,7 @@ public abstract class AbstractParamProcessor implements ParamValueProcessor {\n     this.targetType = targetType;\n     this.defaultValue = defaultValue;\n     this.required = required;\n-    if (defaultValue == null &&\n-        targetType != null && targetType.getRawClass().isPrimitive()) {\n+    if (defaultValue == null && targetType != null && targetType.getRawClass().isPrimitive()) {\n       this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n     }\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
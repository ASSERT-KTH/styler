{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1155",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1155/LazySingleReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1155/LazySingleReference.java\nindex 1402a7dc596..2be848f2a64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1155/LazySingleReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1155/LazySingleReference.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import java.util.function.Supplier;\n@@ -27,47 +28,47 @@ import java.util.function.Supplier;\n  */\n public abstract class LazySingleReference<T> implements Supplier<T>\n {\n-    private volatile T reference;\n+  private volatile T reference;\n \n-    /**\n-     * @return whether or not the managed reference has been initialized, i.e {@link #get() evaluated}\n-     * for the first time, or after {@link #invalidate() invalidated}.\n-     */\n-    public boolean isCreated()\n-    {\n-        return reference != null;\n-    }\n+  /**\n+   * @return whether or not the managed reference has been initialized, i.e {@link #get() evaluated}\n+   * for the first time, or after {@link #invalidate() invalidated}.\n+   */\n+  public boolean isCreated()\n+  {\n+    return reference != null;\n+  }\n \n-    /**\n-     * Returns the reference, initializing it if need be.\n-     */\n-    @Override\n-    public T get()\n+  /**\n+   * Returns the reference, initializing it if need be.\n+   */\n+  @Override\n+  public T get()\n+  {\n+    T result;\n+    if ((result = reference) == null)\n     {\n-        T result;\n-        if ( (result = reference) == null )\n+      synchronized (this)\n+      {\n+        if ((result = reference) == null)\n         {\n-            synchronized ( this )\n-            {\n-                if ( (result = reference) == null )\n-                {\n-                    result = reference = create();\n-                }\n-            }\n+          result = reference = create();\n         }\n-        return result;\n+      }\n     }\n+    return result;\n+  }\n \n-    /**\n-     * Invalidates any initialized reference. A future call to {@link #get()} will have it initialized again.\n-     */\n-    public synchronized void invalidate()\n-    {\n-        reference = null;\n-    }\n+  /**\n+   * Invalidates any initialized reference. A future call to {@link #get()} will have it initialized again.\n+   */\n+  public synchronized void invalidate()\n+  {\n+    reference = null;\n+  }\n \n-    /**\n-     * Provides a reference to manage.\n-     */\n-    protected abstract T create();\n+  /**\n+   * Provides a reference to manage.\n+   */\n+  protected abstract T create();\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1155/LazySingleReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1155/LazySingleReference.java\nindex 1402a7dc596..4ad8a2117a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1155/LazySingleReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1155/LazySingleReference.java\n@@ -70,4 +70,4 @@ public abstract class LazySingleReference<T> implements Supplier<T>\n      * Provides a reference to manage.\n      */\n     protected abstract T create();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
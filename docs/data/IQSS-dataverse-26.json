{
    "project_name": "IQSS-dataverse",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "67",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "            String leafDirectory = dataset.getIdentifierForFileStorage();\n            if (leafDirectoryOnly) {\n\t\t    File f = new File( leafDirectory );\n\t\t    return f.getName();\n            } else {\n                // The \"authority\" is something like \"FK2\".",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "68",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/26/RepositoryStorageAbstractionLayerUtil.java\nindex ee52254d6f5..3780fd3eaf4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/26/RepositoryStorageAbstractionLayerUtil.java\n@@ -64,7 +64,7 @@ public class RepositoryStorageAbstractionLayerUtil {\n         if (onlyOnPackagePerDatasetIsSupported) {\n             String leafDirectory = dataset.getIdentifierForFileStorage();\n             if (leafDirectoryOnly) {\n-\t\t    File f = new File( leafDirectory );\n+              Filef f = new File( leafDirectory );\n \t\t    return f.getName();\n             } else {\n                 // The \"authority\" is something like \"FK2\".\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/26/RepositoryStorageAbstractionLayerUtil.java\nindex ee52254d6f5..0cd71dcc5ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/26/RepositoryStorageAbstractionLayerUtil.java\n@@ -15,92 +15,95 @@ import javax.json.JsonObject;\n \n public class RepositoryStorageAbstractionLayerUtil {\n \n-    private static final Logger logger = Logger.getLogger(RepositoryStorageAbstractionLayerUtil.class.getCanonicalName());\n+  private static final Logger logger = Logger.getLogger(RepositoryStorageAbstractionLayerUtil.class.getCanonicalName());\n \n-    public static List<RsyncSite> getRsyncSites(Dataset dataset, JsonArray rsalSitesAsJson) {\n-        List<RsyncSite> rsalSites = new ArrayList<>();\n-        boolean leafDirectoryOnly = false;\n-        String fullRemotePathToDirectory = getDirectoryContainingTheData(dataset, leafDirectoryOnly);\n-        for (JsonObject site : rsalSitesAsJson.getValuesAs(JsonObject.class)) {\n-            String name = site.getString(\"name\");\n-            String fqdn = site.getString(\"fqdn\");\n-            RsyncSite rsyncSite = new RsyncSite(name, fqdn, fullRemotePathToDirectory);\n-            rsalSites.add(rsyncSite);\n-        }\n-        return rsalSites;\n+  public static List<RsyncSite> getRsyncSites(Dataset dataset, JsonArray rsalSitesAsJson) {\n+    List<RsyncSite> rsalSites = new ArrayList<>();\n+    boolean leafDirectoryOnly = false;\n+    String fullRemotePathToDirectory = getDirectoryContainingTheData(dataset, leafDirectoryOnly);\n+    for (JsonObject site : rsalSitesAsJson.getValuesAs(JsonObject.class)) {\n+      String name = site.getString(\"name\");\n+      String fqdn = site.getString(\"fqdn\");\n+      RsyncSite rsyncSite = new RsyncSite(name, fqdn, fullRemotePathToDirectory);\n+      rsalSites.add(rsyncSite);\n     }\n+    return rsalSites;\n+  }\n \n-    static String getLocalDataAccessDirectory(String localDataAccessParentDir, Dataset dataset) {\n-        if (localDataAccessParentDir == null) {\n-            localDataAccessParentDir = File.separator + \"UNCONFIGURED ( \" + SettingsServiceBean.Key.LocalDataAccessPath + \" )\";\n-        }\n-        boolean leafDirectoryOnly = true;\n-        return localDataAccessParentDir + File.separator + getDirectoryContainingTheData(dataset, leafDirectoryOnly);\n+  static String getLocalDataAccessDirectory(String localDataAccessParentDir, Dataset dataset) {\n+    if (localDataAccessParentDir == null) {\n+      localDataAccessParentDir =\n+        File.separator + \"UNCONFIGURED ( \" + SettingsServiceBean.Key.LocalDataAccessPath + \" )\";\n     }\n+    boolean leafDirectoryOnly = true;\n+    return localDataAccessParentDir + File.separator + getDirectoryContainingTheData(dataset, leafDirectoryOnly);\n+  }\n \n-    static String getVerifyDataCommand(Dataset dataset) {\n-        boolean leafDirectoryOnly = true;\n-        // TODO: if \"files.sha\" is defined somewhere, use it.\n-        return \"cd \" + getDirectoryContainingTheData(dataset, leafDirectoryOnly) + \" ; shasum -c files.sha\";\n-    }\n+  static String getVerifyDataCommand(Dataset dataset) {\n+    boolean leafDirectoryOnly = true;\n+    // TODO: if \"files.sha\" is defined somewhere, use it.\n+    return \"cd \" + getDirectoryContainingTheData(dataset, leafDirectoryOnly) + \" ; shasum -c files.sha\";\n+  }\n \n+  /**\n+   * @param leafDirectoryOnly By \"leaf\" directory, we mean \"4LKKNW\" rather\n+   *                          than \"10.5072/FK2/4LKKNW\". On Unix if you run `basename /usr/local/bin`\n+   *                          you get `bin`, which is what we want when we specify \"true\" for\n+   *                          leafDirectoryOnly. See also\n+   *                          http://www.gnu.org/software/coreutils/manual/html_node/basename-invocation.html\n+   */\n+  public static String getDirectoryContainingTheData(Dataset dataset, boolean leafDirectoryOnly) {\n     /**\n-     * @param leafDirectoryOnly By \"leaf\" directory, we mean \"4LKKNW\" rather\n-     * than \"10.5072/FK2/4LKKNW\". On Unix if you run `basename /usr/local/bin`\n-     * you get `bin`, which is what we want when we specify \"true\" for\n-     * leafDirectoryOnly. See also\n-     * http://www.gnu.org/software/coreutils/manual/html_node/basename-invocation.html\n+     * FIXME: What if there is more than one package in the dataset?\n+     * Shouldn't the directory be based on the package rather than the\n+     * \"authority\" and \"identifier\" values of the persistent ID of the\n+     * dataset? How will we support multiple packages in one dataset?\n+     *\n+     * By \"leaf\" we mean \"4LKKNW\" rather than \"10.5072/FK2/4LKKNW\"\n      */\n-    public static String getDirectoryContainingTheData(Dataset dataset, boolean leafDirectoryOnly) {\n-        /**\n-         * FIXME: What if there is more than one package in the dataset?\n-         * Shouldn't the directory be based on the package rather than the\n-         * \"authority\" and \"identifier\" values of the persistent ID of the\n-         * dataset? How will we support multiple packages in one dataset?\n-         *\n-         * By \"leaf\" we mean \"4LKKNW\" rather than \"10.5072/FK2/4LKKNW\"\n-         */\n-        boolean onlyOnPackagePerDatasetIsSupported = true;\n-        if (onlyOnPackagePerDatasetIsSupported) {\n-            String leafDirectory = dataset.getIdentifierForFileStorage();\n-            if (leafDirectoryOnly) {\n-\t\t    File f = new File( leafDirectory );\n-\t\t    return f.getName();\n-            } else {\n-                // The \"authority\" is something like \"FK2\".\n-                String relativePathToLeafDir = dataset.getAuthorityForFileStorage();\n-                return relativePathToLeafDir + File.separator + leafDirectory;\n-            }\n-        } else {\n-            throw new RuntimeException(\"Sorry, only one package per dataset is supported.\");\n-        }\n+    boolean onlyOnPackagePerDatasetIsSupported = true;\n+    if (onlyOnPackagePerDatasetIsSupported) {\n+      String leafDirectory = dataset.getIdentifierForFileStorage();\n+      if (leafDirectoryOnly) {\n+        File f = new File(leafDirectory);\n+        return f.getName();\n+      } else {\n+        // The \"authority\" is something like \"FK2\".\n+        String relativePathToLeafDir = dataset.getAuthorityForFileStorage();\n+        return relativePathToLeafDir + File.separator + leafDirectory;\n+      }\n+    } else {\n+      throw new RuntimeException(\"Sorry, only one package per dataset is supported.\");\n     }\n+  }\n \n-    /**\n-     * The reason this in JSON is that it probably makes sense to someday query\n-     * RSAL or some other \"big data\" component live for a list of remotes sites\n-     * to which a particular dataset is replicated to.\n-     */\n-    static JsonArray getStorageSitesAsJson(List<StorageSite> storageSites) {\n-        JsonArrayBuilder arraybuilder = Json.createArrayBuilder();\n-        if (storageSites == null || storageSites.isEmpty()) {\n-            return arraybuilder.build();\n-        }\n-        // Right now we have all the data right in the database setting but we should probably query RSAL to get the list.\n-        int countOfPrimarySites = 0;\n-        for (StorageSite storageSite : storageSites) {\n-            if (storageSite.isPrimaryStorage()) {\n-                countOfPrimarySites++;\n-            }\n-            arraybuilder.add(Json.createObjectBuilder()\n-                    .add(\"fqdn\", storageSite.getHostname())\n-                    .add(\"name\", storageSite.getName()));\n-        }\n-        int numExpectedPrimarySites = 1;\n-        if (countOfPrimarySites != numExpectedPrimarySites) {\n-            logger.warning(\"The number of expected primary sites is \" + numExpectedPrimarySites + \" but \" + countOfPrimarySites + \" were found.\");\n-        }\n-        return arraybuilder.build();\n+  /**\n+   * The reason this in JSON is that it probably makes sense to someday query\n+   * RSAL or some other \"big data\" component live for a list of remotes sites\n+   * to which a particular dataset is replicated to.\n+   */\n+  static JsonArray getStorageSitesAsJson(List<StorageSite> storageSites) {\n+    JsonArrayBuilder arraybuilder = Json.createArrayBuilder();\n+    if (storageSites == null || storageSites.isEmpty()) {\n+      return arraybuilder.build();\n+    }\n+    // Right now we have all the data right in the database setting but we should probably query RSAL to get the list.\n+    int countOfPrimarySites = 0;\n+    for (StorageSite storageSite : storageSites) {\n+      if (storageSite.isPrimaryStorage()) {\n+        countOfPrimarySites++;\n+      }\n+      arraybuilder.add(Json.createObjectBuilder()\n+        .add(\"fqdn\", storageSite.getHostname())\n+        .add(\"name\", storageSite.getName()));\n+    }\n+    int numExpectedPrimarySites = 1;\n+    if (countOfPrimarySites != numExpectedPrimarySites) {\n+      logger.warning(\n+        \"The number of expected primary sites is \" + numExpectedPrimarySites + \" but \" + countOfPrimarySites +\n+          \" were found.\");\n     }\n+    return arraybuilder.build();\n+  }\n \n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/26/RepositoryStorageAbstractionLayerUtil.java\nindex ee52254d6f5..97d583286e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/26/RepositoryStorageAbstractionLayerUtil.java\n@@ -13,6 +13,7 @@ import javax.json.JsonArray;\n import javax.json.JsonArrayBuilder;\n import javax.json.JsonObject;\n \n+\n public class RepositoryStorageAbstractionLayerUtil {\n \n     private static final Logger logger = Logger.getLogger(RepositoryStorageAbstractionLayerUtil.class.getCanonicalName());\n@@ -34,6 +35,7 @@ public class RepositoryStorageAbstractionLayerUtil {\n         if (localDataAccessParentDir == null) {\n             localDataAccessParentDir = File.separator + \"UNCONFIGURED ( \" + SettingsServiceBean.Key.LocalDataAccessPath + \" )\";\n         }\n+\n         boolean leafDirectoryOnly = true;\n         return localDataAccessParentDir + File.separator + getDirectoryContainingTheData(dataset, leafDirectoryOnly);\n     }\n@@ -51,6 +53,7 @@ public class RepositoryStorageAbstractionLayerUtil {\n      * leafDirectoryOnly. See also\n      * http://www.gnu.org/software/coreutils/manual/html_node/basename-invocation.html\n      */\n+\n     public static String getDirectoryContainingTheData(Dataset dataset, boolean leafDirectoryOnly) {\n         /**\n          * FIXME: What if there is more than one package in the dataset?\n@@ -64,8 +67,8 @@ public class RepositoryStorageAbstractionLayerUtil {\n         if (onlyOnPackagePerDatasetIsSupported) {\n             String leafDirectory = dataset.getIdentifierForFileStorage();\n             if (leafDirectoryOnly) {\n-\t\t    File f = new File( leafDirectory );\n-\t\t    return f.getName();\n+                File f = new File(leafDirectory);\n+                return f.getName();\n             } else {\n                 // The \"authority\" is something like \"FK2\".\n                 String relativePathToLeafDir = dataset.getAuthorityForFileStorage();\n@@ -81,26 +84,26 @@ public class RepositoryStorageAbstractionLayerUtil {\n      * RSAL or some other \"big data\" component live for a list of remotes sites\n      * to which a particular dataset is replicated to.\n      */\n+\n     static JsonArray getStorageSitesAsJson(List<StorageSite> storageSites) {\n         JsonArrayBuilder arraybuilder = Json.createArrayBuilder();\n         if (storageSites == null || storageSites.isEmpty()) {\n             return arraybuilder.build();\n         }\n         // Right now we have all the data right in the database setting but we should probably query RSAL to get the list.\n+\n         int countOfPrimarySites = 0;\n         for (StorageSite storageSite : storageSites) {\n             if (storageSite.isPrimaryStorage()) {\n                 countOfPrimarySites++;\n             }\n-            arraybuilder.add(Json.createObjectBuilder()\n-                    .add(\"fqdn\", storageSite.getHostname())\n-                    .add(\"name\", storageSite.getName()));\n+            arraybuilder.add(Json.createObjectBuilder().add(\"fqdn\", storageSite.getHostname()).add(\"name\", storageSite.getName()));\n         }\n+\n         int numExpectedPrimarySites = 1;\n         if (countOfPrimarySites != numExpectedPrimarySites) {\n             logger.warning(\"The number of expected primary sites is \" + numExpectedPrimarySites + \" but \" + countOfPrimarySites + \" were found.\");\n         }\n         return arraybuilder.build();\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "68",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/26/RepositoryStorageAbstractionLayerUtil.java\nindex ee52254d6f5..3780fd3eaf4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/26/RepositoryStorageAbstractionLayerUtil.java\n@@ -64,7 +64,7 @@ public class RepositoryStorageAbstractionLayerUtil {\n         if (onlyOnPackagePerDatasetIsSupported) {\n             String leafDirectory = dataset.getIdentifierForFileStorage();\n             if (leafDirectoryOnly) {\n-\t\t    File f = new File( leafDirectory );\n+              Filef f = new File( leafDirectory );\n \t\t    return f.getName();\n             } else {\n                 // The \"authority\" is something like \"FK2\".\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "68",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/26/RepositoryStorageAbstractionLayerUtil.java\nindex ee52254d6f5..a5843f1b5ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/26/RepositoryStorageAbstractionLayerUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/26/RepositoryStorageAbstractionLayerUtil.java\n@@ -64,7 +64,7 @@ public class RepositoryStorageAbstractionLayerUtil {\n         if (onlyOnPackagePerDatasetIsSupported) {\n             String leafDirectory = dataset.getIdentifierForFileStorage();\n             if (leafDirectoryOnly) {\n-\t\t    File f = new File( leafDirectory );\n+                File f = new File( leafDirectory );\n \t\t    return f.getName();\n             } else {\n                 // The \"authority\" is something like \"FK2\".\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
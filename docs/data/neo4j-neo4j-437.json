{
    "project_name": "neo4j-neo4j",
    "error_id": "437",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "82",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "251",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "267",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "153",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "154",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "359",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "159",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "405",
                    "column": "29",
                    "severity": "error",
                    "message": "'}' at column 29 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "408",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/437/RelationshipChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/437/RelationshipChecker.java\nindex 0895435bf2b..ec33d450516 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/437/RelationshipChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/437/RelationshipChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checker;\n \n import org.eclipse.collections.api.map.primitive.MutableIntObjectMap;\n@@ -78,7 +79,7 @@ class RelationshipChecker implements Checker\n     private final ProgressListener progress;\n     private final RelationshipTypeScanStore relationshipTypeScanStore;\n \n-    RelationshipChecker( CheckerContext context, MutableIntObjectMap<MutableIntSet> mandatoryProperties )\n+    RelationshipChecker(CheckerContext context, MutableIntObjectMap<MutableIntSet> mandatoryProperties)\n     {\n         this.context = context;\n         this.neoStores = context.neoStores;\n@@ -89,207 +90,207 @@ class RelationshipChecker implements Checker\n         this.recordLoader = context.recordLoader;\n         this.observedCounts = context.observedCounts;\n         this.mandatoryProperties = mandatoryProperties;\n-        this.indexes = context.indexAccessors.onlineRules( RELATIONSHIP );\n-        this.progress = context.progressReporter( this, \"Relationships\", neoStores.getRelationshipStore().getHighId() );\n+        this.indexes = context.indexAccessors.onlineRules(RELATIONSHIP);\n+        this.progress = context.progressReporter(this, \"Relationships\", neoStores.getRelationshipStore().getHighId());\n         this.relationshipTypeScanStore = context.relationshipTypeScanStore;\n     }\n \n     @Override\n-    public boolean shouldBeChecked( ConsistencyFlags flags )\n+    public boolean shouldBeChecked(ConsistencyFlags flags)\n     {\n         return flags.isCheckGraph() || !indexes.isEmpty() && flags.isCheckIndexes() || flags.isCheckRelationshipTypeScanStore();\n     }\n \n     @Override\n-    public void check( LongRange nodeIdRange, boolean firstRange, boolean lastRange ) throws Exception\n+    public void check(LongRange nodeIdRange, boolean firstRange, boolean lastRange) throws Exception\n     {\n-        execution.run( getClass().getSimpleName() + \"-relationships\", execution.partition( neoStores.getRelationshipStore(),\n-                ( from, to, last ) -> () -> check( nodeIdRange, firstRange, from, to, lastRange && last ) ) );\n+        execution.run(getClass().getSimpleName() + \"-relationships\", execution.partition(neoStores.getRelationshipStore(),\n+          (from, to, last) -> () -> check(nodeIdRange, firstRange, from, to, lastRange && last)));\n         // Let's not report progress for this since it's so much faster than store checks, it's just scanning the cache\n-        execution.run( getClass().getSimpleName() + \"-unusedRelationships\", execution.partition( nodeIdRange,\n-                ( from, to, last ) -> () -> checkNodesReferencingUnusedRelationships( from, to, context.pageCacheTracer ) ) );\n+        execution.run(getClass().getSimpleName() + \"-unusedRelationships\", execution.partition(nodeIdRange,\n+          (from, to, last) -> () -> checkNodesReferencingUnusedRelationships(from, to, context.pageCacheTracer)));\n     }\n \n-    private void check( LongRange nodeIdRange, boolean firstRound, long fromRelationshipId, long toRelationshipId, boolean last ) throws Exception\n+    private void check(LongRange nodeIdRange, boolean firstRound, long fromRelationshipId, long toRelationshipId, boolean last) throws Exception\n     {\n         RelationshipCounter counter = observedCounts.instantiateRelationshipCounter();\n         long[] typeHolder = new long[1];\n-        try ( RecordStorageReader reader = new RecordStorageReader( neoStores );\n-              var cursorTracer = context.pageCacheTracer.createPageCursorTracer( RELATIONSHIP_RANGE_CHECKER_TAG );\n-              RecordRelationshipScanCursor relationshipCursor = reader.allocateRelationshipScanCursor( cursorTracer );\n-              AllEntriesTokenScanReader relationshipTypeReader = relationshipTypeScanStore\n-                      .allEntityTokenRanges( fromRelationshipId, last ? Long.MAX_VALUE : toRelationshipId, cursorTracer );\n-              SafePropertyChainReader property = new SafePropertyChainReader( context, cursorTracer );\n-              SchemaComplianceChecker schemaComplianceChecker = new SchemaComplianceChecker( context, mandatoryProperties, indexes, cursorTracer,\n-                      context.memoryTracker ) )\n+        try (RecordStorageReader reader = new RecordStorageReader(neoStores);\n+             var cursorTracer = context.pageCacheTracer.createPageCursorTracer(RELATIONSHIP_RANGE_CHECKER_TAG);\n+             RecordRelationshipScanCursor relationshipCursor = reader.allocateRelationshipScanCursor(cursorTracer);\n+             AllEntriesTokenScanReader relationshipTypeReader = relationshipTypeScanStore\n+               .allEntityTokenRanges(fromRelationshipId, last ? Long.MAX_VALUE : toRelationshipId, cursorTracer);\n+             SafePropertyChainReader property = new SafePropertyChainReader(context, cursorTracer);\n+             SchemaComplianceChecker schemaComplianceChecker = new SchemaComplianceChecker(context, mandatoryProperties, indexes, cursorTracer,\n+               context.memoryTracker))\n         {\n             ProgressListener localProgress = progress.threadLocalReporter();\n             CacheAccess.Client client = cacheAccess.client();\n             MutableIntObjectMap<Value> propertyValues = new IntObjectHashMap<>();\n             Iterator<EntityTokenRange> relationshipTypeRangeIterator = relationshipTypeReader.iterator();\n-            EntityTokenIndexCheckState typeIndexState = new EntityTokenIndexCheckState( null, fromRelationshipId - 1 );\n+            EntityTokenIndexCheckState typeIndexState = new EntityTokenIndexCheckState(null, fromRelationshipId - 1);\n \n-            for ( long relationshipId = fromRelationshipId; relationshipId < toRelationshipId && !context.isCancelled(); relationshipId++ )\n+            for (long relationshipId = fromRelationshipId; relationshipId < toRelationshipId && !context.isCancelled(); relationshipId++)\n             {\n-                localProgress.add( 1 );\n-                relationshipCursor.single( relationshipId );\n+                localProgress.add(1);\n+                relationshipCursor.single(relationshipId);\n                 relationshipCursor.setForceLoad();\n-                if ( !relationshipCursor.next() )\n+                if (!relationshipCursor.next())\n                 {\n                     continue;\n                 }\n \n                 // Start/end nodes\n                 long startNode = relationshipCursor.getFirstNode();\n-                boolean startNodeIsWithinRange = nodeIdRange.isWithinRangeExclusiveTo( startNode );\n+                boolean startNodeIsWithinRange = nodeIdRange.isWithinRangeExclusiveTo(startNode);\n                 boolean startNodeIsNegativeOnFirstRound = startNode < 0 && firstRound;\n-                if ( startNodeIsWithinRange || startNodeIsNegativeOnFirstRound )\n+                if (startNodeIsWithinRange || startNodeIsNegativeOnFirstRound)\n                 {\n-                    checkRelationshipVsNode( client, relationshipCursor, startNode, relationshipCursor.isFirstInFirstChain(),\n-                            ( relationship, node ) -> reporter.forRelationship( relationship ).sourceNodeNotInUse( node ),\n-                            ( relationship, node ) -> reporter.forRelationship( relationship ).sourceNodeDoesNotReferenceBack( node ),\n-                            ( relationship, node ) -> reporter.forNode( node ).relationshipNotFirstInSourceChain( relationship ),\n-                            ( relationship, node ) -> reporter.forRelationship( relationship ).sourceNodeHasNoRelationships( node ),\n-                            relationship -> reporter.forRelationship( relationship ).illegalSourceNode(), cursorTracer );\n+                    checkRelationshipVsNode(client, relationshipCursor, startNode, relationshipCursor.isFirstInFirstChain(),\n+                      (relationship, node) -> reporter.forRelationship(relationship).sourceNodeNotInUse(node),\n+                      (relationship, node) -> reporter.forRelationship(relationship).sourceNodeDoesNotReferenceBack(node),\n+                      (relationship, node) -> reporter.forNode(node).relationshipNotFirstInSourceChain(relationship),\n+                      (relationship, node) -> reporter.forRelationship(relationship).sourceNodeHasNoRelationships(node),\n+                      relationship -> reporter.forRelationship(relationship).illegalSourceNode(), cursorTracer);\n                 }\n                 long endNode = relationshipCursor.getSecondNode();\n-                boolean endNodeIsWithinRange = nodeIdRange.isWithinRangeExclusiveTo( endNode );\n+                boolean endNodeIsWithinRange = nodeIdRange.isWithinRangeExclusiveTo(endNode);\n                 boolean endNodeIsNegativeOnFirstRound = endNode < 0 && firstRound;\n-                if ( endNodeIsWithinRange || endNodeIsNegativeOnFirstRound )\n+                if (endNodeIsWithinRange || endNodeIsNegativeOnFirstRound)\n                 {\n-                    checkRelationshipVsNode( client, relationshipCursor, endNode, relationshipCursor.isFirstInSecondChain(),\n-                            ( relationship, node ) -> reporter.forRelationship( relationship ).targetNodeNotInUse( node ),\n-                            ( relationship, node ) -> reporter.forRelationship( relationship ).targetNodeDoesNotReferenceBack( node ),\n-                            ( relationship, node ) -> reporter.forNode( node ).relationshipNotFirstInTargetChain( relationship ),\n-                            ( relationship, node ) -> reporter.forRelationship( relationship ).targetNodeHasNoRelationships( node ),\n-                            relationship -> reporter.forRelationship( relationship ).illegalTargetNode(), cursorTracer );\n+                    checkRelationshipVsNode(client, relationshipCursor, endNode, relationshipCursor.isFirstInSecondChain(),\n+                      (relationship, node) -> reporter.forRelationship(relationship).targetNodeNotInUse(node),\n+                      (relationship, node) -> reporter.forRelationship(relationship).targetNodeDoesNotReferenceBack(node),\n+                      (relationship, node) -> reporter.forNode(node).relationshipNotFirstInTargetChain(relationship),\n+                      (relationship, node) -> reporter.forRelationship(relationship).targetNodeHasNoRelationships(node),\n+                      relationship -> reporter.forRelationship(relationship).illegalTargetNode(), cursorTracer);\n                 }\n \n-                if ( firstRound )\n+                if (firstRound)\n                 {\n-                    if ( startNode >= context.highNodeId )\n+                    if (startNode >= context.highNodeId)\n                     {\n-                        reporter.forRelationship( relationshipCursor ).sourceNodeNotInUse( context.recordLoader.node( startNode, cursorTracer ) );\n+                        reporter.forRelationship(relationshipCursor).sourceNodeNotInUse(context.recordLoader.node(startNode, cursorTracer));\n                     }\n \n-                    if ( endNode >= context.highNodeId )\n+                    if (endNode >= context.highNodeId)\n                     {\n-                        reporter.forRelationship( relationshipCursor ).targetNodeNotInUse( context.recordLoader.node( endNode, cursorTracer ) );\n+                        reporter.forRelationship(relationshipCursor).targetNodeNotInUse(context.recordLoader.node(endNode, cursorTracer));\n                     }\n \n                     // Properties\n                     typeHolder[0] = relationshipCursor.getType();\n-                    lightClear( propertyValues );\n-                    boolean propertyChainIsOk = property.read( propertyValues, relationshipCursor, reporter::forRelationship, cursorTracer );\n-                    if ( propertyChainIsOk )\n+                    lightClear(propertyValues);\n+                    boolean propertyChainIsOk = property.read(propertyValues, relationshipCursor, reporter::forRelationship, cursorTracer);\n+                    if (propertyChainIsOk)\n                     {\n-                        schemaComplianceChecker.checkContainsMandatoryProperties( relationshipCursor, typeHolder, propertyValues, reporter::forRelationship );\n+                        schemaComplianceChecker.checkContainsMandatoryProperties(relationshipCursor, typeHolder, propertyValues, reporter::forRelationship);\n                         // Here only the very small indexes (or indexes that we can't read the values from, like fulltext indexes)\n                         // gets checked this way, larger indexes will be checked in IndexChecker\n-                        if ( context.consistencyFlags.isCheckIndexes() )\n+                        if (context.consistencyFlags.isCheckIndexes())\n                         {\n-                            schemaComplianceChecker.checkCorrectlyIndexed( relationshipCursor, typeHolder, propertyValues, reporter::forRelationship );\n+                            schemaComplianceChecker.checkCorrectlyIndexed(relationshipCursor, typeHolder, propertyValues, reporter::forRelationship);\n                         }\n                     }\n \n                     // Type and count\n-                    checkValidToken( relationshipCursor, relationshipCursor.type(), tokenHolders.relationshipTypeTokens(),\n-                            neoStores.getRelationshipTypeTokenStore(), ( rel, token ) -> reporter.forRelationship( rel ).illegalRelationshipType(),\n-                            ( rel, token ) -> reporter.forRelationship( rel ).relationshipTypeNotInUse( token ), cursorTracer );\n-                    observedCounts.incrementRelationshipTypeCounts( counter, relationshipCursor );\n+                    checkValidToken(relationshipCursor, relationshipCursor.type(), tokenHolders.relationshipTypeTokens(),\n+                      neoStores.getRelationshipTypeTokenStore(), (rel, token) -> reporter.forRelationship(rel).illegalRelationshipType(),\n+                      (rel, token) -> reporter.forRelationship(rel).relationshipTypeNotInUse(token), cursorTracer);\n+                    observedCounts.incrementRelationshipTypeCounts(counter, relationshipCursor);\n \n                     // Relationship type index\n-                    if ( context.consistencyFlags.isCheckRelationshipTypeScanStore() )\n+                    if (context.consistencyFlags.isCheckRelationshipTypeScanStore())\n                     {\n-                        checkRelationshipVsRelationshipTypeIndex( relationshipCursor, relationshipTypeRangeIterator, typeIndexState, relationshipId,\n-                                relationshipCursor.type(), fromRelationshipId, cursorTracer );\n+                        checkRelationshipVsRelationshipTypeIndex(relationshipCursor, relationshipTypeRangeIterator, typeIndexState, relationshipId,\n+                          relationshipCursor.type(), fromRelationshipId, cursorTracer);\n                     }\n                 }\n-                observedCounts.incrementRelationshipNodeCounts( counter, relationshipCursor, startNodeIsWithinRange, endNodeIsWithinRange );\n+                observedCounts.incrementRelationshipNodeCounts(counter, relationshipCursor, startNodeIsWithinRange, endNodeIsWithinRange);\n             }\n-            if ( !context.isCancelled() && context.consistencyFlags.isCheckRelationshipTypeScanStore() )\n+            if (!context.isCancelled() && context.consistencyFlags.isCheckRelationshipTypeScanStore())\n             {\n-                reportRemainingRelationshipTypeIndexEntries( relationshipTypeRangeIterator, typeIndexState, last ? Long.MAX_VALUE : toRelationshipId,\n-                        cursorTracer );\n+                reportRemainingRelationshipTypeIndexEntries(relationshipTypeRangeIterator, typeIndexState, last ? Long.MAX_VALUE : toRelationshipId,\n+                  cursorTracer);\n             }\n             localProgress.done();\n         }\n     }\n \n-    private void checkRelationshipVsRelationshipTypeIndex( RecordRelationshipScanCursor relationshipCursor,\n-            Iterator<EntityTokenRange> relationshipTypeRangeIterator, EntityTokenIndexCheckState relationshipTypeIndexState,\n-            long relationshipId, int type, long fromRelationshipId, PageCursorTracer cursorTracer )\n+    private void checkRelationshipVsRelationshipTypeIndex(RecordRelationshipScanCursor relationshipCursor,\n+                                                          Iterator<EntityTokenRange> relationshipTypeRangeIterator,\n+                                                          EntityTokenIndexCheckState relationshipTypeIndexState,\n+                                                          long relationshipId, int type, long fromRelationshipId, PageCursorTracer cursorTracer)\n     {\n         // Detect relationship-type combinations that exists in the relationship type index, but not in the store\n-        while ( relationshipTypeIndexState.needToMoveRangeForwardToReachEntity( relationshipId ) && !context.isCancelled() )\n+        while (relationshipTypeIndexState.needToMoveRangeForwardToReachEntity(relationshipId) && !context.isCancelled())\n         {\n-            if ( relationshipTypeRangeIterator.hasNext() )\n+            if (relationshipTypeRangeIterator.hasNext())\n             {\n-                if ( relationshipTypeIndexState.currentRange != null )\n+                if (relationshipTypeIndexState.currentRange != null)\n                 {\n-                    for ( long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1;\n-                          relationshipIdMissingFromStore < relationshipId && relationshipTypeIndexState.currentRange.covers( relationshipIdMissingFromStore );\n-                          relationshipIdMissingFromStore++ )\n+                    for (long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1;\n+                         relationshipIdMissingFromStore < relationshipId && relationshipTypeIndexState.currentRange.covers(relationshipIdMissingFromStore);\n+                         relationshipIdMissingFromStore++)\n                     {\n-                        if ( relationshipTypeIndexState.currentRange.tokens( relationshipIdMissingFromStore ).length > 0 )\n+                        if (relationshipTypeIndexState.currentRange.tokens(relationshipIdMissingFromStore).length > 0)\n                         {\n-                            reporter.forRelationshipTypeScan( new TokenScanDocument( relationshipTypeIndexState.currentRange ) )\n-                                    .relationshipNotInUse( recordLoader.relationship( relationshipIdMissingFromStore, cursorTracer ) );\n+                            reporter.forRelationshipTypeScan(new TokenScanDocument(relationshipTypeIndexState.currentRange))\n+                              .relationshipNotInUse(recordLoader.relationship(relationshipIdMissingFromStore, cursorTracer));\n                         }\n                     }\n                 }\n                 relationshipTypeIndexState.currentRange = relationshipTypeRangeIterator.next();\n-                relationshipTypeIndexState.lastCheckedEntityId = Math.max( fromRelationshipId, relationshipTypeIndexState.currentRange.entities()[0] ) - 1;\n-            }\n-            else\n+                relationshipTypeIndexState.lastCheckedEntityId = Math.max(fromRelationshipId, relationshipTypeIndexState.currentRange.entities()[0]) - 1;\n+            } else\n             {\n                 break;\n             }\n         }\n \n-        if ( relationshipTypeIndexState.currentRange != null && relationshipTypeIndexState.currentRange.covers( relationshipId ) )\n+        if (relationshipTypeIndexState.currentRange != null && relationshipTypeIndexState.currentRange.covers(relationshipId))\n         {\n-            for ( long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1; relationshipIdMissingFromStore < relationshipId;\n-                  relationshipIdMissingFromStore++ )\n+            for (long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1; relationshipIdMissingFromStore < relationshipId;\n+                 relationshipIdMissingFromStore++)\n             {\n-                if ( relationshipTypeIndexState.currentRange.tokens( relationshipIdMissingFromStore ).length > 0 )\n+                if (relationshipTypeIndexState.currentRange.tokens(relationshipIdMissingFromStore).length > 0)\n                 {\n-                    reporter.forRelationshipTypeScan( new TokenScanDocument( relationshipTypeIndexState.currentRange ) )\n-                            .relationshipNotInUse( recordLoader.relationship( relationshipIdMissingFromStore, cursorTracer ) );\n+                    reporter.forRelationshipTypeScan(new TokenScanDocument(relationshipTypeIndexState.currentRange))\n+                      .relationshipNotInUse(recordLoader.relationship(relationshipIdMissingFromStore, cursorTracer));\n                 }\n             }\n-            long[] relationshipTypesInTypeIndex = relationshipTypeIndexState.currentRange.tokens( relationshipId );\n-            validateTypeIds( relationshipCursor, type, relationshipTypesInTypeIndex, relationshipTypeIndexState.currentRange, cursorTracer );\n+            long[] relationshipTypesInTypeIndex = relationshipTypeIndexState.currentRange.tokens(relationshipId);\n+            validateTypeIds(relationshipCursor, type, relationshipTypesInTypeIndex, relationshipTypeIndexState.currentRange, cursorTracer);\n             relationshipTypeIndexState.lastCheckedEntityId = relationshipId;\n-        }\n-        else\n+        } else\n         {\n-            TokenScanDocument document = new TokenScanDocument( new EntityTokenRange( relationshipId / Long.SIZE, EntityTokenRange.NO_TOKENS, RELATIONSHIP ) );\n-            reporter.forRelationshipTypeScan( document ).relationshipTypeNotInIndex( recordLoader.relationship( relationshipId, cursorTracer ), type );\n+            TokenScanDocument document = new TokenScanDocument(new EntityTokenRange(relationshipId / Long.SIZE, EntityTokenRange.NO_TOKENS, RELATIONSHIP));\n+            reporter.forRelationshipTypeScan(document).relationshipTypeNotInIndex(recordLoader.relationship(relationshipId, cursorTracer), type);\n         }\n     }\n \n-    private void reportRemainingRelationshipTypeIndexEntries( Iterator<EntityTokenRange> relationshipTypeRangeIterator,\n-            EntityTokenIndexCheckState relationshipTypeIndexState, long toRelationshipId, PageCursorTracer cursorTracer )\n+    private void reportRemainingRelationshipTypeIndexEntries(Iterator<EntityTokenRange> relationshipTypeRangeIterator,\n+                                                             EntityTokenIndexCheckState relationshipTypeIndexState, long toRelationshipId,\n+                                                             PageCursorTracer cursorTracer)\n     {\n-        if ( relationshipTypeIndexState.currentRange == null && relationshipTypeRangeIterator.hasNext() )\n+        if (relationshipTypeIndexState.currentRange == null && relationshipTypeRangeIterator.hasNext())\n         {\n             // Seems that nobody touched this iterator before, i.e. no nodes in this whole range\n             relationshipTypeIndexState.currentRange = relationshipTypeRangeIterator.next();\n         }\n \n-        while ( relationshipTypeIndexState.currentRange != null && !context.isCancelled() )\n+        while (relationshipTypeIndexState.currentRange != null && !context.isCancelled())\n         {\n-            for ( long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1;\n-                  relationshipIdMissingFromStore < toRelationshipId &&\n-                          !relationshipTypeIndexState.needToMoveRangeForwardToReachEntity( relationshipIdMissingFromStore );\n-                  relationshipIdMissingFromStore++ )\n+            for (long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1;\n+                 relationshipIdMissingFromStore < toRelationshipId &&\n+                   !relationshipTypeIndexState.needToMoveRangeForwardToReachEntity(relationshipIdMissingFromStore);\n+                 relationshipIdMissingFromStore++)\n             {\n-                if ( relationshipTypeIndexState.currentRange.covers( relationshipIdMissingFromStore ) &&\n-                        relationshipTypeIndexState.currentRange.tokens( relationshipIdMissingFromStore ).length > 0 )\n+                if (relationshipTypeIndexState.currentRange.covers(relationshipIdMissingFromStore) &&\n+                  relationshipTypeIndexState.currentRange.tokens(relationshipIdMissingFromStore).length > 0)\n                 {\n-                    reporter.forRelationshipTypeScan( new TokenScanDocument( relationshipTypeIndexState.currentRange ) )\n-                            .relationshipNotInUse( recordLoader.relationship( relationshipIdMissingFromStore, cursorTracer ) );\n+                    reporter.forRelationshipTypeScan(new TokenScanDocument(relationshipTypeIndexState.currentRange))\n+                      .relationshipNotInUse(recordLoader.relationship(relationshipIdMissingFromStore, cursorTracer));\n                 }\n                 relationshipTypeIndexState.lastCheckedEntityId = relationshipIdMissingFromStore;\n             }\n@@ -297,123 +298,119 @@ class RelationshipChecker implements Checker\n         }\n     }\n \n-    private void validateTypeIds( RecordRelationshipScanCursor relationshipCursor, int typeInStore, long[] relationshipTypesInTypeIndex,\n-            EntityTokenRange entityTokenRange, PageCursorTracer cursorTracer )\n+    private void validateTypeIds(RecordRelationshipScanCursor relationshipCursor, int typeInStore, long[] relationshipTypesInTypeIndex,\n+                                 EntityTokenRange entityTokenRange, PageCursorTracer cursorTracer)\n     {\n-        compareTwoSortedLongArrays( PropertySchemaType.COMPLETE_ALL_TOKENS, new long[]{typeInStore}, relationshipTypesInTypeIndex,\n-                indexType -> reporter.forRelationshipTypeScan( new TokenScanDocument( entityTokenRange ) )\n-                        .relationshipDoesNotHaveExpectedRelationshipType( recordLoader.relationship( relationshipCursor.getId(), cursorTracer ),\n-                                indexType ),\n-                storeType -> reporter.forRelationshipTypeScan( new TokenScanDocument( entityTokenRange ) )\n-                        .relationshipTypeNotInIndex( recordLoader.relationship( relationshipCursor.getId(), cursorTracer ), storeType )\n+        compareTwoSortedLongArrays(PropertySchemaType.COMPLETE_ALL_TOKENS, new long[] {typeInStore}, relationshipTypesInTypeIndex,\n+          indexType -> reporter.forRelationshipTypeScan(new TokenScanDocument(entityTokenRange))\n+            .relationshipDoesNotHaveExpectedRelationshipType(recordLoader.relationship(relationshipCursor.getId(), cursorTracer),\n+              indexType),\n+          storeType -> reporter.forRelationshipTypeScan(new TokenScanDocument(entityTokenRange))\n+            .relationshipTypeNotInIndex(recordLoader.relationship(relationshipCursor.getId(), cursorTracer), storeType)\n         );\n     }\n \n-    private void checkRelationshipVsNode( CacheAccess.Client client, RecordRelationshipScanCursor relationshipCursor, long node, boolean firstInChain,\n-            BiConsumer<RelationshipRecord,NodeRecord> reportNodeNotInUse,\n-            BiConsumer<RelationshipRecord,NodeRecord> reportNodeDoesNotReferenceBack,\n-            BiConsumer<RelationshipRecord,NodeRecord> reportNodeNotFirstInChain,\n-            BiConsumer<RelationshipRecord,NodeRecord> reportNodeHasNoChain,\n-            Consumer<RelationshipRecord> reportIllegalNode, PageCursorTracer cursorTracer )\n+    private void checkRelationshipVsNode(CacheAccess.Client client, RecordRelationshipScanCursor relationshipCursor, long node, boolean firstInChain,\n+                                         BiConsumer<RelationshipRecord, NodeRecord> reportNodeNotInUse,\n+                                         BiConsumer<RelationshipRecord, NodeRecord> reportNodeDoesNotReferenceBack,\n+                                         BiConsumer<RelationshipRecord, NodeRecord> reportNodeNotFirstInChain,\n+                                         BiConsumer<RelationshipRecord, NodeRecord> reportNodeHasNoChain,\n+                                         Consumer<RelationshipRecord> reportIllegalNode, PageCursorTracer cursorTracer)\n     {\n         // Check validity of node reference\n-        if ( node < 0 )\n+        if (node < 0)\n         {\n-            reportIllegalNode.accept( recordLoader.relationship( relationshipCursor.getId(), cursorTracer ) );\n+            reportIllegalNode.accept(recordLoader.relationship(relationshipCursor.getId(), cursorTracer));\n             return;\n         }\n \n         // Check if node is in use\n-        boolean nodeInUse = client.getBooleanFromCache( node, CacheSlots.NodeLink.SLOT_IN_USE );\n-        if ( !nodeInUse )\n+        boolean nodeInUse = client.getBooleanFromCache(node, CacheSlots.NodeLink.SLOT_IN_USE);\n+        if (!nodeInUse)\n         {\n-            reportNodeNotInUse.accept( recordLoader.relationship( relationshipCursor.getId(), cursorTracer ), recordLoader.node( node, cursorTracer ) );\n+            reportNodeNotInUse.accept(recordLoader.relationship(relationshipCursor.getId(), cursorTracer), recordLoader.node(node, cursorTracer));\n             return;\n         }\n \n         // Check if node has nextRel reference at all\n-        long nodeNextRel = client.getFromCache( node, CacheSlots.NodeLink.SLOT_RELATIONSHIP_ID );\n-        if ( NULL_REFERENCE.is( nodeNextRel ) )\n+        long nodeNextRel = client.getFromCache(node, CacheSlots.NodeLink.SLOT_RELATIONSHIP_ID);\n+        if (NULL_REFERENCE.is(nodeNextRel))\n         {\n-            reportNodeHasNoChain.accept( recordLoader.relationship( relationshipCursor.getId(), cursorTracer ), recordLoader.node( node, cursorTracer ) );\n+            reportNodeHasNoChain.accept(recordLoader.relationship(relationshipCursor.getId(), cursorTracer), recordLoader.node(node, cursorTracer));\n             return;\n         }\n \n         // Check the node <--> relationship references\n-        boolean nodeIsDense = client.getBooleanFromCache( node, CacheSlots.NodeLink.SLOT_IS_DENSE );\n-        if ( !nodeIsDense )\n+        boolean nodeIsDense = client.getBooleanFromCache(node, CacheSlots.NodeLink.SLOT_IS_DENSE);\n+        if (!nodeIsDense)\n         {\n-            if ( firstInChain )\n+            if (firstInChain)\n             {\n-                if ( nodeNextRel != relationshipCursor.getId() )\n+                if (nodeNextRel != relationshipCursor.getId())\n                 {\n                     // Report RELATIONSHIP -> NODE inconsistency\n-                    reportNodeDoesNotReferenceBack.accept( recordLoader.relationship( relationshipCursor.getId(), cursorTracer ),\n-                            recordLoader.node( node, cursorTracer ) );\n+                    reportNodeDoesNotReferenceBack.accept(recordLoader.relationship(relationshipCursor.getId(), cursorTracer),\n+                      recordLoader.node(node, cursorTracer));\n                     // Before marking this node as fully checked we should also check and report any NODE -> RELATIONSHIP inconsistency\n-                    RelationshipRecord relationshipThatNodeActuallyReferences = recordLoader.relationship( nodeNextRel, cursorTracer );\n-                    if ( !relationshipThatNodeActuallyReferences.inUse() )\n+                    RelationshipRecord relationshipThatNodeActuallyReferences = recordLoader.relationship(nodeNextRel, cursorTracer);\n+                    if (!relationshipThatNodeActuallyReferences.inUse())\n                     {\n-                        reporter.forNode( recordLoader.node( node, cursorTracer ) ).relationshipNotInUse( relationshipThatNodeActuallyReferences );\n-                    }\n-                    else if ( relationshipThatNodeActuallyReferences.getFirstNode() != node && relationshipThatNodeActuallyReferences.getSecondNode() != node )\n+                        reporter.forNode(recordLoader.node(node, cursorTracer)).relationshipNotInUse(relationshipThatNodeActuallyReferences);\n+                    } else if (relationshipThatNodeActuallyReferences.getFirstNode() != node && relationshipThatNodeActuallyReferences.getSecondNode() != node)\n                     {\n-                        reporter.forNode( recordLoader.node( node,cursorTracer ) ).relationshipForOtherNode( relationshipThatNodeActuallyReferences );\n+                        reporter.forNode(recordLoader.node(node, cursorTracer)).relationshipForOtherNode(relationshipThatNodeActuallyReferences);\n                     }\n                 }\n-                client.putToCacheSingle( node, CacheSlots.NodeLink.SLOT_CHECK_MARK, 0 );\n+                client.putToCacheSingle(node, CacheSlots.NodeLink.SLOT_CHECK_MARK, 0);\n             }\n-            if ( !firstInChain && nodeNextRel == relationshipCursor.getId() )\n+            if (!firstInChain && nodeNextRel == relationshipCursor.getId())\n             {\n-                reportNodeNotFirstInChain.accept( recordLoader.relationship( relationshipCursor.getId(), cursorTracer ),\n-                        recordLoader.node( node, cursorTracer ) );\n+                reportNodeNotFirstInChain.accept(recordLoader.relationship(relationshipCursor.getId(), cursorTracer),\n+                  recordLoader.node(node, cursorTracer));\n             }\n         }\n     }\n \n-    private void checkNodesReferencingUnusedRelationships( long fromNodeId, long toNodeId, PageCacheTracer pageCacheTracer )\n+    private void checkNodesReferencingUnusedRelationships(long fromNodeId, long toNodeId, PageCacheTracer pageCacheTracer)\n     {\n         // Do this after we've done node.nextRel caching and checking of those. Checking also clears those values, so simply\n         // go through the cache and see if there are any relationship ids left and report them\n         CacheAccess.Client client = cacheAccess.client();\n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( UNUSED_RELATIONSHIP_CHECKER_TAG ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(UNUSED_RELATIONSHIP_CHECKER_TAG))\n         {\n-            for ( long id = fromNodeId; id < toNodeId && !context.isCancelled(); id++ )\n+            for (long id = fromNodeId; id < toNodeId && !context.isCancelled(); id++)\n             {\n                 // Only check if we haven't come across this sparse node while checking relationships\n-                boolean nodeInUse = client.getBooleanFromCache( id, CacheSlots.NodeLink.SLOT_IN_USE );\n-                if ( nodeInUse )\n+                boolean nodeInUse = client.getBooleanFromCache(id, CacheSlots.NodeLink.SLOT_IN_USE);\n+                if (nodeInUse)\n                 {\n-                    boolean needsChecking = client.getBooleanFromCache( id, CacheSlots.NodeLink.SLOT_CHECK_MARK );\n-                    if ( needsChecking )\n+                    boolean needsChecking = client.getBooleanFromCache(id, CacheSlots.NodeLink.SLOT_CHECK_MARK);\n+                    if (needsChecking)\n                     {\n-                        long nodeNextRel = client.getFromCache( id, CacheSlots.NodeLink.SLOT_RELATIONSHIP_ID );\n-                        boolean nodeIsDense = client.getBooleanFromCache( id, CacheSlots.NodeLink.SLOT_IS_DENSE );\n-                        if ( !NULL_REFERENCE.is( nodeNextRel ) )\n+                        long nodeNextRel = client.getFromCache(id, CacheSlots.NodeLink.SLOT_RELATIONSHIP_ID);\n+                        boolean nodeIsDense = client.getBooleanFromCache(id, CacheSlots.NodeLink.SLOT_IS_DENSE);\n+                        if (!NULL_REFERENCE.is(nodeNextRel))\n                         {\n-                            if ( !nodeIsDense )\n+                            if (!nodeIsDense)\n                             {\n-                                RelationshipRecord relationship = recordLoader.relationship( nodeNextRel, cursorTracer );\n-                                NodeRecord node = recordLoader.node( id, cursorTracer );\n-                                if ( !relationship.inUse() )\n+                                RelationshipRecord relationship = recordLoader.relationship(nodeNextRel, cursorTracer);\n+                                NodeRecord node = recordLoader.node(id, cursorTracer);\n+                                if (!relationship.inUse())\n                                 {\n-                                    reporter.forNode( node ).relationshipNotInUse( relationship );\n-                                }\n-                                else\n+                                    reporter.forNode(node).relationshipNotInUse(relationship);\n+                                } else\n                                 {\n-                                    reporter.forNode( node ).relationshipForOtherNode( relationship );\n+                                    reporter.forNode(node).relationshipForOtherNode(relationship);\n                                 }\n-                            }\n-                            else\n+                            } else\n                             {\n-                                RelationshipGroupRecord group = recordLoader.relationshipGroup( nodeNextRel, cursorTracer );\n-                                if ( !group.inUse() )\n+                                RelationshipGroupRecord group = recordLoader.relationshipGroup(nodeNextRel, cursorTracer);\n+                                if (!group.inUse())\n                                 {\n-                                    reporter.forNode( recordLoader.node( id, cursorTracer ) ).relationshipGroupNotInUse( group );\n-                                }\n-                                else\n+                                    reporter.forNode(recordLoader.node(id, cursorTracer)).relationshipGroupNotInUse(group);\n+                                } else\n                                 {\n-                                    reporter.forNode( recordLoader.node( id, cursorTracer ) ).relationshipGroupHasOtherOwner( group );\n+                                    reporter.forNode(recordLoader.node(id, cursorTracer)).relationshipGroupHasOtherOwner(group);\n                                 }\n                             }\n                         }\n@@ -426,6 +423,6 @@ class RelationshipChecker implements Checker\n     @Override\n     public String toString()\n     {\n-        return String.format( \"%s[highId:%d,indexesToCheck:%d]\", getClass().getSimpleName(), neoStores.getRelationshipStore().getHighId(), indexes.size() );\n+        return String.format(\"%s[highId:%d,indexesToCheck:%d]\", getClass().getSimpleName(), neoStores.getRelationshipStore().getHighId(), indexes.size());\n     }\n }\n",
            "diff_size": 168
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "230",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 248).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/437/RelationshipChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/437/RelationshipChecker.java\nindex 0895435bf2b..7ef8bd3fd3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/437/RelationshipChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/437/RelationshipChecker.java\n@@ -227,8 +227,7 @@ class RelationshipChecker implements Checker\n             {\n                 if ( relationshipTypeIndexState.currentRange != null )\n                 {\n-                    for ( long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1;\n-                          relationshipIdMissingFromStore < relationshipId && relationshipTypeIndexState.currentRange.covers( relationshipIdMissingFromStore );\n+                    for ( long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1; relationshipIdMissingFromStore < relationshipId && relationshipTypeIndexState.currentRange.covers( relationshipIdMissingFromStore );\n                           relationshipIdMissingFromStore++ )\n                     {\n                         if ( relationshipTypeIndexState.currentRange.tokens( relationshipIdMissingFromStore ).length > 0 )\n@@ -249,8 +248,7 @@ class RelationshipChecker implements Checker\n \n         if ( relationshipTypeIndexState.currentRange != null && relationshipTypeIndexState.currentRange.covers( relationshipId ) )\n         {\n-            for ( long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1; relationshipIdMissingFromStore < relationshipId;\n-                  relationshipIdMissingFromStore++ )\n+            for ( long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1; relationshipIdMissingFromStore < relationshipId; relationshipIdMissingFromStore++ )\n             {\n                 if ( relationshipTypeIndexState.currentRange.tokens( relationshipIdMissingFromStore ).length > 0 )\n                 {\n@@ -280,8 +278,7 @@ class RelationshipChecker implements Checker\n \n         while ( relationshipTypeIndexState.currentRange != null && !context.isCancelled() )\n         {\n-            for ( long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1;\n-                  relationshipIdMissingFromStore < toRelationshipId &&\n+            for ( long relationshipIdMissingFromStore = relationshipTypeIndexState.lastCheckedEntityId + 1; relationshipIdMissingFromStore < toRelationshipId &&\n                           !relationshipTypeIndexState.needToMoveRangeForwardToReachEntity( relationshipIdMissingFromStore );\n                   relationshipIdMissingFromStore++ )\n             {\n@@ -358,7 +355,7 @@ class RelationshipChecker implements Checker\n                     }\n                     else if ( relationshipThatNodeActuallyReferences.getFirstNode() != node && relationshipThatNodeActuallyReferences.getSecondNode() != node )\n                     {\n-                        reporter.forNode( recordLoader.node( node,cursorTracer ) ).relationshipForOtherNode( relationshipThatNodeActuallyReferences );\n+                        reporter.forNode( recordLoader.node( node, cursorTracer ) ).relationshipForOtherNode( relationshipThatNodeActuallyReferences );\n                     }\n                 }\n                 client.putToCacheSingle( node, CacheSlots.NodeLink.SLOT_CHECK_MARK, 0 );\n@@ -428,4 +425,4 @@ class RelationshipChecker implements Checker\n     {\n         return String.format( \"%s[highId:%d,indexesToCheck:%d]\", getClass().getSimpleName(), neoStores.getRelationshipStore().getHighId(), indexes.size() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
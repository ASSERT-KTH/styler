{
    "project_name": "apache-iotdb",
    "error_id": "540",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.service;\n\nimport org.apache.iotdb.db.conf.IoTDBConstant;\nimport org.apache.iotdb.db.exception.StartupException;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/540/StartupChecks.java\nindex d57ef78c23d..7dd054a1c32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/540/StartupChecks.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.service;\n \n import org.apache.iotdb.db.conf.IoTDBConstant;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/540/StartupChecks.java\nindex d57ef78c23d..37764ed7322 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/540/StartupChecks.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.service;\n \n import org.apache.iotdb.db.conf.IoTDBConstant;\n@@ -69,7 +70,9 @@ public class StartupChecks {\n     return this;\n   }\n \n-  /** execute every pretests. */\n+  /**\n+   * execute every pretests.\n+   */\n   public void verify() throws StartupException {\n     for (StartupCheck check : preChecks) {\n       check.execute();\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 52, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 52, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 54, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 52, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 54, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 52, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 50, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 48, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 48, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 48, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 50, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 48, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 46, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/540/StartupChecks.java\nindex d57ef78c23d..6af1213a157 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/540/StartupChecks.java\n@@ -21,41 +21,33 @@ package org.apache.iotdb.db.service;\n import org.apache.iotdb.db.conf.IoTDBConstant;\n import org.apache.iotdb.db.exception.StartupException;\n import org.apache.iotdb.db.utils.CommonUtils;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n public class StartupChecks {\n \n   private static final Logger logger = LoggerFactory.getLogger(StartupChecks.class);\n-  public static final StartupCheck checkJMXPort =\n-      () -> {\n-        String jmxPort = System.getProperty(IoTDBConstant.IOTDB_JMX_PORT);\n-        if (jmxPort == null) {\n-          logger.warn(\n-              \"{} missing from {}.sh(Unix or OS X, if you use Windows,\" + \" check conf/{}.bat)\",\n-              IoTDBConstant.IOTDB_JMX_PORT,\n-              IoTDBConstant.ENV_FILE_NAME,\n-              IoTDBConstant.ENV_FILE_NAME);\n-        } else {\n-          logger.info(\"JMX is enabled to receive remote connection on port {}\", jmxPort);\n-        }\n-      };\n-  public static final StartupCheck checkJDK =\n-      () -> {\n-        int version = CommonUtils.getJdkVersion();\n-        if (version < IoTDBConstant.MIN_SUPPORTED_JDK_VERSION) {\n-          throw new StartupException(\n-              String.format(\n-                  \"Requires JDK version >= %d, current version is %d\",\n-                  IoTDBConstant.MIN_SUPPORTED_JDK_VERSION, version));\n-        } else {\n-          logger.info(\"JDK version is {}.\", version);\n-        }\n-      };\n+  public static final StartupCheck checkJMXPort = () -> {\n+                                                    String jmxPort = System.getProperty(IoTDBConstant.IOTDB_JMX_PORT);\n+                                                    if (jmxPort == null) {\n+                                                      logger.warn(\"{} missing from {}.sh(Unix or OS X, if you use Windows,\" + \" check conf/{}.bat)\", IoTDBConstant.IOTDB_JMX_PORT, IoTDBConstant.ENV_FILE_NAME, IoTDBConstant.ENV_FILE_NAME);\n+                                                    } else {\n+                                                      logger.info(\"JMX is enabled to receive remote connection on port {}\", jmxPort);\n+                                                    }\n+                                                  };\n+  public static final StartupCheck checkJDK = () -> {\n+                                                int version = CommonUtils.getJdkVersion();\n+                                                if (version < IoTDBConstant.MIN_SUPPORTED_JDK_VERSION) {\n+                                                  throw new StartupException(String.format(\n+                                                    \"Requires JDK version >= %d, current version is %d\",\n+                                                    IoTDBConstant.MIN_SUPPORTED_JDK_VERSION,\n+                                                    version));\n+                                                } else {\n+                                                  logger.info(\"JDK version is {}.\", version);\n+                                                }\n+                                              };\n   private final List<StartupCheck> preChecks = new ArrayList<>();\n   private final List<StartupCheck> defaultTests = new ArrayList<>();\n \n@@ -70,9 +62,10 @@ public class StartupChecks {\n   }\n \n   /** execute every pretests. */\n+\n   public void verify() throws StartupException {\n     for (StartupCheck check : preChecks) {\n       check.execute();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/540/StartupChecks.java\nindex d57ef78c23d..7dd054a1c32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/540/StartupChecks.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.service;\n \n import org.apache.iotdb.db.conf.IoTDBConstant;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/540/StartupChecks.java\nindex d57ef78c23d..7dd054a1c32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/540/StartupChecks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/540/StartupChecks.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.service;\n \n import org.apache.iotdb.db.conf.IoTDBConstant;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
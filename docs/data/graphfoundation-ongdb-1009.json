{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1009",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1009/LogHeaderWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1009/LogHeaderWriter.java\nindex c214174ba23..79dbac78573 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1009/LogHeaderWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1009/LogHeaderWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.io.File;\n@@ -33,45 +34,45 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogVersions.CURRENT_FO\n \n public class LogHeaderWriter\n {\n-    private LogHeaderWriter()\n-    {\n-    }\n+  private LogHeaderWriter()\n+  {\n+  }\n \n-    public static void writeLogHeader( FlushableChannel channel, long logVersion, long previousCommittedTxId )\n-            throws IOException\n-    {\n-        channel.putLong( encodeLogVersion( logVersion ) );\n-        channel.putLong( previousCommittedTxId );\n-    }\n+  public static void writeLogHeader(FlushableChannel channel, long logVersion, long previousCommittedTxId)\n+      throws IOException\n+  {\n+    channel.putLong(encodeLogVersion(logVersion));\n+    channel.putLong(previousCommittedTxId);\n+  }\n \n-    public static ByteBuffer writeLogHeader( ByteBuffer buffer, long logVersion, long previousCommittedTxId )\n-    {\n-        buffer.clear();\n-        buffer.putLong( encodeLogVersion( logVersion ) );\n-        buffer.putLong( previousCommittedTxId );\n-        buffer.flip();\n-        return buffer;\n-    }\n+  public static ByteBuffer writeLogHeader(ByteBuffer buffer, long logVersion, long previousCommittedTxId)\n+  {\n+    buffer.clear();\n+    buffer.putLong(encodeLogVersion(logVersion));\n+    buffer.putLong(previousCommittedTxId);\n+    buffer.flip();\n+    return buffer;\n+  }\n \n-    public static void writeLogHeader( FileSystemAbstraction fileSystem, File file, long logVersion,\n-                                       long previousLastCommittedTxId ) throws IOException\n+  public static void writeLogHeader(FileSystemAbstraction fileSystem, File file, long logVersion,\n+                                    long previousLastCommittedTxId) throws IOException\n+  {\n+    try (StoreChannel channel = fileSystem.open(file, OpenMode.READ_WRITE))\n     {\n-        try ( StoreChannel channel = fileSystem.open( file, OpenMode.READ_WRITE ) )\n-        {\n-            writeLogHeader( channel, logVersion, previousLastCommittedTxId );\n-        }\n+      writeLogHeader(channel, logVersion, previousLastCommittedTxId);\n     }\n+  }\n \n-    public static void writeLogHeader( StoreChannel channel, long logVersion, long previousLastCommittedTxId )\n-            throws IOException\n-    {\n-        ByteBuffer buffer = ByteBuffer.allocate( LOG_HEADER_SIZE );\n-        writeLogHeader( buffer, logVersion, previousLastCommittedTxId );\n-        channel.writeAll( buffer );\n-    }\n+  public static void writeLogHeader(StoreChannel channel, long logVersion, long previousLastCommittedTxId)\n+      throws IOException\n+  {\n+    ByteBuffer buffer = ByteBuffer.allocate(LOG_HEADER_SIZE);\n+    writeLogHeader(buffer, logVersion, previousLastCommittedTxId);\n+    channel.writeAll(buffer);\n+  }\n \n-    public static long encodeLogVersion( long logVersion )\n-    {\n-        return logVersion | (((long) CURRENT_FORMAT_VERSION) << 56);\n-    }\n+  public static long encodeLogVersion(long logVersion)\n+  {\n+    return logVersion | (((long) CURRENT_FORMAT_VERSION) << 56);\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1009/LogHeaderWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1009/LogHeaderWriter.java\nindex c214174ba23..0faa1d2baa0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1009/LogHeaderWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1009/LogHeaderWriter.java\n@@ -37,9 +37,8 @@ public class LogHeaderWriter\n     {\n     }\n \n-    public static void writeLogHeader( FlushableChannel channel, long logVersion, long previousCommittedTxId )\n-            throws IOException\n-    {\n+    public static void writeLogHeader( FlushableChannel channel, long logVersion, long previousCommittedTxId ) throws IOException\n+{\n         channel.putLong( encodeLogVersion( logVersion ) );\n         channel.putLong( previousCommittedTxId );\n     }\n@@ -53,18 +52,16 @@ public class LogHeaderWriter\n         return buffer;\n     }\n \n-    public static void writeLogHeader( FileSystemAbstraction fileSystem, File file, long logVersion,\n-                                       long previousLastCommittedTxId ) throws IOException\n-    {\n+    public static void writeLogHeader( FileSystemAbstraction fileSystem, File file, long logVersion, long previousLastCommittedTxId ) throws IOException\n+{\n         try ( StoreChannel channel = fileSystem.open( file, OpenMode.READ_WRITE ) )\n         {\n             writeLogHeader( channel, logVersion, previousLastCommittedTxId );\n         }\n     }\n \n-    public static void writeLogHeader( StoreChannel channel, long logVersion, long previousLastCommittedTxId )\n-            throws IOException\n-    {\n+    public static void writeLogHeader( StoreChannel channel, long logVersion, long previousLastCommittedTxId ) throws IOException\n+{\n         ByteBuffer buffer = ByteBuffer.allocate( LOG_HEADER_SIZE );\n         writeLogHeader( buffer, logVersion, previousLastCommittedTxId );\n         channel.writeAll( buffer );\n@@ -72,6 +69,6 @@ public class LogHeaderWriter\n \n     public static long encodeLogVersion( long logVersion )\n     {\n-        return logVersion | (((long) CURRENT_FORMAT_VERSION) << 56);\n+        return logVersion | (((long) CURRENT_FORMAT_VERSION) << 56 );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
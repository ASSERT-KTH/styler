{
    "project_name": "apache-iotdb",
    "error_id": "535",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.iotdb.db.mqtt;\n\nimport org.apache.iotdb.db.conf.IoTDBConfig;\nimport org.apache.iotdb.db.conf.IoTDBDescriptor;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/535/PublishHandler.java\nindex 0c72b6770c6..6b6af458426 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/535/PublishHandler.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.iotdb.db.mqtt;\n \n import org.apache.iotdb.db.conf.IoTDBConfig;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/535/PublishHandler.java\nindex 0c72b6770c6..e1c975ce49a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/535/PublishHandler.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.iotdb.db.mqtt;\n \n import org.apache.iotdb.db.conf.IoTDBConfig;\n@@ -38,7 +39,9 @@ import org.slf4j.LoggerFactory;\n \n import java.util.List;\n \n-/** PublishHandler handle the messages from MQTT clients. */\n+/**\n+ * PublishHandler handle the messages from MQTT clients.\n+ */\n public class PublishHandler extends AbstractInterceptHandler {\n \n   private static final Logger LOG = LoggerFactory.getLogger(PublishHandler.class);\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/535/PublishHandler.java\nindex 0c72b6770c6..8cbb0aa1325 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/535/PublishHandler.java\n@@ -28,21 +28,19 @@ import org.apache.iotdb.db.qp.executor.PlanExecutor;\n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n import org.apache.iotdb.db.qp.physical.crud.InsertRowPlan;\n import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n-\n import io.moquette.interception.AbstractInterceptHandler;\n import io.moquette.interception.messages.InterceptPublishMessage;\n import io.netty.buffer.ByteBuf;\n import io.netty.handler.codec.mqtt.MqttQoS;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.List;\n \n /** PublishHandler handle the messages from MQTT clients. */\n+\n public class PublishHandler extends AbstractInterceptHandler {\n \n   private static final Logger LOG = LoggerFactory.getLogger(PublishHandler.class);\n-\n   private IPlanExecutor executor;\n   private PayloadFormatter payloadFormat;\n \n@@ -72,15 +70,13 @@ public class PublishHandler extends AbstractInterceptHandler {\n     String topic = msg.getTopicName();\n     String username = msg.getUsername();\n     MqttQoS qos = msg.getQos();\n-\n     LOG.debug(\n-        \"Receive publish message. clientId: {}, username: {}, qos: {}, topic: {}, payload: {}\",\n-        clientId,\n-        username,\n-        qos,\n-        topic,\n-        payload);\n-\n+\"Receive publish message. clientId: {}, username: {}, qos: {}, topic: {}, payload: {}\",\n+clientId,\n+username,\n+qos,\n+topic,\n+payload);\n     List<Message> events = payloadFormat.format(payload);\n     if (events == null) {\n       return;\n@@ -92,14 +88,12 @@ public class PublishHandler extends AbstractInterceptHandler {\n       if (event == null) {\n         continue;\n       }\n-\n       InsertRowPlan plan = new InsertRowPlan();\n       plan.setTime(event.getTimestamp());\n       plan.setMeasurements(event.getMeasurements().toArray(new String[0]));\n       plan.setValues(event.getValues().toArray(new Object[0]));\n       plan.setDataTypes(new TSDataType[event.getValues().size()]);\n       plan.setNeedInferType(true);\n-\n       boolean status = false;\n       try {\n         plan.setPrefixPath(new PartialPath(event.getDevice()));\n@@ -112,17 +106,14 @@ public class PublishHandler extends AbstractInterceptHandler {\n             event.getTimestamp(),\n             e);\n       }\n-\n       LOG.debug(\"event process result: {}\", status);\n     }\n   }\n \n-  private boolean executeNonQuery(PhysicalPlan plan)\n-      throws QueryProcessException, StorageGroupNotSetException, StorageEngineException {\n+  private boolean executeNonQuery(PhysicalPlan plan) throws QueryProcessException, StorageGroupNotSetException, StorageEngineException {\n     if (IoTDBDescriptor.getInstance().getConfig().isReadOnly()) {\n-      throw new QueryProcessException(\n-          \"Current system mode is read-only, does not support non-query operation\");\n+      throw new QueryProcessException(\"Current system mode is read-only, does not support non-query operation\");\n     }\n     return executor.processNonQuery(plan);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/535/PublishHandler.java\nindex 0c72b6770c6..6b6af458426 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/535/PublishHandler.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.iotdb.db.mqtt;\n \n import org.apache.iotdb.db.conf.IoTDBConfig;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/535/PublishHandler.java\nindex 0c72b6770c6..6b6af458426 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/535/PublishHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/535/PublishHandler.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.iotdb.db.mqtt;\n \n import org.apache.iotdb.db.conf.IoTDBConfig;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
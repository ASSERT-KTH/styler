{
    "project_name": "Activiti-Activiti",
    "error_id": "217",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.bpmn.webservice;\n\nimport java.util.Collection;\nimport java.util.HashMap;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/217/BpmnInterface.java\nindex 45cebb350b2..605a39df19e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/217/BpmnInterface.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.webservice;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/217/BpmnInterface.java\nindex 45cebb350b2..7261b84cfa8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/217/BpmnInterface.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.webservice;\n \n import java.util.Collection;\n@@ -18,64 +19,62 @@ import java.util.Map;\n \n /**\n  * An Interface defines a set of operations that are implemented by services external to the process.\n- * \n-\n  */\n public class BpmnInterface {\n \n-  protected String id;\n+    protected String id;\n \n-  protected String name;\n+    protected String name;\n \n-  protected BpmnInterfaceImplementation implementation;\n+    protected BpmnInterfaceImplementation implementation;\n \n-  /**\n-   * Mapping of the operations of this interface. The key of the map is the id of the operation, for easy retrieval.\n-   */\n-  protected Map<String, Operation> operations = new HashMap<String, Operation>();\n+    /**\n+     * Mapping of the operations of this interface. The key of the map is the id of the operation, for easy retrieval.\n+     */\n+    protected Map<String, Operation> operations = new HashMap<String, Operation>();\n \n-  public BpmnInterface() {\n+    public BpmnInterface() {\n \n-  }\n+    }\n \n-  public BpmnInterface(String id, String name) {\n-    setId(id);\n-    setName(name);\n-  }\n+    public BpmnInterface(String id, String name) {\n+        setId(id);\n+        setName(name);\n+    }\n \n-  public String getId() {\n-    return id;\n-  }\n+    public String getId() {\n+        return id;\n+    }\n \n-  public void setId(String id) {\n-    this.id = id;\n-  }\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n \n-  public String getName() {\n-    return name;\n-  }\n+    public String getName() {\n+        return name;\n+    }\n \n-  public void setName(String name) {\n-    this.name = name;\n-  }\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n \n-  public void addOperation(Operation operation) {\n-    operations.put(operation.getId(), operation);\n-  }\n+    public void addOperation(Operation operation) {\n+        operations.put(operation.getId(), operation);\n+    }\n \n-  public Operation getOperation(String operationId) {\n-    return operations.get(operationId);\n-  }\n+    public Operation getOperation(String operationId) {\n+        return operations.get(operationId);\n+    }\n \n-  public Collection<Operation> getOperations() {\n-    return operations.values();\n-  }\n+    public Collection<Operation> getOperations() {\n+        return operations.values();\n+    }\n \n-  public BpmnInterfaceImplementation getImplementation() {\n-    return implementation;\n-  }\n+    public BpmnInterfaceImplementation getImplementation() {\n+        return implementation;\n+    }\n \n-  public void setImplementation(BpmnInterfaceImplementation implementation) {\n-    this.implementation = implementation;\n-  }\n+    public void setImplementation(BpmnInterfaceImplementation implementation) {\n+        this.implementation = implementation;\n+    }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/217/BpmnInterface.java\nindex 45cebb350b2..7395ed2c72b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/217/BpmnInterface.java\n@@ -21,12 +21,12 @@ import java.util.Map;\n  * \n \n  */\n+\n+\n public class BpmnInterface {\n \n   protected String id;\n-\n   protected String name;\n-\n   protected BpmnInterfaceImplementation implementation;\n \n   /**\n@@ -35,7 +35,6 @@ public class BpmnInterface {\n   protected Map<String, Operation> operations = new HashMap<String, Operation>();\n \n   public BpmnInterface() {\n-\n   }\n \n   public BpmnInterface(String id, String name) {\n@@ -78,4 +77,4 @@ public class BpmnInterface {\n   public void setImplementation(BpmnInterfaceImplementation implementation) {\n     this.implementation = implementation;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/217/BpmnInterface.java\nindex 45cebb350b2..605a39df19e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/217/BpmnInterface.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.webservice;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/217/BpmnInterface.java\nindex 45cebb350b2..605a39df19e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/217/BpmnInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/217/BpmnInterface.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.webservice;\n \n import java.util.Collection;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
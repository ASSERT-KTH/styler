{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2555",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2555/SecuritySettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2555/SecuritySettings.java\nindex 26c5fd44de0..f7521a3f9bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2555/SecuritySettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2555/SecuritySettings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.configuration;\n \n import java.io.File;\n@@ -52,319 +53,319 @@ import static org.neo4j.kernel.impl.proc.ProcedureConfig.PROC_ALLOWED_SETTING_RO\n /**\n  * Settings for security module\n  */\n-@Description( \"Security configuration settings\" )\n+@Description(\"Security configuration settings\")\n public class SecuritySettings implements LoadableConfig\n {\n-    public static final String NATIVE_REALM_NAME = \"native\";\n-    public static final String LDAP_REALM_NAME = \"ldap\";\n-    public static final String PLUGIN_REALM_NAME_PREFIX = \"plugin-\";\n-\n-    //=========================================================================\n-    // Realm settings\n-    //=========================================================================\n-\n-    @Description( \"The authentication and authorization provider that contains both the users and roles. \" +\n-                  \"This can be one of the built-in `\" + NATIVE_REALM_NAME + \"` or `\" + LDAP_REALM_NAME + \"` providers, \" +\n-                  \"or it can be an externally provided plugin, with a custom name prefixed by `\" +\n-                  PLUGIN_REALM_NAME_PREFIX + \"`, i.e. `\" + PLUGIN_REALM_NAME_PREFIX + \"<AUTH_PROVIDER_NAME>`.\" )\n-    public static final Setting<String> auth_provider =\n-            setting( \"dbms.security.auth_provider\", STRING, NATIVE_REALM_NAME );\n-\n-    @Description( \"A list of security authentication and authorization providers containing the users and roles. \" +\n-                  \"They will be queried in the given order when login is attempted.\" )\n-    @Internal\n-    public static final Setting<List<String>> auth_providers =\n-            derivedSetting( \"dbms.security.auth_providers\", auth_provider, Arrays::asList, STRING_LIST );\n-\n-    @Description( \"Enable authentication via native authentication provider.\" )\n-    @Internal\n-    public static final Setting<Boolean> native_authentication_enabled =\n-            derivedSetting( \"dbms.security.native.authentication_enabled\", auth_providers,\n-                    providers -> providers.contains( NATIVE_REALM_NAME ), BOOLEAN );\n-\n-    @Description( \"Enable authorization via native authorization provider.\" )\n-    @Internal\n-    public static final Setting<Boolean> native_authorization_enabled =\n-            derivedSetting( \"dbms.security.native.authorization_enabled\", auth_providers,\n-                    providers -> providers.contains( NATIVE_REALM_NAME ), BOOLEAN );\n-\n-    @Description( \"Enable authentication via settings configurable LDAP authentication provider.\" )\n-    @Internal\n-    public static final Setting<Boolean> ldap_authentication_enabled =\n-            derivedSetting( \"dbms.security.ldap.authentication_enabled\", auth_providers,\n-                    providers -> providers.contains( LDAP_REALM_NAME ), BOOLEAN );\n-\n-    @Description( \"Enable authorization via settings configurable LDAP authorization provider.\" )\n-    @Internal\n-    public static final Setting<Boolean> ldap_authorization_enabled =\n-            derivedSetting( \"dbms.security.ldap.authorization_enabled\", auth_providers,\n-                    providers -> providers.contains( LDAP_REALM_NAME ), BOOLEAN );\n-\n-    @Description( \"Enable authentication via plugin authentication providers.\" )\n-    @Internal\n-    public static final Setting<Boolean> plugin_authentication_enabled =\n-            derivedSetting( \"dbms.security.plugin.authentication_enabled\", auth_providers,\n-                    providers -> providers.stream().anyMatch( r -> r.startsWith( PLUGIN_REALM_NAME_PREFIX ) ),\n-                    BOOLEAN );\n-\n-    @Description( \"Enable authorization via plugin authorization providers.\" )\n-    @Internal\n-    public static final Setting<Boolean> plugin_authorization_enabled =\n-            derivedSetting( \"dbms.security.plugin.authorization_enabled\", auth_providers,\n-                    providers -> providers.stream().anyMatch( r -> r.startsWith( PLUGIN_REALM_NAME_PREFIX ) ),\n-                    BOOLEAN );\n-\n-    //=========================================================================\n-    // LDAP settings\n-    //=========================================================================\n-\n-    @Description( \"URL of LDAP server to use for authentication and authorization. \" +\n-                  \"The format of the setting is `<protocol>://<hostname>:<port>`, where hostname is the only \" +\n-                  \"required field. The supported values for protocol are `ldap` (default) and `ldaps`. \" +\n-                  \"The default port for `ldap` is 389 and for `ldaps` 636. For example: \" +\n-                  \"`ldaps://ldap.example.com:10389`.\\n\\n\" +\n-                  \"You may want to consider using STARTTLS (`dbms.security.ldap.use_starttls`) instead of LDAPS \" +\n-                  \"for secure connections, in which case the correct protocol is `ldap`.\" )\n-    public static final Setting<String> ldap_server =\n-            setting( \"dbms.security.ldap.host\", STRING, \"localhost\" );\n-\n-    @Description( \"Use secure communication with the LDAP server using opportunistic TLS. \" +\n-            \"First an initial insecure connection will be made with the LDAP server, and a STARTTLS command will be \" +\n-            \"issued to negotiate an upgrade of the connection to TLS before initiating authentication.\" )\n-    public static final Setting<Boolean> ldap_use_starttls =\n-            setting( \"dbms.security.ldap.use_starttls\", BOOLEAN, FALSE );\n-\n-    @Description(\n-            \"The LDAP referral behavior when creating a connection. This is one of `follow`, `ignore` or `throw`.\\n\" +\n-            \"\\n\" +\n-            \"* `follow` automatically follows any referrals\\n\" +\n-            \"* `ignore` ignores any referrals\\n\" +\n-            \"* `throw` throws an exception, which will lead to authentication failure\" )\n-    public static final Setting<String> ldap_referral =\n-            setting( \"dbms.security.ldap.referral\", STRING, \"follow\" );\n-\n-    @Description( \"The timeout for establishing an LDAP connection. If a connection with the LDAP server cannot be \" +\n-                  \"established within the given time the attempt is aborted. \" +\n-                  \"A value of 0 means to use the network protocol's (i.e., TCP's) timeout value.\" )\n-    public static final Setting<Duration> ldap_connection_timeout =\n-            setting( \"dbms.security.ldap.connection_timeout\", DURATION, \"30s\" );\n-\n-    @Description( \"The timeout for an LDAP read request (i.e. search). If the LDAP server does not respond within \" +\n-                  \"the given time the request will be aborted. A value of 0 means wait for a response indefinitely.\" )\n-    public static final Setting<Duration> ldap_read_timeout =\n-            setting( \"dbms.security.ldap.read_timeout\", DURATION, \"30s\" );\n-\n-    //-----------------------------------------------------\n-    // LDAP authentication settings\n-    //-----------------------------------------------------\n-\n-    @Description( \"LDAP authentication mechanism. This is one of `simple` or a SASL mechanism supported by JNDI, \" +\n-                  \"for example `DIGEST-MD5`. `simple` is basic username\" +\n-                  \" and password authentication and SASL is used for more advanced mechanisms. See RFC 2251 LDAPv3 \" +\n-                  \"documentation for more details.\" )\n-    public static final Setting<String> ldap_authentication_mechanism =\n-            setting( \"dbms.security.ldap.authentication.mechanism\", STRING, \"simple\" );\n-\n-    @Description(\n-            \"LDAP user DN template. An LDAP object is referenced by its distinguished name (DN), and a user DN is \" +\n-            \"an LDAP fully-qualified unique user identifier. This setting is used to generate an LDAP DN that \" +\n-            \"conforms with the LDAP directory's schema from the user principal that is submitted with the \" +\n-            \"authentication token when logging in. The special token {0} is a \" +\n-            \"placeholder where the user principal will be substituted into the DN string.\" )\n-    public static final Setting<String> ldap_authentication_user_dn_template =\n-            setting( \"dbms.security.ldap.authentication.user_dn_template\", STRING, \"uid={0},ou=users,dc=example,dc=com\" );\n-\n-    @Description( \"Determines if the result of authentication via the LDAP server should be cached or not. \" +\n-                  \"Caching is used to limit the number of LDAP requests that have to be made over the network \" +\n-                  \"for users that have already been authenticated successfully. A user can be authenticated against \" +\n-                  \"an existing cache entry (instead of via an LDAP server) as long as it is alive \" +\n-                  \"(see `dbms.security.auth_cache_ttl`).\\n\" +\n-                  \"An important consequence of setting this to `true` is that \" +\n-                  \"Neo4j then needs to cache a hashed version of the credentials in order to perform credentials \" +\n-                  \"matching. This hashing is done using a cryptographic hash function together with a random salt. \" +\n-                  \"Preferably a conscious decision should be made if this method is considered acceptable by \" +\n-                  \"the security standards of the organization in which this Neo4j instance is deployed.\" )\n-    public static final Setting<Boolean> ldap_authentication_cache_enabled =\n-            setting( \"dbms.security.ldap.authentication.cache_enabled\", BOOLEAN, \"true\" );\n-\n-    @Description( \"Perform authentication with sAMAccountName instead of DN.\\n\" +\n-                  \"Using this setting requires `dbms.security.ldap.authorization.system_username` and \" +\n-                  \"dbms.security.ldap.authorization.system_password to be used since there is no way to log in \" +\n-                  \"through ldap directly with the sAMAccountName, instead the login name will be resolved to a DN \" +\n-                  \"that will be used to log in with.\" )\n-    public static final Setting<Boolean> ldap_authentication_use_samaccountname =\n-            setting( \"dbms.security.ldap.authentication.use_samaccountname\", BOOLEAN, FALSE );\n-\n-    //-----------------------------------------------------\n-    // LDAP authorization settings\n-    //-----------------------------------------------------\n-\n-    @Description( \"Perform LDAP search for authorization info using a system account instead of the user's own account.\\n\\n\" +\n-                  \"If this is set to `false` (default), the search for group membership will be performed \" +\n-                  \"directly after authentication using the LDAP context bound with the user's own account. \" +\n-                  \"The mapped roles will be cached for the duration of `dbms.security.auth_cache_ttl`, \" +\n-                  \"and then expire, requiring re-authentication. To avoid frequently having to re-authenticate \" +\n-                  \"sessions you may want to set a relatively long auth cache expiration time together with this \" +\n-                  \"option. NOTE: This option will only work if the users are permitted to search for their \" +\n-                  \"own group membership attributes in the directory.\\n\\n\" +\n-                  \"If this is set to `true`, the search will be performed using a special system account user \" +\n-                  \"with read access to all the users in the directory. \" +\n-                  \"You need to specify the username and password using the settings \" +\n-                  \"`dbms.security.ldap.authorization.system_username` and \" +\n-                  \"`dbms.security.ldap.authorization.system_password` with this option. \" +\n-                  \"Note that this account only needs read access to the relevant parts of the LDAP directory \" +\n-                  \"and does not need to have access rights to Neo4j, or any other systems.\" )\n-    public static final Setting<Boolean> ldap_authorization_use_system_account =\n-            setting( \"dbms.security.ldap.authorization.use_system_account\", BOOLEAN, FALSE );\n-\n-    @Description(\n-            \"An LDAP system account username to use for authorization searches when \" +\n-            \"`dbms.security.ldap.authorization.use_system_account` is `true`. \" +\n-            \"Note that the `dbms.security.ldap.authentication.user_dn_template` will not be applied to \" +\n-            \"this username, so you may have to specify a full DN.\" )\n-    public static final Setting<String> ldap_authorization_system_username =\n-            setting( \"dbms.security.ldap.authorization.system_username\", STRING, NO_DEFAULT );\n-\n-    @Description(\n-            \"An LDAP system account password to use for authorization searches when \" +\n-            \"`dbms.security.ldap.authorization.use_system_account` is `true`.\" )\n-    public static final Setting<String> ldap_authorization_system_password =\n-            setting( \"dbms.security.ldap.authorization.system_password\", STRING, NO_DEFAULT );\n-\n-    @Description( \"The name of the base object or named context to search for user objects when \" +\n-                  \"LDAP authorization is enabled. A common case is that this matches the last part \" +\n-                  \"of `dbms.security.ldap.authentication.user_dn_template`.\" )\n-    public static final Setting<String> ldap_authorization_user_search_base =\n-            setting( \"dbms.security.ldap.authorization.user_search_base\", STRING, \"ou=users,dc=example,dc=com\" );\n-\n-    @Description( \"The LDAP search filter to search for a user principal when LDAP authorization is \" +\n-                  \"enabled. The filter should contain the placeholder token {0} which will be substituted for the \" +\n-                  \"user principal.\" )\n-    public static final Setting<String> ldap_authorization_user_search_filter =\n-            setting( \"dbms.security.ldap.authorization.user_search_filter\", STRING, \"(&(objectClass=*)(uid={0}))\" );\n-\n-    @Description( \"A list of attribute names on a user object that contains groups to be used for mapping to roles \" +\n-                  \"when LDAP authorization is enabled.\" )\n-    public static final Setting<List<String>> ldap_authorization_group_membership_attribute_names =\n-            setting( \"dbms.security.ldap.authorization.group_membership_attributes\", STRING_LIST, \"memberOf\" );\n-\n-    @Description( \"An authorization mapping from LDAP group names to Neo4j role names. \" +\n-                  \"The map should be formatted as a semicolon separated list of key-value pairs, where the \" +\n-                  \"key is the LDAP group name and the value is a comma separated list of corresponding role names. \" +\n-                  \"For example: group1=role1;group2=role2;group3=role3,role4,role5\\n\" +\n-                  \"\\n\" +\n-                  \"You could also use whitespaces and quotes around group names to make this mapping more readable, \" +\n-                  \"for example: \\n\" +\n-                  \"\\n\" +\n-                  \"----\\n\" +\n-                  \"+dbms.security.ldap.authorization.group_to_role_mapping+=\\\\\\n\" +\n-                  \"         \\\"cn=Neo4j Read Only,cn=users,dc=example,dc=com\\\"      = reader;    \\\\\\n\" +\n-                  \"         \\\"cn=Neo4j Read-Write,cn=users,dc=example,dc=com\\\"     = publisher; \\\\\\n\" +\n-                  \"         \\\"cn=Neo4j Schema Manager,cn=users,dc=example,dc=com\\\" = architect; \\\\\\n\" +\n-                  \"         \\\"cn=Neo4j Administrator,cn=users,dc=example,dc=com\\\"  = admin\\n\" +\n-                  \"----\" )\n-    public static final Setting<String> ldap_authorization_group_to_role_mapping =\n-            setting( \"dbms.security.ldap.authorization.group_to_role_mapping\", STRING, NO_DEFAULT );\n-\n-    //=========================================================================\n-    // Cache settings\n-    //=========================================================================\n-\n-    @Description( \"The time to live (TTL) for cached authentication and authorization info when using \" +\n-                  \"external auth providers (LDAP or plugin). Setting the TTL to 0 will disable auth caching. \" +\n-                  \"Disabling caching while using the LDAP auth provider requires the use of an LDAP system account \" +\n-                  \"for resolving authorization information.\" )\n-    public static final Setting<Duration> auth_cache_ttl =\n-            setting( \"dbms.security.auth_cache_ttl\", DURATION, \"10m\" );\n-\n-    @Description( \"Enable time-based eviction of the authentication and authorization info cache for \" +\n-                  \"external auth providers (LDAP or plugin). Disabling this setting will make the cache \" +\n-                  \"live forever and only be evicted when `dbms.security.auth_cache_max_capacity` is exceeded.\" )\n-    public static final Setting<Boolean> auth_cache_use_ttl =\n-            setting( \"dbms.security.auth_cache_use_ttl\", BOOLEAN, \"true\" );\n-\n-    @Description( \"The maximum capacity for authentication and authorization caches (respectively).\" )\n-    public static final Setting<Integer> auth_cache_max_capacity =\n-            setting( \"dbms.security.auth_cache_max_capacity\", INTEGER, \"10000\" );\n-\n-    //=========================================================================\n-    // Security log settings\n-    //=========================================================================\n-\n-    @Description( \"Path to the security log file.\" )\n-    public static final Setting<File> security_log_filename = derivedSetting( \"dbms.logs.security.path\",\n-            GraphDatabaseSettings.logs_directory,\n-            logs -> new File( logs, \"security.log\" ),\n-            PATH );\n-\n-    @Description( \"Security log level threshold.\" )\n-    public static final Setting<Level> security_log_level = setting( \"dbms.logs.security.level\",\n-            options( Level.class ), \"INFO\" );\n-\n-    @Description( \"Set to log successful authentication events to the security log. \" +\n-                  \"If this is set to `false` only failed authentication events will be logged, which \" +\n-                  \"could be useful if you find that the successful events spam the logs too much, \" +\n-                  \"and you do not require full auditing capability.\" )\n-    public static final Setting<Boolean> security_log_successful_authentication =\n-            setting( \"dbms.security.log_successful_authentication\", BOOLEAN, \"true\" );\n-\n-    @Description( \"Threshold for rotation of the security log.\" )\n-    public static final Setting<Long> store_security_log_rotation_threshold =\n-            buildSetting( \"dbms.logs.security.rotation.size\", BYTES, \"20m\" ).constraint( range( 0L, Long.MAX_VALUE ) ).build();\n-\n-    @Description( \"Minimum time interval after last rotation of the security log before it may be rotated again.\" )\n-    public static final Setting<Duration> store_security_log_rotation_delay =\n-            setting( \"dbms.logs.security.rotation.delay\", DURATION, \"300s\" );\n-\n-    @Description( \"Maximum number of history files for the security log.\" )\n-    public static final Setting<Integer> store_security_log_max_archives =\n-            buildSetting( \"dbms.logs.security.rotation.keep_number\", INTEGER, \"7\" ).constraint( min(1) ).build();\n-\n-    //=========================================================================\n-    // Procedure security settings\n-    //=========================================================================\n-\n-    @Description( \"The default role that can execute all procedures and user-defined functions that are not covered \" +\n-                  \"by the `\" + PROC_ALLOWED_SETTING_ROLES + \"` setting. If the `\" + PROC_ALLOWED_SETTING_DEFAULT_NAME +\n-                  \"` setting is the empty string (default), procedures will be executed according to the same security \" +\n-                  \"rules as normal Cypher statements.\" )\n-    public static final Setting<String> default_allowed = setting( PROC_ALLOWED_SETTING_DEFAULT_NAME, STRING, \"\" );\n-\n-    @Description( \"This provides a finer level of control over which roles can execute procedures than the \" +\n-                  \"`\" + PROC_ALLOWED_SETTING_DEFAULT_NAME + \"` setting. For example: `+dbms.security.procedures.roles=\" +\n-                  \"apoc.convert.*:reader;apoc.load.json*:writer;apoc.trigger.add:TriggerHappy+` will allow the role \" +\n-                  \"`reader` to execute all procedures in the `apoc.convert` namespace, the role `writer` to execute \" +\n-                  \"all procedures in the `apoc.load` namespace that starts with `json` and the role `TriggerHappy` \" +\n-                  \"to execute the specific procedure `apoc.trigger.add`. Procedures not matching any of these \" +\n-                  \"patterns will be subject to the `\" + PROC_ALLOWED_SETTING_DEFAULT_NAME + \"` setting.\" )\n-    public static final Setting<String> procedure_roles = setting( PROC_ALLOWED_SETTING_ROLES, STRING, \"\" );\n-\n-    //=========================================================================\n-    // Misc settings\n-    //=========================================================================\n-\n-    @Internal\n-    @Description( \"Set to true if connection pooling should be used for authorization searches using the \" +\n-                  \"system account.\" )\n-    public static final Setting<Boolean> ldap_authorization_connection_pooling =\n-            setting( \"unsupported.dbms.security.ldap.authorization.connection_pooling\", BOOLEAN, \"true\" );\n-\n-    //=========================================================================\n-    // Property level security settings\n-    //=========================================================================\n-\n-    @Description( \"Set to true to enable property level security.\" )\n-    public static final Setting<Boolean> property_level_authorization_enabled =\n-            setting( \"dbms.security.property_level.enabled\", BOOLEAN, \"false\" );\n-\n-    @Description( \"An authorization mapping for property level access for roles. \" +\n-            \"The map should be formatted as a semicolon separated list of key-value pairs, where the \" +\n-            \"key is the role name and the value is a comma separated list of blacklisted properties. \" +\n-            \"For example: role1=prop1;role2=prop2;role3=prop3,prop4,prop5\\n\\n\" +\n-            \"You could also use whitespaces and quotes around group names to make this mapping more readable, \" +\n-            \"for example: dbms.security.property_level.blacklist=\\\\\\n\" +\n-            \"         \\\"role1\\\"      = ssn;    \\\\\\n\" +\n-            \"         \\\"role2\\\"      = ssn,income; \\\\\\n\" )\n-    public static final Setting<String> property_level_authorization_permissions =\n-            setting( \"dbms.security.property_level.blacklist\", STRING, NO_DEFAULT );\n+  public static final String NATIVE_REALM_NAME = \"native\";\n+  public static final String LDAP_REALM_NAME = \"ldap\";\n+  public static final String PLUGIN_REALM_NAME_PREFIX = \"plugin-\";\n+\n+  //=========================================================================\n+  // Realm settings\n+  //=========================================================================\n+\n+  @Description(\"The authentication and authorization provider that contains both the users and roles. \" +\n+      \"This can be one of the built-in `\" + NATIVE_REALM_NAME + \"` or `\" + LDAP_REALM_NAME + \"` providers, \" +\n+      \"or it can be an externally provided plugin, with a custom name prefixed by `\" +\n+      PLUGIN_REALM_NAME_PREFIX + \"`, i.e. `\" + PLUGIN_REALM_NAME_PREFIX + \"<AUTH_PROVIDER_NAME>`.\")\n+  public static final Setting<String> auth_provider =\n+      setting(\"dbms.security.auth_provider\", STRING, NATIVE_REALM_NAME);\n+\n+  @Description(\"A list of security authentication and authorization providers containing the users and roles. \" +\n+      \"They will be queried in the given order when login is attempted.\")\n+  @Internal\n+  public static final Setting<List<String>> auth_providers =\n+      derivedSetting(\"dbms.security.auth_providers\", auth_provider, Arrays::asList, STRING_LIST);\n+\n+  @Description(\"Enable authentication via native authentication provider.\")\n+  @Internal\n+  public static final Setting<Boolean> native_authentication_enabled =\n+      derivedSetting(\"dbms.security.native.authentication_enabled\", auth_providers,\n+          providers -> providers.contains(NATIVE_REALM_NAME), BOOLEAN);\n+\n+  @Description(\"Enable authorization via native authorization provider.\")\n+  @Internal\n+  public static final Setting<Boolean> native_authorization_enabled =\n+      derivedSetting(\"dbms.security.native.authorization_enabled\", auth_providers,\n+          providers -> providers.contains(NATIVE_REALM_NAME), BOOLEAN);\n+\n+  @Description(\"Enable authentication via settings configurable LDAP authentication provider.\")\n+  @Internal\n+  public static final Setting<Boolean> ldap_authentication_enabled =\n+      derivedSetting(\"dbms.security.ldap.authentication_enabled\", auth_providers,\n+          providers -> providers.contains(LDAP_REALM_NAME), BOOLEAN);\n+\n+  @Description(\"Enable authorization via settings configurable LDAP authorization provider.\")\n+  @Internal\n+  public static final Setting<Boolean> ldap_authorization_enabled =\n+      derivedSetting(\"dbms.security.ldap.authorization_enabled\", auth_providers,\n+          providers -> providers.contains(LDAP_REALM_NAME), BOOLEAN);\n+\n+  @Description(\"Enable authentication via plugin authentication providers.\")\n+  @Internal\n+  public static final Setting<Boolean> plugin_authentication_enabled =\n+      derivedSetting(\"dbms.security.plugin.authentication_enabled\", auth_providers,\n+          providers -> providers.stream().anyMatch(r -> r.startsWith(PLUGIN_REALM_NAME_PREFIX)),\n+          BOOLEAN);\n+\n+  @Description(\"Enable authorization via plugin authorization providers.\")\n+  @Internal\n+  public static final Setting<Boolean> plugin_authorization_enabled =\n+      derivedSetting(\"dbms.security.plugin.authorization_enabled\", auth_providers,\n+          providers -> providers.stream().anyMatch(r -> r.startsWith(PLUGIN_REALM_NAME_PREFIX)),\n+          BOOLEAN);\n+\n+  //=========================================================================\n+  // LDAP settings\n+  //=========================================================================\n+\n+  @Description(\"URL of LDAP server to use for authentication and authorization. \" +\n+      \"The format of the setting is `<protocol>://<hostname>:<port>`, where hostname is the only \" +\n+      \"required field. The supported values for protocol are `ldap` (default) and `ldaps`. \" +\n+      \"The default port for `ldap` is 389 and for `ldaps` 636. For example: \" +\n+      \"`ldaps://ldap.example.com:10389`.\\n\\n\" +\n+      \"You may want to consider using STARTTLS (`dbms.security.ldap.use_starttls`) instead of LDAPS \" +\n+      \"for secure connections, in which case the correct protocol is `ldap`.\")\n+  public static final Setting<String> ldap_server =\n+      setting(\"dbms.security.ldap.host\", STRING, \"localhost\");\n+\n+  @Description(\"Use secure communication with the LDAP server using opportunistic TLS. \" +\n+      \"First an initial insecure connection will be made with the LDAP server, and a STARTTLS command will be \" +\n+      \"issued to negotiate an upgrade of the connection to TLS before initiating authentication.\")\n+  public static final Setting<Boolean> ldap_use_starttls =\n+      setting(\"dbms.security.ldap.use_starttls\", BOOLEAN, FALSE);\n+\n+  @Description(\n+      \"The LDAP referral behavior when creating a connection. This is one of `follow`, `ignore` or `throw`.\\n\" +\n+          \"\\n\" +\n+          \"* `follow` automatically follows any referrals\\n\" +\n+          \"* `ignore` ignores any referrals\\n\" +\n+          \"* `throw` throws an exception, which will lead to authentication failure\")\n+  public static final Setting<String> ldap_referral =\n+      setting(\"dbms.security.ldap.referral\", STRING, \"follow\");\n+\n+  @Description(\"The timeout for establishing an LDAP connection. If a connection with the LDAP server cannot be \" +\n+      \"established within the given time the attempt is aborted. \" +\n+      \"A value of 0 means to use the network protocol's (i.e., TCP's) timeout value.\")\n+  public static final Setting<Duration> ldap_connection_timeout =\n+      setting(\"dbms.security.ldap.connection_timeout\", DURATION, \"30s\");\n+\n+  @Description(\"The timeout for an LDAP read request (i.e. search). If the LDAP server does not respond within \" +\n+      \"the given time the request will be aborted. A value of 0 means wait for a response indefinitely.\")\n+  public static final Setting<Duration> ldap_read_timeout =\n+      setting(\"dbms.security.ldap.read_timeout\", DURATION, \"30s\");\n+\n+  //-----------------------------------------------------\n+  // LDAP authentication settings\n+  //-----------------------------------------------------\n+\n+  @Description(\"LDAP authentication mechanism. This is one of `simple` or a SASL mechanism supported by JNDI, \" +\n+      \"for example `DIGEST-MD5`. `simple` is basic username\" +\n+      \" and password authentication and SASL is used for more advanced mechanisms. See RFC 2251 LDAPv3 \" +\n+      \"documentation for more details.\")\n+  public static final Setting<String> ldap_authentication_mechanism =\n+      setting(\"dbms.security.ldap.authentication.mechanism\", STRING, \"simple\");\n+\n+  @Description(\n+      \"LDAP user DN template. An LDAP object is referenced by its distinguished name (DN), and a user DN is \" +\n+          \"an LDAP fully-qualified unique user identifier. This setting is used to generate an LDAP DN that \" +\n+          \"conforms with the LDAP directory's schema from the user principal that is submitted with the \" +\n+          \"authentication token when logging in. The special token {0} is a \" +\n+          \"placeholder where the user principal will be substituted into the DN string.\")\n+  public static final Setting<String> ldap_authentication_user_dn_template =\n+      setting(\"dbms.security.ldap.authentication.user_dn_template\", STRING, \"uid={0},ou=users,dc=example,dc=com\");\n+\n+  @Description(\"Determines if the result of authentication via the LDAP server should be cached or not. \" +\n+      \"Caching is used to limit the number of LDAP requests that have to be made over the network \" +\n+      \"for users that have already been authenticated successfully. A user can be authenticated against \" +\n+      \"an existing cache entry (instead of via an LDAP server) as long as it is alive \" +\n+      \"(see `dbms.security.auth_cache_ttl`).\\n\" +\n+      \"An important consequence of setting this to `true` is that \" +\n+      \"Neo4j then needs to cache a hashed version of the credentials in order to perform credentials \" +\n+      \"matching. This hashing is done using a cryptographic hash function together with a random salt. \" +\n+      \"Preferably a conscious decision should be made if this method is considered acceptable by \" +\n+      \"the security standards of the organization in which this Neo4j instance is deployed.\")\n+  public static final Setting<Boolean> ldap_authentication_cache_enabled =\n+      setting(\"dbms.security.ldap.authentication.cache_enabled\", BOOLEAN, \"true\");\n+\n+  @Description(\"Perform authentication with sAMAccountName instead of DN.\\n\" +\n+      \"Using this setting requires `dbms.security.ldap.authorization.system_username` and \" +\n+      \"dbms.security.ldap.authorization.system_password to be used since there is no way to log in \" +\n+      \"through ldap directly with the sAMAccountName, instead the login name will be resolved to a DN \" +\n+      \"that will be used to log in with.\")\n+  public static final Setting<Boolean> ldap_authentication_use_samaccountname =\n+      setting(\"dbms.security.ldap.authentication.use_samaccountname\", BOOLEAN, FALSE);\n+\n+  //-----------------------------------------------------\n+  // LDAP authorization settings\n+  //-----------------------------------------------------\n+\n+  @Description(\"Perform LDAP search for authorization info using a system account instead of the user's own account.\\n\\n\" +\n+      \"If this is set to `false` (default), the search for group membership will be performed \" +\n+      \"directly after authentication using the LDAP context bound with the user's own account. \" +\n+      \"The mapped roles will be cached for the duration of `dbms.security.auth_cache_ttl`, \" +\n+      \"and then expire, requiring re-authentication. To avoid frequently having to re-authenticate \" +\n+      \"sessions you may want to set a relatively long auth cache expiration time together with this \" +\n+      \"option. NOTE: This option will only work if the users are permitted to search for their \" +\n+      \"own group membership attributes in the directory.\\n\\n\" +\n+      \"If this is set to `true`, the search will be performed using a special system account user \" +\n+      \"with read access to all the users in the directory. \" +\n+      \"You need to specify the username and password using the settings \" +\n+      \"`dbms.security.ldap.authorization.system_username` and \" +\n+      \"`dbms.security.ldap.authorization.system_password` with this option. \" +\n+      \"Note that this account only needs read access to the relevant parts of the LDAP directory \" +\n+      \"and does not need to have access rights to Neo4j, or any other systems.\")\n+  public static final Setting<Boolean> ldap_authorization_use_system_account =\n+      setting(\"dbms.security.ldap.authorization.use_system_account\", BOOLEAN, FALSE);\n+\n+  @Description(\n+      \"An LDAP system account username to use for authorization searches when \" +\n+          \"`dbms.security.ldap.authorization.use_system_account` is `true`. \" +\n+          \"Note that the `dbms.security.ldap.authentication.user_dn_template` will not be applied to \" +\n+          \"this username, so you may have to specify a full DN.\")\n+  public static final Setting<String> ldap_authorization_system_username =\n+      setting(\"dbms.security.ldap.authorization.system_username\", STRING, NO_DEFAULT);\n+\n+  @Description(\n+      \"An LDAP system account password to use for authorization searches when \" +\n+          \"`dbms.security.ldap.authorization.use_system_account` is `true`.\")\n+  public static final Setting<String> ldap_authorization_system_password =\n+      setting(\"dbms.security.ldap.authorization.system_password\", STRING, NO_DEFAULT);\n+\n+  @Description(\"The name of the base object or named context to search for user objects when \" +\n+      \"LDAP authorization is enabled. A common case is that this matches the last part \" +\n+      \"of `dbms.security.ldap.authentication.user_dn_template`.\")\n+  public static final Setting<String> ldap_authorization_user_search_base =\n+      setting(\"dbms.security.ldap.authorization.user_search_base\", STRING, \"ou=users,dc=example,dc=com\");\n+\n+  @Description(\"The LDAP search filter to search for a user principal when LDAP authorization is \" +\n+      \"enabled. The filter should contain the placeholder token {0} which will be substituted for the \" +\n+      \"user principal.\")\n+  public static final Setting<String> ldap_authorization_user_search_filter =\n+      setting(\"dbms.security.ldap.authorization.user_search_filter\", STRING, \"(&(objectClass=*)(uid={0}))\");\n+\n+  @Description(\"A list of attribute names on a user object that contains groups to be used for mapping to roles \" +\n+      \"when LDAP authorization is enabled.\")\n+  public static final Setting<List<String>> ldap_authorization_group_membership_attribute_names =\n+      setting(\"dbms.security.ldap.authorization.group_membership_attributes\", STRING_LIST, \"memberOf\");\n+\n+  @Description(\"An authorization mapping from LDAP group names to Neo4j role names. \" +\n+      \"The map should be formatted as a semicolon separated list of key-value pairs, where the \" +\n+      \"key is the LDAP group name and the value is a comma separated list of corresponding role names. \" +\n+      \"For example: group1=role1;group2=role2;group3=role3,role4,role5\\n\" +\n+      \"\\n\" +\n+      \"You could also use whitespaces and quotes around group names to make this mapping more readable, \" +\n+      \"for example: \\n\" +\n+      \"\\n\" +\n+      \"----\\n\" +\n+      \"+dbms.security.ldap.authorization.group_to_role_mapping+=\\\\\\n\" +\n+      \"         \\\"cn=Neo4j Read Only,cn=users,dc=example,dc=com\\\"      = reader;    \\\\\\n\" +\n+      \"         \\\"cn=Neo4j Read-Write,cn=users,dc=example,dc=com\\\"     = publisher; \\\\\\n\" +\n+      \"         \\\"cn=Neo4j Schema Manager,cn=users,dc=example,dc=com\\\" = architect; \\\\\\n\" +\n+      \"         \\\"cn=Neo4j Administrator,cn=users,dc=example,dc=com\\\"  = admin\\n\" +\n+      \"----\")\n+  public static final Setting<String> ldap_authorization_group_to_role_mapping =\n+      setting(\"dbms.security.ldap.authorization.group_to_role_mapping\", STRING, NO_DEFAULT);\n+\n+  //=========================================================================\n+  // Cache settings\n+  //=========================================================================\n+\n+  @Description(\"The time to live (TTL) for cached authentication and authorization info when using \" +\n+      \"external auth providers (LDAP or plugin). Setting the TTL to 0 will disable auth caching. \" +\n+      \"Disabling caching while using the LDAP auth provider requires the use of an LDAP system account \" +\n+      \"for resolving authorization information.\")\n+  public static final Setting<Duration> auth_cache_ttl =\n+      setting(\"dbms.security.auth_cache_ttl\", DURATION, \"10m\");\n+\n+  @Description(\"Enable time-based eviction of the authentication and authorization info cache for \" +\n+      \"external auth providers (LDAP or plugin). Disabling this setting will make the cache \" +\n+      \"live forever and only be evicted when `dbms.security.auth_cache_max_capacity` is exceeded.\")\n+  public static final Setting<Boolean> auth_cache_use_ttl =\n+      setting(\"dbms.security.auth_cache_use_ttl\", BOOLEAN, \"true\");\n+\n+  @Description(\"The maximum capacity for authentication and authorization caches (respectively).\")\n+  public static final Setting<Integer> auth_cache_max_capacity =\n+      setting(\"dbms.security.auth_cache_max_capacity\", INTEGER, \"10000\");\n+\n+  //=========================================================================\n+  // Security log settings\n+  //=========================================================================\n+\n+  @Description(\"Path to the security log file.\")\n+  public static final Setting<File> security_log_filename = derivedSetting(\"dbms.logs.security.path\",\n+      GraphDatabaseSettings.logs_directory,\n+      logs -> new File(logs, \"security.log\"),\n+      PATH);\n+\n+  @Description(\"Security log level threshold.\")\n+  public static final Setting<Level> security_log_level = setting(\"dbms.logs.security.level\",\n+      options(Level.class), \"INFO\");\n+\n+  @Description(\"Set to log successful authentication events to the security log. \" +\n+      \"If this is set to `false` only failed authentication events will be logged, which \" +\n+      \"could be useful if you find that the successful events spam the logs too much, \" +\n+      \"and you do not require full auditing capability.\")\n+  public static final Setting<Boolean> security_log_successful_authentication =\n+      setting(\"dbms.security.log_successful_authentication\", BOOLEAN, \"true\");\n+\n+  @Description(\"Threshold for rotation of the security log.\")\n+  public static final Setting<Long> store_security_log_rotation_threshold =\n+      buildSetting(\"dbms.logs.security.rotation.size\", BYTES, \"20m\").constraint(range(0L, Long.MAX_VALUE)).build();\n+\n+  @Description(\"Minimum time interval after last rotation of the security log before it may be rotated again.\")\n+  public static final Setting<Duration> store_security_log_rotation_delay =\n+      setting(\"dbms.logs.security.rotation.delay\", DURATION, \"300s\");\n+\n+  @Description(\"Maximum number of history files for the security log.\")\n+  public static final Setting<Integer> store_security_log_max_archives =\n+      buildSetting(\"dbms.logs.security.rotation.keep_number\", INTEGER, \"7\").constraint(min(1)).build();\n+\n+  //=========================================================================\n+  // Procedure security settings\n+  //=========================================================================\n+\n+  @Description(\"The default role that can execute all procedures and user-defined functions that are not covered \" +\n+      \"by the `\" + PROC_ALLOWED_SETTING_ROLES + \"` setting. If the `\" + PROC_ALLOWED_SETTING_DEFAULT_NAME +\n+      \"` setting is the empty string (default), procedures will be executed according to the same security \" +\n+      \"rules as normal Cypher statements.\")\n+  public static final Setting<String> default_allowed = setting(PROC_ALLOWED_SETTING_DEFAULT_NAME, STRING, \"\");\n+\n+  @Description(\"This provides a finer level of control over which roles can execute procedures than the \" +\n+      \"`\" + PROC_ALLOWED_SETTING_DEFAULT_NAME + \"` setting. For example: `+dbms.security.procedures.roles=\" +\n+      \"apoc.convert.*:reader;apoc.load.json*:writer;apoc.trigger.add:TriggerHappy+` will allow the role \" +\n+      \"`reader` to execute all procedures in the `apoc.convert` namespace, the role `writer` to execute \" +\n+      \"all procedures in the `apoc.load` namespace that starts with `json` and the role `TriggerHappy` \" +\n+      \"to execute the specific procedure `apoc.trigger.add`. Procedures not matching any of these \" +\n+      \"patterns will be subject to the `\" + PROC_ALLOWED_SETTING_DEFAULT_NAME + \"` setting.\")\n+  public static final Setting<String> procedure_roles = setting(PROC_ALLOWED_SETTING_ROLES, STRING, \"\");\n+\n+  //=========================================================================\n+  // Misc settings\n+  //=========================================================================\n+\n+  @Internal\n+  @Description(\"Set to true if connection pooling should be used for authorization searches using the \" +\n+      \"system account.\")\n+  public static final Setting<Boolean> ldap_authorization_connection_pooling =\n+      setting(\"unsupported.dbms.security.ldap.authorization.connection_pooling\", BOOLEAN, \"true\");\n+\n+  //=========================================================================\n+  // Property level security settings\n+  //=========================================================================\n+\n+  @Description(\"Set to true to enable property level security.\")\n+  public static final Setting<Boolean> property_level_authorization_enabled =\n+      setting(\"dbms.security.property_level.enabled\", BOOLEAN, \"false\");\n+\n+  @Description(\"An authorization mapping for property level access for roles. \" +\n+      \"The map should be formatted as a semicolon separated list of key-value pairs, where the \" +\n+      \"key is the role name and the value is a comma separated list of blacklisted properties. \" +\n+      \"For example: role1=prop1;role2=prop2;role3=prop3,prop4,prop5\\n\\n\" +\n+      \"You could also use whitespaces and quotes around group names to make this mapping more readable, \" +\n+      \"for example: dbms.security.property_level.blacklist=\\\\\\n\" +\n+      \"         \\\"role1\\\"      = ssn;    \\\\\\n\" +\n+      \"         \\\"role2\\\"      = ssn,income; \\\\\\n\")\n+  public static final Setting<String> property_level_authorization_permissions =\n+      setting(\"dbms.security.property_level.blacklist\", STRING, NO_DEFAULT);\n }\n",
            "diff_size": 314
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 389).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 558).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 296).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 259).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 310).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 470).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 880).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 400).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,274).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 311).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 241).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 219).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 908).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 346).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 285).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 307).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 365).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 704).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "222",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 588).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2555/SecuritySettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2555/SecuritySettings.java\nindex 26c5fd44de0..a4dd0f1e2ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2555/SecuritySettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2555/SecuritySettings.java\n@@ -56,237 +56,121 @@ import static org.neo4j.kernel.impl.proc.ProcedureConfig.PROC_ALLOWED_SETTING_RO\n public class SecuritySettings implements LoadableConfig\n {\n     public static final String NATIVE_REALM_NAME = \"native\";\n-    public static final String LDAP_REALM_NAME = \"ldap\";\n-    public static final String PLUGIN_REALM_NAME_PREFIX = \"plugin-\";\n+\n+public static final String LDAP_REALM_NAME = \"ldap\";\n+\n+public static final String PLUGIN_REALM_NAME_PREFIX = \"plugin-\";\n \n     //=========================================================================\n     // Realm settings\n     //=========================================================================\n \n-    @Description( \"The authentication and authorization provider that contains both the users and roles. \" +\n-                  \"This can be one of the built-in `\" + NATIVE_REALM_NAME + \"` or `\" + LDAP_REALM_NAME + \"` providers, \" +\n-                  \"or it can be an externally provided plugin, with a custom name prefixed by `\" +\n-                  PLUGIN_REALM_NAME_PREFIX + \"`, i.e. `\" + PLUGIN_REALM_NAME_PREFIX + \"<AUTH_PROVIDER_NAME>`.\" )\n-    public static final Setting<String> auth_provider =\n-            setting( \"dbms.security.auth_provider\", STRING, NATIVE_REALM_NAME );\n+    @Description( \"The authentication and authorization provider that contains both the users and roles. \" + \"This can be one of the built-in `\" + NATIVE_REALM_NAME + \"` or `\" + LDAP_REALM_NAME + \"` providers, \" + \"or it can be an externally provided plugin, with a custom name prefixed by `\" + PLUGIN_REALM_NAME_PREFIX + \"`, i.e. `\" + PLUGIN_REALM_NAME_PREFIX + \"<AUTH_PROVIDER_NAME>`.\" )\n+public static final Setting<String> auth_provider = setting( \"dbms.security.auth_provider\", STRING, NATIVE_REALM_NAME );\n \n-    @Description( \"A list of security authentication and authorization providers containing the users and roles. \" +\n-                  \"They will be queried in the given order when login is attempted.\" )\n-    @Internal\n-    public static final Setting<List<String>> auth_providers =\n-            derivedSetting( \"dbms.security.auth_providers\", auth_provider, Arrays::asList, STRING_LIST );\n+@Description( \"A list of security authentication and authorization providers containing the users and roles. \" + \"They will be queried in the given order when login is attempted.\" )\n \n-    @Description( \"Enable authentication via native authentication provider.\" )\n+@Internal\n+    public static final Setting<List<String>> auth_providers = derivedSetting( \"dbms.security.auth_providers\", auth_provider, Arrays::asList, STRING_LIST );\n+\n+@Description( \"Enable authentication via native authentication provider.\" )\n     @Internal\n-    public static final Setting<Boolean> native_authentication_enabled =\n-            derivedSetting( \"dbms.security.native.authentication_enabled\", auth_providers,\n+    public static final Setting<Boolean> native_authentication_enabled = derivedSetting( \"dbms.security.native.authentication_enabled\", auth_providers,\n                     providers -> providers.contains( NATIVE_REALM_NAME ), BOOLEAN );\n \n-    @Description( \"Enable authorization via native authorization provider.\" )\n+@Description( \"Enable authorization via native authorization provider.\" )\n     @Internal\n-    public static final Setting<Boolean> native_authorization_enabled =\n-            derivedSetting( \"dbms.security.native.authorization_enabled\", auth_providers,\n+    public static final Setting<Boolean> native_authorization_enabled = derivedSetting( \"dbms.security.native.authorization_enabled\", auth_providers,\n                     providers -> providers.contains( NATIVE_REALM_NAME ), BOOLEAN );\n \n-    @Description( \"Enable authentication via settings configurable LDAP authentication provider.\" )\n+@Description( \"Enable authentication via settings configurable LDAP authentication provider.\" )\n     @Internal\n-    public static final Setting<Boolean> ldap_authentication_enabled =\n-            derivedSetting( \"dbms.security.ldap.authentication_enabled\", auth_providers,\n+    public static final Setting<Boolean> ldap_authentication_enabled = derivedSetting( \"dbms.security.ldap.authentication_enabled\", auth_providers,\n                     providers -> providers.contains( LDAP_REALM_NAME ), BOOLEAN );\n \n-    @Description( \"Enable authorization via settings configurable LDAP authorization provider.\" )\n+@Description( \"Enable authorization via settings configurable LDAP authorization provider.\" )\n     @Internal\n-    public static final Setting<Boolean> ldap_authorization_enabled =\n-            derivedSetting( \"dbms.security.ldap.authorization_enabled\", auth_providers,\n+    public static final Setting<Boolean> ldap_authorization_enabled = derivedSetting( \"dbms.security.ldap.authorization_enabled\", auth_providers,\n                     providers -> providers.contains( LDAP_REALM_NAME ), BOOLEAN );\n \n-    @Description( \"Enable authentication via plugin authentication providers.\" )\n+@Description( \"Enable authentication via plugin authentication providers.\" )\n     @Internal\n-    public static final Setting<Boolean> plugin_authentication_enabled =\n-            derivedSetting( \"dbms.security.plugin.authentication_enabled\", auth_providers,\n-                    providers -> providers.stream().anyMatch( r -> r.startsWith( PLUGIN_REALM_NAME_PREFIX ) ),\n-                    BOOLEAN );\n+    public static final Setting<Boolean> plugin_authentication_enabled = derivedSetting( \"dbms.security.plugin.authentication_enabled\", auth_providers,\n+                    providers -> providers.stream().anyMatch( r -> r.startsWith( PLUGIN_REALM_NAME_PREFIX ) ), BOOLEAN );\n \n-    @Description( \"Enable authorization via plugin authorization providers.\" )\n+@Description( \"Enable authorization via plugin authorization providers.\" )\n     @Internal\n-    public static final Setting<Boolean> plugin_authorization_enabled =\n-            derivedSetting( \"dbms.security.plugin.authorization_enabled\", auth_providers,\n-                    providers -> providers.stream().anyMatch( r -> r.startsWith( PLUGIN_REALM_NAME_PREFIX ) ),\n-                    BOOLEAN );\n-\n+    public static final Setting<Boolean> plugin_authorization_enabled = derivedSetting( \"dbms.security.plugin.authorization_enabled\", auth_providers,\n+                    providers -> providers.stream().anyMatch( r -> r.startsWith( PLUGIN_REALM_NAME_PREFIX ) ), BOOLEAN );\n     //=========================================================================\n     // LDAP settings\n     //=========================================================================\n \n-    @Description( \"URL of LDAP server to use for authentication and authorization. \" +\n-                  \"The format of the setting is `<protocol>://<hostname>:<port>`, where hostname is the only \" +\n-                  \"required field. The supported values for protocol are `ldap` (default) and `ldaps`. \" +\n-                  \"The default port for `ldap` is 389 and for `ldaps` 636. For example: \" +\n-                  \"`ldaps://ldap.example.com:10389`.\\n\\n\" +\n-                  \"You may want to consider using STARTTLS (`dbms.security.ldap.use_starttls`) instead of LDAPS \" +\n-                  \"for secure connections, in which case the correct protocol is `ldap`.\" )\n-    public static final Setting<String> ldap_server =\n-            setting( \"dbms.security.ldap.host\", STRING, \"localhost\" );\n-\n-    @Description( \"Use secure communication with the LDAP server using opportunistic TLS. \" +\n-            \"First an initial insecure connection will be made with the LDAP server, and a STARTTLS command will be \" +\n-            \"issued to negotiate an upgrade of the connection to TLS before initiating authentication.\" )\n-    public static final Setting<Boolean> ldap_use_starttls =\n-            setting( \"dbms.security.ldap.use_starttls\", BOOLEAN, FALSE );\n-\n-    @Description(\n-            \"The LDAP referral behavior when creating a connection. This is one of `follow`, `ignore` or `throw`.\\n\" +\n-            \"\\n\" +\n-            \"* `follow` automatically follows any referrals\\n\" +\n-            \"* `ignore` ignores any referrals\\n\" +\n-            \"* `throw` throws an exception, which will lead to authentication failure\" )\n-    public static final Setting<String> ldap_referral =\n-            setting( \"dbms.security.ldap.referral\", STRING, \"follow\" );\n-\n-    @Description( \"The timeout for establishing an LDAP connection. If a connection with the LDAP server cannot be \" +\n-                  \"established within the given time the attempt is aborted. \" +\n-                  \"A value of 0 means to use the network protocol's (i.e., TCP's) timeout value.\" )\n-    public static final Setting<Duration> ldap_connection_timeout =\n-            setting( \"dbms.security.ldap.connection_timeout\", DURATION, \"30s\" );\n-\n-    @Description( \"The timeout for an LDAP read request (i.e. search). If the LDAP server does not respond within \" +\n-                  \"the given time the request will be aborted. A value of 0 means wait for a response indefinitely.\" )\n-    public static final Setting<Duration> ldap_read_timeout =\n-            setting( \"dbms.security.ldap.read_timeout\", DURATION, \"30s\" );\n+    @Description( \"URL of LDAP server to use for authentication and authorization. \" + \"The format of the setting is `<protocol>://<hostname>:<port>`, where hostname is the only \" + \"required field. The supported values for protocol are `ldap` (default) and `ldaps`. \" + \"The default port for `ldap` is 389 and for `ldaps` 636. For example: \" + \"`ldaps://ldap.example.com:10389`.\\n\\n\" + \"You may want to consider using STARTTLS (`dbms.security.ldap.use_starttls`) instead of LDAPS \" + \"for secure connections, in which case the correct protocol is `ldap`.\" )\n+public static final Setting<String> ldap_server = setting( \"dbms.security.ldap.host\", STRING, \"localhost\" );\n \n+@Description( \"Use secure communication with the LDAP server using opportunistic TLS. \" + \"First an initial insecure connection will be made with the LDAP server, and a STARTTLS command will be \" + \"issued to negotiate an upgrade of the connection to TLS before initiating authentication.\" )\n+    public static final Setting<Boolean> ldap_use_starttls = setting( \"dbms.security.ldap.use_starttls\", BOOLEAN, FALSE );\n+\n+@Description( \"The LDAP referral behavior when creating a connection. This is one of `follow`, `ignore` or `throw`.\\n\" + \"\\n\" + \"* `follow` automatically follows any referrals\\n\" + \"* `ignore` ignores any referrals\\n\" + \"* `throw` throws an exception, which will lead to authentication failure\" )\n+    public static final Setting<String> ldap_referral = setting( \"dbms.security.ldap.referral\", STRING, \"follow\" );\n+\n+@Description( \"The timeout for establishing an LDAP connection. If a connection with the LDAP server cannot be \" + \"established within the given time the attempt is aborted. \" + \"A value of 0 means to use the network protocol's (i.e., TCP's) timeout value.\" )\n+public static final Setting<Duration> ldap_connection_timeout = setting( \"dbms.security.ldap.connection_timeout\", DURATION, \"30s\" );\n+\n+@Description( \"The timeout for an LDAP read request (i.e. search). If the LDAP server does not respond within \" + \"the given time the request will be aborted. A value of 0 means wait for a response indefinitely.\" )\n+public static final Setting<Duration> ldap_read_timeout = setting( \"dbms.security.ldap.read_timeout\", DURATION, \"30s\" );\n     //-----------------------------------------------------\n     // LDAP authentication settings\n     //-----------------------------------------------------\n \n-    @Description( \"LDAP authentication mechanism. This is one of `simple` or a SASL mechanism supported by JNDI, \" +\n-                  \"for example `DIGEST-MD5`. `simple` is basic username\" +\n-                  \" and password authentication and SASL is used for more advanced mechanisms. See RFC 2251 LDAPv3 \" +\n-                  \"documentation for more details.\" )\n-    public static final Setting<String> ldap_authentication_mechanism =\n-            setting( \"dbms.security.ldap.authentication.mechanism\", STRING, \"simple\" );\n-\n-    @Description(\n-            \"LDAP user DN template. An LDAP object is referenced by its distinguished name (DN), and a user DN is \" +\n-            \"an LDAP fully-qualified unique user identifier. This setting is used to generate an LDAP DN that \" +\n-            \"conforms with the LDAP directory's schema from the user principal that is submitted with the \" +\n-            \"authentication token when logging in. The special token {0} is a \" +\n-            \"placeholder where the user principal will be substituted into the DN string.\" )\n-    public static final Setting<String> ldap_authentication_user_dn_template =\n-            setting( \"dbms.security.ldap.authentication.user_dn_template\", STRING, \"uid={0},ou=users,dc=example,dc=com\" );\n-\n-    @Description( \"Determines if the result of authentication via the LDAP server should be cached or not. \" +\n-                  \"Caching is used to limit the number of LDAP requests that have to be made over the network \" +\n-                  \"for users that have already been authenticated successfully. A user can be authenticated against \" +\n-                  \"an existing cache entry (instead of via an LDAP server) as long as it is alive \" +\n-                  \"(see `dbms.security.auth_cache_ttl`).\\n\" +\n-                  \"An important consequence of setting this to `true` is that \" +\n-                  \"Neo4j then needs to cache a hashed version of the credentials in order to perform credentials \" +\n-                  \"matching. This hashing is done using a cryptographic hash function together with a random salt. \" +\n-                  \"Preferably a conscious decision should be made if this method is considered acceptable by \" +\n-                  \"the security standards of the organization in which this Neo4j instance is deployed.\" )\n-    public static final Setting<Boolean> ldap_authentication_cache_enabled =\n-            setting( \"dbms.security.ldap.authentication.cache_enabled\", BOOLEAN, \"true\" );\n-\n-    @Description( \"Perform authentication with sAMAccountName instead of DN.\\n\" +\n-                  \"Using this setting requires `dbms.security.ldap.authorization.system_username` and \" +\n-                  \"dbms.security.ldap.authorization.system_password to be used since there is no way to log in \" +\n-                  \"through ldap directly with the sAMAccountName, instead the login name will be resolved to a DN \" +\n-                  \"that will be used to log in with.\" )\n-    public static final Setting<Boolean> ldap_authentication_use_samaccountname =\n-            setting( \"dbms.security.ldap.authentication.use_samaccountname\", BOOLEAN, FALSE );\n+    @Description( \"LDAP authentication mechanism. This is one of `simple` or a SASL mechanism supported by JNDI, \" + \"for example `DIGEST-MD5`. `simple` is basic username\" + \" and password authentication and SASL is used for more advanced mechanisms. See RFC 2251 LDAPv3 \" + \"documentation for more details.\" )\n+public static final Setting<String> ldap_authentication_mechanism = setting( \"dbms.security.ldap.authentication.mechanism\", STRING, \"simple\" );\n+\n+@Description( \"LDAP user DN template. An LDAP object is referenced by its distinguished name (DN), and a user DN is \" + \"an LDAP fully-qualified unique user identifier. This setting is used to generate an LDAP DN that \" + \"conforms with the LDAP directory's schema from the user principal that is submitted with the \" + \"authentication token when logging in. The special token {0} is a \" + \"placeholder where the user principal will be substituted into the DN string.\" )\n+    public static final Setting<String> ldap_authentication_user_dn_template = setting( \"dbms.security.ldap.authentication.user_dn_template\", STRING, \"uid={0},ou=users,dc=example,dc=com\" );\n+\n+@Description( \"Determines if the result of authentication via the LDAP server should be cached or not. \" + \"Caching is used to limit the number of LDAP requests that have to be made over the network \" + \"for users that have already been authenticated successfully. A user can be authenticated against \" + \"an existing cache entry (instead of via an LDAP server) as long as it is alive \" + \"(see `dbms.security.auth_cache_ttl`).\\n\" + \"An important consequence of setting this to `true` is that \" + \"Neo4j then needs to cache a hashed version of the credentials in order to perform credentials \" + \"matching. This hashing is done using a cryptographic hash function together with a random salt. \" + \"Preferably a conscious decision should be made if this method is considered acceptable by \" + \"the security standards of the organization in which this Neo4j instance is deployed.\" )\n+public static final Setting<Boolean> ldap_authentication_cache_enabled = setting( \"dbms.security.ldap.authentication.cache_enabled\", BOOLEAN, \"true\" );\n \n+@Description( \"Perform authentication with sAMAccountName instead of DN.\\n\" + \"Using this setting requires `dbms.security.ldap.authorization.system_username` and \" + \"dbms.security.ldap.authorization.system_password to be used since there is no way to log in \" + \"through ldap directly with the sAMAccountName, instead the login name will be resolved to a DN \" + \"that will be used to log in with.\" )\n+public static final Setting<Boolean> ldap_authentication_use_samaccountname = setting( \"dbms.security.ldap.authentication.use_samaccountname\", BOOLEAN, FALSE );\n     //-----------------------------------------------------\n     // LDAP authorization settings\n     //-----------------------------------------------------\n \n-    @Description( \"Perform LDAP search for authorization info using a system account instead of the user's own account.\\n\\n\" +\n-                  \"If this is set to `false` (default), the search for group membership will be performed \" +\n-                  \"directly after authentication using the LDAP context bound with the user's own account. \" +\n-                  \"The mapped roles will be cached for the duration of `dbms.security.auth_cache_ttl`, \" +\n-                  \"and then expire, requiring re-authentication. To avoid frequently having to re-authenticate \" +\n-                  \"sessions you may want to set a relatively long auth cache expiration time together with this \" +\n-                  \"option. NOTE: This option will only work if the users are permitted to search for their \" +\n-                  \"own group membership attributes in the directory.\\n\\n\" +\n-                  \"If this is set to `true`, the search will be performed using a special system account user \" +\n-                  \"with read access to all the users in the directory. \" +\n-                  \"You need to specify the username and password using the settings \" +\n-                  \"`dbms.security.ldap.authorization.system_username` and \" +\n-                  \"`dbms.security.ldap.authorization.system_password` with this option. \" +\n-                  \"Note that this account only needs read access to the relevant parts of the LDAP directory \" +\n-                  \"and does not need to have access rights to Neo4j, or any other systems.\" )\n-    public static final Setting<Boolean> ldap_authorization_use_system_account =\n-            setting( \"dbms.security.ldap.authorization.use_system_account\", BOOLEAN, FALSE );\n-\n-    @Description(\n-            \"An LDAP system account username to use for authorization searches when \" +\n-            \"`dbms.security.ldap.authorization.use_system_account` is `true`. \" +\n-            \"Note that the `dbms.security.ldap.authentication.user_dn_template` will not be applied to \" +\n-            \"this username, so you may have to specify a full DN.\" )\n-    public static final Setting<String> ldap_authorization_system_username =\n-            setting( \"dbms.security.ldap.authorization.system_username\", STRING, NO_DEFAULT );\n-\n-    @Description(\n-            \"An LDAP system account password to use for authorization searches when \" +\n-            \"`dbms.security.ldap.authorization.use_system_account` is `true`.\" )\n-    public static final Setting<String> ldap_authorization_system_password =\n-            setting( \"dbms.security.ldap.authorization.system_password\", STRING, NO_DEFAULT );\n-\n-    @Description( \"The name of the base object or named context to search for user objects when \" +\n-                  \"LDAP authorization is enabled. A common case is that this matches the last part \" +\n-                  \"of `dbms.security.ldap.authentication.user_dn_template`.\" )\n-    public static final Setting<String> ldap_authorization_user_search_base =\n-            setting( \"dbms.security.ldap.authorization.user_search_base\", STRING, \"ou=users,dc=example,dc=com\" );\n-\n-    @Description( \"The LDAP search filter to search for a user principal when LDAP authorization is \" +\n-                  \"enabled. The filter should contain the placeholder token {0} which will be substituted for the \" +\n-                  \"user principal.\" )\n-    public static final Setting<String> ldap_authorization_user_search_filter =\n-            setting( \"dbms.security.ldap.authorization.user_search_filter\", STRING, \"(&(objectClass=*)(uid={0}))\" );\n-\n-    @Description( \"A list of attribute names on a user object that contains groups to be used for mapping to roles \" +\n-                  \"when LDAP authorization is enabled.\" )\n-    public static final Setting<List<String>> ldap_authorization_group_membership_attribute_names =\n-            setting( \"dbms.security.ldap.authorization.group_membership_attributes\", STRING_LIST, \"memberOf\" );\n-\n-    @Description( \"An authorization mapping from LDAP group names to Neo4j role names. \" +\n-                  \"The map should be formatted as a semicolon separated list of key-value pairs, where the \" +\n-                  \"key is the LDAP group name and the value is a comma separated list of corresponding role names. \" +\n-                  \"For example: group1=role1;group2=role2;group3=role3,role4,role5\\n\" +\n-                  \"\\n\" +\n-                  \"You could also use whitespaces and quotes around group names to make this mapping more readable, \" +\n-                  \"for example: \\n\" +\n-                  \"\\n\" +\n-                  \"----\\n\" +\n-                  \"+dbms.security.ldap.authorization.group_to_role_mapping+=\\\\\\n\" +\n-                  \"         \\\"cn=Neo4j Read Only,cn=users,dc=example,dc=com\\\"      = reader;    \\\\\\n\" +\n-                  \"         \\\"cn=Neo4j Read-Write,cn=users,dc=example,dc=com\\\"     = publisher; \\\\\\n\" +\n-                  \"         \\\"cn=Neo4j Schema Manager,cn=users,dc=example,dc=com\\\" = architect; \\\\\\n\" +\n-                  \"         \\\"cn=Neo4j Administrator,cn=users,dc=example,dc=com\\\"  = admin\\n\" +\n-                  \"----\" )\n-    public static final Setting<String> ldap_authorization_group_to_role_mapping =\n-            setting( \"dbms.security.ldap.authorization.group_to_role_mapping\", STRING, NO_DEFAULT );\n+    @Description( \"Perform LDAP search for authorization info using a system account instead of the user's own account.\\n\\n\" + \"If this is set to `false` (default), the search for group membership will be performed \" + \"directly after authentication using the LDAP context bound with the user's own account. \" + \"The mapped roles will be cached for the duration of `dbms.security.auth_cache_ttl`, \" + \"and then expire, requiring re-authentication. To avoid frequently having to re-authenticate \" + \"sessions you may want to set a relatively long auth cache expiration time together with this \" + \"option. NOTE: This option will only work if the users are permitted to search for their \" + \"own group membership attributes in the directory.\\n\\n\" + \"If this is set to `true`, the search will be performed using a special system account user \" + \"with read access to all the users in the directory. \" + \"You need to specify the username and password using the settings \" + \"`dbms.security.ldap.authorization.system_username` and \" + \"`dbms.security.ldap.authorization.system_password` with this option. \" + \"Note that this account only needs read access to the relevant parts of the LDAP directory \" + \"and does not need to have access rights to Neo4j, or any other systems.\" )\n+public static final Setting<Boolean> ldap_authorization_use_system_account = setting( \"dbms.security.ldap.authorization.use_system_account\", BOOLEAN, FALSE );\n \n+@Description( \"An LDAP system account username to use for authorization searches when \" + \"`dbms.security.ldap.authorization.use_system_account` is `true`. \" + \"Note that the `dbms.security.ldap.authentication.user_dn_template` will not be applied to \" + \"this username, so you may have to specify a full DN.\" )\n+    public static final Setting<String> ldap_authorization_system_username = setting( \"dbms.security.ldap.authorization.system_username\", STRING, NO_DEFAULT );\n+\n+@Description( \"An LDAP system account password to use for authorization searches when \" + \"`dbms.security.ldap.authorization.use_system_account` is `true`.\" )\n+    public static final Setting<String> ldap_authorization_system_password = setting( \"dbms.security.ldap.authorization.system_password\", STRING, NO_DEFAULT );\n+\n+@Description( \"The name of the base object or named context to search for user objects when \" + \"LDAP authorization is enabled. A common case is that this matches the last part \" + \"of `dbms.security.ldap.authentication.user_dn_template`.\" )\n+public static final Setting<String> ldap_authorization_user_search_base = setting( \"dbms.security.ldap.authorization.user_search_base\", STRING, \"ou=users,dc=example,dc=com\" );\n+\n+@Description( \"The LDAP search filter to search for a user principal when LDAP authorization is \" + \"enabled. The filter should contain the placeholder token {0} which will be substituted for the \" + \"user principal.\" )\n+public static final Setting<String> ldap_authorization_user_search_filter = setting( \"dbms.security.ldap.authorization.user_search_filter\", STRING, \"(&(objectClass=*)(uid={0}))\" );\n+\n+@Description( \"A list of attribute names on a user object that contains groups to be used for mapping to roles \" + \"when LDAP authorization is enabled.\" )\n+public static final Setting<List<String>> ldap_authorization_group_membership_attribute_names = setting( \"dbms.security.ldap.authorization.group_membership_attributes\", STRING_LIST, \"memberOf\" );\n+\n+@Description( \"An authorization mapping from LDAP group names to Neo4j role names. \" + \"The map should be formatted as a semicolon separated list of key-value pairs, where the \" + \"key is the LDAP group name and the value is a comma separated list of corresponding role names. \" + \"For example: group1=role1;group2=role2;group3=role3,role4,role5\\n\" + \"\\n\" + \"You could also use whitespaces and quotes around group names to make this mapping more readable, \" + \"for example: \\n\" + \"\\n\" + \"----\\n\" + \"+dbms.security.ldap.authorization.group_to_role_mapping+=\\\\\\n\" + \"         \\\"cn=Neo4j Read Only,cn=users,dc=example,dc=com\\\"      = reader;    \\\\\\n\" + \"         \\\"cn=Neo4j Read-Write,cn=users,dc=example,dc=com\\\"     = publisher; \\\\\\n\" + \"         \\\"cn=Neo4j Schema Manager,cn=users,dc=example,dc=com\\\" = architect; \\\\\\n\" + \"         \\\"cn=Neo4j Administrator,cn=users,dc=example,dc=com\\\"  = admin\\n\" + \"----\" )\n+public static final Setting<String> ldap_authorization_group_to_role_mapping = setting( \"dbms.security.ldap.authorization.group_to_role_mapping\", STRING, NO_DEFAULT );\n     //=========================================================================\n     // Cache settings\n     //=========================================================================\n \n-    @Description( \"The time to live (TTL) for cached authentication and authorization info when using \" +\n-                  \"external auth providers (LDAP or plugin). Setting the TTL to 0 will disable auth caching. \" +\n-                  \"Disabling caching while using the LDAP auth provider requires the use of an LDAP system account \" +\n-                  \"for resolving authorization information.\" )\n-    public static final Setting<Duration> auth_cache_ttl =\n-            setting( \"dbms.security.auth_cache_ttl\", DURATION, \"10m\" );\n+    @Description( \"The time to live (TTL) for cached authentication and authorization info when using \" + \"external auth providers (LDAP or plugin). Setting the TTL to 0 will disable auth caching. \" + \"Disabling caching while using the LDAP auth provider requires the use of an LDAP system account \" + \"for resolving authorization information.\" )\n+public static final Setting<Duration> auth_cache_ttl = setting( \"dbms.security.auth_cache_ttl\", DURATION, \"10m\" );\n \n-    @Description( \"Enable time-based eviction of the authentication and authorization info cache for \" +\n-                  \"external auth providers (LDAP or plugin). Disabling this setting will make the cache \" +\n-                  \"live forever and only be evicted when `dbms.security.auth_cache_max_capacity` is exceeded.\" )\n-    public static final Setting<Boolean> auth_cache_use_ttl =\n-            setting( \"dbms.security.auth_cache_use_ttl\", BOOLEAN, \"true\" );\n-\n-    @Description( \"The maximum capacity for authentication and authorization caches (respectively).\" )\n-    public static final Setting<Integer> auth_cache_max_capacity =\n-            setting( \"dbms.security.auth_cache_max_capacity\", INTEGER, \"10000\" );\n+@Description( \"Enable time-based eviction of the authentication and authorization info cache for \" + \"external auth providers (LDAP or plugin). Disabling this setting will make the cache \" + \"live forever and only be evicted when `dbms.security.auth_cache_max_capacity` is exceeded.\" )\n+public static final Setting<Boolean> auth_cache_use_ttl = setting( \"dbms.security.auth_cache_use_ttl\", BOOLEAN, \"true\" );\n \n+@Description( \"The maximum capacity for authentication and authorization caches (respectively).\" )\n+    public static final Setting<Integer> auth_cache_max_capacity = setting( \"dbms.security.auth_cache_max_capacity\", INTEGER, \"10000\" );\n     //=========================================================================\n     // Security log settings\n     //=========================================================================\n@@ -294,77 +178,47 @@ public class SecuritySettings implements LoadableConfig\n     @Description( \"Path to the security log file.\" )\n     public static final Setting<File> security_log_filename = derivedSetting( \"dbms.logs.security.path\",\n             GraphDatabaseSettings.logs_directory,\n-            logs -> new File( logs, \"security.log\" ),\n-            PATH );\n+            logs -> new File( logs, \"security.log\" ), PATH );\n \n-    @Description( \"Security log level threshold.\" )\n+@Description( \"Security log level threshold.\" )\n     public static final Setting<Level> security_log_level = setting( \"dbms.logs.security.level\",\n             options( Level.class ), \"INFO\" );\n \n-    @Description( \"Set to log successful authentication events to the security log. \" +\n-                  \"If this is set to `false` only failed authentication events will be logged, which \" +\n-                  \"could be useful if you find that the successful events spam the logs too much, \" +\n-                  \"and you do not require full auditing capability.\" )\n-    public static final Setting<Boolean> security_log_successful_authentication =\n-            setting( \"dbms.security.log_successful_authentication\", BOOLEAN, \"true\" );\n-\n-    @Description( \"Threshold for rotation of the security log.\" )\n-    public static final Setting<Long> store_security_log_rotation_threshold =\n-            buildSetting( \"dbms.logs.security.rotation.size\", BYTES, \"20m\" ).constraint( range( 0L, Long.MAX_VALUE ) ).build();\n+@Description( \"Set to log successful authentication events to the security log. \" + \"If this is set to `false` only failed authentication events will be logged, which \" + \"could be useful if you find that the successful events spam the logs too much, \" + \"and you do not require full auditing capability.\" )\n+public static final Setting<Boolean> security_log_successful_authentication = setting( \"dbms.security.log_successful_authentication\", BOOLEAN, \"true\" );\n \n-    @Description( \"Minimum time interval after last rotation of the security log before it may be rotated again.\" )\n-    public static final Setting<Duration> store_security_log_rotation_delay =\n-            setting( \"dbms.logs.security.rotation.delay\", DURATION, \"300s\" );\n+@Description( \"Threshold for rotation of the security log.\" )\n+    public static final Setting<Long> store_security_log_rotation_threshold = buildSetting( \"dbms.logs.security.rotation.size\", BYTES, \"20m\" ).constraint( range( 0L, Long.MAX_VALUE ) ).build();\n \n-    @Description( \"Maximum number of history files for the security log.\" )\n-    public static final Setting<Integer> store_security_log_max_archives =\n-            buildSetting( \"dbms.logs.security.rotation.keep_number\", INTEGER, \"7\" ).constraint( min(1) ).build();\n+@Description( \"Minimum time interval after last rotation of the security log before it may be rotated again.\" )\n+    public static final Setting<Duration> store_security_log_rotation_delay = setting( \"dbms.logs.security.rotation.delay\", DURATION, \"300s\" );\n \n+@Description( \"Maximum number of history files for the security log.\" )\n+    public static final Setting<Integer> store_security_log_max_archives = buildSetting( \"dbms.logs.security.rotation.keep_number\", INTEGER, \"7\" ).constraint( min( 1) ).build();\n     //=========================================================================\n     // Procedure security settings\n     //=========================================================================\n \n-    @Description( \"The default role that can execute all procedures and user-defined functions that are not covered \" +\n-                  \"by the `\" + PROC_ALLOWED_SETTING_ROLES + \"` setting. If the `\" + PROC_ALLOWED_SETTING_DEFAULT_NAME +\n-                  \"` setting is the empty string (default), procedures will be executed according to the same security \" +\n-                  \"rules as normal Cypher statements.\" )\n-    public static final Setting<String> default_allowed = setting( PROC_ALLOWED_SETTING_DEFAULT_NAME, STRING, \"\" );\n-\n-    @Description( \"This provides a finer level of control over which roles can execute procedures than the \" +\n-                  \"`\" + PROC_ALLOWED_SETTING_DEFAULT_NAME + \"` setting. For example: `+dbms.security.procedures.roles=\" +\n-                  \"apoc.convert.*:reader;apoc.load.json*:writer;apoc.trigger.add:TriggerHappy+` will allow the role \" +\n-                  \"`reader` to execute all procedures in the `apoc.convert` namespace, the role `writer` to execute \" +\n-                  \"all procedures in the `apoc.load` namespace that starts with `json` and the role `TriggerHappy` \" +\n-                  \"to execute the specific procedure `apoc.trigger.add`. Procedures not matching any of these \" +\n-                  \"patterns will be subject to the `\" + PROC_ALLOWED_SETTING_DEFAULT_NAME + \"` setting.\" )\n-    public static final Setting<String> procedure_roles = setting( PROC_ALLOWED_SETTING_ROLES, STRING, \"\" );\n+    @Description( \"The default role that can execute all procedures and user-defined functions that are not covered \" + \"by the `\" + PROC_ALLOWED_SETTING_ROLES + \"` setting. If the `\" + PROC_ALLOWED_SETTING_DEFAULT_NAME + \"` setting is the empty string (default), procedures will be executed according to the same security \" + \"rules as normal Cypher statements.\" )\n+public static final Setting<String> default_allowed = setting( PROC_ALLOWED_SETTING_DEFAULT_NAME, STRING, \"\" );\n+\n+    @Description( \"This provides a finer level of control over which roles can execute procedures than the \" + \"`\" + PROC_ALLOWED_SETTING_DEFAULT_NAME + \"` setting. For example: `+dbms.security.procedures.roles=\" + \"apoc.convert.*:reader;apoc.load.json*:writer;apoc.trigger.add:TriggerHappy+` will allow the role \" + \"`reader` to execute all procedures in the `apoc.convert` namespace, the role `writer` to execute \" + \"all procedures in the `apoc.load` namespace that starts with `json` and the role `TriggerHappy` \" + \"to execute the specific procedure `apoc.trigger.add`. Procedures not matching any of these \" + \"patterns will be subject to the `\" + PROC_ALLOWED_SETTING_DEFAULT_NAME + \"` setting.\" )\n+public static final Setting<String> procedure_roles = setting( PROC_ALLOWED_SETTING_ROLES, STRING, \"\" );\n \n     //=========================================================================\n     // Misc settings\n     //=========================================================================\n \n     @Internal\n-    @Description( \"Set to true if connection pooling should be used for authorization searches using the \" +\n-                  \"system account.\" )\n-    public static final Setting<Boolean> ldap_authorization_connection_pooling =\n-            setting( \"unsupported.dbms.security.ldap.authorization.connection_pooling\", BOOLEAN, \"true\" );\n-\n+    @Description( \"Set to true if connection pooling should be used for authorization searches using the \" + \"system account.\" )\n+public static final Setting<Boolean> ldap_authorization_connection_pooling = setting( \"unsupported.dbms.security.ldap.authorization.connection_pooling\", BOOLEAN, \"true\" );\n     //=========================================================================\n     // Property level security settings\n     //=========================================================================\n \n     @Description( \"Set to true to enable property level security.\" )\n-    public static final Setting<Boolean> property_level_authorization_enabled =\n-            setting( \"dbms.security.property_level.enabled\", BOOLEAN, \"false\" );\n-\n-    @Description( \"An authorization mapping for property level access for roles. \" +\n-            \"The map should be formatted as a semicolon separated list of key-value pairs, where the \" +\n-            \"key is the role name and the value is a comma separated list of blacklisted properties. \" +\n-            \"For example: role1=prop1;role2=prop2;role3=prop3,prop4,prop5\\n\\n\" +\n-            \"You could also use whitespaces and quotes around group names to make this mapping more readable, \" +\n-            \"for example: dbms.security.property_level.blacklist=\\\\\\n\" +\n-            \"         \\\"role1\\\"      = ssn;    \\\\\\n\" +\n-            \"         \\\"role2\\\"      = ssn,income; \\\\\\n\" )\n-    public static final Setting<String> property_level_authorization_permissions =\n-            setting( \"dbms.security.property_level.blacklist\", STRING, NO_DEFAULT );\n-}\n+    public static final Setting<Boolean> property_level_authorization_enabled = setting( \"dbms.security.property_level.enabled\", BOOLEAN, \"false\" );\n+\n+@Description( \"An authorization mapping for property level access for roles. \" + \"The map should be formatted as a semicolon separated list of key-value pairs, where the \" + \"key is the role name and the value is a comma separated list of blacklisted properties. \" + \"For example: role1=prop1;role2=prop2;role3=prop3,prop4,prop5\\n\\n\" + \"You could also use whitespaces and quotes around group names to make this mapping more readable, \" + \"for example: dbms.security.property_level.blacklist=\\\\\\n\" + \"         \\\"role1\\\"      = ssn;    \\\\\\n\" + \"         \\\"role2\\\"      = ssn,income; \\\\\\n\" )\n+    public static final Setting<String> property_level_authorization_permissions = setting( \"dbms.security.property_level.blacklist\", STRING, NO_DEFAULT );\n+}\n\\ No newline at end of file\n",
            "diff_size": 279
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
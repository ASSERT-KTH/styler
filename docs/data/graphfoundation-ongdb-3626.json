{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3626",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3626/PropertyConstraintDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3626/PropertyConstraintDefinition.java\nindex e03e8d1f99c..76978281885 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3626/PropertyConstraintDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3626/PropertyConstraintDefinition.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi.schema;\n \n import org.neo4j.graphdb.schema.ConstraintDefinition;\n@@ -26,37 +27,37 @@ import static java.util.Objects.requireNonNull;\n \n abstract class PropertyConstraintDefinition implements ConstraintDefinition\n {\n-    protected final InternalSchemaActions actions;\n-\n-    protected PropertyConstraintDefinition( InternalSchemaActions actions )\n-    {\n-        this.actions = requireNonNull( actions );\n-    }\n-\n-    @Override\n-    public abstract Iterable<String> getPropertyKeys();\n-\n-    @Override\n-    public boolean isConstraintType( ConstraintType type )\n-    {\n-        assertInUnterminatedTransaction();\n-        return getConstraintType().equals( type );\n-    }\n-\n-    @Override\n-    public abstract boolean equals( Object o );\n-\n-    @Override\n-    public abstract int hashCode();\n-\n-    /**\n-     * Returned string is used in shell's constraint listing.\n-     */\n-    @Override\n-    public abstract String toString();\n-\n-    protected void assertInUnterminatedTransaction()\n-    {\n-        actions.assertInOpenTransaction();\n-    }\n+  protected final InternalSchemaActions actions;\n+\n+  protected PropertyConstraintDefinition(InternalSchemaActions actions)\n+  {\n+    this.actions = requireNonNull(actions);\n+  }\n+\n+  @Override\n+  public abstract Iterable<String> getPropertyKeys();\n+\n+  @Override\n+  public boolean isConstraintType(ConstraintType type)\n+  {\n+    assertInUnterminatedTransaction();\n+    return getConstraintType().equals(type);\n+  }\n+\n+  @Override\n+  public abstract boolean equals(Object o);\n+\n+  @Override\n+  public abstract int hashCode();\n+\n+  /**\n+   * Returned string is used in shell's constraint listing.\n+   */\n+  @Override\n+  public abstract String toString();\n+\n+  protected void assertInUnterminatedTransaction()\n+  {\n+    actions.assertInOpenTransaction();\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3626/PropertyConstraintDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3626/PropertyConstraintDefinition.java\nindex e03e8d1f99c..1668a3331c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3626/PropertyConstraintDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3626/PropertyConstraintDefinition.java\n@@ -59,4 +59,4 @@ abstract class PropertyConstraintDefinition implements ConstraintDefinition\n     {\n         actions.assertInOpenTransaction();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "200",
    "information": {
        "errors": [
            {
                "line": "38",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    extends Function1\n{\n\tprivate static boolean isSubLanguage(final String lang1, final String lang2)\n\t{\n\t\tfinal int len1 = lang1.length();\n\t\tfinal int len2 = lang2.length();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/200/LangFunction.java\nindex 2053c1926f0..e406540c01a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/200/LangFunction.java\n@@ -35,7 +35,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n public final class LangFunction \r\n     extends Function1\r\n {\r\n-\tprivate static boolean isSubLanguage(final String lang1, final String lang2)\r\n+private static boolean isSubLanguage(final String lang1, final String lang2)\r\n \t{\r\n \t\tfinal int len1 = lang1.length();\r\n \t\tfinal int len2 = lang2.length();\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/200/LangFunction.java\nindex 2053c1926f0..9e77c9fc208 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/200/LangFunction.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.functions;\r\n \r\n import javax.xml.XMLConstants;\r\n@@ -32,74 +33,64 @@ import org.genxdm.xpath.v10.ExprParseException;\n import org.genxdm.xpath.v10.StringExpr;\r\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n-public final class LangFunction \r\n-    extends Function1\r\n-{\r\n-\tprivate static boolean isSubLanguage(final String lang1, final String lang2)\r\n-\t{\r\n-\t\tfinal int len1 = lang1.length();\r\n-\t\tfinal int len2 = lang2.length();\r\n-\t\tif (len1 > len2)\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\tif (len1 < len2 && lang2.charAt(len1) != '-')\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\tfor (int i = 0; i < len1; i++)\r\n-\t\t{\r\n-\t\t\tfinal char c1 = lang1.charAt(i);\r\n-\t\t\tfinal char c2 = lang2.charAt(i);\r\n-\t\t\tswitch ((int)c1 - (int)c2)\r\n-\t\t\t{\r\n-\t\t\t\tcase 0:\r\n-\t\t\t\tcase 'a' - 'A':\r\n-\t\t\t\tcase 'A' - 'a':\r\n-\t\t\t\tbreak;\r\n-\t\t\t\tdefault:\r\n-\t\t\t\t\treturn false;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\treturn true;\r\n-\t}\r\n+public final class LangFunction\r\n+    extends Function1 {\r\n+    private static boolean isSubLanguage(final String lang1, final String lang2) {\r\n+        final int len1 = lang1.length();\r\n+        final int len2 = lang2.length();\r\n+        if (len1 > len2) {\r\n+            return false;\r\n+        }\r\n+        if (len1 < len2 && lang2.charAt(len1) != '-') {\r\n+            return false;\r\n+        }\r\n+        for (int i = 0; i < len1; i++) {\r\n+            final char c1 = lang1.charAt(i);\r\n+            final char c2 = lang2.charAt(i);\r\n+            switch ((int) c1 - (int) c2) {\r\n+                case 0:\r\n+                case 'a' - 'A':\r\n+                case 'A' - 'a':\r\n+                    break;\r\n+                default:\r\n+                    return false;\r\n+            }\r\n+        }\r\n+        return true;\r\n+    }\r\n+\r\n+    private final String LANG;\r\n \r\n-\tprivate final String LANG;\r\n-\tprivate final String XML_NS_URI;\r\n+    private final String XML_NS_URI;\r\n \r\n-\tpublic LangFunction()\r\n-\t{\r\n-\t\tLANG = \"lang\";\r\n-\t\tXML_NS_URI = XMLConstants.XML_NS_URI;\r\n-\t}\r\n+    public LangFunction() {\r\n+        LANG = \"lang\";\r\n+        XML_NS_URI = XMLConstants.XML_NS_URI;\r\n+    }\r\n \r\n-\tprivate <N> boolean lang(final Model<N> model, N node, final String lang)\r\n-\t{\r\n-\t\twhile (node != null)\r\n-\t\t{\r\n-\t\t\tfinal N attribute = model.getAttribute(node, XML_NS_URI, LANG);\r\n-\t\t\tif (null != attribute)\r\n-\t\t\t{\r\n-\t\t\t\tfinal String nodeLang = model.getStringValue(attribute);\r\n-\t\t\t\tif (nodeLang != null)\r\n-\t\t\t\t{\r\n-\t\t\t\t\treturn isSubLanguage(lang, nodeLang);\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t\tnode = model.getParent(node);\r\n-\t\t}\r\n-\t\treturn false;\r\n-\t}\r\n+    private <N> boolean lang(final Model<N> model, N node, final String lang) {\r\n+        while (node != null) {\r\n+            final N attribute = model.getAttribute(node, XML_NS_URI, LANG);\r\n+            if (null != attribute) {\r\n+                final String nodeLang = model.getStringValue(attribute);\r\n+                if (nodeLang != null) {\r\n+                    return isSubLanguage(lang, nodeLang);\r\n+                }\r\n+            }\r\n+            node = model.getParent(node);\r\n+        }\r\n+        return false;\r\n+    }\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal StringExpr se = e.makeStringExpr(statEnv);\r\n-\t\treturn new ConvertibleBooleanExpr()\r\n-\t\t{\r\n-\t\t\tpublic <N> boolean booleanFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t\t\t{\r\n-\t\t\t\treturn lang(model, contextNode, se.stringFunction(model, contextNode, dynEnv));\r\n-\t\t\t}\r\n-\t\t};\r\n-\t}\r\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n+        throws ExprParseException {\r\n+        final StringExpr se = e.makeStringExpr(statEnv);\r\n+        return new ConvertibleBooleanExpr() {\r\n+            public <N> boolean booleanFunction(Model<N> model, final N contextNode,\r\n+                                               final ExprContextDynamic<N> dynEnv)\r\n+                throws ExprException {\r\n+                return lang(model, contextNode, se.stringFunction(model, contextNode, dynEnv));\r\n+            }\r\n+        };\r\n+    }\r\n }\r\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/200/LangFunction.java\nindex 2053c1926f0..73186f3a22d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/200/LangFunction.java\n@@ -33,73 +33,73 @@ import org.genxdm.xpath.v10.StringExpr;\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n public final class LangFunction \r\n-    extends Function1\r\n-{\r\n-\tprivate static boolean isSubLanguage(final String lang1, final String lang2)\r\n-\t{\r\n-\t\tfinal int len1 = lang1.length();\r\n+    extends Function1\n+{\n+    private static boolean isSubLanguage(final String lang1, final String lang2)\r\n+\t{\n+    final int len1 = lang1.length();\r\n \t\tfinal int len2 = lang2.length();\r\n \t\tif (len1 > len2)\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n+\t\t{\n+    return false;\n+    }\r\n \t\tif (len1 < len2 && lang2.charAt(len1) != '-')\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n+\t\t{\n+    return false;\n+    }\r\n \t\tfor (int i = 0; i < len1; i++)\r\n-\t\t{\r\n-\t\t\tfinal char c1 = lang1.charAt(i);\r\n+\t\t{\n+    final char c1 = lang1.charAt(i);\r\n \t\t\tfinal char c2 = lang2.charAt(i);\r\n \t\t\tswitch ((int)c1 - (int)c2)\r\n-\t\t\t{\r\n-\t\t\t\tcase 0:\r\n+\t\t\t{\n+    case 0:\r\n \t\t\t\tcase 'a' - 'A':\r\n \t\t\t\tcase 'A' - 'a':\r\n \t\t\t\tbreak;\r\n-\t\t\t\tdefault:\r\n-\t\t\t\t\treturn false;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\treturn true;\r\n-\t}\r\n+\t\t\t\tdefault:\n+    return false;\n+    }\n+    }\r\n+\t\treturn true;\n+    }\r\n \r\n \tprivate final String LANG;\r\n \tprivate final String XML_NS_URI;\r\n \r\n \tpublic LangFunction()\r\n-\t{\r\n-\t\tLANG = \"lang\";\r\n-\t\tXML_NS_URI = XMLConstants.XML_NS_URI;\r\n-\t}\r\n+\t{\n+    LANG = \"lang\";\r\n+\t\tXML_NS_URI = XMLConstants.XML_NS_URI;\n+    }\r\n \r\n \tprivate <N> boolean lang(final Model<N> model, N node, final String lang)\r\n-\t{\r\n-\t\twhile (node != null)\r\n-\t\t{\r\n-\t\t\tfinal N attribute = model.getAttribute(node, XML_NS_URI, LANG);\r\n+\t{\n+    while (node != null)\r\n+\t\t{\n+    final N attribute = model.getAttribute(node, XML_NS_URI, LANG);\r\n \t\t\tif (null != attribute)\r\n-\t\t\t{\r\n-\t\t\t\tfinal String nodeLang = model.getStringValue(attribute);\r\n+\t\t\t{\n+    final String nodeLang = model.getStringValue(attribute);\r\n \t\t\t\tif (nodeLang != null)\r\n-\t\t\t\t{\r\n-\t\t\t\t\treturn isSubLanguage(lang, nodeLang);\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t\tnode = model.getParent(node);\r\n-\t\t}\r\n-\t\treturn false;\r\n-\t}\r\n+\t\t\t\t{\n+    return isSubLanguage(lang, nodeLang);\n+    }\n+    }\r\n+\t\t\tnode = model.getParent(node);\n+    }\r\n+\t\treturn false;\n+    }\r\n \r\n \tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal StringExpr se = e.makeStringExpr(statEnv);\r\n+\t{\n+    final StringExpr se = e.makeStringExpr(statEnv);\r\n \t\treturn new ConvertibleBooleanExpr()\r\n-\t\t{\r\n-\t\t\tpublic <N> boolean booleanFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t\t\t{\r\n-\t\t\t\treturn lang(model, contextNode, se.stringFunction(model, contextNode, dynEnv));\r\n-\t\t\t}\r\n-\t\t};\r\n-\t}\r\n-}\r\n+\t\t{\n+    public <N> boolean booleanFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n+\t\t\t{\n+    return lang(model, contextNode, se.stringFunction(model, contextNode, dynEnv));\n+    }\n+    };\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/200/LangFunction.java\nindex 2053c1926f0..102843c79b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/200/LangFunction.java\n@@ -18,88 +18,88 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.functions;\r\n-\r\n-import javax.xml.XMLConstants;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleBooleanExpr;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\r\n-import org.genxdm.xpath.v10.ExprContextDynamic;\r\n-import org.genxdm.xpath.v10.ExprContextStatic;\r\n-import org.genxdm.xpath.v10.ExprException;\r\n-import org.genxdm.xpath.v10.ExprParseException;\r\n-import org.genxdm.xpath.v10.StringExpr;\r\n-import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n-\r\n-public final class LangFunction \r\n-    extends Function1\r\n-{\r\n-\tprivate static boolean isSubLanguage(final String lang1, final String lang2)\r\n-\t{\r\n-\t\tfinal int len1 = lang1.length();\r\n-\t\tfinal int len2 = lang2.length();\r\n-\t\tif (len1 > len2)\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\tif (len1 < len2 && lang2.charAt(len1) != '-')\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\tfor (int i = 0; i < len1; i++)\r\n-\t\t{\r\n-\t\t\tfinal char c1 = lang1.charAt(i);\r\n-\t\t\tfinal char c2 = lang2.charAt(i);\r\n-\t\t\tswitch ((int)c1 - (int)c2)\r\n-\t\t\t{\r\n-\t\t\t\tcase 0:\r\n-\t\t\t\tcase 'a' - 'A':\r\n-\t\t\t\tcase 'A' - 'a':\r\n-\t\t\t\tbreak;\r\n-\t\t\t\tdefault:\r\n-\t\t\t\t\treturn false;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\treturn true;\r\n-\t}\r\n-\r\n-\tprivate final String LANG;\r\n-\tprivate final String XML_NS_URI;\r\n-\r\n-\tpublic LangFunction()\r\n-\t{\r\n-\t\tLANG = \"lang\";\r\n-\t\tXML_NS_URI = XMLConstants.XML_NS_URI;\r\n-\t}\r\n-\r\n-\tprivate <N> boolean lang(final Model<N> model, N node, final String lang)\r\n-\t{\r\n-\t\twhile (node != null)\r\n-\t\t{\r\n-\t\t\tfinal N attribute = model.getAttribute(node, XML_NS_URI, LANG);\r\n-\t\t\tif (null != attribute)\r\n-\t\t\t{\r\n-\t\t\t\tfinal String nodeLang = model.getStringValue(attribute);\r\n-\t\t\t\tif (nodeLang != null)\r\n-\t\t\t\t{\r\n-\t\t\t\t\treturn isSubLanguage(lang, nodeLang);\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t\tnode = model.getParent(node);\r\n-\t\t}\r\n-\t\treturn false;\r\n-\t}\r\n-\r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal StringExpr se = e.makeStringExpr(statEnv);\r\n-\t\treturn new ConvertibleBooleanExpr()\r\n-\t\t{\r\n-\t\t\tpublic <N> boolean booleanFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t\t\t{\r\n-\t\t\t\treturn lang(model, contextNode, se.stringFunction(model, contextNode, dynEnv));\r\n-\t\t\t}\r\n-\t\t};\r\n-\t}\r\n-}\r\n+package org.genxdm.processor.xpath.v10.functions;\n+\n+import javax.xml.XMLConstants;\n+import org.genxdm.Model;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleBooleanExpr;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\n+import org.genxdm.xpath.v10.ExprContextDynamic;\n+import org.genxdm.xpath.v10.ExprContextStatic;\n+import org.genxdm.xpath.v10.ExprException;\n+import org.genxdm.xpath.v10.ExprParseException;\n+import org.genxdm.xpath.v10.StringExpr;\n+import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n+\n+public final class LangFunction extends Function1\n+{\n+    private static boolean isSubLanguage(final String lang1, final String lang2)\n+    {\n+        final int len1 = lang1.length();\n+        final int len2 = lang2.length();\n+        if (len1 > len2)\n+        {\n+            return false;\n+        }\n+        if (len1 < len2 && lang2.charAt(len1) != '-')\n+        {\n+            return false;\n+        }\n+        for (int i = 0; i < len1; i++)\n+        {\n+            final char c1 = lang1.charAt(i);\n+            final char c2 = lang2.charAt(i);\n+\n+            switch ((int)c1 - (int)c2)\n+            {\n+                case 0:\n+                case 'a' - 'A':\n+                case 'A' - 'a':\n+                break;\n+                default:\n+                    return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private final String LANG;\n+    private final String XML_NS_URI;\n+\n+    public LangFunction()\n+    {\n+        LANG = \"lang\";\n+        XML_NS_URI = XMLConstants.XML_NS_URI;\n+    }\n+\n+    private <N> boolean lang(final Model<N> model, N node, final String lang)\n+    {\n+        while (node != null)\n+        {\n+            final N attribute = model.getAttribute(node, XML_NS_URI, LANG);\n+            if (null != attribute)\n+            {\n+                final String nodeLang = model.getStringValue(attribute);\n+                if (nodeLang != null)\n+                {\n+                    return isSubLanguage(lang, nodeLang);\n+                }\n+            }\n+            node = model.getParent(node);\n+        }\n+        return false;\n+    }\n+\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\n+        throws ExprParseException\n+    {\n+        final StringExpr se = e.makeStringExpr(statEnv);\n+        return new ConvertibleBooleanExpr()\n+        {\n+            public <N> boolean booleanFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\n+            {\n+                return lang(model, contextNode, se.stringFunction(model, contextNode, dynEnv));\n+            }\n+        };\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 85
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/200/LangFunction.java\nindex 2053c1926f0..e406540c01a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/200/LangFunction.java\n@@ -35,7 +35,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n public final class LangFunction \r\n     extends Function1\r\n {\r\n-\tprivate static boolean isSubLanguage(final String lang1, final String lang2)\r\n+private static boolean isSubLanguage(final String lang1, final String lang2)\r\n \t{\r\n \t\tfinal int len1 = lang1.length();\r\n \t\tfinal int len2 = lang2.length();\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/200/LangFunction.java\nindex 2053c1926f0..209dcc7ab7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/200/LangFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/200/LangFunction.java\n@@ -35,7 +35,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n public final class LangFunction \r\n     extends Function1\r\n {\r\n-\tprivate static boolean isSubLanguage(final String lang1, final String lang2)\r\n+    private static boolean isSubLanguage(final String lang1, final String lang2)\r\n \t{\r\n \t\tfinal int len1 = lang1.length();\r\n \t\tfinal int len2 = lang2.length();\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
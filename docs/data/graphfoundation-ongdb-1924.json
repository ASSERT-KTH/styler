{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1924",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1924/CompositeLabelScanValueIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1924/CompositeLabelScanValueIterator.java\nindex 8f8ee8e2a5e..9710172b609 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1924/CompositeLabelScanValueIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1924/CompositeLabelScanValueIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.labelscan;\n \n import java.util.List;\n@@ -36,113 +37,112 @@ import org.neo4j.graphdb.ResourceUtils;\n  */\n class CompositeLabelScanValueIterator extends PrimitiveLongBaseIterator implements PrimitiveLongResourceIterator\n {\n-    private final PriorityQueue<IdAndSource> sortedIterators = new PriorityQueue<>();\n-    private final int atLeastNumberOfLabels;\n-    private final List<PrimitiveLongResourceIterator> toClose;\n-    private long last = -1;\n+  private final PriorityQueue<IdAndSource> sortedIterators = new PriorityQueue<>();\n+  private final int atLeastNumberOfLabels;\n+  private final List<PrimitiveLongResourceIterator> toClose;\n+  private long last = -1;\n \n-    /**\n-     * Constructs a {@link CompositeLabelScanValueIterator}.\n-     *\n-     * @param iterators {@link PrimitiveLongIterator iterators} to merge.\n-     * @param trueForAll if {@code true} using {@code AND} merging, otherwise {@code OR} merging.\n-     */\n-    CompositeLabelScanValueIterator( List<PrimitiveLongResourceIterator> iterators, boolean trueForAll )\n+  /**\n+   * Constructs a {@link CompositeLabelScanValueIterator}.\n+   *\n+   * @param iterators  {@link PrimitiveLongIterator iterators} to merge.\n+   * @param trueForAll if {@code true} using {@code AND} merging, otherwise {@code OR} merging.\n+   */\n+  CompositeLabelScanValueIterator(List<PrimitiveLongResourceIterator> iterators, boolean trueForAll)\n+  {\n+    this.toClose = iterators;\n+    this.atLeastNumberOfLabels = trueForAll ? iterators.size() : 1;\n+    for (PrimitiveLongIterator iterator : iterators)\n     {\n-        this.toClose = iterators;\n-        this.atLeastNumberOfLabels = trueForAll ? iterators.size() : 1;\n-        for ( PrimitiveLongIterator iterator : iterators )\n-        {\n-            if ( iterator.hasNext() )\n-            {\n-                sortedIterators.add( new IdAndSource( iterator.next(), iterator ) );\n-            }\n-        }\n+      if (iterator.hasNext())\n+      {\n+        sortedIterators.add(new IdAndSource(iterator.next(), iterator));\n+      }\n     }\n+  }\n \n-    @Override\n-    protected boolean fetchNext()\n+  @Override\n+  protected boolean fetchNext()\n+  {\n+    int numberOfLabels = 0;\n+    long next = last;\n+    while (next == last || numberOfLabels < atLeastNumberOfLabels)\n     {\n-        int numberOfLabels = 0;\n-        long next = last;\n-        while ( next == last || numberOfLabels < atLeastNumberOfLabels )\n-        {\n-            IdAndSource idAndSource = sortedIterators.poll();\n-            if ( idAndSource == null )\n-            {\n-                return false;\n-            }\n+      IdAndSource idAndSource = sortedIterators.poll();\n+      if (idAndSource == null)\n+      {\n+        return false;\n+      }\n \n-            if ( idAndSource.latestReturned == next )\n-            {\n-                numberOfLabels++;\n-            }\n-            else\n-            {\n-                next = idAndSource.latestReturned;\n-                numberOfLabels = 1;\n-            }\n+      if (idAndSource.latestReturned == next)\n+      {\n+        numberOfLabels++;\n+      } else\n+      {\n+        next = idAndSource.latestReturned;\n+        numberOfLabels = 1;\n+      }\n \n-            if ( idAndSource.source.hasNext() )\n-            {\n-                idAndSource.latestReturned = idAndSource.source.next();\n-                sortedIterators.offer( idAndSource );\n-            }\n-        }\n-        last = next;\n-        next( last );\n-        return true;\n+      if (idAndSource.source.hasNext())\n+      {\n+        idAndSource.latestReturned = idAndSource.source.next();\n+        sortedIterators.offer(idAndSource);\n+      }\n     }\n+    last = next;\n+    next(last);\n+    return true;\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void close()\n+  {\n+    ResourceUtils.closeAll(toClose);\n+    sortedIterators.clear();\n+    toClose.clear();\n+  }\n+\n+  private static class IdAndSource implements Comparable<IdAndSource>\n+  {\n+    private long latestReturned;\n+    private final PrimitiveLongIterator source;\n+\n+    private IdAndSource(long latestReturned, PrimitiveLongIterator source)\n     {\n-        ResourceUtils.closeAll( toClose );\n-        sortedIterators.clear();\n-        toClose.clear();\n+      this.latestReturned = latestReturned;\n+      this.source = source;\n     }\n \n-    private static class IdAndSource implements Comparable<IdAndSource>\n+    @Override\n+    public int compareTo(IdAndSource o)\n     {\n-        private long latestReturned;\n-        private final PrimitiveLongIterator source;\n-\n-        private IdAndSource( long latestReturned, PrimitiveLongIterator source )\n-        {\n-            this.latestReturned = latestReturned;\n-            this.source = source;\n-        }\n-\n-        @Override\n-        public int compareTo( IdAndSource o )\n-        {\n-            int keyComparison = Long.compare( latestReturned, o.latestReturned );\n-            if ( keyComparison == 0 )\n-            {\n-                return Integer.compare( source.hashCode(), o.source.hashCode() );\n-            }\n-            return keyComparison;\n-        }\n+      int keyComparison = Long.compare(latestReturned, o.latestReturned);\n+      if (keyComparison == 0)\n+      {\n+        return Integer.compare(source.hashCode(), o.source.hashCode());\n+      }\n+      return keyComparison;\n+    }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            IdAndSource that = (IdAndSource) o;\n-            return compareTo( that ) == 0;\n-        }\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      IdAndSource that = (IdAndSource) o;\n+      return compareTo(that) == 0;\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( latestReturned, source );\n-        }\n+    @Override\n+    public int hashCode()\n+    {\n+      return Objects.hash(latestReturned, source);\n     }\n+  }\n }\n",
            "diff_size": 121
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1924/CompositeLabelScanValueIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1924/CompositeLabelScanValueIterator.java\nindex 8f8ee8e2a5e..3c68844ca1f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1924/CompositeLabelScanValueIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1924/CompositeLabelScanValueIterator.java\n@@ -90,7 +90,8 @@ class CompositeLabelScanValueIterator extends PrimitiveLongBaseIterator implemen\n             }\n         }\n         last = next;\n-        next( last );\n+\n+next( last );\n         return true;\n     }\n \n@@ -121,7 +122,8 @@ class CompositeLabelScanValueIterator extends PrimitiveLongBaseIterator implemen\n             {\n                 return Integer.compare( source.hashCode(), o.source.hashCode() );\n             }\n-            return keyComparison;\n+\n+return keyComparison;\n         }\n \n         @Override\n@@ -131,11 +133,13 @@ class CompositeLabelScanValueIterator extends PrimitiveLongBaseIterator implemen\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            IdAndSource that = (IdAndSource) o;\n+\n+IdAndSource that = (IdAndSource) o;\n             return compareTo( that ) == 0;\n         }\n \n@@ -145,4 +149,4 @@ class CompositeLabelScanValueIterator extends PrimitiveLongBaseIterator implemen\n             return Objects.hash( latestReturned, source );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3048",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3048/AbstractLuceneIndexBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3048/AbstractLuceneIndexBuilder.java\nindex b0e9633b1b4..62919ce128b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3048/AbstractLuceneIndexBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3048/AbstractLuceneIndexBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.builder;\n \n import java.nio.file.Path;\n@@ -40,9 +41,9 @@ public abstract class AbstractLuceneIndexBuilder<T extends AbstractLuceneIndexBu\n     protected final Config config;\n     private boolean isSingleInstance = true;\n \n-    public AbstractLuceneIndexBuilder( Config config )\n+    public AbstractLuceneIndexBuilder(Config config)\n     {\n-        this.config = Objects.requireNonNull( config );\n+        this.config = Objects.requireNonNull(config);\n     }\n \n     /**\n@@ -51,9 +52,9 @@ public abstract class AbstractLuceneIndexBuilder<T extends AbstractLuceneIndexBu\n      * @param indexStorage index storage\n      * @return index builder\n      */\n-    public T withIndexStorage( PartitionedIndexStorage indexStorage )\n+    public T withIndexStorage(PartitionedIndexStorage indexStorage)\n     {\n-        storageBuilder.withIndexStorage( indexStorage );\n+        storageBuilder.withIndexStorage(indexStorage);\n         return (T) this;\n     }\n \n@@ -63,9 +64,9 @@ public abstract class AbstractLuceneIndexBuilder<T extends AbstractLuceneIndexBu\n      * @param directoryFactory directory factory\n      * @return index builder\n      */\n-    public T withDirectoryFactory( DirectoryFactory directoryFactory )\n+    public T withDirectoryFactory(DirectoryFactory directoryFactory)\n     {\n-        storageBuilder.withDirectoryFactory( directoryFactory );\n+        storageBuilder.withDirectoryFactory(directoryFactory);\n         return (T) this;\n     }\n \n@@ -75,9 +76,9 @@ public abstract class AbstractLuceneIndexBuilder<T extends AbstractLuceneIndexBu\n      * @param fileSystem file system abstraction\n      * @return index builder\n      */\n-    public T withFileSystem( FileSystemAbstraction fileSystem )\n+    public T withFileSystem(FileSystemAbstraction fileSystem)\n     {\n-        storageBuilder.withFileSystem( fileSystem );\n+        storageBuilder.withFileSystem(fileSystem);\n         return (T) this;\n     }\n \n@@ -87,18 +88,19 @@ public abstract class AbstractLuceneIndexBuilder<T extends AbstractLuceneIndexBu\n      * @param indexRootFolder root folder\n      * @return index builder\n      */\n-    public T withIndexRootFolder( Path indexRootFolder )\n+    public T withIndexRootFolder(Path indexRootFolder)\n     {\n-        storageBuilder.withIndexFolder( indexRootFolder );\n+        storageBuilder.withIndexFolder(indexRootFolder);\n         return (T) this;\n     }\n \n     /**\n      * Specify if the db is in a SINGLE INSTANCE operational mode.\n+     *\n      * @param isSingleInstance operational mode\n      * @return index builder\n      */\n-    public T withOperationalMode( boolean isSingleInstance )\n+    public T withOperationalMode(boolean isSingleInstance)\n     {\n         this.isSingleInstance = isSingleInstance;\n         return (T) this;\n@@ -106,21 +108,23 @@ public abstract class AbstractLuceneIndexBuilder<T extends AbstractLuceneIndexBu\n \n     /**\n      * Check if index should be read only\n+     *\n      * @return true if index should be read only\n      */\n     protected boolean isReadOnly()\n     {\n-        return getConfig( GraphDatabaseSettings.read_only ) && isSingleInstance;\n+        return getConfig(GraphDatabaseSettings.read_only) && isSingleInstance;\n     }\n \n     /**\n      * Lookup a config parameter.\n+     *\n      * @param flag the parameter to look up.\n-     * @param <F> the type of the parameter.\n+     * @param <F>  the type of the parameter.\n      * @return the value of the parameter.\n      */\n-    protected  <F> F getConfig( Setting<F> flag )\n+    protected <F> F getConfig(Setting<F> flag)\n     {\n-        return config.get( flag );\n+        return config.get(flag);\n     }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
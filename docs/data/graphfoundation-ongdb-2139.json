{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2139",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2139/ProfilingTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2139/ProfilingTracer.java\nindex a6dfc6e095a..823772d3caf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2139/ProfilingTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2139/ProfilingTracer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.v3_4.codegen.profiling;\n \n import java.util.HashMap;\n@@ -30,163 +31,168 @@ import org.neo4j.helpers.MathUtil;\n \n public class ProfilingTracer implements QueryExecutionTracer\n {\n-    public interface ProfilingInformation\n+  public interface ProfilingInformation\n+  {\n+    long time();\n+\n+    long dbHits();\n+\n+    long rows();\n+\n+    long pageCacheHits();\n+\n+    long pageCacheMisses();\n+\n+    default double pageCacheHitRatio()\n     {\n-        long time();\n-        long dbHits();\n-        long rows();\n-        long pageCacheHits();\n-        long pageCacheMisses();\n-        default double pageCacheHitRatio()\n-        {\n-            return MathUtil.portion( pageCacheHits(), pageCacheMisses() );\n-        }\n+      return MathUtil.portion(pageCacheHits(), pageCacheMisses());\n     }\n-\n-    public interface Clock\n+  }\n+\n+  public interface Clock\n+  {\n+    long nanoTime();\n+\n+    Clock SYSTEM_TIMER = System::nanoTime;\n+  }\n+\n+  private static final Data ZERO = new Data();\n+\n+  private final Clock clock;\n+  private final KernelStatisticProvider statisticProvider;\n+  private final Map<Id, Data> data = new HashMap<>();\n+\n+  public ProfilingTracer(KernelStatisticProvider statisticProvider)\n+  {\n+    this(Clock.SYSTEM_TIMER, statisticProvider);\n+  }\n+\n+  ProfilingTracer(Clock clock, KernelStatisticProvider statisticProvider)\n+  {\n+    this.clock = clock;\n+    this.statisticProvider = statisticProvider;\n+  }\n+\n+  public ProfilingInformation get(Id query)\n+  {\n+    Data value = data.get(query);\n+    return value == null ? ZERO : value;\n+  }\n+\n+  public long timeOf(Id query)\n+  {\n+    return get(query).time();\n+  }\n+\n+  public long dbHitsOf(Id query)\n+  {\n+    return get(query).dbHits();\n+  }\n+\n+  public long rowsOf(Id query)\n+  {\n+    return get(query).rows();\n+  }\n+\n+  @Override\n+  public QueryExecutionEvent executeOperator(Id queryId)\n+  {\n+    Data queryData = this.data.get(queryId);\n+    if (queryData == null && queryId != null)\n     {\n-        long nanoTime();\n-\n-        Clock SYSTEM_TIMER = System::nanoTime;\n+      queryData = new Data();\n+      this.data.put(queryId, queryData);\n     }\n+    return new ExecutionEvent(clock, statisticProvider, queryData);\n+  }\n \n-    private static final Data ZERO = new Data();\n-\n+  private static class ExecutionEvent implements QueryExecutionEvent\n+  {\n+    private final long start;\n     private final Clock clock;\n     private final KernelStatisticProvider statisticProvider;\n-    private final Map<Id, Data> data = new HashMap<>();\n+    private final Data data;\n+    private long hitCount;\n+    private long rowCount;\n+\n+    ExecutionEvent(Clock clock, KernelStatisticProvider statisticProvider, Data data)\n+    {\n+      this.clock = clock;\n+      this.statisticProvider = statisticProvider;\n+      this.data = data;\n+      this.start = clock.nanoTime();\n+    }\n \n-    public ProfilingTracer( KernelStatisticProvider statisticProvider )\n+    @Override\n+    public void close()\n     {\n-        this( Clock.SYSTEM_TIMER, statisticProvider );\n+      long executionTime = clock.nanoTime() - start;\n+      long pageCacheHits = statisticProvider.getPageCacheHits();\n+      long pageCacheFaults = statisticProvider.getPageCacheMisses();\n+      if (data != null)\n+      {\n+        data.update(executionTime, hitCount, rowCount, pageCacheHits, pageCacheFaults);\n+      }\n     }\n \n-    ProfilingTracer( Clock clock, KernelStatisticProvider statisticProvider )\n+    @Override\n+    public void dbHit()\n     {\n-        this.clock = clock;\n-        this.statisticProvider = statisticProvider;\n+      hitCount++;\n     }\n \n-    public ProfilingInformation get( Id query )\n+    @Override\n+    public void row()\n     {\n-        Data value = data.get( query );\n-        return value == null ? ZERO : value;\n+      rowCount++;\n     }\n+  }\n \n-    public long timeOf( Id query )\n+  private static class Data implements ProfilingInformation\n+  {\n+    private long time;\n+    private long hits;\n+    private long rows;\n+    private long pageCacheHits;\n+    private long pageCacheMisses;\n+\n+    public void update(long time, long hits, long rows, long pageCacheHits, long pageCacheMisses)\n     {\n-        return get( query ).time();\n+      this.time += time;\n+      this.hits += hits;\n+      this.rows += rows;\n+      this.pageCacheHits += pageCacheHits;\n+      this.pageCacheMisses += pageCacheMisses;\n     }\n \n-    public long dbHitsOf( Id query )\n+    @Override\n+    public long time()\n     {\n-        return get( query ).dbHits();\n+      return time;\n     }\n \n-    public long rowsOf( Id query )\n+    @Override\n+    public long dbHits()\n     {\n-        return get( query ).rows();\n+      return hits;\n     }\n \n     @Override\n-    public QueryExecutionEvent executeOperator( Id queryId )\n+    public long rows()\n     {\n-        Data queryData = this.data.get( queryId );\n-        if ( queryData == null && queryId != null )\n-        {\n-            queryData = new Data();\n-            this.data.put( queryId, queryData );\n-        }\n-        return new ExecutionEvent( clock, statisticProvider, queryData );\n+      return rows;\n     }\n \n-    private static class ExecutionEvent implements QueryExecutionEvent\n+    @Override\n+    public long pageCacheHits()\n     {\n-        private final long start;\n-        private final Clock clock;\n-        private final KernelStatisticProvider statisticProvider;\n-        private final Data data;\n-        private long hitCount;\n-        private long rowCount;\n-\n-        ExecutionEvent( Clock clock, KernelStatisticProvider statisticProvider, Data data )\n-        {\n-            this.clock = clock;\n-            this.statisticProvider = statisticProvider;\n-            this.data = data;\n-            this.start = clock.nanoTime();\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            long executionTime = clock.nanoTime() - start;\n-            long pageCacheHits = statisticProvider.getPageCacheHits();\n-            long pageCacheFaults = statisticProvider.getPageCacheMisses();\n-            if ( data != null )\n-            {\n-                data.update( executionTime, hitCount, rowCount, pageCacheHits, pageCacheFaults );\n-            }\n-        }\n-\n-        @Override\n-        public void dbHit()\n-        {\n-            hitCount++;\n-        }\n-\n-        @Override\n-        public void row()\n-        {\n-            rowCount++;\n-        }\n+      return pageCacheHits;\n     }\n \n-    private static class Data implements ProfilingInformation\n+    @Override\n+    public long pageCacheMisses()\n     {\n-        private long time;\n-        private long hits;\n-        private long rows;\n-        private long pageCacheHits;\n-        private long pageCacheMisses;\n-\n-        public void update( long time, long hits, long rows, long pageCacheHits, long pageCacheMisses )\n-        {\n-            this.time += time;\n-            this.hits += hits;\n-            this.rows += rows;\n-            this.pageCacheHits += pageCacheHits;\n-            this.pageCacheMisses += pageCacheMisses;\n-        }\n-\n-        @Override\n-        public long time()\n-        {\n-            return time;\n-        }\n-\n-        @Override\n-        public long dbHits()\n-        {\n-            return hits;\n-        }\n-\n-        @Override\n-        public long rows()\n-        {\n-            return rows;\n-        }\n-\n-        @Override\n-        public long pageCacheHits()\n-        {\n-            return pageCacheHits;\n-        }\n-\n-        @Override\n-        public long pageCacheMisses()\n-        {\n-            return pageCacheMisses;\n-        }\n+      return pageCacheMisses;\n     }\n+  }\n }\n",
            "diff_size": 227
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2139/ProfilingTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2139/ProfilingTracer.java\nindex a6dfc6e095a..37c04b96279 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2139/ProfilingTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2139/ProfilingTracer.java\n@@ -37,7 +37,7 @@ public class ProfilingTracer implements QueryExecutionTracer\n         long rows();\n         long pageCacheHits();\n         long pageCacheMisses();\n-        default double pageCacheHitRatio()\n+    default double pageCacheHitRatio()\n         {\n             return MathUtil.portion( pageCacheHits(), pageCacheMisses() );\n         }\n@@ -46,15 +46,14 @@ public class ProfilingTracer implements QueryExecutionTracer\n     public interface Clock\n     {\n         long nanoTime();\n-\n-        Clock SYSTEM_TIMER = System::nanoTime;\n+Clock SYSTEM_TIMER = System::nanoTime;\n     }\n \n     private static final Data ZERO = new Data();\n \n     private final Clock clock;\n     private final KernelStatisticProvider statisticProvider;\n-    private final Map<Id, Data> data = new HashMap<>();\n+    private final Map<Id,Data> data = new HashMap<>();\n \n     public ProfilingTracer( KernelStatisticProvider statisticProvider )\n     {\n@@ -189,4 +188,4 @@ public class ProfilingTracer implements QueryExecutionTracer\n             return pageCacheMisses;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
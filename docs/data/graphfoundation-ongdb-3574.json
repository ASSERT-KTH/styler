{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3574",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3574/ReplicatedLockTokenRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3574/ReplicatedLockTokenRequest.java\nindex 3dde3b0aff8..85cb246de59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3574/ReplicatedLockTokenRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3574/ReplicatedLockTokenRequest.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.locks;\n \n import java.util.Objects;\n@@ -31,60 +32,60 @@ import static java.lang.String.format;\n \n public class ReplicatedLockTokenRequest implements CoreReplicatedContent, LockToken\n {\n-    private final MemberId owner;\n-    private final int candidateId;\n+  private final MemberId owner;\n+  private final int candidateId;\n \n-    static final ReplicatedLockTokenRequest INVALID_REPLICATED_LOCK_TOKEN_REQUEST =\n-            new ReplicatedLockTokenRequest( null, LockToken.INVALID_LOCK_TOKEN_ID );\n+  static final ReplicatedLockTokenRequest INVALID_REPLICATED_LOCK_TOKEN_REQUEST =\n+      new ReplicatedLockTokenRequest(null, LockToken.INVALID_LOCK_TOKEN_ID);\n \n-    public ReplicatedLockTokenRequest( MemberId owner, int candidateId )\n-    {\n-        this.owner = owner;\n-        this.candidateId = candidateId;\n-    }\n+  public ReplicatedLockTokenRequest(MemberId owner, int candidateId)\n+  {\n+    this.owner = owner;\n+    this.candidateId = candidateId;\n+  }\n \n-    @Override\n-    public int id()\n-    {\n-        return candidateId;\n-    }\n+  @Override\n+  public int id()\n+  {\n+    return candidateId;\n+  }\n \n-    @Override\n-    public MemberId owner()\n-    {\n-        return owner;\n-    }\n+  @Override\n+  public MemberId owner()\n+  {\n+    return owner;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        ReplicatedLockTokenRequest that = (ReplicatedLockTokenRequest) o;\n-        return candidateId == that.candidateId && Objects.equals( owner, that.owner );\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return Objects.hash( owner, candidateId );\n+      return false;\n     }\n+    ReplicatedLockTokenRequest that = (ReplicatedLockTokenRequest) o;\n+    return candidateId == that.candidateId && Objects.equals(owner, that.owner);\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return format( \"ReplicatedLockTokenRequest{owner=%s, candidateId=%d}\", owner, candidateId );\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(owner, candidateId);\n+  }\n \n-    @Override\n-    public void dispatch( CommandDispatcher commandDispatcher, long commandIndex, Consumer<Result> callback )\n-    {\n-        commandDispatcher.dispatch( this, commandIndex, callback );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"ReplicatedLockTokenRequest{owner=%s, candidateId=%d}\", owner, candidateId);\n+  }\n+\n+  @Override\n+  public void dispatch(CommandDispatcher commandDispatcher, long commandIndex, Consumer<Result> callback)\n+  {\n+    commandDispatcher.dispatch(this, commandIndex, callback);\n+  }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3574/ReplicatedLockTokenRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3574/ReplicatedLockTokenRequest.java\nindex 3dde3b0aff8..60bc763f1a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3574/ReplicatedLockTokenRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3574/ReplicatedLockTokenRequest.java\n@@ -34,10 +34,9 @@ public class ReplicatedLockTokenRequest implements CoreReplicatedContent, LockTo\n     private final MemberId owner;\n     private final int candidateId;\n \n-    static final ReplicatedLockTokenRequest INVALID_REPLICATED_LOCK_TOKEN_REQUEST =\n-            new ReplicatedLockTokenRequest( null, LockToken.INVALID_LOCK_TOKEN_ID );\n+    static final ReplicatedLockTokenRequest INVALID_REPLICATED_LOCK_TOKEN_REQUEST = new ReplicatedLockTokenRequest( null, LockToken.INVALID_LOCK_TOKEN_ID );\n \n-    public ReplicatedLockTokenRequest( MemberId owner, int candidateId )\n+public ReplicatedLockTokenRequest( MemberId owner, int candidateId )\n     {\n         this.owner = owner;\n         this.candidateId = candidateId;\n@@ -62,11 +61,13 @@ public class ReplicatedLockTokenRequest implements CoreReplicatedContent, LockTo\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        ReplicatedLockTokenRequest that = (ReplicatedLockTokenRequest) o;\n+\n+ReplicatedLockTokenRequest that = (ReplicatedLockTokenRequest) o;\n         return candidateId == that.candidateId && Objects.equals( owner, that.owner );\n     }\n \n@@ -87,4 +88,4 @@ public class ReplicatedLockTokenRequest implements CoreReplicatedContent, LockTo\n     {\n         commandDispatcher.dispatch( this, commandIndex, callback );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
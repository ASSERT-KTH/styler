{
    "project_name": "neo4j-neo4j",
    "error_id": "1905",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1905/SecureString.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1905/SecureString.java\nindex f2f40a52f30..d4683913cb0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1905/SecureString.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1905/SecureString.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.string;\n \n import java.nio.charset.Charset;\n@@ -44,60 +45,58 @@ public class SecureString\n     private static final Charset encoding = UTF_8;\n     private static final int KEY_SIZE = 16;\n \n-    public SecureString( String stringToSecure )\n+    public SecureString(String stringToSecure)\n     {\n-        this( stringToSecure, true );\n+        this(stringToSecure, true);\n     }\n \n-    SecureString( String stringToSecure, boolean tryUseEncryption )\n+    SecureString(String stringToSecure, boolean tryUseEncryption)\n     {\n-        this( stringToSecure != null ? stringToSecure.getBytes( encoding ) : null, tryUseEncryption );\n+        this(stringToSecure != null ? stringToSecure.getBytes(encoding) : null, tryUseEncryption);\n     }\n \n-    private SecureString( byte[] dataToSecure, boolean tryUseEncryption )\n+    private SecureString(byte[] dataToSecure, boolean tryUseEncryption)\n     {\n-        if ( dataToSecure != null )\n+        if (dataToSecure != null)\n         {\n-            if ( tryUseEncryption )\n+            if (tryUseEncryption)\n             {\n                 try\n                 {\n                     // Setup key\n                     final byte[] key = new byte[KEY_SIZE];\n-                    random.nextBytes( key );\n-                    final Key aesKey = new SecretKeySpec( key, \"AES\" );\n-                    Arrays.fill( key, (byte) 0 );\n+                    random.nextBytes(key);\n+                    final Key aesKey = new SecretKeySpec(key, \"AES\");\n+                    Arrays.fill(key, (byte) 0);\n \n                     // Setup iv\n                     final byte[] iv = new byte[12];\n-                    random.nextBytes( iv );\n-                    GCMParameterSpec parameterSpec = new GCMParameterSpec( 128, iv );\n-                    Arrays.fill( iv, (byte) 0 );\n+                    random.nextBytes(iv);\n+                    GCMParameterSpec parameterSpec = new GCMParameterSpec(128, iv);\n+                    Arrays.fill(iv, (byte) 0);\n \n                     // Init cypher and encode\n-                    cipher = Cipher.getInstance( \"AES/GCM/NoPadding\" );\n-                    cipher.init( Cipher.ENCRYPT_MODE, aesKey, parameterSpec );\n-                    encryptedData = cipher.doFinal( dataToSecure );\n+                    cipher = Cipher.getInstance(\"AES/GCM/NoPadding\");\n+                    cipher.init(Cipher.ENCRYPT_MODE, aesKey, parameterSpec);\n+                    encryptedData = cipher.doFinal(dataToSecure);\n \n                     // Swap to decode mode\n-                    cipher.init( Cipher.DECRYPT_MODE, aesKey, parameterSpec );\n+                    cipher.init(Cipher.DECRYPT_MODE, aesKey, parameterSpec);\n                     encryptionAvailable = true;\n-                }\n-                catch ( Exception e )\n+                } catch (Exception e)\n                 {\n                     encryptionAvailable = false;\n                 }\n             }\n \n-            if ( !encryptionAvailable )\n+            if (!encryptionAvailable)\n             {\n                 //Using simple obfuscation\n                 obfuscationKey = new byte[KEY_SIZE];\n-                random.nextBytes( obfuscationKey );\n-                encryptedData = XOR( dataToSecure, obfuscationKey );\n+                random.nextBytes(obfuscationKey);\n+                encryptedData = XOR(dataToSecure, obfuscationKey);\n             }\n-        }\n-        else\n+        } else\n         {\n             encryptedData = null;\n             encryptionAvailable = tryUseEncryption;\n@@ -111,29 +110,28 @@ public class SecureString\n \n     private byte[] getData()\n     {\n-        if ( encryptedData == null )\n+        if (encryptedData == null)\n         {\n             return null;\n         }\n \n-        if ( encryptionAvailable() )\n+        if (encryptionAvailable())\n         {\n             try\n             {\n-                return cipher.doFinal( encryptedData );\n-            }\n-            catch ( Exception e )\n+                return cipher.doFinal(encryptedData);\n+            } catch (Exception e)\n             {\n-                throw new RuntimeException( \"Data corruption, could not decrypt data\", e );\n+                throw new RuntimeException(\"Data corruption, could not decrypt data\", e);\n             }\n         }\n-        return XOR( encryptedData, obfuscationKey );\n+        return XOR(encryptedData, obfuscationKey);\n     }\n \n-    private static byte[] XOR( final byte[] input, final byte[] key )\n+    private static byte[] XOR(final byte[] input, final byte[] key)\n     {\n-        byte[] output = Arrays.copyOf( input, input.length );\n-        for ( int i = 0; i < input.length; i++ )\n+        byte[] output = Arrays.copyOf(input, input.length);\n+        for (int i = 0; i < input.length; i++)\n         {\n             output[i] = (byte) (input[i] ^ key[i % key.length]);\n         }\n@@ -144,7 +142,7 @@ public class SecureString\n     public String getString()\n     {\n         byte[] data = getData();\n-        return data != null ? new String( data, encoding ) : null;\n+        return data != null ? new String(data, encoding) : null;\n     }\n \n     @Override\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
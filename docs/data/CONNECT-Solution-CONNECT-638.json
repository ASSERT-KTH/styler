{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "638",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.mpilib;\n\nimport gov.hhs.fha.nhinc.nhinclib.NullChecker;\nimport org.slf4j.Logger;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "27",
                    "column": "34",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/638/MiniMpi.java\nindex 7999e4851c9..3d3d728a71f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/638/MiniMpi.java\n@@ -24,9 +24,9 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.mpilib;\n+package gov.hhs.fha.nhinc.mpilib;import\n \n-import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n+gov.hhs.fha.nhinc.nhinclib.NullChecker;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/638/MiniMpi.java\nindex 7999e4851c9..38ccc8c9e3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/638/MiniMpi.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n@@ -32,217 +33,218 @@ import org.slf4j.LoggerFactory;\n \n /**\n  * Singleton class.\n- *\n  */\n public class MiniMpi implements IMPI {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(MiniMpi.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(MiniMpi.class);\n \n-    private static MiniMpi instance = null;\n+  private static MiniMpi instance = null;\n \n-    private Patients patients = null;\n-    private String customFileName = \"\";\n+  private Patients patients = null;\n+  private String customFileName = \"\";\n \n-    MiniMpi() {\n-        loadData();\n-    }\n-\n-    /**\n-     * @return an instance of this singleton class\n-     */\n-    public static MiniMpi getInstance() {\n-        if (instance == null) {\n-            instance = new MiniMpi();\n-        }\n-        instance.loadData();\n+  MiniMpi() {\n+    loadData();\n+  }\n \n-        return instance;\n+  /**\n+   * @return an instance of this singleton class\n+   */\n+  public static MiniMpi getInstance() {\n+    if (instance == null) {\n+      instance = new MiniMpi();\n     }\n+    instance.loadData();\n \n-    /**\n-     * @param fileName the mpi file to laod data from\n-     * @return an instance of this singleton class\n-     */\n-    public static MiniMpi getInstance(String fileName) {\n-        if (instance == null) {\n-            instance = new MiniMpi();\n-        }\n-        instance.loadData(fileName);\n+    return instance;\n+  }\n \n-        return instance;\n+  /**\n+   * @param fileName the mpi file to laod data from\n+   * @return an instance of this singleton class\n+   */\n+  public static MiniMpi getInstance(String fileName) {\n+    if (instance == null) {\n+      instance = new MiniMpi();\n     }\n+    instance.loadData(fileName);\n \n-    /**\n-     *\n-     */\n-    public synchronized void reset() {\n-        patients = null;\n-        saveData();\n-    }\n+    return instance;\n+  }\n \n-    private synchronized Patients searchByDemographics(Patient searchParams, boolean includeOptOutPatient) {\n-        Patients results = new Patients();\n-        PatientMatcher matcher = PatientMatcher.getInstance();\n+  /**\n+   *\n+   */\n+  public synchronized void reset() {\n+    patients = null;\n+    saveData();\n+  }\n \n-        LOG.info(\"performing a demograpics search\");\n-        for (Patient patient : this.getPatients()) {\n-            if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient)\n-                    && matcher.hasMatchByDemographics(patient, searchParams)) {\n-                results.add(patient);\n-            }\n-        }\n+  private synchronized Patients searchByDemographics(Patient searchParams, boolean includeOptOutPatient) {\n+    Patients results = new Patients();\n+    PatientMatcher matcher = PatientMatcher.getInstance();\n \n-        return results;\n+    LOG.info(\"performing a demograpics search\");\n+    for (Patient patient : this.getPatients()) {\n+      if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient)\n+          && matcher.hasMatchByDemographics(patient, searchParams)) {\n+        results.add(patient);\n+      }\n     }\n \n-    private synchronized Patients searchById(Patient searchParams, boolean includeOptOutPatient) {\n-        Patients results = new Patients();\n-        PatientMatcher matcher = PatientMatcher.getInstance();\n+    return results;\n+  }\n \n-        LOG.info(\"performing an id search\");\n-        for (Patient patient : this.getPatients()) {\n-            if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient)\n-                    && matcher.hasMatchByIds(patient, searchParams)) {\n-                results.add(patient);\n-            }\n-        }\n+  private synchronized Patients searchById(Patient searchParams, boolean includeOptOutPatient) {\n+    Patients results = new Patients();\n+    PatientMatcher matcher = PatientMatcher.getInstance();\n \n-        return results;\n+    LOG.info(\"performing an id search\");\n+    for (Patient patient : this.getPatients()) {\n+      if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient)\n+          && matcher.hasMatchByIds(patient, searchParams)) {\n+        results.add(patient);\n+      }\n     }\n \n-    private void validateNewPatient(Patient patient) {\n-        if ((patient.getNames().isEmpty()) || !(patient.getNames().get(0).isValid())) {\n-            throw new MpiException(\"New patient must hava a name\");\n-        }\n+    return results;\n+  }\n \n+  private void validateNewPatient(Patient patient) {\n+    if ((patient.getNames().isEmpty()) || !(patient.getNames().get(0).isValid())) {\n+      throw new MpiException(\"New patient must hava a name\");\n     }\n \n-    @Override\n-    public synchronized Patient addUpdate(Patient newPatient) {\n-        Patient resultPatient;\n-        validateNewPatient(newPatient);\n-\n-        Patients existingPatients = search(newPatient, true, true);\n-\n-        if (existingPatients.isEmpty()) {\n-            getPatients().add(newPatient);\n-            resultPatient = newPatient;\n-        } else if (existingPatients.size() == 1) {\n-            resultPatient = existingPatients.get(0);\n-            resultPatient.getIdentifiers().add(newPatient.getIdentifiers());\n-            resultPatient.setNames(newPatient.getNames());\n-            resultPatient.setGender(newPatient.getGender());\n-            resultPatient.setOptedIn(newPatient.isOptedIn());\n-        } else {\n-            throw new MpiException(\"Failed to update patient as there are more than one matching patients found.\");\n-        }\n+  }\n \n-        saveData();\n+  @Override\n+  public synchronized Patient addUpdate(Patient newPatient) {\n+    Patient resultPatient;\n+    validateNewPatient(newPatient);\n \n-        return resultPatient;\n-    }\n+    Patients existingPatients = search(newPatient, true, true);\n \n-    /**\n-     * Method will delete a patient from the MPI.\n-     * @param patient the Patient to delete\n-     * @param homeCommunityId the HCID\n-     */\n-    public synchronized void delete(Patient patient, String homeCommunityId) {\n-        Patients existingPatients = search(patient, true, true);\n-\n-        Identifier id;\n-        if (existingPatients.isEmpty()) {\n-            LOG.error(\"Delete failed.  Patient not found in MPI.\");\n-        } else if (existingPatients.size() == 1) {\n-            LOG.info(\"Found 1 entry in MPI for the patient\");\n-\n-            for (int idIdx = 0; idIdx < existingPatients.get(0).getIdentifiers().size(); idIdx++) {\n-                id = existingPatients.get(0).getIdentifiers().get(idIdx);\n-                if (homeCommunityId.contentEquals(id.getOrganizationId())) {\n-                    existingPatients.get(0).getIdentifiers().remove(idIdx);\n-                    break;\n-                }\n-            }\n-\n-            saveData();\n-\n-        } else {\n-            LOG.error(\"Delete failed.  Multiple instances of the patient were found.\");\n-        }\n+    if (existingPatients.isEmpty()) {\n+      getPatients().add(newPatient);\n+      resultPatient = newPatient;\n+    } else if (existingPatients.size() == 1) {\n+      resultPatient = existingPatients.get(0);\n+      resultPatient.getIdentifiers().add(newPatient.getIdentifiers());\n+      resultPatient.setNames(newPatient.getNames());\n+      resultPatient.setGender(newPatient.getGender());\n+      resultPatient.setOptedIn(newPatient.isOptedIn());\n+    } else {\n+      throw new MpiException(\"Failed to update patient as there are more than one matching patients found.\");\n     }\n-\n-    @Override\n-    public synchronized Patients search(Patient searchParams) {\n-        return search(searchParams, true, false);\n-    }\n-\n-    @Override\n-    public synchronized Patients search(Patient searchParams, boolean searchByDemographics) {\n-        return search(searchParams, searchByDemographics, false);\n-    }\n-\n-    /**\n-     * Method will search the MPI to see if the patient exists.\n-     * @param patient the Patient to search for\n-     * @param searchByDemographics boolean value. True if an attempt to make a demographic search should be made.\n-     * @param includeOptOutPatient boolean value. True if OptOut patients should be included. False otherwise.\n-     * @return a Patients object with all the patients found to have matched.\n-     */\n-    public synchronized Patients\n-            search(Patient patient, boolean searchByDemographics, boolean includeOptOutPatient) {\n-        Patients results = new Patients();\n-\n-        if (searchByDemographics) {\n-            LOG.info(\"searching by demographic\");\n-            results = searchByDemographics(patient, includeOptOutPatient);\n-        } else {\n-            LOG.info(\"no attempt on demographic search\");\n+\n+    saveData();\n+\n+    return resultPatient;\n+  }\n+\n+  /**\n+   * Method will delete a patient from the MPI.\n+   *\n+   * @param patient         the Patient to delete\n+   * @param homeCommunityId the HCID\n+   */\n+  public synchronized void delete(Patient patient, String homeCommunityId) {\n+    Patients existingPatients = search(patient, true, true);\n+\n+    Identifier id;\n+    if (existingPatients.isEmpty()) {\n+      LOG.error(\"Delete failed.  Patient not found in MPI.\");\n+    } else if (existingPatients.size() == 1) {\n+      LOG.info(\"Found 1 entry in MPI for the patient\");\n+\n+      for (int idIdx = 0; idIdx < existingPatients.get(0).getIdentifiers().size(); idIdx++) {\n+        id = existingPatients.get(0).getIdentifiers().get(idIdx);\n+        if (homeCommunityId.contentEquals(id.getOrganizationId())) {\n+          existingPatients.get(0).getIdentifiers().remove(idIdx);\n+          break;\n         }\n-\n-        if (results.isEmpty()) {\n-            LOG.info(\"searching by id\");\n-            results = searchById(patient, includeOptOutPatient);\n-        } else {\n-            LOG.info(\"no attempt on id search\");\n-        }\n-\n-        if (results != null) {\n-            LOG.info(\"result size=\" + results.size());\n-        }\n-        return results;\n-    }\n-\n-    /**\n-     * @return Patients object for MiniMpi\n-     */\n-    public synchronized Patients getPatients() {\n-        if (patients == null) {\n-            patients = new Patients();\n-        }\n-        return patients;\n-    }\n-\n-    private synchronized void setPatients(Patients value) {\n-        patients = value;\n-    }\n-\n-    private synchronized void loadData() {\n-        MpiDataSaver mpiDataSaver = new MpiDataSaver();\n-        this.setPatients(mpiDataSaver.loadMpi());\n-    }\n-\n-    private synchronized void loadData(String fileName) {\n-        customFileName = fileName;\n-        MpiDataSaver mpiDataSaver = new MpiDataSaver();\n-        this.setPatients(mpiDataSaver.loadMpi(fileName));\n-    }\n-\n-    private synchronized void saveData() {\n-        MpiDataSaver mpiDataSaver = new MpiDataSaver();\n-        if (NullChecker.isNullish(customFileName)) {\n-            mpiDataSaver.saveMpi(this.getPatients());\n-        } else {\n-            mpiDataSaver.saveMpi(this.getPatients(), customFileName);\n-        }\n-    }\n+      }\n+\n+      saveData();\n+\n+    } else {\n+      LOG.error(\"Delete failed.  Multiple instances of the patient were found.\");\n+    }\n+  }\n+\n+  @Override\n+  public synchronized Patients search(Patient searchParams) {\n+    return search(searchParams, true, false);\n+  }\n+\n+  @Override\n+  public synchronized Patients search(Patient searchParams, boolean searchByDemographics) {\n+    return search(searchParams, searchByDemographics, false);\n+  }\n+\n+  /**\n+   * Method will search the MPI to see if the patient exists.\n+   *\n+   * @param patient              the Patient to search for\n+   * @param searchByDemographics boolean value. True if an attempt to make a demographic search should be made.\n+   * @param includeOptOutPatient boolean value. True if OptOut patients should be included. False otherwise.\n+   * @return a Patients object with all the patients found to have matched.\n+   */\n+  public synchronized Patients\n+  search(Patient patient, boolean searchByDemographics, boolean includeOptOutPatient) {\n+    Patients results = new Patients();\n+\n+    if (searchByDemographics) {\n+      LOG.info(\"searching by demographic\");\n+      results = searchByDemographics(patient, includeOptOutPatient);\n+    } else {\n+      LOG.info(\"no attempt on demographic search\");\n+    }\n+\n+    if (results.isEmpty()) {\n+      LOG.info(\"searching by id\");\n+      results = searchById(patient, includeOptOutPatient);\n+    } else {\n+      LOG.info(\"no attempt on id search\");\n+    }\n+\n+    if (results != null) {\n+      LOG.info(\"result size=\" + results.size());\n+    }\n+    return results;\n+  }\n+\n+  /**\n+   * @return Patients object for MiniMpi\n+   */\n+  public synchronized Patients getPatients() {\n+    if (patients == null) {\n+      patients = new Patients();\n+    }\n+    return patients;\n+  }\n+\n+  private synchronized void setPatients(Patients value) {\n+    patients = value;\n+  }\n+\n+  private synchronized void loadData() {\n+    MpiDataSaver mpiDataSaver = new MpiDataSaver();\n+    this.setPatients(mpiDataSaver.loadMpi());\n+  }\n+\n+  private synchronized void loadData(String fileName) {\n+    customFileName = fileName;\n+    MpiDataSaver mpiDataSaver = new MpiDataSaver();\n+    this.setPatients(mpiDataSaver.loadMpi(fileName));\n+  }\n+\n+  private synchronized void saveData() {\n+    MpiDataSaver mpiDataSaver = new MpiDataSaver();\n+    if (NullChecker.isNullish(customFileName)) {\n+      mpiDataSaver.saveMpi(this.getPatients());\n+    } else {\n+      mpiDataSaver.saveMpi(this.getPatients(), customFileName);\n+    }\n+  }\n }\n",
            "diff_size": 255
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/638/MiniMpi.java\nindex 7999e4851c9..cfbed9c7544 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/638/MiniMpi.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n@@ -86,8 +87,7 @@ public class MiniMpi implements IMPI {\n \n         LOG.info(\"performing a demograpics search\");\n         for (Patient patient : this.getPatients()) {\n-            if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient)\n-                    && matcher.hasMatchByDemographics(patient, searchParams)) {\n+            if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient) && matcher.hasMatchByDemographics(patient, searchParams)) {\n                 results.add(patient);\n             }\n         }\n@@ -101,8 +101,7 @@ public class MiniMpi implements IMPI {\n \n         LOG.info(\"performing an id search\");\n         for (Patient patient : this.getPatients()) {\n-            if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient)\n-                    && matcher.hasMatchByIds(patient, searchParams)) {\n+            if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient) && matcher.hasMatchByIds(patient, searchParams)) {\n                 results.add(patient);\n             }\n         }\n@@ -116,15 +115,13 @@ public class MiniMpi implements IMPI {\n         }\n \n     }\n-\n-    @Override\n+@Override\n     public synchronized Patient addUpdate(Patient newPatient) {\n         Patient resultPatient;\n         validateNewPatient(newPatient);\n \n         Patients existingPatients = search(newPatient, true, true);\n-\n-        if (existingPatients.isEmpty()) {\n+if (existingPatients.isEmpty()) {\n             getPatients().add(newPatient);\n             resultPatient = newPatient;\n         } else if (existingPatients.size() == 1) {\n@@ -156,7 +153,9 @@ public class MiniMpi implements IMPI {\n         } else if (existingPatients.size() == 1) {\n             LOG.info(\"Found 1 entry in MPI for the patient\");\n \n-            for (int idIdx = 0; idIdx < existingPatients.get(0).getIdentifiers().size(); idIdx++) {\n+            for (int idIdx = 0;\n+idIdx < existingPatients.get(0).getIdentifiers().size();\n+idIdx++) {\n                 id = existingPatients.get(0).getIdentifiers().get(idIdx);\n                 if (homeCommunityId.contentEquals(id.getOrganizationId())) {\n                     existingPatients.get(0).getIdentifiers().remove(idIdx);\n@@ -188,11 +187,9 @@ public class MiniMpi implements IMPI {\n      * @param includeOptOutPatient boolean value. True if OptOut patients should be included. False otherwise.\n      * @return a Patients object with all the patients found to have matched.\n      */\n-    public synchronized Patients\n-            search(Patient patient, boolean searchByDemographics, boolean includeOptOutPatient) {\n+    public synchronized Patients search(Patient patient, boolean searchByDemographics, boolean includeOptOutPatient) {\n         Patients results = new Patients();\n-\n-        if (searchByDemographics) {\n+if (searchByDemographics) {\n             LOG.info(\"searching by demographic\");\n             results = searchByDemographics(patient, includeOptOutPatient);\n         } else {\n@@ -208,7 +205,8 @@ public class MiniMpi implements IMPI {\n \n         if (results != null) {\n             LOG.info(\"result size=\" + results.size());\n-        }\n+\n+    }\n         return results;\n     }\n \n@@ -218,7 +216,8 @@ public class MiniMpi implements IMPI {\n     public synchronized Patients getPatients() {\n         if (patients == null) {\n             patients = new Patients();\n-        }\n+\n+    }\n         return patients;\n     }\n \n@@ -245,4 +244,4 @@ public class MiniMpi implements IMPI {\n             mpiDataSaver.saveMpi(this.getPatients(), customFileName);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "92",
                    "column": "62",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "92",
                    "column": "62",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "93",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "62",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "105",
                    "column": "62",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "106",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "43",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "114",
                    "column": "43",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "115",
                    "column": "14",
                    "severity": "error",
                    "message": "'!' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "126",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "129",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "132",
                    "column": "8",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "column": "6",
                    "severity": "error",
                    "message": "'}' at column 6 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "158",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "160",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "8",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "165",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "165",
                    "column": "34",
                    "severity": "error",
                    "message": "'<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "165",
                    "column": "35",
                    "severity": "error",
                    "message": "'<' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "174",
                    "column": "6",
                    "severity": "error",
                    "message": "'}' at column 6 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "206",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "209",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "215",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "218",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "259",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "261",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/638/MiniMpi.java\nindex 7999e4851c9..fe761e55cb2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/638/MiniMpi.java\n@@ -34,12 +34,12 @@ import org.slf4j.LoggerFactory;\n  * Singleton class.\n  *\n  */\n+\n+\n public class MiniMpi implements IMPI {\n \n     private static final Logger LOG = LoggerFactory.getLogger(MiniMpi.class);\n-\n     private static MiniMpi instance = null;\n-\n     private Patients patients = null;\n     private String customFileName = \"\";\n \n@@ -50,12 +50,13 @@ public class MiniMpi implements IMPI {\n     /**\n      * @return an instance of this singleton class\n      */\n+\n+\n     public static MiniMpi getInstance() {\n         if (instance == null) {\n             instance = new MiniMpi();\n         }\n         instance.loadData();\n-\n         return instance;\n     }\n \n@@ -63,18 +64,21 @@ public class MiniMpi implements IMPI {\n      * @param fileName the mpi file to laod data from\n      * @return an instance of this singleton class\n      */\n+\n+\n     public static MiniMpi getInstance(String fileName) {\n         if (instance == null) {\n             instance = new MiniMpi();\n         }\n         instance.loadData(fileName);\n-\n         return instance;\n     }\n \n     /**\n      *\n      */\n+\n+\n     public synchronized void reset() {\n         patients = null;\n         saveData();\n@@ -83,62 +87,61 @@ public class MiniMpi implements IMPI {\n     private synchronized Patients searchByDemographics(Patient searchParams, boolean includeOptOutPatient) {\n         Patients results = new Patients();\n         PatientMatcher matcher = PatientMatcher.getInstance();\n-\n         LOG.info(\"performing a demograpics search\");\n         for (Patient patient : this.getPatients()) {\n-            if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient)\n-                    && matcher.hasMatchByDemographics(patient, searchParams)) {\n+            if ((matcher.isPatientOptedInCriteriaMet(patient)||\n+                     includeOptOutPatient ) && matcher.hasMatchByDemographics(patient, searchParams)) {\n                 results.add(patient);\n             }\n         }\n-\n         return results;\n     }\n \n     private synchronized Patients searchById(Patient searchParams, boolean includeOptOutPatient) {\n         Patients results = new Patients();\n         PatientMatcher matcher = PatientMatcher.getInstance();\n-\n         LOG.info(\"performing an id search\");\n         for (Patient patient : this.getPatients()) {\n-            if ((matcher.isPatientOptedInCriteriaMet(patient) || includeOptOutPatient)\n-                    && matcher.hasMatchByIds(patient, searchParams)) {\n+            if ((matcher.isPatientOptedInCriteriaMet(patient)||\n+                     includeOptOutPatient ) && matcher.hasMatchByIds(patient, searchParams)) {\n                 results.add(patient);\n             }\n         }\n-\n         return results;\n     }\n \n     private void validateNewPatient(Patient patient) {\n-        if ((patient.getNames().isEmpty()) || !(patient.getNames().get(0).isValid())) {\n+        if ((patient.getNames().isEmpty())||\n+            ! (patient.getNames().get(0).isValid())) {\n             throw new MpiException(\"New patient must hava a name\");\n         }\n-\n     }\n \n+\n     @Override\n     public synchronized Patient addUpdate(Patient newPatient) {\n         Patient resultPatient;\n         validateNewPatient(newPatient);\n-\n         Patients existingPatients = search(newPatient, true, true);\n-\n-        if (existingPatients.isEmpty()) {\n+        if(existingPatients.isEmpty()) {\n             getPatients().add(newPatient);\n             resultPatient = newPatient;\n-        } else if (existingPatients.size() == 1) {\n-            resultPatient = existingPatients.get(0);\n-            resultPatient.getIdentifiers().add(newPatient.getIdentifiers());\n-            resultPatient.setNames(newPatient.getNames());\n-            resultPatient.setGender(newPatient.getGender());\n-            resultPatient.setOptedIn(newPatient.isOptedIn());\n-        } else {\n-            throw new MpiException(\"Failed to update patient as there are more than one matching patients found.\");\n         }\n \n-        saveData();\n \n+else if(existingPatients.size() == 1) {\n+         resultPatient = existingPatients.get(0);\n+         resultPatient.getIdentifiers().add(newPatient.getIdentifiers());\n+         resultPatient.setNames(newPatient.getNames());\n+         resultPatient.setGender(newPatient.getGender());\n+         resultPatient.setOptedIn(newPatient.isOptedIn());\n+     }\n+\n+\n+        else {\n+         throw new MpiException(\"Failed to update patient as there are more than one matching patients found.\");\n+     }\n+        saveData();\n         return resultPatient;\n     }\n \n@@ -147,35 +150,42 @@ public class MiniMpi implements IMPI {\n      * @param patient the Patient to delete\n      * @param homeCommunityId the HCID\n      */\n+\n+\n     public synchronized void delete(Patient patient, String homeCommunityId) {\n         Patients existingPatients = search(patient, true, true);\n-\n         Identifier id;\n-        if (existingPatients.isEmpty()) {\n+        if(existingPatients.isEmpty()) {\n             LOG.error(\"Delete failed.  Patient not found in MPI.\");\n-        } else if (existingPatients.size() == 1) {\n-            LOG.info(\"Found 1 entry in MPI for the patient\");\n-\n-            for (int idIdx = 0; idIdx < existingPatients.get(0).getIdentifiers().size(); idIdx++) {\n-                id = existingPatients.get(0).getIdentifiers().get(idIdx);\n-                if (homeCommunityId.contentEquals(id.getOrganizationId())) {\n-                    existingPatients.get(0).getIdentifiers().remove(idIdx);\n-                    break;\n-                }\n-            }\n+        }\n \n-            saveData();\n \n-        } else {\n-            LOG.error(\"Delete failed.  Multiple instances of the patient were found.\");\n-        }\n+else if(existingPatients.size() == 1) {\n+         LOG.info(\"Found 1 entry in MPI for the patient\");\n+         for(int idIdx = 0; idIdx<existingPatients.get(0).getIdentifiers().size();\n+idIdx++) {\n+             id = existingPatients.get(0).getIdentifiers().get(idIdx);\n+             if (homeCommunityId.contentEquals(id.getOrganizationId())) {\n+                 existingPatients.get(0).getIdentifiers().remove(idIdx);\n+                 break;\n+             }\n+         }\n+         saveData();\n+     }\n+\n+\n+        else {\n+         LOG.error(\"Delete failed.  Multiple instances of the patient were found.\");\n+     }\n     }\n \n+\n     @Override\n     public synchronized Patients search(Patient searchParams) {\n         return search(searchParams, true, false);\n     }\n \n+\n     @Override\n     public synchronized Patients search(Patient searchParams, boolean searchByDemographics) {\n         return search(searchParams, searchByDemographics, false);\n@@ -188,24 +198,29 @@ public class MiniMpi implements IMPI {\n      * @param includeOptOutPatient boolean value. True if OptOut patients should be included. False otherwise.\n      * @return a Patients object with all the patients found to have matched.\n      */\n-    public synchronized Patients\n-            search(Patient patient, boolean searchByDemographics, boolean includeOptOutPatient) {\n-        Patients results = new Patients();\n \n-        if (searchByDemographics) {\n+\n+    public synchronized Patients search(Patient patient,\n+        boolean searchByDemographics, boolean includeOptOutPatient) {\n+        Patients results = new Patients();\n+        if(searchByDemographics) {\n             LOG.info(\"searching by demographic\");\n             results = searchByDemographics(patient, includeOptOutPatient);\n-        } else {\n-            LOG.info(\"no attempt on demographic search\");\n         }\n \n-        if (results.isEmpty()) {\n+\n+else {\n+            LOG.info(\"no attempt on demographic search\");\n+        }\n+        if(results.isEmpty()) {\n             LOG.info(\"searching by id\");\n             results = searchById(patient, includeOptOutPatient);\n-        } else {\n-            LOG.info(\"no attempt on id search\");\n         }\n \n+\n+else {\n+            LOG.info(\"no attempt on id search\");\n+        }\n         if (results != null) {\n             LOG.info(\"result size=\" + results.size());\n         }\n@@ -215,6 +230,8 @@ public class MiniMpi implements IMPI {\n     /**\n      * @return Patients object for MiniMpi\n      */\n+\n+\n     public synchronized Patients getPatients() {\n         if (patients == null) {\n             patients = new Patients();\n@@ -239,10 +256,14 @@ public class MiniMpi implements IMPI {\n \n     private synchronized void saveData() {\n         MpiDataSaver mpiDataSaver = new MpiDataSaver();\n-        if (NullChecker.isNullish(customFileName)) {\n+        if(NullChecker.isNullish(customFileName)) {\n             mpiDataSaver.saveMpi(this.getPatients());\n-        } else {\n+        }\n+\n+\n+else {\n             mpiDataSaver.saveMpi(this.getPatients(), customFileName);\n         }\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 113
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "27",
                    "column": "34",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/638/MiniMpi.java\nindex 7999e4851c9..3d3d728a71f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/638/MiniMpi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/638/MiniMpi.java\n@@ -24,9 +24,9 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.mpilib;\n+package gov.hhs.fha.nhinc.mpilib;import\n \n-import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n+gov.hhs.fha.nhinc.nhinclib.NullChecker;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
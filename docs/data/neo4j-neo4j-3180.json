{
    "project_name": "neo4j-neo4j",
    "error_id": "3180",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3180/SchemaDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3180/SchemaDescriptor.java\nindex 4cbea5e53d2..48019ae55ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3180/SchemaDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3180/SchemaDescriptor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.schema;\n \n import java.util.function.Predicate;\n@@ -32,7 +33,7 @@ import static org.neo4j.internal.schema.PropertySchemaType.PARTIAL_ANY_TOKEN;\n \n /**\n  * Internal representation of one schema unit, for example a label-property pair.\n- *\n+ * <p>\n  * Even when only supporting a small set of different schemas, the number of common methods is very small. This\n  * interface therefore supports a visitor type access pattern, results can be computed using the {#compute} method, and\n  * side-effect type logic performed using the processWith method. This means that when implementing this interface\n@@ -47,77 +48,78 @@ public interface SchemaDescriptor extends SchemaDescriptorSupplier\n         return NoSchemaDescriptor.NO_SCHEMA;\n     }\n \n-    static FulltextSchemaDescriptor fulltext( EntityType entityType, int[] entityTokenIds, int[] propertyKeyIds )\n+    static FulltextSchemaDescriptor fulltext(EntityType entityType, int[] entityTokenIds, int[] propertyKeyIds)\n     {\n-        return new SchemaDescriptorImplementation( entityType, PARTIAL_ANY_TOKEN, entityTokenIds, propertyKeyIds );\n+        return new SchemaDescriptorImplementation(entityType, PARTIAL_ANY_TOKEN, entityTokenIds, propertyKeyIds);\n     }\n \n-    static LabelSchemaDescriptor forLabel( int labelId, int... propertyIds )\n+    static LabelSchemaDescriptor forLabel(int labelId, int... propertyIds)\n     {\n-        validateLabelIds( labelId );\n-        validatePropertyIds( propertyIds );\n-        return new SchemaDescriptorImplementation( NODE, COMPLETE_ALL_TOKENS, new int[]{labelId}, propertyIds );\n+        validateLabelIds(labelId);\n+        validatePropertyIds(propertyIds);\n+        return new SchemaDescriptorImplementation(NODE, COMPLETE_ALL_TOKENS, new int[] {labelId}, propertyIds);\n     }\n \n-    static RelationTypeSchemaDescriptor forRelType( int relTypeId, int... propertyIds )\n+    static RelationTypeSchemaDescriptor forRelType(int relTypeId, int... propertyIds)\n     {\n-        validateRelationshipTypeIds( relTypeId );\n-        validatePropertyIds( propertyIds );\n-        return new SchemaDescriptorImplementation( RELATIONSHIP, COMPLETE_ALL_TOKENS, new int[]{relTypeId}, propertyIds );\n+        validateRelationshipTypeIds(relTypeId);\n+        validatePropertyIds(propertyIds);\n+        return new SchemaDescriptorImplementation(RELATIONSHIP, COMPLETE_ALL_TOKENS, new int[] {relTypeId}, propertyIds);\n     }\n \n     /**\n      * Create a predicate that checks whether a schema descriptor Supplier supplies the given schema descriptor.\n+     *\n      * @param descriptor The schema descriptor to check equality with.\n      * @return A predicate that returns {@code true} if it is given a schema descriptor supplier that supplies the\n      * same schema descriptor as the given schema descriptor.\n      */\n-    static <T extends SchemaDescriptorSupplier> Predicate<T> equalTo( SchemaDescriptor descriptor )\n+    static <T extends SchemaDescriptorSupplier> Predicate<T> equalTo(SchemaDescriptor descriptor)\n     {\n-        return supplier -> descriptor.equals( supplier.schema() );\n+        return supplier -> descriptor.equals(supplier.schema());\n     }\n \n-    private static void validatePropertyIds( int[] propertyIds )\n+    private static void validatePropertyIds(int[] propertyIds)\n     {\n-        for ( int propertyId : propertyIds )\n+        for (int propertyId : propertyIds)\n         {\n-            if ( TokenConstants.ANY_PROPERTY_KEY == propertyId )\n+            if (TokenConstants.ANY_PROPERTY_KEY == propertyId)\n             {\n                 throw new IllegalArgumentException(\n-                        \"Index schema descriptor can't be created for non existent property.\" );\n+                  \"Index schema descriptor can't be created for non existent property.\");\n             }\n         }\n     }\n \n-    private static void validateRelationshipTypeIds( int... relTypes )\n+    private static void validateRelationshipTypeIds(int... relTypes)\n     {\n-        for ( int relType : relTypes )\n+        for (int relType : relTypes)\n         {\n-            if ( TokenConstants.ANY_RELATIONSHIP_TYPE == relType )\n+            if (TokenConstants.ANY_RELATIONSHIP_TYPE == relType)\n             {\n-                throw new IllegalArgumentException( \"Index schema descriptor can't be created for non existent relationship type.\" );\n+                throw new IllegalArgumentException(\"Index schema descriptor can't be created for non existent relationship type.\");\n             }\n         }\n     }\n \n-    private static void validateLabelIds( int... labelIds )\n+    private static void validateLabelIds(int... labelIds)\n     {\n-        for ( int labelId : labelIds )\n+        for (int labelId : labelIds)\n         {\n-            if ( TokenConstants.ANY_LABEL == labelId )\n+            if (TokenConstants.ANY_LABEL == labelId)\n             {\n-                throw new IllegalArgumentException( \"Index schema descriptor can't be created for non existent label.\" );\n+                throw new IllegalArgumentException(\"Index schema descriptor can't be created for non existent label.\");\n             }\n         }\n     }\n \n-    private static long[] schemaTokenLockingIds( SchemaDescriptor schema )\n+    private static long[] schemaTokenLockingIds(SchemaDescriptor schema)\n     {\n         // TODO make getEntityTokenIds produce a long array directly, and avoid this extra copying.\n         int[] tokenIds = schema.getEntityTokenIds();\n         int length = tokenIds.length;\n         long[] lockingIds = new long[length];\n-        for ( int i = 0; i < length; i++ )\n+        for (int i = 0; i < length; i++)\n         {\n             lockingIds[i] = tokenIds[i];\n         }\n@@ -126,6 +128,7 @@ public interface SchemaDescriptor extends SchemaDescriptorSupplier\n \n     /**\n      * Test if this schema descriptor is a {@link LabelSchemaDescriptor}.\n+     *\n      * @return {@code true} if calling {@link #asLabelSchemaDescriptor()} will not throw an exception.\n      */\n     boolean isLabelSchemaDescriptor();\n@@ -138,6 +141,7 @@ public interface SchemaDescriptor extends SchemaDescriptorSupplier\n \n     /**\n      * Test if this schema descriptor is a {@link RelationTypeSchemaDescriptor}.\n+     *\n      * @return {@code true} if calling {@link #asRelationshipTypeSchemaDescriptor()} will not throw an exception.\n      */\n     boolean isRelationshipTypeSchemaDescriptor();\n@@ -150,6 +154,7 @@ public interface SchemaDescriptor extends SchemaDescriptorSupplier\n \n     /**\n      * Test if this schema descriptor is a {@link FulltextSchemaDescriptor}.\n+     *\n      * @return {@code true} if calling {@link #asFulltextSchemaDescriptor()} will not throw an exception.\n      */\n     boolean isFulltextSchemaDescriptor();\n@@ -162,23 +167,24 @@ public interface SchemaDescriptor extends SchemaDescriptorSupplier\n \n     /**\n      * Returns true if any of the given entity token ids are part of this schema unit.\n+     *\n      * @param entityTokenIds entity token ids to check against.\n      * @return true if the supplied ids are relevant to this schema unit.\n      */\n-    boolean isAffected( long[] entityTokenIds );\n+    boolean isAffected(long[] entityTokenIds);\n \n     /**\n      * Performs some side-effect type logic by processing this object using the given SchemaProcessor.\n-     *\n+     * <p>\n      * Note that implementers of this method just need to call `return processor.process( this );`.\n      *\n      * @param processor The SchemaProcessor that hold the logic for the computation\n      */\n-    void processWith( SchemaProcessor processor );\n+    void processWith(SchemaProcessor processor);\n \n     /**\n      * This method return the property ids that are relevant to this Schema Descriptor.\n-     *\n+     * <p>\n      * Putting this method here is a convenience that will break if/when we introduce more complicated schema\n      * descriptors like paths, but until that point it is very useful.\n      *\n@@ -195,16 +201,17 @@ public interface SchemaDescriptor extends SchemaDescriptorSupplier\n     default int getPropertyId()\n     {\n         int[] propertyIds = getPropertyIds();\n-        if ( propertyIds.length != 1 )\n+        if (propertyIds.length != 1)\n         {\n             throw new IllegalStateException(\n-                    \"Single property schema requires one property but had \" + propertyIds.length );\n+              \"Single property schema requires one property but had \" + propertyIds.length);\n         }\n         return propertyIds[0];\n     }\n \n     /**\n      * This method returns the entity token ids handled by this descriptor.\n+     *\n      * @return the entity token ids that this schema descriptor represents\n      */\n     int[] getEntityTokenIds();\n@@ -215,14 +222,14 @@ public interface SchemaDescriptor extends SchemaDescriptorSupplier\n      */\n     default int getLabelId()\n     {\n-        if ( entityType() != EntityType.NODE )\n+        if (entityType() != EntityType.NODE)\n         {\n-            throw new IllegalStateException( \"Cannot get label id from a schema on \" + entityType() + \" entities.\" );\n+            throw new IllegalStateException(\"Cannot get label id from a schema on \" + entityType() + \" entities.\");\n         }\n         int[] entityTokenIds = getEntityTokenIds();\n-        if ( entityTokenIds.length != 1 )\n+        if (entityTokenIds.length != 1)\n         {\n-            throw new IllegalStateException( \"Cannot get a single label id from a multi-token schema descriptor: \" + this );\n+            throw new IllegalStateException(\"Cannot get a single label id from a multi-token schema descriptor: \" + this);\n         }\n         return entityTokenIds[0];\n     }\n@@ -233,14 +240,14 @@ public interface SchemaDescriptor extends SchemaDescriptorSupplier\n      */\n     default int getRelTypeId()\n     {\n-        if ( entityType() != EntityType.RELATIONSHIP )\n+        if (entityType() != EntityType.RELATIONSHIP)\n         {\n-            throw new IllegalStateException( \"Cannot get relationship type id from a schema on \" + entityType() + \" entities.\" );\n+            throw new IllegalStateException(\"Cannot get relationship type id from a schema on \" + entityType() + \" entities.\");\n         }\n         int[] entityTokenIds = getEntityTokenIds();\n-        if ( entityTokenIds.length != 1 )\n+        if (entityTokenIds.length != 1)\n         {\n-            throw new IllegalStateException( \"Cannot get a single relationship type id from a multi-token schema descriptor: \" + this );\n+            throw new IllegalStateException(\"Cannot get a single relationship type id from a multi-token schema descriptor: \" + this);\n         }\n         return entityTokenIds[0];\n     }\n@@ -250,24 +257,27 @@ public interface SchemaDescriptor extends SchemaDescriptorSupplier\n      */\n     default long[] lockingKeys()\n     {\n-        return schemaTokenLockingIds( this );\n+        return schemaTokenLockingIds(this);\n     }\n \n     /**\n      * Type of underlying schema descriptor key.\n      * Key is part of schema unit that determines which resources with specified properties are applicable.\n+     *\n      * @return type of underlying key\n      */\n     ResourceType keyType();\n \n     /**\n      * Type of entities this schema represents.\n+     *\n      * @return entity type\n      */\n     EntityType entityType();\n \n     /**\n      * Returns the type of this schema. See {@link PropertySchemaType}.\n+     *\n      * @return PropertySchemaType of this schema unit.\n      */\n     PropertySchemaType propertySchemaType();\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
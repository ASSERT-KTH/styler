{
    "project_name": "graphfoundation-ongdb",
    "error_id": "472",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "112",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/472/StateRecoveryManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/472/StateRecoveryManager.java\nindex 72fe633aac4..e8f345b954d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/472/StateRecoveryManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/472/StateRecoveryManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state;\n \n import java.io.File;\n@@ -31,93 +32,89 @@ import org.neo4j.kernel.impl.transaction.log.ReadableClosableChannel;\n \n public class StateRecoveryManager<STATE>\n {\n-    public static class RecoveryStatus<STATE>\n-    {\n-        private final File activeFile;\n-        private final STATE recoveredState;\n-\n-        RecoveryStatus( File activeFile, STATE recoveredState )\n-        {\n-            this.activeFile = activeFile;\n-            this.recoveredState = recoveredState;\n-        }\n+  public static class RecoveryStatus<STATE>\n+  {\n+    private final File activeFile;\n+    private final STATE recoveredState;\n \n-        public STATE recoveredState()\n-        {\n-            return recoveredState;\n-        }\n-\n-        public File activeFile()\n-        {\n-            return activeFile;\n-        }\n+    RecoveryStatus(File activeFile, STATE recoveredState)\n+    {\n+      this.activeFile = activeFile;\n+      this.recoveredState = recoveredState;\n     }\n \n-    protected final FileSystemAbstraction fileSystem;\n-    private final StateMarshal<STATE> marshal;\n-\n-    public StateRecoveryManager( FileSystemAbstraction fileSystem, StateMarshal<STATE> marshal )\n+    public STATE recoveredState()\n     {\n-        this.fileSystem = fileSystem;\n-        this.marshal = marshal;\n+      return recoveredState;\n     }\n \n-    /**\n-     * @return RecoveryStatus containing the previously active and previously inactive files. The previously active\n-     * file contains the latest readable log index (though it may also contain some garbage) and the inactive file is\n-     * safe to become the new state holder.\n-     * @throws IOException if any IO goes wrong.\n-     */\n-    public RecoveryStatus<STATE> recover( File fileA, File fileB ) throws IOException\n+    public File activeFile()\n     {\n-        assert fileA != null && fileB != null;\n+      return activeFile;\n+    }\n+  }\n \n-        STATE a = readLastEntryFrom( fileA );\n-        STATE b = readLastEntryFrom( fileB );\n+  protected final FileSystemAbstraction fileSystem;\n+  private final StateMarshal<STATE> marshal;\n \n-        if ( a == null && b == null )\n-        {\n-            throw new IllegalStateException( \"no recoverable state\" );\n-        }\n+  public StateRecoveryManager(FileSystemAbstraction fileSystem, StateMarshal<STATE> marshal)\n+  {\n+    this.fileSystem = fileSystem;\n+    this.marshal = marshal;\n+  }\n \n-        if ( a == null )\n-        {\n-            return new RecoveryStatus<>( fileA, b );\n-        }\n-        else if ( b == null )\n-        {\n-            return new RecoveryStatus<>( fileB, a );\n-        }\n-        else if ( marshal.ordinal( a ) > marshal.ordinal( b ) )\n-        {\n-            return new RecoveryStatus<>( fileB, a );\n-        }\n-        else\n-        {\n-            return new RecoveryStatus<>( fileA, b );\n-        }\n+  /**\n+   * @return RecoveryStatus containing the previously active and previously inactive files. The previously active\n+   * file contains the latest readable log index (though it may also contain some garbage) and the inactive file is\n+   * safe to become the new state holder.\n+   * @throws IOException if any IO goes wrong.\n+   */\n+  public RecoveryStatus<STATE> recover(File fileA, File fileB) throws IOException\n+  {\n+    assert fileA != null && fileB != null;\n+\n+    STATE a = readLastEntryFrom(fileA);\n+    STATE b = readLastEntryFrom(fileB);\n+\n+    if (a == null && b == null)\n+    {\n+      throw new IllegalStateException(\"no recoverable state\");\n     }\n \n-    private STATE readLastEntryFrom( File file ) throws IOException\n+    if (a == null)\n     {\n-        try ( ReadableClosableChannel channel = new ReadAheadChannel<>( fileSystem.open( file, OpenMode.READ ) ) )\n+      return new RecoveryStatus<>(fileA, b);\n+    } else if (b == null)\n+    {\n+      return new RecoveryStatus<>(fileB, a);\n+    } else if (marshal.ordinal(a) > marshal.ordinal(b))\n+    {\n+      return new RecoveryStatus<>(fileB, a);\n+    } else\n+    {\n+      return new RecoveryStatus<>(fileA, b);\n+    }\n+  }\n+\n+  private STATE readLastEntryFrom(File file) throws IOException\n+  {\n+    try (ReadableClosableChannel channel = new ReadAheadChannel<>(fileSystem.open(file, OpenMode.READ)))\n+    {\n+      STATE result = null;\n+      STATE lastRead;\n+\n+      try\n+      {\n+        while ((lastRead = marshal.unmarshal(channel)) != null)\n         {\n-            STATE result = null;\n-            STATE lastRead;\n-\n-            try\n-            {\n-                while ( (lastRead = marshal.unmarshal( channel )) != null )\n-                {\n-                    result = lastRead;\n-                }\n-            }\n-            catch ( EndOfStreamException e )\n-            {\n-                // ignore; just use previous complete entry\n-            }\n-\n-            return result;\n+          result = lastRead;\n         }\n+      } catch (EndOfStreamException e)\n+      {\n+        // ignore; just use previous complete entry\n+      }\n+\n+      return result;\n     }\n+  }\n }\n",
            "diff_size": 106
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/472/StateRecoveryManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/472/StateRecoveryManager.java\nindex 72fe633aac4..bea41526d04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/472/StateRecoveryManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/472/StateRecoveryManager.java\n@@ -74,8 +74,7 @@ public class StateRecoveryManager<STATE>\n \n         STATE a = readLastEntryFrom( fileA );\n         STATE b = readLastEntryFrom( fileB );\n-\n-        if ( a == null && b == null )\n+if ( a == null && b == null )\n         {\n             throw new IllegalStateException( \"no recoverable state\" );\n         }\n@@ -120,4 +119,4 @@ public class StateRecoveryManager<STATE>\n             return result;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
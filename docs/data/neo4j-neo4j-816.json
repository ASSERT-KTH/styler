{
    "project_name": "neo4j-neo4j",
    "error_id": "816",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/816/TokenIndexEntryUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/816/TokenIndexEntryUpdate.java\nindex a3f316b67fc..db0acaa5854 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/816/TokenIndexEntryUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/816/TokenIndexEntryUpdate.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api;\n \n import java.util.Arrays;\n@@ -29,14 +30,14 @@ public class TokenIndexEntryUpdate<INDEX_KEY extends SchemaDescriptorSupplier> e\n     private final long[] before;\n     private final long[] values;\n \n-    TokenIndexEntryUpdate( long entityId, INDEX_KEY index_key, UpdateMode updateMode, long[] values )\n+    TokenIndexEntryUpdate(long entityId, INDEX_KEY index_key, UpdateMode updateMode, long[] values)\n     {\n-        this( entityId, index_key, updateMode, null, values );\n+        this(entityId, index_key, updateMode, null, values);\n     }\n \n-    TokenIndexEntryUpdate( long entityId, INDEX_KEY index_key, UpdateMode updateMode, long[] before, long[] values )\n+    TokenIndexEntryUpdate(long entityId, INDEX_KEY index_key, UpdateMode updateMode, long[] before, long[] values)\n     {\n-        super( entityId, index_key, updateMode );\n+        super(entityId, index_key, updateMode);\n         this.before = before;\n         this.values = values;\n     }\n@@ -48,9 +49,9 @@ public class TokenIndexEntryUpdate<INDEX_KEY extends SchemaDescriptorSupplier> e\n \n     public long[] beforeValues()\n     {\n-        if ( before == null )\n+        if (before == null)\n         {\n-            throw new UnsupportedOperationException( \"beforeValues is only valid for `UpdateMode.CHANGED\" );\n+            throw new UnsupportedOperationException(\"beforeValues is only valid for `UpdateMode.CHANGED\");\n         }\n         return before;\n     }\n@@ -58,35 +59,35 @@ public class TokenIndexEntryUpdate<INDEX_KEY extends SchemaDescriptorSupplier> e\n     @Override\n     public long roughSizeOfUpdate()\n     {\n-        return HeapEstimator.sizeOf( values ) + (updateMode() == UpdateMode.CHANGED ? HeapEstimator.sizeOf( before ) : 0);\n+        return HeapEstimator.sizeOf(values) + (updateMode() == UpdateMode.CHANGED ? HeapEstimator.sizeOf(before) : 0);\n     }\n \n     @Override\n-    protected boolean valueEquals( IndexEntryUpdate<?> o )\n+    protected boolean valueEquals(IndexEntryUpdate<?> o)\n     {\n-        if ( !(o instanceof TokenIndexEntryUpdate) )\n+        if (!(o instanceof TokenIndexEntryUpdate))\n         {\n             return false;\n         }\n         TokenIndexEntryUpdate<?> that = (TokenIndexEntryUpdate<?>) o;\n-        if ( !Arrays.equals( before, that.before ) )\n+        if (!Arrays.equals(before, that.before))\n         {\n             return false;\n         }\n-        return Arrays.equals( values, that.values );\n+        return Arrays.equals(values, that.values);\n     }\n \n     @Override\n     protected int valueHash()\n     {\n-        int result = Arrays.hashCode( before );\n-        result = 31 * result + Arrays.hashCode( values );\n+        int result = Arrays.hashCode(before);\n+        result = 31 * result + Arrays.hashCode(values);\n         return result;\n     }\n \n     @Override\n     protected String valueToString()\n     {\n-        return String.format( \"beforeValues=%s, values=%s\", Arrays.toString( before ), Arrays.toString( values ) );\n+        return String.format(\"beforeValues=%s, values=%s\", Arrays.toString(before), Arrays.toString(values));\n     }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
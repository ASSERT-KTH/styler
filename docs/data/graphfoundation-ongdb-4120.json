{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4120",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4120/DisassemblyVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4120/DisassemblyVisitor.java\nindex cc580c5c807..393c091c022 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4120/DisassemblyVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4120/DisassemblyVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.io.PrintWriter;\n@@ -27,25 +28,25 @@ import static org.neo4j.codegen.ByteCodeVisitor.printer;\n \n public abstract class DisassemblyVisitor implements ByteCodeVisitor, CodeGeneratorOption\n {\n-    @Override\n-    public final void applyTo( Object target )\n+  @Override\n+  public final void applyTo(Object target)\n+  {\n+    if (target instanceof ByteCodeVisitor.Configurable)\n     {\n-        if ( target instanceof ByteCodeVisitor.Configurable )\n-        {\n-            ((Configurable) target).addByteCodeVisitor( this );\n-        }\n+      ((Configurable) target).addByteCodeVisitor(this);\n     }\n+  }\n \n-    @Override\n-    public final void visitByteCode( String name, ByteBuffer bytes )\n+  @Override\n+  public final void visitByteCode(String name, ByteBuffer bytes)\n+  {\n+    StringWriter target = new StringWriter();\n+    try (PrintWriter writer = new PrintWriter(target))\n     {\n-        StringWriter target = new StringWriter();\n-        try ( PrintWriter writer = new PrintWriter( target ) )\n-        {\n-            printer( writer ).visitByteCode( name, bytes );\n-        }\n-        visitDisassembly( name, target.getBuffer() );\n+      printer(writer).visitByteCode(name, bytes);\n     }\n+    visitDisassembly(name, target.getBuffer());\n+  }\n \n-    protected abstract void visitDisassembly( String className, CharSequence disassembly );\n+  protected abstract void visitDisassembly(String className, CharSequence disassembly);\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4120/DisassemblyVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4120/DisassemblyVisitor.java\nindex cc580c5c807..07b62c36a4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4120/DisassemblyVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4120/DisassemblyVisitor.java\n@@ -44,8 +44,9 @@ public abstract class DisassemblyVisitor implements ByteCodeVisitor, CodeGenerat\n         {\n             printer( writer ).visitByteCode( name, bytes );\n         }\n-        visitDisassembly( name, target.getBuffer() );\n+\n+visitDisassembly( name, target.getBuffer() );\n     }\n \n     protected abstract void visitDisassembly( String className, CharSequence disassembly );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4120/DisassemblyVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4120/DisassemblyVisitor.java\nindex cc580c5c807..ee560f41d7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4120/DisassemblyVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4120/DisassemblyVisitor.java\n@@ -22,7 +22,6 @@ package org.neo4j.codegen;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.nio.ByteBuffer;\n-\n import static org.neo4j.codegen.ByteCodeVisitor.printer;\n \n public abstract class DisassemblyVisitor implements ByteCodeVisitor, CodeGeneratorOption\n@@ -40,12 +39,15 @@ public abstract class DisassemblyVisitor implements ByteCodeVisitor, CodeGenerat\n     public final void visitByteCode( String name, ByteBuffer bytes )\n     {\n         StringWriter target = new StringWriter();\n-        try ( PrintWriter writer = new PrintWriter( target ) )\n+        try\n+        ( PrintWriter writer = new PrintWriter( target ))\n         {\n             printer( writer ).visitByteCode( name, bytes );\n         }\n+\n         visitDisassembly( name, target.getBuffer() );\n     }\n \n-    protected abstract void visitDisassembly( String className, CharSequence disassembly );\n-}\n+    protected abstract void visitDisassembly( String className, CharSequence disassembly )\n+    ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
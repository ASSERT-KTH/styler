{
    "project_name": "neo4j-neo4j",
    "error_id": "134",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/134/CheckPointThresholdPolicy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/134/CheckPointThresholdPolicy.java\nindex 2c1433420cc..1e44c3a0a4d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/134/CheckPointThresholdPolicy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/134/CheckPointThresholdPolicy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.checkpoint;\n \n import java.util.NoSuchElementException;\n@@ -33,7 +34,7 @@ import org.neo4j.time.SystemNanoClock;\n /**\n  * The {@link CheckPointThresholdPolicy} specifies the overall <em>type</em> of threshold that should be used for\n  * deciding when to check point.\n- *\n+ * <p>\n  * The is determined by the {@link GraphDatabaseSettings#check_point_policy} setting, and\n  * based on this, the concrete policies are loaded and used to\n  * {@link CheckPointThreshold#createThreshold(Config, SystemNanoClock, LogPruning, LogProvider) create} the final and fully\n@@ -47,13 +48,13 @@ public interface CheckPointThresholdPolicy extends NamedService\n      *\n      * @throws NoSuchElementException if the policy was not found.\n      */\n-    static CheckPointThresholdPolicy loadPolicy( String policyName )\n+    static CheckPointThresholdPolicy loadPolicy(String policyName)\n     {\n-        return Services.loadOrFail( CheckPointThresholdPolicy.class, policyName );\n+        return Services.loadOrFail(CheckPointThresholdPolicy.class, policyName);\n     }\n \n     /**\n      * Create a {@link CheckPointThreshold} instance based on this policy and the given configurations.\n      */\n-    CheckPointThreshold createThreshold( Config config, SystemNanoClock clock, LogPruning logPruning, LogProvider logProvider );\n+    CheckPointThreshold createThreshold(Config config, SystemNanoClock clock, LogPruning logPruning, LogProvider logProvider);\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
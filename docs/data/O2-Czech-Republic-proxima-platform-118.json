{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "118",
    "information": {
        "errors": [
            {
                "line": "87",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 96).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now));\n    assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now + 1));\n    assertEquals(Pair.of(now + 30_000L, \"test1\"), cache.get(\"key\", \"attribute\", now + 31_000L));\n    assertNull(cache.get(\"key\", \"attribute\", now - 1));\n    assertEquals(2, cache.get(\"key\").get(\"attribute\").size());\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/118/TimeBoundedVersionedCacheTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/118/TimeBoundedVersionedCacheTest.java\nindex 69294390037..49cd0ba931c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/118/TimeBoundedVersionedCacheTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/118/TimeBoundedVersionedCacheTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.view;\n \n import static org.junit.Assert.*;\n@@ -84,7 +85,8 @@ public class TimeBoundedVersionedCacheTest {\n     assertTrue(cache.put(\"key\", \"attribute\", now, false, \"test2\"));\n     assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now));\n     assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now + 1));\n-    assertEquals(Pair.of(now + 30_000L, \"test1\"), cache.get(\"key\", \"attribute\", now + 31_000L));\n+    assertEquals(Pair.of(now + 30_000L, \"test1\"),\n+        cache.get(\"key\", \"attribute\", now + 31_000L));\n     assertNull(cache.get(\"key\", \"attribute\", now - 1));\n     assertEquals(2, cache.get(\"key\").get(\"attribute\").size());\n   }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'member def type' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "210",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/118/TimeBoundedVersionedCacheTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/118/TimeBoundedVersionedCacheTest.java\nindex 69294390037..0ef733b0fae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/118/TimeBoundedVersionedCacheTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/118/TimeBoundedVersionedCacheTest.java\n@@ -29,10 +29,9 @@ import org.junit.Test;\n public class TimeBoundedVersionedCacheTest {\n \n   Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n-  EntityDescriptor entity =\n-      repo.findEntity(\"gateway\")\n+  EntityDescriptor entity = repo.findEntity(\"gateway\")\n           .orElseThrow(() -> new IllegalArgumentException(\"Missing entity gateway\"));\n-  long now = System.currentTimeMillis();\n+    long now = System.currentTimeMillis();\n \n   @Test\n   public void testCachePutGet() {\n@@ -131,13 +130,12 @@ public class TimeBoundedVersionedCacheTest {\n         \"a.\",\n         now,\n         k -> null,\n-        (k, v) -> {\n+    (k, v) -> {\n           scanned.put(k, v);\n           return true;\n         });\n     assertEquals(3, scanned.size());\n-\n-    now += 1;\n+now += 1;\n     assertTrue(cache.put(\"key\", \"a.2\", now, false, null));\n     scanned.clear();\n     cache.scan(\n@@ -145,7 +143,7 @@ public class TimeBoundedVersionedCacheTest {\n         \"a.\",\n         now,\n         k -> null,\n-        (k, v) -> {\n+    (k, v) -> {\n           scanned.put(k, v);\n           return true;\n         });\n@@ -158,7 +156,7 @@ public class TimeBoundedVersionedCacheTest {\n         \"a.2\",\n         now,\n         k -> null,\n-        (k, v) -> {\n+    (k, v) -> {\n           scanned.put(k, v);\n           return true;\n         });\n@@ -183,13 +181,12 @@ public class TimeBoundedVersionedCacheTest {\n         \"a.\",\n         now,\n         k -> \"a.\",\n-        (k, v) -> {\n+    (k, v) -> {\n           scanned.put(k, v);\n           return true;\n         });\n     assertEquals(1, scanned.size());\n-\n-    now += 1;\n+now += 1;\n     assertTrue(cache.put(\"key\", \"a.2\", now, false, null));\n     scanned.clear();\n     cache.scan(\n@@ -197,7 +194,7 @@ public class TimeBoundedVersionedCacheTest {\n         \"a.\",\n         now,\n         k -> \"a.\",\n-        (k, v) -> {\n+    (k, v) -> {\n           scanned.put(k, v);\n           return true;\n         });\n@@ -210,7 +207,7 @@ public class TimeBoundedVersionedCacheTest {\n         \"a.2\",\n         now,\n         k -> \"a.\",\n-        (k, v) -> {\n+    (k, v) -> {\n           scanned.put(k, v);\n           return true;\n         });\n@@ -223,10 +220,10 @@ public class TimeBoundedVersionedCacheTest {\n         \"a.\",\n         now - 3,\n         k -> \"a.\",\n-        (k, v) -> {\n+    (k, v) -> {\n           scanned.put(k, v);\n           return true;\n         });\n     assertEquals(2, scanned.size());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 44, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 44, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 51, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 44, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 44, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 51, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 50, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 50, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 48, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/118/TimeBoundedVersionedCacheTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/118/TimeBoundedVersionedCacheTest.java\nindex 69294390037..cd48b1cf36b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/118/TimeBoundedVersionedCacheTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/118/TimeBoundedVersionedCacheTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.direct.view;\n \n import static org.junit.Assert.*;\n-\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.repository.EntityDescriptor;\n import cz.o2.proxima.repository.Repository;\n@@ -26,12 +25,12 @@ import java.util.Map;\n import org.junit.Test;\n \n /** Test suite for {@link TimeBoundedVersionedCache}. */\n+\n+\n public class TimeBoundedVersionedCacheTest {\n \n   Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n-  EntityDescriptor entity =\n-      repo.findEntity(\"gateway\")\n-          .orElseThrow(() -> new IllegalArgumentException(\"Missing entity gateway\"));\n+  EntityDescriptor entity = repo.findEntity(\"gateway\").orElseThrow(() -> new IllegalArgumentException(\"Missing entity gateway\"));\n   long now = System.currentTimeMillis();\n \n   @Test\n@@ -61,7 +60,8 @@ public class TimeBoundedVersionedCacheTest {\n     assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now));\n     assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now + 1));\n     assertEquals(Pair.of(now - 30_000L, \"test1\"), cache.get(\"key\", \"attribute\", now - 1));\n-    assertEquals(2, cache.get(\"key\").get(\"attribute\").size());\n+    assertEquals(2, cache.get(\"key\").get(\"attribute\")\n+                                    .size());\n   }\n \n   @Test\n@@ -86,7 +86,8 @@ public class TimeBoundedVersionedCacheTest {\n     assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now + 1));\n     assertEquals(Pair.of(now + 30_000L, \"test1\"), cache.get(\"key\", \"attribute\", now + 31_000L));\n     assertNull(cache.get(\"key\", \"attribute\", now - 1));\n-    assertEquals(2, cache.get(\"key\").get(\"attribute\").size());\n+    assertEquals(2, cache.get(\"key\").get(\"attribute\")\n+                                    .size());\n   }\n \n   @Test\n@@ -98,7 +99,8 @@ public class TimeBoundedVersionedCacheTest {\n     assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now));\n     assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now + 1));\n     assertNull(cache.get(\"key\", \"attribute\", now - 1));\n-    assertEquals(1, cache.get(\"key\").get(\"attribute\").size());\n+    assertEquals(1, cache.get(\"key\").get(\"attribute\")\n+                                    .size());\n   }\n \n   @Test\n@@ -107,7 +109,8 @@ public class TimeBoundedVersionedCacheTest {\n     assertTrue(cache.put(\"key\", \"attribute\", now, false, \"test1\"));\n     now -= 120_000L;\n     assertFalse(cache.put(\"key\", \"attribute\", now, false, \"test2\"));\n-    assertEquals(1, cache.get(\"key\").get(\"attribute\").size());\n+    assertEquals(1, cache.get(\"key\").get(\"attribute\")\n+                                    .size());\n   }\n \n   @Test\n@@ -126,42 +129,24 @@ public class TimeBoundedVersionedCacheTest {\n     assertTrue(cache.put(\"key\", \"a.2\", now, false, \"test2\"));\n     assertTrue(cache.put(\"key\", \"a.3\", now, false, \"test3\"));\n     Map<String, Pair<Long, Object>> scanned = new HashMap<>();\n-    cache.scan(\n-        \"key\",\n-        \"a.\",\n-        now,\n-        k -> null,\n-        (k, v) -> {\n-          scanned.put(k, v);\n-          return true;\n-        });\n+    cache.scan(\"key\", \"a.\", now, k -> null, (k, v) -> {\n+                                              scanned.put(k, v);\n+                                              return true;\n+                                            });\n     assertEquals(3, scanned.size());\n-\n     now += 1;\n     assertTrue(cache.put(\"key\", \"a.2\", now, false, null));\n     scanned.clear();\n-    cache.scan(\n-        \"key\",\n-        \"a.\",\n-        now,\n-        k -> null,\n-        (k, v) -> {\n-          scanned.put(k, v);\n-          return true;\n-        });\n+    cache.scan(\"key\", \"a.\", now, k -> null, (k, v) -> {\n+                                              scanned.put(k, v);\n+                                              return true;\n+                                            });\n     assertEquals(3, scanned.size());\n-\n     scanned.clear();\n-    cache.scan(\n-        \"key\",\n-        \"a.\",\n-        \"a.2\",\n-        now,\n-        k -> null,\n-        (k, v) -> {\n-          scanned.put(k, v);\n-          return true;\n-        });\n+    cache.scan(\"key\", \"a.\", \"a.2\", now, k -> null, (k, v) -> {\n+                                                     scanned.put(k, v);\n+                                                     return true;\n+                                                   });\n     assertEquals(1, scanned.size());\n     assertNotNull(scanned.get(\"a.3\"));\n   }\n@@ -178,55 +163,31 @@ public class TimeBoundedVersionedCacheTest {\n     now += 1;\n     assertTrue(cache.put(\"key\", \"a.3\", now, false, \"test3\"));\n     Map<String, Pair<Long, Object>> scanned = new HashMap<>();\n-    cache.scan(\n-        \"key\",\n-        \"a.\",\n-        now,\n-        k -> \"a.\",\n-        (k, v) -> {\n-          scanned.put(k, v);\n-          return true;\n-        });\n+    cache.scan(\"key\", \"a.\", now, k -> \"a.\", (k, v) -> {\n+                                              scanned.put(k, v);\n+                                              return true;\n+                                            });\n     assertEquals(1, scanned.size());\n-\n     now += 1;\n     assertTrue(cache.put(\"key\", \"a.2\", now, false, null));\n     scanned.clear();\n-    cache.scan(\n-        \"key\",\n-        \"a.\",\n-        now,\n-        k -> \"a.\",\n-        (k, v) -> {\n-          scanned.put(k, v);\n-          return true;\n-        });\n+    cache.scan(\"key\", \"a.\", now, k -> \"a.\", (k, v) -> {\n+                                              scanned.put(k, v);\n+                                              return true;\n+                                            });\n     assertEquals(2, scanned.size());\n-\n     scanned.clear();\n-    cache.scan(\n-        \"key\",\n-        \"a.\",\n-        \"a.2\",\n-        now,\n-        k -> \"a.\",\n-        (k, v) -> {\n-          scanned.put(k, v);\n-          return true;\n-        });\n+    cache.scan(\"key\", \"a.\", \"a.2\", now, k -> \"a.\", (k, v) -> {\n+                                                     scanned.put(k, v);\n+                                                     return true;\n+                                                   });\n     assertEquals(1, scanned.size());\n     assertNotNull(scanned.get(\"a.3\"));\n-\n     scanned.clear();\n-    cache.scan(\n-        \"key\",\n-        \"a.\",\n-        now - 3,\n-        k -> \"a.\",\n-        (k, v) -> {\n-          scanned.put(k, v);\n-          return true;\n-        });\n+    cache.scan(\"key\", \"a.\", now - 3, k -> \"a.\", (k, v) -> {\n+                                                  scanned.put(k, v);\n+                                                  return true;\n+                                                });\n     assertEquals(2, scanned.size());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 85
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/118/TimeBoundedVersionedCacheTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/118/TimeBoundedVersionedCacheTest.java\nindex 69294390037..e45a90d7fde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/118/TimeBoundedVersionedCacheTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/118/TimeBoundedVersionedCacheTest.java\n@@ -84,8 +84,9 @@ public class TimeBoundedVersionedCacheTest {\n     assertTrue(cache.put(\"key\", \"attribute\", now, false, \"test2\"));\n     assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now));\n     assertEquals(Pair.of(now, \"test2\"), cache.get(\"key\", \"attribute\", now + 1));\n-    assertEquals(Pair.of(now + 30_000L, \"test1\"), cache.get(\"key\", \"attribute\", now + 31_000L));\n-    assertNull(cache.get(\"key\", \"attribute\", now - 1));\n+assertEquals(Pair.of(now + 30_000L, \"test1\"),cache.get(\"key\",\"attribute\",\n+    now+ 31_000L));\n+     assertNull(cache.get(\"key\", \"attribute\", now - 1));\n     assertEquals(2, cache.get(\"key\").get(\"attribute\").size());\n   }\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "587",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/587/IndexImplementation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/587/IndexImplementation.java\nindex b0a23a3ff1a..949809497af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/587/IndexImplementation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/587/IndexImplementation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.spi.explicitindex;\n \n import java.io.File;\n@@ -36,50 +37,53 @@ import org.neo4j.kernel.lifecycle.Lifecycle;\n public interface IndexImplementation extends Lifecycle\n {\n \n-    /**\n-     * Get index implementation root directory based on a store directory\n-     * @param storeDir store directory\n-     * @return index implementation root directory\n-     */\n-    File getIndexImplementationDirectory( File storeDir );\n+  /**\n+   * Get index implementation root directory based on a store directory\n+   *\n+   * @param storeDir store directory\n+   * @return index implementation root directory\n+   */\n+  File getIndexImplementationDirectory(File storeDir);\n \n-    /**\n-     * Returns a {@link ExplicitIndexProviderTransaction} that keeps transaction state for all\n-     * indexes for a given provider in a transaction.\n-     *\n-     * @param commandFactory index command factory to use\n-     * @return a {@link ExplicitIndexProviderTransaction} which represents a type of index suitable for the\n-     * given configuration.\n-     */\n-    ExplicitIndexProviderTransaction newTransaction( IndexCommandFactory commandFactory );\n+  /**\n+   * Returns a {@link ExplicitIndexProviderTransaction} that keeps transaction state for all\n+   * indexes for a given provider in a transaction.\n+   *\n+   * @param commandFactory index command factory to use\n+   * @return a {@link ExplicitIndexProviderTransaction} which represents a type of index suitable for the\n+   * given configuration.\n+   */\n+  ExplicitIndexProviderTransaction newTransaction(IndexCommandFactory commandFactory);\n \n-    /**\n-     * @param recovery indicate recovery\n-     * @return an index applier that will get notifications about commands to apply.\n-     */\n-    TransactionApplier newApplier( boolean recovery );\n+  /**\n+   * @param recovery indicate recovery\n+   * @return an index applier that will get notifications about commands to apply.\n+   */\n+  TransactionApplier newApplier(boolean recovery);\n \n-    /**\n-     * Fills in default configuration parameters for indexes provided from this\n-     * index provider. This method will also validate the the configuration is valid to be used\n-     * as index configuration for this provider.\n-     * @param config the configuration map to complete with defaults.\n-     * @return a {@link Map} filled with decent defaults for an index from\n-     * this index provider.\n-     */\n-    Map<String, String> fillInDefaults( Map<String, String> config );\n+  /**\n+   * Fills in default configuration parameters for indexes provided from this\n+   * index provider. This method will also validate the the configuration is valid to be used\n+   * as index configuration for this provider.\n+   *\n+   * @param config the configuration map to complete with defaults.\n+   * @return a {@link Map} filled with decent defaults for an index from\n+   * this index provider.\n+   */\n+  Map<String, String> fillInDefaults(Map<String, String> config);\n \n-    boolean configMatches( Map<String, String> storedConfig, Map<String, String> config );\n+  boolean configMatches(Map<String, String> storedConfig, Map<String, String> config);\n \n-    void force();\n+  void force();\n \n-    /**\n-     * Lists store files that this index provider manages. After this call has been made and until\n-     * the returned {@link ResourceIterator} has been {@link ResourceIterator#close() closed} this\n-     * index provider must guarantee that the list of files stay intact. The files in the list can\n-     * change, but no files may be deleted or added during this period.\n-     * @return list of store files managed by this index provider\n-     * @throws IOException depends on the implementation\n-     */\n-    ResourceIterator<File> listStoreFiles() throws IOException;\n+  /**\n+   * Lists store files that this index provider manages. After this call has been made and until\n+   * the returned {@link ResourceIterator} has been {@link ResourceIterator#close() closed} this\n+   * index provider must guarantee that the list of files stay intact. The files in the list can\n+   * change, but no files may be deleted or added during this period.\n+   *\n+   * @return list of store files managed by this index provider\n+   * @throws IOException depends on the implementation\n+   */\n+  ResourceIterator<File> listStoreFiles() throws IOException;\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/587/IndexImplementation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/587/IndexImplementation.java\nindex b0a23a3ff1a..95187b22e38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/587/IndexImplementation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/587/IndexImplementation.java\n@@ -35,7 +35,6 @@ import org.neo4j.kernel.lifecycle.Lifecycle;\n  */\n public interface IndexImplementation extends Lifecycle\n {\n-\n     /**\n      * Get index implementation root directory based on a store directory\n      * @param storeDir store directory\n@@ -67,9 +66,9 @@ public interface IndexImplementation extends Lifecycle\n      * @return a {@link Map} filled with decent defaults for an index from\n      * this index provider.\n      */\n-    Map<String, String> fillInDefaults( Map<String, String> config );\n+    Map<String,String> fillInDefaults( Map<String,String> config );\n \n-    boolean configMatches( Map<String, String> storedConfig, Map<String, String> config );\n+    boolean configMatches( Map<String,String> storedConfig, Map<String,String> config );\n \n     void force();\n \n@@ -82,4 +81,4 @@ public interface IndexImplementation extends Lifecycle\n      * @throws IOException depends on the implementation\n      */\n     ResourceIterator<File> listStoreFiles() throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1766",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1766/SequenceArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1766/SequenceArray.java\nindex f598ddbb061..2f25032b69c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1766/SequenceArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1766/SequenceArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.util.concurrent;\n \n import java.util.Arrays;\n@@ -33,7 +34,7 @@ public class SequenceArray\n     private final int longsPerItem;\n     private int capacity;\n \n-    SequenceArray( int longsPerItem, int initialCapacity )\n+    SequenceArray(int longsPerItem, int initialCapacity)\n     {\n         this.longsPerItem = longsPerItem;\n         this.capacity = initialCapacity;\n@@ -46,42 +47,42 @@ public class SequenceArray\n         itemsAhead = 0;\n     }\n \n-    void offer( long baseNumber, long number, long[] meta )\n+    void offer(long baseNumber, long number, long[] meta)\n     {\n         int diff = (int) (number - baseNumber);\n-        ensureArrayCapacity( diff );\n+        ensureArrayCapacity(diff);\n         int index = cursor + diff - 1;\n \n         // If we offer a value a bit ahead of the last offered value then clear the values in between\n-        for ( int i = cursor + itemsAhead; i < index; i++ )\n+        for (int i = cursor + itemsAhead; i < index; i++)\n         {\n-            array[index( i )] = UNSET;\n+            array[index(i)] = UNSET;\n         }\n \n-        int absIndex = index( index );\n+        int absIndex = index(index);\n         array[absIndex] = number;\n-        System.arraycopy( meta, 0, array, absIndex + 1, longsPerItem - 1 );\n-        itemsAhead = max( itemsAhead, diff );\n+        System.arraycopy(meta, 0, array, absIndex + 1, longsPerItem - 1);\n+        itemsAhead = max(itemsAhead, diff);\n     }\n \n-    private int index( int logicalIndex )\n+    private int index(int logicalIndex)\n     {\n         return (logicalIndex % capacity) * longsPerItem;\n     }\n \n-    long pollHighestGapFree( long given, long[] meta )\n+    long pollHighestGapFree(long given, long[] meta)\n     {\n         // assume that \"given\" would be placed at cursor\n         long number = given;\n         int length = itemsAhead - 1;\n         int absIndex = 0;\n-        for ( int i = 0; i < length; i++ )\n+        for (int i = 0; i < length; i++)\n         {\n             // Advance the cursor first because this method is only assumed to be called when offering the number immediately after\n             // the current highest gap-free number\n             advanceCursor();\n-            int tentativeAbsIndex = index( cursor );\n-            if ( array[tentativeAbsIndex] == UNSET )\n+            int tentativeAbsIndex = index(cursor);\n+            if (array[tentativeAbsIndex] == UNSET)\n             {   // we found a gap, return the number before the gap\n                 break;\n             }\n@@ -89,12 +90,12 @@ public class SequenceArray\n             absIndex = tentativeAbsIndex;\n             number++;\n             assert array[absIndex] == number :\n-                    \"Expected index \" + cursor + \" to be \" + number + \", but was \" + array[absIndex] +\n-                            \". This is for i=\" + i;\n+              \"Expected index \" + cursor + \" to be \" + number + \", but was \" + array[absIndex] +\n+                \". This is for i=\" + i;\n         }\n \n         // copy the meta values into the supplied meta\n-        System.arraycopy( array, absIndex + 1, meta, 0, longsPerItem - 1 );\n+        System.arraycopy(array, absIndex + 1, meta, 0, longsPerItem - 1);\n         return number;\n     }\n \n@@ -102,24 +103,24 @@ public class SequenceArray\n     {\n         assert itemsAhead > 0;\n         itemsAhead--;\n-        cursor = advanceCursor( cursor );\n+        cursor = advanceCursor(cursor);\n     }\n \n-    private int advanceCursor( int cursor )\n+    private int advanceCursor(int cursor)\n     {\n         return (cursor + 1) % capacity;\n     }\n \n-    private void ensureArrayCapacity( int capacity )\n+    private void ensureArrayCapacity(int capacity)\n     {\n-        while ( capacity > this.capacity )\n+        while (capacity > this.capacity)\n         {\n             int newCapacity = this.capacity * 2;\n             long[] newArray = new long[newCapacity * longsPerItem];\n             // Copy contents to new array, newArray starting at 0\n-            for ( int i = 0; i < itemsAhead; i++ )\n+            for (int i = 0; i < itemsAhead; i++)\n             {\n-                System.arraycopy( array, index( cursor + i ), newArray, index( i ), longsPerItem );\n+                System.arraycopy(array, index(cursor + i), newArray, index(i), longsPerItem);\n             }\n             this.array = newArray;\n             this.capacity = newCapacity;\n@@ -131,37 +132,37 @@ public class SequenceArray\n     public String toString()\n     {\n         StringBuilder builder = new StringBuilder();\n-        for ( int i = 0; i < itemsAhead; i++ )\n+        for (int i = 0; i < itemsAhead; i++)\n         {\n-            long value = array[index( cursor + i )];\n-            if ( value != UNSET )\n+            long value = array[index(cursor + i)];\n+            if (value != UNSET)\n             {\n-                builder.append( builder.length() > 0 ? \",\" : \"\" ).append( value );\n+                builder.append(builder.length() > 0 ? \",\" : \"\").append(value);\n             }\n         }\n         return builder.toString();\n     }\n \n-    boolean seen( long baseNumber, long number, long[] meta )\n+    boolean seen(long baseNumber, long number, long[] meta)\n     {\n         int diff = (int) (number - baseNumber);\n         int index = cursor + diff - 1;\n \n-        if ( index >= cursor + itemsAhead )\n+        if (index >= cursor + itemsAhead)\n         {\n             return false;\n         }\n \n-        int absIndex = index( index );\n+        int absIndex = index(index);\n         long[] arrayRef = array;\n         long num = arrayRef[absIndex];\n-        if ( num != number )\n+        if (num != number)\n         {\n             return false;\n         }\n \n-        long[] metaCopy = Arrays.copyOfRange( arrayRef, absIndex + 1, absIndex + longsPerItem );\n-        return Arrays.equals( meta, metaCopy );\n+        long[] metaCopy = Arrays.copyOfRange(arrayRef, absIndex + 1, absIndex + longsPerItem);\n+        return Arrays.equals(meta, metaCopy);\n     }\n \n     long[][] snapshot()\n@@ -170,20 +171,20 @@ public class SequenceArray\n         int remaining = itemsAhead - 1;\n         int queueCursor = cursor + 1;\n         int resultCursor = 0;\n-        while ( remaining-- > 0 )\n+        while (remaining-- > 0)\n         {\n-            int absIndex = index( queueCursor );\n+            int absIndex = index(queueCursor);\n             long number = array[absIndex];\n-            if ( number != UNSET )\n+            if (number != UNSET)\n             {\n-                temp[resultCursor++] = Arrays.copyOfRange( array, absIndex, absIndex + longsPerItem );\n+                temp[resultCursor++] = Arrays.copyOfRange(array, absIndex, absIndex + longsPerItem);\n             }\n-            queueCursor = advanceCursor( queueCursor );\n+            queueCursor = advanceCursor(queueCursor);\n         }\n-        if ( resultCursor < temp.length )\n+        if (resultCursor < temp.length)\n         {\n             // shrink to actual size\n-            temp = Arrays.copyOf( temp, resultCursor );\n+            temp = Arrays.copyOf(temp, resultCursor);\n         }\n         return temp;\n     }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1766/SequenceArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1766/SequenceArray.java\nindex f598ddbb061..a188a70b624 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1766/SequenceArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1766/SequenceArray.java\n@@ -187,4 +187,4 @@ public class SequenceArray\n         }\n         return temp;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
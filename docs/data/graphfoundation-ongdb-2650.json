{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2650",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2650/ProfilerStatistics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2650/ProfilerStatistics.java\nindex 39b2e9f8e23..60ca45fa106 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2650/ProfilerStatistics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2650/ProfilerStatistics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.javacompat;\n \n import org.neo4j.helpers.MathUtil;\n@@ -26,37 +27,37 @@ import org.neo4j.helpers.MathUtil;\n  */\n public interface ProfilerStatistics\n {\n-    /**\n-     * @return number of rows processed by the associated execution step\n-     */\n-    long getRows();\n+  /**\n+   * @return number of rows processed by the associated execution step\n+   */\n+  long getRows();\n \n-    /**\n-     * @return number of database hits (potential disk accesses) caused by executing the associated execution step\n-     */\n-    long getDbHits();\n+  /**\n+   * @return number of database hits (potential disk accesses) caused by executing the associated execution step\n+   */\n+  long getDbHits();\n \n-    /**\n-     * @return number of page cache hits caused by executing the associated execution step\n-     */\n-    default long getPageCacheHits()\n-    {\n-        return 0;\n-    }\n+  /**\n+   * @return number of page cache hits caused by executing the associated execution step\n+   */\n+  default long getPageCacheHits()\n+  {\n+    return 0;\n+  }\n \n-    /**\n-     * @return number of page cache misses caused by executing the associated execution step\n-     */\n-    default long getPageCacheMisses()\n-    {\n-        return 0;\n-    }\n+  /**\n+   * @return number of page cache misses caused by executing the associated execution step\n+   */\n+  default long getPageCacheMisses()\n+  {\n+    return 0;\n+  }\n \n-    /**\n-     * @return the ratio of page cache hits to total number of lookups or {@link Double#NaN} if no data is available\n-     */\n-    default double getPageCacheHitRatio()\n-    {\n-        return MathUtil.portion( getPageCacheHits(), getPageCacheMisses() );\n-    }\n+  /**\n+   * @return the ratio of page cache hits to total number of lookups or {@link Double#NaN} if no data is available\n+   */\n+  default double getPageCacheHitRatio()\n+  {\n+    return MathUtil.portion(getPageCacheHits(), getPageCacheMisses());\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2650/ProfilerStatistics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2650/ProfilerStatistics.java\nindex 39b2e9f8e23..947bc5c755d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2650/ProfilerStatistics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2650/ProfilerStatistics.java\n@@ -59,4 +59,4 @@ public interface ProfilerStatistics\n     {\n         return MathUtil.portion( getPageCacheHits(), getPageCacheMisses() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
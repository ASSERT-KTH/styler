{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1066",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1066/InFlightMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1066/InFlightMap.java\nindex 851e2e99929..7e7275b2114 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1066/InFlightMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1066/InFlightMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import java.util.SortedMap;\n@@ -26,82 +27,83 @@ import static java.lang.String.format;\n \n public class InFlightMap<V>\n {\n-    private final SortedMap<Long,V> map = new ConcurrentSkipListMap<>();\n-    private volatile boolean enabled;\n+  private final SortedMap<Long, V> map = new ConcurrentSkipListMap<>();\n+  private volatile boolean enabled;\n \n-    public InFlightMap()\n-    {\n-        this ( false );\n-    }\n+  public InFlightMap()\n+  {\n+    this(false);\n+  }\n \n-    public InFlightMap( boolean enabled )\n-    {\n-        this.enabled = enabled;\n-    }\n+  public InFlightMap(boolean enabled)\n+  {\n+    this.enabled = enabled;\n+  }\n \n-    public void enable()\n-    {\n-        this.enabled = true;\n-    }\n+  public void enable()\n+  {\n+    this.enabled = true;\n+  }\n \n-    /**\n-     * Adds a new mapping.\n-     *\n-     * @param key The key of the mapping\n-     * @param value The value corresponding to the key provided.\n-     * @throws IllegalArgumentException if a mapping for the key already exists\n-     */\n-    public void put( Long key, V value )\n+  /**\n+   * Adds a new mapping.\n+   *\n+   * @param key   The key of the mapping\n+   * @param value The value corresponding to the key provided.\n+   * @throws IllegalArgumentException if a mapping for the key already exists\n+   */\n+  public void put(Long key, V value)\n+  {\n+    if (!enabled)\n     {\n-        if ( !enabled )\n-        {\n-            return;\n-        }\n-\n-        V previousValue = map.putIfAbsent( key, value );\n-\n-        if ( previousValue != null )\n-        {\n-            throw new IllegalArgumentException(\n-                    format( \"Attempted to register an already seen value to the log entry cache. \" +\n-                            \"Key: %s; New Value: %s; Previous Value: %s\", key, value, previousValue ) );\n-        }\n+      return;\n     }\n \n-    /**\n-     * Returns the mapped value for this key or null if the key has not been registered.\n-     * @param key The key to use for retrieving the value from the map\n-     * @return the value for this key, otherwise null.\n-     */\n-    public V get( Long key )\n-    {\n-        return map.get( key );\n-    }\n+    V previousValue = map.putIfAbsent(key, value);\n \n-    /**\n-     * Attempts to remove this object from the map.\n-     *\n-     * @param key The object to attempt unregistering.\n-     * @return true if the attempt to unregister was successful, otherwise false if this object was not found.\n-     */\n-    public boolean remove( Long key )\n+    if (previousValue != null)\n     {\n-        return map.remove( key ) != null;\n+      throw new IllegalArgumentException(\n+          format(\"Attempted to register an already seen value to the log entry cache. \" +\n+              \"Key: %s; New Value: %s; Previous Value: %s\", key, value, previousValue));\n     }\n+  }\n \n-    /**\n-     * Attempts to remove all objects at this key or higher from the map.\n-     *\n-     * @param key The object to attempt unregistering.\n-     */\n-    public void truncate( Long key )\n-    {\n-        map.tailMap( key ).keySet().forEach( map::remove );\n-    }\n+  /**\n+   * Returns the mapped value for this key or null if the key has not been registered.\n+   *\n+   * @param key The key to use for retrieving the value from the map\n+   * @return the value for this key, otherwise null.\n+   */\n+  public V get(Long key)\n+  {\n+    return map.get(key);\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"InFlightMap{map=%s}\", map );\n-    }\n+  /**\n+   * Attempts to remove this object from the map.\n+   *\n+   * @param key The object to attempt unregistering.\n+   * @return true if the attempt to unregister was successful, otherwise false if this object was not found.\n+   */\n+  public boolean remove(Long key)\n+  {\n+    return map.remove(key) != null;\n+  }\n+\n+  /**\n+   * Attempts to remove all objects at this key or higher from the map.\n+   *\n+   * @param key The object to attempt unregistering.\n+   */\n+  public void truncate(Long key)\n+  {\n+    map.tailMap(key).keySet().forEach(map::remove);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"InFlightMap{map=%s}\", map);\n+  }\n }\n",
            "diff_size": 94
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1066/InFlightMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1066/InFlightMap.java\nindex 851e2e99929..4a485d71348 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1066/InFlightMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1066/InFlightMap.java\n@@ -31,7 +31,7 @@ public class InFlightMap<V>\n \n     public InFlightMap()\n     {\n-        this ( false );\n+        this( false );\n     }\n \n     public InFlightMap( boolean enabled )\n@@ -59,13 +59,10 @@ public class InFlightMap<V>\n         }\n \n         V previousValue = map.putIfAbsent( key, value );\n-\n-        if ( previousValue != null )\n+if ( previousValue != null )\n         {\n-            throw new IllegalArgumentException(\n-                    format( \"Attempted to register an already seen value to the log entry cache. \" +\n-                            \"Key: %s; New Value: %s; Previous Value: %s\", key, value, previousValue ) );\n-        }\n+            throw new IllegalArgumentException( format( \"Attempted to register an already seen value to the log entry cache. \" + \"Key: %s; New Value: %s; Previous Value: %s\", key, value, previousValue ) );\n+    }\n     }\n \n     /**\n@@ -104,4 +101,4 @@ public class InFlightMap<V>\n     {\n         return String.format( \"InFlightMap{map=%s}\", map );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
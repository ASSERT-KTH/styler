{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "94",
    "information": {
        "errors": [
            {
                "line": "32",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "final class PermanentNodeSetVariant<N> extends VariantBase<N>\n{\n\tprivate final CloneableNodeIterator<N> iter;\n\tprivate final Model<N> model;\n\n\tPermanentNodeSetVariant(NodeIterator<N> iter, final Model<N> model) throws ExprException",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/94/PermanentNodeSetVariant.java\nindex 19a232ccae9..1b0c6ed7261 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/94/PermanentNodeSetVariant.java\n@@ -29,7 +29,7 @@ import org.genxdm.xpath.v10.NodeIterator;\n \r\n final class PermanentNodeSetVariant<N> extends VariantBase<N>\r\n {\r\n-\tprivate final CloneableNodeIterator<N> iter;\r\n+private final CloneableNodeIterator<N> iter;\r\n \tprivate final Model<N> model;\r\n \r\n \tPermanentNodeSetVariant(NodeIterator<N> iter, final Model<N> model) throws ExprException\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/94/PermanentNodeSetVariant.java\nindex 19a232ccae9..88d8b421df7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/94/PermanentNodeSetVariant.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.variants;\r\n \r\n import org.genxdm.Model;\r\n@@ -27,51 +28,42 @@ import org.genxdm.xpath.v10.Converter;\n import org.genxdm.xpath.v10.ExprException;\r\n import org.genxdm.xpath.v10.NodeIterator;\r\n \r\n-final class PermanentNodeSetVariant<N> extends VariantBase<N>\r\n-{\r\n-\tprivate final CloneableNodeIterator<N> iter;\r\n-\tprivate final Model<N> model;\r\n+final class PermanentNodeSetVariant<N> extends VariantBase<N> {\r\n+    private final CloneableNodeIterator<N> iter;\r\n+\r\n+    private final Model<N> model;\r\n \r\n-\tPermanentNodeSetVariant(NodeIterator<N> iter, final Model<N> model) throws ExprException\r\n-\t{\r\n-\t\tthis.model = model;\r\n-\t\tif (iter instanceof CloneableNodeIterator<?>)\r\n-\t\t{\r\n-\t\t\tthis.iter = (CloneableNodeIterator<N>)iter;\r\n-\t\t}\r\n-\t\telse\r\n-\t\t{\r\n-\t\t\tthis.iter = new CloneableNodeIteratorImpl<N>(iter, model);\r\n-\t\t}\r\n-\t\tthis.iter.bind();\r\n-\t}\r\n+    PermanentNodeSetVariant(NodeIterator<N> iter, final Model<N> model) throws ExprException {\r\n+        this.model = model;\r\n+        if (iter instanceof CloneableNodeIterator<?>) {\r\n+            this.iter = (CloneableNodeIterator<N>) iter;\r\n+        } else {\r\n+            this.iter = new CloneableNodeIteratorImpl<N>(iter, model);\r\n+        }\r\n+        this.iter.bind();\r\n+    }\r\n \r\n-\t@SuppressWarnings(\"unchecked\")\r\n-\t@Override\r\n-\tpublic NodeIterator<N> convertToNodeSet()\r\n-\t{\r\n-\t\treturn (NodeIterator<N>)iter.clone();\r\n-\t}\r\n+    @SuppressWarnings(\"unchecked\")\r\n+    @Override\r\n+    public NodeIterator<N> convertToNodeSet() {\r\n+        return (NodeIterator<N>) iter.clone();\r\n+    }\r\n \r\n-\tpublic String convertToString()\r\n-\t{\r\n-\t\treturn Converter.toString(convertToNodeSet(), model);\r\n-\t}\r\n+    public String convertToString() {\r\n+        return Converter.toString(convertToNodeSet(), model);\r\n+    }\r\n \r\n-\tpublic boolean convertToBoolean()\r\n-\t{\r\n-\t\treturn Converter.toBoolean(convertToNodeSet());\r\n-\t}\r\n+    public boolean convertToBoolean() {\r\n+        return Converter.toBoolean(convertToNodeSet());\r\n+    }\r\n \r\n-\t@Override\r\n-\tpublic double convertToNumber()\r\n-\t{\r\n-\t\treturn Converter.toNumber(convertToNodeSet(), model);\r\n-\t}\r\n+    @Override\r\n+    public double convertToNumber() {\r\n+        return Converter.toNumber(convertToNodeSet(), model);\r\n+    }\r\n \r\n-\t@Override\r\n-\tpublic boolean isNodeSet()\r\n-\t{\r\n-\t\treturn true;\r\n-\t}\r\n+    @Override\r\n+    public boolean isNodeSet() {\r\n+        return true;\r\n+    }\r\n }\r\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/94/PermanentNodeSetVariant.java\nindex 19a232ccae9..eca420187aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/94/PermanentNodeSetVariant.java\n@@ -28,50 +28,50 @@ import org.genxdm.xpath.v10.ExprException;\n import org.genxdm.xpath.v10.NodeIterator;\r\n \r\n final class PermanentNodeSetVariant<N> extends VariantBase<N>\r\n-{\r\n-\tprivate final CloneableNodeIterator<N> iter;\r\n+{\n+    private final CloneableNodeIterator<N> iter;\r\n \tprivate final Model<N> model;\r\n \r\n \tPermanentNodeSetVariant(NodeIterator<N> iter, final Model<N> model) throws ExprException\r\n-\t{\r\n-\t\tthis.model = model;\r\n+\t{\n+    this.model = model;\r\n \t\tif (iter instanceof CloneableNodeIterator<?>)\r\n-\t\t{\r\n-\t\t\tthis.iter = (CloneableNodeIterator<N>)iter;\r\n-\t\t}\r\n+\t\t{\n+    this.iter = (CloneableNodeIterator<N>)iter;\n+    }\r\n \t\telse\r\n-\t\t{\r\n-\t\t\tthis.iter = new CloneableNodeIteratorImpl<N>(iter, model);\r\n-\t\t}\r\n-\t\tthis.iter.bind();\r\n-\t}\r\n+\t\t{\n+    this.iter = new CloneableNodeIteratorImpl<N>(iter, model);\n+    }\r\n+\t\tthis.iter.bind();\n+    }\r\n \r\n \t@SuppressWarnings(\"unchecked\")\r\n \t@Override\r\n \tpublic NodeIterator<N> convertToNodeSet()\r\n-\t{\r\n-\t\treturn (NodeIterator<N>)iter.clone();\r\n-\t}\r\n+\t{\n+    return (NodeIterator<N>)iter.clone();\n+    }\r\n \r\n \tpublic String convertToString()\r\n-\t{\r\n-\t\treturn Converter.toString(convertToNodeSet(), model);\r\n-\t}\r\n+\t{\n+    return Converter.toString(convertToNodeSet(), model);\n+    }\r\n \r\n \tpublic boolean convertToBoolean()\r\n-\t{\r\n-\t\treturn Converter.toBoolean(convertToNodeSet());\r\n-\t}\r\n+\t{\n+    return Converter.toBoolean(convertToNodeSet());\n+    }\r\n \r\n \t@Override\r\n \tpublic double convertToNumber()\r\n-\t{\r\n-\t\treturn Converter.toNumber(convertToNodeSet(), model);\r\n-\t}\r\n+\t{\n+    return Converter.toNumber(convertToNodeSet(), model);\n+    }\r\n \r\n \t@Override\r\n \tpublic boolean isNodeSet()\r\n-\t{\r\n-\t\treturn true;\r\n-\t}\r\n-}\r\n+\t{\n+    return true;\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/94/PermanentNodeSetVariant.java\nindex 19a232ccae9..1d58da380bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/94/PermanentNodeSetVariant.java\n@@ -18,60 +18,61 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.variants;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.processor.xpath.v10.iterators.CloneableNodeIterator;\r\n-import org.genxdm.processor.xpath.v10.iterators.CloneableNodeIteratorImpl;\r\n-import org.genxdm.xpath.v10.Converter;\r\n-import org.genxdm.xpath.v10.ExprException;\r\n-import org.genxdm.xpath.v10.NodeIterator;\r\n-\r\n-final class PermanentNodeSetVariant<N> extends VariantBase<N>\r\n-{\r\n-\tprivate final CloneableNodeIterator<N> iter;\r\n-\tprivate final Model<N> model;\r\n-\r\n-\tPermanentNodeSetVariant(NodeIterator<N> iter, final Model<N> model) throws ExprException\r\n-\t{\r\n-\t\tthis.model = model;\r\n-\t\tif (iter instanceof CloneableNodeIterator<?>)\r\n-\t\t{\r\n-\t\t\tthis.iter = (CloneableNodeIterator<N>)iter;\r\n-\t\t}\r\n-\t\telse\r\n-\t\t{\r\n-\t\t\tthis.iter = new CloneableNodeIteratorImpl<N>(iter, model);\r\n-\t\t}\r\n-\t\tthis.iter.bind();\r\n-\t}\r\n-\r\n-\t@SuppressWarnings(\"unchecked\")\r\n-\t@Override\r\n-\tpublic NodeIterator<N> convertToNodeSet()\r\n-\t{\r\n-\t\treturn (NodeIterator<N>)iter.clone();\r\n-\t}\r\n-\r\n-\tpublic String convertToString()\r\n-\t{\r\n-\t\treturn Converter.toString(convertToNodeSet(), model);\r\n-\t}\r\n-\r\n-\tpublic boolean convertToBoolean()\r\n-\t{\r\n-\t\treturn Converter.toBoolean(convertToNodeSet());\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic double convertToNumber()\r\n-\t{\r\n-\t\treturn Converter.toNumber(convertToNodeSet(), model);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean isNodeSet()\r\n-\t{\r\n-\t\treturn true;\r\n-\t}\r\n-}\r\n+package org.genxdm.processor.xpath.v10.variants;\n+\n+import org.genxdm.Model;\n+import org.genxdm.processor.xpath.v10.iterators.CloneableNodeIterator;\n+import org.genxdm.processor.xpath.v10.iterators.CloneableNodeIteratorImpl;\n+import org.genxdm.xpath.v10.Converter;\n+import org.genxdm.xpath.v10.ExprException;\n+import org.genxdm.xpath.v10.NodeIterator;\n+\n+final class PermanentNodeSetVariant<N>\n+    extends VariantBase<N>\n+{\n+    private final CloneableNodeIterator<N> iter;\n+    private final Model<N> model;\n+\n+    PermanentNodeSetVariant(NodeIterator<N> iter, final Model<N> model) throws ExprException\n+    {\n+        this.model = model;\n+        if (iter instanceof CloneableNodeIterator<?>)\n+        {\n+            this.iter = (CloneableNodeIterator<N>)iter;\n+        }\n+        else\n+        {\n+            this.iter = new CloneableNodeIteratorImpl<N>(iter, model);\n+        }\n+        this.iter.bind();\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public NodeIterator<N> convertToNodeSet()\n+    {\n+        return (NodeIterator<N>)iter.clone();\n+    }\n+\n+    public String convertToString()\n+    {\n+        return Converter.toString(convertToNodeSet(), model);\n+    }\n+\n+    public boolean convertToBoolean()\n+    {\n+        return Converter.toBoolean(convertToNodeSet());\n+    }\n+\n+    @Override\n+    public double convertToNumber()\n+    {\n+        return Converter.toNumber(convertToNodeSet(), model);\n+    }\n+\n+    @Override\n+    public boolean isNodeSet()\n+    {\n+        return true;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/94/PermanentNodeSetVariant.java\nindex 19a232ccae9..1b0c6ed7261 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/94/PermanentNodeSetVariant.java\n@@ -29,7 +29,7 @@ import org.genxdm.xpath.v10.NodeIterator;\n \r\n final class PermanentNodeSetVariant<N> extends VariantBase<N>\r\n {\r\n-\tprivate final CloneableNodeIterator<N> iter;\r\n+private final CloneableNodeIterator<N> iter;\r\n \tprivate final Model<N> model;\r\n \r\n \tPermanentNodeSetVariant(NodeIterator<N> iter, final Model<N> model) throws ExprException\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/94/PermanentNodeSetVariant.java\nindex 19a232ccae9..b4c7af2009f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/94/PermanentNodeSetVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/94/PermanentNodeSetVariant.java\n@@ -29,7 +29,7 @@ import org.genxdm.xpath.v10.NodeIterator;\n \r\n final class PermanentNodeSetVariant<N> extends VariantBase<N>\r\n {\r\n-\tprivate final CloneableNodeIterator<N> iter;\r\n+    private final CloneableNodeIterator<N> iter;\r\n \tprivate final Model<N> model;\r\n \r\n \tPermanentNodeSetVariant(NodeIterator<N> iter, final Model<N> model) throws ExprException\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
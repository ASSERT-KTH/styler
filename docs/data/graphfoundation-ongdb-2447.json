{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2447",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2447/FilteringPolicyLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2447/FilteringPolicyLoader.java\nindex 470345d28e7..880c75cd9e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2447/FilteringPolicyLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2447/FilteringPolicyLoader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.routing.load_balancing.plugins.server_policies;\n \n import java.util.Map;\n@@ -35,35 +36,35 @@ import static org.neo4j.causalclustering.core.CausalClusteringSettings.load_bala\n  */\n class FilteringPolicyLoader\n {\n-    private FilteringPolicyLoader()\n-    {\n-    }\n-\n-    static Policies load( Config config, String pluginName, Log log ) throws InvalidFilterSpecification\n-    {\n-        Policies policies = new Policies( log );\n+  private FilteringPolicyLoader()\n+  {\n+  }\n \n-        String prefix = policyPrefix( pluginName );\n-        Map<String,String> rawConfig = config.getRaw();\n+  static Policies load(Config config, String pluginName, Log log) throws InvalidFilterSpecification\n+  {\n+    Policies policies = new Policies(log);\n \n-        Set<String> configKeys = rawConfig.keySet().stream()\n-                .filter( e -> e.startsWith( prefix ) )\n-                .collect( Collectors.toSet() );\n+    String prefix = policyPrefix(pluginName);\n+    Map<String, String> rawConfig = config.getRaw();\n \n-        for ( String configKey : configKeys )\n-        {\n-            String policyName = configKey.substring( prefix.length() );\n-            String filterSpec = rawConfig.get( configKey );\n+    Set<String> configKeys = rawConfig.keySet().stream()\n+        .filter(e -> e.startsWith(prefix))\n+        .collect(Collectors.toSet());\n \n-            Filter<ServerInfo> filter = FilterConfigParser.parse( filterSpec );\n-            policies.addPolicy( policyName, new FilteringPolicy( filter ) );\n-        }\n+    for (String configKey : configKeys)\n+    {\n+      String policyName = configKey.substring(prefix.length());\n+      String filterSpec = rawConfig.get(configKey);\n \n-        return policies;\n+      Filter<ServerInfo> filter = FilterConfigParser.parse(filterSpec);\n+      policies.addPolicy(policyName, new FilteringPolicy(filter));\n     }\n \n-    private static String policyPrefix( String pluginName )\n-    {\n-        return format( \"%s.%s.\", load_balancing_config.name(), pluginName );\n-    }\n+    return policies;\n+  }\n+\n+  private static String policyPrefix(String pluginName)\n+  {\n+    return format(\"%s.%s.\", load_balancing_config.name(), pluginName);\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2447/FilteringPolicyLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2447/FilteringPolicyLoader.java\nindex 470345d28e7..9b8e3e60c07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2447/FilteringPolicyLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2447/FilteringPolicyLoader.java\n@@ -42,15 +42,11 @@ class FilteringPolicyLoader\n     static Policies load( Config config, String pluginName, Log log ) throws InvalidFilterSpecification\n     {\n         Policies policies = new Policies( log );\n-\n-        String prefix = policyPrefix( pluginName );\n+String prefix = policyPrefix( pluginName );\n         Map<String,String> rawConfig = config.getRaw();\n \n-        Set<String> configKeys = rawConfig.keySet().stream()\n-                .filter( e -> e.startsWith( prefix ) )\n-                .collect( Collectors.toSet() );\n-\n-        for ( String configKey : configKeys )\n+        Set<String> configKeys = rawConfig.keySet().stream().filter( e -> e.startsWith( prefix ) ).collect( Collectors.toSet() );\n+for ( String configKey : configKeys )\n         {\n             String policyName = configKey.substring( prefix.length() );\n             String filterSpec = rawConfig.get( configKey );\n@@ -66,4 +62,4 @@ class FilteringPolicyLoader\n     {\n         return format( \"%s.%s.\", load_balancing_config.name(), pluginName );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "529",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.asyncexecutor.multitenant;\n\nimport org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnableFactory;\nimport org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/529/TenantAwareExecuteAsyncRunnableFactory.java\nindex adff5d1efa5..f8371f31d0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/529/TenantAwareExecuteAsyncRunnableFactory.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.asyncexecutor.multitenant;\n \n import org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnableFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/529/TenantAwareExecuteAsyncRunnableFactory.java\nindex adff5d1efa5..c8482b21608 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/529/TenantAwareExecuteAsyncRunnableFactory.java\n@@ -26,21 +26,19 @@ import org.activiti.engine.runtime.Job;\n /**\n  * Factory that produces a {@link Runnable} that executes a {@link JobEntity}.\n  * Can be used to create special implementations for specific tenants.\n- *\n-\n  */\n public class TenantAwareExecuteAsyncRunnableFactory implements ExecuteAsyncRunnableFactory {\n \n-  protected TenantInfoHolder tenantInfoHolder;\n-  protected String tenantId;\n+    protected TenantInfoHolder tenantInfoHolder;\n+    protected String tenantId;\n \n-  public TenantAwareExecuteAsyncRunnableFactory(TenantInfoHolder tenantInfoHolder, String tenantId) {\n-    this.tenantInfoHolder = tenantInfoHolder;\n-    this.tenantId = tenantId;\n-  }\n+    public TenantAwareExecuteAsyncRunnableFactory(TenantInfoHolder tenantInfoHolder, String tenantId) {\n+        this.tenantInfoHolder = tenantInfoHolder;\n+        this.tenantId = tenantId;\n+    }\n \n-  public Runnable createExecuteAsyncRunnable(Job job, ProcessEngineConfigurationImpl processEngineConfiguration) {\n-    return new TenantAwareExecuteAsyncRunnable(job, processEngineConfiguration, tenantInfoHolder, tenantId);\n-  }\n+    public Runnable createExecuteAsyncRunnable(Job job, ProcessEngineConfigurationImpl processEngineConfiguration) {\n+        return new TenantAwareExecuteAsyncRunnable(job, processEngineConfiguration, tenantInfoHolder, tenantId);\n+    }\n \n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/529/TenantAwareExecuteAsyncRunnableFactory.java\nindex adff5d1efa5..dfe9aa41e9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/529/TenantAwareExecuteAsyncRunnableFactory.java\n@@ -29,6 +29,8 @@ import org.activiti.engine.runtime.Job;\n  *\n \n  */\n+\n+\n public class TenantAwareExecuteAsyncRunnableFactory implements ExecuteAsyncRunnableFactory {\n \n   protected TenantInfoHolder tenantInfoHolder;\n@@ -40,7 +42,9 @@ public class TenantAwareExecuteAsyncRunnableFactory implements ExecuteAsyncRunna\n   }\n \n   public Runnable createExecuteAsyncRunnable(Job job, ProcessEngineConfigurationImpl processEngineConfiguration) {\n-    return new TenantAwareExecuteAsyncRunnable(job, processEngineConfiguration, tenantInfoHolder, tenantId);\n+    return new TenantAwareExecuteAsyncRunnable(job,\n+                                               processEngineConfiguration,\n+                                               tenantInfoHolder,\n+                                               tenantId);\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/529/TenantAwareExecuteAsyncRunnableFactory.java\nindex adff5d1efa5..f8371f31d0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/529/TenantAwareExecuteAsyncRunnableFactory.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.asyncexecutor.multitenant;\n \n import org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnableFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/529/TenantAwareExecuteAsyncRunnableFactory.java\nindex adff5d1efa5..f8371f31d0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/529/TenantAwareExecuteAsyncRunnableFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/529/TenantAwareExecuteAsyncRunnableFactory.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.asyncexecutor.multitenant;\n \n import org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnableFactory;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
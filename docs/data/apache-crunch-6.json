{
    "project_name": "apache-crunch",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "54",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public static final String FILE_TARGET_MAX_DISTCP_TASKS = \"crunch.file.target.max.distcp.tasks\";\n\n  public static final String FILE_TARGET_MAX_DISTCP_TASK_BANDWIDTH_MB = \"crunch.file.target.max.distcp.task.bandwidth.mb\";\n\n  // Not instantiated\n  private RuntimeParameters() {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/6/RuntimeParameters.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/intellij/6/RuntimeParameters.java\nindex bc15169088c..e298391603d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/6/RuntimeParameters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/intellij/6/RuntimeParameters.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.crunch.impl.mr.run;\n \n /**\n@@ -51,7 +52,8 @@ public final class RuntimeParameters {\n \n   public static final String FILE_TARGET_MAX_DISTCP_TASKS = \"crunch.file.target.max.distcp.tasks\";\n \n-  public static final String FILE_TARGET_MAX_DISTCP_TASK_BANDWIDTH_MB = \"crunch.file.target.max.distcp.task.bandwidth.mb\";\n+  public static final String FILE_TARGET_MAX_DISTCP_TASK_BANDWIDTH_MB =\n+      \"crunch.file.target.max.distcp.task.bandwidth.mb\";\n \n   // Not instantiated\n   private RuntimeParameters() {\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/6/RuntimeParameters.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/naturalize/6/RuntimeParameters.java\nindex bc15169088c..8ae53f0fea9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/6/RuntimeParameters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/naturalize/6/RuntimeParameters.java\n@@ -56,4 +56,4 @@ public final class RuntimeParameters {\n   // Not instantiated\n   private RuntimeParameters() {\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/6/RuntimeParameters.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/codebuff/6/RuntimeParameters.java\nindex bc15169088c..3f83a1b9734 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/6/RuntimeParameters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/codebuff/6/RuntimeParameters.java\n@@ -20,12 +20,15 @@ package org.apache.crunch.impl.mr.run;\n /**\n  * Parameters used during the runtime execution.\n  */\n-public final class RuntimeParameters {\n \n+\n+public final class RuntimeParameters {\n   public static final String DEBUG = \"crunch.debug\";\n \n+\n   public static final String TMP_DIR = \"crunch.tmp.dir\";\n \n+\n   public static final String LOG_JOB_PROGRESS = \"crunch.log.job.progress\";\n \n   /**\n@@ -33,27 +36,39 @@ public final class RuntimeParameters {\n    * to reduce overhead by default splits.  Unless overridden by the {@code Source} implementation it will default to\n    * {@code true}.\n    */\n+\n+\n   public static final String DISABLE_COMBINE_FILE = \"crunch.disable.combine.file\";\n \n+\n   public static final String COMBINE_FILE_BLOCK_SIZE = \"crunch.combine.file.block.size\";\n \n+\n   public static final String CREATE_DIR = \"mapreduce.jobcontrol.createdir.ifnotexist\";\n \n+\n   public static final String DISABLE_DEEP_COPY = \"crunch.disable.deep.copy\";\n \n+\n   public static final String MAX_RUNNING_JOBS = \"crunch.max.running.jobs\";\n \n+\n   public static final String FILE_TARGET_MAX_THREADS = \"crunch.file.target.max.threads\";\n \n+\n   public static final String MAX_POLL_INTERVAL = \"crunch.max.poll.interval\";\n \n+\n   public static final String FILE_TARGET_USE_DISTCP = \"crunch.file.target.use.distcp\";\n \n+\n   public static final String FILE_TARGET_MAX_DISTCP_TASKS = \"crunch.file.target.max.distcp.tasks\";\n \n+\n   public static final String FILE_TARGET_MAX_DISTCP_TASK_BANDWIDTH_MB = \"crunch.file.target.max.distcp.task.bandwidth.mb\";\n \n   // Not instantiated\n+\n   private RuntimeParameters() {\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
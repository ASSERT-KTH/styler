{
    "project_name": "neo4j-neo4j",
    "error_id": "2091",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "153",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2091/ReversedMultiFileTransactionCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2091/ReversedMultiFileTransactionCursor.java\nindex 40b749479e0..3bd6f1a7a57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2091/ReversedMultiFileTransactionCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2091/ReversedMultiFileTransactionCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.reverse;\n \n import java.io.IOException;\n@@ -37,7 +38,7 @@ import static org.neo4j.kernel.impl.transaction.log.reverse.EagerlyReversedTrans\n /**\n  * Similar to {@link PhysicalTransactionCursor} and actually uses it internally. This main difference is that transactions\n  * are returned in reverse order, starting from the end and back towards (and including) a specified {@link LogPosition}.\n- *\n+ * <p>\n  * Since the transaction log format lacks data which would allow for a memory efficient reverse reading implementation,\n  * this implementation tries to minimize peak memory consumption by efficiently reading a single log version at a time\n  * in reverse order before moving over to the previous version. Peak memory consumption compared to normal\n@@ -50,7 +51,7 @@ public class ReversedMultiFileTransactionCursor implements TransactionCursor\n {\n     private final LogPosition backToPosition;\n     private final LogFile logFile;\n-    private final ThrowingFunction<LogPosition,TransactionCursor,IOException> cursorFactory;\n+    private final ThrowingFunction<LogPosition, TransactionCursor, IOException> cursorFactory;\n \n     private long currentVersion;\n     private TransactionCursor currentLogTransactionCursor;\n@@ -59,45 +60,45 @@ public class ReversedMultiFileTransactionCursor implements TransactionCursor\n      * Utility method for creating a {@link ReversedMultiFileTransactionCursor} with a {@link LogFile} as the source of\n      * {@link TransactionCursor} for each log version.\n      *\n-     * @param logFile accessor of log files.\n-     * @param backToPosition {@link LogPosition} to read backwards to.\n-     * @param logEntryReader {@link LogEntryReader} to use.\n+     * @param logFile                 accessor of log files.\n+     * @param backToPosition          {@link LogPosition} to read backwards to.\n+     * @param logEntryReader          {@link LogEntryReader} to use.\n      * @param failOnCorruptedLogFiles fail reading from log files as soon as first error is encountered\n-     * @param monitor reverse transaction cursor monitor\n+     * @param monitor                 reverse transaction cursor monitor\n      * @return a {@link TransactionCursor} which returns transactions from the end of the log stream and backwards to\n      * and including transaction starting at {@link LogPosition}.\n      */\n-    public static TransactionCursor fromLogFile( LogFile logFile, LogPosition backToPosition,\n-            LogEntryReader logEntryReader, boolean failOnCorruptedLogFiles, ReversedTransactionCursorMonitor monitor )\n+    public static TransactionCursor fromLogFile(LogFile logFile, LogPosition backToPosition,\n+                                                LogEntryReader logEntryReader, boolean failOnCorruptedLogFiles, ReversedTransactionCursorMonitor monitor)\n     {\n         long highestVersion = logFile.getHighestLogVersion();\n-        ThrowingFunction<LogPosition,TransactionCursor,IOException> factory = position ->\n+        ThrowingFunction<LogPosition, TransactionCursor, IOException> factory = position ->\n         {\n-            ReadableLogChannel channel = logFile.getReader( position, NO_MORE_CHANNELS );\n-            if ( channel instanceof ReadAheadLogChannel )\n+            ReadableLogChannel channel = logFile.getReader(position, NO_MORE_CHANNELS);\n+            if (channel instanceof ReadAheadLogChannel)\n             {\n                 // This is a channel which can be positioned explicitly and is the typical case for such channels\n                 // Let's take advantage of this fact and use a bit smarter reverse implementation\n-                return new ReversedSingleFileTransactionCursor( (ReadAheadLogChannel) channel, logEntryReader,\n-                        failOnCorruptedLogFiles, monitor );\n+                return new ReversedSingleFileTransactionCursor((ReadAheadLogChannel) channel, logEntryReader,\n+                  failOnCorruptedLogFiles, monitor);\n             }\n \n             // Fall back to simply eagerly reading each single log file and reversing in memory\n-            return eagerlyReverse( new PhysicalTransactionCursor( channel, logEntryReader ) );\n+            return eagerlyReverse(new PhysicalTransactionCursor(channel, logEntryReader));\n         };\n-        return new ReversedMultiFileTransactionCursor( logFile, factory, highestVersion, backToPosition );\n+        return new ReversedMultiFileTransactionCursor(logFile, factory, highestVersion, backToPosition);\n     }\n \n     /**\n-     * @param logFile accessor of log files.\n-     * @param cursorFactory creates {@link TransactionCursor} from a given {@link LogPosition}. The returned cursor must\n-     * return transactions from the end of that {@link LogPosition#getLogVersion() log version} and backwards in reverse order\n-     * to, and including, the transaction at the {@link LogPosition} given to it.\n+     * @param logFile        accessor of log files.\n+     * @param cursorFactory  creates {@link TransactionCursor} from a given {@link LogPosition}. The returned cursor must\n+     *                       return transactions from the end of that {@link LogPosition#getLogVersion() log version} and backwards in reverse order\n+     *                       to, and including, the transaction at the {@link LogPosition} given to it.\n      * @param highestVersion highest log version right now.\n      * @param backToPosition the start position of the last transaction to return from this cursor.\n      */\n-    ReversedMultiFileTransactionCursor( LogFile logFile, ThrowingFunction<LogPosition,TransactionCursor,IOException> cursorFactory, long highestVersion,\n-            LogPosition backToPosition )\n+    ReversedMultiFileTransactionCursor(LogFile logFile, ThrowingFunction<LogPosition, TransactionCursor, IOException> cursorFactory, long highestVersion,\n+                                       LogPosition backToPosition)\n     {\n         this.logFile = logFile;\n         this.cursorFactory = cursorFactory;\n@@ -114,19 +115,19 @@ public class ReversedMultiFileTransactionCursor implements TransactionCursor\n     @Override\n     public boolean next() throws IOException\n     {\n-        while ( currentLogTransactionCursor == null || !currentLogTransactionCursor.next() )\n+        while (currentLogTransactionCursor == null || !currentLogTransactionCursor.next())\n         {\n             // We've run out of transactions in this log version, back up to a previous one\n             currentVersion--;\n-            if ( currentVersion < backToPosition.getLogVersion() )\n+            if (currentVersion < backToPosition.getLogVersion())\n             {\n                 return false;\n             }\n \n             closeCurrent();\n             LogPosition position = currentVersion > backToPosition.getLogVersion() ?\n-                                   logFile.extractHeader( currentVersion ).getStartPosition() : backToPosition;\n-            currentLogTransactionCursor = cursorFactory.apply( position );\n+              logFile.extractHeader(currentVersion).getStartPosition() : backToPosition;\n+            currentLogTransactionCursor = cursorFactory.apply(position);\n         }\n         return true;\n     }\n@@ -139,7 +140,7 @@ public class ReversedMultiFileTransactionCursor implements TransactionCursor\n \n     private void closeCurrent() throws IOException\n     {\n-        if ( currentLogTransactionCursor != null )\n+        if (currentLogTransactionCursor != null)\n         {\n             currentLogTransactionCursor.close();\n             currentLogTransactionCursor = null;\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "963",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "80",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "156",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "157",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "389",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "405",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "476",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "512",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "580",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "586",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/963/TreeNodeFixedSize.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/963/TreeNodeFixedSize.java\nindex 7ae7a7c88cb..3119c24b1f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/963/TreeNodeFixedSize.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/963/TreeNodeFixedSize.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.IOException;\n@@ -56,17 +57,17 @@ import static org.neo4j.index.internal.gbptree.TreeNode.Type.LEAF;\n  * [NODETYPE][TYPE][GENERATION][KEYCOUNT][RIGHTSIBLING][LEFTSIBLING][SUCCESSOR]|[[KEY]...##]|[[VALUE]...##]\n  *  0         1     2           6         10            34           58          82\n  * </pre>\n- *\n+ * <p>\n  * Calc offset for key i (starting from 0)\n  * HEADER_LENGTH + i * SIZE_KEY\n  * <p>\n  * Calc offset for value i\n  * HEADER_LENGTH + SIZE_KEY * MAX_KEY_COUNT_LEAF + i * SIZE_VALUE\n  *\n- * @param <KEY> type of key\n+ * @param <KEY>   type of key\n  * @param <VALUE> type of value\n  */\n-class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n+class TreeNodeFixedSize<KEY, VALUE> extends TreeNode<KEY, VALUE>\n {\n     static final byte FORMAT_IDENTIFIER = 2;\n     static final byte FORMAT_VERSION = 0;\n@@ -76,35 +77,35 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n     private final int keySize;\n     private final int valueSize;\n \n-    TreeNodeFixedSize( int pageSize, Layout<KEY,VALUE> layout )\n+    TreeNodeFixedSize(int pageSize, Layout<KEY, VALUE> layout)\n     {\n-        super( pageSize, layout );\n-        this.keySize = layout.keySize( null );\n-        this.valueSize = layout.valueSize( null );\n-        this.internalMaxKeyCount = Math.floorDiv( pageSize - (BASE_HEADER_LENGTH + SIZE_PAGE_REFERENCE),\n-                keySize + SIZE_PAGE_REFERENCE);\n-        this.leafMaxKeyCount = Math.floorDiv( pageSize - BASE_HEADER_LENGTH, keySize + valueSize );\n+        super(pageSize, layout);\n+        this.keySize = layout.keySize(null);\n+        this.valueSize = layout.valueSize(null);\n+        this.internalMaxKeyCount = Math.floorDiv(pageSize - (BASE_HEADER_LENGTH + SIZE_PAGE_REFERENCE),\n+          keySize + SIZE_PAGE_REFERENCE);\n+        this.leafMaxKeyCount = Math.floorDiv(pageSize - BASE_HEADER_LENGTH, keySize + valueSize);\n \n-        if ( internalMaxKeyCount < 2 )\n+        if (internalMaxKeyCount < 2)\n         {\n-            throw new MetadataMismatchException( format(\n-                    \"For layout %s a page size of %d would only fit %d internal keys, minimum is 2\",\n-                    layout, pageSize, internalMaxKeyCount ) );\n+            throw new MetadataMismatchException(format(\n+              \"For layout %s a page size of %d would only fit %d internal keys, minimum is 2\",\n+              layout, pageSize, internalMaxKeyCount));\n         }\n-        if ( leafMaxKeyCount < 2 )\n+        if (leafMaxKeyCount < 2)\n         {\n-            throw new MetadataMismatchException( format( \"A page size of %d would only fit %d leaf keys (keySize:%d, valueSize:%d), minimum is 2\",\n-                    pageSize, leafMaxKeyCount, keySize, valueSize ) );\n+            throw new MetadataMismatchException(format(\"A page size of %d would only fit %d leaf keys (keySize:%d, valueSize:%d), minimum is 2\",\n+              pageSize, leafMaxKeyCount, keySize, valueSize));\n         }\n     }\n \n     @Override\n-    void writeAdditionalHeader( PageCursor cursor )\n+    void writeAdditionalHeader(PageCursor cursor)\n     {   // no-op\n     }\n \n     @Override\n-    long offloadIdAt( PageCursor cursor, int pos, Type type )\n+    long offloadIdAt(PageCursor cursor, int pos, Type type)\n     {\n         return NO_OFFLOAD_ID;\n     }\n@@ -115,86 +116,86 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n     }\n \n     @Override\n-    KEY keyAt( PageCursor cursor, KEY into, int pos, Type type, PageCursorTracer cursorTracer )\n+    KEY keyAt(PageCursor cursor, KEY into, int pos, Type type, PageCursorTracer cursorTracer)\n     {\n-        cursor.setOffset( keyOffset( pos ) );\n-        layout.readKey( cursor, into, FIXED_SIZE_KEY );\n+        cursor.setOffset(keyOffset(pos));\n+        layout.readKey(cursor, into, FIXED_SIZE_KEY);\n         return into;\n     }\n \n     @Override\n-    void keyValueAt( PageCursor cursor, KEY intoKey, VALUE intoValue, int pos, PageCursorTracer cursorTracer )\n+    void keyValueAt(PageCursor cursor, KEY intoKey, VALUE intoValue, int pos, PageCursorTracer cursorTracer)\n     {\n-        keyAt( cursor, intoKey, pos, LEAF, cursorTracer );\n-        valueAt( cursor, intoValue, pos, cursorTracer );\n+        keyAt(cursor, intoKey, pos, LEAF, cursorTracer);\n+        valueAt(cursor, intoValue, pos, cursorTracer);\n     }\n \n     @Override\n-    void insertKeyAndRightChildAt( PageCursor cursor, KEY key, long child, int pos, int keyCount, long stableGeneration,\n-            long unstableGeneration, PageCursorTracer cursorTracer )\n+    void insertKeyAndRightChildAt(PageCursor cursor, KEY key, long child, int pos, int keyCount, long stableGeneration,\n+                                  long unstableGeneration, PageCursorTracer cursorTracer)\n     {\n-        insertKeyAt( cursor, key, pos, keyCount );\n-        insertChildAt( cursor, child, pos + 1, keyCount, stableGeneration, unstableGeneration );\n+        insertKeyAt(cursor, key, pos, keyCount);\n+        insertChildAt(cursor, child, pos + 1, keyCount, stableGeneration, unstableGeneration);\n     }\n \n     @Override\n-    void insertKeyValueAt( PageCursor cursor, KEY key, VALUE value, int pos, int keyCount, long stableGeneration, long unstableGeneration,\n-            PageCursorTracer cursorTracer )\n+    void insertKeyValueAt(PageCursor cursor, KEY key, VALUE value, int pos, int keyCount, long stableGeneration, long unstableGeneration,\n+                          PageCursorTracer cursorTracer)\n     {\n-        insertKeyAt( cursor, key, pos, keyCount );\n-        insertValueAt( cursor, value, pos, keyCount );\n+        insertKeyAt(cursor, key, pos, keyCount);\n+        insertValueAt(cursor, value, pos, keyCount);\n     }\n \n     @Override\n-    void removeKeyValueAt( PageCursor cursor, int pos, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer )\n+    void removeKeyValueAt(PageCursor cursor, int pos, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer)\n     {\n-        removeKeyAt( cursor, pos, keyCount );\n-        removeValueAt( cursor, pos, keyCount );\n+        removeKeyAt(cursor, pos, keyCount);\n+        removeValueAt(cursor, pos, keyCount);\n     }\n \n     @Override\n-    void removeKeyAndLeftChildAt( PageCursor cursor, int keyPos, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer )\n+    void removeKeyAndLeftChildAt(PageCursor cursor, int keyPos, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer)\n     {\n-        removeKeyAt( cursor, keyPos, keyCount );\n-        removeChildAt( cursor, keyPos, keyCount );\n+        removeKeyAt(cursor, keyPos, keyCount);\n+        removeChildAt(cursor, keyPos, keyCount);\n     }\n \n     @Override\n-    void removeKeyAndRightChildAt( PageCursor cursor, int keyPos, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer )\n+    void removeKeyAndRightChildAt(PageCursor cursor, int keyPos, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer)\n     {\n-        removeKeyAt( cursor, keyPos, keyCount );\n-        removeChildAt( cursor, keyPos + 1, keyCount );\n+        removeKeyAt(cursor, keyPos, keyCount);\n+        removeChildAt(cursor, keyPos + 1, keyCount);\n     }\n \n     @Override\n-    boolean setKeyAtInternal( PageCursor cursor, KEY key, int pos )\n+    boolean setKeyAtInternal(PageCursor cursor, KEY key, int pos)\n     {\n-        cursor.setOffset( keyOffset( pos ) );\n-        layout.writeKey( cursor, key );\n+        cursor.setOffset(keyOffset(pos));\n+        layout.writeKey(cursor, key);\n         return true;\n     }\n \n     @Override\n-    VALUE valueAt( PageCursor cursor, VALUE value, int pos, PageCursorTracer cursorTracer )\n+    VALUE valueAt(PageCursor cursor, VALUE value, int pos, PageCursorTracer cursorTracer)\n     {\n-        cursor.setOffset( valueOffset( pos ) );\n-        layout.readValue( cursor, value, FIXED_SIZE_VALUE );\n+        cursor.setOffset(valueOffset(pos));\n+        layout.readValue(cursor, value, FIXED_SIZE_VALUE);\n         return value;\n     }\n \n     @Override\n-    boolean setValueAt( PageCursor cursor, VALUE value, int pos )\n+    boolean setValueAt(PageCursor cursor, VALUE value, int pos)\n     {\n-        cursor.setOffset( valueOffset( pos ) );\n-        layout.writeValue( cursor, value );\n+        cursor.setOffset(valueOffset(pos));\n+        layout.writeValue(cursor, value);\n         return true;\n     }\n \n     @Override\n-    void setChildAt( PageCursor cursor, long child, int pos, long stableGeneration, long unstableGeneration )\n+    void setChildAt(PageCursor cursor, long child, int pos, long stableGeneration, long unstableGeneration)\n     {\n-        cursor.setOffset( childOffset( pos ) );\n-        writeChild( cursor, child, stableGeneration, unstableGeneration );\n+        cursor.setOffset(childOffset(pos));\n+        writeChild(cursor, child, stableGeneration, unstableGeneration);\n     }\n \n     @Override\n@@ -210,24 +211,24 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n     }\n \n     @Override\n-    void validateKeyValueSize( KEY key, VALUE value )\n+    void validateKeyValueSize(KEY key, VALUE value)\n     {   // no-op for fixed size\n     }\n \n     @Override\n-    boolean reasonableKeyCount( int keyCount )\n+    boolean reasonableKeyCount(int keyCount)\n     {\n-        return keyCount >= 0 && keyCount <= Math.max( internalMaxKeyCount(), leafMaxKeyCount() );\n+        return keyCount >= 0 && keyCount <= Math.max(internalMaxKeyCount(), leafMaxKeyCount());\n     }\n \n     @Override\n-    boolean reasonableChildCount( int childCount )\n+    boolean reasonableChildCount(int childCount)\n     {\n         return childCount >= 0 && childCount <= internalMaxKeyCount();\n     }\n \n     @Override\n-    int childOffset( int pos )\n+    int childOffset(int pos)\n     {\n         return BASE_HEADER_LENGTH + internalMaxKeyCount * keySize + pos * SIZE_PAGE_REFERENCE;\n     }\n@@ -237,11 +238,11 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n         return internalMaxKeyCount;\n     }\n \n-    private void insertKeyAt( PageCursor cursor, KEY key, int pos, int keyCount )\n+    private void insertKeyAt(PageCursor cursor, KEY key, int pos, int keyCount)\n     {\n-        insertKeySlotsAt( cursor, pos, 1, keyCount );\n-        cursor.setOffset( keyOffset( pos ) );\n-        layout.writeKey( cursor, key );\n+        insertKeySlotsAt(cursor, pos, 1, keyCount);\n+        cursor.setOffset(keyOffset(pos));\n+        layout.writeKey(cursor, key);\n     }\n \n     private int leafMaxKeyCount()\n@@ -249,63 +250,63 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n         return leafMaxKeyCount;\n     }\n \n-    private void removeKeyAt( PageCursor cursor, int pos, int keyCount )\n+    private void removeKeyAt(PageCursor cursor, int pos, int keyCount)\n     {\n-        removeSlotAt( cursor, pos, keyCount, keyOffset( 0 ), keySize );\n+        removeSlotAt(cursor, pos, keyCount, keyOffset(0), keySize);\n     }\n \n-    private void insertChildAt( PageCursor cursor, long child, int pos, int keyCount,\n-            long stableGeneration, long unstableGeneration )\n+    private void insertChildAt(PageCursor cursor, long child, int pos, int keyCount,\n+                               long stableGeneration, long unstableGeneration)\n     {\n-        insertChildSlot( cursor, pos, keyCount );\n-        setChildAt( cursor, child, pos, stableGeneration, unstableGeneration );\n+        insertChildSlot(cursor, pos, keyCount);\n+        setChildAt(cursor, child, pos, stableGeneration, unstableGeneration);\n     }\n \n-    private void removeChildAt( PageCursor cursor, int pos, int keyCount )\n+    private void removeChildAt(PageCursor cursor, int pos, int keyCount)\n     {\n-        removeSlotAt( cursor, pos, keyCount + 1, childOffset( 0 ), childSize() );\n+        removeSlotAt(cursor, pos, keyCount + 1, childOffset(0), childSize());\n     }\n \n-    private void insertKeyValueSlots( PageCursor cursor, int numberOfSlots, int keyCount )\n+    private void insertKeyValueSlots(PageCursor cursor, int numberOfSlots, int keyCount)\n     {\n-        insertKeySlotsAt( cursor, 0, numberOfSlots, keyCount );\n-        insertValueSlotsAt( cursor, 0, numberOfSlots, keyCount );\n+        insertKeySlotsAt(cursor, 0, numberOfSlots, keyCount);\n+        insertValueSlotsAt(cursor, 0, numberOfSlots, keyCount);\n     }\n \n     // Always insert together with key. Use insertKeyValueAt\n-    private void insertValueAt( PageCursor cursor, VALUE value, int pos, int keyCount )\n+    private void insertValueAt(PageCursor cursor, VALUE value, int pos, int keyCount)\n     {\n-        insertValueSlotsAt( cursor, pos, 1, keyCount );\n-        setValueAt( cursor, value, pos );\n+        insertValueSlotsAt(cursor, pos, 1, keyCount);\n+        setValueAt(cursor, value, pos);\n     }\n \n     // Always insert together with key. Use removeKeyValueAt\n-    private void removeValueAt( PageCursor cursor, int pos, int keyCount )\n+    private void removeValueAt(PageCursor cursor, int pos, int keyCount)\n     {\n-        removeSlotAt( cursor, pos, keyCount, valueOffset( 0 ), valueSize );\n+        removeSlotAt(cursor, pos, keyCount, valueOffset(0), valueSize);\n     }\n \n-    private void insertKeySlotsAt( PageCursor cursor, int pos, int numberOfSlots, int keyCount )\n+    private void insertKeySlotsAt(PageCursor cursor, int pos, int numberOfSlots, int keyCount)\n     {\n-        insertSlotsAt( cursor, pos, numberOfSlots, keyCount, keyOffset( 0 ), keySize );\n+        insertSlotsAt(cursor, pos, numberOfSlots, keyCount, keyOffset(0), keySize);\n     }\n \n-    private void insertValueSlotsAt( PageCursor cursor, int pos, int numberOfSlots, int keyCount )\n+    private void insertValueSlotsAt(PageCursor cursor, int pos, int numberOfSlots, int keyCount)\n     {\n-        insertSlotsAt( cursor, pos, numberOfSlots, keyCount, valueOffset( 0 ), valueSize );\n+        insertSlotsAt(cursor, pos, numberOfSlots, keyCount, valueOffset(0), valueSize);\n     }\n \n-    private void insertChildSlot( PageCursor cursor, int pos, int keyCount )\n+    private void insertChildSlot(PageCursor cursor, int pos, int keyCount)\n     {\n-        insertSlotsAt( cursor, pos, 1, keyCount + 1, childOffset( 0 ), childSize() );\n+        insertSlotsAt(cursor, pos, 1, keyCount + 1, childOffset(0), childSize());\n     }\n \n-    private int keyOffset( int pos )\n+    private int keyOffset(int pos)\n     {\n         return BASE_HEADER_LENGTH + pos * keySize;\n     }\n \n-    private int valueOffset( int pos )\n+    private int valueOffset(int pos)\n     {\n         return BASE_HEADER_LENGTH + leafMaxKeyCount * keySize + pos * valueSize;\n     }\n@@ -323,37 +324,37 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n     /* SPLIT, MERGE and REBALANCE*/\n \n     @Override\n-    Overflow internalOverflow( PageCursor cursor, int currentKeyCount, KEY newKey )\n+    Overflow internalOverflow(PageCursor cursor, int currentKeyCount, KEY newKey)\n     {\n         return currentKeyCount + 1 > internalMaxKeyCount() ? Overflow.YES : Overflow.NO;\n     }\n \n     @Override\n-    Overflow leafOverflow( PageCursor cursor, int currentKeyCount, KEY newKey, VALUE newValue )\n+    Overflow leafOverflow(PageCursor cursor, int currentKeyCount, KEY newKey, VALUE newValue)\n     {\n         return currentKeyCount + 1 > leafMaxKeyCount() ? Overflow.YES : Overflow.NO;\n     }\n \n     @Override\n-    void defragmentLeaf( PageCursor cursor )\n+    void defragmentLeaf(PageCursor cursor)\n     {   // no-op\n     }\n \n     @Override\n-    void defragmentInternal( PageCursor cursor )\n+    void defragmentInternal(PageCursor cursor)\n     {   // no-op\n     }\n \n     @Override\n-    boolean leafUnderflow( PageCursor cursor, int keyCount )\n+    boolean leafUnderflow(PageCursor cursor, int keyCount)\n     {\n         return keyCount < (leafMaxKeyCount() + 1) / 2;\n     }\n \n     @Override\n-    int canRebalanceLeaves( PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount )\n+    int canRebalanceLeaves(PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount)\n     {\n-        if ( leftKeyCount + rightKeyCount >= leafMaxKeyCount() )\n+        if (leftKeyCount + rightKeyCount >= leafMaxKeyCount())\n         {\n             int totalKeyCount = rightKeyCount + leftKeyCount;\n             int moveFromPosition = totalKeyCount / 2;\n@@ -363,38 +364,37 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n     }\n \n     @Override\n-    boolean canMergeLeaves( PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount )\n+    boolean canMergeLeaves(PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount)\n     {\n         return leftKeyCount + rightKeyCount <= leafMaxKeyCount();\n     }\n \n     @Override\n-    void doSplitLeaf( PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int insertPos, KEY newKey,\n-            VALUE newValue, KEY newSplitter, double ratioToKeepInLeftOnSplit, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer )\n+    void doSplitLeaf(PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int insertPos, KEY newKey,\n+                     VALUE newValue, KEY newSplitter, double ratioToKeepInLeftOnSplit, long stableGeneration, long unstableGeneration,\n+                     PageCursorTracer cursorTracer)\n     {\n         int keyCountAfterInsert = leftKeyCount + 1;\n-        int splitPos = splitPos( keyCountAfterInsert, ratioToKeepInLeftOnSplit );\n+        int splitPos = splitPos(keyCountAfterInsert, ratioToKeepInLeftOnSplit);\n \n-        if ( splitPos == insertPos )\n+        if (splitPos == insertPos)\n         {\n-            layout.copyKey( newKey, newSplitter );\n-        }\n-        else\n+            layout.copyKey(newKey, newSplitter);\n+        } else\n         {\n-            keyAt( leftCursor, newSplitter, insertPos < splitPos ? splitPos - 1 : splitPos, LEAF, cursorTracer );\n+            keyAt(leftCursor, newSplitter, insertPos < splitPos ? splitPos - 1 : splitPos, LEAF, cursorTracer);\n         }\n         int rightKeyCount = keyCountAfterInsert - splitPos;\n \n-        if ( insertPos < splitPos )\n+        if (insertPos < splitPos)\n         {\n             //                v---------v       copy\n             // before _,_,_,_,_,_,_,_,_,_\n             // insert _,_,_,X,_,_,_,_,_,_,_\n             // split            ^\n-            copyKeysAndValues( leftCursor, splitPos - 1, rightCursor, 0, rightKeyCount );\n-            insertKeyValueAt( leftCursor, newKey, newValue, insertPos, splitPos - 1, stableGeneration, unstableGeneration, cursorTracer );\n-        }\n-        else\n+            copyKeysAndValues(leftCursor, splitPos - 1, rightCursor, 0, rightKeyCount);\n+            insertKeyValueAt(leftCursor, newKey, newValue, insertPos, splitPos - 1, stableGeneration, unstableGeneration, cursorTracer);\n+        } else\n         {\n             //                  v---v           first copy\n             //                        v-v       second copy\n@@ -402,79 +402,78 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n             // insert _,_,_,_,_,_,_,_,X,_,_\n             // split            ^\n             int countBeforePos = insertPos - splitPos;\n-            if ( countBeforePos > 0 )\n+            if (countBeforePos > 0)\n             {\n                 // first copy\n-                copyKeysAndValues( leftCursor, splitPos, rightCursor, 0, countBeforePos );\n+                copyKeysAndValues(leftCursor, splitPos, rightCursor, 0, countBeforePos);\n             }\n-            insertKeyValueAt( rightCursor, newKey, newValue, countBeforePos, countBeforePos, stableGeneration, unstableGeneration, cursorTracer );\n+            insertKeyValueAt(rightCursor, newKey, newValue, countBeforePos, countBeforePos, stableGeneration, unstableGeneration, cursorTracer);\n             int countAfterPos = leftKeyCount - insertPos;\n-            if ( countAfterPos > 0 )\n+            if (countAfterPos > 0)\n             {\n                 // second copy\n-                copyKeysAndValues( leftCursor, insertPos, rightCursor, countBeforePos + 1, countAfterPos );\n+                copyKeysAndValues(leftCursor, insertPos, rightCursor, countBeforePos + 1, countAfterPos);\n             }\n         }\n-        TreeNode.setKeyCount( leftCursor, splitPos );\n-        TreeNode.setKeyCount( rightCursor, rightKeyCount );\n+        TreeNode.setKeyCount(leftCursor, splitPos);\n+        TreeNode.setKeyCount(rightCursor, rightKeyCount);\n     }\n \n     /**\n      * Given a range with keyCount number of fixed size keys,\n      * then splitPos point to the first key that should be moved to right node.\n      * Everything before splitPos will be kept in left node.\n-     *\n+     * <p>\n      * Middle split\n-     *       0,1,2,3,4\n+     * 0,1,2,3,4\n      * split     ^\n      * left  0,1\n      * right 2,3,4\n-     *\n+     * <p>\n      * Min split\n-     *       0,1,2,3,4\n+     * 0,1,2,3,4\n      * split   ^\n      * left  0\n      * right 1,2,3,4\n-     *\n+     * <p>\n      * Max split\n-     *       0,1,2,3,4\n+     * 0,1,2,3,4\n      * split         ^\n      * left  0,1,2,3\n      * right 4\n-     *\n+     * <p>\n      * Note that splitPos can not point past last position (keyCount - 1) or before pos 1.\n      * This is because we need to split the range somewhere.\n      *\n-     * @param keyCount number of keys in range.\n+     * @param keyCount                 number of keys in range.\n      * @param ratioToKeepInLeftOnSplit How large ratio of key range to try and keep in left node.\n      * @return position of first key to move to right node.\n      */\n-    private static int splitPos( int keyCount, double ratioToKeepInLeftOnSplit )\n+    private static int splitPos(int keyCount, double ratioToKeepInLeftOnSplit)\n     {\n         // Key\n         int minSplitPos = 1;\n         int maxSplitPos = keyCount - 1;\n-        return Math.max( minSplitPos, Math.min( maxSplitPos, (int) (ratioToKeepInLeftOnSplit * keyCount) ) );\n+        return Math.max(minSplitPos, Math.min(maxSplitPos, (int) (ratioToKeepInLeftOnSplit * keyCount)));\n     }\n \n     @Override\n-    void doSplitInternal( PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int insertPos, KEY newKey, long newRightChild, long stableGeneration,\n-            long unstableGeneration, KEY newSplitter, double ratioToKeepInLeftOnSplit, PageCursorTracer cursorTracer )\n+    void doSplitInternal(PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int insertPos, KEY newKey, long newRightChild, long stableGeneration,\n+                         long unstableGeneration, KEY newSplitter, double ratioToKeepInLeftOnSplit, PageCursorTracer cursorTracer)\n     {\n         int keyCountAfterInsert = leftKeyCount + 1;\n-        int splitPos = splitPos( keyCountAfterInsert, ratioToKeepInLeftOnSplit );\n+        int splitPos = splitPos(keyCountAfterInsert, ratioToKeepInLeftOnSplit);\n \n-        if ( splitPos == insertPos )\n+        if (splitPos == insertPos)\n         {\n-            layout.copyKey( newKey, newSplitter );\n-        }\n-        else\n+            layout.copyKey(newKey, newSplitter);\n+        } else\n         {\n-            keyAt( leftCursor, newSplitter, insertPos < splitPos ? splitPos - 1 : splitPos, INTERNAL, cursorTracer );\n+            keyAt(leftCursor, newSplitter, insertPos < splitPos ? splitPos - 1 : splitPos, INTERNAL, cursorTracer);\n         }\n         int rightKeyCount = keyCountAfterInsert - splitPos - 1; // -1 because don't keep prim key in internal\n \n-        if ( insertPos < splitPos )\n+        if (insertPos < splitPos)\n         {\n             //                         v-------v       copy\n             // before key    _,_,_,_,_,_,_,_,_,_\n@@ -483,12 +482,11 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n             // insert child -,-,-,x,-,-,-,-,-,-,-,-\n             // split key               ^\n \n-            leftCursor.copyTo( keyOffset( splitPos ), rightCursor, keyOffset( 0 ), rightKeyCount * keySize() );\n-            leftCursor.copyTo( childOffset( splitPos ), rightCursor, childOffset( 0 ), (rightKeyCount + 1) * childSize() );\n-            insertKeyAt( leftCursor, newKey, insertPos, splitPos - 1 );\n-            insertChildAt( leftCursor, newRightChild, insertPos + 1, splitPos - 1, stableGeneration, unstableGeneration );\n-        }\n-        else\n+            leftCursor.copyTo(keyOffset(splitPos), rightCursor, keyOffset(0), rightKeyCount * keySize());\n+            leftCursor.copyTo(childOffset(splitPos), rightCursor, childOffset(0), (rightKeyCount + 1) * childSize());\n+            insertKeyAt(leftCursor, newKey, insertPos, splitPos - 1);\n+            insertChildAt(leftCursor, newRightChild, insertPos + 1, splitPos - 1, stableGeneration, unstableGeneration);\n+        } else\n         {\n             // pos > splitPos\n             //                         v-v          first copy\n@@ -511,95 +509,94 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n             // Keys\n             int countBeforePos = insertPos - (splitPos + 1);\n             // ... first copy\n-            if ( countBeforePos > 0 )\n+            if (countBeforePos > 0)\n             {\n-                leftCursor.copyTo( keyOffset( splitPos + 1 ), rightCursor, keyOffset( 0 ), countBeforePos * keySize() );\n+                leftCursor.copyTo(keyOffset(splitPos + 1), rightCursor, keyOffset(0), countBeforePos * keySize());\n             }\n             // ... insert\n-            if ( countBeforePos >= 0 )\n+            if (countBeforePos >= 0)\n             {\n-                insertKeyAt( rightCursor, newKey, countBeforePos, countBeforePos );\n+                insertKeyAt(rightCursor, newKey, countBeforePos, countBeforePos);\n             }\n             // ... second copy\n             int countAfterPos = leftKeyCount - insertPos;\n-            if ( countAfterPos > 0 )\n+            if (countAfterPos > 0)\n             {\n-                leftCursor.copyTo( keyOffset( insertPos ), rightCursor, keyOffset( countBeforePos + 1 ), countAfterPos * keySize() );\n+                leftCursor.copyTo(keyOffset(insertPos), rightCursor, keyOffset(countBeforePos + 1), countAfterPos * keySize());\n             }\n \n             // Children\n             countBeforePos = insertPos - splitPos;\n             // ... first copy\n-            if ( countBeforePos > 0 )\n+            if (countBeforePos > 0)\n             {\n                 // first copy\n-                leftCursor.copyTo( childOffset( splitPos + 1 ), rightCursor, childOffset( 0 ), countBeforePos * childSize() );\n+                leftCursor.copyTo(childOffset(splitPos + 1), rightCursor, childOffset(0), countBeforePos * childSize());\n             }\n             // ... insert\n-            insertChildAt( rightCursor, newRightChild, countBeforePos, countBeforePos, stableGeneration, unstableGeneration );\n+            insertChildAt(rightCursor, newRightChild, countBeforePos, countBeforePos, stableGeneration, unstableGeneration);\n             // ... second copy\n-            if ( countAfterPos > 0 )\n+            if (countAfterPos > 0)\n             {\n-                leftCursor.copyTo( childOffset( insertPos + 1 ), rightCursor, childOffset( countBeforePos + 1 ),\n-                        countAfterPos * childSize() );\n+                leftCursor.copyTo(childOffset(insertPos + 1), rightCursor, childOffset(countBeforePos + 1),\n+                  countAfterPos * childSize());\n             }\n         }\n-        TreeNode.setKeyCount( leftCursor, splitPos );\n-        TreeNode.setKeyCount( rightCursor, rightKeyCount );\n+        TreeNode.setKeyCount(leftCursor, splitPos);\n+        TreeNode.setKeyCount(rightCursor, rightKeyCount);\n     }\n \n     @Override\n-    void moveKeyValuesFromLeftToRight( PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount,\n-            int fromPosInLeftNode )\n+    void moveKeyValuesFromLeftToRight(PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount,\n+                                      int fromPosInLeftNode)\n     {\n         int numberOfKeysToMove = leftKeyCount - fromPosInLeftNode;\n \n         // Push keys and values in right sibling to the right\n-        insertKeyValueSlots( rightCursor, numberOfKeysToMove, rightKeyCount );\n+        insertKeyValueSlots(rightCursor, numberOfKeysToMove, rightKeyCount);\n \n         // Move keys and values from left sibling to right sibling\n-        copyKeysAndValues( leftCursor, fromPosInLeftNode, rightCursor, 0, numberOfKeysToMove );\n+        copyKeysAndValues(leftCursor, fromPosInLeftNode, rightCursor, 0, numberOfKeysToMove);\n \n-        setKeyCount( leftCursor, leftKeyCount - numberOfKeysToMove );\n-        setKeyCount( rightCursor, rightKeyCount + numberOfKeysToMove );\n+        setKeyCount(leftCursor, leftKeyCount - numberOfKeysToMove);\n+        setKeyCount(rightCursor, rightKeyCount + numberOfKeysToMove);\n     }\n \n     @Override\n-    void copyKeyValuesFromLeftToRight( PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount )\n+    void copyKeyValuesFromLeftToRight(PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount)\n     {\n         // Push keys and values in right sibling to the right\n-        insertKeyValueSlots( rightCursor, leftKeyCount, rightKeyCount );\n+        insertKeyValueSlots(rightCursor, leftKeyCount, rightKeyCount);\n \n         // Move keys and values from left sibling to right sibling\n-        copyKeysAndValues( leftCursor, 0, rightCursor, 0, leftKeyCount );\n+        copyKeysAndValues(leftCursor, 0, rightCursor, 0, leftKeyCount);\n \n         // KeyCount\n-        setKeyCount( rightCursor, rightKeyCount + leftKeyCount );\n+        setKeyCount(rightCursor, rightKeyCount + leftKeyCount);\n     }\n \n     @Override\n-    void printNode( PageCursor cursor, boolean includeValue, boolean includeAllocSpace, long stableGeneration, long unstableGeneration,\n-            PageCursorTracer cursorTracer )\n+    void printNode(PageCursor cursor, boolean includeValue, boolean includeAllocSpace, long stableGeneration, long unstableGeneration,\n+                   PageCursorTracer cursorTracer)\n     {\n-        PrintingGBPTreeVisitor<KEY,VALUE> visitor = new PrintingGBPTreeVisitor<>( PrintConfig.defaults() );\n+        PrintingGBPTreeVisitor<KEY, VALUE> visitor = new PrintingGBPTreeVisitor<>(PrintConfig.defaults());\n         try\n         {\n-            new GBPTreeStructure<>( this, layout, stableGeneration, unstableGeneration ).visitTreeNode( cursor, visitor, cursorTracer );\n-        }\n-        catch ( IOException e )\n+            new GBPTreeStructure<>(this, layout, stableGeneration, unstableGeneration).visitTreeNode(cursor, visitor, cursorTracer);\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n-    private void copyKeysAndValues( PageCursor fromCursor, int fromPos, PageCursor toCursor, int toPos, int count )\n+    private void copyKeysAndValues(PageCursor fromCursor, int fromPos, PageCursor toCursor, int toPos, int count)\n     {\n-        fromCursor.copyTo( keyOffset( fromPos ), toCursor, keyOffset( toPos ), count * keySize() );\n-        fromCursor.copyTo( valueOffset( fromPos ), toCursor, valueOffset( toPos ),count * valueSize() );\n+        fromCursor.copyTo(keyOffset(fromPos), toCursor, keyOffset(toPos), count * keySize());\n+        fromCursor.copyTo(valueOffset(fromPos), toCursor, valueOffset(toPos), count * valueSize());\n     }\n \n     @Override\n-    String checkMetaConsistency( PageCursor cursor, int keyCount, Type type, GBPTreeConsistencyCheckVisitor<KEY> visitor )\n+    String checkMetaConsistency(PageCursor cursor, int keyCount, Type type, GBPTreeConsistencyCheckVisitor<KEY> visitor)\n     {\n         return \"\";\n     }\n@@ -608,6 +605,6 @@ class TreeNodeFixedSize<KEY,VALUE> extends TreeNode<KEY,VALUE>\n     public String toString()\n     {\n         return \"TreeNodeFixedSize[pageSize:\" + pageSize + \", internalMax:\" + internalMaxKeyCount() + \", leafMax:\" + leafMaxKeyCount() + \", \" +\n-                \"keySize:\" + keySize() + \", valueSize:\" + valueSize + \"]\";\n+          \"keySize:\" + keySize() + \", valueSize:\" + valueSize + \"]\";\n     }\n }\n",
            "diff_size": 178
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
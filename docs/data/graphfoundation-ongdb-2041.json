{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2041",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2041/AbstractIndexReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2041/AbstractIndexReader.java\nindex c1063242c8a..935aecd7511 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2041/AbstractIndexReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2041/AbstractIndexReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api.schema;\n \n import org.neo4j.internal.kernel.api.IndexOrder;\n@@ -26,26 +27,26 @@ import org.neo4j.kernel.api.schema.index.SchemaIndexDescriptor;\n \n public abstract class AbstractIndexReader implements IndexReader\n {\n-    protected final SchemaIndexDescriptor descriptor;\n+  protected final SchemaIndexDescriptor descriptor;\n \n-    protected AbstractIndexReader( SchemaIndexDescriptor descriptor )\n-    {\n-        this.descriptor = descriptor;\n-    }\n+  protected AbstractIndexReader(SchemaIndexDescriptor descriptor)\n+  {\n+    this.descriptor = descriptor;\n+  }\n \n-    @Override\n-    public void query(\n-            IndexProgressor.NodeValueClient client,\n-            IndexOrder indexOrder,\n-            IndexQuery... query ) throws IndexNotApplicableKernelException\n+  @Override\n+  public void query(\n+      IndexProgressor.NodeValueClient client,\n+      IndexOrder indexOrder,\n+      IndexQuery... query) throws IndexNotApplicableKernelException\n+  {\n+    if (indexOrder != IndexOrder.NONE)\n     {\n-        if ( indexOrder != IndexOrder.NONE )\n-        {\n-            throw new UnsupportedOperationException(\n-                    String.format( \"This reader only have support for index order %s. Provided index order was %s.\",\n-                            IndexOrder.NONE, indexOrder ) );\n-        }\n-        client.initialize( descriptor, new NodeValueIndexProgressor( query( query ), client ), query );\n+      throw new UnsupportedOperationException(\n+          String.format(\"This reader only have support for index order %s. Provided index order was %s.\",\n+              IndexOrder.NONE, indexOrder));\n     }\n+    client.initialize(descriptor, new NodeValueIndexProgressor(query(query), client), query);\n+  }\n \n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2041/AbstractIndexReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2041/AbstractIndexReader.java\nindex c1063242c8a..ce3a77ffb49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2041/AbstractIndexReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2041/AbstractIndexReader.java\n@@ -34,18 +34,15 @@ public abstract class AbstractIndexReader implements IndexReader\n     }\n \n     @Override\n-    public void query(\n-            IndexProgressor.NodeValueClient client,\n+    public void query( IndexProgressor.NodeValueClient client,\n             IndexOrder indexOrder,\n             IndexQuery... query ) throws IndexNotApplicableKernelException\n-    {\n+{\n         if ( indexOrder != IndexOrder.NONE )\n         {\n-            throw new UnsupportedOperationException(\n-                    String.format( \"This reader only have support for index order %s. Provided index order was %s.\",\n+            throw new UnsupportedOperationException( String.format( \"This reader only have support for index order %s. Provided index order was %s.\",\n                             IndexOrder.NONE, indexOrder ) );\n-        }\n+    }\n         client.initialize( descriptor, new NodeValueIndexProgressor( query( query ), client ), query );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
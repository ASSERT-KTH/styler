{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3577",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3577/PrimitiveIntObjectHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3577/PrimitiveIntObjectHashMap.java\nindex b98e6a1bde5..f54364bcbfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3577/PrimitiveIntObjectHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3577/PrimitiveIntObjectHashMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive.hopscotch;\n \n import org.neo4j.collection.primitive.PrimitiveIntObjectMap;\n@@ -26,143 +27,143 @@ import org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.Monito\n import static org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.DEFAULT_HASHING;\n \n public class PrimitiveIntObjectHashMap<VALUE> extends AbstractIntHopScotchCollection<VALUE>\n-        implements PrimitiveIntObjectMap<VALUE>\n+    implements PrimitiveIntObjectMap<VALUE>\n {\n-    private final Monitor monitor;\n-\n-    public PrimitiveIntObjectHashMap( Table<VALUE> table, Monitor monitor )\n+  private final Monitor monitor;\n+\n+  public PrimitiveIntObjectHashMap(Table<VALUE> table, Monitor monitor)\n+  {\n+    super(table);\n+    this.monitor = monitor;\n+  }\n+\n+  @Override\n+  public VALUE put(int key, VALUE value)\n+  {\n+    return HopScotchHashingAlgorithm.put(table, monitor, DEFAULT_HASHING, key, value, this);\n+  }\n+\n+  @Override\n+  public boolean containsKey(int key)\n+  {\n+    return HopScotchHashingAlgorithm.get(table, monitor, DEFAULT_HASHING, key) != null;\n+  }\n+\n+  @Override\n+  public VALUE get(int key)\n+  {\n+    return HopScotchHashingAlgorithm.get(table, monitor, DEFAULT_HASHING, key);\n+  }\n+\n+  @Override\n+  public VALUE remove(int key)\n+  {\n+    return HopScotchHashingAlgorithm.remove(table, monitor, DEFAULT_HASHING, key);\n+  }\n+\n+  @Override\n+  public int size()\n+  {\n+    return table.size();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return table.toString();\n+  }\n+\n+  @Override\n+  public <E extends Exception> void visitEntries(PrimitiveIntObjectVisitor<VALUE, E> visitor) throws E\n+  {\n+    long nullKey = table.nullKey();\n+    int capacity = table.capacity();\n+    for (int i = 0; i < capacity; i++)\n     {\n-        super( table );\n-        this.monitor = monitor;\n+      int key = (int) table.key(i);\n+      if (key != nullKey && visitor.visited(key, table.value(i)))\n+      {\n+        return;\n+      }\n     }\n+  }\n \n-    @Override\n-    public VALUE put( int key, VALUE value )\n+  @SuppressWarnings(\"EqualsWhichDoesntCheckParameterClass\") // yes it does\n+  @Override\n+  public boolean equals(Object other)\n+  {\n+    if (typeAndSizeEqual(other))\n     {\n-        return HopScotchHashingAlgorithm.put( table, monitor, DEFAULT_HASHING, key, value, this );\n+      PrimitiveIntObjectHashMap<?> that = (PrimitiveIntObjectHashMap<?>) other;\n+      IntObjEquality<VALUE> equality = new IntObjEquality<>(that);\n+      visitEntries(equality);\n+      return equality.isEqual();\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public boolean containsKey( int key )\n-    {\n-        return HopScotchHashingAlgorithm.get( table, monitor, DEFAULT_HASHING, key ) != null;\n-    }\n+  private static class IntObjEquality<T> implements PrimitiveIntObjectVisitor<T, RuntimeException>\n+  {\n+    private PrimitiveIntObjectHashMap other;\n+    private boolean equal = true;\n \n-    @Override\n-    public VALUE get( int key )\n+    IntObjEquality(PrimitiveIntObjectHashMap that)\n     {\n-        return HopScotchHashingAlgorithm.get( table, monitor, DEFAULT_HASHING, key );\n+      this.other = that;\n     }\n \n     @Override\n-    public VALUE remove( int key )\n+    public boolean visited(int key, T value)\n     {\n-        return HopScotchHashingAlgorithm.remove( table, monitor, DEFAULT_HASHING, key );\n+      Object otherValue = other.get(key);\n+      equal = otherValue == value || (otherValue != null && otherValue.equals(value));\n+      return !equal;\n     }\n \n-    @Override\n-    public int size()\n+    public boolean isEqual()\n     {\n-        return table.size();\n+      return equal;\n     }\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return table.toString();\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    HashCodeComputer<VALUE> hash = new HashCodeComputer<>();\n+    visitEntries(hash);\n+    return hash.hashCode();\n+  }\n \n-    @Override\n-    public <E extends Exception> void visitEntries( PrimitiveIntObjectVisitor<VALUE, E> visitor ) throws E\n-    {\n-        long nullKey = table.nullKey();\n-        int capacity = table.capacity();\n-        for ( int i = 0; i < capacity; i++ )\n-        {\n-            int key = (int) table.key( i );\n-            if ( key != nullKey && visitor.visited( key, table.value( i ) ) )\n-            {\n-                return;\n-            }\n-        }\n-    }\n+  private static class HashCodeComputer<T> implements PrimitiveIntObjectVisitor<T, RuntimeException>\n+  {\n+    private int hash = 1337;\n \n-    @SuppressWarnings( \"EqualsWhichDoesntCheckParameterClass\" ) // yes it does\n     @Override\n-    public boolean equals( Object other )\n-    {\n-        if ( typeAndSizeEqual( other ) )\n-        {\n-            PrimitiveIntObjectHashMap<?> that = (PrimitiveIntObjectHashMap<?>) other;\n-            IntObjEquality<VALUE> equality = new IntObjEquality<>( that );\n-            visitEntries( equality );\n-            return equality.isEqual();\n-        }\n-        return false;\n-    }\n-\n-    private static class IntObjEquality<T> implements PrimitiveIntObjectVisitor<T,RuntimeException>\n+    public boolean visited(int key, T value) throws RuntimeException\n     {\n-        private PrimitiveIntObjectHashMap other;\n-        private boolean equal = true;\n-\n-        IntObjEquality( PrimitiveIntObjectHashMap that )\n-        {\n-            this.other = that;\n-        }\n-\n-        @Override\n-        public boolean visited( int key, T value )\n-        {\n-            Object otherValue = other.get( key );\n-            equal = otherValue == value || (otherValue != null && otherValue.equals( value ) );\n-            return !equal;\n-        }\n-\n-        public boolean isEqual()\n-        {\n-            return equal;\n-        }\n+      hash += DEFAULT_HASHING.hashSingleValueToInt(key + value.hashCode());\n+      return false;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        HashCodeComputer<VALUE> hash = new HashCodeComputer<>();\n-        visitEntries( hash );\n-        return hash.hashCode();\n+      return hash;\n     }\n \n-    private static class HashCodeComputer<T> implements PrimitiveIntObjectVisitor<T,RuntimeException>\n+    @Override\n+    public boolean equals(Object o)\n     {\n-        private int hash = 1337;\n-\n-        @Override\n-        public boolean visited( int key, T value ) throws RuntimeException\n-        {\n-            hash += DEFAULT_HASHING.hashSingleValueToInt( key + value.hashCode() );\n-            return false;\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return hash;\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            HashCodeComputer<?> that = (HashCodeComputer<?>) o;\n-            return hash == that.hash;\n-        }\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      HashCodeComputer<?> that = (HashCodeComputer<?>) o;\n+      return hash == that.hash;\n     }\n+  }\n }\n",
            "diff_size": 175
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "27",
                    "column": "40",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "82",
                    "column": "32",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "41",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "118",
                    "column": "40",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "118",
                    "column": "63",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "43",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "160",
                    "column": "27",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3577/PrimitiveIntObjectHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3577/PrimitiveIntObjectHashMap.java\nindex b98e6a1bde5..d70b7578020 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3577/PrimitiveIntObjectHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3577/PrimitiveIntObjectHashMap.java\n@@ -22,11 +22,10 @@ package org.neo4j.collection.primitive.hopscotch;\n import org.neo4j.collection.primitive.PrimitiveIntObjectMap;\n import org.neo4j.collection.primitive.PrimitiveIntObjectVisitor;\n import org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.Monitor;\n-\n import static org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.DEFAULT_HASHING;\n \n-public class PrimitiveIntObjectHashMap<VALUE> extends AbstractIntHopScotchCollection<VALUE>\n-        implements PrimitiveIntObjectMap<VALUE>\n+public class PrimitiveIntObjectHashMap <VALUE> extends AbstractIntHopScotchCollection<VALUE>\n+implements PrimitiveIntObjectMap<VALUE>\n {\n     private final Monitor monitor;\n \n@@ -73,21 +72,21 @@ public class PrimitiveIntObjectHashMap<VALUE> extends AbstractIntHopScotchCollec\n     }\n \n     @Override\n-    public <E extends Exception> void visitEntries( PrimitiveIntObjectVisitor<VALUE, E> visitor ) throws E\n+    public <E extends Exception> void visitEntries( PrimitiveIntObjectVisitor<VALUE,E> visitor ) throws E\n     {\n         long nullKey = table.nullKey();\n         int capacity = table.capacity();\n         for ( int i = 0; i < capacity; i++ )\n         {\n             int key = (int) table.key( i );\n-            if ( key != nullKey && visitor.visited( key, table.value( i ) ) )\n+            if ( key != nullKey&& visitor.visited( key, table.value( i ) ) )\n             {\n                 return;\n             }\n         }\n     }\n \n-    @SuppressWarnings( \"EqualsWhichDoesntCheckParameterClass\" ) // yes it does\n+    @ SuppressWarnings( \"EqualsWhichDoesntCheckParameterClass\") // yes it does\n     @Override\n     public boolean equals( Object other )\n     {\n@@ -98,10 +97,11 @@ public class PrimitiveIntObjectHashMap<VALUE> extends AbstractIntHopScotchCollec\n             visitEntries( equality );\n             return equality.isEqual();\n         }\n+\n         return false;\n     }\n \n-    private static class IntObjEquality<T> implements PrimitiveIntObjectVisitor<T,RuntimeException>\n+    private static class IntObjEquality <T> implements PrimitiveIntObjectVisitor<T,RuntimeException>\n     {\n         private PrimitiveIntObjectHashMap other;\n         private boolean equal = true;\n@@ -115,8 +115,8 @@ public class PrimitiveIntObjectHashMap<VALUE> extends AbstractIntHopScotchCollec\n         public boolean visited( int key, T value )\n         {\n             Object otherValue = other.get( key );\n-            equal = otherValue == value || (otherValue != null && otherValue.equals( value ) );\n-            return !equal;\n+            equal = otherValue == value|| ( otherValue != null&& otherValue.equals( value ));\n+            return ! equal;\n         }\n \n         public boolean isEqual()\n@@ -133,10 +133,9 @@ public class PrimitiveIntObjectHashMap<VALUE> extends AbstractIntHopScotchCollec\n         return hash.hashCode();\n     }\n \n-    private static class HashCodeComputer<T> implements PrimitiveIntObjectVisitor<T,RuntimeException>\n+    private static class HashCodeComputer <T> implements PrimitiveIntObjectVisitor<T,RuntimeException>\n     {\n         private int hash = 1337;\n-\n         @Override\n         public boolean visited( int key, T value ) throws RuntimeException\n         {\n@@ -157,12 +156,14 @@ public class PrimitiveIntObjectHashMap<VALUE> extends AbstractIntHopScotchCollec\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+            if ( o == null|| getClass() != o.getClass() )\n             {\n                 return false;\n             }\n+\n             HashCodeComputer<?> that = (HashCodeComputer<?>) o;\n             return hash == that.hash;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2173",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "89",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "215",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "257",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "260",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2173/Neo4jPackV2.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2173/Neo4jPackV2.java\nindex ecccf4f5d97..d2985c872a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2173/Neo4jPackV2.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2173/Neo4jPackV2.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.packstream;\n \n import java.io.IOException;\n@@ -85,15 +86,15 @@ public class Neo4jPackV2 extends Neo4jPackV1\n     public static final int DURATION_SIZE = 4;\n \n     @Override\n-    public Neo4jPack.Packer newPacker( PackOutput output )\n+    public Neo4jPack.Packer newPacker(PackOutput output)\n     {\n-        return new PackerV2( output );\n+        return new PackerV2(output);\n     }\n \n     @Override\n-    public Neo4jPack.Unpacker newUnpacker( PackInput input )\n+    public Neo4jPack.Unpacker newUnpacker(PackInput input)\n     {\n-        return new UnpackerV2( input );\n+        return new UnpackerV2(input);\n     }\n \n     @Override\n@@ -104,170 +105,165 @@ public class Neo4jPackV2 extends Neo4jPackV1\n \n     private static class PackerV2 extends Neo4jPackV1.PackerV1\n     {\n-        PackerV2( PackOutput output )\n+        PackerV2(PackOutput output)\n         {\n-            super( output );\n+            super(output);\n         }\n \n         @Override\n-        public void writePoint( CoordinateReferenceSystem crs, double[] coordinate ) throws IOException\n+        public void writePoint(CoordinateReferenceSystem crs, double[] coordinate) throws IOException\n         {\n-            if ( coordinate.length == 2 )\n+            if (coordinate.length == 2)\n             {\n-                packStructHeader( POINT_2D_SIZE, POINT_2D );\n-                pack( crs.getCode() );\n-                pack( coordinate[0] );\n-                pack( coordinate[1] );\n-            }\n-            else if ( coordinate.length == 3 )\n+                packStructHeader(POINT_2D_SIZE, POINT_2D);\n+                pack(crs.getCode());\n+                pack(coordinate[0]);\n+                pack(coordinate[1]);\n+            } else if (coordinate.length == 3)\n             {\n-                packStructHeader( POINT_3D_SIZE, POINT_3D );\n-                pack( crs.getCode() );\n-                pack( coordinate[0] );\n-                pack( coordinate[1] );\n-                pack( coordinate[2] );\n-            }\n-            else\n+                packStructHeader(POINT_3D_SIZE, POINT_3D);\n+                pack(crs.getCode());\n+                pack(coordinate[0]);\n+                pack(coordinate[1]);\n+                pack(coordinate[2]);\n+            } else\n             {\n-                throw new IllegalArgumentException( \"Point with 2D or 3D coordinate expected, \" +\n-                                                    \"got crs=\" + crs + \", coordinate=\" + Arrays.toString( coordinate ) );\n+                throw new IllegalArgumentException(\"Point with 2D or 3D coordinate expected, \" +\n+                  \"got crs=\" + crs + \", coordinate=\" + Arrays.toString(coordinate));\n             }\n         }\n \n         @Override\n-        public void writeDuration( long months, long days, long seconds, int nanos ) throws IOException\n+        public void writeDuration(long months, long days, long seconds, int nanos) throws IOException\n         {\n-            packStructHeader( DURATION_SIZE, DURATION );\n-            pack( months );\n-            pack( days );\n-            pack( seconds );\n-            pack( nanos );\n+            packStructHeader(DURATION_SIZE, DURATION);\n+            pack(months);\n+            pack(days);\n+            pack(seconds);\n+            pack(nanos);\n         }\n \n         @Override\n-        public void writeDate( LocalDate localDate ) throws IOException\n+        public void writeDate(LocalDate localDate) throws IOException\n         {\n             long epochDay = localDate.toEpochDay();\n \n-            packStructHeader( DATE_SIZE, DATE );\n-            pack( epochDay );\n+            packStructHeader(DATE_SIZE, DATE);\n+            pack(epochDay);\n         }\n \n         @Override\n-        public void writeLocalTime( LocalTime localTime ) throws IOException\n+        public void writeLocalTime(LocalTime localTime) throws IOException\n         {\n             long nanoOfDay = localTime.toNanoOfDay();\n \n-            packStructHeader( LOCAL_TIME_SIZE, LOCAL_TIME );\n-            pack( nanoOfDay );\n+            packStructHeader(LOCAL_TIME_SIZE, LOCAL_TIME);\n+            pack(nanoOfDay);\n         }\n \n         @Override\n-        public void writeTime( OffsetTime offsetTime ) throws IOException\n+        public void writeTime(OffsetTime offsetTime) throws IOException\n         {\n             long nanosOfDayLocal = offsetTime.toLocalTime().toNanoOfDay();\n             int offsetSeconds = offsetTime.getOffset().getTotalSeconds();\n \n-            packStructHeader( TIME_SIZE, TIME );\n-            pack( nanosOfDayLocal );\n-            pack( offsetSeconds );\n+            packStructHeader(TIME_SIZE, TIME);\n+            pack(nanosOfDayLocal);\n+            pack(offsetSeconds);\n         }\n \n         @Override\n-        public void writeLocalDateTime( LocalDateTime localDateTime ) throws IOException\n+        public void writeLocalDateTime(LocalDateTime localDateTime) throws IOException\n         {\n-            long epochSecond = localDateTime.toEpochSecond( UTC );\n+            long epochSecond = localDateTime.toEpochSecond(UTC);\n             int nano = localDateTime.getNano();\n \n-            packStructHeader( LOCAL_DATE_TIME_SIZE, LOCAL_DATE_TIME );\n-            pack( epochSecond );\n-            pack( nano );\n+            packStructHeader(LOCAL_DATE_TIME_SIZE, LOCAL_DATE_TIME);\n+            pack(epochSecond);\n+            pack(nano);\n         }\n \n         @Override\n-        public void writeDateTime( ZonedDateTime zonedDateTime ) throws IOException\n+        public void writeDateTime(ZonedDateTime zonedDateTime) throws IOException\n         {\n-            long epochSecondLocal = zonedDateTime.toLocalDateTime().toEpochSecond( UTC );\n+            long epochSecondLocal = zonedDateTime.toLocalDateTime().toEpochSecond(UTC);\n             int nano = zonedDateTime.getNano();\n \n             ZoneId zone = zonedDateTime.getZone();\n-            if ( zone instanceof ZoneOffset )\n+            if (zone instanceof ZoneOffset)\n             {\n                 int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n \n-                packStructHeader( DATE_TIME_WITH_ZONE_OFFSET_SIZE, DATE_TIME_WITH_ZONE_OFFSET );\n-                pack( epochSecondLocal );\n-                pack( nano );\n-                pack( offsetSeconds );\n-            }\n-            else\n+                packStructHeader(DATE_TIME_WITH_ZONE_OFFSET_SIZE, DATE_TIME_WITH_ZONE_OFFSET);\n+                pack(epochSecondLocal);\n+                pack(nano);\n+                pack(offsetSeconds);\n+            } else\n             {\n                 String zoneId = zone.getId();\n \n-                packStructHeader( DATE_TIME_WITH_ZONE_NAME_SIZE, DATE_TIME_WITH_ZONE_NAME );\n-                pack( epochSecondLocal );\n-                pack( nano );\n-                pack( zoneId );\n+                packStructHeader(DATE_TIME_WITH_ZONE_NAME_SIZE, DATE_TIME_WITH_ZONE_NAME);\n+                pack(epochSecondLocal);\n+                pack(nano);\n+                pack(zoneId);\n             }\n         }\n     }\n \n     private static class UnpackerV2 extends Neo4jPackV1.UnpackerV1\n     {\n-        UnpackerV2( PackInput input )\n+        UnpackerV2(PackInput input)\n         {\n-            super( input );\n+            super(input);\n         }\n \n         @Override\n-        protected AnyValue unpackStruct( char signature, long size ) throws IOException\n+        protected AnyValue unpackStruct(char signature, long size) throws IOException\n         {\n             try\n             {\n-                switch ( signature )\n+                switch (signature)\n                 {\n-                case POINT_2D:\n-                    ensureCorrectStructSize( StructType.POINT_2D, POINT_2D_SIZE, size );\n-                    return unpackPoint2D();\n-                case POINT_3D:\n-                    ensureCorrectStructSize( StructType.POINT_3D, POINT_3D_SIZE, size );\n-                    return unpackPoint3D();\n-                case DURATION:\n-                    ensureCorrectStructSize( StructType.DURATION, DURATION_SIZE, size );\n-                    return unpackDuration();\n-                case DATE:\n-                    ensureCorrectStructSize( StructType.DATE, DATE_SIZE, size );\n-                    return unpackDate();\n-                case LOCAL_TIME:\n-                    ensureCorrectStructSize( StructType.LOCAL_TIME, LOCAL_TIME_SIZE, size );\n-                    return unpackLocalTime();\n-                case TIME:\n-                    ensureCorrectStructSize( StructType.TIME, TIME_SIZE, size );\n-                    return unpackTime();\n-                case LOCAL_DATE_TIME:\n-                    ensureCorrectStructSize( StructType.LOCAL_DATE_TIME, LOCAL_DATE_TIME_SIZE, size );\n-                    return unpackLocalDateTime();\n-                case DATE_TIME_WITH_ZONE_OFFSET:\n-                    ensureCorrectStructSize( StructType.DATE_TIME_WITH_ZONE_OFFSET, DATE_TIME_WITH_ZONE_OFFSET_SIZE, size );\n-                    return unpackDateTimeWithZoneOffset();\n-                case DATE_TIME_WITH_ZONE_NAME:\n-                    ensureCorrectStructSize( StructType.DATE_TIME_WITH_ZONE_NAME, DATE_TIME_WITH_ZONE_NAME_SIZE, size );\n-                    return unpackDateTimeWithZoneName();\n-                default:\n-                    return super.unpackStruct( signature, size );\n+                    case POINT_2D:\n+                        ensureCorrectStructSize(StructType.POINT_2D, POINT_2D_SIZE, size);\n+                        return unpackPoint2D();\n+                    case POINT_3D:\n+                        ensureCorrectStructSize(StructType.POINT_3D, POINT_3D_SIZE, size);\n+                        return unpackPoint3D();\n+                    case DURATION:\n+                        ensureCorrectStructSize(StructType.DURATION, DURATION_SIZE, size);\n+                        return unpackDuration();\n+                    case DATE:\n+                        ensureCorrectStructSize(StructType.DATE, DATE_SIZE, size);\n+                        return unpackDate();\n+                    case LOCAL_TIME:\n+                        ensureCorrectStructSize(StructType.LOCAL_TIME, LOCAL_TIME_SIZE, size);\n+                        return unpackLocalTime();\n+                    case TIME:\n+                        ensureCorrectStructSize(StructType.TIME, TIME_SIZE, size);\n+                        return unpackTime();\n+                    case LOCAL_DATE_TIME:\n+                        ensureCorrectStructSize(StructType.LOCAL_DATE_TIME, LOCAL_DATE_TIME_SIZE, size);\n+                        return unpackLocalDateTime();\n+                    case DATE_TIME_WITH_ZONE_OFFSET:\n+                        ensureCorrectStructSize(StructType.DATE_TIME_WITH_ZONE_OFFSET, DATE_TIME_WITH_ZONE_OFFSET_SIZE, size);\n+                        return unpackDateTimeWithZoneOffset();\n+                    case DATE_TIME_WITH_ZONE_NAME:\n+                        ensureCorrectStructSize(StructType.DATE_TIME_WITH_ZONE_NAME, DATE_TIME_WITH_ZONE_NAME_SIZE, size);\n+                        return unpackDateTimeWithZoneName();\n+                    default:\n+                        return super.unpackStruct(signature, size);\n                 }\n-            }\n-            catch ( PackStream.PackStreamException | BoltIOException ex )\n+            } catch (PackStream.PackStreamException | BoltIOException ex)\n             {\n                 throw ex;\n-            }\n-            catch ( Throwable ex )\n+            } catch (Throwable ex)\n             {\n-                StructType type = StructType.valueOf( signature );\n-                if ( type != null )\n+                StructType type = StructType.valueOf(signature);\n+                if (type != null)\n                 {\n-                    throw new BoltIOException( Status.Statement.TypeError,\n-                            String.format( \"Unable to construct %s value: `%s`\", type.description(), ex.getMessage() ), ex );\n+                    throw new BoltIOException(Status.Statement.TypeError,\n+                      String.format(\"Unable to construct %s value: `%s`\", type.description(), ex.getMessage()), ex);\n                 }\n \n                 throw ex;\n@@ -278,17 +274,17 @@ public class Neo4jPackV2 extends Neo4jPackV1\n         {\n \n             int crsCode = unpackInteger();\n-            CoordinateReferenceSystem crs = CoordinateReferenceSystem.get( crsCode );\n+            CoordinateReferenceSystem crs = CoordinateReferenceSystem.get(crsCode);\n             double[] coordinates = {unpackDouble(), unpackDouble()};\n-            return pointValue( crs, coordinates );\n+            return pointValue(crs, coordinates);\n         }\n \n         private PointValue unpackPoint3D() throws IOException\n         {\n             int crsCode = unpackInteger();\n-            CoordinateReferenceSystem crs = CoordinateReferenceSystem.get( crsCode );\n+            CoordinateReferenceSystem crs = CoordinateReferenceSystem.get(crsCode);\n             double[] coordinates = {unpackDouble(), unpackDouble(), unpackDouble()};\n-            return pointValue( crs, coordinates );\n+            return pointValue(crs, coordinates);\n         }\n \n         private DurationValue unpackDuration() throws IOException\n@@ -297,33 +293,33 @@ public class Neo4jPackV2 extends Neo4jPackV1\n             long days = unpackLong();\n             long seconds = unpackLong();\n             long nanos = unpackInteger();\n-            return duration( months, days, seconds, nanos );\n+            return duration(months, days, seconds, nanos);\n         }\n \n         private DateValue unpackDate() throws IOException\n         {\n             long epochDay = unpackLong();\n-            return epochDate( epochDay );\n+            return epochDate(epochDay);\n         }\n \n         private LocalTimeValue unpackLocalTime() throws IOException\n         {\n             long nanoOfDay = unpackLong();\n-            return localTime( nanoOfDay );\n+            return localTime(nanoOfDay);\n         }\n \n         private TimeValue unpackTime() throws IOException\n         {\n             long nanosOfDayLocal = unpackLong();\n             int offsetSeconds = unpackInteger();\n-            return time( TemporalUtil.nanosOfDayToUTC( nanosOfDayLocal, offsetSeconds ), ZoneOffset.ofTotalSeconds( offsetSeconds ) );\n+            return time(TemporalUtil.nanosOfDayToUTC(nanosOfDayLocal, offsetSeconds), ZoneOffset.ofTotalSeconds(offsetSeconds));\n         }\n \n         private LocalDateTimeValue unpackLocalDateTime() throws IOException\n         {\n             long epochSecond = unpackLong();\n             long nano = unpackLong();\n-            return localDateTime( epochSecond, nano );\n+            return localDateTime(epochSecond, nano);\n         }\n \n         private DateTimeValue unpackDateTimeWithZoneOffset() throws IOException\n@@ -331,7 +327,7 @@ public class Neo4jPackV2 extends Neo4jPackV1\n             long epochSecondLocal = unpackLong();\n             long nano = unpackLong();\n             int offsetSeconds = unpackInteger();\n-            return datetime( newZonedDateTime( epochSecondLocal, nano, ZoneOffset.ofTotalSeconds( offsetSeconds ) ) );\n+            return datetime(newZonedDateTime(epochSecondLocal, nano, ZoneOffset.ofTotalSeconds(offsetSeconds)));\n         }\n \n         private DateTimeValue unpackDateTimeWithZoneName() throws IOException\n@@ -339,14 +335,14 @@ public class Neo4jPackV2 extends Neo4jPackV1\n             long epochSecondLocal = unpackLong();\n             long nano = unpackLong();\n             String zoneId = unpackString();\n-            return datetime( newZonedDateTime( epochSecondLocal, nano, ZoneId.of( zoneId ) ) );\n+            return datetime(newZonedDateTime(epochSecondLocal, nano, ZoneId.of(zoneId)));\n         }\n \n-        private static ZonedDateTime newZonedDateTime( long epochSecondLocal, long nano, ZoneId zoneId )\n+        private static ZonedDateTime newZonedDateTime(long epochSecondLocal, long nano, ZoneId zoneId)\n         {\n-            Instant instant = Instant.ofEpochSecond( epochSecondLocal, nano );\n-            LocalDateTime localDateTime = LocalDateTime.ofInstant( instant, UTC );\n-            return ZonedDateTime.of( localDateTime, zoneId );\n+            Instant instant = Instant.ofEpochSecond(epochSecondLocal, nano);\n+            LocalDateTime localDateTime = LocalDateTime.ofInstant(instant, UTC);\n+            return ZonedDateTime.of(localDateTime, zoneId);\n         }\n     }\n }\n",
            "diff_size": 114
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2173/Neo4jPackV2.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2173/Neo4jPackV2.java\nindex ecccf4f5d97..f731e0b12df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2173/Neo4jPackV2.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2173/Neo4jPackV2.java\n@@ -349,4 +349,4 @@ public class Neo4jPackV2 extends Neo4jPackV1\n             return ZonedDateTime.of( localDateTime, zoneId );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
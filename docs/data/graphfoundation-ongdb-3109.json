{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3109",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "90",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3109/AsyncRequestLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3109/AsyncRequestLog.java\nindex 314f4de0a53..236fb3fa9b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3109/AsyncRequestLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3109/AsyncRequestLog.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import org.eclipse.jetty.server.Request;\n@@ -47,90 +48,89 @@ import org.neo4j.logging.async.AsyncLogProvider;\n import static org.apache.commons.lang.StringUtils.defaultString;\n \n public class AsyncRequestLog\n-        extends AbstractLifeCycle\n-        implements RequestLog, Consumer<AsyncLogEvent>, AsyncEvents.Monitor\n+    extends AbstractLifeCycle\n+    implements RequestLog, Consumer<AsyncLogEvent>, AsyncEvents.Monitor\n {\n-    private final Log log;\n-    private final ExecutorService asyncLogProcessingExecutor;\n-    private final AsyncEvents<AsyncLogEvent> asyncEventProcessor;\n+  private final Log log;\n+  private final ExecutorService asyncLogProcessingExecutor;\n+  private final AsyncEvents<AsyncLogEvent> asyncEventProcessor;\n \n-    public AsyncRequestLog( FileSystemAbstraction fs, ZoneId logTimeZone, String logFile, long rotationSize, int rotationKeepNumber )\n-            throws IOException\n-    {\n-        NamedThreadFactory threadFactory = new NamedThreadFactory( \"HTTP-Log-Rotator\", true );\n-        ExecutorService rotationExecutor = Executors.newCachedThreadPool( threadFactory );\n-        Supplier<OutputStream> outputSupplier = new RotatingFileOutputStreamSupplier(\n-                fs, new File( logFile ), rotationSize, 0, rotationKeepNumber, rotationExecutor );\n-        FormattedLogProvider logProvider = FormattedLogProvider.withZoneId( logTimeZone )\n-                .toOutputStream( outputSupplier );\n-        asyncLogProcessingExecutor = Executors.newSingleThreadExecutor( new NamedThreadFactory( \"HTTP-Log-Writer\" ) );\n-        asyncEventProcessor = new AsyncEvents<>( this, this );\n-        AsyncLogProvider asyncLogProvider = new AsyncLogProvider( asyncEventProcessor, logProvider );\n-        log = asyncLogProvider.getLog( \"REQUEST\" );\n-    }\n+  public AsyncRequestLog(FileSystemAbstraction fs, ZoneId logTimeZone, String logFile, long rotationSize, int rotationKeepNumber)\n+      throws IOException\n+  {\n+    NamedThreadFactory threadFactory = new NamedThreadFactory(\"HTTP-Log-Rotator\", true);\n+    ExecutorService rotationExecutor = Executors.newCachedThreadPool(threadFactory);\n+    Supplier<OutputStream> outputSupplier = new RotatingFileOutputStreamSupplier(\n+        fs, new File(logFile), rotationSize, 0, rotationKeepNumber, rotationExecutor);\n+    FormattedLogProvider logProvider = FormattedLogProvider.withZoneId(logTimeZone)\n+        .toOutputStream(outputSupplier);\n+    asyncLogProcessingExecutor = Executors.newSingleThreadExecutor(new NamedThreadFactory(\"HTTP-Log-Writer\"));\n+    asyncEventProcessor = new AsyncEvents<>(this, this);\n+    AsyncLogProvider asyncLogProvider = new AsyncLogProvider(asyncEventProcessor, logProvider);\n+    log = asyncLogProvider.getLog(\"REQUEST\");\n+  }\n \n-    @Override\n-    public void log( Request request, Response response )\n-    {\n-        // Trying to replicate this logback pattern:\n-        // %h %l %user [%t{dd/MMM/yyyy:HH:mm:ss Z}] \"%r\" %s %b \"%i{Referer}\" \"%i{User-Agent}\" %D\n-        String remoteHost = swallowExceptions( request, HttpServletRequest::getRemoteHost );\n-        String user = swallowExceptions( request, HttpServletRequest::getRemoteUser );\n-        String requestURL = swallowExceptions( request, HttpServletRequest::getRequestURI ) + \"?\" +\n-                swallowExceptions( request, HttpServletRequest::getQueryString );\n-        int statusCode = response.getStatus();\n-        long length = response.getContentLength();\n-        String referer = swallowExceptions( request, r -> r.getHeader( \"Referer\" ) );\n-        String userAgent = swallowExceptions( request, r -> r.getHeader( \"User-Agent\" ) );\n-        long requestTimeStamp = request != null ? request.getTimeStamp() : -1;\n-        long now = System.currentTimeMillis();\n-        long serviceTime = requestTimeStamp < 0 ? -1 : now - requestTimeStamp;\n+  @Override\n+  public void log(Request request, Response response)\n+  {\n+    // Trying to replicate this logback pattern:\n+    // %h %l %user [%t{dd/MMM/yyyy:HH:mm:ss Z}] \"%r\" %s %b \"%i{Referer}\" \"%i{User-Agent}\" %D\n+    String remoteHost = swallowExceptions(request, HttpServletRequest::getRemoteHost);\n+    String user = swallowExceptions(request, HttpServletRequest::getRemoteUser);\n+    String requestURL = swallowExceptions(request, HttpServletRequest::getRequestURI) + \"?\" +\n+        swallowExceptions(request, HttpServletRequest::getQueryString);\n+    int statusCode = response.getStatus();\n+    long length = response.getContentLength();\n+    String referer = swallowExceptions(request, r -> r.getHeader(\"Referer\"));\n+    String userAgent = swallowExceptions(request, r -> r.getHeader(\"User-Agent\"));\n+    long requestTimeStamp = request != null ? request.getTimeStamp() : -1;\n+    long now = System.currentTimeMillis();\n+    long serviceTime = requestTimeStamp < 0 ? -1 : now - requestTimeStamp;\n \n-        log.info( \"%s - %s [%tc] \\\"%s\\\" %s %s \\\"%s\\\" \\\"%s\\\" %s\",\n-                defaultString( remoteHost ),\n-                defaultString( user ),\n-                now,\n-                defaultString( requestURL ),\n-                statusCode,\n-                length,\n-                defaultString( referer ),\n-                defaultString( userAgent ),\n-                serviceTime );\n-    }\n+    log.info(\"%s - %s [%tc] \\\"%s\\\" %s %s \\\"%s\\\" \\\"%s\\\" %s\",\n+        defaultString(remoteHost),\n+        defaultString(user),\n+        now,\n+        defaultString(requestURL),\n+        statusCode,\n+        length,\n+        defaultString(referer),\n+        defaultString(userAgent),\n+        serviceTime);\n+  }\n \n-    private <T> T swallowExceptions( HttpServletRequest outerRequest, Function<HttpServletRequest, T> function )\n+  private <T> T swallowExceptions(HttpServletRequest outerRequest, Function<HttpServletRequest, T> function)\n+  {\n+    try\n     {\n-        try\n-        {\n-            return outerRequest == null ? null : function.apply( outerRequest );\n-        }\n-        catch ( Throwable t )\n-        {\n-            return null;\n-        }\n-    }\n-\n-    @Override\n-    protected synchronized void doStart()\n+      return outerRequest == null ? null : function.apply(outerRequest);\n+    } catch (Throwable t)\n     {\n-        asyncLogProcessingExecutor.submit( asyncEventProcessor );\n-        asyncEventProcessor.awaitStartup();\n+      return null;\n     }\n+  }\n \n-    @Override\n-    protected synchronized void doStop()\n-    {\n-        asyncEventProcessor.shutdown();\n-    }\n+  @Override\n+  protected synchronized void doStart()\n+  {\n+    asyncLogProcessingExecutor.submit(asyncEventProcessor);\n+    asyncEventProcessor.awaitStartup();\n+  }\n \n-    @Override\n-    public void accept( AsyncLogEvent event )\n-    {\n-        event.process();\n-    }\n+  @Override\n+  protected synchronized void doStop()\n+  {\n+    asyncEventProcessor.shutdown();\n+  }\n \n-    @Override\n-    public void eventCount( long count )\n-    {\n-    }\n+  @Override\n+  public void accept(AsyncLogEvent event)\n+  {\n+    event.process();\n+  }\n+\n+  @Override\n+  public void eventCount(long count)\n+  {\n+  }\n }\n",
            "diff_size": 86
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3109/AsyncRequestLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3109/AsyncRequestLog.java\nindex 314f4de0a53..95156c5d90e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3109/AsyncRequestLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3109/AsyncRequestLog.java\n@@ -46,24 +46,19 @@ import org.neo4j.logging.async.AsyncLogProvider;\n \n import static org.apache.commons.lang.StringUtils.defaultString;\n \n-public class AsyncRequestLog\n-        extends AbstractLifeCycle\n-        implements RequestLog, Consumer<AsyncLogEvent>, AsyncEvents.Monitor\n+public class AsyncRequestLog extends AbstractLifeCycle implements RequestLog, Consumer<AsyncLogEvent>, AsyncEvents.Monitor\n {\n     private final Log log;\n     private final ExecutorService asyncLogProcessingExecutor;\n     private final AsyncEvents<AsyncLogEvent> asyncEventProcessor;\n \n-    public AsyncRequestLog( FileSystemAbstraction fs, ZoneId logTimeZone, String logFile, long rotationSize, int rotationKeepNumber )\n-            throws IOException\n-    {\n+    public AsyncRequestLog( FileSystemAbstraction fs, ZoneId logTimeZone, String logFile, long rotationSize, int rotationKeepNumber ) throws IOException\n+{\n         NamedThreadFactory threadFactory = new NamedThreadFactory( \"HTTP-Log-Rotator\", true );\n         ExecutorService rotationExecutor = Executors.newCachedThreadPool( threadFactory );\n-        Supplier<OutputStream> outputSupplier = new RotatingFileOutputStreamSupplier(\n-                fs, new File( logFile ), rotationSize, 0, rotationKeepNumber, rotationExecutor );\n-        FormattedLogProvider logProvider = FormattedLogProvider.withZoneId( logTimeZone )\n-                .toOutputStream( outputSupplier );\n-        asyncLogProcessingExecutor = Executors.newSingleThreadExecutor( new NamedThreadFactory( \"HTTP-Log-Writer\" ) );\n+        Supplier<OutputStream> outputSupplier = new RotatingFileOutputStreamSupplier( fs, new File( logFile ), rotationSize, 0, rotationKeepNumber, rotationExecutor );\n+FormattedLogProvider logProvider = FormattedLogProvider.withZoneId( logTimeZone ).toOutputStream( outputSupplier );\n+asyncLogProcessingExecutor = Executors.newSingleThreadExecutor( new NamedThreadFactory( \"HTTP-Log-Writer\" ) );\n         asyncEventProcessor = new AsyncEvents<>( this, this );\n         AsyncLogProvider asyncLogProvider = new AsyncLogProvider( asyncEventProcessor, logProvider );\n         log = asyncLogProvider.getLog( \"REQUEST\" );\n@@ -76,9 +71,8 @@ public class AsyncRequestLog\n         // %h %l %user [%t{dd/MMM/yyyy:HH:mm:ss Z}] \"%r\" %s %b \"%i{Referer}\" \"%i{User-Agent}\" %D\n         String remoteHost = swallowExceptions( request, HttpServletRequest::getRemoteHost );\n         String user = swallowExceptions( request, HttpServletRequest::getRemoteUser );\n-        String requestURL = swallowExceptions( request, HttpServletRequest::getRequestURI ) + \"?\" +\n-                swallowExceptions( request, HttpServletRequest::getQueryString );\n-        int statusCode = response.getStatus();\n+        String requestURL = swallowExceptions( request, HttpServletRequest::getRequestURI ) + \"?\" + swallowExceptions( request, HttpServletRequest::getQueryString );\n+    int statusCode = response.getStatus();\n         long length = response.getContentLength();\n         String referer = swallowExceptions( request, r -> r.getHeader( \"Referer\" ) );\n         String userAgent = swallowExceptions( request, r -> r.getHeader( \"User-Agent\" ) );\n@@ -87,18 +81,12 @@ public class AsyncRequestLog\n         long serviceTime = requestTimeStamp < 0 ? -1 : now - requestTimeStamp;\n \n         log.info( \"%s - %s [%tc] \\\"%s\\\" %s %s \\\"%s\\\" \\\"%s\\\" %s\",\n-                defaultString( remoteHost ),\n-                defaultString( user ),\n-                now,\n-                defaultString( requestURL ),\n-                statusCode,\n-                length,\n-                defaultString( referer ),\n-                defaultString( userAgent ),\n-                serviceTime );\n+                defaultString( remoteHost ), defaultString( user ), now,\n+                defaultString( requestURL ), statusCode, length,\n+                defaultString( referer ), defaultString( userAgent ), serviceTime );\n     }\n \n-    private <T> T swallowExceptions( HttpServletRequest outerRequest, Function<HttpServletRequest, T> function )\n+    private <T> T swallowExceptions( HttpServletRequest outerRequest, Function<HttpServletRequest,T> function )\n     {\n         try\n         {\n@@ -133,4 +121,4 @@ public class AsyncRequestLog\n     public void eventCount( long count )\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "290",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/290/UpdateHyperLogLogPartParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/290/UpdateHyperLogLogPartParam.java\nindex 8b114f6191f..b8188237f81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/290/UpdateHyperLogLogPartParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/290/UpdateHyperLogLogPartParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.spark.ml.psf.hyperanf;\n \n import com.clearspring.analytics.stream.cardinality.HyperLogLogPlus;\n@@ -54,11 +55,17 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n     return updates;\n   }\n \n-  public long[] getNodes() {return nodes;}\n+  public long[] getNodes() {\n+    return nodes;\n+  }\n \n-  public int getSp() {return sp;}\n+  public int getSp() {\n+    return sp;\n+  }\n \n-  public int getP() {return p;}\n+  public int getP() {\n+    return p;\n+  }\n \n   public void clear() {\n     updates = null;\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/290/UpdateHyperLogLogPartParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/290/UpdateHyperLogLogPartParam.java\nindex 8b114f6191f..d5fe204a906 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/290/UpdateHyperLogLogPartParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/290/UpdateHyperLogLogPartParam.java\n@@ -32,12 +32,11 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n   private int p;\n   private int sp;\n \n-  public UpdateHyperLogLogPartParam(int matrixId, PartitionKey pkey,\n-                                    Long2ObjectOpenHashMap<HyperLogLogPlus> updates,\n+  public UpdateHyperLogLogPartParam(int matrixId, PartitionKey pkey, Long2ObjectOpenHashMap<HyperLogLogPlus> updates,\n                                     int p, int sp,\n                                     long[] nodes, int startIndex,\n                                     int endIndex) {\n-    super(matrixId, pkey);\n+  super(matrixId, pkey);\n     this.updates = updates;\n     this.nodes = nodes;\n     this.p = p;\n@@ -54,11 +53,17 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n     return updates;\n   }\n \n-  public long[] getNodes() {return nodes;}\n+  public long[] getNodes() {\n+  return nodes;\n+  }\n \n-  public int getSp() {return sp;}\n+  public int getSp() {\n+  return sp;\n+  }\n \n-  public int getP() {return p;}\n+  public int getP() {\n+  return p;\n+  }\n \n   public void clear() {\n     updates = null;\n@@ -96,8 +101,7 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n     sp = buf.readInt();\n     int size = buf.readInt();\n     updates = new Long2ObjectOpenHashMap<>(size);\n-\n-    try {\n+try {\n       for (int i = 0; i < size; i++) {\n         long node = buf.readLong();\n         int len = buf.readInt();\n@@ -109,4 +113,4 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n       e.printStackTrace();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/290/UpdateHyperLogLogPartParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/290/UpdateHyperLogLogPartParam.java\nindex 8b114f6191f..db14c74bfdd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/290/UpdateHyperLogLogPartParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/290/UpdateHyperLogLogPartParam.java\n@@ -21,10 +21,10 @@ import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n import io.netty.buffer.ByteBuf;\n import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;\n-\n import java.io.IOException;\n \n public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n+\n   private long[] nodes;\n   private int startIndex;\n   private int endIndex;\n@@ -32,11 +32,10 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n   private int p;\n   private int sp;\n \n-  public UpdateHyperLogLogPartParam(int matrixId, PartitionKey pkey,\n-                                    Long2ObjectOpenHashMap<HyperLogLogPlus> updates,\n-                                    int p, int sp,\n-                                    long[] nodes, int startIndex,\n-                                    int endIndex) {\n+  public UpdateHyperLogLogPartParam(int matrixId,\n+                                    PartitionKey pkey,\n+                                    Long2ObjectOpenHashMap<HyperLogLogPlus> updates, int p, int sp,\n+                                    long[] nodes, int startIndex, int endIndex) {\n     super(matrixId, pkey);\n     this.updates = updates;\n     this.nodes = nodes;\n@@ -54,11 +53,17 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n     return updates;\n   }\n \n-  public long[] getNodes() {return nodes;}\n+  public long[] getNodes() {\n+    return nodes;\n+  }\n \n-  public int getSp() {return sp;}\n+  public int getSp() {\n+    return sp;\n+  }\n \n-  public int getP() {return p;}\n+  public int getP() {\n+    return p;\n+  }\n \n   public void clear() {\n     updates = null;\n@@ -78,6 +83,7 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n         long node = nodes[i];\n         HyperLogLogPlus plus = updates.get(node);\n         buf.writeLong(node);\n+\n         byte[] bytes = plus.getBytes();\n         buf.writeInt(bytes.length);\n         buf.writeBytes(bytes);\n@@ -85,7 +91,6 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n     } catch (IOException e) {\n       e.printStackTrace();\n     }\n-\n     clear();\n   }\n \n@@ -94,9 +99,9 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n     super.deserialize(buf);\n     p = buf.readInt();\n     sp = buf.readInt();\n+\n     int size = buf.readInt();\n     updates = new Long2ObjectOpenHashMap<>(size);\n-\n     try {\n       for (int i = 0; i < size; i++) {\n         long node = buf.readLong();\n@@ -109,4 +114,5 @@ public class UpdateHyperLogLogPartParam extends PartitionUpdateParam {\n       e.printStackTrace();\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "563",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/563/HazelcastLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/563/HazelcastLogger.java\nindex 827bcfda990..102d015f993 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/563/HazelcastLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/563/HazelcastLogger.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import com.hazelcast.logging.AbstractLogger;\n@@ -31,82 +32,77 @@ import org.neo4j.logging.NullLogger;\n \n public class HazelcastLogger extends AbstractLogger\n {\n-    private final Log log;\n-    private final Level minLevel;\n+  private final Log log;\n+  private final Level minLevel;\n \n-    HazelcastLogger( Log log, Level minLevel )\n-    {\n-        this.log = log;\n-        this.minLevel = minLevel;\n-    }\n-\n-    @Override\n-    public void log( Level level, String message )\n-    {\n-        getLogger( level ).log( message );\n-    }\n+  HazelcastLogger(Log log, Level minLevel)\n+  {\n+    this.log = log;\n+    this.minLevel = minLevel;\n+  }\n \n-    @Override\n-    public void log( Level level, String message, Throwable thrown )\n-    {\n-        getLogger( level ).log( message, thrown );\n-    }\n+  @Override\n+  public void log(Level level, String message)\n+  {\n+    getLogger(level).log(message);\n+  }\n \n-    @Override\n-    public void log( LogEvent logEvent )\n-    {\n-        LogRecord logRecord = logEvent.getLogRecord();\n+  @Override\n+  public void log(Level level, String message, Throwable thrown)\n+  {\n+    getLogger(level).log(message, thrown);\n+  }\n \n-        String message = \"Member[\" + logEvent.getMember() + \"] \" + logRecord.getMessage();\n+  @Override\n+  public void log(LogEvent logEvent)\n+  {\n+    LogRecord logRecord = logEvent.getLogRecord();\n \n-        Logger logger = getLogger( logRecord.getLevel() );\n-        Throwable thrown = logRecord.getThrown();\n+    String message = \"Member[\" + logEvent.getMember() + \"] \" + logRecord.getMessage();\n \n-        if ( thrown == null )\n-        {\n-            logger.log( message );\n-        }\n-        else\n-        {\n-            logger.log( message, thrown );\n-        }\n-    }\n+    Logger logger = getLogger(logRecord.getLevel());\n+    Throwable thrown = logRecord.getThrown();\n \n-    @Override\n-    public Level getLevel()\n+    if (thrown == null)\n     {\n-        return minLevel;\n-    }\n-\n-    @Override\n-    public boolean isLoggable( Level level )\n+      logger.log(message);\n+    } else\n     {\n-        return level.intValue() >= minLevel.intValue();\n+      logger.log(message, thrown);\n     }\n+  }\n+\n+  @Override\n+  public Level getLevel()\n+  {\n+    return minLevel;\n+  }\n+\n+  @Override\n+  public boolean isLoggable(Level level)\n+  {\n+    return level.intValue() >= minLevel.intValue();\n+  }\n+\n+  private Logger getLogger(Level level)\n+  {\n+    int levelValue = level.intValue();\n \n-    private Logger getLogger( Level level )\n+    if (levelValue < minLevel.intValue())\n+    {\n+      return NullLogger.getInstance();\n+    } else if (levelValue <= Level.FINE.intValue())\n+    {\n+      return log.debugLogger();\n+    } else if (levelValue <= Level.INFO.intValue())\n+    {\n+      return log.infoLogger();\n+    } else if (levelValue <= Level.WARNING.intValue())\n+    {\n+      return log.warnLogger();\n+    } else\n     {\n-        int levelValue = level.intValue();\n-\n-        if ( levelValue < minLevel.intValue() )\n-        {\n-            return NullLogger.getInstance();\n-        }\n-        else if ( levelValue <= Level.FINE.intValue() )\n-        {\n-            return log.debugLogger();\n-        }\n-        else if ( levelValue <= Level.INFO.intValue() )\n-        {\n-            return log.infoLogger();\n-        }\n-        else if ( levelValue <= Level.WARNING.intValue() )\n-        {\n-            return log.warnLogger();\n-        }\n-        else\n-        {\n-            return log.errorLogger();\n-        }\n+      return log.errorLogger();\n     }\n+  }\n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/563/HazelcastLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/563/HazelcastLogger.java\nindex 827bcfda990..685046331db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/563/HazelcastLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/563/HazelcastLogger.java\n@@ -56,13 +56,10 @@ public class HazelcastLogger extends AbstractLogger\n     public void log( LogEvent logEvent )\n     {\n         LogRecord logRecord = logEvent.getLogRecord();\n-\n-        String message = \"Member[\" + logEvent.getMember() + \"] \" + logRecord.getMessage();\n-\n-        Logger logger = getLogger( logRecord.getLevel() );\n+String message = \"Member[\" + logEvent.getMember() + \"] \" + logRecord.getMessage();\n+Logger logger = getLogger( logRecord.getLevel() );\n         Throwable thrown = logRecord.getThrown();\n-\n-        if ( thrown == null )\n+if ( thrown == null )\n         {\n             logger.log( message );\n         }\n@@ -87,8 +84,7 @@ public class HazelcastLogger extends AbstractLogger\n     private Logger getLogger( Level level )\n     {\n         int levelValue = level.intValue();\n-\n-        if ( levelValue < minLevel.intValue() )\n+if ( levelValue < minLevel.intValue() )\n         {\n             return NullLogger.getInstance();\n         }\n@@ -109,4 +105,4 @@ public class HazelcastLogger extends AbstractLogger\n             return log.errorLogger();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2893",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "138",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2893/UpgradableDatabase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2893/UpgradableDatabase.java\nindex 00c49bf709b..4d127580608 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2893/UpgradableDatabase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2893/UpgradableDatabase.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.File;\n@@ -40,136 +41,133 @@ import org.neo4j.kernel.recovery.LogTailScanner;\n  */\n public class UpgradableDatabase\n {\n-    private final StoreVersionCheck storeVersionCheck;\n-    private final RecordFormats format;\n-    private final LogTailScanner tailScanner;\n+  private final StoreVersionCheck storeVersionCheck;\n+  private final RecordFormats format;\n+  private final LogTailScanner tailScanner;\n+\n+  public UpgradableDatabase(StoreVersionCheck storeVersionCheck, RecordFormats format,\n+                            LogTailScanner tailScanner)\n+  {\n+    this.storeVersionCheck = storeVersionCheck;\n+    this.format = format;\n+    this.tailScanner = tailScanner;\n+  }\n \n-    public UpgradableDatabase( StoreVersionCheck storeVersionCheck, RecordFormats format,\n-            LogTailScanner tailScanner )\n+  /**\n+   * Assumed to only be called if {@link #hasCurrentVersion(File)} returns {@code false}.\n+   *\n+   * @param storeDirectory the store to check for upgradability is in.\n+   * @return the {@link RecordFormats} the current store (which is upgradable) is currently in.\n+   * @throws UpgradeMissingStoreFilesException        if store cannot be upgraded due to some store files are missing.\n+   * @throws UpgradingStoreVersionNotFoundException   if store cannot be upgraded due to store\n+   *                                                  version cannot be determined.\n+   * @throws UnexpectedUpgradingStoreVersionException if store cannot be upgraded due to an unexpected store\n+   *                                                  version found.\n+   * @throws UnexpectedUpgradingStoreFormatException  if store cannot be upgraded due to an unexpected store\n+   *                                                  format found.\n+   * @throws DatabaseNotCleanlyShutDownException      if store cannot be upgraded due to not being cleanly shut down.\n+   */\n+  public RecordFormats checkUpgradeable(File storeDirectory)\n+  {\n+    Result result = storeVersionCheck.hasVersion(new File(storeDirectory, MetaDataStore.DEFAULT_NAME),\n+        format.storeVersion());\n+    if (result.outcome.isSuccessful())\n     {\n-        this.storeVersionCheck = storeVersionCheck;\n-        this.format = format;\n-        this.tailScanner = tailScanner;\n+      // This store already has the format that we want\n+      // Although this method should not have been called in this case.\n+      return format;\n     }\n \n-    /**\n-     * Assumed to only be called if {@link #hasCurrentVersion(File)} returns {@code false}.\n-     *\n-     * @param storeDirectory the store to check for upgradability is in.\n-     * @return the {@link RecordFormats} the current store (which is upgradable) is currently in.\n-     * @throws UpgradeMissingStoreFilesException if store cannot be upgraded due to some store files are missing.\n-     * @throws UpgradingStoreVersionNotFoundException if store cannot be upgraded due to store\n-     * version cannot be determined.\n-     * @throws UnexpectedUpgradingStoreVersionException if store cannot be upgraded due to an unexpected store\n-     * version found.\n-     * @throws UnexpectedUpgradingStoreFormatException if store cannot be upgraded due to an unexpected store\n-     * format found.\n-     * @throws DatabaseNotCleanlyShutDownException if store cannot be upgraded due to not being cleanly shut down.\n-     */\n-    public RecordFormats checkUpgradeable( File storeDirectory )\n+    RecordFormats fromFormat;\n+    try\n     {\n-        Result result = storeVersionCheck.hasVersion( new File( storeDirectory, MetaDataStore.DEFAULT_NAME ),\n-                format.storeVersion() );\n-        if ( result.outcome.isSuccessful() )\n-        {\n-            // This store already has the format that we want\n-            // Although this method should not have been called in this case.\n-            return format;\n-        }\n-\n-        RecordFormats fromFormat;\n-        try\n-        {\n-            fromFormat = RecordFormatSelector.selectForVersion( result.actualVersion );\n+      fromFormat = RecordFormatSelector.selectForVersion(result.actualVersion);\n \n-            // If we are trying to open an enterprise store when configured to use community format, then inform the user\n-            // of the config setting to change since downgrades aren't possible but the store can still be opened.\n-            if ( FormatFamily.isLowerFamilyFormat( format, fromFormat ) )\n-            {\n-                throw new StoreUpgrader.UnexpectedUpgradingStoreFormatException();\n-            }\n+      // If we are trying to open an enterprise store when configured to use community format, then inform the user\n+      // of the config setting to change since downgrades aren't possible but the store can still be opened.\n+      if (FormatFamily.isLowerFamilyFormat(format, fromFormat))\n+      {\n+        throw new StoreUpgrader.UnexpectedUpgradingStoreFormatException();\n+      }\n \n-            if ( FormatFamily.isSameFamily( fromFormat, format ) && (fromFormat.generation() > format.generation()) )\n-            {\n-                // Tried to downgrade, that isn't supported\n-                result = new Result( Outcome.attemptedStoreDowngrade, fromFormat.storeVersion(),\n-                        new File( storeDirectory, MetaDataStore.DEFAULT_NAME ).getAbsolutePath() );\n-            }\n-            else\n-            {\n-                result = checkCleanShutDownByCheckPoint();\n-                if ( result.outcome.isSuccessful() )\n-                {\n-                    return fromFormat;\n-                }\n-            }\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            result = new Result( Outcome.unexpectedStoreVersion, result.actualVersion, result.storeFilename );\n-        }\n-\n-        switch ( result.outcome )\n+      if (FormatFamily.isSameFamily(fromFormat, format) && (fromFormat.generation() > format.generation()))\n+      {\n+        // Tried to downgrade, that isn't supported\n+        result = new Result(Outcome.attemptedStoreDowngrade, fromFormat.storeVersion(),\n+            new File(storeDirectory, MetaDataStore.DEFAULT_NAME).getAbsolutePath());\n+      } else\n+      {\n+        result = checkCleanShutDownByCheckPoint();\n+        if (result.outcome.isSuccessful())\n         {\n-        case missingStoreFile:\n-            throw new StoreUpgrader.UpgradeMissingStoreFilesException( getPathToStoreFile( storeDirectory, result ) );\n-        case storeVersionNotFound:\n-            throw new StoreUpgrader.UpgradingStoreVersionNotFoundException(\n-                    getPathToStoreFile( storeDirectory, result ) );\n-        case attemptedStoreDowngrade:\n-            throw new StoreUpgrader.AttemptedDowngradeException();\n-        case unexpectedStoreVersion:\n-            throw new StoreUpgrader.UnexpectedUpgradingStoreVersionException( result.actualVersion, format.storeVersion() );\n-        case storeNotCleanlyShutDown:\n-            throw new StoreUpgrader.DatabaseNotCleanlyShutDownException();\n-        default:\n-            throw new IllegalArgumentException( \"Unexpected outcome: \" + result.outcome.name() );\n+          return fromFormat;\n         }\n-    }\n-\n-    private Result checkCleanShutDownByCheckPoint()\n+      }\n+    } catch (IllegalArgumentException e)\n     {\n-        // check version\n-        try\n-        {\n-            if ( !tailScanner.getTailInformation().commitsAfterLastCheckpoint() )\n-            {\n-                return new Result( Result.Outcome.ok, null, null );\n-            }\n-        }\n-        catch ( Throwable throwable )\n-        {\n-            // ignore exception and return db not cleanly shutdown\n-        }\n-\n-        return new Result( Result.Outcome.storeNotCleanlyShutDown, null, null );\n+      result = new Result(Outcome.unexpectedStoreVersion, result.actualVersion, result.storeFilename);\n     }\n \n-    private String getPathToStoreFile( File storeDirectory, Result result )\n+    switch (result.outcome)\n     {\n-        return new File( storeDirectory, result.storeFilename ).getAbsolutePath();\n+      case missingStoreFile:\n+        throw new StoreUpgrader.UpgradeMissingStoreFilesException(getPathToStoreFile(storeDirectory, result));\n+      case storeVersionNotFound:\n+        throw new StoreUpgrader.UpgradingStoreVersionNotFoundException(\n+            getPathToStoreFile(storeDirectory, result));\n+      case attemptedStoreDowngrade:\n+        throw new StoreUpgrader.AttemptedDowngradeException();\n+      case unexpectedStoreVersion:\n+        throw new StoreUpgrader.UnexpectedUpgradingStoreVersionException(result.actualVersion, format.storeVersion());\n+      case storeNotCleanlyShutDown:\n+        throw new StoreUpgrader.DatabaseNotCleanlyShutDownException();\n+      default:\n+        throw new IllegalArgumentException(\"Unexpected outcome: \" + result.outcome.name());\n     }\n+  }\n \n-    boolean hasCurrentVersion( File storeDir )\n+  private Result checkCleanShutDownByCheckPoint()\n+  {\n+    // check version\n+    try\n     {\n-        File neoStore = new File( storeDir, MetaDataStore.DEFAULT_NAME );\n-        Result result = storeVersionCheck.hasVersion( neoStore, format.storeVersion() );\n-        switch ( result.outcome )\n-        {\n-        case ok:\n-        case missingStoreFile: // let's assume the db is empty\n-            return true;\n-        case storeVersionNotFound:\n-        case unexpectedStoreVersion:\n-        case attemptedStoreDowngrade:\n-            return false;\n-        default:\n-            throw new IllegalArgumentException( \"Unknown outcome: \" + result.outcome.name() );\n-        }\n+      if (!tailScanner.getTailInformation().commitsAfterLastCheckpoint())\n+      {\n+        return new Result(Result.Outcome.ok, null, null);\n+      }\n+    } catch (Throwable throwable)\n+    {\n+      // ignore exception and return db not cleanly shutdown\n     }\n \n-    public String currentVersion()\n+    return new Result(Result.Outcome.storeNotCleanlyShutDown, null, null);\n+  }\n+\n+  private String getPathToStoreFile(File storeDirectory, Result result)\n+  {\n+    return new File(storeDirectory, result.storeFilename).getAbsolutePath();\n+  }\n+\n+  boolean hasCurrentVersion(File storeDir)\n+  {\n+    File neoStore = new File(storeDir, MetaDataStore.DEFAULT_NAME);\n+    Result result = storeVersionCheck.hasVersion(neoStore, format.storeVersion());\n+    switch (result.outcome)\n     {\n-        return format.storeVersion();\n+      case ok:\n+      case missingStoreFile: // let's assume the db is empty\n+        return true;\n+      case storeVersionNotFound:\n+      case unexpectedStoreVersion:\n+      case attemptedStoreDowngrade:\n+        return false;\n+      default:\n+        throw new IllegalArgumentException(\"Unknown outcome: \" + result.outcome.name());\n     }\n+  }\n+\n+  public String currentVersion()\n+  {\n+    return format.storeVersion();\n+  }\n }\n",
            "diff_size": 180
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2893/UpgradableDatabase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2893/UpgradableDatabase.java\nindex 00c49bf709b..90fedcd4caf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2893/UpgradableDatabase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2893/UpgradableDatabase.java\n@@ -68,9 +68,8 @@ public class UpgradableDatabase\n      */\n     public RecordFormats checkUpgradeable( File storeDirectory )\n     {\n-        Result result = storeVersionCheck.hasVersion( new File( storeDirectory, MetaDataStore.DEFAULT_NAME ),\n-                format.storeVersion() );\n-        if ( result.outcome.isSuccessful() )\n+        Result result = storeVersionCheck.hasVersion( new File( storeDirectory, MetaDataStore.DEFAULT_NAME ), format.storeVersion() );\n+if ( result.outcome.isSuccessful() )\n         {\n             // This store already has the format that we want\n             // Although this method should not have been called in this case.\n@@ -92,8 +91,7 @@ public class UpgradableDatabase\n             if ( FormatFamily.isSameFamily( fromFormat, format ) && (fromFormat.generation() > format.generation()) )\n             {\n                 // Tried to downgrade, that isn't supported\n-                result = new Result( Outcome.attemptedStoreDowngrade, fromFormat.storeVersion(),\n-                        new File( storeDirectory, MetaDataStore.DEFAULT_NAME ).getAbsolutePath() );\n+                result = new Result( Outcome.attemptedStoreDowngrade, fromFormat.storeVersion(), new File( storeDirectory, MetaDataStore.DEFAULT_NAME ).getAbsolutePath() );\n             }\n             else\n             {\n@@ -114,9 +112,8 @@ public class UpgradableDatabase\n         case missingStoreFile:\n             throw new StoreUpgrader.UpgradeMissingStoreFilesException( getPathToStoreFile( storeDirectory, result ) );\n         case storeVersionNotFound:\n-            throw new StoreUpgrader.UpgradingStoreVersionNotFoundException(\n-                    getPathToStoreFile( storeDirectory, result ) );\n-        case attemptedStoreDowngrade:\n+            throw new StoreUpgrader.UpgradingStoreVersionNotFoundException( getPathToStoreFile( storeDirectory, result ) );\n+    case attemptedStoreDowngrade:\n             throw new StoreUpgrader.AttemptedDowngradeException();\n         case unexpectedStoreVersion:\n             throw new StoreUpgrader.UnexpectedUpgradingStoreVersionException( result.actualVersion, format.storeVersion() );\n@@ -172,4 +169,4 @@ public class UpgradableDatabase\n     {\n         return format.storeVersion();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
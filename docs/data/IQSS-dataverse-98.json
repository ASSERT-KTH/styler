{
    "project_name": "IQSS-dataverse",
    "error_id": "98",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "@Entity\n@Table(\n\tuniqueConstraints = @UniqueConstraint(columnNames={\"assigneeIdentifier\",\"role_id\",\"definitionPoint_id\"})\n      , indexes = {@Index(columnList=\"assigneeidentifier\")\n\t\t, @Index(columnList=\"definitionpoint_id\")\n\t\t, @Index(columnList=\"role_id\")}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/98/RoleAssignment.java\nindex 22d2679efb6..b1bee5a8b2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/98/RoleAssignment.java\n@@ -25,7 +25,7 @@ import javax.persistence.UniqueConstraint;\n  */\n @Entity\n @Table(\n-\tuniqueConstraints = @UniqueConstraint(columnNames={\"assigneeIdentifier\",\"role_id\",\"definitionPoint_id\"})\n+uniqueConstraints = @UniqueConstraint(columnNames={\"assigneeIdentifier\",\"role_id\",\"definitionPoint_id\"})\n       , indexes = {@Index(columnList=\"assigneeidentifier\")\n \t\t, @Index(columnList=\"definitionpoint_id\")\n \t\t, @Index(columnList=\"role_id\")}\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/98/RoleAssignment.java\nindex 22d2679efb6..ee1ead938fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/98/RoleAssignment.java\n@@ -21,128 +21,132 @@ import javax.persistence.UniqueConstraint;\n  * A role of a user in a Dataverse. A User may have many roles in a given Dataverse.\n  * This is a realization of a Many-to-Many relationship\n  * between users and dataverses, with roles as an extra column.\n+ *\n  * @author michael\n  */\n @Entity\n @Table(\n-\tuniqueConstraints = @UniqueConstraint(columnNames={\"assigneeIdentifier\",\"role_id\",\"definitionPoint_id\"})\n-      , indexes = {@Index(columnList=\"assigneeidentifier\")\n-\t\t, @Index(columnList=\"definitionpoint_id\")\n-\t\t, @Index(columnList=\"role_id\")}\n+  uniqueConstraints = @UniqueConstraint(columnNames = {\"assigneeIdentifier\", \"role_id\", \"definitionPoint_id\"})\n+  , indexes = {@Index(columnList = \"assigneeidentifier\")\n+  , @Index(columnList = \"definitionpoint_id\")\n+  , @Index(columnList = \"role_id\")}\n )\n @NamedQueries({\n-\t@NamedQuery( name  = \"RoleAssignment.listByAssigneeIdentifier_DefinitionPointId\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.definitionPoint.id=:definitionPointId\" ),\n-    \t@NamedQuery( name  = \"RoleAssignment.listByAssigneeIdentifier_DefinitionPointId_RoleId\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.definitionPoint.id=:definitionPointId and r.role.id=:roleId\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByAssigneeIdentifier\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByAssigneeIdentifiers\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier in :assigneeIdentifiers AND r.definitionPoint.id in :definitionPointIds\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByDefinitionPointId\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.definitionPoint.id=:definitionPointId\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByRoleId\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.role.id=:roleId\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByPrivateUrlToken\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.privateUrlToken=:privateUrlToken\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.deleteByAssigneeIdentifier_RoleIdDefinition_PointId\",\n-\t\t\t\t query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.role.id=:roleId AND r.definitionPoint.id=:definitionPointId\"),\n-        @NamedQuery( name = \"RoleAssignment.deleteAllByAssigneeIdentifier\",\n-\t\t\t\t query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier\"),\n-        @NamedQuery( name = \"RoleAssignment.deleteAllByAssigneeIdentifier_Definition_PointId_RoleType\",\n-\t\t\t\t query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.role.id=:roleId and r.definitionPoint.id=:definitionPointId\")\n+  @NamedQuery(name = \"RoleAssignment.listByAssigneeIdentifier_DefinitionPointId\",\n+    query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.definitionPoint.id=:definitionPointId\"),\n+  @NamedQuery(name = \"RoleAssignment.listByAssigneeIdentifier_DefinitionPointId_RoleId\",\n+    query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.definitionPoint.id=:definitionPointId and r.role.id=:roleId\"),\n+  @NamedQuery(name = \"RoleAssignment.listByAssigneeIdentifier\",\n+    query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier\"),\n+  @NamedQuery(name = \"RoleAssignment.listByAssigneeIdentifiers\",\n+    query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier in :assigneeIdentifiers AND r.definitionPoint.id in :definitionPointIds\"),\n+  @NamedQuery(name = \"RoleAssignment.listByDefinitionPointId\",\n+    query = \"SELECT r FROM RoleAssignment r WHERE r.definitionPoint.id=:definitionPointId\"),\n+  @NamedQuery(name = \"RoleAssignment.listByRoleId\",\n+    query = \"SELECT r FROM RoleAssignment r WHERE r.role.id=:roleId\"),\n+  @NamedQuery(name = \"RoleAssignment.listByPrivateUrlToken\",\n+    query = \"SELECT r FROM RoleAssignment r WHERE r.privateUrlToken=:privateUrlToken\"),\n+  @NamedQuery(name = \"RoleAssignment.deleteByAssigneeIdentifier_RoleIdDefinition_PointId\",\n+    query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.role.id=:roleId AND r.definitionPoint.id=:definitionPointId\"),\n+  @NamedQuery(name = \"RoleAssignment.deleteAllByAssigneeIdentifier\",\n+    query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier\"),\n+  @NamedQuery(name = \"RoleAssignment.deleteAllByAssigneeIdentifier_Definition_PointId_RoleType\",\n+    query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.role.id=:roleId and r.definitionPoint.id=:definitionPointId\")\n })\n public class RoleAssignment implements java.io.Serializable {\n-\t@Id\n-\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n-\tprivate Long id;\n-\t\n-\t@Column( nullable=false )\n-\tprivate String assigneeIdentifier;\n-\t\t\n-\t@ManyToOne( cascade = {CascadeType.MERGE} )\n-\t@JoinColumn( nullable=false )\n-\tprivate DataverseRole role;\n-\t\n-\t@ManyToOne( cascade = {CascadeType.MERGE} ) \n-\t@JoinColumn( nullable=false )\n-\tprivate DvObject definitionPoint;\n-\n-    @Column(nullable = true)\n-    private String privateUrlToken;\n-\t\n-\tpublic RoleAssignment() {}\n-\t\t\n-\tpublic RoleAssignment(DataverseRole aRole, RoleAssignee anAssignee, DvObject aDefinitionPoint, String privateUrlToken) {\n-        role = aRole;\n-        assigneeIdentifier = anAssignee.getIdentifier();\n-        definitionPoint = aDefinitionPoint;\n-        this.privateUrlToken = privateUrlToken;\n-    }\n-\t\n-\tpublic Long getId() {\n-\t\treturn id;\n-\t}\n+  @Id\n+  @GeneratedValue(strategy = GenerationType.IDENTITY)\n+  private Long id;\n \n-\tpublic void setId(Long id) {\n-\t\tthis.id = id;\n-\t}\n+  @Column(nullable = false)\n+  private String assigneeIdentifier;\n \n-    public String getAssigneeIdentifier() {\n-        return assigneeIdentifier;\n-    }\n+  @ManyToOne(cascade = {CascadeType.MERGE})\n+  @JoinColumn(nullable = false)\n+  private DataverseRole role;\n \n-    public void setAssigneeIdentifier(String assigneeIdentifier) {\n-        this.assigneeIdentifier = assigneeIdentifier;\n-    }\n+  @ManyToOne(cascade = {CascadeType.MERGE})\n+  @JoinColumn(nullable = false)\n+  private DvObject definitionPoint;\n+\n+  @Column(nullable = true)\n+  private String privateUrlToken;\n+\n+  public RoleAssignment() {\n+  }\n+\n+  public RoleAssignment(DataverseRole aRole, RoleAssignee anAssignee, DvObject aDefinitionPoint,\n+                        String privateUrlToken) {\n+    role = aRole;\n+    assigneeIdentifier = anAssignee.getIdentifier();\n+    definitionPoint = aDefinitionPoint;\n+    this.privateUrlToken = privateUrlToken;\n+  }\n+\n+  public Long getId() {\n+    return id;\n+  }\n+\n+  public void setId(Long id) {\n+    this.id = id;\n+  }\n \n-\tpublic DataverseRole getRole() {\n-\t\treturn role;\n-\t}\n+  public String getAssigneeIdentifier() {\n+    return assigneeIdentifier;\n+  }\n \n-\tpublic void setRole(DataverseRole role) {\n-\t\tthis.role = role;\n-\t}\n+  public void setAssigneeIdentifier(String assigneeIdentifier) {\n+    this.assigneeIdentifier = assigneeIdentifier;\n+  }\n \n-\tpublic DvObject getDefinitionPoint() {\n-\t\treturn definitionPoint;\n-\t}\n+  public DataverseRole getRole() {\n+    return role;\n+  }\n \n-\tpublic void setDefinitionPoint(DvObject definitionPoint) {\n-\t\tthis.definitionPoint = definitionPoint;\n-\t}\n+  public void setRole(DataverseRole role) {\n+    this.role = role;\n+  }\n \n-    public String getPrivateUrlToken() {\n-        return privateUrlToken;\n+  public DvObject getDefinitionPoint() {\n+    return definitionPoint;\n+  }\n+\n+  public void setDefinitionPoint(DvObject definitionPoint) {\n+    this.definitionPoint = definitionPoint;\n+  }\n+\n+  public String getPrivateUrlToken() {\n+    return privateUrlToken;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int hash = 7;\n+    hash = 97 * hash + Objects.hashCode(role);\n+    hash = 97 * hash + Objects.hashCode(assigneeIdentifier);\n+    return hash;\n+  }\n+\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (obj == null) {\n+      return false;\n     }\n+    if (!(obj instanceof RoleAssignment)) {\n+      return false;\n+    }\n+    final RoleAssignment other = (RoleAssignment) obj;\n+\n+    return (Objects.equals(getRole(), other.getRole())\n+      && Objects.equals(getAssigneeIdentifier(), other.getAssigneeIdentifier())\n+      && Objects.equals(getDefinitionPoint(), other.getDefinitionPoint()));\n+\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"RoleAssignment{\" + \"id=\" + id + \", assignee=\" + assigneeIdentifier + \", role=\" + role +\n+      \", definitionPoint=\" + definitionPoint + '}';\n+  }\n \n-\t@Override\n-\tpublic int hashCode() {\n-\t\tint hash = 7;\n-\t\thash = 97 * hash + Objects.hashCode(role);\n-\t\thash = 97 * hash + Objects.hashCode(assigneeIdentifier);\n-\t\treturn hash;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (obj == null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif ( ! (obj instanceof RoleAssignment) ) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tfinal RoleAssignment other = (RoleAssignment) obj;\n-\t\t\n-\t\treturn ( Objects.equals(getRole(), other.getRole() )\n-\t\t\t\t && Objects.equals(getAssigneeIdentifier(), other.getAssigneeIdentifier())\n-\t\t\t\t\t&& Objects.equals(getDefinitionPoint(), other.getDefinitionPoint()));\n-\t\t\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"RoleAssignment{\" + \"id=\" + id + \", assignee=\" + assigneeIdentifier + \", role=\" + role + \", definitionPoint=\" + definitionPoint + '}';\n-\t}\n-\t\n }\n",
            "diff_size": 167
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/98/RoleAssignment.java\nindex 22d2679efb6..4024a6651f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/98/RoleAssignment.java\n@@ -23,70 +23,68 @@ import javax.persistence.UniqueConstraint;\n  * between users and dataverses, with roles as an extra column.\n  * @author michael\n  */\n+\n+\n @Entity\n-@Table(\n-\tuniqueConstraints = @UniqueConstraint(columnNames={\"assigneeIdentifier\",\"role_id\",\"definitionPoint_id\"})\n-      , indexes = {@Index(columnList=\"assigneeidentifier\")\n-\t\t, @Index(columnList=\"definitionpoint_id\")\n-\t\t, @Index(columnList=\"role_id\")}\n-)\n+@Table(uniqueConstraints = @UniqueConstraint(columnNames = {\"assigneeIdentifier\", \"role_id\", \"definitionPoint_id\"}),\n+       indexes = {@Index(columnList = \"assigneeidentifier\"), @Index(columnList = \"definitionpoint_id\"), @Index(columnList = \"role_id\")})\n @NamedQueries({\n-\t@NamedQuery( name  = \"RoleAssignment.listByAssigneeIdentifier_DefinitionPointId\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.definitionPoint.id=:definitionPointId\" ),\n-    \t@NamedQuery( name  = \"RoleAssignment.listByAssigneeIdentifier_DefinitionPointId_RoleId\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.definitionPoint.id=:definitionPointId and r.role.id=:roleId\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByAssigneeIdentifier\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByAssigneeIdentifiers\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier in :assigneeIdentifiers AND r.definitionPoint.id in :definitionPointIds\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByDefinitionPointId\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.definitionPoint.id=:definitionPointId\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByRoleId\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.role.id=:roleId\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.listByPrivateUrlToken\",\n-\t\t\t\t query = \"SELECT r FROM RoleAssignment r WHERE r.privateUrlToken=:privateUrlToken\" ),\n-\t@NamedQuery( name  = \"RoleAssignment.deleteByAssigneeIdentifier_RoleIdDefinition_PointId\",\n-\t\t\t\t query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.role.id=:roleId AND r.definitionPoint.id=:definitionPointId\"),\n-        @NamedQuery( name = \"RoleAssignment.deleteAllByAssigneeIdentifier\",\n-\t\t\t\t query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier\"),\n-        @NamedQuery( name = \"RoleAssignment.deleteAllByAssigneeIdentifier_Definition_PointId_RoleType\",\n-\t\t\t\t query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.role.id=:roleId and r.definitionPoint.id=:definitionPointId\")\n+    @NamedQuery(name = \"RoleAssignment.listByAssigneeIdentifier_DefinitionPointId\",\n+        query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.definitionPoint.id=:definitionPointId\"),\n+    @NamedQuery(name = \"RoleAssignment.listByAssigneeIdentifier_DefinitionPointId_RoleId\",\n+        query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.definitionPoint.id=:definitionPointId and r.role.id=:roleId\"),\n+    @NamedQuery(name = \"RoleAssignment.listByAssigneeIdentifier\",\n+        query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier\"),\n+    @NamedQuery(name = \"RoleAssignment.listByAssigneeIdentifiers\",\n+        query = \"SELECT r FROM RoleAssignment r WHERE r.assigneeIdentifier in :assigneeIdentifiers AND r.definitionPoint.id in :definitionPointIds\"),\n+    @NamedQuery(name = \"RoleAssignment.listByDefinitionPointId\",\n+        query = \"SELECT r FROM RoleAssignment r WHERE r.definitionPoint.id=:definitionPointId\"),\n+    @NamedQuery(name = \"RoleAssignment.listByRoleId\", query = \"SELECT r FROM RoleAssignment r WHERE r.role.id=:roleId\"),\n+    @NamedQuery(name = \"RoleAssignment.listByPrivateUrlToken\",\n+        query = \"SELECT r FROM RoleAssignment r WHERE r.privateUrlToken=:privateUrlToken\"),\n+    @NamedQuery(name = \"RoleAssignment.deleteByAssigneeIdentifier_RoleIdDefinition_PointId\",\n+        query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.role.id=:roleId AND r.definitionPoint.id=:definitionPointId\"),\n+    @NamedQuery(name = \"RoleAssignment.deleteAllByAssigneeIdentifier\",\n+        query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier\"),\n+    @NamedQuery(name = \"RoleAssignment.deleteAllByAssigneeIdentifier_Definition_PointId_RoleType\",\n+        query = \"DELETE FROM RoleAssignment r WHERE r.assigneeIdentifier=:assigneeIdentifier AND r.role.id=:roleId and r.definitionPoint.id=:definitionPointId\")\n })\n public class RoleAssignment implements java.io.Serializable {\n-\t@Id\n-\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n-\tprivate Long id;\n-\t\n-\t@Column( nullable=false )\n-\tprivate String assigneeIdentifier;\n-\t\t\n-\t@ManyToOne( cascade = {CascadeType.MERGE} )\n-\t@JoinColumn( nullable=false )\n-\tprivate DataverseRole role;\n-\t\n-\t@ManyToOne( cascade = {CascadeType.MERGE} ) \n-\t@JoinColumn( nullable=false )\n-\tprivate DvObject definitionPoint;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(nullable = false)\n+    private String assigneeIdentifier;\n+\n+    @ManyToOne(cascade = {CascadeType.MERGE})\n+    @JoinColumn(nullable = false)\n+    private DataverseRole role;\n+\n+    @ManyToOne(cascade = {CascadeType.MERGE})\n+    @JoinColumn(nullable = false)\n+    private DvObject definitionPoint;\n \n     @Column(nullable = true)\n     private String privateUrlToken;\n-\t\n-\tpublic RoleAssignment() {}\n-\t\t\n-\tpublic RoleAssignment(DataverseRole aRole, RoleAssignee anAssignee, DvObject aDefinitionPoint, String privateUrlToken) {\n+\n+    public RoleAssignment() {}\n+\n+    public RoleAssignment(DataverseRole aRole, RoleAssignee anAssignee, DvObject aDefinitionPoint, String privateUrlToken) {\n         role = aRole;\n         assigneeIdentifier = anAssignee.getIdentifier();\n         definitionPoint = aDefinitionPoint;\n         this.privateUrlToken = privateUrlToken;\n     }\n-\t\n-\tpublic Long getId() {\n-\t\treturn id;\n-\t}\n \n-\tpublic void setId(Long id) {\n-\t\tthis.id = id;\n-\t}\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n \n     public String getAssigneeIdentifier() {\n         return assigneeIdentifier;\n@@ -96,53 +94,50 @@ public class RoleAssignment implements java.io.Serializable {\n         this.assigneeIdentifier = assigneeIdentifier;\n     }\n \n-\tpublic DataverseRole getRole() {\n-\t\treturn role;\n-\t}\n+    public DataverseRole getRole() {\n+        return role;\n+    }\n \n-\tpublic void setRole(DataverseRole role) {\n-\t\tthis.role = role;\n-\t}\n+    public void setRole(DataverseRole role) {\n+        this.role = role;\n+    }\n \n-\tpublic DvObject getDefinitionPoint() {\n-\t\treturn definitionPoint;\n-\t}\n+    public DvObject getDefinitionPoint() {\n+        return definitionPoint;\n+    }\n \n-\tpublic void setDefinitionPoint(DvObject definitionPoint) {\n-\t\tthis.definitionPoint = definitionPoint;\n-\t}\n+    public void setDefinitionPoint(DvObject definitionPoint) {\n+        this.definitionPoint = definitionPoint;\n+    }\n \n     public String getPrivateUrlToken() {\n         return privateUrlToken;\n     }\n \n-\t@Override\n-\tpublic int hashCode() {\n-\t\tint hash = 7;\n-\t\thash = 97 * hash + Objects.hashCode(role);\n-\t\thash = 97 * hash + Objects.hashCode(assigneeIdentifier);\n-\t\treturn hash;\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (obj == null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif ( ! (obj instanceof RoleAssignment) ) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tfinal RoleAssignment other = (RoleAssignment) obj;\n-\t\t\n-\t\treturn ( Objects.equals(getRole(), other.getRole() )\n-\t\t\t\t && Objects.equals(getAssigneeIdentifier(), other.getAssigneeIdentifier())\n-\t\t\t\t\t&& Objects.equals(getDefinitionPoint(), other.getDefinitionPoint()));\n-\t\t\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"RoleAssignment{\" + \"id=\" + id + \", assignee=\" + assigneeIdentifier + \", role=\" + role + \", definitionPoint=\" + definitionPoint + '}';\n-\t}\n-\t\n-}\n+    @Override\n+    public int hashCode() {\n+        int hash = 7;\n+        hash = 97 * hash + Objects.hashCode(role);\n+        hash = 97 * hash + Objects.hashCode(assigneeIdentifier);\n+        return hash;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (obj == null) {\n+            return false;\n+        }\n+\n+        if (!(obj instanceof RoleAssignment)) {\n+            return false;\n+        }\n+        final RoleAssignment other = (RoleAssignment) obj;\n+        return (Objects.equals(getRole(), other.getRole()) && Objects.equals(getAssigneeIdentifier(), other.getAssigneeIdentifier()) && Objects.equals(getDefinitionPoint(), other.getDefinitionPoint()));\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"RoleAssignment{\" + \"id=\" + id + \", assignee=\" + assigneeIdentifier + \", role=\" + role + \", definitionPoint=\" + definitionPoint + '}';\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 100
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "30",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/98/RoleAssignment.java\nindex 22d2679efb6..b1bee5a8b2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/98/RoleAssignment.java\n@@ -25,7 +25,7 @@ import javax.persistence.UniqueConstraint;\n  */\n @Entity\n @Table(\n-\tuniqueConstraints = @UniqueConstraint(columnNames={\"assigneeIdentifier\",\"role_id\",\"definitionPoint_id\"})\n+uniqueConstraints = @UniqueConstraint(columnNames={\"assigneeIdentifier\",\"role_id\",\"definitionPoint_id\"})\n       , indexes = {@Index(columnList=\"assigneeidentifier\")\n \t\t, @Index(columnList=\"definitionpoint_id\")\n \t\t, @Index(columnList=\"role_id\")}\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/98/RoleAssignment.java\nindex 22d2679efb6..2f16f3d9bd5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/98/RoleAssignment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/98/RoleAssignment.java\n@@ -25,7 +25,7 @@ import javax.persistence.UniqueConstraint;\n  */\n @Entity\n @Table(\n-\tuniqueConstraints = @UniqueConstraint(columnNames={\"assigneeIdentifier\",\"role_id\",\"definitionPoint_id\"})\n+    uniqueConstraints = @UniqueConstraint(columnNames={\"assigneeIdentifier\",\"role_id\",\"definitionPoint_id\"})\n       , indexes = {@Index(columnList=\"assigneeidentifier\")\n \t\t, @Index(columnList=\"definitionpoint_id\")\n \t\t, @Index(columnList=\"role_id\")}\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
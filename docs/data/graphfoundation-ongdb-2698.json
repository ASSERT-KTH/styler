{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2698",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2698/CorsFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2698/CorsFilter.java\nindex fe66656ab75..7997096ddf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2698/CorsFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2698/CorsFilter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.web;\n \n import java.io.IOException;\n@@ -43,107 +44,104 @@ import static org.neo4j.server.web.HttpHeaderUtils.isValidHttpHeaderName;\n  */\n public class CorsFilter implements Filter\n {\n-    public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";\n-    public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";\n-    public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";\n-    public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";\n-    public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";\n-    public static final String VARY = \"Vary\";\n-\n-    private final Log log;\n-    private final String accessControlAllowOrigin;\n-    private final String vary;\n-\n-    public CorsFilter( LogProvider logProvider, String accessControlAllowOrigin )\n+  public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";\n+  public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";\n+  public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";\n+  public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";\n+  public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";\n+  public static final String VARY = \"Vary\";\n+\n+  private final Log log;\n+  private final String accessControlAllowOrigin;\n+  private final String vary;\n+\n+  public CorsFilter(LogProvider logProvider, String accessControlAllowOrigin)\n+  {\n+    this.log = logProvider.getLog(getClass());\n+    this.accessControlAllowOrigin = accessControlAllowOrigin;\n+    if (\"*\".equals(accessControlAllowOrigin))\n     {\n-        this.log = logProvider.getLog( getClass() );\n-        this.accessControlAllowOrigin = accessControlAllowOrigin;\n-        if ( \"*\".equals( accessControlAllowOrigin ) )\n-        {\n-            vary = null;\n-        }\n-        else\n-        {\n-            // If the server specifies an origin host rather than \"*\", then it must also include Origin in\n-            // the Vary response header to indicate to clients that server responses will differ based on\n-            // the value of the Origin request header.\n-            //\n-            // -- https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin\n-            //\n-            vary = \"Origin\";\n-        }\n+      vary = null;\n+    } else\n+    {\n+      // If the server specifies an origin host rather than \"*\", then it must also include Origin in\n+      // the Vary response header to indicate to clients that server responses will differ based on\n+      // the value of the Origin request header.\n+      //\n+      // -- https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin\n+      //\n+      vary = \"Origin\";\n     }\n+  }\n+\n+  @Override\n+  public void init(FilterConfig filterConfig) throws ServletException\n+  {\n+  }\n \n-    @Override\n-    public void init( FilterConfig filterConfig ) throws ServletException\n+  @Override\n+  public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)\n+      throws IOException, ServletException\n+  {\n+    HttpServletRequest request = (HttpServletRequest) servletRequest;\n+    HttpServletResponse response = (HttpServletResponse) servletResponse;\n+\n+    response.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, accessControlAllowOrigin);\n+    if (vary != null)\n     {\n+      response.setHeader(VARY, vary);\n     }\n \n-    @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain )\n-            throws IOException, ServletException\n+    Enumeration<String> requestMethodEnumeration = request.getHeaders(ACCESS_CONTROL_REQUEST_METHOD);\n+    if (requestMethodEnumeration != null)\n     {\n-        HttpServletRequest request = (HttpServletRequest) servletRequest;\n-        HttpServletResponse response = (HttpServletResponse) servletResponse;\n-\n-        response.setHeader( ACCESS_CONTROL_ALLOW_ORIGIN, accessControlAllowOrigin );\n-        if ( vary != null )\n-        {\n-            response.setHeader( VARY, vary );\n-        }\n-\n-        Enumeration<String> requestMethodEnumeration = request.getHeaders( ACCESS_CONTROL_REQUEST_METHOD );\n-        if ( requestMethodEnumeration != null )\n-        {\n-            while ( requestMethodEnumeration.hasMoreElements() )\n-            {\n-                String requestMethod = requestMethodEnumeration.nextElement();\n-                addAllowedMethodIfValid( requestMethod, response );\n-            }\n-        }\n-\n-        Enumeration<String> requestHeaderEnumeration = request.getHeaders( ACCESS_CONTROL_REQUEST_HEADERS );\n-        if ( requestHeaderEnumeration != null )\n-        {\n-            while ( requestHeaderEnumeration.hasMoreElements() )\n-            {\n-                String requestHeader = requestHeaderEnumeration.nextElement();\n-                addAllowedHeaderIfValid( requestHeader, response );\n-            }\n-        }\n-\n-        chain.doFilter( request, response );\n+      while (requestMethodEnumeration.hasMoreElements())\n+      {\n+        String requestMethod = requestMethodEnumeration.nextElement();\n+        addAllowedMethodIfValid(requestMethod, response);\n+      }\n     }\n \n-    @Override\n-    public void destroy()\n+    Enumeration<String> requestHeaderEnumeration = request.getHeaders(ACCESS_CONTROL_REQUEST_HEADERS);\n+    if (requestHeaderEnumeration != null)\n     {\n+      while (requestHeaderEnumeration.hasMoreElements())\n+      {\n+        String requestHeader = requestHeaderEnumeration.nextElement();\n+        addAllowedHeaderIfValid(requestHeader, response);\n+      }\n     }\n \n-    private void addAllowedMethodIfValid( String methodName, HttpServletResponse response )\n+    chain.doFilter(request, response);\n+  }\n+\n+  @Override\n+  public void destroy()\n+  {\n+  }\n+\n+  private void addAllowedMethodIfValid(String methodName, HttpServletResponse response)\n+  {\n+    HttpMethod method = HttpMethod.valueOfOrNull(methodName);\n+    if (method != null)\n     {\n-        HttpMethod method = HttpMethod.valueOfOrNull( methodName );\n-        if ( method != null )\n-        {\n-            response.addHeader( ACCESS_CONTROL_ALLOW_METHODS, methodName );\n-        }\n-        else\n-        {\n-            log.warn( \"Unknown HTTP method specified in \" + ACCESS_CONTROL_REQUEST_METHOD + \" '\" + methodName + \"'. \" +\n-                      \"It will be ignored and not attached to the \" + ACCESS_CONTROL_ALLOW_METHODS + \" response header\" );\n-        }\n+      response.addHeader(ACCESS_CONTROL_ALLOW_METHODS, methodName);\n+    } else\n+    {\n+      log.warn(\"Unknown HTTP method specified in \" + ACCESS_CONTROL_REQUEST_METHOD + \" '\" + methodName + \"'. \" +\n+          \"It will be ignored and not attached to the \" + ACCESS_CONTROL_ALLOW_METHODS + \" response header\");\n     }\n+  }\n \n-    private void addAllowedHeaderIfValid( String headerName, HttpServletResponse response )\n+  private void addAllowedHeaderIfValid(String headerName, HttpServletResponse response)\n+  {\n+    if (isValidHttpHeaderName(headerName))\n+    {\n+      response.addHeader(ACCESS_CONTROL_ALLOW_HEADERS, headerName);\n+    } else\n     {\n-        if ( isValidHttpHeaderName( headerName ) )\n-        {\n-            response.addHeader( ACCESS_CONTROL_ALLOW_HEADERS, headerName );\n-        }\n-        else\n-        {\n-            log.warn( \"Invalid HTTP header specified in \" + ACCESS_CONTROL_REQUEST_HEADERS + \" '\" + headerName + \"'. \" +\n-                      \"It will be ignored and not attached to the \" + ACCESS_CONTROL_ALLOW_HEADERS + \" response header\" );\n-        }\n+      log.warn(\"Invalid HTTP header specified in \" + ACCESS_CONTROL_REQUEST_HEADERS + \" '\" + headerName + \"'. \" +\n+          \"It will be ignored and not attached to the \" + ACCESS_CONTROL_ALLOW_HEADERS + \" response header\");\n     }\n+  }\n }\n",
            "diff_size": 128
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2698/CorsFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2698/CorsFilter.java\nindex fe66656ab75..759d327ae7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2698/CorsFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2698/CorsFilter.java\n@@ -44,13 +44,17 @@ import static org.neo4j.server.web.HttpHeaderUtils.isValidHttpHeaderName;\n public class CorsFilter implements Filter\n {\n     public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";\n-    public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";\n-    public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";\n-    public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";\n-    public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";\n-    public static final String VARY = \"Vary\";\n \n-    private final Log log;\n+public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";\n+\n+public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";\n+\n+public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";\n+\n+public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";\n+\n+public static final String VARY = \"Vary\";\n+private final Log log;\n     private final String accessControlAllowOrigin;\n     private final String vary;\n \n@@ -80,9 +84,8 @@ public class CorsFilter implements Filter\n     }\n \n     @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain )\n-            throws IOException, ServletException\n-    {\n+    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain ) throws IOException, ServletException\n+{\n         HttpServletRequest request = (HttpServletRequest) servletRequest;\n         HttpServletResponse response = (HttpServletResponse) servletResponse;\n \n@@ -129,9 +132,8 @@ public class CorsFilter implements Filter\n         }\n         else\n         {\n-            log.warn( \"Unknown HTTP method specified in \" + ACCESS_CONTROL_REQUEST_METHOD + \" '\" + methodName + \"'. \" +\n-                      \"It will be ignored and not attached to the \" + ACCESS_CONTROL_ALLOW_METHODS + \" response header\" );\n-        }\n+            log.warn( \"Unknown HTTP method specified in \" + ACCESS_CONTROL_REQUEST_METHOD + \" '\" + methodName + \"'. \" + \"It will be ignored and not attached to the \" + ACCESS_CONTROL_ALLOW_METHODS + \" response header\" );\n+    }\n     }\n \n     private void addAllowedHeaderIfValid( String headerName, HttpServletResponse response )\n@@ -142,8 +144,7 @@ public class CorsFilter implements Filter\n         }\n         else\n         {\n-            log.warn( \"Invalid HTTP header specified in \" + ACCESS_CONTROL_REQUEST_HEADERS + \" '\" + headerName + \"'. \" +\n-                      \"It will be ignored and not attached to the \" + ACCESS_CONTROL_ALLOW_HEADERS + \" response header\" );\n-        }\n+            log.warn( \"Invalid HTTP header specified in \" + ACCESS_CONTROL_REQUEST_HEADERS + \" '\" + headerName + \"'. \" + \"It will be ignored and not attached to the \" + ACCESS_CONTROL_ALLOW_HEADERS + \" response header\" );\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3828",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "124",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "295",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3828/PlatformModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3828/PlatformModule.java\nindex b61f52b3e5f..33d139ccd00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3828/PlatformModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3828/PlatformModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.factory;\n \n import java.io.File;\n@@ -77,251 +78,250 @@ import static org.neo4j.graphdb.factory.GraphDatabaseSettings.store_internal_log\n  */\n public class PlatformModule\n {\n-    public final PageCache pageCache;\n+  public final PageCache pageCache;\n \n-    public final Monitors monitors;\n+  public final Monitors monitors;\n \n-    public final GraphDatabaseFacade graphDatabaseFacade;\n+  public final GraphDatabaseFacade graphDatabaseFacade;\n \n-    public final org.neo4j.kernel.impl.util.Dependencies dependencies;\n+  public final org.neo4j.kernel.impl.util.Dependencies dependencies;\n \n-    public final LogService logging;\n+  public final LogService logging;\n \n-    public final LifeSupport life;\n+  public final LifeSupport life;\n \n-    public final File storeDir;\n+  public final File storeDir;\n \n-    public final DatabaseInfo databaseInfo;\n+  public final DatabaseInfo databaseInfo;\n \n-    public final DiagnosticsManager diagnosticsManager;\n+  public final DiagnosticsManager diagnosticsManager;\n \n-    public final Tracers tracers;\n+  public final Tracers tracers;\n \n-    public final Config config;\n+  public final Config config;\n \n-    public final FileSystemAbstraction fileSystem;\n+  public final FileSystemAbstraction fileSystem;\n \n-    public final DataSourceManager dataSourceManager;\n+  public final DataSourceManager dataSourceManager;\n \n-    public final KernelExtensions kernelExtensions;\n+  public final KernelExtensions kernelExtensions;\n \n-    public final URLAccessRule urlAccessRule;\n+  public final URLAccessRule urlAccessRule;\n \n-    public final JobScheduler jobScheduler;\n+  public final JobScheduler jobScheduler;\n \n-    public final AvailabilityGuard availabilityGuard;\n+  public final AvailabilityGuard availabilityGuard;\n \n-    public final TransactionStats transactionMonitor;\n+  public final TransactionStats transactionMonitor;\n \n-    public final SystemNanoClock clock;\n+  public final SystemNanoClock clock;\n \n-    public final StoreCopyCheckPointMutex storeCopyCheckPointMutex;\n-    public final VersionContextSupplier versionContextSupplier;\n+  public final StoreCopyCheckPointMutex storeCopyCheckPointMutex;\n+  public final VersionContextSupplier versionContextSupplier;\n \n-    public final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n+  public final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n \n-    public PlatformModule( File providedStoreDir, Config config, DatabaseInfo databaseInfo,\n-            GraphDatabaseFacadeFactory.Dependencies externalDependencies, GraphDatabaseFacade graphDatabaseFacade )\n-    {\n-        this.databaseInfo = databaseInfo;\n-        this.dataSourceManager = new DataSourceManager();\n-        dependencies = new org.neo4j.kernel.impl.util.Dependencies(\n-                new DataSourceManager.DependencyResolverSupplier( dataSourceManager ) );\n-        dependencies.satisfyDependency( databaseInfo );\n+  public PlatformModule(File providedStoreDir, Config config, DatabaseInfo databaseInfo,\n+                        GraphDatabaseFacadeFactory.Dependencies externalDependencies, GraphDatabaseFacade graphDatabaseFacade)\n+  {\n+    this.databaseInfo = databaseInfo;\n+    this.dataSourceManager = new DataSourceManager();\n+    dependencies = new org.neo4j.kernel.impl.util.Dependencies(\n+        new DataSourceManager.DependencyResolverSupplier(dataSourceManager));\n+    dependencies.satisfyDependency(databaseInfo);\n \n-        clock = dependencies.satisfyDependency( createClock() );\n+    clock = dependencies.satisfyDependency(createClock());\n \n-        life = dependencies.satisfyDependency( createLife() );\n-        this.graphDatabaseFacade = dependencies.satisfyDependency( graphDatabaseFacade );\n+    life = dependencies.satisfyDependency(createLife());\n+    this.graphDatabaseFacade = dependencies.satisfyDependency(graphDatabaseFacade);\n \n-        // SPI - provided services\n-        config.augmentDefaults( GraphDatabaseSettings.neo4j_home, providedStoreDir.getAbsolutePath() );\n-        this.config = dependencies.satisfyDependency( config );\n+    // SPI - provided services\n+    config.augmentDefaults(GraphDatabaseSettings.neo4j_home, providedStoreDir.getAbsolutePath());\n+    this.config = dependencies.satisfyDependency(config);\n \n-        this.storeDir = providedStoreDir.getAbsoluteFile();\n+    this.storeDir = providedStoreDir.getAbsoluteFile();\n \n-        fileSystem = dependencies.satisfyDependency( createFileSystemAbstraction() );\n-        life.add( new FileSystemLifecycleAdapter( fileSystem ) );\n+    fileSystem = dependencies.satisfyDependency(createFileSystemAbstraction());\n+    life.add(new FileSystemLifecycleAdapter(fileSystem));\n \n-        // Component monitoring\n-        monitors = externalDependencies.monitors() == null ? new Monitors() : externalDependencies.monitors();\n-        dependencies.satisfyDependency( monitors );\n+    // Component monitoring\n+    monitors = externalDependencies.monitors() == null ? new Monitors() : externalDependencies.monitors();\n+    dependencies.satisfyDependency(monitors);\n \n-        jobScheduler = life.add( dependencies.satisfyDependency( createJobScheduler() ) );\n+    jobScheduler = life.add(dependencies.satisfyDependency(createJobScheduler()));\n \n-        // Cleanup after recovery, used by GBPTree, added to life in NeoStoreDataSource\n-        recoveryCleanupWorkCollector = new GroupingRecoveryCleanupWorkCollector( jobScheduler );\n-        dependencies.satisfyDependency( recoveryCleanupWorkCollector );\n+    // Cleanup after recovery, used by GBPTree, added to life in NeoStoreDataSource\n+    recoveryCleanupWorkCollector = new GroupingRecoveryCleanupWorkCollector(jobScheduler);\n+    dependencies.satisfyDependency(recoveryCleanupWorkCollector);\n \n-        // Database system information, used by UDC\n-        dependencies.satisfyDependency( life.add( new UsageData( jobScheduler ) ) );\n+    // Database system information, used by UDC\n+    dependencies.satisfyDependency(life.add(new UsageData(jobScheduler)));\n \n-        // If no logging was passed in from the outside then create logging and register\n-        // with this life\n-        logging = dependencies.satisfyDependency( createLogService( externalDependencies.userLogProvider() ) );\n+    // If no logging was passed in from the outside then create logging and register\n+    // with this life\n+    logging = dependencies.satisfyDependency(createLogService(externalDependencies.userLogProvider()));\n \n-        config.setLogger( logging.getInternalLog( Config.class ) );\n+    config.setLogger(logging.getInternalLog(Config.class));\n \n-        life.add( dependencies\n-                .satisfyDependency( new StoreLockerLifecycleAdapter( createStoreLocker() ) ) );\n+    life.add(dependencies\n+        .satisfyDependency(new StoreLockerLifecycleAdapter(createStoreLocker())));\n \n-        new JvmChecker( logging.getInternalLog( JvmChecker.class ),\n-                new JvmMetadataRepository() ).checkJvmCompatibilityAndIssueWarning();\n+    new JvmChecker(logging.getInternalLog(JvmChecker.class),\n+        new JvmMetadataRepository()).checkJvmCompatibilityAndIssueWarning();\n \n-        String desiredImplementationName = config.get( GraphDatabaseFacadeFactory.Configuration.tracer );\n-        tracers = dependencies.satisfyDependency( new Tracers( desiredImplementationName,\n-                logging.getInternalLog( Tracers.class ), monitors, jobScheduler, clock ) );\n-        dependencies.satisfyDependency( tracers.pageCacheTracer );\n-        dependencies.satisfyDependency( firstImplementor(\n-                LogRotationMonitor.class, tracers.transactionTracer, LogRotationMonitor.NULL ) );\n-        dependencies.satisfyDependency( firstImplementor(\n-                CheckPointerMonitor.class, tracers.checkPointTracer, CheckPointerMonitor.NULL ) );\n+    String desiredImplementationName = config.get(GraphDatabaseFacadeFactory.Configuration.tracer);\n+    tracers = dependencies.satisfyDependency(new Tracers(desiredImplementationName,\n+        logging.getInternalLog(Tracers.class), monitors, jobScheduler, clock));\n+    dependencies.satisfyDependency(tracers.pageCacheTracer);\n+    dependencies.satisfyDependency(firstImplementor(\n+        LogRotationMonitor.class, tracers.transactionTracer, LogRotationMonitor.NULL));\n+    dependencies.satisfyDependency(firstImplementor(\n+        CheckPointerMonitor.class, tracers.checkPointTracer, CheckPointerMonitor.NULL));\n \n-        versionContextSupplier = createCursorContextSupplier( config );\n-        dependencies.satisfyDependency( versionContextSupplier );\n-        pageCache = dependencies.satisfyDependency( createPageCache( fileSystem, config, logging, tracers,\n-                versionContextSupplier ) );\n+    versionContextSupplier = createCursorContextSupplier(config);\n+    dependencies.satisfyDependency(versionContextSupplier);\n+    pageCache = dependencies.satisfyDependency(createPageCache(fileSystem, config, logging, tracers,\n+        versionContextSupplier));\n \n-        life.add( new PageCacheLifecycle( pageCache ) );\n+    life.add(new PageCacheLifecycle(pageCache));\n \n-        diagnosticsManager = life.add( dependencies\n-                .satisfyDependency( new DiagnosticsManager( logging.getInternalLog( DiagnosticsManager.class ) ) ) );\n+    diagnosticsManager = life.add(dependencies\n+        .satisfyDependency(new DiagnosticsManager(logging.getInternalLog(DiagnosticsManager.class))));\n \n-        dependencies.satisfyDependency( dataSourceManager );\n+    dependencies.satisfyDependency(dataSourceManager);\n \n-        availabilityGuard = dependencies.satisfyDependency( createAvailabilityGuard() );\n+    availabilityGuard = dependencies.satisfyDependency(createAvailabilityGuard());\n \n-        transactionMonitor = dependencies.satisfyDependency( createTransactionStats() );\n+    transactionMonitor = dependencies.satisfyDependency(createTransactionStats());\n \n-        kernelExtensions = dependencies.satisfyDependency( new KernelExtensions(\n-                new SimpleKernelContext( storeDir, databaseInfo, dependencies ),\n-                externalDependencies.kernelExtensions(), dependencies, UnsatisfiedDependencyStrategies.fail() ) );\n+    kernelExtensions = dependencies.satisfyDependency(new KernelExtensions(\n+        new SimpleKernelContext(storeDir, databaseInfo, dependencies),\n+        externalDependencies.kernelExtensions(), dependencies, UnsatisfiedDependencyStrategies.fail()));\n \n-        urlAccessRule = dependencies.satisfyDependency( URLAccessRules.combined( externalDependencies.urlAccessRules() ) );\n+    urlAccessRule = dependencies.satisfyDependency(URLAccessRules.combined(externalDependencies.urlAccessRules()));\n \n-        storeCopyCheckPointMutex = new StoreCopyCheckPointMutex();\n-        dependencies.satisfyDependency( storeCopyCheckPointMutex );\n+    storeCopyCheckPointMutex = new StoreCopyCheckPointMutex();\n+    dependencies.satisfyDependency(storeCopyCheckPointMutex);\n \n-        dependencies.satisfyDependency( new ConnectorPortRegister() );\n+    dependencies.satisfyDependency(new ConnectorPortRegister());\n \n-        publishPlatformInfo( dependencies.resolveDependency( UsageData.class ) );\n-    }\n+    publishPlatformInfo(dependencies.resolveDependency(UsageData.class));\n+  }\n \n-    protected VersionContextSupplier createCursorContextSupplier( Config config )\n-    {\n-        return config.get( GraphDatabaseSettings.snapshot_query ) ? new TransactionVersionContextSupplier()\n-                                                                  : EmptyVersionContextSupplier.EMPTY;\n-    }\n+  protected VersionContextSupplier createCursorContextSupplier(Config config)\n+  {\n+    return config.get(GraphDatabaseSettings.snapshot_query) ? new TransactionVersionContextSupplier()\n+        : EmptyVersionContextSupplier.EMPTY;\n+  }\n \n-    protected AvailabilityGuard createAvailabilityGuard()\n-    {\n-        return new AvailabilityGuard( clock, logging.getInternalLog( AvailabilityGuard.class ) );\n-    }\n+  protected AvailabilityGuard createAvailabilityGuard()\n+  {\n+    return new AvailabilityGuard(clock, logging.getInternalLog(AvailabilityGuard.class));\n+  }\n \n-    protected StoreLocker createStoreLocker()\n-    {\n-        return new GlobalStoreLocker( fileSystem, storeDir );\n-    }\n+  protected StoreLocker createStoreLocker()\n+  {\n+    return new GlobalStoreLocker(fileSystem, storeDir);\n+  }\n \n-    protected SystemNanoClock createClock()\n-    {\n-        return Clocks.nanoClock();\n-    }\n+  protected SystemNanoClock createClock()\n+  {\n+    return Clocks.nanoClock();\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    private <T> T firstImplementor( Class<T> type, Object... candidates )\n+  @SuppressWarnings(\"unchecked\")\n+  private <T> T firstImplementor(Class<T> type, Object... candidates)\n+  {\n+    for (Object candidate : candidates)\n     {\n-        for ( Object candidate : candidates )\n-        {\n-            if ( type.isInstance( candidate ) )\n-            {\n-                return (T) candidate;\n-            }\n-        }\n-        return null;\n+      if (type.isInstance(candidate))\n+      {\n+        return (T) candidate;\n+      }\n     }\n-\n-    private void publishPlatformInfo( UsageData sysInfo )\n+    return null;\n+  }\n+\n+  private void publishPlatformInfo(UsageData sysInfo)\n+  {\n+    sysInfo.set(UsageDataKeys.version, Version.getNeo4jVersion());\n+    sysInfo.set(UsageDataKeys.revision, Version.getKernelVersion());\n+  }\n+\n+  public LifeSupport createLife()\n+  {\n+    return new LifeSupport();\n+  }\n+\n+  protected FileSystemAbstraction createFileSystemAbstraction()\n+  {\n+    return new DefaultFileSystemAbstraction();\n+  }\n+\n+  protected LogService createLogService(LogProvider userLogProvider)\n+  {\n+    long internalLogRotationThreshold = config.get(GraphDatabaseSettings.store_internal_log_rotation_threshold);\n+    long internalLogRotationDelay = config.get(GraphDatabaseSettings.store_internal_log_rotation_delay).toMillis();\n+    int internalLogMaxArchives = config.get(GraphDatabaseSettings.store_internal_log_max_archives);\n+\n+    final StoreLogService.Builder builder =\n+        StoreLogService.withRotation(internalLogRotationThreshold, internalLogRotationDelay,\n+            internalLogMaxArchives, jobScheduler);\n+\n+    if (userLogProvider != null)\n     {\n-        sysInfo.set( UsageDataKeys.version, Version.getNeo4jVersion() );\n-        sysInfo.set( UsageDataKeys.revision, Version.getKernelVersion() );\n+      builder.withUserLogProvider(userLogProvider);\n     }\n \n-    public LifeSupport createLife()\n-    {\n-        return new LifeSupport();\n-    }\n+    builder.withRotationListener(\n+        logProvider -> diagnosticsManager.dumpAll(logProvider.getLog(DiagnosticsManager.class)));\n \n-    protected FileSystemAbstraction createFileSystemAbstraction()\n+    for (String debugContext : config.get(GraphDatabaseSettings.store_internal_debug_contexts))\n     {\n-        return new DefaultFileSystemAbstraction();\n+      builder.withLevel(debugContext, Level.DEBUG);\n     }\n+    builder.withDefaultLevel(config.get(GraphDatabaseSettings.store_internal_log_level))\n+        .withTimeZone(config.get(GraphDatabaseSettings.db_timezone).getZoneId());\n \n-    protected LogService createLogService( LogProvider userLogProvider )\n+    File logFile = config.get(store_internal_log_path);\n+    if (!logFile.getParentFile().exists())\n     {\n-        long internalLogRotationThreshold = config.get( GraphDatabaseSettings.store_internal_log_rotation_threshold );\n-        long internalLogRotationDelay = config.get( GraphDatabaseSettings.store_internal_log_rotation_delay ).toMillis();\n-        int internalLogMaxArchives = config.get( GraphDatabaseSettings.store_internal_log_max_archives );\n-\n-        final StoreLogService.Builder builder =\n-                StoreLogService.withRotation( internalLogRotationThreshold, internalLogRotationDelay,\n-                        internalLogMaxArchives, jobScheduler );\n-\n-        if ( userLogProvider != null )\n-        {\n-            builder.withUserLogProvider( userLogProvider );\n-        }\n-\n-        builder.withRotationListener(\n-                logProvider -> diagnosticsManager.dumpAll( logProvider.getLog( DiagnosticsManager.class ) ) );\n-\n-        for ( String debugContext : config.get( GraphDatabaseSettings.store_internal_debug_contexts ) )\n-        {\n-            builder.withLevel( debugContext, Level.DEBUG );\n-        }\n-        builder.withDefaultLevel( config.get( GraphDatabaseSettings.store_internal_log_level ) )\n-               .withTimeZone( config.get( GraphDatabaseSettings.db_timezone ).getZoneId() );\n-\n-        File logFile = config.get( store_internal_log_path );\n-        if ( !logFile.getParentFile().exists() )\n-        {\n-            logFile.getParentFile().mkdirs();\n-        }\n-        StoreLogService logService;\n-        try\n-        {\n-            logService = builder.withInternalLog( logFile ).build( fileSystem );\n-        }\n-        catch ( IOException ex )\n-        {\n-            throw new RuntimeException( ex );\n-        }\n-        return life.add( logService );\n+      logFile.getParentFile().mkdirs();\n     }\n-\n-    protected JobScheduler createJobScheduler()\n+    StoreLogService logService;\n+    try\n     {\n-        return new CentralJobScheduler();\n-    }\n-\n-    protected PageCache createPageCache( FileSystemAbstraction fileSystem, Config config, LogService logging,\n-            Tracers tracers, VersionContextSupplier versionContextSupplier )\n+      logService = builder.withInternalLog(logFile).build(fileSystem);\n+    } catch (IOException ex)\n     {\n-        Log pageCacheLog = logging.getInternalLog( PageCache.class );\n-        ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory(\n-                fileSystem, config, tracers.pageCacheTracer, tracers.pageCursorTracerSupplier, pageCacheLog,\n-                versionContextSupplier );\n-        PageCache pageCache = pageCacheFactory.getOrCreatePageCache();\n-\n-        if ( config.get( GraphDatabaseSettings.dump_configuration ) )\n-        {\n-            pageCacheFactory.dumpConfiguration();\n-        }\n-        return pageCache;\n+      throw new RuntimeException(ex);\n     }\n-\n-    protected TransactionStats createTransactionStats()\n+    return life.add(logService);\n+  }\n+\n+  protected JobScheduler createJobScheduler()\n+  {\n+    return new CentralJobScheduler();\n+  }\n+\n+  protected PageCache createPageCache(FileSystemAbstraction fileSystem, Config config, LogService logging,\n+                                      Tracers tracers, VersionContextSupplier versionContextSupplier)\n+  {\n+    Log pageCacheLog = logging.getInternalLog(PageCache.class);\n+    ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory(\n+        fileSystem, config, tracers.pageCacheTracer, tracers.pageCursorTracerSupplier, pageCacheLog,\n+        versionContextSupplier);\n+    PageCache pageCache = pageCacheFactory.getOrCreatePageCache();\n+\n+    if (config.get(GraphDatabaseSettings.dump_configuration))\n     {\n-        return new TransactionStats();\n+      pageCacheFactory.dumpConfiguration();\n     }\n+    return pageCache;\n+  }\n+\n+  protected TransactionStats createTransactionStats()\n+  {\n+    return new TransactionStats();\n+  }\n }\n",
            "diff_size": 237
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "252",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "281",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3828/PlatformModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3828/PlatformModule.java\nindex b61f52b3e5f..2446e4986e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3828/PlatformModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3828/PlatformModule.java\n@@ -116,7 +116,8 @@ public class PlatformModule\n     public final SystemNanoClock clock;\n \n     public final StoreCopyCheckPointMutex storeCopyCheckPointMutex;\n-    public final VersionContextSupplier versionContextSupplier;\n+\n+public final VersionContextSupplier versionContextSupplier;\n \n     public final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n \n@@ -125,20 +126,16 @@ public class PlatformModule\n     {\n         this.databaseInfo = databaseInfo;\n         this.dataSourceManager = new DataSourceManager();\n-        dependencies = new org.neo4j.kernel.impl.util.Dependencies(\n-                new DataSourceManager.DependencyResolverSupplier( dataSourceManager ) );\n-        dependencies.satisfyDependency( databaseInfo );\n-\n-        clock = dependencies.satisfyDependency( createClock() );\n-\n-        life = dependencies.satisfyDependency( createLife() );\n+        dependencies = new org.neo4j.kernel.impl.util.Dependencies( new DataSourceManager.DependencyResolverSupplier( dataSourceManager ) );\n+dependencies.satisfyDependency( databaseInfo );\n+clock = dependencies.satisfyDependency( createClock() );\n+life = dependencies.satisfyDependency( createLife() );\n         this.graphDatabaseFacade = dependencies.satisfyDependency( graphDatabaseFacade );\n \n         // SPI - provided services\n         config.augmentDefaults( GraphDatabaseSettings.neo4j_home, providedStoreDir.getAbsolutePath() );\n         this.config = dependencies.satisfyDependency( config );\n-\n-        this.storeDir = providedStoreDir.getAbsoluteFile();\n+this.storeDir = providedStoreDir.getAbsoluteFile();\n \n         fileSystem = dependencies.satisfyDependency( createFileSystemAbstraction() );\n         life.add( new FileSystemLifecycleAdapter( fileSystem ) );\n@@ -146,8 +143,7 @@ public class PlatformModule\n         // Component monitoring\n         monitors = externalDependencies.monitors() == null ? new Monitors() : externalDependencies.monitors();\n         dependencies.satisfyDependency( monitors );\n-\n-        jobScheduler = life.add( dependencies.satisfyDependency( createJobScheduler() ) );\n+jobScheduler = life.add( dependencies.satisfyDependency( createJobScheduler() ) );\n \n         // Cleanup after recovery, used by GBPTree, added to life in NeoStoreDataSource\n         recoveryCleanupWorkCollector = new GroupingRecoveryCleanupWorkCollector( jobScheduler );\n@@ -159,58 +155,36 @@ public class PlatformModule\n         // If no logging was passed in from the outside then create logging and register\n         // with this life\n         logging = dependencies.satisfyDependency( createLogService( externalDependencies.userLogProvider() ) );\n-\n-        config.setLogger( logging.getInternalLog( Config.class ) );\n-\n-        life.add( dependencies\n-                .satisfyDependency( new StoreLockerLifecycleAdapter( createStoreLocker() ) ) );\n-\n-        new JvmChecker( logging.getInternalLog( JvmChecker.class ),\n-                new JvmMetadataRepository() ).checkJvmCompatibilityAndIssueWarning();\n-\n-        String desiredImplementationName = config.get( GraphDatabaseFacadeFactory.Configuration.tracer );\n+config.setLogger( logging.getInternalLog( Config.class ) );\n+life.add( dependencies.satisfyDependency( new StoreLockerLifecycleAdapter( createStoreLocker() ) ) );\n+    new JvmChecker( logging.getInternalLog( JvmChecker.class ), new JvmMetadataRepository() ).checkJvmCompatibilityAndIssueWarning();\n+String desiredImplementationName = config.get( GraphDatabaseFacadeFactory.Configuration.tracer );\n         tracers = dependencies.satisfyDependency( new Tracers( desiredImplementationName,\n                 logging.getInternalLog( Tracers.class ), monitors, jobScheduler, clock ) );\n-        dependencies.satisfyDependency( tracers.pageCacheTracer );\n-        dependencies.satisfyDependency( firstImplementor(\n-                LogRotationMonitor.class, tracers.transactionTracer, LogRotationMonitor.NULL ) );\n-        dependencies.satisfyDependency( firstImplementor(\n-                CheckPointerMonitor.class, tracers.checkPointTracer, CheckPointerMonitor.NULL ) );\n-\n-        versionContextSupplier = createCursorContextSupplier( config );\n+dependencies.satisfyDependency( tracers.pageCacheTracer );\n+        dependencies.satisfyDependency( firstImplementor( LogRotationMonitor.class, tracers.transactionTracer, LogRotationMonitor.NULL ) );\n+dependencies.satisfyDependency( firstImplementor( CheckPointerMonitor.class, tracers.checkPointTracer, CheckPointerMonitor.NULL ) );\n+versionContextSupplier = createCursorContextSupplier( config );\n         dependencies.satisfyDependency( versionContextSupplier );\n         pageCache = dependencies.satisfyDependency( createPageCache( fileSystem, config, logging, tracers,\n                 versionContextSupplier ) );\n-\n-        life.add( new PageCacheLifecycle( pageCache ) );\n-\n-        diagnosticsManager = life.add( dependencies\n-                .satisfyDependency( new DiagnosticsManager( logging.getInternalLog( DiagnosticsManager.class ) ) ) );\n-\n-        dependencies.satisfyDependency( dataSourceManager );\n-\n-        availabilityGuard = dependencies.satisfyDependency( createAvailabilityGuard() );\n-\n-        transactionMonitor = dependencies.satisfyDependency( createTransactionStats() );\n-\n-        kernelExtensions = dependencies.satisfyDependency( new KernelExtensions(\n-                new SimpleKernelContext( storeDir, databaseInfo, dependencies ),\n-                externalDependencies.kernelExtensions(), dependencies, UnsatisfiedDependencyStrategies.fail() ) );\n-\n-        urlAccessRule = dependencies.satisfyDependency( URLAccessRules.combined( externalDependencies.urlAccessRules() ) );\n-\n-        storeCopyCheckPointMutex = new StoreCopyCheckPointMutex();\n+life.add( new PageCacheLifecycle( pageCache ) );\n+diagnosticsManager = life.add( dependencies.satisfyDependency( new DiagnosticsManager( logging.getInternalLog( DiagnosticsManager.class ) ) ) );\n+dependencies.satisfyDependency( dataSourceManager );\n+availabilityGuard = dependencies.satisfyDependency( createAvailabilityGuard() );\n+transactionMonitor = dependencies.satisfyDependency( createTransactionStats() );\n+kernelExtensions = dependencies.satisfyDependency( new KernelExtensions( new SimpleKernelContext( storeDir, databaseInfo, dependencies ), externalDependencies.kernelExtensions(), dependencies, UnsatisfiedDependencyStrategies.fail() ) );\n+urlAccessRule = dependencies.satisfyDependency( URLAccessRules.combined( externalDependencies.urlAccessRules() ) );\n+storeCopyCheckPointMutex = new StoreCopyCheckPointMutex();\n         dependencies.satisfyDependency( storeCopyCheckPointMutex );\n-\n-        dependencies.satisfyDependency( new ConnectorPortRegister() );\n+dependencies.satisfyDependency( new ConnectorPortRegister() );\n \n         publishPlatformInfo( dependencies.resolveDependency( UsageData.class ) );\n     }\n \n     protected VersionContextSupplier createCursorContextSupplier( Config config )\n     {\n-        return config.get( GraphDatabaseSettings.snapshot_query ) ? new TransactionVersionContextSupplier()\n-                                                                  : EmptyVersionContextSupplier.EMPTY;\n+        return config.get( GraphDatabaseSettings.snapshot_query ) ? new TransactionVersionContextSupplier() : EmptyVersionContextSupplier.EMPTY;\n     }\n \n     protected AvailabilityGuard createAvailabilityGuard()\n@@ -263,31 +237,26 @@ public class PlatformModule\n         long internalLogRotationDelay = config.get( GraphDatabaseSettings.store_internal_log_rotation_delay ).toMillis();\n         int internalLogMaxArchives = config.get( GraphDatabaseSettings.store_internal_log_max_archives );\n \n-        final StoreLogService.Builder builder =\n-                StoreLogService.withRotation( internalLogRotationThreshold, internalLogRotationDelay,\n+        final StoreLogService.Builder builder = StoreLogService.withRotation( internalLogRotationThreshold, internalLogRotationDelay,\n                         internalLogMaxArchives, jobScheduler );\n-\n-        if ( userLogProvider != null )\n+if ( userLogProvider != null )\n         {\n             builder.withUserLogProvider( userLogProvider );\n         }\n \n-        builder.withRotationListener(\n-                logProvider -> diagnosticsManager.dumpAll( logProvider.getLog( DiagnosticsManager.class ) ) );\n-\n-        for ( String debugContext : config.get( GraphDatabaseSettings.store_internal_debug_contexts ) )\n+        builder.withRotationListener( logProvider -> diagnosticsManager.dumpAll( logProvider.getLog( DiagnosticsManager.class ) ) );\n+for ( String debugContext : config.get( GraphDatabaseSettings.store_internal_debug_contexts ) )\n         {\n             builder.withLevel( debugContext, Level.DEBUG );\n         }\n-        builder.withDefaultLevel( config.get( GraphDatabaseSettings.store_internal_log_level ) )\n-               .withTimeZone( config.get( GraphDatabaseSettings.db_timezone ).getZoneId() );\n-\n-        File logFile = config.get( store_internal_log_path );\n+        builder.withDefaultLevel( config.get( GraphDatabaseSettings.store_internal_log_level ) ).withTimeZone( config.get( GraphDatabaseSettings.db_timezone ).getZoneId() );\n+File logFile = config.get( store_internal_log_path );\n         if ( !logFile.getParentFile().exists() )\n         {\n             logFile.getParentFile().mkdirs();\n         }\n-        StoreLogService logService;\n+\n+StoreLogService logService;\n         try\n         {\n             logService = builder.withInternalLog( logFile ).build( fileSystem );\n@@ -296,7 +265,8 @@ public class PlatformModule\n         {\n             throw new RuntimeException( ex );\n         }\n-        return life.add( logService );\n+\n+return life.add( logService );\n     }\n \n     protected JobScheduler createJobScheduler()\n@@ -308,20 +278,18 @@ public class PlatformModule\n             Tracers tracers, VersionContextSupplier versionContextSupplier )\n     {\n         Log pageCacheLog = logging.getInternalLog( PageCache.class );\n-        ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory(\n-                fileSystem, config, tracers.pageCacheTracer, tracers.pageCursorTracerSupplier, pageCacheLog,\n-                versionContextSupplier );\n-        PageCache pageCache = pageCacheFactory.getOrCreatePageCache();\n-\n-        if ( config.get( GraphDatabaseSettings.dump_configuration ) )\n+        ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory( fileSystem, config, tracers.pageCacheTracer, tracers.pageCursorTracerSupplier, pageCacheLog, versionContextSupplier );\n+PageCache pageCache = pageCacheFactory.getOrCreatePageCache();\n+if ( config.get( GraphDatabaseSettings.dump_configuration ) )\n         {\n             pageCacheFactory.dumpConfiguration();\n         }\n-        return pageCache;\n+\n+return pageCache;\n     }\n \n     protected TransactionStats createTransactionStats()\n     {\n         return new TransactionStats();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 78
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
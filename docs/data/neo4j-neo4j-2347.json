{
    "project_name": "neo4j-neo4j",
    "error_id": "2347",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2347/IndexUpdateCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2347/IndexUpdateCursor.java\nindex c8a7d082cb8..500ac0e3140 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2347/IndexUpdateCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2347/IndexUpdateCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -31,10 +32,10 @@ import static org.neo4j.kernel.impl.index.schema.IndexUpdateStorage.STOP_TYPE;\n  * Cursor over serialized {@link org.neo4j.storageengine.api.IndexEntryUpdate} represented by {@link UpdateMode}, 2x{@link KEY} and {@link VALUE}.\n  * Reads the updates in sequential order. Field instances are reused, so consumer is responsible for creating copies if result needs to be cached.\n  */\n-public class IndexUpdateCursor<KEY, VALUE> implements BlockEntryCursor<KEY,VALUE>\n+public class IndexUpdateCursor<KEY, VALUE> implements BlockEntryCursor<KEY, VALUE>\n {\n     private final PageCursor cursor;\n-    private final Layout<KEY,VALUE> layout;\n+    private final Layout<KEY, VALUE> layout;\n \n     // Fields for the last entry\n     private UpdateMode updateMode;\n@@ -42,7 +43,7 @@ public class IndexUpdateCursor<KEY, VALUE> implements BlockEntryCursor<KEY,VALUE\n     private final KEY key2;\n     private final VALUE value;\n \n-    IndexUpdateCursor( PageCursor cursor, Layout<KEY,VALUE> layout )\n+    IndexUpdateCursor(PageCursor cursor, Layout<KEY, VALUE> layout)\n     {\n         this.cursor = cursor;\n         this.layout = layout;\n@@ -55,13 +56,13 @@ public class IndexUpdateCursor<KEY, VALUE> implements BlockEntryCursor<KEY,VALUE\n     public boolean next() throws IOException\n     {\n         byte updateModeType = cursor.getByte();\n-        if ( updateModeType == STOP_TYPE )\n+        if (updateModeType == STOP_TYPE)\n         {\n             return false;\n         }\n \n         updateMode = UpdateMode.MODES[updateModeType];\n-        IndexUpdateEntry.read( cursor, layout, updateMode, key1, key2, value );\n+        IndexUpdateEntry.read(cursor, layout, updateMode, key1, key2, value);\n         return true;\n     }\n \n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2347/IndexUpdateCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2347/IndexUpdateCursor.java\nindex c8a7d082cb8..80011fa345d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2347/IndexUpdateCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2347/IndexUpdateCursor.java\n@@ -92,4 +92,4 @@ public class IndexUpdateCursor<KEY, VALUE> implements BlockEntryCursor<KEY,VALUE\n     {\n         cursor.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
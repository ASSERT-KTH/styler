{
    "project_name": "neo4j-neo4j",
    "error_id": "1021",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1021/PhysicalFlushableChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1021/PhysicalFlushableChannel.java\nindex 6c80bd4d048..f489945d82d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1021/PhysicalFlushableChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1021/PhysicalFlushableChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.fs;\n \n import java.io.Flushable;\n@@ -39,7 +40,7 @@ import static org.neo4j.io.memory.HeapScopedBuffer.EMPTY_BUFFER;\n  */\n public class PhysicalFlushableChannel implements FlushableChannel\n {\n-    public static final int DEFAULT_BUFFER_SIZE = toIntExact( ByteUnit.kibiBytes( 4 ) );\n+    public static final int DEFAULT_BUFFER_SIZE = toIntExact(ByteUnit.kibiBytes(4));\n \n     private volatile boolean closed;\n \n@@ -47,12 +48,12 @@ public class PhysicalFlushableChannel implements FlushableChannel\n     protected StoreChannel channel;\n     protected ByteBuffer buffer;\n \n-    public PhysicalFlushableChannel( StoreChannel channel, MemoryTracker memoryTracker )\n+    public PhysicalFlushableChannel(StoreChannel channel, MemoryTracker memoryTracker)\n     {\n-        this( channel, new HeapScopedBuffer( DEFAULT_BUFFER_SIZE, memoryTracker ) );\n+        this(channel, new HeapScopedBuffer(DEFAULT_BUFFER_SIZE, memoryTracker));\n     }\n \n-    public PhysicalFlushableChannel( StoreChannel channel, ScopedBuffer scopedBuffer )\n+    public PhysicalFlushableChannel(StoreChannel channel, ScopedBuffer scopedBuffer)\n     {\n         this.channel = channel;\n         this.scopedBuffer = scopedBuffer;\n@@ -70,66 +71,65 @@ public class PhysicalFlushableChannel implements FlushableChannel\n         StoreChannel channel = this.channel;\n         try\n         {\n-            channel.writeAll( buffer );\n-        }\n-        catch ( ClosedChannelException e )\n+            channel.writeAll(buffer);\n+        } catch (ClosedChannelException e)\n         {\n-            handleClosedChannelException( e );\n+            handleClosedChannelException(e);\n         }\n         buffer.clear();\n         return channel;\n     }\n \n     @Override\n-    public FlushableChannel put( byte value ) throws IOException\n+    public FlushableChannel put(byte value) throws IOException\n     {\n-        bufferWithGuaranteedSpace( 1 ).put( value );\n+        bufferWithGuaranteedSpace(1).put(value);\n         return this;\n     }\n \n     @Override\n-    public FlushableChannel putShort( short value ) throws IOException\n+    public FlushableChannel putShort(short value) throws IOException\n     {\n-        bufferWithGuaranteedSpace( Short.BYTES ).putShort( value );\n+        bufferWithGuaranteedSpace(Short.BYTES).putShort(value);\n         return this;\n     }\n \n     @Override\n-    public FlushableChannel putInt( int value ) throws IOException\n+    public FlushableChannel putInt(int value) throws IOException\n     {\n-        bufferWithGuaranteedSpace( Integer.BYTES ).putInt( value );\n+        bufferWithGuaranteedSpace(Integer.BYTES).putInt(value);\n         return this;\n     }\n \n     @Override\n-    public FlushableChannel putLong( long value ) throws IOException\n+    public FlushableChannel putLong(long value) throws IOException\n     {\n-        bufferWithGuaranteedSpace( Long.BYTES ).putLong( value );\n+        bufferWithGuaranteedSpace(Long.BYTES).putLong(value);\n         return this;\n     }\n \n     @Override\n-    public FlushableChannel putFloat( float value ) throws IOException\n+    public FlushableChannel putFloat(float value) throws IOException\n     {\n-        bufferWithGuaranteedSpace( Float.BYTES ).putFloat( value );\n+        bufferWithGuaranteedSpace(Float.BYTES).putFloat(value);\n         return this;\n     }\n \n     @Override\n-    public FlushableChannel putDouble( double value ) throws IOException\n+    public FlushableChannel putDouble(double value) throws IOException\n     {\n-        bufferWithGuaranteedSpace( Double.BYTES ).putDouble( value );\n+        bufferWithGuaranteedSpace(Double.BYTES).putDouble(value);\n         return this;\n     }\n \n     @Override\n-    public FlushableChannel put( byte[] value, int length ) throws IOException\n+    public FlushableChannel put(byte[] value, int length) throws IOException\n     {\n         int offset = 0;\n-        while ( offset < length )\n+        while (offset < length)\n         {\n-            int chunkSize = min( length - offset, buffer.capacity() >> 1 );\n-            bufferWithGuaranteedSpace( chunkSize ).put( value, offset, chunkSize );\n+            int chunkSize = min(length - offset, buffer.capacity() >> 1);\n+            bufferWithGuaranteedSpace(chunkSize).put(value, offset, chunkSize);\n \n             offset += chunkSize;\n         }\n@@ -166,35 +166,35 @@ public class PhysicalFlushableChannel implements FlushableChannel\n      * @param position new position (byte offset) to set as new current position.\n      * @throws IOException if underlying channel throws {@link IOException}.\n      */\n-    public void position( long position ) throws IOException\n+    public void position(long position) throws IOException\n     {\n         // Currently we take the pessimistic approach of flushing (doesn't imply forcing) buffer to\n         // channel before moving to a new position. This works in all cases, but there could be\n         // made an optimization where we could see that we're moving within the current buffer range\n         // and if so skip flushing and simply move the cursor in the buffer.\n         prepareForFlush().flush();\n-        channel.position( position );\n+        channel.position(position);\n     }\n \n-    ByteBuffer bufferWithGuaranteedSpace( int spaceInBytes ) throws IOException\n+    ByteBuffer bufferWithGuaranteedSpace(int spaceInBytes) throws IOException\n     {\n         assert spaceInBytes < buffer.capacity();\n-        if ( buffer.remaining() < spaceInBytes )\n+        if (buffer.remaining() < spaceInBytes)\n         {\n             prepareForFlush();\n         }\n         return buffer;\n     }\n \n-    private void handleClosedChannelException( ClosedChannelException e ) throws ClosedChannelException\n+    private void handleClosedChannelException(ClosedChannelException e) throws ClosedChannelException\n     {\n         // We don't want to check the closed flag every time we empty, instead we can avoid unnecessary the\n         // volatile read and catch ClosedChannelException where we see if the channel being closed was\n         // deliberate or not. If it was deliberately closed then throw IllegalStateException instead so\n         // that callers won't treat this as a kernel panic.\n-        if ( closed )\n+        if (closed)\n         {\n-            throw new IllegalStateException( \"This log channel has been closed\", e );\n+            throw new IllegalStateException(\"This log channel has been closed\", e);\n         }\n \n         // OK, this channel was closed without us really knowing about it, throw exception as is.\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
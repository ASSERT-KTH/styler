{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1141",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1141/ClientConnectionInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1141/ClientConnectionInfo.java\nindex 1991cbe4ea6..d4dd07cf23c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1141/ClientConnectionInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1141/ClientConnectionInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query.clientconnection;\n \n /**\n@@ -26,109 +27,109 @@ package org.neo4j.kernel.impl.query.clientconnection;\n  */\n public abstract class ClientConnectionInfo\n {\n-    /**\n-     * Used by {@link #asConnectionDetails()} only. When the {@code connectionDetails} string is no longer needed,\n-     * this can go away, since the username is provided though other means to the places that need it.\n-     */\n-    @Deprecated\n-    public ClientConnectionInfo withUsername( String username )\n-    {\n-        return new ConnectionInfoWithUsername( this, username );\n-    }\n+  /**\n+   * Used by {@link #asConnectionDetails()} only. When the {@code connectionDetails} string is no longer needed,\n+   * this can go away, since the username is provided though other means to the places that need it.\n+   */\n+  @Deprecated\n+  public ClientConnectionInfo withUsername(String username)\n+  {\n+    return new ConnectionInfoWithUsername(this, username);\n+  }\n \n-    /**\n-     * This method provides the custom format for each type of connection.\n-     * <p>\n-     * Preferably we would not need to have a custom format for each type of connection, but this is provided for\n-     * backwards compatibility reasons.\n-     *\n-     * @return a custom log-line format describing this type of connection.\n-     */\n-    @Deprecated\n-    public abstract String asConnectionDetails();\n+  /**\n+   * This method provides the custom format for each type of connection.\n+   * <p>\n+   * Preferably we would not need to have a custom format for each type of connection, but this is provided for\n+   * backwards compatibility reasons.\n+   *\n+   * @return a custom log-line format describing this type of connection.\n+   */\n+  @Deprecated\n+  public abstract String asConnectionDetails();\n \n-    /**\n-     * Which protocol was used for this connection.\n-     * <p>\n-     * This is not necessarily an internet protocol (like http et.c.) although it could be. It might also be \"embedded\"\n-     * for example, if this connection represents an embedded session.\n-     *\n-     * @return the protocol used for connecting to the server.\n-     */\n-    public abstract String protocol();\n+  /**\n+   * Which protocol was used for this connection.\n+   * <p>\n+   * This is not necessarily an internet protocol (like http et.c.) although it could be. It might also be \"embedded\"\n+   * for example, if this connection represents an embedded session.\n+   *\n+   * @return the protocol used for connecting to the server.\n+   */\n+  public abstract String protocol();\n \n-    /**\n-     * This method is overridden in the subclasses where this information is available.\n-     *\n-     * @return the address of the client. or {@code null} if the address is not available.\n-     */\n-    public String clientAddress()\n-    {\n-        return null;\n-    }\n+  /**\n+   * This method is overridden in the subclasses where this information is available.\n+   *\n+   * @return the address of the client. or {@code null} if the address is not available.\n+   */\n+  public String clientAddress()\n+  {\n+    return null;\n+  }\n \n-    /**\n-     * This method is overridden in the subclasses where this information is available.\n-     *\n-     * @return the URI of this server that the client connected to, or {@code null} if the URI is not available.\n-     */\n-    public String requestURI()\n+  /**\n+   * This method is overridden in the subclasses where this information is available.\n+   *\n+   * @return the URI of this server that the client connected to, or {@code null} if the URI is not available.\n+   */\n+  public String requestURI()\n+  {\n+    return null;\n+  }\n+\n+  public static final ClientConnectionInfo EMBEDDED_CONNECTION = new ClientConnectionInfo()\n+  {\n+    @Override\n+    public String asConnectionDetails()\n     {\n-        return null;\n+      return \"embedded-session\\t\";\n     }\n \n-    public static final ClientConnectionInfo EMBEDDED_CONNECTION = new ClientConnectionInfo()\n+    @Override\n+    public String protocol()\n     {\n-        @Override\n-        public String asConnectionDetails()\n-        {\n-            return \"embedded-session\\t\";\n-        }\n+      return \"embedded\";\n+    }\n+  };\n \n-        @Override\n-        public String protocol()\n-        {\n-            return \"embedded\";\n-        }\n-    };\n+  /**\n+   * Should be removed along with {@link #withUsername(String)} and {@link #asConnectionDetails()}.\n+   */\n+  @Deprecated\n+  private static class ConnectionInfoWithUsername extends ClientConnectionInfo\n+  {\n+    private final ClientConnectionInfo source;\n+    private final String username;\n \n-    /**\n-     * Should be removed along with {@link #withUsername(String)} and {@link #asConnectionDetails()}.\n-     */\n-    @Deprecated\n-    private static class ConnectionInfoWithUsername extends ClientConnectionInfo\n+    private ConnectionInfoWithUsername(ClientConnectionInfo source, String username)\n     {\n-        private final ClientConnectionInfo source;\n-        private final String username;\n-\n-        private ConnectionInfoWithUsername( ClientConnectionInfo source, String username )\n-        {\n-            this.source = source;\n-            this.username = username;\n-        }\n+      this.source = source;\n+      this.username = username;\n+    }\n \n-        @Override\n-        public String asConnectionDetails()\n-        {\n-            return source.asConnectionDetails() + '\\t' + username;\n-        }\n+    @Override\n+    public String asConnectionDetails()\n+    {\n+      return source.asConnectionDetails() + '\\t' + username;\n+    }\n \n-        @Override\n-        public String protocol()\n-        {\n-            return source.protocol();\n-        }\n+    @Override\n+    public String protocol()\n+    {\n+      return source.protocol();\n+    }\n \n-        @Override\n-        public String clientAddress()\n-        {\n-            return source.clientAddress();\n-        }\n+    @Override\n+    public String clientAddress()\n+    {\n+      return source.clientAddress();\n+    }\n \n-        @Override\n-        public String requestURI()\n-        {\n-            return source.requestURI();\n-        }\n+    @Override\n+    public String requestURI()\n+    {\n+      return source.requestURI();\n     }\n+  }\n }\n",
            "diff_size": 102
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1141/ClientConnectionInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1141/ClientConnectionInfo.java\nindex 1991cbe4ea6..687274569eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1141/ClientConnectionInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1141/ClientConnectionInfo.java\n@@ -131,4 +131,4 @@ public abstract class ClientConnectionInfo\n             return source.requestURI();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
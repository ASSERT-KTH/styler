{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3250",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3250/GenericStatsProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3250/GenericStatsProvider.java\nindex 65d762fe36a..64518b0551e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3250/GenericStatsProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3250/GenericStatsProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.stats;\n \n import java.util.ArrayList;\n@@ -31,47 +32,47 @@ import static java.lang.String.format;\n  */\n public class GenericStatsProvider implements StatsProvider\n {\n-    private final Collection<Pair<Key,Stat>> stats = new ArrayList<>();\n+  private final Collection<Pair<Key, Stat>> stats = new ArrayList<>();\n \n-    public void add( Key key, Stat stat )\n-    {\n-        this.stats.add( Pair.of( key, stat ) );\n-    }\n+  public void add(Key key, Stat stat)\n+  {\n+    this.stats.add(Pair.of(key, stat));\n+  }\n \n-    @Override\n-    public Stat stat( Key key )\n+  @Override\n+  public Stat stat(Key key)\n+  {\n+    for (Pair<Key, Stat> stat1 : stats)\n     {\n-        for ( Pair<Key,Stat> stat1 : stats )\n-        {\n-            if ( stat1.first().name().equals( key.name() ) )\n-            {\n-                return stat1.other();\n-            }\n-        }\n-        return null;\n+      if (stat1.first().name().equals(key.name()))\n+      {\n+        return stat1.other();\n+      }\n     }\n+    return null;\n+  }\n \n-    @Override\n-    public Key[] keys()\n+  @Override\n+  public Key[] keys()\n+  {\n+    Key[] keys = new Key[stats.size()];\n+    int i = 0;\n+    for (Pair<Key, Stat> stat : stats)\n     {\n-        Key[] keys = new Key[stats.size()];\n-        int i = 0;\n-        for ( Pair<Key,Stat> stat : stats )\n-        {\n-            keys[i++] = stat.first();\n-        }\n-        return keys;\n+      keys[i++] = stat.first();\n     }\n+    return keys;\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public String toString()\n+  {\n+    StringBuilder builder = new StringBuilder();\n+    for (Pair<Key, Stat> stat : stats)\n     {\n-        StringBuilder builder = new StringBuilder();\n-        for ( Pair<Key,Stat> stat : stats )\n-        {\n-            builder.append( builder.length() > 0 ? \", \" : \"\" )\n-                    .append( format( \"%s: %s\", stat.first().shortName(), stat.other() ) );\n-        }\n-        return builder.toString();\n+      builder.append(builder.length() > 0 ? \", \" : \"\")\n+          .append(format(\"%s: %s\", stat.first().shortName(), stat.other()));\n     }\n+    return builder.toString();\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3250/GenericStatsProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3250/GenericStatsProvider.java\nindex 65d762fe36a..77f458dd59b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3250/GenericStatsProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3250/GenericStatsProvider.java\n@@ -60,7 +60,8 @@ public class GenericStatsProvider implements StatsProvider\n         {\n             keys[i++] = stat.first();\n         }\n-        return keys;\n+\n+return keys;\n     }\n \n     @Override\n@@ -69,9 +70,9 @@ public class GenericStatsProvider implements StatsProvider\n         StringBuilder builder = new StringBuilder();\n         for ( Pair<Key,Stat> stat : stats )\n         {\n-            builder.append( builder.length() > 0 ? \", \" : \"\" )\n-                    .append( format( \"%s: %s\", stat.first().shortName(), stat.other() ) );\n+            builder.append( builder.length() > 0 ? \", \" : \"\" ).append( format( \"%s: %s\", stat.first().shortName(), stat.other() ) );\n         }\n-        return builder.toString();\n+\n+return builder.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
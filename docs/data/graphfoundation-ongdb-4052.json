{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4052",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4052/TransactionLogUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4052/TransactionLogUtils.java\nindex 75dbd4d5c69..14549b9ab66 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4052/TransactionLogUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4052/TransactionLogUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.util;\n \n import java.io.File;\n@@ -44,49 +45,49 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogHeaderReader.readLo\n \n public class TransactionLogUtils\n {\n-    /**\n-     * Opens a {@link LogEntryCursor} over all log files found in the storeDirectory\n-     *\n-     * @param fs {@link FileSystemAbstraction} to find {@code storeDirectory} in.\n-     * @param logFiles the physical log files to read from\n-     */\n-    public static LogEntryCursor openLogs( final FileSystemAbstraction fs, LogFiles logFiles )\n-            throws IOException\n-    {\n-        File firstFile = logFiles.getLogFileForVersion( logFiles.getLowestLogVersion() );\n-        return openLogEntryCursor( fs, firstFile, new ReaderLogVersionBridge( logFiles ) );\n-    }\n+  /**\n+   * Opens a {@link LogEntryCursor} over all log files found in the storeDirectory\n+   *\n+   * @param fs       {@link FileSystemAbstraction} to find {@code storeDirectory} in.\n+   * @param logFiles the physical log files to read from\n+   */\n+  public static LogEntryCursor openLogs(final FileSystemAbstraction fs, LogFiles logFiles)\n+      throws IOException\n+  {\n+    File firstFile = logFiles.getLogFileForVersion(logFiles.getLowestLogVersion());\n+    return openLogEntryCursor(fs, firstFile, new ReaderLogVersionBridge(logFiles));\n+  }\n \n-    /**\n-     * Opens a {@link LogEntryCursor} for requested file\n-     *\n-     * @param fileSystem to find {@code file} in.\n-     * @param file file to open\n-     * @param readerLogVersionBridge log version bridge to use\n-     */\n-    public static LogEntryCursor openLogEntryCursor( FileSystemAbstraction fileSystem, File file,\n-            LogVersionBridge readerLogVersionBridge ) throws IOException\n-    {\n-        LogVersionedStoreChannel channel = openVersionedChannel( fileSystem, file );\n-        ReadableLogChannel logChannel = new ReadAheadLogChannel( channel, readerLogVersionBridge );\n-        LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader = new VersionAwareLogEntryReader<>();\n-        return new LogEntryCursor( logEntryReader, logChannel );\n-    }\n+  /**\n+   * Opens a {@link LogEntryCursor} for requested file\n+   *\n+   * @param fileSystem             to find {@code file} in.\n+   * @param file                   file to open\n+   * @param readerLogVersionBridge log version bridge to use\n+   */\n+  public static LogEntryCursor openLogEntryCursor(FileSystemAbstraction fileSystem, File file,\n+                                                  LogVersionBridge readerLogVersionBridge) throws IOException\n+  {\n+    LogVersionedStoreChannel channel = openVersionedChannel(fileSystem, file);\n+    ReadableLogChannel logChannel = new ReadAheadLogChannel(channel, readerLogVersionBridge);\n+    LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader = new VersionAwareLogEntryReader<>();\n+    return new LogEntryCursor(logEntryReader, logChannel);\n+  }\n \n-    /**\n-     * Opens a file in given {@code fileSystem} as a {@link LogVersionedStoreChannel}.\n-     *\n-     * @param fileSystem {@link FileSystemAbstraction} containing the file to open.\n-     * @param file file to open as a channel.\n-     * @return {@link LogVersionedStoreChannel} for the file. Its version is determined by its log header.\n-     * @throws IOException on I/O error.\n-     */\n-    public static LogVersionedStoreChannel openVersionedChannel( FileSystemAbstraction fileSystem, File file ) throws IOException\n-    {\n-        StoreChannel fileChannel = fileSystem.open( file, OpenMode.READ );\n-        LogHeader logHeader = readLogHeader( ByteBuffer.allocate( LOG_HEADER_SIZE ), fileChannel, true, file );\n-        PhysicalLogVersionedStoreChannel channel =\n-                new PhysicalLogVersionedStoreChannel( fileChannel, logHeader.logVersion, logHeader.logFormatVersion );\n-        return channel;\n-    }\n+  /**\n+   * Opens a file in given {@code fileSystem} as a {@link LogVersionedStoreChannel}.\n+   *\n+   * @param fileSystem {@link FileSystemAbstraction} containing the file to open.\n+   * @param file       file to open as a channel.\n+   * @return {@link LogVersionedStoreChannel} for the file. Its version is determined by its log header.\n+   * @throws IOException on I/O error.\n+   */\n+  public static LogVersionedStoreChannel openVersionedChannel(FileSystemAbstraction fileSystem, File file) throws IOException\n+  {\n+    StoreChannel fileChannel = fileSystem.open(file, OpenMode.READ);\n+    LogHeader logHeader = readLogHeader(ByteBuffer.allocate(LOG_HEADER_SIZE), fileChannel, true, file);\n+    PhysicalLogVersionedStoreChannel channel =\n+        new PhysicalLogVersionedStoreChannel(fileChannel, logHeader.logVersion, logHeader.logFormatVersion);\n+    return channel;\n+  }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4052/TransactionLogUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4052/TransactionLogUtils.java\nindex 75dbd4d5c69..10ceb9f5d97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4052/TransactionLogUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4052/TransactionLogUtils.java\n@@ -50,9 +50,8 @@ public class TransactionLogUtils\n      * @param fs {@link FileSystemAbstraction} to find {@code storeDirectory} in.\n      * @param logFiles the physical log files to read from\n      */\n-    public static LogEntryCursor openLogs( final FileSystemAbstraction fs, LogFiles logFiles )\n-            throws IOException\n-    {\n+    public static LogEntryCursor openLogs( final FileSystemAbstraction fs, LogFiles logFiles ) throws IOException\n+{\n         File firstFile = logFiles.getLogFileForVersion( logFiles.getLowestLogVersion() );\n         return openLogEntryCursor( fs, firstFile, new ReaderLogVersionBridge( logFiles ) );\n     }\n@@ -66,7 +65,7 @@ public class TransactionLogUtils\n      */\n     public static LogEntryCursor openLogEntryCursor( FileSystemAbstraction fileSystem, File file,\n             LogVersionBridge readerLogVersionBridge ) throws IOException\n-    {\n+{\n         LogVersionedStoreChannel channel = openVersionedChannel( fileSystem, file );\n         ReadableLogChannel logChannel = new ReadAheadLogChannel( channel, readerLogVersionBridge );\n         LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader = new VersionAwareLogEntryReader<>();\n@@ -85,8 +84,7 @@ public class TransactionLogUtils\n     {\n         StoreChannel fileChannel = fileSystem.open( file, OpenMode.READ );\n         LogHeader logHeader = readLogHeader( ByteBuffer.allocate( LOG_HEADER_SIZE ), fileChannel, true, file );\n-        PhysicalLogVersionedStoreChannel channel =\n-                new PhysicalLogVersionedStoreChannel( fileChannel, logHeader.logVersion, logHeader.logFormatVersion );\n-        return channel;\n+        PhysicalLogVersionedStoreChannel channel = new PhysicalLogVersionedStoreChannel( fileChannel, logHeader.logVersion, logHeader.logFormatVersion );\n+return channel;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "1039",
    "information": {
        "errors": [
            {
                "line": "22",
                "severity": "error",
                "message": "No trailing whitespace allowed.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/**\n * Abstract class which contains a Thread and delegates the common Thread methods to that instance.\n * \n * The purpose of this class is to workaround Sun JVM bug #6915621, in which something internal to\n * the JDK uses Thread.currentThread() as a monitor lock. This can produce deadlocks like\n * HBASE-4367, HBASE-4101, etc.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1039/HasThread.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1039/HasThread.java\nindex c3ce1989ee6..d3ee50dd3a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1039/HasThread.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1039/HasThread.java\n@@ -4,9 +4,9 @@\n  * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n  * copy of the License at\n- *\n+ * <p>\n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software distributed under the License\n  * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n  * or implied. See the License for the specific language governing permissions and limitations under\n@@ -19,7 +19,7 @@ import java.lang.Thread.UncaughtExceptionHandler;\n \n /**\n  * Abstract class which contains a Thread and delegates the common Thread methods to that instance.\n- * \n+ *\n  * The purpose of this class is to workaround Sun JVM bug #6915621, in which something internal to\n  * the JDK uses Thread.currentThread() as a monitor lock. This can produce deadlocks like\n  * HBASE-4367, HBASE-4101, etc.\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1039/HasThread.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1039/HasThread.java\nindex c3ce1989ee6..232dd1f102e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1039/HasThread.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1039/HasThread.java\n@@ -91,4 +91,4 @@ public abstract class HasThread implements Runnable {\n     thread.join(millis);\n   }\n   // // End delegation to Thread\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1039/HasThread.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1039/HasThread.java\nindex c3ce1989ee6..66a983010c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1039/HasThread.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1039/HasThread.java\n@@ -24,7 +24,9 @@ import java.lang.Thread.UncaughtExceptionHandler;\n  * the JDK uses Thread.currentThread() as a monitor lock. This can produce deadlocks like\n  * HBASE-4367, HBASE-4101, etc.\n  */\n+\n public abstract class HasThread implements Runnable {\n+\n   private final Thread thread;\n \n   public HasThread() {\n@@ -91,4 +93,5 @@ public abstract class HasThread implements Runnable {\n     thread.join(millis);\n   }\n   // // End delegation to Thread\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
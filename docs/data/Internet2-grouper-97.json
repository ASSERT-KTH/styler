{
    "project_name": "Internet2-grouper",
    "error_id": "97",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * style license a copy of which has been included with this distribution in\n * the LICENSE.txt file.\n * \n * Created on 22. June 2006 by Mauro Talevi\n */\npackage edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.json;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/97/JsonHierarchicalStreamDriver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/97/JsonHierarchicalStreamDriver.java\nindex 638894d0e0e..dbc96e649de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/97/JsonHierarchicalStreamDriver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/97/JsonHierarchicalStreamDriver.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -21,9 +21,10 @@\n  * The software in this package is published under the terms of the BSD\r\n  * style license a copy of which has been included with this distribution in\r\n  * the LICENSE.txt file.\r\n- * \r\n+ *\r\n  * Created on 22. June 2006 by Mauro Talevi\r\n  */\r\n+\r\n package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.json;\r\n \r\n import java.io.InputStream;\r\n@@ -43,25 +44,25 @@ import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.Str\n  * @since 1.2\r\n  */\r\n public class JsonHierarchicalStreamDriver implements HierarchicalStreamDriver {\r\n-    public HierarchicalStreamReader createReader(Reader in) {\r\n-        throw new UnsupportedOperationException(\"The JsonHierarchicalStreamDriver can only write JSON\");\r\n-    }\r\n+  public HierarchicalStreamReader createReader(Reader in) {\r\n+    throw new UnsupportedOperationException(\"The JsonHierarchicalStreamDriver can only write JSON\");\r\n+  }\r\n \r\n-    public HierarchicalStreamReader createReader(InputStream in) {\r\n-        throw new UnsupportedOperationException(\"The JsonHierarchicalStreamDriver can only write JSON\");\r\n-    }\r\n+  public HierarchicalStreamReader createReader(InputStream in) {\r\n+    throw new UnsupportedOperationException(\"The JsonHierarchicalStreamDriver can only write JSON\");\r\n+  }\r\n \r\n-    public HierarchicalStreamWriter createWriter(Writer out) {\r\n-        return new JsonHierarchicalStreamWriter(out);\r\n-    }\r\n+  public HierarchicalStreamWriter createWriter(Writer out) {\r\n+    return new JsonHierarchicalStreamWriter(out);\r\n+  }\r\n \r\n-    public HierarchicalStreamWriter createWriter(OutputStream out) {\r\n-        try {\r\n-            // JSON spec requires UTF-8\r\n-            return createWriter(new OutputStreamWriter(out, \"UTF-8\"));\r\n-        } catch (UnsupportedEncodingException e) {\r\n-            throw new StreamException(e);\r\n-        }\r\n+  public HierarchicalStreamWriter createWriter(OutputStream out) {\r\n+    try {\r\n+      // JSON spec requires UTF-8\r\n+      return createWriter(new OutputStreamWriter(out, \"UTF-8\"));\r\n+    } catch (UnsupportedEncodingException e) {\r\n+      throw new StreamException(e);\r\n     }\r\n+  }\r\n \r\n }\r\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/97/JsonHierarchicalStreamDriver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/97/JsonHierarchicalStreamDriver.java\nindex 638894d0e0e..25951a1e5fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/97/JsonHierarchicalStreamDriver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/97/JsonHierarchicalStreamDriver.java\n@@ -64,4 +64,4 @@ public class JsonHierarchicalStreamDriver implements HierarchicalStreamDriver {\n         }\r\n     }\r\n \r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/97/JsonHierarchicalStreamDriver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/97/JsonHierarchicalStreamDriver.java\nindex 638894d0e0e..b8ee5376a84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/97/JsonHierarchicalStreamDriver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/97/JsonHierarchicalStreamDriver.java\n@@ -24,44 +24,47 @@\n  * \r\n  * Created on 22. June 2006 by Mauro Talevi\r\n  */\r\n-package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.json;\r\n-\r\n-import java.io.InputStream;\r\n-import java.io.OutputStream;\r\n-import java.io.OutputStreamWriter;\r\n-import java.io.Reader;\r\n-import java.io.UnsupportedEncodingException;\r\n-import java.io.Writer;\r\n-\r\n-import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamDriver;\r\n-import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamReader;\r\n-import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamWriter;\r\n+package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.json;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.io.OutputStreamWriter;\n+import java.io.Reader;\n+import java.io.UnsupportedEncodingException;\n+import java.io.Writer;\n+import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamDriver;\n+import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamReader;\n+import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.HierarchicalStreamWriter;\n import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io.StreamException;\r\n \r\n /**\r\n  * @author Paul Hammant\r\n  * @since 1.2\r\n- */\r\n-public class JsonHierarchicalStreamDriver implements HierarchicalStreamDriver {\r\n-    public HierarchicalStreamReader createReader(Reader in) {\r\n-        throw new UnsupportedOperationException(\"The JsonHierarchicalStreamDriver can only write JSON\");\r\n-    }\r\n-\r\n-    public HierarchicalStreamReader createReader(InputStream in) {\r\n-        throw new UnsupportedOperationException(\"The JsonHierarchicalStreamDriver can only write JSON\");\r\n-    }\r\n-\r\n-    public HierarchicalStreamWriter createWriter(Writer out) {\r\n-        return new JsonHierarchicalStreamWriter(out);\r\n-    }\r\n-\r\n-    public HierarchicalStreamWriter createWriter(OutputStream out) {\r\n+ */\n+\n+\n+public class JsonHierarchicalStreamDriver implements HierarchicalStreamDriver {\n+    public HierarchicalStreamReader createReader(Reader in) {\n+        throw new UnsupportedOperationException(\"The JsonHierarchicalStreamDriver can only write JSON\");\n+    }\n+\n+\n+    public HierarchicalStreamReader createReader(InputStream in) {\n+        throw new UnsupportedOperationException(\"The JsonHierarchicalStreamDriver can only write JSON\");\n+    }\n+\n+\n+    public HierarchicalStreamWriter createWriter(Writer out) {\n+        return new JsonHierarchicalStreamWriter(out);\n+    }\n+\n+\n+    public HierarchicalStreamWriter createWriter(OutputStream out) {\n         try {\r\n-            // JSON spec requires UTF-8\r\n-            return createWriter(new OutputStreamWriter(out, \"UTF-8\"));\r\n-        } catch (UnsupportedEncodingException e) {\r\n-            throw new StreamException(e);\r\n-        }\r\n-    }\r\n-\r\n-}\r\n+            // JSON spec requires UTF-8\n+            return createWriter(new OutputStreamWriter(out, \"UTF-8\"));\n+        } catch (UnsupportedEncodingException e) {\n+            throw new StreamException(e);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
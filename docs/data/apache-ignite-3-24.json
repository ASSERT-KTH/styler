{
    "project_name": "apache-ignite-3",
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "24",
                "column": "5",
                "severity": "error",
                "message": "'VARIABLE_DEF' should be separated from previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "public class LocalFileMetaImpl implements LocalFileMetaOutter.LocalFileMeta, LocalFileMetaOutter.LocalFileMeta.Builder {\n    private LocalFileMetaOutter.FileSource fileSource;\n    private String checksum;\n\n    @Override public LocalFileMetaOutter.FileSource getSource() {\n        return fileSource;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/24/LocalFileMetaImpl.java\nindex a74ea467925..612214cb5e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/24/LocalFileMetaImpl.java\n@@ -21,6 +21,7 @@ import org.apache.ignite.raft.jraft.rpc.Message;\n \n public class LocalFileMetaImpl implements LocalFileMetaOutter.LocalFileMeta, LocalFileMetaOutter.LocalFileMeta.Builder {\n     private LocalFileMetaOutter.FileSource fileSource;\n+\n     private String checksum;\n \n     @Override public LocalFileMetaOutter.FileSource getSource() {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/24/LocalFileMetaImpl.java\nindex a74ea467925..31e45b88e2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/24/LocalFileMetaImpl.java\n@@ -14,70 +14,85 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.ignite.raft.jraft.rpc.message;\n \n import org.apache.ignite.raft.jraft.entity.LocalFileMetaOutter;\n import org.apache.ignite.raft.jraft.rpc.Message;\n \n public class LocalFileMetaImpl implements LocalFileMetaOutter.LocalFileMeta, LocalFileMetaOutter.LocalFileMeta.Builder {\n-    private LocalFileMetaOutter.FileSource fileSource;\n-    private String checksum;\n-\n-    @Override public LocalFileMetaOutter.FileSource getSource() {\n-        return fileSource;\n-    }\n+  private LocalFileMetaOutter.FileSource fileSource;\n \n-    @Override public String getChecksum() {\n-        return checksum;\n-    }\n+  private String checksum;\n \n-    @Override public boolean hasChecksum() {\n-        return checksum != null;\n-    }\n+  @Override\n+  public LocalFileMetaOutter.FileSource getSource() {\n+    return fileSource;\n+  }\n \n-    @Override public boolean hasUserMeta() {\n-        return false;\n-    }\n+  @Override\n+  public String getChecksum() {\n+    return checksum;\n+  }\n \n-    @Override public LocalFileMetaOutter.LocalFileMeta build() {\n-        return this;\n-    }\n+  @Override\n+  public boolean hasChecksum() {\n+    return checksum != null;\n+  }\n \n-    @Override public void mergeFrom(Message fileMeta) {\n-        LocalFileMetaOutter.LocalFileMeta tmp = (LocalFileMetaOutter.LocalFileMeta) fileMeta;\n+  @Override\n+  public boolean hasUserMeta() {\n+    return false;\n+  }\n \n-        this.fileSource = tmp.getSource();\n-        this.checksum = tmp.getChecksum();\n-    }\n+  @Override\n+  public LocalFileMetaOutter.LocalFileMeta build() {\n+    return this;\n+  }\n \n-    @Override public Builder setChecksum(String checksum) {\n-        this.checksum = checksum;\n+  @Override\n+  public void mergeFrom(Message fileMeta) {\n+    LocalFileMetaOutter.LocalFileMeta tmp = (LocalFileMetaOutter.LocalFileMeta) fileMeta;\n \n-        return this;\n-    }\n+    this.fileSource = tmp.getSource();\n+    this.checksum = tmp.getChecksum();\n+  }\n \n-    @Override public Builder setSource(LocalFileMetaOutter.FileSource source) {\n-        this.fileSource = source;\n+  @Override\n+  public Builder setChecksum(String checksum) {\n+    this.checksum = checksum;\n \n-        return this;\n-    }\n+    return this;\n+  }\n \n-    @Override public boolean equals(Object o) {\n-        if (this == o)\n-            return true;\n-        if (o == null || getClass() != o.getClass())\n-            return false;\n+  @Override\n+  public Builder setSource(LocalFileMetaOutter.FileSource source) {\n+    this.fileSource = source;\n \n-        LocalFileMetaImpl that = (LocalFileMetaImpl) o;\n+    return this;\n+  }\n \n-        if (fileSource != that.fileSource)\n-            return false;\n-        return checksum.equals(that.checksum);\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n \n-    @Override public int hashCode() {\n-        int result = fileSource.hashCode();\n-        result = 31 * result + checksum.hashCode();\n-        return result;\n+    LocalFileMetaImpl that = (LocalFileMetaImpl) o;\n+\n+    if (fileSource != that.fileSource) {\n+      return false;\n     }\n+    return checksum.equals(that.checksum);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int result = fileSource.hashCode();\n+    result = 31 * result + checksum.hashCode();\n+    return result;\n+  }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/24/LocalFileMetaImpl.java\nindex a74ea467925..954cc2d9d9b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/24/LocalFileMetaImpl.java\n@@ -80,4 +80,4 @@ public class LocalFileMetaImpl implements LocalFileMetaOutter.LocalFileMeta, Loc\n         result = 31 * result + checksum.hashCode();\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "46",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "51",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "63",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "70",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "77",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/24/LocalFileMetaImpl.java\nindex a74ea467925..f8a710f34da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/24/LocalFileMetaImpl.java\n@@ -19,65 +19,82 @@ package org.apache.ignite.raft.jraft.rpc.message;\n import org.apache.ignite.raft.jraft.entity.LocalFileMetaOutter;\n import org.apache.ignite.raft.jraft.rpc.Message;\n \n+\n public class LocalFileMetaImpl implements LocalFileMetaOutter.LocalFileMeta, LocalFileMetaOutter.LocalFileMeta.Builder {\n+\n     private LocalFileMetaOutter.FileSource fileSource;\n+\n+\n     private String checksum;\n \n+\n     @Override public LocalFileMetaOutter.FileSource getSource() {\n         return fileSource;\n     }\n \n+\n     @Override public String getChecksum() {\n         return checksum;\n     }\n \n+\n     @Override public boolean hasChecksum() {\n         return checksum != null;\n     }\n \n+\n     @Override public boolean hasUserMeta() {\n         return false;\n     }\n \n+\n     @Override public LocalFileMetaOutter.LocalFileMeta build() {\n         return this;\n     }\n \n-    @Override public void mergeFrom(Message fileMeta) {\n-        LocalFileMetaOutter.LocalFileMeta tmp = (LocalFileMetaOutter.LocalFileMeta) fileMeta;\n \n+    @Override public void mergeFrom(Message fileMeta) {\n+        LocalFileMetaOutter.LocalFileMeta tmp = (LocalFileMetaOutter.LocalFileMeta)fileMeta;\n         this.fileSource = tmp.getSource();\n         this.checksum = tmp.getChecksum();\n     }\n \n+\n     @Override public Builder setChecksum(String checksum) {\n         this.checksum = checksum;\n \n         return this;\n     }\n \n+\n     @Override public Builder setSource(LocalFileMetaOutter.FileSource source) {\n         this.fileSource = source;\n \n         return this;\n     }\n \n+\n     @Override public boolean equals(Object o) {\n         if (this == o)\n             return true;\n+\n         if (o == null || getClass() != o.getClass())\n             return false;\n \n-        LocalFileMetaImpl that = (LocalFileMetaImpl) o;\n+        LocalFileMetaImpl that = (LocalFileMetaImpl)o;\n \n         if (fileSource != that.fileSource)\n             return false;\n+\n         return checksum.equals(that.checksum);\n     }\n \n+\n     @Override public int hashCode() {\n         int result = fileSource.hashCode();\n+\n         result = 31 * result + checksum.hashCode();\n+\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/24/LocalFileMetaImpl.java\nindex a74ea467925..612214cb5e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/24/LocalFileMetaImpl.java\n@@ -21,6 +21,7 @@ import org.apache.ignite.raft.jraft.rpc.Message;\n \n public class LocalFileMetaImpl implements LocalFileMetaOutter.LocalFileMeta, LocalFileMetaOutter.LocalFileMeta.Builder {\n     private LocalFileMetaOutter.FileSource fileSource;\n+\n     private String checksum;\n \n     @Override public LocalFileMetaOutter.FileSource getSource() {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/24/LocalFileMetaImpl.java\nindex a74ea467925..612214cb5e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/24/LocalFileMetaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/24/LocalFileMetaImpl.java\n@@ -21,6 +21,7 @@ import org.apache.ignite.raft.jraft.rpc.Message;\n \n public class LocalFileMetaImpl implements LocalFileMetaOutter.LocalFileMeta, LocalFileMetaOutter.LocalFileMeta.Builder {\n     private LocalFileMetaOutter.FileSource fileSource;\n+\n     private String checksum;\n \n     @Override public LocalFileMetaOutter.FileSource getSource() {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "387",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/387/ThreadToStatementContextBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/387/ThreadToStatementContextBridge.java\nindex 1f7e8048157..1e35fe62d37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/387/ThreadToStatementContextBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/387/ThreadToStatementContextBridge.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.core;\n \n import java.util.Optional;\n@@ -36,102 +37,102 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n  */\n public class ThreadToStatementContextBridge extends LifecycleAdapter implements Supplier<Statement>\n {\n-    private final ThreadLocal<KernelTransaction> threadToTransactionMap = new ThreadLocal<>();\n-    private boolean isShutdown;\n+  private final ThreadLocal<KernelTransaction> threadToTransactionMap = new ThreadLocal<>();\n+  private boolean isShutdown;\n \n-    public boolean hasTransaction()\n-    {\n-        checkIfShutdown();\n-        return threadToTransactionMap.get() != null;\n-    }\n+  public boolean hasTransaction()\n+  {\n+    checkIfShutdown();\n+    return threadToTransactionMap.get() != null;\n+  }\n \n-    public void bindTransactionToCurrentThread( KernelTransaction transaction )\n+  public void bindTransactionToCurrentThread(KernelTransaction transaction)\n+  {\n+    if (threadToTransactionMap.get() != null)\n     {\n-        if ( threadToTransactionMap.get() != null )\n-        {\n-            throw new IllegalStateException( Thread.currentThread() + \" already has a transaction bound\" );\n-        }\n-        threadToTransactionMap.set( transaction );\n+      throw new IllegalStateException(Thread.currentThread() + \" already has a transaction bound\");\n     }\n+    threadToTransactionMap.set(transaction);\n+  }\n \n-    public void unbindTransactionFromCurrentThread()\n-    {\n-        threadToTransactionMap.remove();\n-    }\n+  public void unbindTransactionFromCurrentThread()\n+  {\n+    threadToTransactionMap.remove();\n+  }\n \n-    @Override\n-    public Statement get()\n-    {\n-        checkIfShutdown();\n-        return getKernelTransactionBoundToThisThread( true ).acquireStatement();\n-    }\n+  @Override\n+  public Statement get()\n+  {\n+    checkIfShutdown();\n+    return getKernelTransactionBoundToThisThread(true).acquireStatement();\n+  }\n \n-    private static void assertInUnterminatedTransaction( KernelTransaction transaction )\n+  private static void assertInUnterminatedTransaction(KernelTransaction transaction)\n+  {\n+    if (transaction == null)\n     {\n-        if ( transaction == null )\n-        {\n-            throw new BridgeNotInTransactionException();\n-        }\n-        if ( transaction.isTerminated() )\n-        {\n-            Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n-            throw new TransactionTerminatedException( terminationReason );\n-        }\n+      throw new BridgeNotInTransactionException();\n     }\n-\n-    public void assertInUnterminatedTransaction()\n+    if (transaction.isTerminated())\n     {\n-        checkIfShutdown();\n-        assertInUnterminatedTransaction( threadToTransactionMap.get() );\n+      Status terminationReason = transaction.getReasonIfTerminated().orElse(Status.Transaction.Terminated);\n+      throw new TransactionTerminatedException(terminationReason);\n     }\n+  }\n \n-    @Override\n-    public void shutdown()\n-    {\n-        isShutdown = true;\n-    }\n+  public void assertInUnterminatedTransaction()\n+  {\n+    checkIfShutdown();\n+    assertInUnterminatedTransaction(threadToTransactionMap.get());\n+  }\n \n-    private void checkIfShutdown()\n-    {\n-        if ( isShutdown )\n-        {\n-            throw new BridgeDatabaseShutdownException();\n-        }\n-    }\n+  @Override\n+  public void shutdown()\n+  {\n+    isShutdown = true;\n+  }\n \n-    public KernelTransaction getTopLevelTransactionBoundToThisThread( boolean strict )\n+  private void checkIfShutdown()\n+  {\n+    if (isShutdown)\n     {\n-        KernelTransaction transaction = threadToTransactionMap.get();\n-        if ( strict )\n-        {\n-            assertInUnterminatedTransaction( transaction );\n-        }\n-        return transaction;\n+      throw new BridgeDatabaseShutdownException();\n     }\n+  }\n \n-    public KernelTransaction getKernelTransactionBoundToThisThread( boolean strict )\n+  public KernelTransaction getTopLevelTransactionBoundToThisThread(boolean strict)\n+  {\n+    KernelTransaction transaction = threadToTransactionMap.get();\n+    if (strict)\n     {\n-        checkIfShutdown();\n-        return getTopLevelTransactionBoundToThisThread( strict );\n+      assertInUnterminatedTransaction(transaction);\n     }\n+    return transaction;\n+  }\n+\n+  public KernelTransaction getKernelTransactionBoundToThisThread(boolean strict)\n+  {\n+    checkIfShutdown();\n+    return getTopLevelTransactionBoundToThisThread(strict);\n+  }\n \n-    // Exceptions below extend the public API exceptions with versions that have status codes.\n-    // TODO why not add this status to the super exceptions?\n-    private static class BridgeNotInTransactionException extends NotInTransactionException implements Status.HasStatus\n+  // Exceptions below extend the public API exceptions with versions that have status codes.\n+  // TODO why not add this status to the super exceptions?\n+  private static class BridgeNotInTransactionException extends NotInTransactionException implements Status.HasStatus\n+  {\n+    @Override\n+    public Status status()\n     {\n-        @Override\n-        public Status status()\n-        {\n-            return Status.Request.TransactionRequired;\n-        }\n+      return Status.Request.TransactionRequired;\n     }\n+  }\n \n-    private static class BridgeDatabaseShutdownException extends DatabaseShutdownException implements Status.HasStatus\n+  private static class BridgeDatabaseShutdownException extends DatabaseShutdownException implements Status.HasStatus\n+  {\n+    @Override\n+    public Status status()\n     {\n-        @Override\n-        public Status status()\n-        {\n-            return Status.General.DatabaseUnavailable;\n-        }\n+      return Status.General.DatabaseUnavailable;\n     }\n+  }\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/387/ThreadToStatementContextBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/387/ThreadToStatementContextBridge.java\nindex 1f7e8048157..5d86f090beb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/387/ThreadToStatementContextBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/387/ThreadToStatementContextBridge.java\n@@ -72,7 +72,8 @@ public class ThreadToStatementContextBridge extends LifecycleAdapter implements\n         {\n             throw new BridgeNotInTransactionException();\n         }\n-        if ( transaction.isTerminated() )\n+\n+if ( transaction.isTerminated() )\n         {\n             Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n             throw new TransactionTerminatedException( terminationReason );\n@@ -106,7 +107,8 @@ public class ThreadToStatementContextBridge extends LifecycleAdapter implements\n         {\n             assertInUnterminatedTransaction( transaction );\n         }\n-        return transaction;\n+\n+return transaction;\n     }\n \n     public KernelTransaction getKernelTransactionBoundToThisThread( boolean strict )\n@@ -134,4 +136,4 @@ public class ThreadToStatementContextBridge extends LifecycleAdapter implements\n             return Status.General.DatabaseUnavailable;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "797",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "85",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "128",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "132",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/797/JMXDumper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/797/JMXDumper.java\nindex a4a44127768..94776884ce7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/797/JMXDumper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/797/JMXDumper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.dbms.diagnostics.jmx;\n \n import java.io.BufferedReader;\n@@ -38,108 +39,101 @@ import static org.neo4j.commandline.dbms.DiagnosticsReportCommand.PID_KEY;\n  */\n public class JMXDumper\n {\n-    private final Path homeDir;\n-    private final FileSystemAbstraction fs;\n-    private final PrintStream err;\n-    private final boolean verbose;\n-    private PrintStream out;\n+  private final Path homeDir;\n+  private final FileSystemAbstraction fs;\n+  private final PrintStream err;\n+  private final boolean verbose;\n+  private PrintStream out;\n \n-    public JMXDumper( Path homeDir, FileSystemAbstraction fs, PrintStream out, PrintStream err, boolean verbose )\n-    {\n-        this.homeDir = homeDir;\n-        this.fs = fs;\n-        this.err = err;\n-        this.verbose = verbose;\n-        this.out = out;\n-    }\n+  public JMXDumper(Path homeDir, FileSystemAbstraction fs, PrintStream out, PrintStream err, boolean verbose)\n+  {\n+    this.homeDir = homeDir;\n+    this.fs = fs;\n+    this.err = err;\n+    this.verbose = verbose;\n+    this.out = out;\n+  }\n \n-    public Optional<JmxDump> getJMXDump()\n-    {\n-        out.println( \"Finding running instance of neo4j\" );\n-\n-        Optional<Long> pid = getPid();\n-        if ( pid.isPresent() )\n-        {\n-            return getJMXDump( pid.get() );\n-        }\n-        else\n-        {\n-            out.println( \"No running instance of neo4j was found. Online reports will be omitted.\" );\n-            out.println( \"If neo4j is running but not detected, you can supply the process id of the running instance with --\" + PID_KEY );\n-            return Optional.empty();\n-        }\n-    }\n+  public Optional<JmxDump> getJMXDump()\n+  {\n+    out.println(\"Finding running instance of neo4j\");\n \n-    public Optional<JmxDump> getJMXDump( long pid )\n+    Optional<Long> pid = getPid();\n+    if (pid.isPresent())\n     {\n-        try\n-        {\n-            LocalVirtualMachine vm = LocalVirtualMachine.from( pid );\n-            out.println( \"Attached to running process with process id \" + pid );\n-            try\n-            {\n-                JmxDump jmxDump = JmxDump.connectTo( vm.getJmxAddress() );\n-                jmxDump.attachSystemProperties( vm.getSystemProperties() );\n-                out.println( \"Connected to JMX endpoint\" );\n-                return Optional.of( jmxDump );\n-            }\n-            catch ( IOException e )\n-            {\n-                printError( \"Unable to communicate with JMX endpoint. Reason: \" + e.getMessage(), e );\n-            }\n-        }\n-        catch ( java.lang.NoClassDefFoundError e )\n-        {\n-            printError( \"Unable to attach to process. Reason: JDK is not available, please point \" +\n-                    \"environment variable JAVA_HOME to a valid JDK location.\", e);\n-        }\n-        catch ( IOException e )\n-        {\n-            printError( \"Unable to connect to process with process id \" + pid + \". Reason: \" + e.getMessage(), e );\n-        }\n-\n-        return Optional.empty();\n+      return getJMXDump(pid.get());\n+    } else\n+    {\n+      out.println(\"No running instance of neo4j was found. Online reports will be omitted.\");\n+      out.println(\"If neo4j is running but not detected, you can supply the process id of the running instance with --\" + PID_KEY);\n+      return Optional.empty();\n     }\n+  }\n \n-    private void printError( String message, Throwable e )\n+  public Optional<JmxDump> getJMXDump(long pid)\n+  {\n+    try\n     {\n-        err.println( message );\n-        if ( verbose && e != null )\n-        {\n-            e.printStackTrace( err );\n-        }\n+      LocalVirtualMachine vm = LocalVirtualMachine.from(pid);\n+      out.println(\"Attached to running process with process id \" + pid);\n+      try\n+      {\n+        JmxDump jmxDump = JmxDump.connectTo(vm.getJmxAddress());\n+        jmxDump.attachSystemProperties(vm.getSystemProperties());\n+        out.println(\"Connected to JMX endpoint\");\n+        return Optional.of(jmxDump);\n+      } catch (IOException e)\n+      {\n+        printError(\"Unable to communicate with JMX endpoint. Reason: \" + e.getMessage(), e);\n+      }\n+    } catch (java.lang.NoClassDefFoundError e)\n+    {\n+      printError(\"Unable to attach to process. Reason: JDK is not available, please point \" +\n+          \"environment variable JAVA_HOME to a valid JDK location.\", e);\n+    } catch (IOException e)\n+    {\n+      printError(\"Unable to connect to process with process id \" + pid + \". Reason: \" + e.getMessage(), e);\n     }\n \n-    private void printError( String message )\n+    return Optional.empty();\n+  }\n+\n+  private void printError(String message, Throwable e)\n+  {\n+    err.println(message);\n+    if (verbose && e != null)\n     {\n-        printError( message, null );\n+      e.printStackTrace(err);\n     }\n+  }\n+\n+  private void printError(String message)\n+  {\n+    printError(message, null);\n+  }\n \n-    private Optional<Long> getPid()\n+  private Optional<Long> getPid()\n+  {\n+    Path pidFile = this.homeDir.resolve(\"run/neo4j.pid\");\n+    if (this.fs.fileExists(pidFile.toFile()))\n     {\n-        Path pidFile = this.homeDir.resolve( \"run/neo4j.pid\" );\n-        if ( this.fs.fileExists( pidFile.toFile() ) )\n+      // The file cannot be opened with write permissions on Windows\n+      try (InputStream inputStream = Files.newInputStream(pidFile, StandardOpenOption.READ);\n+           BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream)))\n+      {\n+        String pidFileContent = reader.readLine();\n+        try\n         {\n-            // The file cannot be opened with write permissions on Windows\n-            try ( InputStream inputStream = Files.newInputStream( pidFile, StandardOpenOption.READ );\n-                    BufferedReader reader = new BufferedReader( new InputStreamReader( inputStream ) ) )\n-            {\n-                String pidFileContent = reader.readLine();\n-                try\n-                {\n-                    return Optional.of( Long.parseLong( pidFileContent ) );\n-                }\n-\n-                catch ( NumberFormatException e )\n-                {\n-                    printError( pidFile.toString() + \" does not contain a valid id. Found: \" + pidFileContent );\n-                }\n-            }\n-            catch ( IOException e )\n-            {\n-                printError( \"Error reading the .pid file. Reason: \" + e.getMessage(), e );\n-            }\n+          return Optional.of(Long.parseLong(pidFileContent));\n+        } catch (NumberFormatException e)\n+        {\n+          printError(pidFile.toString() + \" does not contain a valid id. Found: \" + pidFileContent);\n         }\n-        return Optional.empty();\n+      } catch (IOException e)\n+      {\n+        printError(\"Error reading the .pid file. Reason: \" + e.getMessage(), e);\n+      }\n     }\n+    return Optional.empty();\n+  }\n }\n",
            "diff_size": 131
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/797/JMXDumper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/797/JMXDumper.java\nindex a4a44127768..bc70090c434 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/797/JMXDumper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/797/JMXDumper.java\n@@ -90,9 +90,8 @@ public class JMXDumper\n         }\n         catch ( java.lang.NoClassDefFoundError e )\n         {\n-            printError( \"Unable to attach to process. Reason: JDK is not available, please point \" +\n-                    \"environment variable JAVA_HOME to a valid JDK location.\", e);\n-        }\n+            printError( \"Unable to attach to process. Reason: JDK is not available, please point \" + \"environment variable JAVA_HOME to a valid JDK location.\", e );\n+    }\n         catch ( IOException e )\n         {\n             printError( \"Unable to connect to process with process id \" + pid + \". Reason: \" + e.getMessage(), e );\n@@ -122,15 +121,14 @@ public class JMXDumper\n         {\n             // The file cannot be opened with write permissions on Windows\n             try ( InputStream inputStream = Files.newInputStream( pidFile, StandardOpenOption.READ );\n-                    BufferedReader reader = new BufferedReader( new InputStreamReader( inputStream ) ) )\n+BufferedReader reader = new BufferedReader( new InputStreamReader( inputStream ) ) )\n             {\n                 String pidFileContent = reader.readLine();\n                 try\n                 {\n                     return Optional.of( Long.parseLong( pidFileContent ) );\n                 }\n-\n-                catch ( NumberFormatException e )\n+catch ( NumberFormatException e )\n                 {\n                     printError( pidFile.toString() + \" does not contain a valid id. Found: \" + pidFileContent );\n                 }\n@@ -142,4 +140,4 @@ public class JMXDumper\n         }\n         return Optional.empty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
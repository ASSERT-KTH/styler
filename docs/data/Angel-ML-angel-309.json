{
    "project_name": "Angel-ML-angel",
    "error_id": "309",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/309/LongArrayListIndexComparator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/309/LongArrayListIndexComparator.java\nindex 72a96c68270..2ee695cd510 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/309/LongArrayListIndexComparator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/309/LongArrayListIndexComparator.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.utils;\n \n import it.unimi.dsi.fastutil.ints.IntComparator;\n@@ -21,6 +22,7 @@ import it.unimi.dsi.fastutil.longs.LongArrayList;\n \n public class LongArrayListIndexComparator implements IntComparator {\n   private LongArrayList array;\n+\n   public LongArrayListIndexComparator(LongArrayList array) {\n     this.array = array;\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/309/LongArrayListIndexComparator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/309/LongArrayListIndexComparator.java\nindex 72a96c68270..610395520b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/309/LongArrayListIndexComparator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/309/LongArrayListIndexComparator.java\n@@ -27,13 +27,15 @@ public class LongArrayListIndexComparator implements IntComparator {\n \n   @Override\n   public int compare(int i, int i1) {\n-    if (array.getLong(i) == array.getLong(i1)) return 0;\n+    if (array.getLong(i) == array.getLong(i1))\n+  return 0;\n     return array.getLong(i) < array.getLong(i1) ? -1 : 1;\n   }\n \n   @Override\n   public int compare(Integer o1, Integer o2) {\n-    if (array.getLong(o1) == array.getLong(o2)) return 0;\n+    if (array.getLong(o1) == array.getLong(o2))\n+  return 0;\n     return array.getLong(o1) < array.getLong(o2) ? -1 : 1;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/309/LongArrayListIndexComparator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/309/LongArrayListIndexComparator.java\nindex 72a96c68270..34aa3fddee1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/309/LongArrayListIndexComparator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/309/LongArrayListIndexComparator.java\n@@ -20,20 +20,25 @@ import it.unimi.dsi.fastutil.ints.IntComparator;\n import it.unimi.dsi.fastutil.longs.LongArrayList;\n \n public class LongArrayListIndexComparator implements IntComparator {\n+\n   private LongArrayList array;\n+\n   public LongArrayListIndexComparator(LongArrayList array) {\n     this.array = array;\n   }\n \n   @Override\n   public int compare(int i, int i1) {\n-    if (array.getLong(i) == array.getLong(i1)) return 0;\n+    if (array.getLong(i) == array.getLong(i1))\n+      return 0;\n     return array.getLong(i) < array.getLong(i1) ? -1 : 1;\n   }\n \n   @Override\n   public int compare(Integer o1, Integer o2) {\n-    if (array.getLong(o1) == array.getLong(o2)) return 0;\n+    if (array.getLong(o1) == array.getLong(o2))\n+      return 0;\n     return array.getLong(o1) < array.getLong(o2) ? -1 : 1;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
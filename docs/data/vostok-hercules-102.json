{
    "project_name": "vostok-hercules",
    "error_id": "102",
    "information": {
        "errors": [
            {
                "line": "40",
                "column": "71",
                "severity": "warning",
                "message": "'+' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            return UUID.fromString(stringBuilder.toString());\n        } else {\n            throw new IllegalArgumentException(\"Invalid UUID string: \"+ uuidString);\n        }\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler/102/UuidUtil.java\nindex 95f4dd35971..9761e54cf09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler/102/UuidUtil.java\n@@ -37,7 +37,7 @@ public class UuidUtil {\n                     append(uuidString, 20, 32);\n             return UUID.fromString(stringBuilder.toString());\n         } else {\n-            throw new IllegalArgumentException(\"Invalid UUID string: \"+ uuidString);\n+            throw new IllegalArgumentException(\"Invalid UUID string: \" + uuidString);\n         }\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/intellij/102/UuidUtil.java\nindex 95f4dd35971..3a272b3f6c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/intellij/102/UuidUtil.java\n@@ -9,43 +9,43 @@ import java.util.regex.Pattern;\n  * @author Petr Demenev\n  */\n public class UuidUtil {\n-    private static final Pattern UUID_PATTERN =\n-            Pattern.compile(\"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\");\n-    private static final Pattern UUID_WITHOUT_HYPHENS_PATTERN = Pattern.compile(\"[0-9A-Fa-f]{32}\");\n+  private static final Pattern UUID_PATTERN =\n+    Pattern.compile(\"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\");\n+  private static final Pattern UUID_WITHOUT_HYPHENS_PATTERN = Pattern.compile(\"[0-9A-Fa-f]{32}\");\n \n-    public static boolean isUuid(String string) {\n-        return UUID_PATTERN.matcher(string).matches();\n-    }\n+  public static boolean isUuid(String string) {\n+    return UUID_PATTERN.matcher(string).matches();\n+  }\n \n-    public static boolean isUuidWithoutHyphens(String string) {\n-        return UUID_WITHOUT_HYPHENS_PATTERN.matcher(string).matches();\n-    }\n+  public static boolean isUuidWithoutHyphens(String string) {\n+    return UUID_WITHOUT_HYPHENS_PATTERN.matcher(string).matches();\n+  }\n \n-    public static UUID fromString(String uuidString) {\n-        if (isUuid(uuidString)) {\n-            return UUID.fromString(uuidString);\n-        } else if (isUuidWithoutHyphens(uuidString)) {\n-            StringBuilder stringBuilder = new StringBuilder();\n-            stringBuilder.append(uuidString, 0, 8).\n-                    append(\"-\").\n-                    append(uuidString, 8, 12).\n-                    append(\"-\").\n-                    append(uuidString, 12, 16).\n-                    append(\"-\").\n-                    append(uuidString, 16, 20).\n-                    append(\"-\").\n-                    append(uuidString, 20, 32);\n-            return UUID.fromString(stringBuilder.toString());\n-        } else {\n-            throw new IllegalArgumentException(\"Invalid UUID string: \"+ uuidString);\n-        }\n+  public static UUID fromString(String uuidString) {\n+    if (isUuid(uuidString)) {\n+      return UUID.fromString(uuidString);\n+    } else if (isUuidWithoutHyphens(uuidString)) {\n+      StringBuilder stringBuilder = new StringBuilder();\n+      stringBuilder.append(uuidString, 0, 8).\n+        append(\"-\").\n+        append(uuidString, 8, 12).\n+        append(\"-\").\n+        append(uuidString, 12, 16).\n+        append(\"-\").\n+        append(uuidString, 16, 20).\n+        append(\"-\").\n+        append(uuidString, 20, 32);\n+      return UUID.fromString(stringBuilder.toString());\n+    } else {\n+      throw new IllegalArgumentException(\"Invalid UUID string: \" + uuidString);\n     }\n+  }\n \n-    public static String getUuidWithoutHyphens(UUID uuid) {\n-        return uuid.toString().replaceAll(\"-\",\"\");\n-    }\n+  public static String getUuidWithoutHyphens(UUID uuid) {\n+    return uuid.toString().replaceAll(\"-\", \"\");\n+  }\n \n-    private UuidUtil(){\n-        /* static class */\n-    }\n+  private UuidUtil() {\n+    /* static class */\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/naturalize/102/UuidUtil.java\nindex 95f4dd35971..204731fd021 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/naturalize/102/UuidUtil.java\n@@ -11,7 +11,8 @@ import java.util.regex.Pattern;\n public class UuidUtil {\n     private static final Pattern UUID_PATTERN =\n             Pattern.compile(\"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\");\n-    private static final Pattern UUID_WITHOUT_HYPHENS_PATTERN = Pattern.compile(\"[0-9A-Fa-f]{32}\");\n+\n+private static final Pattern UUID_WITHOUT_HYPHENS_PATTERN = Pattern.compile(\"[0-9A-Fa-f]{32}\");\n \n     public static boolean isUuid(String string) {\n         return UUID_PATTERN.matcher(string).matches();\n@@ -26,18 +27,10 @@ public class UuidUtil {\n             return UUID.fromString(uuidString);\n         } else if (isUuidWithoutHyphens(uuidString)) {\n             StringBuilder stringBuilder = new StringBuilder();\n-            stringBuilder.append(uuidString, 0, 8).\n-                    append(\"-\").\n-                    append(uuidString, 8, 12).\n-                    append(\"-\").\n-                    append(uuidString, 12, 16).\n-                    append(\"-\").\n-                    append(uuidString, 16, 20).\n-                    append(\"-\").\n-                    append(uuidString, 20, 32);\n+            stringBuilder.append(uuidString, 0, 8).append(\"-\").append(uuidString, 8, 12).append(\"-\").append(uuidString, 12, 16).append(\"-\").append(uuidString, 16, 20).append(\"-\").append(uuidString, 20, 32);\n             return UUID.fromString(stringBuilder.toString());\n         } else {\n-            throw new IllegalArgumentException(\"Invalid UUID string: \"+ uuidString);\n+            throw new IllegalArgumentException(\"Invalid UUID string: \" + uuidString);\n         }\n     }\n \n@@ -45,7 +38,7 @@ public class UuidUtil {\n         return uuid.toString().replaceAll(\"-\",\"\");\n     }\n \n-    private UuidUtil(){\n+    private UuidUtil() {\n         /* static class */\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/codebuff/102/UuidUtil.java\nindex 95f4dd35971..bd778efd677 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/codebuff/102/UuidUtil.java\n@@ -8,44 +8,48 @@ import java.util.regex.Pattern;\n  *\n  * @author Petr Demenev\n  */\n+\n+\n public class UuidUtil {\n-    private static final Pattern UUID_PATTERN =\n-            Pattern.compile(\"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\");\n+\n+    private static final Pattern UUID_PATTERN = Pattern.compile(\"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\");\n     private static final Pattern UUID_WITHOUT_HYPHENS_PATTERN = Pattern.compile(\"[0-9A-Fa-f]{32}\");\n \n     public static boolean isUuid(String string) {\n-        return UUID_PATTERN.matcher(string).matches();\n+        return UUID_PATTERN.matcher(string)\n+        .matches();\n     }\n \n     public static boolean isUuidWithoutHyphens(String string) {\n-        return UUID_WITHOUT_HYPHENS_PATTERN.matcher(string).matches();\n+        return UUID_WITHOUT_HYPHENS_PATTERN.matcher(string)\n+        .matches();\n     }\n \n     public static UUID fromString(String uuidString) {\n         if (isUuid(uuidString)) {\n             return UUID.fromString(uuidString);\n         } else if (isUuidWithoutHyphens(uuidString)) {\n-            StringBuilder stringBuilder = new StringBuilder();\n-            stringBuilder.append(uuidString, 0, 8).\n-                    append(\"-\").\n-                    append(uuidString, 8, 12).\n-                    append(\"-\").\n-                    append(uuidString, 12, 16).\n-                    append(\"-\").\n-                    append(uuidString, 16, 20).\n-                    append(\"-\").\n-                    append(uuidString, 20, 32);\n-            return UUID.fromString(stringBuilder.toString());\n+                   StringBuilder stringBuilder = new StringBuilder();\n+                   stringBuilder.append(uuidString, 0, 8)\n+                       .append(\"-\")\n+                           .append(uuidString, 8, 12)\n+                               .append(\"-\")\n+                                   .append(uuidString, 12, 16)\n+                                       .append(\"-\")\n+                                           .append(uuidString, 16, 20)\n+                                               .append(\"-\").append(uuidString, 20, 32);\n+                   return UUID.fromString(stringBuilder.toString());\n         } else {\n-            throw new IllegalArgumentException(\"Invalid UUID string: \"+ uuidString);\n-        }\n+                   throw new IllegalArgumentException(\"Invalid UUID string: \" + uuidString);\n+               }\n     }\n \n     public static String getUuidWithoutHyphens(UUID uuid) {\n-        return uuid.toString().replaceAll(\"-\",\"\");\n+        return uuid.toString()\n+        .replaceAll(\"-\", \"\");\n     }\n \n-    private UuidUtil(){\n+    private UuidUtil() {\n         /* static class */\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler_random/102/UuidUtil.java\nindex 95f4dd35971..9761e54cf09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler_random/102/UuidUtil.java\n@@ -37,7 +37,7 @@ public class UuidUtil {\n                     append(uuidString, 20, 32);\n             return UUID.fromString(stringBuilder.toString());\n         } else {\n-            throw new IllegalArgumentException(\"Invalid UUID string: \"+ uuidString);\n+            throw new IllegalArgumentException(\"Invalid UUID string: \" + uuidString);\n         }\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler_three_grams/102/UuidUtil.java\nindex 95f4dd35971..9761e54cf09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/errored/1/102/UuidUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vostok-hercules/styler_three_grams/102/UuidUtil.java\n@@ -37,7 +37,7 @@ public class UuidUtil {\n                     append(uuidString, 20, 32);\n             return UUID.fromString(stringBuilder.toString());\n         } else {\n-            throw new IllegalArgumentException(\"Invalid UUID string: \"+ uuidString);\n+            throw new IllegalArgumentException(\"Invalid UUID string: \" + uuidString);\n         }\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
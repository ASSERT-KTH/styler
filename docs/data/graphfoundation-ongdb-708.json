{
    "project_name": "graphfoundation-ongdb",
    "error_id": "708",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/708/HeartbeatMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/708/HeartbeatMessage.java\nindex c915ebf7f39..d0e230d4e9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/708/HeartbeatMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/708/HeartbeatMessage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.heartbeat;\n \n import java.io.Serializable;\n@@ -29,107 +30,107 @@ import org.neo4j.cluster.com.message.MessageType;\n  * Messages used by the {@link HeartbeatState} state machine.\n  */\n public enum HeartbeatMessage\n-        implements MessageType\n+    implements MessageType\n {\n-    // Heartbeat API messages\n-    addHeartbeatListener, removeHeartbeatListener,\n+  // Heartbeat API messages\n+  addHeartbeatListener, removeHeartbeatListener,\n+\n+  // Protocol messages\n+  join, leave,\n+  i_am_alive, timed_out, sendHeartbeat, reset_send_heartbeat, suspicions;\n+\n+  public static class IAmAliveState\n+      implements Serializable\n+  {\n+    private static final long serialVersionUID = 6799806932628197123L;\n+\n+    private InstanceId server;\n \n-    // Protocol messages\n-    join, leave,\n-    i_am_alive, timed_out, sendHeartbeat, reset_send_heartbeat, suspicions;\n+    public IAmAliveState(InstanceId server)\n+    {\n+      this.server = server;\n+    }\n \n-    public static class IAmAliveState\n-            implements Serializable\n+    public InstanceId getServer()\n     {\n-        private static final long serialVersionUID = 6799806932628197123L;\n-\n-        private InstanceId server;\n-\n-        public IAmAliveState( InstanceId server )\n-        {\n-            this.server = server;\n-        }\n-\n-        public InstanceId getServer()\n-        {\n-            return server;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"i_am_alive[\" + server + \"]\";\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-\n-            IAmAliveState that = (IAmAliveState) o;\n-\n-            return server != null ? server.equals( that.server ) : that.server == null;\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return server != null ? server.hashCode() : 0;\n-        }\n+      return server;\n     }\n \n-    public static class SuspicionsState\n-            implements Serializable\n+    @Override\n+    public String toString()\n     {\n+      return \"i_am_alive[\" + server + \"]\";\n+    }\n+\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+\n+      IAmAliveState that = (IAmAliveState) o;\n+\n+      return server != null ? server.equals(that.server) : that.server == null;\n+    }\n+\n+    @Override\n+    public int hashCode()\n+    {\n+      return server != null ? server.hashCode() : 0;\n+    }\n+  }\n+\n+  public static class SuspicionsState\n+      implements Serializable\n+  {\n+\n+    private static final long serialVersionUID = 3152836192116904427L;\n \n-        private static final long serialVersionUID = 3152836192116904427L;\n-\n-        private Set<InstanceId> suspicions;\n-\n-        public SuspicionsState( Set<InstanceId> suspicions )\n-        {\n-            this.suspicions = suspicions;\n-        }\n-\n-        public Set<InstanceId> getSuspicions()\n-        {\n-            return suspicions;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"Suspicions:\" + suspicions;\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-\n-            SuspicionsState that = (SuspicionsState) o;\n-\n-            return suspicions != null ? suspicions.equals( that.suspicions ) : that.suspicions == null;\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return suspicions != null ? suspicions.hashCode() : 0;\n-        }\n+    private Set<InstanceId> suspicions;\n+\n+    public SuspicionsState(Set<InstanceId> suspicions)\n+    {\n+      this.suspicions = suspicions;\n+    }\n+\n+    public Set<InstanceId> getSuspicions()\n+    {\n+      return suspicions;\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+      return \"Suspicions:\" + suspicions;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+\n+      SuspicionsState that = (SuspicionsState) o;\n+\n+      return suspicions != null ? suspicions.equals(that.suspicions) : that.suspicions == null;\n+    }\n+\n+    @Override\n+    public int hashCode()\n+    {\n+      return suspicions != null ? suspicions.hashCode() : 0;\n     }\n+  }\n }\n",
            "diff_size": 140
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/708/HeartbeatMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/708/HeartbeatMessage.java\nindex c915ebf7f39..9ec403f4915 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/708/HeartbeatMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/708/HeartbeatMessage.java\n@@ -28,19 +28,14 @@ import org.neo4j.cluster.com.message.MessageType;\n /**\n  * Messages used by the {@link HeartbeatState} state machine.\n  */\n-public enum HeartbeatMessage\n-        implements MessageType\n+public enum HeartbeatMessage implements MessageType\n {\n     // Heartbeat API messages\n-    addHeartbeatListener, removeHeartbeatListener,\n+    addHeartbeatListener, removeHeartbeatListener, // Protocol messages\n+    join, leave, i_am_alive, timed_out, sendHeartbeat, reset_send_heartbeat, suspicions;\n \n-    // Protocol messages\n-    join, leave,\n-    i_am_alive, timed_out, sendHeartbeat, reset_send_heartbeat, suspicions;\n-\n-    public static class IAmAliveState\n-            implements Serializable\n-    {\n+    public static class IAmAliveState implements Serializable\n+{\n         private static final long serialVersionUID = 6799806932628197123L;\n \n         private InstanceId server;\n@@ -68,7 +63,8 @@ public enum HeartbeatMessage\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n@@ -85,11 +81,9 @@ public enum HeartbeatMessage\n         }\n     }\n \n-    public static class SuspicionsState\n-            implements Serializable\n-    {\n-\n-        private static final long serialVersionUID = 3152836192116904427L;\n+    public static class SuspicionsState implements Serializable\n+{\n+    private static final long serialVersionUID = 3152836192116904427L;\n \n         private Set<InstanceId> suspicions;\n \n@@ -116,7 +110,8 @@ public enum HeartbeatMessage\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n@@ -132,4 +127,4 @@ public enum HeartbeatMessage\n             return suspicions != null ? suspicions.hashCode() : 0;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "junkdog-artemis-odb",
    "error_id": "44",
    "information": {
        "errors": [
            {
                "line": "50",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 107).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t\tif (timeComponentSystems > 0) {\n\t\t\tsb.append(\"\").append('\\n');\n\t\t\tsb.append(format(\"COMPONENT ACCESS REWRITTEN\", timeComponentSystems + \"ms\", ' ')).append('\\n');\n\t\t\tsb.append(LINE);\n\t\t\tfor (String detail : getRewrittenAccessSummary(componentSystems).split(\"\\n\"))\n\t\t\t\tsb.append(detail).append('\\n');",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/44/WeaverLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/44/WeaverLog.java\nindex 19445b5e9f6..983137b947b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/44/WeaverLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/44/WeaverLog.java\n@@ -47,7 +47,8 @@ public class WeaverLog {\n \t\t\n \t\tif (timeComponentSystems > 0) {\n \t\t\tsb.append(\"\").append('\\n');\n-\t\t\tsb.append(format(\"COMPONENT ACCESS REWRITTEN\", timeComponentSystems + \"ms\", ' ')).append('\\n');\n+\t\t\t\tsb .append( format(\"COMPONENT ACCESS REWRITTEN\",timeComponentSystems+\"ms\" , ' '))\n+\t\t\t. append('\\n');\n \t\t\tsb.append(LINE);\n \t\t\tfor (String detail : getRewrittenAccessSummary(componentSystems).split(\"\\n\"))\n \t\t\t\tsb.append(detail).append('\\n');\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/44/WeaverLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/44/WeaverLog.java\nindex 19445b5e9f6..76e0180f345 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/44/WeaverLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/44/WeaverLog.java\n@@ -2,6 +2,7 @@ package com.artemis;\n \n import com.artemis.meta.ClassMetadata;\n import com.artemis.meta.ClassMetadata.WeaverType;\n+\n import org.objectweb.asm.Type;\n \n import java.util.ArrayList;\n@@ -9,122 +10,127 @@ import java.util.Arrays;\n import java.util.List;\n \n public class WeaverLog {\n-\tpublic static final int RELATIVE_WIDTH = 72;\n-\tpublic static final String LINE = horizontalLine(); \n-\t\n-\tpublic int timeComponents;\n-\tpublic int timeComponentSystems;\n-\tpublic int timeSystems;\n-\tpublic List<ClassMetadata> components = new ArrayList<ClassMetadata>();\n-\tpublic List<ClassMetadata> componentSystems = new ArrayList<ClassMetadata>();\n-\tpublic List<ClassMetadata> systems = new ArrayList<ClassMetadata>();\n-\t\n-\tprivate static String format(String key, Object value, char delim) {\n-\t\tint length = key.length() + value.toString().length() + 2; // margin\n-\t\tlength = Math.max(length, 3);\n-\t\t\n-\t\tchar[] padding = new char[Math.max(RELATIVE_WIDTH - length, 0)];\n-\t\tArrays.fill(padding, delim);\n-\t\t\n-\t\treturn new StringBuilder(RELATIVE_WIDTH)\n-\t\t\t.append(key)\n-\t\t\t.append(\" \").append(String.valueOf(padding)).append(\" \")\n-\t\t\t.append(value)\n-\t\t\t.toString();\n-\t}\n-\t\n-\tpublic String getFormattedLog() {\n-\t\tStringBuilder sb = new StringBuilder();\n-\t\t\n-\t\tif (timeComponents > 0) {\n-\t\t\tsb.append(\"\").append('\\n');\n-\t\t\tsb.append(format(\"WOVEN COMPONENTS\", timeComponents + \"ms\", ' ')).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t\tfor (String detail : getComponentSummary(components).split(\"\\n\"))\n-\t\t\t\tsb.append(detail).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t}\n-\t\t\n-\t\tif (timeComponentSystems > 0) {\n-\t\t\tsb.append(\"\").append('\\n');\n-\t\t\tsb.append(format(\"COMPONENT ACCESS REWRITTEN\", timeComponentSystems + \"ms\", ' ')).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t\tfor (String detail : getRewrittenAccessSummary(componentSystems).split(\"\\n\"))\n-\t\t\t\tsb.append(detail).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t}\n-\t\t\n-\t\t\n-\t\tif (timeSystems > 0) {\n-\t\t\tsb.append(\"\").append('\\n');\n-\t\t\tsb.append(format(\"OPTIMIZED ENTITY SYSTEMS\", timeSystems + \"ms\", ' ')).append('\\n');\n-\t\t\tsb.append(LINE).append('\\n');\n-\t\t\tfor (String detail : getSystemSummary(systems).split(\"\\n\"))\n-\t\t\t\tsb.append(detail).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t}\n-\t\t\n-\t\treturn sb.toString();\n-\t}\n-\t\n-\tpublic static String format(String key, Object value) {\n-\t\treturn format(key, value, '.');\n-\t}\n-\t\n-\tprivate static String horizontalLine() {\n-\t\tchar[] raw = new char[RELATIVE_WIDTH];\n-\t\tArrays.fill(raw, '-');\n-\t\treturn String.valueOf(raw) + \"\\n\";\n-\t}\n-\n-\tprivate static String getComponentSummary(List<ClassMetadata> processed) {\n-\t\tStringBuilder sb = new StringBuilder();\n-\t\t\n-\t\tfor (ClassMetadata meta : processed) {\n-\t\t\tif (meta.annotation == WeaverType.NONE)\n-\t\t\t\tcontinue;\n-\t\t\t\n-\t\t\tString klazz = shortenClass(meta.type);\n-\t\t\tsb.append(format(klazz, meta.annotation.name())).append(\"\\n\");\n-\t\t}\n-\t\t\n-\t\treturn sb.toString();\n-\t}\n-\t\n-\tprivate static String shortenClass(Type type) {\n-\t\treturn shortenClass(type.getClassName());\n-\t}\n-\t\n-\tprivate static String shortenClass(String className) {\n-\t\tStringBuilder sb = new StringBuilder();\n-\t\t\n-\t\tString[] split = className.split(\"\\\\.\");\n-\t\tfor (int i = 0; (split.length - 1) > i; i++) {\n-\t\t\tsb.append(split[i].charAt(0)).append('.');\n-\t\t}\n-\t\tsb.append(split[split.length - 1]);\n-\t\treturn sb.toString();\n-\t}\n-\n-\tprivate static String getSystemSummary(List<ClassMetadata> processed) {\n-\t\tStringBuilder sb= new StringBuilder();\n-\t\t\n-\t\tfor (ClassMetadata meta : processed) {\n-\t\t\tString klazz = shortenClass(meta.type);\n-\t\t\tsb.append(format(klazz, meta.sysetemOptimizable.name())).append(\"\\n\");\n-\t\t}\n-\t\t\n-\t\treturn sb.toString();\n-\t}\n-\n-\tprivate static String getRewrittenAccessSummary(List<ClassMetadata> processed) {\n-\t\tStringBuilder sb= new StringBuilder();\n-\t\t\n-\t\tfor (ClassMetadata meta : processed) {\n-\t\t\tString klazz = shortenClass(meta.type);\n-\t\t\tsb.append(format(klazz, \"SUCCESS\")).append(\"\\n\");\n-\t\t}\n-\t\t\n-\t\treturn sb.toString();\n-\t}\n+    public static final int RELATIVE_WIDTH = 72;\n+    public static final String LINE = horizontalLine();\n+\n+    public int timeComponents;\n+    public int timeComponentSystems;\n+    public int timeSystems;\n+    public List<ClassMetadata> components = new ArrayList<ClassMetadata>();\n+    public List<ClassMetadata> componentSystems = new ArrayList<ClassMetadata>();\n+    public List<ClassMetadata> systems = new ArrayList<ClassMetadata>();\n+\n+    private static String format(String key, Object value, char delim) {\n+        int length = key.length() + value.toString().length() + 2; // margin\n+        length = Math.max(length, 3);\n+\n+        char[] padding = new char[Math.max(RELATIVE_WIDTH - length, 0)];\n+        Arrays.fill(padding, delim);\n+\n+        return new StringBuilder(RELATIVE_WIDTH)\n+                .append(key)\n+                .append(\" \").append(String.valueOf(padding)).append(\" \")\n+                .append(value)\n+                .toString();\n+    }\n+\n+    public String getFormattedLog() {\n+        StringBuilder sb = new StringBuilder();\n+\n+        if (timeComponents > 0) {\n+            sb.append(\"\").append('\\n');\n+            sb.append(format(\"WOVEN COMPONENTS\", timeComponents + \"ms\", ' ')).append('\\n');\n+            sb.append(LINE);\n+            for (String detail : getComponentSummary(components).split(\"\\n\")) {\n+                sb.append(detail).append('\\n');\n+            }\n+            sb.append(LINE);\n+        }\n+\n+        if (timeComponentSystems > 0) {\n+            sb.append(\"\").append('\\n');\n+            sb.append(format(\"COMPONENT ACCESS REWRITTEN\", timeComponentSystems + \"ms\", ' '))\n+                    .append('\\n');\n+            sb.append(LINE);\n+            for (String detail : getRewrittenAccessSummary(componentSystems).split(\"\\n\")) {\n+                sb.append(detail).append('\\n');\n+            }\n+            sb.append(LINE);\n+        }\n+\n+\n+        if (timeSystems > 0) {\n+            sb.append(\"\").append('\\n');\n+            sb.append(format(\"OPTIMIZED ENTITY SYSTEMS\", timeSystems + \"ms\", ' ')).append('\\n');\n+            sb.append(LINE).append('\\n');\n+            for (String detail : getSystemSummary(systems).split(\"\\n\")) {\n+                sb.append(detail).append('\\n');\n+            }\n+            sb.append(LINE);\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    public static String format(String key, Object value) {\n+        return format(key, value, '.');\n+    }\n+\n+    private static String horizontalLine() {\n+        char[] raw = new char[RELATIVE_WIDTH];\n+        Arrays.fill(raw, '-');\n+        return String.valueOf(raw) + \"\\n\";\n+    }\n+\n+    private static String getComponentSummary(List<ClassMetadata> processed) {\n+        StringBuilder sb = new StringBuilder();\n+\n+        for (ClassMetadata meta : processed) {\n+            if (meta.annotation == WeaverType.NONE) {\n+                continue;\n+            }\n+\n+            String klazz = shortenClass(meta.type);\n+            sb.append(format(klazz, meta.annotation.name())).append(\"\\n\");\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    private static String shortenClass(Type type) {\n+        return shortenClass(type.getClassName());\n+    }\n+\n+    private static String shortenClass(String className) {\n+        StringBuilder sb = new StringBuilder();\n+\n+        String[] split = className.split(\"\\\\.\");\n+        for (int i = 0; (split.length - 1) > i; i++) {\n+            sb.append(split[i].charAt(0)).append('.');\n+        }\n+        sb.append(split[split.length - 1]);\n+        return sb.toString();\n+    }\n+\n+    private static String getSystemSummary(List<ClassMetadata> processed) {\n+        StringBuilder sb = new StringBuilder();\n+\n+        for (ClassMetadata meta : processed) {\n+            String klazz = shortenClass(meta.type);\n+            sb.append(format(klazz, meta.sysetemOptimizable.name())).append(\"\\n\");\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    private static String getRewrittenAccessSummary(List<ClassMetadata> processed) {\n+        StringBuilder sb = new StringBuilder();\n+\n+        for (ClassMetadata meta : processed) {\n+            String klazz = shortenClass(meta.type);\n+            sb.append(format(klazz, \"SUCCESS\")).append(\"\\n\");\n+        }\n+\n+        return sb.toString();\n+    }\n }\n\\ No newline at end of file\n",
            "diff_size": 124
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/44/WeaverLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/44/WeaverLog.java\nindex 19445b5e9f6..27de933e95a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/44/WeaverLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/44/WeaverLog.java\n@@ -3,128 +3,120 @@ package com.artemis;\n import com.artemis.meta.ClassMetadata;\n import com.artemis.meta.ClassMetadata.WeaverType;\n import org.objectweb.asm.Type;\n-\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n public class WeaverLog {\n-\tpublic static final int RELATIVE_WIDTH = 72;\n-\tpublic static final String LINE = horizontalLine(); \n-\t\n-\tpublic int timeComponents;\n-\tpublic int timeComponentSystems;\n-\tpublic int timeSystems;\n-\tpublic List<ClassMetadata> components = new ArrayList<ClassMetadata>();\n-\tpublic List<ClassMetadata> componentSystems = new ArrayList<ClassMetadata>();\n-\tpublic List<ClassMetadata> systems = new ArrayList<ClassMetadata>();\n-\t\n-\tprivate static String format(String key, Object value, char delim) {\n-\t\tint length = key.length() + value.toString().length() + 2; // margin\n-\t\tlength = Math.max(length, 3);\n-\t\t\n-\t\tchar[] padding = new char[Math.max(RELATIVE_WIDTH - length, 0)];\n-\t\tArrays.fill(padding, delim);\n-\t\t\n-\t\treturn new StringBuilder(RELATIVE_WIDTH)\n-\t\t\t.append(key)\n-\t\t\t.append(\" \").append(String.valueOf(padding)).append(\" \")\n-\t\t\t.append(value)\n-\t\t\t.toString();\n-\t}\n-\t\n-\tpublic String getFormattedLog() {\n-\t\tStringBuilder sb = new StringBuilder();\n-\t\t\n-\t\tif (timeComponents > 0) {\n-\t\t\tsb.append(\"\").append('\\n');\n-\t\t\tsb.append(format(\"WOVEN COMPONENTS\", timeComponents + \"ms\", ' ')).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t\tfor (String detail : getComponentSummary(components).split(\"\\n\"))\n-\t\t\t\tsb.append(detail).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t}\n-\t\t\n-\t\tif (timeComponentSystems > 0) {\n-\t\t\tsb.append(\"\").append('\\n');\n-\t\t\tsb.append(format(\"COMPONENT ACCESS REWRITTEN\", timeComponentSystems + \"ms\", ' ')).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t\tfor (String detail : getRewrittenAccessSummary(componentSystems).split(\"\\n\"))\n-\t\t\t\tsb.append(detail).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t}\n-\t\t\n-\t\t\n-\t\tif (timeSystems > 0) {\n-\t\t\tsb.append(\"\").append('\\n');\n-\t\t\tsb.append(format(\"OPTIMIZED ENTITY SYSTEMS\", timeSystems + \"ms\", ' ')).append('\\n');\n-\t\t\tsb.append(LINE).append('\\n');\n-\t\t\tfor (String detail : getSystemSummary(systems).split(\"\\n\"))\n-\t\t\t\tsb.append(detail).append('\\n');\n-\t\t\tsb.append(LINE);\n-\t\t}\n-\t\t\n-\t\treturn sb.toString();\n-\t}\n-\t\n-\tpublic static String format(String key, Object value) {\n-\t\treturn format(key, value, '.');\n-\t}\n-\t\n-\tprivate static String horizontalLine() {\n-\t\tchar[] raw = new char[RELATIVE_WIDTH];\n-\t\tArrays.fill(raw, '-');\n-\t\treturn String.valueOf(raw) + \"\\n\";\n-\t}\n-\n-\tprivate static String getComponentSummary(List<ClassMetadata> processed) {\n-\t\tStringBuilder sb = new StringBuilder();\n-\t\t\n-\t\tfor (ClassMetadata meta : processed) {\n-\t\t\tif (meta.annotation == WeaverType.NONE)\n-\t\t\t\tcontinue;\n-\t\t\t\n-\t\t\tString klazz = shortenClass(meta.type);\n-\t\t\tsb.append(format(klazz, meta.annotation.name())).append(\"\\n\");\n-\t\t}\n-\t\t\n-\t\treturn sb.toString();\n-\t}\n-\t\n-\tprivate static String shortenClass(Type type) {\n-\t\treturn shortenClass(type.getClassName());\n-\t}\n-\t\n-\tprivate static String shortenClass(String className) {\n-\t\tStringBuilder sb = new StringBuilder();\n-\t\t\n-\t\tString[] split = className.split(\"\\\\.\");\n-\t\tfor (int i = 0; (split.length - 1) > i; i++) {\n-\t\t\tsb.append(split[i].charAt(0)).append('.');\n-\t\t}\n-\t\tsb.append(split[split.length - 1]);\n-\t\treturn sb.toString();\n-\t}\n-\n-\tprivate static String getSystemSummary(List<ClassMetadata> processed) {\n-\t\tStringBuilder sb= new StringBuilder();\n-\t\t\n-\t\tfor (ClassMetadata meta : processed) {\n-\t\t\tString klazz = shortenClass(meta.type);\n-\t\t\tsb.append(format(klazz, meta.sysetemOptimizable.name())).append(\"\\n\");\n-\t\t}\n-\t\t\n-\t\treturn sb.toString();\n-\t}\n-\n-\tprivate static String getRewrittenAccessSummary(List<ClassMetadata> processed) {\n-\t\tStringBuilder sb= new StringBuilder();\n-\t\t\n-\t\tfor (ClassMetadata meta : processed) {\n-\t\t\tString klazz = shortenClass(meta.type);\n-\t\t\tsb.append(format(klazz, \"SUCCESS\")).append(\"\\n\");\n-\t\t}\n-\t\t\n-\t\treturn sb.toString();\n-\t}\n+ public static final int RELATIVE_WIDTH = 72;\n+ public static final String LINE = horizontalLine();\n+ public int timeComponents;\n+ public int timeComponentSystems;\n+ public int timeSystems;\n+ public List<ClassMetadata> components = new ArrayList<ClassMetadata>();\n+ public List<ClassMetadata> componentSystems = new ArrayList<ClassMetadata>();\n+ public List<ClassMetadata> systems = new ArrayList<ClassMetadata>();\n+\n+ private static String format(String key, Object value, char delim) {\n+  int length = key.length() + value.toString().length() + 2; // margin\n+  length = Math.max(length, 3);\n+\n+  char[] padding = new char[Math.max(RELATIVE_WIDTH - length, 0)];\n+  Arrays.fill(padding, delim);\n+  return new StringBuilder(RELATIVE_WIDTH).append(key)\n+                                          .append(\" \")\n+                                          .append(String.valueOf(padding))\n+                                          .append(\" \")\n+                                          .append(value)\n+                                          .toString();\n+ }\n+\n+\n+ public String getFormattedLog() {\n+  StringBuilder sb = new StringBuilder();\n+  if (timeComponents > 0) {\n+   sb.append(\"\").append('\\n');\n+   sb.append(format(\"WOVEN COMPONENTS\", timeComponents + \"ms\", ' ')).append('\\n');\n+   sb.append(LINE);\n+   for (String detail : getComponentSummary(components).split(\"\\n\")) sb.append(detail).append('\\n');\n+   sb.append(LINE);\n+  }\n+\n+  if (timeComponentSystems > 0) {\n+   sb.append(\"\").append('\\n');\n+   sb.append(format(\"COMPONENT ACCESS REWRITTEN\", timeComponentSystems + \"ms\", ' ')).append('\\n');\n+   sb.append(LINE);\n+   for (String detail : getRewrittenAccessSummary(componentSystems).split(\"\\n\")) sb.append(detail).append('\\n');\n+   sb.append(LINE);\n+  }\n+\n+  if (timeSystems > 0) {\n+   sb.append(\"\").append('\\n');\n+   sb.append(format(\"OPTIMIZED ENTITY SYSTEMS\", timeSystems + \"ms\", ' ')).append('\\n');\n+   sb.append(LINE).append('\\n');\n+   for (String detail : getSystemSummary(systems).split(\"\\n\")) sb.append(detail).append('\\n');\n+   sb.append(LINE);\n+  }\n+\n+  return sb.toString();\n+ }\n+\n+\n+ public static String format(String key, Object value) {\n+  return format(key, value, '.');\n+ }\n+\n+ private static String horizontalLine() {\n+  char[] raw = new char[RELATIVE_WIDTH];\n+  Arrays.fill(raw, '-');\n+  return String.valueOf(raw) + \"\\n\";\n+ }\n+\n+ private static String getComponentSummary(List<ClassMetadata> processed) {\n+  StringBuilder sb = new StringBuilder();\n+  for (ClassMetadata meta : processed) {\n+   if (meta.annotation == WeaverType.NONE)\n+    continue;\n+\n+   String klazz = shortenClass(meta.type);\n+   sb.append(format(klazz, meta.annotation.name())).append(\"\\n\");\n+  }\n+\n+  return sb.toString();\n+ }\n+\n+ private static String shortenClass(Type type) {\n+  return shortenClass(type.getClassName());\n+ }\n+\n+ private static String shortenClass(String className) {\n+  StringBuilder sb = new StringBuilder();\n+  String[] split = className.split(\"\\\\.\");\n+  for (int i = 0; (split.length - 1) > i; i++) {\n+   sb.append(split[i].charAt(0)).append('.');\n+  }\n+\n+  sb.append(split[split.length - 1]);\n+  return sb.toString();\n+ }\n+\n+ private static String getSystemSummary(List<ClassMetadata> processed) {\n+  StringBuilder sb = new StringBuilder();\n+  for (ClassMetadata meta : processed) {\n+   String klazz = shortenClass(meta.type);\n+   sb.append(format(klazz, meta.sysetemOptimizable.name())).append(\"\\n\");\n+  }\n+\n+  return sb.toString();\n+ }\n+\n+ private static String getRewrittenAccessSummary(List<ClassMetadata> processed) {\n+  StringBuilder sb = new StringBuilder();\n+  for (ClassMetadata meta : processed) {\n+   String klazz = shortenClass(meta.type);\n+   sb.append(format(klazz, \"SUCCESS\")).append(\"\\n\");\n+  }\n+\n+  return sb.toString();\n+ }\n }\n\\ No newline at end of file\n",
            "diff_size": 119
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/44/WeaverLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/44/WeaverLog.java\nindex 19445b5e9f6..983137b947b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/44/WeaverLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/44/WeaverLog.java\n@@ -47,7 +47,8 @@ public class WeaverLog {\n \t\t\n \t\tif (timeComponentSystems > 0) {\n \t\t\tsb.append(\"\").append('\\n');\n-\t\t\tsb.append(format(\"COMPONENT ACCESS REWRITTEN\", timeComponentSystems + \"ms\", ' ')).append('\\n');\n+\t\t\t\tsb .append( format(\"COMPONENT ACCESS REWRITTEN\",timeComponentSystems+\"ms\" , ' '))\n+\t\t\t. append('\\n');\n \t\t\tsb.append(LINE);\n \t\t\tfor (String detail : getRewrittenAccessSummary(componentSystems).split(\"\\n\"))\n \t\t\t\tsb.append(detail).append('\\n');\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "seedstack-business",
    "error_id": "183",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.domain;\n\nimport java.lang.reflect.Field;\nimport java.util.Objects;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/183/BaseEntity.java\nindex f81e0353e38..e02cf972b3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/183/BaseEntity.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.lang.reflect.Field;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/183/BaseEntity.java\nindex f81e0353e38..e02cf972b3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/183/BaseEntity.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.lang.reflect.Field;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "column": "88",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 4, expected is 12, indentation should be the same level as line 82.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/183/BaseEntity.java\nindex f81e0353e38..2e4fa4333e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/183/BaseEntity.java\n@@ -29,20 +29,17 @@ import org.seedstack.shed.reflect.ReflectUtils;\n  * @param <I> The type of the entity identifier.\n  */\n public abstract class BaseEntity<I> implements Entity<I> {\n-    private static final Cache<Class<?>, Optional<Field>> identityFields = Cache.create(\n-            new CacheParameters<Class<?>, Optional<Field>>()\n+    private static final Cache<Class<?>, Optional<Field>> identityFields = Cache.create( new CacheParameters<Class<?>, Optional<Field>>()\n                     .setInitialSize(256)\n                     .setMaxSize(1024)\n-                    .setLoadingFunction(BaseEntity::resolveIdentityField)\n-    );\n-\n-    private static Optional<Field> resolveIdentityField(Class<?> entityClass) {\n+                    .setLoadingFunction(BaseEntity::resolveIdentityField));\n+private static Optional<Field> resolveIdentityField(Class<?> entityClass) {\n         Optional<Field> field = IdentityResolver.INSTANCE.resolveField(entityClass);\n         if (!field.isPresent()) {\n             field = Classes.from(entityClass)\n                     .traversingSuperclasses()\n                     .field(\"id\");\n-        }\n+    }\n         return field.map(ReflectUtils::makeAccessible);\n     }\n \n@@ -78,12 +75,10 @@ public abstract class BaseEntity<I> implements Entity<I> {\n         if (other == null) {\n             // comparison to null\n             return false;\n-        }\n-        Class<? extends BaseEntity> thisClass = getClass();\n+        } Class<? extends BaseEntity> thisClass = getClass();\n         Class<?> otherClass = other.getClass();\n-        if (!(other instanceof Entity) || (!thisClass.isAssignableFrom(otherClass) && !otherClass.isAssignableFrom(\n-                thisClass))) {\n-            // objects are not from the same class hierarchy\n+        if (!(other instanceof Entity) || (!thisClass.isAssignableFrom(otherClass) && !otherClass.isAssignableFrom(thisClass))) {\n+    // objects are not from the same class hierarchy\n             return false;\n         }\n         return Objects.equals(getId(), ((Entity<?>) other).getId());\n@@ -93,4 +88,4 @@ public abstract class BaseEntity<I> implements Entity<I> {\n     public String toString() {\n         return String.format(\"%s[%s]\", getClass().getSimpleName(), getId());\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "column": "9",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "column": "9",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "column": "5",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "64",
                    "column": "19",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "75",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "column": "27",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 26, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "85",
                    "column": "39",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "85",
                    "column": "83",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/183/BaseEntity.java\nindex f81e0353e38..9636d2bdd32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/183/BaseEntity.java\n@@ -28,20 +28,20 @@ import org.seedstack.shed.reflect.ReflectUtils;\n  *\n  * @param <I> The type of the entity identifier.\n  */\n+\n+\n public abstract class BaseEntity<I> implements Entity<I> {\n-    private static final Cache<Class<?>, Optional<Field>> identityFields = Cache.create(\n-            new CacheParameters<Class<?>, Optional<Field>>()\n-                    .setInitialSize(256)\n-                    .setMaxSize(1024)\n-                    .setLoadingFunction(BaseEntity::resolveIdentityField)\n-    );\n \n+    private static final Cache<Class<?>, Optional<Field>> identityFields = Cache.create(new CacheParameters<Class<?>, Optional<Field>>()\n+        .setInitialSize(256)\n+        .setMaxSize(1024)\n+        .setLoadingFunction(BaseEntity::resolveIdentityField));\n     private static Optional<Field> resolveIdentityField(Class<?> entityClass) {\n         Optional<Field> field = IdentityResolver.INSTANCE.resolveField(entityClass);\n-        if (!field.isPresent()) {\n+        if(! field.isPresent()) {\n             field = Classes.from(entityClass)\n-                    .traversingSuperclasses()\n-                    .field(\"id\");\n+                .traversingSuperclasses()\n+                .field(\"id\");\n         }\n         return field.map(ReflectUtils::makeAccessible);\n     }\n@@ -56,12 +56,13 @@ public abstract class BaseEntity<I> implements Entity<I> {\n      *\n      * @return the value of the identity field if found, null otherwise.\n      */\n+\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public I getId() {\n         return identityFields.get(getClass())\n-                .map(f -> (I) ReflectUtils.getValue(f, this))\n-                .orElse(null);\n+            .map(f-> (I) ReflectUtils.getValue(f, this))\n+            .orElse(null);\n     }\n \n     @Override\n@@ -71,26 +72,27 @@ public abstract class BaseEntity<I> implements Entity<I> {\n \n     @Override\n     public boolean equals(Object other) {\n-        if (other == this) {\n+        if(other == this) {\n             // equal reference\n             return true;\n-        }\n-        if (other == null) {\n+                          }\n+        if(other == null) {\n             // comparison to null\n             return false;\n-        }\n-        Class<? extends BaseEntity> thisClass = getClass();\n+        } Class<? extends BaseEntity> thisClass = getClass();\n+\n         Class<?> otherClass = other.getClass();\n-        if (!(other instanceof Entity) || (!thisClass.isAssignableFrom(otherClass) && !otherClass.isAssignableFrom(\n-                thisClass))) {\n+        if(! (other instanceof Entity)|| (! thisClass.isAssignableFrom(otherClass)&& ! otherClass.isAssignableFrom(thisClass))) {\n             // objects are not from the same class hierarchy\n             return false;\n         }\n-        return Objects.equals(getId(), ((Entity<?>) other).getId());\n+        return Objects.equals(getId(), ((Entity<?>) other)\n+            .getId());\n     }\n \n     @Override\n     public String toString() {\n-        return String.format(\"%s[%s]\", getClass().getSimpleName(), getId());\n+        return String.format(\"%s[%s]\", getClass()\n+            .getSimpleName(), getId());\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/183/BaseEntity.java\nindex f81e0353e38..e02cf972b3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/183/BaseEntity.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.lang.reflect.Field;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/183/BaseEntity.java\nindex f81e0353e38..e02cf972b3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/183/BaseEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/183/BaseEntity.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.lang.reflect.Field;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
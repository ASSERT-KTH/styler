{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3653",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3653/Usage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3653/Usage.java\nindex 238bf48d990..73414401225 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3653/Usage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3653/Usage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin;\n \n import java.util.ArrayList;\n@@ -30,64 +31,64 @@ import static java.lang.String.format;\n \n public class Usage\n {\n-    private final String scriptName;\n-    private final CommandLocator commands;\n+  private final String scriptName;\n+  private final CommandLocator commands;\n \n-    public Usage( String scriptName, CommandLocator commands )\n-    {\n-        this.scriptName = scriptName;\n-        this.commands = commands;\n-    }\n+  public Usage(String scriptName, CommandLocator commands)\n+  {\n+    this.scriptName = scriptName;\n+    this.commands = commands;\n+  }\n \n-    public void printUsageForCommand( AdminCommand.Provider command, Consumer<String> output )\n-    {\n-        final CommandUsage commandUsage = new CommandUsage( command, scriptName );\n-        commandUsage.printDetailed( output );\n-    }\n+  public void printUsageForCommand(AdminCommand.Provider command, Consumer<String> output)\n+  {\n+    final CommandUsage commandUsage = new CommandUsage(command, scriptName);\n+    commandUsage.printDetailed(output);\n+  }\n \n-    public void print( Consumer<String> output )\n-    {\n-        output.accept( format( \"usage: %s <command>\", scriptName ) );\n-        output.accept( \"\" );\n-        output.accept( \"Manage your Neo4j instance.\" );\n-        output.accept( \"\" );\n+  public void print(Consumer<String> output)\n+  {\n+    output.accept(format(\"usage: %s <command>\", scriptName));\n+    output.accept(\"\");\n+    output.accept(\"Manage your Neo4j instance.\");\n+    output.accept(\"\");\n \n-        printEnvironmentVariables( output );\n+    printEnvironmentVariables(output);\n \n-        output.accept( \"available commands:\" );\n-        printCommands( output );\n+    output.accept(\"available commands:\");\n+    printCommands(output);\n \n-        output.accept( \"\" );\n-        output.accept( format( \"Use %s help <command> for more details.\", scriptName ) );\n-    }\n+    output.accept(\"\");\n+    output.accept(format(\"Use %s help <command> for more details.\", scriptName));\n+  }\n \n-    static void printEnvironmentVariables( Consumer<String> output )\n-    {\n-        output.accept( \"environment variables:\" );\n-        output.accept( \"    NEO4J_CONF    Path to directory which contains neo4j.conf.\" );\n-        output.accept( \"    NEO4J_DEBUG   Set to anything to enable debug output.\" );\n-        output.accept( \"    NEO4J_HOME    Neo4j home directory.\" );\n-        output.accept( \"    HEAP_SIZE     Set JVM maximum heap size during command execution.\" );\n-        output.accept( \"                  Takes a number and a unit, for example 512m.\" );\n-        output.accept( \"\" );\n-    }\n+  static void printEnvironmentVariables(Consumer<String> output)\n+  {\n+    output.accept(\"environment variables:\");\n+    output.accept(\"    NEO4J_CONF    Path to directory which contains neo4j.conf.\");\n+    output.accept(\"    NEO4J_DEBUG   Set to anything to enable debug output.\");\n+    output.accept(\"    NEO4J_HOME    Neo4j home directory.\");\n+    output.accept(\"    HEAP_SIZE     Set JVM maximum heap size during command execution.\");\n+    output.accept(\"                  Takes a number and a unit, for example 512m.\");\n+    output.accept(\"\");\n+  }\n \n-    private void printCommands( Consumer<String> output )\n-    {\n-        Map<AdminCommandSection,List<AdminCommand.Provider>> groupedProviders = groupProvidersBySection();\n+  private void printCommands(Consumer<String> output)\n+  {\n+    Map<AdminCommandSection, List<AdminCommand.Provider>> groupedProviders = groupProvidersBySection();\n \n-        AdminCommandSection.general()\n-                .printAllCommandsUnderSection( output, groupedProviders.remove( AdminCommandSection.general() ) );\n+    AdminCommandSection.general()\n+        .printAllCommandsUnderSection(output, groupedProviders.remove(AdminCommandSection.general()));\n \n-        groupedProviders.entrySet().stream()\n-                .sorted( Comparator.comparing( groupedProvider -> groupedProvider.getKey().printable() ) )\n-                .forEach(entry -> entry.getKey().printAllCommandsUnderSection( output, entry.getValue() ) );\n-    }\n+    groupedProviders.entrySet().stream()\n+        .sorted(Comparator.comparing(groupedProvider -> groupedProvider.getKey().printable()))\n+        .forEach(entry -> entry.getKey().printAllCommandsUnderSection(output, entry.getValue()));\n+  }\n \n-    private Map<AdminCommandSection,List<AdminCommand.Provider>> groupProvidersBySection()\n-    {\n-        List<AdminCommand.Provider> providers = new ArrayList<>();\n-        commands.getAllProviders().forEach( providers::add );\n-        return providers.stream().collect( Collectors.groupingBy( AdminCommand.Provider::commandSection ) );\n-    }\n+  private Map<AdminCommandSection, List<AdminCommand.Provider>> groupProvidersBySection()\n+  {\n+    List<AdminCommand.Provider> providers = new ArrayList<>();\n+    commands.getAllProviders().forEach(providers::add);\n+    return providers.stream().collect(Collectors.groupingBy(AdminCommand.Provider::commandSection));\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 219).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3653/Usage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3653/Usage.java\nindex 238bf48d990..476fb5cd142 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3653/Usage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3653/Usage.java\n@@ -53,11 +53,9 @@ public class Usage\n         output.accept( \"\" );\n \n         printEnvironmentVariables( output );\n-\n-        output.accept( \"available commands:\" );\n+output.accept( \"available commands:\" );\n         printCommands( output );\n-\n-        output.accept( \"\" );\n+output.accept( \"\" );\n         output.accept( format( \"Use %s help <command> for more details.\", scriptName ) );\n     }\n \n@@ -75,13 +73,8 @@ public class Usage\n     private void printCommands( Consumer<String> output )\n     {\n         Map<AdminCommandSection,List<AdminCommand.Provider>> groupedProviders = groupProvidersBySection();\n-\n-        AdminCommandSection.general()\n-                .printAllCommandsUnderSection( output, groupedProviders.remove( AdminCommandSection.general() ) );\n-\n-        groupedProviders.entrySet().stream()\n-                .sorted( Comparator.comparing( groupedProvider -> groupedProvider.getKey().printable() ) )\n-                .forEach(entry -> entry.getKey().printAllCommandsUnderSection( output, entry.getValue() ) );\n+AdminCommandSection.general().printAllCommandsUnderSection( output, groupedProviders.remove( AdminCommandSection.general() ) );\n+groupedProviders.entrySet().stream().sorted( Comparator.comparing( groupedProvider -> groupedProvider.getKey().printable() ) ).forEach( entry -> entry.getKey().printAllCommandsUnderSection( output, entry.getValue() ) );\n     }\n \n     private Map<AdminCommandSection,List<AdminCommand.Provider>> groupProvidersBySection()\n@@ -90,4 +83,4 @@ public class Usage\n         commands.getAllProviders().forEach( providers::add );\n         return providers.stream().collect( Collectors.groupingBy( AdminCommand.Provider::commandSection ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
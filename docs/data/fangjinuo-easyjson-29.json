{
    "project_name": "fangjinuo-easyjson",
    "error_id": "29",
    "information": {
        "errors": [
            {
                "line": "39",
                "column": "120",
                "severity": "warning",
                "message": "')' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "public interface CustomFieldSerializer {\n\n    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder  );\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/29/CustomFieldSerializer.java\nindex deb4c4d2cce..a588e6e171d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/29/CustomFieldSerializer.java\n@@ -36,6 +36,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  */\n public interface CustomFieldSerializer {\n \n-    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder  );\n+    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/29/CustomFieldSerializer.java\nindex deb4c4d2cce..a588e6e171d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/29/CustomFieldSerializer.java\n@@ -36,6 +36,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  */\n public interface CustomFieldSerializer {\n \n-    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder  );\n+    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/29/CustomFieldSerializer.java\nindex deb4c4d2cce..9e72a850d5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/29/CustomFieldSerializer.java\n@@ -35,7 +35,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  * Created by rick on 1/2/14.\n  */\n public interface CustomFieldSerializer {\n+    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n-    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder  );\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/29/CustomFieldSerializer.java\nindex deb4c4d2cce..3e4e22bd56f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/29/CustomFieldSerializer.java\n@@ -4,7 +4,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *  \t\thttp://www.apache.org/licenses/LICENSE-2.0\n+ *          http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -34,8 +34,9 @@ import io.advantageous.boon.primitive.CharBuf;\n /**\n  * Created by rick on 1/2/14.\n  */\n-public interface CustomFieldSerializer {\n-\n-    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder  );\n \n-}\n+public interface CustomFieldSerializer {\n+    boolean serializeField(JsonSerializerInternal serializer,\n+                           Object parent,\n+                           FieldAccess fieldAccess, CharBuf builder);\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/29/CustomFieldSerializer.java\nindex deb4c4d2cce..a588e6e171d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/29/CustomFieldSerializer.java\n@@ -36,6 +36,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  */\n public interface CustomFieldSerializer {\n \n-    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder  );\n+    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/29/CustomFieldSerializer.java\nindex deb4c4d2cce..a588e6e171d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/29/CustomFieldSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/29/CustomFieldSerializer.java\n@@ -36,6 +36,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  */\n public interface CustomFieldSerializer {\n \n-    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder  );\n+    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
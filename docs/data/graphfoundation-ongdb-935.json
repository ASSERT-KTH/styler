{
    "project_name": "graphfoundation-ongdb",
    "error_id": "935",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "155",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/935/TransactionLogAnalyzer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/935/TransactionLogAnalyzer.java\nindex 25daa48dd58..fd40be39531 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/935/TransactionLogAnalyzer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/935/TransactionLogAnalyzer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.dump;\n \n import java.io.File;\n@@ -55,159 +56,157 @@ import static org.neo4j.tools.util.TransactionLogUtils.openVersionedChannel;\n  */\n public class TransactionLogAnalyzer\n {\n+  /**\n+   * Receiving call-backs for all kinds of different events while analyzing the stream of transactions.\n+   */\n+  public interface Monitor\n+  {\n     /**\n-     * Receiving call-backs for all kinds of different events while analyzing the stream of transactions.\n+     * Called when transitioning to a new log file, crossing a log version bridge. This is also called for the\n+     * first log file opened.\n+     *\n+     * @param file       {@link File} pointing to the opened log file.\n+     * @param logVersion log version.\n      */\n-    public interface Monitor\n-    {\n-        /**\n-         * Called when transitioning to a new log file, crossing a log version bridge. This is also called for the\n-         * first log file opened.\n-         *\n-         * @param file {@link File} pointing to the opened log file.\n-         * @param logVersion log version.\n-         */\n-        default void logFile( File file, long logVersion ) throws IOException\n-        {   // no-op by default\n-        }\n-\n-        /**\n-         * A complete transaction with {@link LogEntryStart}, one or more {@link LogEntryCommand} and {@link LogEntryCommit}.\n-         *\n-         * @param transactionEntries the log entries making up the transaction, including start/commit entries.\n-         */\n-        default void transaction( LogEntry[] transactionEntries )\n-        {   // no-op by default\n-        }\n-\n-        /**\n-         * {@link CheckPoint} log entry in between transactions.\n-         *\n-         * @param checkpoint the {@link CheckPoint} log entry.\n-         * @param checkpointEntryPosition {@link LogPosition} of the checkpoint entry itself.\n-         */\n-        default void checkpoint( CheckPoint checkpoint, LogPosition checkpointEntryPosition )\n-        {   // no-op by default\n-        }\n+    default void logFile(File file, long logVersion) throws IOException\n+    {   // no-op by default\n     }\n \n-    public static Monitor all( Monitor... monitors )\n-    {\n-        return new CombinedMonitor( monitors );\n+    /**\n+     * A complete transaction with {@link LogEntryStart}, one or more {@link LogEntryCommand} and {@link LogEntryCommit}.\n+     *\n+     * @param transactionEntries the log entries making up the transaction, including start/commit entries.\n+     */\n+    default void transaction(LogEntry[] transactionEntries)\n+    {   // no-op by default\n     }\n \n     /**\n-     * Analyzes transactions found in log file(s) specified by {@code storeDirOrLogFile} calling methods on the supplied\n-     * {@link Monitor} for each encountered data item.\n+     * {@link CheckPoint} log entry in between transactions.\n      *\n-     * @param fileSystem {@link FileSystemAbstraction} to find the files on.\n-     * @param storeDirOrLogFile {@link File} pointing either to a directory containing transaction log files, or directly\n-     * pointing to a single transaction log file to analyze.\n-     * @param invalidLogEntryHandler {@link InvalidLogEntryHandler} to pass in to the internal {@link LogEntryReader}.\n-     * @param monitor {@link Monitor} receiving call-backs for all {@link Monitor#transaction(LogEntry[]) transactions},\n-     * {@link Monitor#checkpoint(CheckPoint, LogPosition) checkpoints} and {@link Monitor#logFile(File, long) log file transitions}\n-     * encountered during the analysis.\n-     * @throws IOException on I/O error.\n+     * @param checkpoint              the {@link CheckPoint} log entry.\n+     * @param checkpointEntryPosition {@link LogPosition} of the checkpoint entry itself.\n      */\n-    public static void analyze( FileSystemAbstraction fileSystem, File storeDirOrLogFile,\n-            InvalidLogEntryHandler invalidLogEntryHandler, Monitor monitor )\n-            throws IOException\n+    default void checkpoint(CheckPoint checkpoint, LogPosition checkpointEntryPosition)\n+    {   // no-op by default\n+    }\n+  }\n+\n+  public static Monitor all(Monitor... monitors)\n+  {\n+    return new CombinedMonitor(monitors);\n+  }\n+\n+  /**\n+   * Analyzes transactions found in log file(s) specified by {@code storeDirOrLogFile} calling methods on the supplied\n+   * {@link Monitor} for each encountered data item.\n+   *\n+   * @param fileSystem             {@link FileSystemAbstraction} to find the files on.\n+   * @param storeDirOrLogFile      {@link File} pointing either to a directory containing transaction log files, or directly\n+   *                               pointing to a single transaction log file to analyze.\n+   * @param invalidLogEntryHandler {@link InvalidLogEntryHandler} to pass in to the internal {@link LogEntryReader}.\n+   * @param monitor                {@link Monitor} receiving call-backs for all {@link Monitor#transaction(LogEntry[]) transactions},\n+   *                               {@link Monitor#checkpoint(CheckPoint, LogPosition) checkpoints} and {@link Monitor#logFile(File, long) log file transitions}\n+   *                               encountered during the analysis.\n+   * @throws IOException on I/O error.\n+   */\n+  public static void analyze(FileSystemAbstraction fileSystem, File storeDirOrLogFile,\n+                             InvalidLogEntryHandler invalidLogEntryHandler, Monitor monitor)\n+      throws IOException\n+  {\n+    File firstFile;\n+    LogVersionBridge bridge;\n+    ReadAheadLogChannel channel;\n+    LogEntryReader<ReadableClosablePositionAwareChannel> entryReader;\n+    LogPositionMarker positionMarker;\n+    if (storeDirOrLogFile.isDirectory())\n     {\n-        File firstFile;\n-        LogVersionBridge bridge;\n-        ReadAheadLogChannel channel;\n-        LogEntryReader<ReadableClosablePositionAwareChannel> entryReader;\n-        LogPositionMarker positionMarker;\n-        if ( storeDirOrLogFile.isDirectory() )\n-        {\n-            // Use natural log version bridging if a directory is supplied\n-            final LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( storeDirOrLogFile, fileSystem ).build();\n-            bridge = new ReaderLogVersionBridge( logFiles )\n-            {\n-                @Override\n-                public LogVersionedStoreChannel next( LogVersionedStoreChannel channel ) throws IOException\n-                {\n-                    LogVersionedStoreChannel next = super.next( channel );\n-                    if ( next != channel )\n-                    {\n-                        monitor.logFile( logFiles.getLogFileForVersion( next.getVersion() ), next.getVersion() );\n-                    }\n-                    return next;\n-                }\n-            };\n-            long lowestLogVersion = logFiles.getLowestLogVersion();\n-            if ( lowestLogVersion < 0 )\n-            {\n-                throw new IllegalStateException( format( \"Transaction logs at '%s' not found.\", storeDirOrLogFile ) );\n-            }\n-            firstFile = logFiles.getLogFileForVersion( lowestLogVersion );\n-            monitor.logFile( firstFile, lowestLogVersion );\n-        }\n-        else\n+      // Use natural log version bridging if a directory is supplied\n+      final LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder(storeDirOrLogFile, fileSystem).build();\n+      bridge = new ReaderLogVersionBridge(logFiles)\n+      {\n+        @Override\n+        public LogVersionedStoreChannel next(LogVersionedStoreChannel channel) throws IOException\n         {\n-            // Use no bridging, simply reading this single log file if a file is supplied\n-            firstFile = storeDirOrLogFile;\n-            final LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( storeDirOrLogFile, fileSystem ).build();\n-            monitor.logFile( firstFile, logFiles.getLogVersion( firstFile ) );\n-            bridge = NO_MORE_CHANNELS;\n+          LogVersionedStoreChannel next = super.next(channel);\n+          if (next != channel)\n+          {\n+            monitor.logFile(logFiles.getLogFileForVersion(next.getVersion()), next.getVersion());\n+          }\n+          return next;\n         }\n+      };\n+      long lowestLogVersion = logFiles.getLowestLogVersion();\n+      if (lowestLogVersion < 0)\n+      {\n+        throw new IllegalStateException(format(\"Transaction logs at '%s' not found.\", storeDirOrLogFile));\n+      }\n+      firstFile = logFiles.getLogFileForVersion(lowestLogVersion);\n+      monitor.logFile(firstFile, lowestLogVersion);\n+    } else\n+    {\n+      // Use no bridging, simply reading this single log file if a file is supplied\n+      firstFile = storeDirOrLogFile;\n+      final LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder(storeDirOrLogFile, fileSystem).build();\n+      monitor.logFile(firstFile, logFiles.getLogVersion(firstFile));\n+      bridge = NO_MORE_CHANNELS;\n+    }\n \n-        channel = new ReadAheadLogChannel( openVersionedChannel( fileSystem, firstFile ), bridge );\n-        entryReader =\n-                new VersionAwareLogEntryReader<>( new RecordStorageCommandReaderFactory(), invalidLogEntryHandler );\n-        positionMarker = new LogPositionMarker();\n-        try ( TransactionLogEntryCursor cursor = new TransactionLogEntryCursor( new LogEntryCursor( entryReader, channel ) ) )\n+    channel = new ReadAheadLogChannel(openVersionedChannel(fileSystem, firstFile), bridge);\n+    entryReader =\n+        new VersionAwareLogEntryReader<>(new RecordStorageCommandReaderFactory(), invalidLogEntryHandler);\n+    positionMarker = new LogPositionMarker();\n+    try (TransactionLogEntryCursor cursor = new TransactionLogEntryCursor(new LogEntryCursor(entryReader, channel)))\n+    {\n+      channel.getCurrentPosition(positionMarker);\n+      while (cursor.next())\n+      {\n+        LogEntry[] tx = cursor.get();\n+        if (tx.length == 1 && tx[0].getType() == CHECK_POINT)\n         {\n-            channel.getCurrentPosition( positionMarker );\n-            while ( cursor.next() )\n-            {\n-                LogEntry[] tx = cursor.get();\n-                if ( tx.length == 1 && tx[0].getType() == CHECK_POINT )\n-                {\n-                    monitor.checkpoint( tx[0].as(), positionMarker.newPosition() );\n-                }\n-                else\n-                {\n-                    monitor.transaction( tx );\n-                }\n-            }\n+          monitor.checkpoint(tx[0].as(), positionMarker.newPosition());\n+        } else\n+        {\n+          monitor.transaction(tx);\n         }\n+      }\n     }\n+  }\n \n-    private static class CombinedMonitor implements Monitor\n-    {\n-        private final Monitor[] monitors;\n+  private static class CombinedMonitor implements Monitor\n+  {\n+    private final Monitor[] monitors;\n \n-        CombinedMonitor( Monitor[] monitors )\n-        {\n-            this.monitors = monitors;\n-        }\n+    CombinedMonitor(Monitor[] monitors)\n+    {\n+      this.monitors = monitors;\n+    }\n \n-        @Override\n-        public void logFile( File file, long logVersion ) throws IOException\n-        {\n-            for ( Monitor monitor : monitors )\n-            {\n-                monitor.logFile( file, logVersion );\n-            }\n-        }\n+    @Override\n+    public void logFile(File file, long logVersion) throws IOException\n+    {\n+      for (Monitor monitor : monitors)\n+      {\n+        monitor.logFile(file, logVersion);\n+      }\n+    }\n \n-        @Override\n-        public void transaction( LogEntry[] transactionEntries )\n-        {\n-            for ( Monitor monitor : monitors )\n-            {\n-                monitor.transaction( transactionEntries );\n-            }\n-        }\n+    @Override\n+    public void transaction(LogEntry[] transactionEntries)\n+    {\n+      for (Monitor monitor : monitors)\n+      {\n+        monitor.transaction(transactionEntries);\n+      }\n+    }\n \n-        @Override\n-        public void checkpoint( CheckPoint checkpoint, LogPosition checkpointEntryPosition )\n-        {\n-            for ( Monitor monitor : monitors )\n-            {\n-                monitor.checkpoint( checkpoint, checkpointEntryPosition );\n-            }\n-        }\n+    @Override\n+    public void checkpoint(CheckPoint checkpoint, LogPosition checkpointEntryPosition)\n+    {\n+      for (Monitor monitor : monitors)\n+      {\n+        monitor.checkpoint(checkpoint, checkpointEntryPosition);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 203
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "13",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "168",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "36",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "195",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "195",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "204",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "213",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/935/TransactionLogAnalyzer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/935/TransactionLogAnalyzer.java\nindex 25daa48dd58..b2d1e68f4f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/935/TransactionLogAnalyzer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/935/TransactionLogAnalyzer.java\n@@ -21,7 +21,6 @@ package org.neo4j.tools.dump;\n \n import java.io.File;\n import java.io.IOException;\n-\n import org.neo4j.io.fs.FileSystemAbstraction;\n import org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageCommandReaderFactory;\n import org.neo4j.kernel.impl.transaction.log.LogEntryCursor;\n@@ -43,16 +42,19 @@ import org.neo4j.kernel.impl.transaction.log.entry.VersionAwareLogEntryReader;\n import org.neo4j.kernel.impl.transaction.log.files.LogFiles;\n import org.neo4j.kernel.impl.transaction.log.files.LogFilesBuilder;\n import org.neo4j.tools.dump.log.TransactionLogEntryCursor;\n-\n import static java.lang.String.format;\n+\n import static org.neo4j.kernel.impl.transaction.log.LogVersionBridge.NO_MORE_CHANNELS;\n+\n import static org.neo4j.kernel.impl.transaction.log.entry.LogEntryByteCodes.CHECK_POINT;\n+\n import static org.neo4j.tools.util.TransactionLogUtils.openVersionedChannel;\n \n /**\n  * Merely a utility which, given a store directory or log file, reads the transaction log(s) as a stream of transactions\n  * and invokes methods on {@link Monitor}.\n  */\n+\n public class TransactionLogAnalyzer\n {\n     /**\n@@ -76,6 +78,7 @@ public class TransactionLogAnalyzer\n          *\n          * @param transactionEntries the log entries making up the transaction, including start/commit entries.\n          */\n+\n         default void transaction( LogEntry[] transactionEntries )\n         {   // no-op by default\n         }\n@@ -86,9 +89,11 @@ public class TransactionLogAnalyzer\n          * @param checkpoint the {@link CheckPoint} log entry.\n          * @param checkpointEntryPosition {@link LogPosition} of the checkpoint entry itself.\n          */\n+\n         default void checkpoint( CheckPoint checkpoint, LogPosition checkpointEntryPosition )\n         {   // no-op by default\n         }\n+\n     }\n \n     public static Monitor all( Monitor... monitors )\n@@ -109,9 +114,8 @@ public class TransactionLogAnalyzer\n      * encountered during the analysis.\n      * @throws IOException on I/O error.\n      */\n-    public static void analyze( FileSystemAbstraction fileSystem, File storeDirOrLogFile,\n-            InvalidLogEntryHandler invalidLogEntryHandler, Monitor monitor )\n-            throws IOException\n+\n+    public static void analyze( FileSystemAbstraction fileSystem, File storeDirOrLogFile, InvalidLogEntryHandler invalidLogEntryHandler, Monitor monitor ) throws IOException\n     {\n         File firstFile;\n         LogVersionBridge bridge;\n@@ -123,23 +127,25 @@ public class TransactionLogAnalyzer\n             // Use natural log version bridging if a directory is supplied\n             final LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( storeDirOrLogFile, fileSystem ).build();\n             bridge = new ReaderLogVersionBridge( logFiles )\n-            {\n-                @Override\n-                public LogVersionedStoreChannel next( LogVersionedStoreChannel channel ) throws IOException\n-                {\n-                    LogVersionedStoreChannel next = super.next( channel );\n-                    if ( next != channel )\n-                    {\n-                        monitor.logFile( logFiles.getLogFileForVersion( next.getVersion() ), next.getVersion() );\n-                    }\n-                    return next;\n-                }\n-            };\n+{\n+    @Override\n+    public LogVersionedStoreChannel next( LogVersionedStoreChannel channel ) throws IOException\n+    {\n+        LogVersionedStoreChannel next = super.next( channel );\n+        if ( next != channel )\n+        {\n+            monitor.logFile( logFiles.getLogFileForVersion( next.getVersion() ), next.getVersion() );\n+        }\n+\n+        return next;\n+    }\n+};\n             long lowestLogVersion = logFiles.getLowestLogVersion();\n             if ( lowestLogVersion < 0 )\n             {\n                 throw new IllegalStateException( format( \"Transaction logs at '%s' not found.\", storeDirOrLogFile ) );\n             }\n+\n             firstFile = logFiles.getLogFileForVersion( lowestLogVersion );\n             monitor.logFile( firstFile, lowestLogVersion );\n         }\n@@ -153,18 +159,18 @@ public class TransactionLogAnalyzer\n         }\n \n         channel = new ReadAheadLogChannel( openVersionedChannel( fileSystem, firstFile ), bridge );\n-        entryReader =\n-                new VersionAwareLogEntryReader<>( new RecordStorageCommandReaderFactory(), invalidLogEntryHandler );\n+        entryReader = new VersionAwareLogEntryReader<>( new RecordStorageCommandReaderFactory(), invalidLogEntryHandler );\n         positionMarker = new LogPositionMarker();\n-        try ( TransactionLogEntryCursor cursor = new TransactionLogEntryCursor( new LogEntryCursor( entryReader, channel ) ) )\n+        try\n+        ( TransactionLogEntryCursor cursor = new TransactionLogEntryCursor( new LogEntryCursor( entryReader, channel ) ))\n         {\n             channel.getCurrentPosition( positionMarker );\n-            while ( cursor.next() )\n+            while( cursor.next())\n             {\n                 LogEntry[] tx = cursor.get();\n-                if ( tx.length == 1 && tx[0].getType() == CHECK_POINT )\n+                if ( tx.length == 1&& tx[ 0].getType() == CHECK_POINT )\n                 {\n-                    monitor.checkpoint( tx[0].as(), positionMarker.newPosition() );\n+                    monitor.checkpoint( tx[ 0].as(), positionMarker.newPosition() );\n                 }\n                 else\n                 {\n@@ -186,7 +192,7 @@ public class TransactionLogAnalyzer\n         @Override\n         public void logFile( File file, long logVersion ) throws IOException\n         {\n-            for ( Monitor monitor : monitors )\n+            for( Monitor monitor : monitors)\n             {\n                 monitor.logFile( file, logVersion );\n             }\n@@ -195,7 +201,7 @@ public class TransactionLogAnalyzer\n         @Override\n         public void transaction( LogEntry[] transactionEntries )\n         {\n-            for ( Monitor monitor : monitors )\n+            for( Monitor monitor : monitors)\n             {\n                 monitor.transaction( transactionEntries );\n             }\n@@ -204,10 +210,10 @@ public class TransactionLogAnalyzer\n         @Override\n         public void checkpoint( CheckPoint checkpoint, LogPosition checkpointEntryPosition )\n         {\n-            for ( Monitor monitor : monitors )\n+            for( Monitor monitor : monitors)\n             {\n                 monitor.checkpoint( checkpoint, checkpointEntryPosition );\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
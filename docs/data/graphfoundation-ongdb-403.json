{
    "project_name": "graphfoundation-ongdb",
    "error_id": "403",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/403/ReplicatedIdRangeAcquirer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/403/ReplicatedIdRangeAcquirer.java\nindex 804db9f6e2c..4acf18cbf5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/403/ReplicatedIdRangeAcquirer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/403/ReplicatedIdRangeAcquirer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.id;\n \n import java.util.Map;\n@@ -37,55 +38,53 @@ import static org.neo4j.collection.primitive.PrimitiveLongCollections.EMPTY_LONG\n  */\n public class ReplicatedIdRangeAcquirer\n {\n-    private final Replicator replicator;\n-    private final ReplicatedIdAllocationStateMachine idAllocationStateMachine;\n+  private final Replicator replicator;\n+  private final ReplicatedIdAllocationStateMachine idAllocationStateMachine;\n \n-    private final Map<IdType,Integer> allocationSizes;\n+  private final Map<IdType, Integer> allocationSizes;\n \n-    private final MemberId me;\n-    private final Log log;\n+  private final MemberId me;\n+  private final Log log;\n \n-    public ReplicatedIdRangeAcquirer(\n-            Replicator replicator, ReplicatedIdAllocationStateMachine idAllocationStateMachine,\n-            Map<IdType, Integer> allocationSizes, MemberId me, LogProvider logProvider )\n-    {\n-        this.replicator = replicator;\n-        this.idAllocationStateMachine = idAllocationStateMachine;\n-        this.allocationSizes = allocationSizes;\n-        this.me = me;\n-        this.log = logProvider.getLog( getClass() );\n-    }\n+  public ReplicatedIdRangeAcquirer(\n+      Replicator replicator, ReplicatedIdAllocationStateMachine idAllocationStateMachine,\n+      Map<IdType, Integer> allocationSizes, MemberId me, LogProvider logProvider)\n+  {\n+    this.replicator = replicator;\n+    this.idAllocationStateMachine = idAllocationStateMachine;\n+    this.allocationSizes = allocationSizes;\n+    this.me = me;\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-    IdAllocation acquireIds( IdType idType )\n+  IdAllocation acquireIds(IdType idType)\n+  {\n+    while (true)\n     {\n-        while ( true )\n-        {\n-            long firstUnallocated = idAllocationStateMachine.firstUnallocated( idType );\n-            ReplicatedIdAllocationRequest idAllocationRequest =\n-                    new ReplicatedIdAllocationRequest( me, idType, firstUnallocated, allocationSizes.get( idType ) );\n+      long firstUnallocated = idAllocationStateMachine.firstUnallocated(idType);\n+      ReplicatedIdAllocationRequest idAllocationRequest =\n+          new ReplicatedIdAllocationRequest(me, idType, firstUnallocated, allocationSizes.get(idType));\n \n-            if ( replicateIdAllocationRequest( idType, idAllocationRequest ) )\n-            {\n-                IdRange idRange = new IdRange( EMPTY_LONG_ARRAY, firstUnallocated, allocationSizes.get( idType ) );\n-                return new IdAllocation( idRange, -1, 0 );\n-            }\n-            else\n-            {\n-                log.info( \"Retrying ID generation due to conflict. Request was: \" + idAllocationRequest );\n-            }\n-        }\n+      if (replicateIdAllocationRequest(idType, idAllocationRequest))\n+      {\n+        IdRange idRange = new IdRange(EMPTY_LONG_ARRAY, firstUnallocated, allocationSizes.get(idType));\n+        return new IdAllocation(idRange, -1, 0);\n+      } else\n+      {\n+        log.info(\"Retrying ID generation due to conflict. Request was: \" + idAllocationRequest);\n+      }\n     }\n+  }\n \n-    private boolean replicateIdAllocationRequest( IdType idType, ReplicatedIdAllocationRequest idAllocationRequest )\n+  private boolean replicateIdAllocationRequest(IdType idType, ReplicatedIdAllocationRequest idAllocationRequest)\n+  {\n+    try\n+    {\n+      return (Boolean) replicator.replicate(idAllocationRequest, true).get();\n+    } catch (InterruptedException | ExecutionException e)\n     {\n-        try\n-        {\n-            return (Boolean) replicator.replicate( idAllocationRequest, true ).get();\n-        }\n-        catch ( InterruptedException | ExecutionException e )\n-        {\n-            log.error( format( \"Failed to acquire id range for idType %s\", idType ), e );\n-            throw new IdGenerationException( e );\n-        }\n+      log.error(format(\"Failed to acquire id range for idType %s\", idType), e);\n+      throw new IdGenerationException(e);\n     }\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/403/ReplicatedIdRangeAcquirer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/403/ReplicatedIdRangeAcquirer.java\nindex 804db9f6e2c..7fae7a26599 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/403/ReplicatedIdRangeAcquirer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/403/ReplicatedIdRangeAcquirer.java\n@@ -45,9 +45,7 @@ public class ReplicatedIdRangeAcquirer\n     private final MemberId me;\n     private final Log log;\n \n-    public ReplicatedIdRangeAcquirer(\n-            Replicator replicator, ReplicatedIdAllocationStateMachine idAllocationStateMachine,\n-            Map<IdType, Integer> allocationSizes, MemberId me, LogProvider logProvider )\n+    public ReplicatedIdRangeAcquirer( Replicator replicator, ReplicatedIdAllocationStateMachine idAllocationStateMachine, Map<IdType,Integer> allocationSizes, MemberId me, LogProvider logProvider )\n     {\n         this.replicator = replicator;\n         this.idAllocationStateMachine = idAllocationStateMachine;\n@@ -61,10 +59,8 @@ public class ReplicatedIdRangeAcquirer\n         while ( true )\n         {\n             long firstUnallocated = idAllocationStateMachine.firstUnallocated( idType );\n-            ReplicatedIdAllocationRequest idAllocationRequest =\n-                    new ReplicatedIdAllocationRequest( me, idType, firstUnallocated, allocationSizes.get( idType ) );\n-\n-            if ( replicateIdAllocationRequest( idType, idAllocationRequest ) )\n+            ReplicatedIdAllocationRequest idAllocationRequest = new ReplicatedIdAllocationRequest( me, idType, firstUnallocated, allocationSizes.get( idType ) );\n+if ( replicateIdAllocationRequest( idType, idAllocationRequest ) )\n             {\n                 IdRange idRange = new IdRange( EMPTY_LONG_ARRAY, firstUnallocated, allocationSizes.get( idType ) );\n                 return new IdAllocation( idRange, -1, 0 );\n@@ -88,4 +84,4 @@ public class ReplicatedIdRangeAcquirer\n             throw new IdGenerationException( e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "column": "9",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/403/ReplicatedIdRangeAcquirer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/403/ReplicatedIdRangeAcquirer.java\nindex 804db9f6e2c..b9e6fa97b0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/403/ReplicatedIdRangeAcquirer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/403/ReplicatedIdRangeAcquirer.java\n@@ -21,33 +21,29 @@ package org.neo4j.causalclustering.core.state.machines.id;\n \n import java.util.Map;\n import java.util.concurrent.ExecutionException;\n-\n import org.neo4j.causalclustering.core.replication.Replicator;\n import org.neo4j.causalclustering.identity.MemberId;\n import org.neo4j.kernel.impl.store.id.IdRange;\n import org.neo4j.kernel.impl.store.id.IdType;\n import org.neo4j.logging.Log;\n import org.neo4j.logging.LogProvider;\n-\n import static java.lang.String.format;\n+\n import static org.neo4j.collection.primitive.PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n \n /**\n  * Replicates commands to assign next available id range to this member.\n  */\n+\n public class ReplicatedIdRangeAcquirer\n {\n     private final Replicator replicator;\n     private final ReplicatedIdAllocationStateMachine idAllocationStateMachine;\n-\n     private final Map<IdType,Integer> allocationSizes;\n-\n     private final MemberId me;\n     private final Log log;\n \n-    public ReplicatedIdRangeAcquirer(\n-            Replicator replicator, ReplicatedIdAllocationStateMachine idAllocationStateMachine,\n-            Map<IdType, Integer> allocationSizes, MemberId me, LogProvider logProvider )\n+    public ReplicatedIdRangeAcquirer( Replicator replicator, ReplicatedIdAllocationStateMachine idAllocationStateMachine, Map<IdType,Integer> allocationSizes, MemberId me, LogProvider logProvider )\n     {\n         this.replicator = replicator;\n         this.idAllocationStateMachine = idAllocationStateMachine;\n@@ -58,16 +54,14 @@ public class ReplicatedIdRangeAcquirer\n \n     IdAllocation acquireIds( IdType idType )\n     {\n-        while ( true )\n+        while( true )\n         {\n             long firstUnallocated = idAllocationStateMachine.firstUnallocated( idType );\n-            ReplicatedIdAllocationRequest idAllocationRequest =\n-                    new ReplicatedIdAllocationRequest( me, idType, firstUnallocated, allocationSizes.get( idType ) );\n-\n+            ReplicatedIdAllocationRequest idAllocationRequest = new ReplicatedIdAllocationRequest( me, idType, firstUnallocated, allocationSizes.get( idType ) );\n             if ( replicateIdAllocationRequest( idType, idAllocationRequest ) )\n             {\n                 IdRange idRange = new IdRange( EMPTY_LONG_ARRAY, firstUnallocated, allocationSizes.get( idType ) );\n-                return new IdAllocation( idRange, -1, 0 );\n+                return new IdAllocation( idRange, - 1, 0 );\n             }\n             else\n             {\n@@ -88,4 +82,4 @@ public class ReplicatedIdRangeAcquirer\n             throw new IdGenerationException( e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4020",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4020/IndexStoreView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4020/IndexStoreView.java\nindex b97ab4ba92b..a321537dce4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4020/IndexStoreView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4020/IndexStoreView.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import java.util.function.IntPredicate;\n@@ -31,122 +32,126 @@ import org.neo4j.storageengine.api.schema.PopulationProgress;\n import org.neo4j.values.storable.Value;\n import org.neo4j.values.storable.Values;\n \n-/** The indexing services view of the universe. */\n+/**\n+ * The indexing services view of the universe.\n+ */\n public interface IndexStoreView extends PropertyAccessor, PropertyLoader\n {\n-    /**\n-     * Retrieve all nodes in the database which has got one or more of the given labels AND\n-     * one or more of the given property key ids. This scan additionally accepts a visitor\n-     * for label updates for a joint scan.\n-     *\n-     * @param labelIds array of label ids to generate updates for. Empty array means all.\n-     * @param propertyKeyIdFilter property key ids to generate updates for.\n-     * @param propertyUpdateVisitor visitor which will see all generated {@link NodeUpdates}.\n-     * @param labelUpdateVisitor visitor which will see all generated {@link NodeLabelUpdate}.\n-     * @param forceStoreScan overrides decision about which source to scan from. If {@code true}\n-     * then store scan will be used, otherwise if {@code false} then the best suited will be used.\n-     * @return a {@link StoreScan} to start and to stop the scan.\n-     */\n-    <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(\n-            int[] labelIds, IntPredicate propertyKeyIdFilter,\n-            Visitor<NodeUpdates, FAILURE> propertyUpdateVisitor,\n-            Visitor<NodeLabelUpdate, FAILURE> labelUpdateVisitor,\n-            boolean forceStoreScan );\n-\n-    /**\n-     * Produces {@link NodeUpdates} objects from reading node {@code nodeId}, its labels and properties\n-     * and puts those updates into node updates container.\n-     *\n-     * @param nodeId id of node to load.\n-     * @return node updates container\n-     */\n-    NodeUpdates nodeAsUpdates( long nodeId );\n-\n-    DoubleLongRegister indexUpdatesAndSize( long indexId, DoubleLongRegister output );\n-\n-    DoubleLongRegister indexSample( long indexId, DoubleLongRegister output );\n-\n-    void replaceIndexCounts( long indexId, long uniqueElements, long maxUniqueElements, long indexSize );\n-\n-    void incrementIndexUpdates( long indexId, long updatesDelta );\n-\n-    @SuppressWarnings( \"rawtypes\" )\n-    StoreScan EMPTY_SCAN = new StoreScan()\n+  /**\n+   * Retrieve all nodes in the database which has got one or more of the given labels AND\n+   * one or more of the given property key ids. This scan additionally accepts a visitor\n+   * for label updates for a joint scan.\n+   *\n+   * @param labelIds              array of label ids to generate updates for. Empty array means all.\n+   * @param propertyKeyIdFilter   property key ids to generate updates for.\n+   * @param propertyUpdateVisitor visitor which will see all generated {@link NodeUpdates}.\n+   * @param labelUpdateVisitor    visitor which will see all generated {@link NodeLabelUpdate}.\n+   * @param forceStoreScan        overrides decision about which source to scan from. If {@code true}\n+   *                              then store scan will be used, otherwise if {@code false} then the best suited will be used.\n+   * @return a {@link StoreScan} to start and to stop the scan.\n+   */\n+  <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(\n+      int[] labelIds, IntPredicate propertyKeyIdFilter,\n+      Visitor<NodeUpdates, FAILURE> propertyUpdateVisitor,\n+      Visitor<NodeLabelUpdate, FAILURE> labelUpdateVisitor,\n+      boolean forceStoreScan);\n+\n+  /**\n+   * Produces {@link NodeUpdates} objects from reading node {@code nodeId}, its labels and properties\n+   * and puts those updates into node updates container.\n+   *\n+   * @param nodeId id of node to load.\n+   * @return node updates container\n+   */\n+  NodeUpdates nodeAsUpdates(long nodeId);\n+\n+  DoubleLongRegister indexUpdatesAndSize(long indexId, DoubleLongRegister output);\n+\n+  DoubleLongRegister indexSample(long indexId, DoubleLongRegister output);\n+\n+  void replaceIndexCounts(long indexId, long uniqueElements, long maxUniqueElements, long indexSize);\n+\n+  void incrementIndexUpdates(long indexId, long updatesDelta);\n+\n+  @SuppressWarnings(\"rawtypes\")\n+  StoreScan EMPTY_SCAN = new StoreScan()\n+  {\n+    @Override\n+    public void run()\n+    {\n+    }\n+\n+    @Override\n+    public void stop()\n+    {\n+    }\n+\n+    @Override\n+    public void acceptUpdate(MultipleIndexPopulator.MultipleIndexUpdater updater, IndexEntryUpdate update,\n+                             long currentlyIndexedNodeId)\n+    {\n+    }\n+\n+    @Override\n+    public PopulationProgress getProgress()\n+    {\n+      return PopulationProgress.DONE;\n+    }\n+  };\n+\n+  IndexStoreView EMPTY = new Adaptor();\n+\n+  class Adaptor implements IndexStoreView\n+  {\n+    @Override\n+    public void loadProperties(long nodeId, PrimitiveIntSet propertyIds, PropertyLoadSink sink)\n+    {\n+    }\n+\n+    @Override\n+    public Value getPropertyValue(long nodeId, int propertyKeyId)\n+    {\n+      return Values.NO_VALUE;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(int[] labelIds,\n+                                                                     IntPredicate propertyKeyIdFilter, Visitor<NodeUpdates, FAILURE> propertyUpdateVisitor,\n+                                                                     Visitor<NodeLabelUpdate, FAILURE> labelUpdateVisitor, boolean forceStoreScan)\n+    {\n+      return EMPTY_SCAN;\n+    }\n+\n+    @Override\n+    public void replaceIndexCounts(long indexId, long uniqueElements, long maxUniqueElements,\n+                                   long indexSize)\n+    {\n+    }\n+\n+    @Override\n+    public NodeUpdates nodeAsUpdates(long nodeId)\n     {\n-        @Override\n-        public void run()\n-        {\n-        }\n-\n-        @Override\n-        public void stop()\n-        {\n-        }\n-\n-        @Override\n-        public void acceptUpdate( MultipleIndexPopulator.MultipleIndexUpdater updater, IndexEntryUpdate update,\n-                long currentlyIndexedNodeId )\n-        {\n-        }\n-\n-        @Override\n-        public PopulationProgress getProgress()\n-        {\n-            return PopulationProgress.DONE;\n-        }\n-    };\n-\n-    IndexStoreView EMPTY = new Adaptor();\n-\n-    class Adaptor implements IndexStoreView\n+      return null;\n+    }\n+\n+    @Override\n+    public DoubleLongRegister indexUpdatesAndSize(long indexId, DoubleLongRegister output)\n+    {\n+      return output;\n+    }\n+\n+    @Override\n+    public DoubleLongRegister indexSample(long indexId, DoubleLongRegister output)\n     {\n-        @Override\n-        public void loadProperties( long nodeId, PrimitiveIntSet propertyIds, PropertyLoadSink sink )\n-        {\n-        }\n-\n-        @Override\n-        public Value getPropertyValue( long nodeId, int propertyKeyId )\n-        {\n-            return Values.NO_VALUE;\n-        }\n-\n-        @SuppressWarnings( \"unchecked\" )\n-        @Override\n-        public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes( int[] labelIds,\n-                IntPredicate propertyKeyIdFilter, Visitor<NodeUpdates,FAILURE> propertyUpdateVisitor,\n-                Visitor<NodeLabelUpdate,FAILURE> labelUpdateVisitor, boolean forceStoreScan )\n-        {\n-            return EMPTY_SCAN;\n-        }\n-\n-        @Override\n-        public void replaceIndexCounts( long indexId, long uniqueElements, long maxUniqueElements,\n-                long indexSize )\n-        {\n-        }\n-\n-        @Override\n-        public NodeUpdates nodeAsUpdates( long nodeId )\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public DoubleLongRegister indexUpdatesAndSize( long indexId, DoubleLongRegister output )\n-        {\n-            return output;\n-        }\n-\n-        @Override\n-        public DoubleLongRegister indexSample( long indexId, DoubleLongRegister output )\n-        {\n-            return output;\n-        }\n-\n-        @Override\n-        public void incrementIndexUpdates( long indexId, long updatesDelta )\n-        {\n-        }\n-    };\n+      return output;\n+    }\n+\n+    @Override\n+    public void incrementIndexUpdates(long indexId, long updatesDelta)\n+    {\n+    }\n+  }\n+\n+  ;\n }\n",
            "diff_size": 173
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4020/IndexStoreView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4020/IndexStoreView.java\nindex b97ab4ba92b..3f6372e02c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4020/IndexStoreView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4020/IndexStoreView.java\n@@ -47,13 +47,10 @@ public interface IndexStoreView extends PropertyAccessor, PropertyLoader\n      * then store scan will be used, otherwise if {@code false} then the best suited will be used.\n      * @return a {@link StoreScan} to start and to stop the scan.\n      */\n-    <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(\n-            int[] labelIds, IntPredicate propertyKeyIdFilter,\n-            Visitor<NodeUpdates, FAILURE> propertyUpdateVisitor,\n-            Visitor<NodeLabelUpdate, FAILURE> labelUpdateVisitor,\n+    <FAILURE extends Exception> StoreScan<FAILURE> visitNodes( int[] labelIds, IntPredicate propertyKeyIdFilter, Visitor<NodeUpdates,FAILURE> propertyUpdateVisitor, Visitor<NodeLabelUpdate,FAILURE> labelUpdateVisitor,\n             boolean forceStoreScan );\n \n-    /**\n+/**\n      * Produces {@link NodeUpdates} objects from reading node {@code nodeId}, its labels and properties\n      * and puts those updates into node updates container.\n      *\n@@ -61,10 +58,8 @@ public interface IndexStoreView extends PropertyAccessor, PropertyLoader\n      * @return node updates container\n      */\n     NodeUpdates nodeAsUpdates( long nodeId );\n-\n-    DoubleLongRegister indexUpdatesAndSize( long indexId, DoubleLongRegister output );\n-\n-    DoubleLongRegister indexSample( long indexId, DoubleLongRegister output );\n+DoubleLongRegister indexUpdatesAndSize( long indexId, DoubleLongRegister output );\n+DoubleLongRegister indexSample( long indexId, DoubleLongRegister output );\n \n     void replaceIndexCounts( long indexId, long uniqueElements, long maxUniqueElements, long indexSize );\n \n@@ -86,7 +81,7 @@ public interface IndexStoreView extends PropertyAccessor, PropertyLoader\n         @Override\n         public void acceptUpdate( MultipleIndexPopulator.MultipleIndexUpdater updater, IndexEntryUpdate update,\n                 long currentlyIndexedNodeId )\n-        {\n+{\n         }\n \n         @Override\n@@ -114,8 +109,7 @@ public interface IndexStoreView extends PropertyAccessor, PropertyLoader\n         @SuppressWarnings( \"unchecked\" )\n         @Override\n         public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes( int[] labelIds,\n-                IntPredicate propertyKeyIdFilter, Visitor<NodeUpdates,FAILURE> propertyUpdateVisitor,\n-                Visitor<NodeLabelUpdate,FAILURE> labelUpdateVisitor, boolean forceStoreScan )\n+                IntPredicate propertyKeyIdFilter, Visitor<NodeUpdates,FAILURE> propertyUpdateVisitor, Visitor<NodeLabelUpdate,FAILURE> labelUpdateVisitor, boolean forceStoreScan )\n         {\n             return EMPTY_SCAN;\n         }\n@@ -123,7 +117,7 @@ public interface IndexStoreView extends PropertyAccessor, PropertyLoader\n         @Override\n         public void replaceIndexCounts( long indexId, long uniqueElements, long maxUniqueElements,\n                 long indexSize )\n-        {\n+{\n         }\n \n         @Override\n@@ -149,4 +143,4 @@ public interface IndexStoreView extends PropertyAccessor, PropertyLoader\n         {\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
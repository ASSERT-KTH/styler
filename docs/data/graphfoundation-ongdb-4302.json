{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4302",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4302/PageCursorCounters.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4302/PageCursorCounters.java\nindex 5ea47a64f18..3bfdfdb3547 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4302/PageCursorCounters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4302/PageCursorCounters.java\n@@ -17,11 +17,12 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.tracing.cursor;\n \n /**\n  * Expose information from page cache about particular page cursor events.\n- *\n+ * <p>\n  * Exposed counters are relevant only for particular cursor and do not represent global page cache wide picture.\n  *\n  * @see PageCursorCounters\n@@ -29,53 +30,53 @@ package org.neo4j.io.pagecache.tracing.cursor;\n  */\n public interface PageCursorCounters\n {\n-    /**\n-     * @return The number of page faults observed thus far.\n-     */\n-    long faults();\n+  /**\n+   * @return The number of page faults observed thus far.\n+   */\n+  long faults();\n \n-    /**\n-     * @return The number of page pins observed thus far.\n-     */\n-    long pins();\n+  /**\n+   * @return The number of page pins observed thus far.\n+   */\n+  long pins();\n \n-    /**\n-     * @return The number of page unpins observed thus far.\n-     */\n-    long unpins();\n+  /**\n+   * @return The number of page unpins observed thus far.\n+   */\n+  long unpins();\n \n-    /**\n-     * @return The number of page hits observed so far.\n-     */\n-    long hits();\n+  /**\n+   * @return The number of page hits observed so far.\n+   */\n+  long hits();\n \n-    /**\n-     * @return The sum total of bytes read in through page faults thus far.\n-     */\n-    long bytesRead();\n+  /**\n+   * @return The sum total of bytes read in through page faults thus far.\n+   */\n+  long bytesRead();\n \n-    /**\n-     * @return The number of page evictions observed thus far.\n-     */\n-    long evictions();\n+  /**\n+   * @return The number of page evictions observed thus far.\n+   */\n+  long evictions();\n \n-    /**\n-     * @return The number of page evictions that have thrown exceptions thus far.\n-     */\n-    long evictionExceptions();\n+  /**\n+   * @return The number of page evictions that have thrown exceptions thus far.\n+   */\n+  long evictionExceptions();\n \n-    /**\n-     * @return The sum total of bytes written through flushes thus far.\n-     */\n-    long bytesWritten();\n+  /**\n+   * @return The sum total of bytes written through flushes thus far.\n+   */\n+  long bytesWritten();\n \n-    /**\n-     * @return The number of page flushes observed thus far.\n-     */\n-    long flushes();\n+  /**\n+   * @return The number of page flushes observed thus far.\n+   */\n+  long flushes();\n \n-    /**\n-     * @return The hit ratio observed thus far.\n-     */\n-    double hitRatio();\n+  /**\n+   * @return The hit ratio observed thus far.\n+   */\n+  double hitRatio();\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4302/PageCursorCounters.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4302/PageCursorCounters.java\nindex 5ea47a64f18..47073f862ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4302/PageCursorCounters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4302/PageCursorCounters.java\n@@ -78,4 +78,4 @@ public interface PageCursorCounters\n      * @return The hit ratio observed thus far.\n      */\n     double hitRatio();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
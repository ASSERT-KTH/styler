{
    "project_name": "neo4j-neo4j",
    "error_id": "3280",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3280/LuceneFulltextIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3280/LuceneFulltextIndex.java\nindex d2db5ddd526..b85454c8d1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3280/LuceneFulltextIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3280/LuceneFulltextIndex.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import org.apache.lucene.analysis.Analyzer;\n@@ -44,31 +45,31 @@ public class LuceneFulltextIndex extends AbstractLuceneIndex<FulltextIndexReader\n     private final Path transactionsFolder;\n     private final IndexDescriptor descriptor;\n \n-    LuceneFulltextIndex( PartitionedIndexStorage storage, IndexPartitionFactory partitionFactory, IndexDescriptor descriptor,\n-            TokenHolder propertyKeyTokenHolder, Config config, Analyzer analyzer, String[] propertyNames )\n+    LuceneFulltextIndex(PartitionedIndexStorage storage, IndexPartitionFactory partitionFactory, IndexDescriptor descriptor,\n+                        TokenHolder propertyKeyTokenHolder, Config config, Analyzer analyzer, String[] propertyNames)\n     {\n-        super( storage, partitionFactory, descriptor );\n+        super(storage, partitionFactory, descriptor);\n         this.descriptor = descriptor;\n         this.config = config;\n         this.analyzer = analyzer;\n         this.propertyNames = propertyNames;\n         this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n         Path indexFolder = storage.getIndexFolder();\n-        transactionsFolder = indexFolder.resolve( indexFolder.getFileName() + \".tx\" );\n+        transactionsFolder = indexFolder.resolve(indexFolder.getFileName() + \".tx\");\n     }\n \n     @Override\n     public void open() throws IOException\n     {\n         super.open();\n-        indexStorage.prepareFolder( transactionsFolder );\n+        indexStorage.prepareFolder(transactionsFolder);\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n         super.close();\n-        indexStorage.cleanupFolder( transactionsFolder );\n+        indexStorage.cleanupFolder(transactionsFolder);\n     }\n \n     @Override\n@@ -78,15 +79,15 @@ public class LuceneFulltextIndex extends AbstractLuceneIndex<FulltextIndexReader\n     }\n \n     @Override\n-    protected FulltextIndexReader createSimpleReader( List<AbstractIndexPartition> partitions ) throws IOException\n+    protected FulltextIndexReader createSimpleReader(List<AbstractIndexPartition> partitions) throws IOException\n     {\n-        return createPartitionedReader( partitions );\n+        return createPartitionedReader(partitions);\n     }\n \n     @Override\n-    protected FulltextIndexReader createPartitionedReader( List<AbstractIndexPartition> partitions ) throws IOException\n+    protected FulltextIndexReader createPartitionedReader(List<AbstractIndexPartition> partitions) throws IOException\n     {\n-        List<SearcherReference> searchers = acquireSearchers( partitions );\n-        return new FulltextIndexReader( searchers, propertyKeyTokenHolder, getDescriptor(), config, analyzer, propertyNames );\n+        List<SearcherReference> searchers = acquireSearchers(partitions);\n+        return new FulltextIndexReader(searchers, propertyKeyTokenHolder, getDescriptor(), config, analyzer, propertyNames);\n     }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
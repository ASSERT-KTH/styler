{
    "project_name": "graphfoundation-ongdb",
    "error_id": "721",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/721/NumberArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/721/NumberArray.java\nindex 2ed8cb0c546..0014e2fb3e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/721/NumberArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/721/NumberArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache;\n \n /**\n@@ -26,42 +27,43 @@ package org.neo4j.unsafe.impl.batchimport.cache;\n  */\n public interface NumberArray<N extends NumberArray<N>> extends MemoryStatsVisitor.Visitable, AutoCloseable\n {\n-    /**\n-     * @return length of the array, i.e. the capacity.\n-     */\n-    long length();\n+  /**\n+   * @return length of the array, i.e. the capacity.\n+   */\n+  long length();\n \n-    /**\n-     * Swaps items from {@code fromIndex} to {@code toIndex}, such that\n-     * {@code fromIndex} and {@code toIndex}, {@code fromIndex+1} and {@code toIndex} a.s.o swaps places.\n-     * The number of items swapped is equal to the length of the default value of the array.\n-     *  @param fromIndex where to start swapping from.\n-     * @param toIndex where to start swapping to.\n-     */\n-    void swap( long fromIndex, long toIndex );\n+  /**\n+   * Swaps items from {@code fromIndex} to {@code toIndex}, such that\n+   * {@code fromIndex} and {@code toIndex}, {@code fromIndex+1} and {@code toIndex} a.s.o swaps places.\n+   * The number of items swapped is equal to the length of the default value of the array.\n+   *\n+   * @param fromIndex where to start swapping from.\n+   * @param toIndex   where to start swapping to.\n+   */\n+  void swap(long fromIndex, long toIndex);\n \n-    /**\n-     * Sets all values to a default value.\n-     */\n-    void clear();\n+  /**\n+   * Sets all values to a default value.\n+   */\n+  void clear();\n \n-    /**\n-     * Releases any resources that GC won't release automatically.\n-     */\n-    @Override\n-    void close();\n+  /**\n+   * Releases any resources that GC won't release automatically.\n+   */\n+  @Override\n+  void close();\n \n-    /**\n-     * Part of the nature of {@link NumberArray} is that {@link #length()} can be dynamically growing.\n-     * For that to work some implementations (those coming from e.g\n-     * {@link NumberArrayFactory#newDynamicIntArray(long, int)} and such dynamic calls) has an indirection,\n-     * one that is a bit costly when comparing to raw array access. In scenarios where there will be two or\n-     * more access to the same index in the array it will be more efficient to resolve this indirection once\n-     * and return the \"raw\" array for that given index so that it can be used directly in multiple calls,\n-     * knowing that the returned array holds the given index.\n-     *\n-     * @param index index into the array which the returned array will contain.\n-     * @return array sure to hold the given index.\n-     */\n-    N at( long index );\n+  /**\n+   * Part of the nature of {@link NumberArray} is that {@link #length()} can be dynamically growing.\n+   * For that to work some implementations (those coming from e.g\n+   * {@link NumberArrayFactory#newDynamicIntArray(long, int)} and such dynamic calls) has an indirection,\n+   * one that is a bit costly when comparing to raw array access. In scenarios where there will be two or\n+   * more access to the same index in the array it will be more efficient to resolve this indirection once\n+   * and return the \"raw\" array for that given index so that it can be used directly in multiple calls,\n+   * knowing that the returned array holds the given index.\n+   *\n+   * @param index index into the array which the returned array will contain.\n+   * @return array sure to hold the given index.\n+   */\n+  N at(long index);\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/721/NumberArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/721/NumberArray.java\nindex 2ed8cb0c546..ecc45681a21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/721/NumberArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/721/NumberArray.java\n@@ -64,4 +64,4 @@ public interface NumberArray<N extends NumberArray<N>> extends MemoryStatsVisito\n      * @return array sure to hold the given index.\n      */\n     N at( long index );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
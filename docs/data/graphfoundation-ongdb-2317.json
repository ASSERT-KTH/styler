{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2317",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2317/InconsistencyMessageLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2317/InconsistencyMessageLogger.java\nindex 6aca1422f23..31a6be32211 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2317/InconsistencyMessageLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2317/InconsistencyMessageLogger.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.report;\n \n import org.neo4j.consistency.RecordType;\n@@ -28,77 +29,77 @@ import static org.neo4j.helpers.Strings.TAB;\n \n public class InconsistencyMessageLogger implements InconsistencyLogger\n {\n-    private final Log log;\n+  private final Log log;\n \n-    public InconsistencyMessageLogger( Log log )\n-    {\n-        this.log = log;\n-    }\n+  public InconsistencyMessageLogger(Log log)\n+  {\n+    this.log = log;\n+  }\n \n-    @Override\n-    public void error( RecordType recordType, AbstractBaseRecord record, String message, Object... args )\n-    {\n-        log.error( buildMessage( message, record, args ) );\n-    }\n+  @Override\n+  public void error(RecordType recordType, AbstractBaseRecord record, String message, Object... args)\n+  {\n+    log.error(buildMessage(message, record, args));\n+  }\n \n-    @Override\n-    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                       String message, Object... args )\n-    {\n-        log.error( buildMessage( message, oldRecord, newRecord, args ) );\n-    }\n+  @Override\n+  public void error(RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n+                    String message, Object... args)\n+  {\n+    log.error(buildMessage(message, oldRecord, newRecord, args));\n+  }\n \n-    @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord record, String message, Object... args )\n-    {\n-        log.warn( buildMessage( message, record, args ) );\n-    }\n+  @Override\n+  public void warning(RecordType recordType, AbstractBaseRecord record, String message, Object... args)\n+  {\n+    log.warn(buildMessage(message, record, args));\n+  }\n \n-    @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                         String message, Object... args )\n-    {\n-        log.warn( buildMessage( message, oldRecord, newRecord, args ) );\n-    }\n+  @Override\n+  public void warning(RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n+                      String message, Object... args)\n+  {\n+    log.warn(buildMessage(message, oldRecord, newRecord, args));\n+  }\n \n-    private static String buildMessage( String message, AbstractBaseRecord record, Object[] args )\n-    {\n-        StringBuilder builder = joinLines( message ).append( System.lineSeparator() ).append( TAB ).append( record );\n-        appendArgs( builder, args );\n-        return builder.toString();\n-    }\n+  private static String buildMessage(String message, AbstractBaseRecord record, Object[] args)\n+  {\n+    StringBuilder builder = joinLines(message).append(System.lineSeparator()).append(TAB).append(record);\n+    appendArgs(builder, args);\n+    return builder.toString();\n+  }\n+\n+  private static String buildMessage(String message, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, Object[] args)\n+  {\n+    StringBuilder builder = joinLines(message);\n+    builder.append(System.lineSeparator()).append(TAB).append(\"- \").append(oldRecord);\n+    builder.append(System.lineSeparator()).append(TAB).append(\"+ \").append(newRecord);\n+    appendArgs(builder, args);\n+    return builder.toString();\n+  }\n \n-    private static String buildMessage( String message, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, Object[] args )\n+  private static StringBuilder joinLines(String message)\n+  {\n+    String[] lines = message.split(\"\\n\");\n+    StringBuilder builder = new StringBuilder(lines[0].trim());\n+    for (int i = 1; i < lines.length; i++)\n     {\n-        StringBuilder builder = joinLines( message );\n-        builder.append( System.lineSeparator() ).append( TAB ).append( \"- \" ).append( oldRecord );\n-        builder.append( System.lineSeparator() ).append( TAB ).append( \"+ \" ).append( newRecord );\n-        appendArgs( builder, args );\n-        return builder.toString();\n+      builder.append(' ').append(lines[i].trim());\n     }\n+    return builder;\n+  }\n \n-    private static StringBuilder joinLines( String message )\n+  private static StringBuilder appendArgs(StringBuilder builder, Object[] args)\n+  {\n+    if (args == null || args.length == 0)\n     {\n-        String[] lines = message.split( \"\\n\" );\n-        StringBuilder builder = new StringBuilder( lines[0].trim() );\n-        for ( int i = 1; i < lines.length; i++ )\n-        {\n-            builder.append( ' ' ).append( lines[i].trim() );\n-        }\n-        return builder;\n+      return builder;\n     }\n-\n-    private static StringBuilder appendArgs( StringBuilder builder, Object[] args )\n+    builder.append(System.lineSeparator()).append(TAB).append(\"Inconsistent with:\");\n+    for (Object arg : args)\n     {\n-        if ( args == null || args.length == 0 )\n-        {\n-            return builder;\n-        }\n-        builder.append( System.lineSeparator() ).append( TAB ).append( \"Inconsistent with:\" );\n-        for ( Object arg : args )\n-        {\n-            builder.append( ' ' ).append( Strings.prettyPrint( arg ) );\n-        }\n-        return builder;\n+      builder.append(' ').append(Strings.prettyPrint(arg));\n     }\n+    return builder;\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2317/InconsistencyMessageLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2317/InconsistencyMessageLogger.java\nindex 6aca1422f23..e08bca88349 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2317/InconsistencyMessageLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2317/InconsistencyMessageLogger.java\n@@ -42,9 +42,8 @@ public class InconsistencyMessageLogger implements InconsistencyLogger\n     }\n \n     @Override\n-    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                       String message, Object... args )\n-    {\n+    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, String message, Object... args )\n+{\n         log.error( buildMessage( message, oldRecord, newRecord, args ) );\n     }\n \n@@ -55,9 +54,8 @@ public class InconsistencyMessageLogger implements InconsistencyLogger\n     }\n \n     @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                         String message, Object... args )\n-    {\n+    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, String message, Object... args )\n+{\n         log.warn( buildMessage( message, oldRecord, newRecord, args ) );\n     }\n \n@@ -85,7 +83,8 @@ public class InconsistencyMessageLogger implements InconsistencyLogger\n         {\n             builder.append( ' ' ).append( lines[i].trim() );\n         }\n-        return builder;\n+\n+return builder;\n     }\n \n     private static StringBuilder appendArgs( StringBuilder builder, Object[] args )\n@@ -99,6 +98,7 @@ public class InconsistencyMessageLogger implements InconsistencyLogger\n         {\n             builder.append( ' ' ).append( Strings.prettyPrint( arg ) );\n         }\n-        return builder;\n+\n+return builder;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
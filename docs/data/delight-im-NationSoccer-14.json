{
    "project_name": "delight-im-NationSoccer",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "45",
                "column": "23",
                "severity": "error",
                "message": "'=' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\tprivate PixelFormat(final int pGLInternalFormat, final int pGLFormat, final int pGLType, final int pBitsPerPixel) {\n\t\tthis.mGLInternalFormat = pGLInternalFormat;\n\t\tthis.mGLFormat= pGLFormat;\n\t\tthis.mGLType = pGLType;\n\t\tthis.mBitsPerPixel = pBitsPerPixel;\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "column": "23",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/14/PixelFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/intellij/14/PixelFormat.java\nindex a63c16f89f5..a2a9362238d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/14/PixelFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/intellij/14/PixelFormat.java\n@@ -10,72 +10,76 @@ import android.opengl.GLES20;\n  * @since 14:55:02 - 08.03.2010\n  */\n public enum PixelFormat {\n-\t// ===========================================================\n-\t// Elements\n-\t// ===========================================================\n-\n-\tUNDEFINED(-1, -1, -1, -1),\n-\tRGBA_4444(GLES20.GL_RGBA, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_SHORT_4_4_4_4, 16),\n-\tRGBA_5551(GLES20.GL_RGB, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_SHORT_5_5_5_1, 16),\n-\tRGBA_8888(GLES20.GL_RGBA, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_BYTE, 32),\n-\tRGB_565(GLES20.GL_RGB, GLES20.GL_RGB, GLES20.GL_UNSIGNED_SHORT_5_6_5, 16),\n-\tA_8(GLES20.GL_ALPHA, GLES20.GL_ALPHA, GLES20.GL_UNSIGNED_BYTE, 8),\n-\tI_8(GLES20.GL_LUMINANCE, GLES20.GL_LUMINANCE, GLES20.GL_UNSIGNED_BYTE, 8),\n-\tAI_88(GLES20.GL_LUMINANCE_ALPHA, GLES20.GL_LUMINANCE_ALPHA, GLES20.GL_UNSIGNED_BYTE, 16);\n-\n-\t// ===========================================================\n-\t// Constants\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Fields\n-\t// ===========================================================\n-\n-\tprivate final int mGLInternalFormat;\n-\tprivate final int mGLFormat;\n-\tprivate final int mGLType;\n-\tprivate final int mBitsPerPixel;\n-\n-\t// ===========================================================\n-\t// Constructors\n-\t// ===========================================================\n-\n-\tprivate PixelFormat(final int pGLInternalFormat, final int pGLFormat, final int pGLType, final int pBitsPerPixel) {\n-\t\tthis.mGLInternalFormat = pGLInternalFormat;\n-\t\tthis.mGLFormat= pGLFormat;\n-\t\tthis.mGLType = pGLType;\n-\t\tthis.mBitsPerPixel = pBitsPerPixel;\n-\t}\n-\n-\t// ===========================================================\n-\t// Getter & Setter\n-\t// ===========================================================\n-\n-\tpublic int getGLInternalFormat() {\n-\t\treturn this.mGLInternalFormat;\n-\t}\n-\n-\tpublic int getGLFormat() {\n-\t\treturn this.mGLFormat;\n-\t}\n-\n-\tpublic int getGLType() {\n-\t\treturn this.mGLType;\n-\t}\n-\n-\tpublic int getBitsPerPixel() {\n-\t\treturn this.mBitsPerPixel;\n-\t}\n-\n-\t// ===========================================================\n-\t// Methods from SuperClass/Interfaces\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Methods\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Inner and Anonymous Classes\n-\t// ===========================================================\n+    // ===========================================================\n+    // Elements\n+    // ===========================================================\n+\n+    UNDEFINED(-1, -1, -1, -1),\n+    RGBA_4444(GLES20.GL_RGBA, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_SHORT_4_4_4_4,\n+        16),\n+    RGBA_5551(GLES20.GL_RGB, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_SHORT_5_5_5_1,\n+        16),\n+    RGBA_8888(GLES20.GL_RGBA, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_BYTE, 32),\n+    RGB_565(GLES20.GL_RGB, GLES20.GL_RGB, GLES20.GL_UNSIGNED_SHORT_5_6_5, 16),\n+    A_8(GLES20.GL_ALPHA, GLES20.GL_ALPHA, GLES20.GL_UNSIGNED_BYTE, 8),\n+    I_8(GLES20.GL_LUMINANCE, GLES20.GL_LUMINANCE, GLES20.GL_UNSIGNED_BYTE, 8),\n+    AI_88(GLES20.GL_LUMINANCE_ALPHA, GLES20.GL_LUMINANCE_ALPHA,\n+        GLES20.GL_UNSIGNED_BYTE, 16);\n+\n+    // ===========================================================\n+    // Constants\n+    // ===========================================================\n+\n+    // ===========================================================\n+    // Fields\n+    // ===========================================================\n+\n+    private final int mGLInternalFormat;\n+    private final int mGLFormat;\n+    private final int mGLType;\n+    private final int mBitsPerPixel;\n+\n+    // ===========================================================\n+    // Constructors\n+    // ===========================================================\n+\n+    private PixelFormat(final int pGLInternalFormat, final int pGLFormat,\n+                        final int pGLType, final int pBitsPerPixel) {\n+        this.mGLInternalFormat = pGLInternalFormat;\n+        this.mGLFormat = pGLFormat;\n+        this.mGLType = pGLType;\n+        this.mBitsPerPixel = pBitsPerPixel;\n+    }\n+\n+    // ===========================================================\n+    // Getter & Setter\n+    // ===========================================================\n+\n+    public int getGLInternalFormat() {\n+        return this.mGLInternalFormat;\n+    }\n+\n+    public int getGLFormat() {\n+        return this.mGLFormat;\n+    }\n+\n+    public int getGLType() {\n+        return this.mGLType;\n+    }\n+\n+    public int getBitsPerPixel() {\n+        return this.mBitsPerPixel;\n+    }\n+\n+    // ===========================================================\n+    // Methods from SuperClass/Interfaces\n+    // ===========================================================\n+\n+    // ===========================================================\n+    // Methods\n+    // ===========================================================\n+\n+    // ===========================================================\n+    // Inner and Anonymous Classes\n+    // ===========================================================\n }\n\\ No newline at end of file\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/14/PixelFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/codebuff/14/PixelFormat.java\nindex a63c16f89f5..8f6016da793 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/14/PixelFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/codebuff/14/PixelFormat.java\n@@ -9,73 +9,106 @@ import android.opengl.GLES20;\n  * @author Nicolas Gramlich\n  * @since 14:55:02 - 08.03.2010\n  */\n+\n+\n public enum PixelFormat {\n-\t// ===========================================================\n-\t// Elements\n-\t// ===========================================================\n-\n-\tUNDEFINED(-1, -1, -1, -1),\n-\tRGBA_4444(GLES20.GL_RGBA, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_SHORT_4_4_4_4, 16),\n-\tRGBA_5551(GLES20.GL_RGB, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_SHORT_5_5_5_1, 16),\n-\tRGBA_8888(GLES20.GL_RGBA, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_BYTE, 32),\n-\tRGB_565(GLES20.GL_RGB, GLES20.GL_RGB, GLES20.GL_UNSIGNED_SHORT_5_6_5, 16),\n-\tA_8(GLES20.GL_ALPHA, GLES20.GL_ALPHA, GLES20.GL_UNSIGNED_BYTE, 8),\n-\tI_8(GLES20.GL_LUMINANCE, GLES20.GL_LUMINANCE, GLES20.GL_UNSIGNED_BYTE, 8),\n-\tAI_88(GLES20.GL_LUMINANCE_ALPHA, GLES20.GL_LUMINANCE_ALPHA, GLES20.GL_UNSIGNED_BYTE, 16);\n-\n-\t// ===========================================================\n-\t// Constants\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Fields\n-\t// ===========================================================\n-\n-\tprivate final int mGLInternalFormat;\n-\tprivate final int mGLFormat;\n-\tprivate final int mGLType;\n-\tprivate final int mBitsPerPixel;\n-\n-\t// ===========================================================\n-\t// Constructors\n-\t// ===========================================================\n-\n-\tprivate PixelFormat(final int pGLInternalFormat, final int pGLFormat, final int pGLType, final int pBitsPerPixel) {\n-\t\tthis.mGLInternalFormat = pGLInternalFormat;\n-\t\tthis.mGLFormat= pGLFormat;\n-\t\tthis.mGLType = pGLType;\n-\t\tthis.mBitsPerPixel = pBitsPerPixel;\n-\t}\n-\n-\t// ===========================================================\n-\t// Getter & Setter\n-\t// ===========================================================\n-\n-\tpublic int getGLInternalFormat() {\n-\t\treturn this.mGLInternalFormat;\n-\t}\n-\n-\tpublic int getGLFormat() {\n-\t\treturn this.mGLFormat;\n-\t}\n-\n-\tpublic int getGLType() {\n-\t\treturn this.mGLType;\n-\t}\n-\n-\tpublic int getBitsPerPixel() {\n-\t\treturn this.mBitsPerPixel;\n-\t}\n-\n-\t// ===========================================================\n-\t// Methods from SuperClass/Interfaces\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Methods\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Inner and Anonymous Classes\n-\t// ===========================================================\n+ // ===========================================================\n+ // Elements\n+ // ===========================================================\n+\n+\n+\n+\n+ UNDEFINED(-1, -1, -1, -1),\n+ RGBA_4444(GLES20.GL_RGBA, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_SHORT_4_4_4_4, 16),\n+ RGBA_5551(GLES20.GL_RGB, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_SHORT_5_5_5_1, 16),\n+ RGBA_8888(GLES20.GL_RGBA, GLES20.GL_RGBA, GLES20.GL_UNSIGNED_BYTE, 32),\n+ RGB_565(GLES20.GL_RGB, GLES20.GL_RGB, GLES20.GL_UNSIGNED_SHORT_5_6_5, 16),\n+ A_8(GLES20.GL_ALPHA, GLES20.GL_ALPHA, GLES20.GL_UNSIGNED_BYTE, 8),\n+ I_8(GLES20.GL_LUMINANCE, GLES20.GL_LUMINANCE, GLES20.GL_UNSIGNED_BYTE, 8),\n+ AI_88(GLES20.GL_LUMINANCE_ALPHA, GLES20.GL_LUMINANCE_ALPHA, GLES20.GL_UNSIGNED_BYTE, 16);\n+\n+ // ===========================================================\n+ // Constants\n+ // ===========================================================\n+\n+ // ===========================================================\n+ // Fields\n+ // ===========================================================\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ private final int mGLInternalFormat;\n+ private final int mGLFormat;\n+ private final int mGLType;\n+ private final int mBitsPerPixel;\n+\n+ // ===========================================================\n+ // Constructors\n+ // ===========================================================\n+\n+\n+\n+\n+\n+ private PixelFormat(final int pGLInternalFormat, final int pGLFormat, final int pGLType, final int pBitsPerPixel) {\n+  this.mGLInternalFormat = pGLInternalFormat;\n+  this.mGLFormat = pGLFormat;\n+  this.mGLType = pGLType;\n+  this.mBitsPerPixel = pBitsPerPixel;\n+ }\n+\n+ // ===========================================================\n+ // Getter & Setter\n+ // ===========================================================\n+\n+\n+\n+\n+\n+ public int getGLInternalFormat() {\n+  return this.mGLInternalFormat;\n+ }\n+\n+ public int getGLFormat() {\n+  return this.mGLFormat;\n+ }\n+\n+ public int getGLType() {\n+  return this.mGLType;\n+ }\n+\n+ public int getBitsPerPixel() {\n+  return this.mBitsPerPixel;\n+ }\n+\n+ // ===========================================================\n+ // Methods from SuperClass/Interfaces\n+ // ===========================================================\n+\n+ // ===========================================================\n+ // Methods\n+ // ===========================================================\n+\n+ // ===========================================================\n+ // Inner and Anonymous Classes\n+ // ===========================================================\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n }\n\\ No newline at end of file\n",
            "diff_size": 101
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "column": "23",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "column": "23",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
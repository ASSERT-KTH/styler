{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1952",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "361",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1952/NodeStateImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1952/NodeStateImpl.java\nindex 5013b7476ba..7c1c45f06aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1952/NodeStateImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1952/NodeStateImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.state;\n \n import java.util.Collections;\n@@ -43,360 +44,359 @@ import static org.neo4j.collection.primitive.Primitive.intSet;\n \n class NodeStateImpl extends PropertyContainerStateImpl implements NodeState\n {\n-    static final NodeState EMPTY = new NodeState()\n+  static final NodeState EMPTY = new NodeState()\n+  {\n+    @Override\n+    public Iterator<StorageProperty> addedProperties()\n     {\n-        @Override\n-        public Iterator<StorageProperty> addedProperties()\n-        {\n-            return emptyIterator();\n-        }\n-\n-        @Override\n-        public Iterator<StorageProperty> changedProperties()\n-        {\n-            return emptyIterator();\n-        }\n-\n-        @Override\n-        public Iterator<Integer> removedProperties()\n-        {\n-            return emptyIterator();\n-        }\n-\n-        @Override\n-        public Iterator<StorageProperty> addedAndChangedProperties()\n-        {\n-            return emptyIterator();\n-        }\n-\n-        @Override\n-        public Iterator<StorageProperty> augmentProperties( Iterator<StorageProperty> iterator )\n-        {\n-            return iterator;\n-        }\n-\n-        @Override\n-        public void accept( PropertyContainerState.Visitor visitor )\n-        {\n-        }\n-\n-        @Override\n-        public ReadableDiffSets<Integer> labelDiffSets()\n-        {\n-            return ReadableDiffSets.Empty.instance();\n-        }\n-\n-        @Override\n-        public int augmentDegree( Direction direction, int degree )\n-        {\n-            return degree;\n-        }\n-\n-        @Override\n-        public int augmentDegree( Direction direction, int degree, int typeId )\n-        {\n-            return degree;\n-        }\n-\n-        @Override\n-        public int augmentDegree( RelationshipDirection direction, int degree, int typeId )\n-        {\n-            return degree;\n-        }\n-\n-        @Override\n-        public void accept( NodeState.Visitor visitor )\n-        {\n-        }\n-\n-        @Override\n-        public PrimitiveIntSet relationshipTypes()\n-        {\n-            return intSet();\n-        }\n-\n-        @Override\n-        public long getId()\n-        {\n-            throw new UnsupportedOperationException( \"id not defined\" );\n-        }\n-\n-        @Override\n-        public boolean hasPropertyChanges()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public boolean hasRelationshipChanges()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public StorageProperty getChangedProperty( int propertyKeyId )\n-        {\n-            return null;\n-        }\n+      return emptyIterator();\n+    }\n \n-        @Override\n-        public StorageProperty getAddedProperty( int propertyKeyId )\n-        {\n-            return null;\n-        }\n+    @Override\n+    public Iterator<StorageProperty> changedProperties()\n+    {\n+      return emptyIterator();\n+    }\n \n-        @Override\n-        public boolean isPropertyChangedOrRemoved( int propertyKey )\n-        {\n-            return false;\n-        }\n+    @Override\n+    public Iterator<Integer> removedProperties()\n+    {\n+      return emptyIterator();\n+    }\n \n-        @Override\n-        public boolean isPropertyRemoved( int propertyKeyId )\n-        {\n-            return false;\n-        }\n+    @Override\n+    public Iterator<StorageProperty> addedAndChangedProperties()\n+    {\n+      return emptyIterator();\n+    }\n \n-        @Override\n-        public PrimitiveLongIterator getAddedRelationships( Direction direction )\n-        {\n-            return PrimitiveLongCollections.emptyIterator();\n-        }\n+    @Override\n+    public Iterator<StorageProperty> augmentProperties(Iterator<StorageProperty> iterator)\n+    {\n+      return iterator;\n+    }\n \n-        @Override\n-        public PrimitiveLongIterator getAddedRelationships( Direction direction, int[] relTypes )\n-        {\n-            return PrimitiveLongCollections.emptyIterator();\n-        }\n+    @Override\n+    public void accept(PropertyContainerState.Visitor visitor)\n+    {\n+    }\n \n-        @Override\n-        public PrimitiveLongIterator getAddedRelationships()\n-        {\n-            return PrimitiveLongCollections.emptyIterator();\n-        }\n+    @Override\n+    public ReadableDiffSets<Integer> labelDiffSets()\n+    {\n+      return ReadableDiffSets.Empty.instance();\n+    }\n \n-        @Override\n-        public PrimitiveLongIterator getAddedRelationships( RelationshipDirection direction, int relType )\n-        {\n-            return PrimitiveLongCollections.emptyIterator();\n-        }\n-    };\n+    @Override\n+    public int augmentDegree(Direction direction, int degree)\n+    {\n+      return degree;\n+    }\n \n-    private DiffSets<Integer> labelDiffSets;\n-    private RelationshipChangesForNode relationshipsAdded;\n-    private RelationshipChangesForNode relationshipsRemoved;\n+    @Override\n+    public int augmentDegree(Direction direction, int degree, int typeId)\n+    {\n+      return degree;\n+    }\n \n-    private Set<PrimitiveLongDiffSets> indexDiffs;\n-    private final TxState state;\n+    @Override\n+    public int augmentDegree(RelationshipDirection direction, int degree, int typeId)\n+    {\n+      return degree;\n+    }\n \n-    NodeStateImpl( long id, TxState state )\n+    @Override\n+    public void accept(NodeState.Visitor visitor)\n     {\n-        super( id );\n-        this.state = state;\n     }\n \n     @Override\n-    public ReadableDiffSets<Integer> labelDiffSets()\n+    public PrimitiveIntSet relationshipTypes()\n     {\n-        return ReadableDiffSets.Empty.ifNull( labelDiffSets );\n+      return intSet();\n     }\n \n-    DiffSets<Integer> getOrCreateLabelDiffSets()\n+    @Override\n+    public long getId()\n     {\n-        if ( labelDiffSets == null )\n-        {\n-            labelDiffSets = new DiffSets<>();\n-        }\n-        return labelDiffSets;\n+      throw new UnsupportedOperationException(\"id not defined\");\n     }\n \n-    public void addRelationship( long relId, int typeId, Direction direction )\n+    @Override\n+    public boolean hasPropertyChanges()\n     {\n-        if ( !hasAddedRelationships() )\n-        {\n-            relationshipsAdded = new RelationshipChangesForNode( DiffStrategy.ADD, state );\n-        }\n-        relationshipsAdded.addRelationship( relId, typeId, direction );\n+      return false;\n     }\n \n-    public void removeRelationship( long relId, int typeId, Direction direction )\n+    @Override\n+    public boolean hasRelationshipChanges()\n     {\n-        if ( hasAddedRelationships() )\n-        {\n-            if ( relationshipsAdded.removeRelationship( relId, typeId, direction ) )\n-            {\n-                // This was a rel that was added in this tx, no need to add it to the remove list, instead we just\n-                // remove it from added relationships.\n-                return;\n-            }\n-        }\n-        if ( !hasRemovedRelationships() )\n-        {\n-            relationshipsRemoved = new RelationshipChangesForNode( DiffStrategy.REMOVE, state );\n-        }\n-        relationshipsRemoved.addRelationship( relId, typeId, direction );\n+      return false;\n     }\n \n     @Override\n-    public void clear()\n+    public StorageProperty getChangedProperty(int propertyKeyId)\n     {\n-        super.clear();\n-        if ( relationshipsAdded != null )\n-        {\n-            relationshipsAdded.clear();\n-        }\n-        if ( relationshipsRemoved != null )\n-        {\n-            relationshipsRemoved.clear();\n-        }\n-        if ( labelDiffSets != null )\n-        {\n-            labelDiffSets.clear();\n-        }\n-        if ( indexDiffs != null )\n-        {\n-            indexDiffs.clear();\n-        }\n+      return null;\n     }\n \n     @Override\n-    public int augmentDegree( Direction direction, int degree )\n+    public StorageProperty getAddedProperty(int propertyKeyId)\n     {\n-        if ( hasAddedRelationships() )\n-        {\n-            degree = relationshipsAdded.augmentDegree( direction, degree );\n-        }\n-        if ( hasRemovedRelationships() )\n-        {\n-            degree = relationshipsRemoved.augmentDegree( direction, degree );\n-        }\n-        return degree;\n+      return null;\n     }\n \n     @Override\n-    public int augmentDegree( Direction direction, int degree, int typeId )\n+    public boolean isPropertyChangedOrRemoved(int propertyKey)\n     {\n-        if ( hasAddedRelationships() )\n-        {\n-            degree = relationshipsAdded.augmentDegree( direction, degree, typeId );\n-        }\n-        if ( hasRemovedRelationships() )\n-        {\n-            degree = relationshipsRemoved.augmentDegree( direction, degree, typeId );\n-        }\n-        return degree;\n+      return false;\n     }\n \n     @Override\n-    public int augmentDegree( RelationshipDirection direction, int degree, int typeId )\n+    public boolean isPropertyRemoved(int propertyKeyId)\n     {\n-        if ( hasAddedRelationships() )\n-        {\n-            degree = relationshipsAdded.augmentDegree( direction, degree, typeId );\n-        }\n-        if ( hasRemovedRelationships() )\n-        {\n-            degree = relationshipsRemoved.augmentDegree( direction, degree, typeId );\n-        }\n-        return degree;\n+      return false;\n     }\n \n     @Override\n-    public void accept( NodeState.Visitor visitor ) throws ConstraintValidationException\n+    public PrimitiveLongIterator getAddedRelationships(Direction direction)\n     {\n-        super.accept( visitor );\n-        if ( labelDiffSets != null )\n-        {\n-            visitor.visitLabelChanges( getId(), labelDiffSets.getAdded(), labelDiffSets.getRemoved() );\n-        }\n+      return PrimitiveLongCollections.emptyIterator();\n     }\n \n-    private boolean hasAddedRelationships()\n+    @Override\n+    public PrimitiveLongIterator getAddedRelationships(Direction direction, int[] relTypes)\n     {\n-        return relationshipsAdded != null;\n+      return PrimitiveLongCollections.emptyIterator();\n     }\n \n-    private boolean hasRemovedRelationships()\n+    @Override\n+    public PrimitiveLongIterator getAddedRelationships()\n     {\n-        return relationshipsRemoved != null;\n+      return PrimitiveLongCollections.emptyIterator();\n     }\n \n     @Override\n-    public PrimitiveIntSet relationshipTypes()\n+    public PrimitiveLongIterator getAddedRelationships(RelationshipDirection direction, int relType)\n     {\n-        if ( hasAddedRelationships() )\n-        {\n-            return relationshipsAdded.relationshipTypes();\n-        }\n-        return intSet();\n+      return PrimitiveLongCollections.emptyIterator();\n     }\n+  };\n+\n+  private DiffSets<Integer> labelDiffSets;\n+  private RelationshipChangesForNode relationshipsAdded;\n+  private RelationshipChangesForNode relationshipsRemoved;\n+\n+  private Set<PrimitiveLongDiffSets> indexDiffs;\n+  private final TxState state;\n+\n+  NodeStateImpl(long id, TxState state)\n+  {\n+    super(id);\n+    this.state = state;\n+  }\n+\n+  @Override\n+  public ReadableDiffSets<Integer> labelDiffSets()\n+  {\n+    return ReadableDiffSets.Empty.ifNull(labelDiffSets);\n+  }\n+\n+  DiffSets<Integer> getOrCreateLabelDiffSets()\n+  {\n+    if (labelDiffSets == null)\n+    {\n+      labelDiffSets = new DiffSets<>();\n+    }\n+    return labelDiffSets;\n+  }\n \n-    void addIndexDiff( PrimitiveLongDiffSets diff )\n+  public void addRelationship(long relId, int typeId, Direction direction)\n+  {\n+    if (!hasAddedRelationships())\n     {\n-        if ( indexDiffs == null )\n-        {\n-            indexDiffs = Collections.newSetFromMap( new IdentityHashMap<PrimitiveLongDiffSets, Boolean>() );\n-        }\n-        indexDiffs.add( diff );\n+      relationshipsAdded = new RelationshipChangesForNode(DiffStrategy.ADD, state);\n     }\n+    relationshipsAdded.addRelationship(relId, typeId, direction);\n+  }\n \n-    void removeIndexDiff( PrimitiveLongDiffSets diff )\n+  public void removeRelationship(long relId, int typeId, Direction direction)\n+  {\n+    if (hasAddedRelationships())\n     {\n-        if ( indexDiffs != null )\n-        {\n-            indexDiffs.remove( diff );\n-        }\n+      if (relationshipsAdded.removeRelationship(relId, typeId, direction))\n+      {\n+        // This was a rel that was added in this tx, no need to add it to the remove list, instead we just\n+        // remove it from added relationships.\n+        return;\n+      }\n     }\n+    if (!hasRemovedRelationships())\n+    {\n+      relationshipsRemoved = new RelationshipChangesForNode(DiffStrategy.REMOVE, state);\n+    }\n+    relationshipsRemoved.addRelationship(relId, typeId, direction);\n+  }\n+\n+  @Override\n+  public void clear()\n+  {\n+    super.clear();\n+    if (relationshipsAdded != null)\n+    {\n+      relationshipsAdded.clear();\n+    }\n+    if (relationshipsRemoved != null)\n+    {\n+      relationshipsRemoved.clear();\n+    }\n+    if (labelDiffSets != null)\n+    {\n+      labelDiffSets.clear();\n+    }\n+    if (indexDiffs != null)\n+    {\n+      indexDiffs.clear();\n+    }\n+  }\n \n-    void clearIndexDiffs( long nodeId )\n+  @Override\n+  public int augmentDegree(Direction direction, int degree)\n+  {\n+    if (hasAddedRelationships())\n     {\n-        if ( indexDiffs != null )\n-        {\n-            for ( PrimitiveLongDiffSets diff : indexDiffs )\n-            {\n-                if ( diff.getAdded().contains( nodeId ) )\n-                {\n-                    diff.remove( nodeId );\n-                }\n-                else if ( diff.getRemoved().contains( nodeId ) )\n-                {\n-                    diff.add( nodeId );\n-                }\n-            }\n-        }\n+      degree = relationshipsAdded.augmentDegree(direction, degree);\n+    }\n+    if (hasRemovedRelationships())\n+    {\n+      degree = relationshipsRemoved.augmentDegree(direction, degree);\n     }\n+    return degree;\n+  }\n \n-    @Override\n-    public boolean hasRelationshipChanges()\n+  @Override\n+  public int augmentDegree(Direction direction, int degree, int typeId)\n+  {\n+    if (hasAddedRelationships())\n     {\n-        return hasAddedRelationships() || hasRemovedRelationships();\n+      degree = relationshipsAdded.augmentDegree(direction, degree, typeId);\n     }\n+    if (hasRemovedRelationships())\n+    {\n+      degree = relationshipsRemoved.augmentDegree(direction, degree, typeId);\n+    }\n+    return degree;\n+  }\n \n-    @Override\n-    public PrimitiveLongIterator getAddedRelationships( Direction direction )\n+  @Override\n+  public int augmentDegree(RelationshipDirection direction, int degree, int typeId)\n+  {\n+    if (hasAddedRelationships())\n     {\n-        return relationshipsAdded != null ? relationshipsAdded.getRelationships( direction ) :\n-            PrimitiveLongCollections.emptyIterator();\n+      degree = relationshipsAdded.augmentDegree(direction, degree, typeId);\n     }\n+    if (hasRemovedRelationships())\n+    {\n+      degree = relationshipsRemoved.augmentDegree(direction, degree, typeId);\n+    }\n+    return degree;\n+  }\n+\n+  @Override\n+  public void accept(NodeState.Visitor visitor) throws ConstraintValidationException\n+  {\n+    super.accept(visitor);\n+    if (labelDiffSets != null)\n+    {\n+      visitor.visitLabelChanges(getId(), labelDiffSets.getAdded(), labelDiffSets.getRemoved());\n+    }\n+  }\n+\n+  private boolean hasAddedRelationships()\n+  {\n+    return relationshipsAdded != null;\n+  }\n+\n+  private boolean hasRemovedRelationships()\n+  {\n+    return relationshipsRemoved != null;\n+  }\n+\n+  @Override\n+  public PrimitiveIntSet relationshipTypes()\n+  {\n+    if (hasAddedRelationships())\n+    {\n+      return relationshipsAdded.relationshipTypes();\n+    }\n+    return intSet();\n+  }\n \n-    @Override\n-    public PrimitiveLongIterator getAddedRelationships( Direction direction, int[] relTypes )\n+  void addIndexDiff(PrimitiveLongDiffSets diff)\n+  {\n+    if (indexDiffs == null)\n     {\n-        return relationshipsAdded != null ? relationshipsAdded.getRelationships( direction, relTypes ) :\n-            PrimitiveLongCollections.emptyIterator();\n+      indexDiffs = Collections.newSetFromMap(new IdentityHashMap<PrimitiveLongDiffSets, Boolean>());\n     }\n+    indexDiffs.add(diff);\n+  }\n \n-    @Override\n-    public PrimitiveLongIterator getAddedRelationships()\n+  void removeIndexDiff(PrimitiveLongDiffSets diff)\n+  {\n+    if (indexDiffs != null)\n     {\n-        return relationshipsAdded != null ? relationshipsAdded.getRelationships() :\n-               PrimitiveLongCollections.emptyIterator();\n+      indexDiffs.remove(diff);\n     }\n+  }\n \n-    @Override\n-    public PrimitiveLongIterator getAddedRelationships( RelationshipDirection direction, int relType )\n+  void clearIndexDiffs(long nodeId)\n+  {\n+    if (indexDiffs != null)\n     {\n-        return relationshipsAdded != null ? relationshipsAdded.getRelationships( direction, relType ) :\n-               PrimitiveLongCollections.emptyIterator();\n+      for (PrimitiveLongDiffSets diff : indexDiffs)\n+      {\n+        if (diff.getAdded().contains(nodeId))\n+        {\n+          diff.remove(nodeId);\n+        } else if (diff.getRemoved().contains(nodeId))\n+        {\n+          diff.add(nodeId);\n+        }\n+      }\n     }\n+  }\n+\n+  @Override\n+  public boolean hasRelationshipChanges()\n+  {\n+    return hasAddedRelationships() || hasRemovedRelationships();\n+  }\n+\n+  @Override\n+  public PrimitiveLongIterator getAddedRelationships(Direction direction)\n+  {\n+    return relationshipsAdded != null ? relationshipsAdded.getRelationships(direction) :\n+        PrimitiveLongCollections.emptyIterator();\n+  }\n+\n+  @Override\n+  public PrimitiveLongIterator getAddedRelationships(Direction direction, int[] relTypes)\n+  {\n+    return relationshipsAdded != null ? relationshipsAdded.getRelationships(direction, relTypes) :\n+        PrimitiveLongCollections.emptyIterator();\n+  }\n+\n+  @Override\n+  public PrimitiveLongIterator getAddedRelationships()\n+  {\n+    return relationshipsAdded != null ? relationshipsAdded.getRelationships() :\n+        PrimitiveLongCollections.emptyIterator();\n+  }\n+\n+  @Override\n+  public PrimitiveLongIterator getAddedRelationships(RelationshipDirection direction, int relType)\n+  {\n+    return relationshipsAdded != null ? relationshipsAdded.getRelationships(direction, relType) :\n+        PrimitiveLongCollections.emptyIterator();\n+  }\n }\n",
            "diff_size": 456
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1952/NodeStateImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1952/NodeStateImpl.java\nindex 5013b7476ba..a480804cef6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1952/NodeStateImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1952/NodeStateImpl.java\n@@ -207,7 +207,8 @@ class NodeStateImpl extends PropertyContainerStateImpl implements NodeState\n         {\n             labelDiffSets = new DiffSets<>();\n         }\n-        return labelDiffSets;\n+\n+return labelDiffSets;\n     }\n \n     public void addRelationship( long relId, int typeId, Direction direction )\n@@ -245,15 +246,18 @@ class NodeStateImpl extends PropertyContainerStateImpl implements NodeState\n         {\n             relationshipsAdded.clear();\n         }\n-        if ( relationshipsRemoved != null )\n+\n+if ( relationshipsRemoved != null )\n         {\n             relationshipsRemoved.clear();\n         }\n-        if ( labelDiffSets != null )\n+\n+if ( labelDiffSets != null )\n         {\n             labelDiffSets.clear();\n         }\n-        if ( indexDiffs != null )\n+\n+if ( indexDiffs != null )\n         {\n             indexDiffs.clear();\n         }\n@@ -266,11 +270,13 @@ class NodeStateImpl extends PropertyContainerStateImpl implements NodeState\n         {\n             degree = relationshipsAdded.augmentDegree( direction, degree );\n         }\n-        if ( hasRemovedRelationships() )\n+\n+if ( hasRemovedRelationships() )\n         {\n             degree = relationshipsRemoved.augmentDegree( direction, degree );\n         }\n-        return degree;\n+\n+return degree;\n     }\n \n     @Override\n@@ -280,11 +286,13 @@ class NodeStateImpl extends PropertyContainerStateImpl implements NodeState\n         {\n             degree = relationshipsAdded.augmentDegree( direction, degree, typeId );\n         }\n-        if ( hasRemovedRelationships() )\n+\n+if ( hasRemovedRelationships() )\n         {\n             degree = relationshipsRemoved.augmentDegree( direction, degree, typeId );\n         }\n-        return degree;\n+\n+return degree;\n     }\n \n     @Override\n@@ -294,11 +302,13 @@ class NodeStateImpl extends PropertyContainerStateImpl implements NodeState\n         {\n             degree = relationshipsAdded.augmentDegree( direction, degree, typeId );\n         }\n-        if ( hasRemovedRelationships() )\n+\n+if ( hasRemovedRelationships() )\n         {\n             degree = relationshipsRemoved.augmentDegree( direction, degree, typeId );\n         }\n-        return degree;\n+\n+return degree;\n     }\n \n     @Override\n@@ -328,7 +338,8 @@ class NodeStateImpl extends PropertyContainerStateImpl implements NodeState\n         {\n             return relationshipsAdded.relationshipTypes();\n         }\n-        return intSet();\n+\n+return intSet();\n     }\n \n     void addIndexDiff( PrimitiveLongDiffSets diff )\n@@ -375,28 +386,24 @@ class NodeStateImpl extends PropertyContainerStateImpl implements NodeState\n     @Override\n     public PrimitiveLongIterator getAddedRelationships( Direction direction )\n     {\n-        return relationshipsAdded != null ? relationshipsAdded.getRelationships( direction ) :\n-            PrimitiveLongCollections.emptyIterator();\n+        return relationshipsAdded != null ? relationshipsAdded.getRelationships( direction ) : PrimitiveLongCollections.emptyIterator();\n     }\n \n     @Override\n     public PrimitiveLongIterator getAddedRelationships( Direction direction, int[] relTypes )\n     {\n-        return relationshipsAdded != null ? relationshipsAdded.getRelationships( direction, relTypes ) :\n-            PrimitiveLongCollections.emptyIterator();\n+        return relationshipsAdded != null ? relationshipsAdded.getRelationships( direction, relTypes ) : PrimitiveLongCollections.emptyIterator();\n     }\n \n     @Override\n     public PrimitiveLongIterator getAddedRelationships()\n     {\n-        return relationshipsAdded != null ? relationshipsAdded.getRelationships() :\n-               PrimitiveLongCollections.emptyIterator();\n+        return relationshipsAdded != null ? relationshipsAdded.getRelationships() : PrimitiveLongCollections.emptyIterator();\n     }\n \n     @Override\n     public PrimitiveLongIterator getAddedRelationships( RelationshipDirection direction, int relType )\n     {\n-        return relationshipsAdded != null ? relationshipsAdded.getRelationships( direction, relType ) :\n-               PrimitiveLongCollections.emptyIterator();\n+        return relationshipsAdded != null ? relationshipsAdded.getRelationships( direction, relType ) : PrimitiveLongCollections.emptyIterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
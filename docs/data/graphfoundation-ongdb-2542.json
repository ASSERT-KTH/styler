{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2542",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2542/BackupModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2542/BackupModule.java\nindex 4dad12c8613..c6fac6083be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2542/BackupModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2542/BackupModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.time.Clock;\n@@ -29,57 +30,57 @@ import org.neo4j.logging.LogProvider;\n \n public class BackupModule\n {\n-    private final OutsideWorld outsideWorld;\n-    private final LogProvider logProvider;\n-    private final FileSystemAbstraction fileSystemAbstraction;\n-    private final Monitors monitors;\n-    private final Clock clock;\n-    private final TransactionLogCatchUpFactory transactionLogCatchUpFactory;\n+  private final OutsideWorld outsideWorld;\n+  private final LogProvider logProvider;\n+  private final FileSystemAbstraction fileSystemAbstraction;\n+  private final Monitors monitors;\n+  private final Clock clock;\n+  private final TransactionLogCatchUpFactory transactionLogCatchUpFactory;\n \n-    /**\n-     * Dependencies that can be resolved immediately after launching the backup tool\n-     *\n-     * @param outsideWorld filesystem and output streams that the tool interacts with\n-     * @param logProvider made available to subsequent dependency resolution classes\n-     * @param monitors will become shared across all resolved dependencies\n-     */\n-    BackupModule( OutsideWorld outsideWorld, LogProvider logProvider, Monitors monitors )\n-    {\n-        this.outsideWorld = outsideWorld;\n-        this.logProvider = logProvider;\n-        this.monitors = monitors;\n-        this.clock = Clock.systemDefaultZone();\n-        this.transactionLogCatchUpFactory = new TransactionLogCatchUpFactory();\n-        this.fileSystemAbstraction = outsideWorld.fileSystem();\n-    }\n+  /**\n+   * Dependencies that can be resolved immediately after launching the backup tool\n+   *\n+   * @param outsideWorld filesystem and output streams that the tool interacts with\n+   * @param logProvider  made available to subsequent dependency resolution classes\n+   * @param monitors     will become shared across all resolved dependencies\n+   */\n+  BackupModule(OutsideWorld outsideWorld, LogProvider logProvider, Monitors monitors)\n+  {\n+    this.outsideWorld = outsideWorld;\n+    this.logProvider = logProvider;\n+    this.monitors = monitors;\n+    this.clock = Clock.systemDefaultZone();\n+    this.transactionLogCatchUpFactory = new TransactionLogCatchUpFactory();\n+    this.fileSystemAbstraction = outsideWorld.fileSystem();\n+  }\n \n-    public LogProvider getLogProvider()\n-    {\n-        return logProvider;\n-    }\n+  public LogProvider getLogProvider()\n+  {\n+    return logProvider;\n+  }\n \n-    public FileSystemAbstraction getFileSystemAbstraction()\n-    {\n-        return fileSystemAbstraction;\n-    }\n+  public FileSystemAbstraction getFileSystemAbstraction()\n+  {\n+    return fileSystemAbstraction;\n+  }\n \n-    public Monitors getMonitors()\n-    {\n-        return monitors;\n-    }\n+  public Monitors getMonitors()\n+  {\n+    return monitors;\n+  }\n \n-    public Clock getClock()\n-    {\n-        return clock;\n-    }\n+  public Clock getClock()\n+  {\n+    return clock;\n+  }\n \n-    public TransactionLogCatchUpFactory getTransactionLogCatchUpFactory()\n-    {\n-        return transactionLogCatchUpFactory;\n-    }\n+  public TransactionLogCatchUpFactory getTransactionLogCatchUpFactory()\n+  {\n+    return transactionLogCatchUpFactory;\n+  }\n \n-    public OutsideWorld getOutsideWorld()\n-    {\n-        return outsideWorld;\n-    }\n+  public OutsideWorld getOutsideWorld()\n+  {\n+    return outsideWorld;\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2542/BackupModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2542/BackupModule.java\nindex 4dad12c8613..0ad7a4ca23e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2542/BackupModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2542/BackupModule.java\n@@ -82,4 +82,4 @@ public class BackupModule\n     {\n         return outsideWorld;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
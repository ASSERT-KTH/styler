{
    "project_name": "Angel-ML-angel",
    "error_id": "797",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/797/QuantifyFloatParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/797/QuantifyFloatParam.java\nindex 48dc26a6e53..34e9531422e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/797/QuantifyFloatParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/797/QuantifyFloatParam.java\n@@ -42,7 +42,8 @@ public class QuantifyFloatParam extends UpdateParam {\n     this.numBits = numBits;\n   }\n \n-  @Override public List<PartitionUpdateParam> split() {\n+  @Override\n+  public List<PartitionUpdateParam> split() {\n     List<PartitionKey> partList =\n         PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId, rowId);\n \n@@ -70,7 +71,7 @@ public class QuantifyFloatParam extends UpdateParam {\n     private int numBits;\n \n     public QuantifyFloatPartParam(int matrixId, PartitionKey partKey,\n-        int rowId, int start, int end, float[] array, int numBits) {\n+                                  int rowId, int start, int end, float[] array, int numBits) {\n       super(matrixId, partKey, false);\n       this.rowId = rowId;\n       this.start = start;\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/797/QuantifyFloatParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/797/QuantifyFloatParam.java\nindex 48dc26a6e53..4fd5cf1964c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/797/QuantifyFloatParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/797/QuantifyFloatParam.java\n@@ -16,8 +16,6 @@ package com.tencent.angel.ml.psf.compress;\n  * the License.\n  *\n  */\n-\n-\n import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.core.utils.JCompressUtils;\n import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n@@ -42,7 +40,8 @@ public class QuantifyFloatParam extends UpdateParam {\n     this.numBits = numBits;\n   }\n \n-  @Override public List<PartitionUpdateParam> split() {\n+  @Override\n+public List<PartitionUpdateParam> split() {\n     List<PartitionKey> partList =\n         PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId, rowId);\n \n@@ -53,9 +52,8 @@ public class QuantifyFloatParam extends UpdateParam {\n         throw new RuntimeException(\"Wrong rowId!\");\n       }\n       partParams.add(\n-          new QuantifyFloatPartParam(matrixId, part, rowId, (int) part.getStartCol(),\n-              (int) part.getEndCol(), array, numBits));\n-    }\n+          new QuantifyFloatPartParam(matrixId, part, rowId, (int) part.getStartCol(), (int) part.getEndCol(), array, numBits));\n+  }\n \n     return partParams;\n   }\n@@ -69,8 +67,7 @@ public class QuantifyFloatParam extends UpdateParam {\n     private float[] arraySlice;\n     private int numBits;\n \n-    public QuantifyFloatPartParam(int matrixId, PartitionKey partKey,\n-        int rowId, int start, int end, float[] array, int numBits) {\n+    public QuantifyFloatPartParam(int matrixId, PartitionKey partKey, int rowId, int start, int end, float[] array, int numBits) {\n       super(matrixId, partKey, false);\n       this.rowId = rowId;\n       this.start = start;\n@@ -99,8 +96,7 @@ public class QuantifyFloatParam extends UpdateParam {\n \n     @Override\n     public int bufferLen() {\n-\n-      return super.bufferLen() + 20 + (int) Math.ceil((end - start) * numBits / 8);\n+  return super.bufferLen() + 20 + (int) Math.ceil((end - start) * numBits / 8);\n     }\n \n     public int getRowId() {\n@@ -117,5 +113,4 @@ public class QuantifyFloatParam extends UpdateParam {\n           + \", toString()=\" + super.toString() + \"]\";\n     }\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/797/QuantifyFloatParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/797/QuantifyFloatParam.java\nindex 48dc26a6e53..3026f802ece 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/797/QuantifyFloatParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/797/QuantifyFloatParam.java\n@@ -17,18 +17,15 @@ package com.tencent.angel.ml.psf.compress;\n  *\n  */\n \n-\n import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.core.utils.JCompressUtils;\n import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n import com.tencent.angel.ml.matrix.psf.update.base.UpdateParam;\n import com.tencent.angel.psagent.PSAgentContext;\n import io.netty.buffer.ByteBuf;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n-\n public class QuantifyFloatParam extends UpdateParam {\n \n   private final int rowId;\n@@ -42,21 +39,17 @@ public class QuantifyFloatParam extends UpdateParam {\n     this.numBits = numBits;\n   }\n \n-  @Override public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> partList =\n-        PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId, rowId);\n-\n+  @Override\n+  public List<PartitionUpdateParam> split() {\n+    List<PartitionKey> partList = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId, rowId);\n     int size = partList.size();\n     List<PartitionUpdateParam> partParams = new ArrayList<>(size);\n     for (PartitionKey part : partList) {\n       if (rowId < part.getStartRow() || rowId >= part.getEndRow()) {\n         throw new RuntimeException(\"Wrong rowId!\");\n       }\n-      partParams.add(\n-          new QuantifyFloatPartParam(matrixId, part, rowId, (int) part.getStartCol(),\n-              (int) part.getEndCol(), array, numBits));\n+      partParams.add(new QuantifyFloatPartParam(matrixId, part, rowId, (int) part.getStartCol(), (int) part.getEndCol(), array, numBits));\n     }\n-\n     return partParams;\n   }\n \n@@ -69,8 +62,7 @@ public class QuantifyFloatParam extends UpdateParam {\n     private float[] arraySlice;\n     private int numBits;\n \n-    public QuantifyFloatPartParam(int matrixId, PartitionKey partKey,\n-        int rowId, int start, int end, float[] array, int numBits) {\n+    public QuantifyFloatPartParam(int matrixId, PartitionKey partKey, int rowId, int start, int end, float[] array, int numBits) {\n       super(matrixId, partKey, false);\n       this.rowId = rowId;\n       this.start = start;\n@@ -99,7 +91,6 @@ public class QuantifyFloatParam extends UpdateParam {\n \n     @Override\n     public int bufferLen() {\n-\n       return super.bufferLen() + 20 + (int) Math.ceil((end - start) * numBits / 8);\n     }\n \n@@ -113,9 +104,9 @@ public class QuantifyFloatParam extends UpdateParam {\n \n     @Override\n     public String toString() {\n-      return \"QuantifyDoublePartUParam [rowId=\" + rowId + \", numBits=\" + numBits\n-          + \", toString()=\" + super.toString() + \"]\";\n+      return \"QuantifyDoublePartUParam [rowId=\" + rowId + \", numBits=\" + numBits + \", toString()=\" + super.toString() + \"]\";\n     }\n+\n   }\n-}\n \n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/797/QuantifyFloatParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/797/QuantifyFloatParam.java\nindex 48dc26a6e53..1eba286575e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/797/QuantifyFloatParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/797/QuantifyFloatParam.java\n@@ -16,8 +16,6 @@ package com.tencent.angel.ml.psf.compress;\n  * the License.\n  *\n  */\n-\n-\n import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.core.utils.JCompressUtils;\n import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3217",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3217/PredefinedRolesBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3217/PredefinedRolesBuilder.java\nindex 399a9ce2cac..8dc2d109d02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3217/PredefinedRolesBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3217/PredefinedRolesBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import org.apache.shiro.authz.SimpleRole;\n@@ -36,65 +37,64 @@ import static org.neo4j.server.security.enterprise.auth.plugin.api.PredefinedRol\n \n public class PredefinedRolesBuilder implements RolesBuilder\n {\n-    private static final WildcardPermission SCHEMA = new WildcardPermission( \"schema:*\" );\n-    private static final WildcardPermission FULL = new WildcardPermission( \"*\" );\n-    private static final WildcardPermission TOKEN = new WildcardPermission( \"token:*\" );\n-    private static final WildcardPermission READ_WRITE = new WildcardPermission( \"data:*\" );\n-    private static final WildcardPermission READ = new WildcardPermission( \"data:read\" );\n+  private static final WildcardPermission SCHEMA = new WildcardPermission(\"schema:*\");\n+  private static final WildcardPermission FULL = new WildcardPermission(\"*\");\n+  private static final WildcardPermission TOKEN = new WildcardPermission(\"token:*\");\n+  private static final WildcardPermission READ_WRITE = new WildcardPermission(\"data:*\");\n+  private static final WildcardPermission READ = new WildcardPermission(\"data:read\");\n \n-    private static final Map<String,SimpleRole> innerRoles = staticBuildRoles();\n-    public static final Map<String,SimpleRole> roles = Collections.unmodifiableMap( innerRoles );\n+  private static final Map<String, SimpleRole> innerRoles = staticBuildRoles();\n+  public static final Map<String, SimpleRole> roles = Collections.unmodifiableMap(innerRoles);\n \n-    private static Map<String,SimpleRole> staticBuildRoles()\n-    {\n-        Map<String,SimpleRole> roles = new ConcurrentHashMap<>( 4 );\n+  private static Map<String, SimpleRole> staticBuildRoles()\n+  {\n+    Map<String, SimpleRole> roles = new ConcurrentHashMap<>(4);\n \n-        SimpleRole admin = new SimpleRole( ADMIN );\n-        admin.add( FULL );\n-        roles.put( ADMIN, admin );\n+    SimpleRole admin = new SimpleRole(ADMIN);\n+    admin.add(FULL);\n+    roles.put(ADMIN, admin);\n \n-        SimpleRole architect = new SimpleRole( ARCHITECT );\n-        architect.add( SCHEMA );\n-        architect.add( READ_WRITE );\n-        architect.add( TOKEN );\n-        roles.put( ARCHITECT, architect );\n+    SimpleRole architect = new SimpleRole(ARCHITECT);\n+    architect.add(SCHEMA);\n+    architect.add(READ_WRITE);\n+    architect.add(TOKEN);\n+    roles.put(ARCHITECT, architect);\n \n-        SimpleRole publisher = new SimpleRole( PUBLISHER );\n-        publisher.add( READ_WRITE );\n-        publisher.add( TOKEN );\n-        roles.put( PUBLISHER, publisher );\n+    SimpleRole publisher = new SimpleRole(PUBLISHER);\n+    publisher.add(READ_WRITE);\n+    publisher.add(TOKEN);\n+    roles.put(PUBLISHER, publisher);\n \n-        SimpleRole editor = new SimpleRole( EDITOR );\n-        editor.add( READ_WRITE );\n-        roles.put( EDITOR, editor );\n+    SimpleRole editor = new SimpleRole(EDITOR);\n+    editor.add(READ_WRITE);\n+    roles.put(EDITOR, editor);\n \n-        SimpleRole reader = new SimpleRole( READER );\n-        reader.add( READ );\n-        roles.put( READER, reader );\n+    SimpleRole reader = new SimpleRole(READER);\n+    reader.add(READ);\n+    roles.put(READER, reader);\n \n-        return roles;\n-    }\n+    return roles;\n+  }\n \n-    public static final RolePermissionResolver rolePermissionResolver = roleString ->\n+  public static final RolePermissionResolver rolePermissionResolver = roleString ->\n+  {\n+    if (roleString == null)\n     {\n-        if ( roleString == null )\n-        {\n-            return Collections.emptyList();\n-        }\n-        SimpleRole role = roles.get( roleString );\n-        if ( role != null )\n-        {\n-            return role.getPermissions();\n-        }\n-        else\n-        {\n-            return Collections.emptyList();\n-        }\n-    };\n-\n-    @Override\n-    public Map<String,SimpleRole> buildRoles()\n+      return Collections.emptyList();\n+    }\n+    SimpleRole role = roles.get(roleString);\n+    if (role != null)\n+    {\n+      return role.getPermissions();\n+    } else\n     {\n-        return roles;\n+      return Collections.emptyList();\n     }\n+  };\n+\n+  @Override\n+  public Map<String, SimpleRole> buildRoles()\n+  {\n+    return roles;\n+  }\n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3217/PredefinedRolesBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3217/PredefinedRolesBuilder.java\nindex 399a9ce2cac..8c333a7917d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3217/PredefinedRolesBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3217/PredefinedRolesBuilder.java\n@@ -33,7 +33,6 @@ import static org.neo4j.server.security.enterprise.auth.plugin.api.PredefinedRol\n import static org.neo4j.server.security.enterprise.auth.plugin.api.PredefinedRoles.PUBLISHER;\n import static org.neo4j.server.security.enterprise.auth.plugin.api.PredefinedRoles.READER;\n \n-\n public class PredefinedRolesBuilder implements RolesBuilder\n {\n     private static final WildcardPermission SCHEMA = new WildcardPermission( \"schema:*\" );\n@@ -48,31 +47,25 @@ public class PredefinedRolesBuilder implements RolesBuilder\n     private static Map<String,SimpleRole> staticBuildRoles()\n     {\n         Map<String,SimpleRole> roles = new ConcurrentHashMap<>( 4 );\n-\n-        SimpleRole admin = new SimpleRole( ADMIN );\n+SimpleRole admin = new SimpleRole( ADMIN );\n         admin.add( FULL );\n         roles.put( ADMIN, admin );\n-\n-        SimpleRole architect = new SimpleRole( ARCHITECT );\n+SimpleRole architect = new SimpleRole( ARCHITECT );\n         architect.add( SCHEMA );\n         architect.add( READ_WRITE );\n         architect.add( TOKEN );\n         roles.put( ARCHITECT, architect );\n-\n-        SimpleRole publisher = new SimpleRole( PUBLISHER );\n+SimpleRole publisher = new SimpleRole( PUBLISHER );\n         publisher.add( READ_WRITE );\n         publisher.add( TOKEN );\n         roles.put( PUBLISHER, publisher );\n-\n-        SimpleRole editor = new SimpleRole( EDITOR );\n+SimpleRole editor = new SimpleRole( EDITOR );\n         editor.add( READ_WRITE );\n         roles.put( EDITOR, editor );\n-\n-        SimpleRole reader = new SimpleRole( READER );\n+SimpleRole reader = new SimpleRole( READER );\n         reader.add( READ );\n         roles.put( READER, reader );\n-\n-        return roles;\n+return roles;\n     }\n \n     public static final RolePermissionResolver rolePermissionResolver = roleString ->\n@@ -81,7 +74,8 @@ public class PredefinedRolesBuilder implements RolesBuilder\n         {\n             return Collections.emptyList();\n         }\n-        SimpleRole role = roles.get( roleString );\n+\n+SimpleRole role = roles.get( roleString );\n         if ( role != null )\n         {\n             return role.getPermissions();\n@@ -97,4 +91,4 @@ public class PredefinedRolesBuilder implements RolesBuilder\n     {\n         return roles;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
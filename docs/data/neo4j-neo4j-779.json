{
    "project_name": "neo4j-neo4j",
    "error_id": "779",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "191",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "191",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "229",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "229",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "269",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "351",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "351",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "405",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "433",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "475",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "514",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "551",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "585",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "589",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "589",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "623",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "623",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "637",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "637",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "646",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "649",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "649",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "661",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "661",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "663",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "663",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "693",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "720",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "720",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "740",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "740",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "745",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "745",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "745",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/779/HttpCopier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/779/HttpCopier.java\nindex 4fc3316f112..85ee1cb1839 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/779/HttpCopier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/779/HttpCopier.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.neo4j.pushtocloud;\n \n import com.fasterxml.jackson.annotation.JsonCreator;\n@@ -66,30 +67,30 @@ public class HttpCopier implements PushToCloudCommand.Copier\n     static final String ERROR_REASON_UNSUPPORTED_INDEXES = \"LegacyIndexes\";\n     static final String ERROR_REASON_EXCEEDS_MAX_SIZE = \"ImportExceedsMaxSize\";\n     private static final long POSITION_UPLOAD_COMPLETED = -1;\n-    private static final long MAXIMUM_RETRY_BACKOFF = SECONDS.toMillis( 64 );\n+    private static final long MAXIMUM_RETRY_BACKOFF = SECONDS.toMillis(64);\n \n     private final ExecutionContext ctx;\n     private final Sleeper sleeper;\n     private final ProgressListenerFactory progressListenerFactory;\n \n-    HttpCopier( ExecutionContext ctx )\n+    HttpCopier(ExecutionContext ctx)\n     {\n-        this( ctx, Thread::sleep, ( text, length ) -> ProgressMonitorFactory.textual( ctx.out() ).singlePart( text, length ) );\n+        this(ctx, Thread::sleep, (text, length) -> ProgressMonitorFactory.textual(ctx.out()).singlePart(text, length));\n     }\n \n-    HttpCopier( ExecutionContext ctx, Sleeper sleeper, ProgressListenerFactory progressListenerFactory )\n+    HttpCopier(ExecutionContext ctx, Sleeper sleeper, ProgressListenerFactory progressListenerFactory)\n     {\n         this.ctx = ctx;\n         this.sleeper = sleeper;\n         this.progressListenerFactory = progressListenerFactory;\n     }\n \n-    private static void safeSkip( InputStream sourceStream, long position ) throws IOException\n+    private static void safeSkip(InputStream sourceStream, long position) throws IOException\n     {\n         long toSkip = position;\n-        while ( toSkip > 0 )\n+        while (toSkip > 0)\n         {\n-            toSkip -= sourceStream.skip( position );\n+            toSkip -= sourceStream.skip(position);\n         }\n     }\n \n@@ -98,31 +99,30 @@ public class HttpCopier implements PushToCloudCommand.Copier\n      * \"bytes=x-y\" and since we always ask from 0 then we're interested in y, more specifically y+1 since x-y means that bytes in the range x-y have been\n      * received so we want to start sending from y+1.\n      */\n-    private static long parseResumablePosition( String range ) throws CommandFailedException\n+    private static long parseResumablePosition(String range) throws CommandFailedException\n     {\n-        int dashIndex = range.indexOf( '-' );\n-        if ( !range.startsWith( \"bytes=\" ) || dashIndex == -1 )\n+        int dashIndex = range.indexOf('-');\n+        if (!range.startsWith(\"bytes=\") || dashIndex == -1)\n         {\n-            throw new CommandFailedException( \"Unexpected response when asking where to resume upload from. got '\" + range + \"'\" );\n+            throw new CommandFailedException(\"Unexpected response when asking where to resume upload from. got '\" + range + \"'\");\n         }\n-        return Long.parseLong( range.substring( dashIndex + 1 ) ) + 1;\n+        return Long.parseLong(range.substring(dashIndex + 1)) + 1;\n     }\n \n-    private static String base64Encode( String username, char[] password )\n+    private static String base64Encode(String username, char[] password)\n     {\n-        String plainToken = username + ':' + String.valueOf( password );\n-        return Base64.getEncoder().encodeToString( plainToken.getBytes() );\n+        String plainToken = username + ':' + String.valueOf(password);\n+        return Base64.getEncoder().encodeToString(plainToken.getBytes());\n     }\n \n-    private static URL safeUrl( String urlString )\n+    private static URL safeUrl(String urlString)\n     {\n         try\n         {\n-            return new URL( urlString );\n-        }\n-        catch ( MalformedURLException e )\n+            return new URL(urlString);\n+        } catch (MalformedURLException e)\n         {\n-            throw new RuntimeException( \"Malformed URL '\" + urlString + \"'\", e );\n+            throw new RuntimeException(\"Malformed URL '\" + urlString + \"'\", e);\n         }\n     }\n \n@@ -131,36 +131,36 @@ public class HttpCopier implements PushToCloudCommand.Copier\n      * command can parse JSON w/o any additional external dependency and doesn't even need to depend on java 8, where the Rhino script engine has built-in JSON\n      * parsing support.\n      */\n-    private static <T> T parseJsonUsingJacksonParser( String json, Class<T> type ) throws IOException\n+    private static <T> T parseJsonUsingJacksonParser(String json, Class<T> type) throws IOException\n     {\n-        return new ObjectMapper().readValue( json, type );\n+        return new ObjectMapper().readValue(json, type);\n     }\n \n     /**\n      * Do the actual transfer of the source (a Neo4j database dump) to the target.\n      */\n     @Override\n-    public void copy( boolean verbose, String consoleURL, String boltUri, PushToCloudCommand.Source source, boolean deleteSourceAfterImport,\n-            String bearerToken ) throws CommandFailedException\n+    public void copy(boolean verbose, String consoleURL, String boltUri, PushToCloudCommand.Source source, boolean deleteSourceAfterImport,\n+                     String bearerToken) throws CommandFailedException\n     {\n         try\n         {\n             String bearerTokenHeader = \"Bearer \" + bearerToken;\n             long crc32Sum = source.crc32Sum();\n-            URL signedURL = initiateCopy( verbose, safeUrl( consoleURL + \"/import\" ), crc32Sum, source.size(), bearerTokenHeader );\n-            URL uploadLocation = initiateResumableUpload( verbose, signedURL );\n-            long sourceLength = ctx.fs().getFileSize( source.path() );\n+            URL signedURL = initiateCopy(verbose, safeUrl(consoleURL + \"/import\"), crc32Sum, source.size(), bearerTokenHeader);\n+            URL uploadLocation = initiateResumableUpload(verbose, signedURL);\n+            long sourceLength = ctx.fs().getFileSize(source.path());\n \n             // Enter the resume:able upload loop\n             long position = 0;\n             int retries = 0;\n             ThreadLocalRandom random = ThreadLocalRandom.current();\n             ProgressTrackingOutputStream.Progress\n-                    uploadProgress = new ProgressTrackingOutputStream.Progress( progressListenerFactory.create( \"Upload\", sourceLength ), position );\n-            while ( !resumeUpload( verbose, source.path(), boltUri, sourceLength, position, uploadLocation, uploadProgress ) )\n+              uploadProgress = new ProgressTrackingOutputStream.Progress(progressListenerFactory.create(\"Upload\", sourceLength), position);\n+            while (!resumeUpload(verbose, source.path(), boltUri, sourceLength, position, uploadLocation, uploadProgress))\n             {\n-                position = getResumablePosition( verbose, sourceLength, uploadLocation );\n-                if ( position == POSITION_UPLOAD_COMPLETED )\n+                position = getResumablePosition(verbose, sourceLength, uploadLocation);\n+                if (position == POSITION_UPLOAD_COMPLETED)\n                 {\n                     // This is somewhat unexpected, we didn't get an OK from the upload, but when we asked about how far the upload\n                     // got it responded that it was fully uploaded. I'd guess we're fine here.\n@@ -168,239 +168,231 @@ public class HttpCopier implements PushToCloudCommand.Copier\n                 }\n \n                 // Truncated exponential backoff\n-                if ( retries > 50 )\n+                if (retries > 50)\n                 {\n-                    throw new CommandFailedException( \"Upload failed after numerous attempts.\" );\n+                    throw new CommandFailedException(\"Upload failed after numerous attempts.\");\n                 }\n-                long backoffFromRetryCount = SECONDS.toMillis( 1 << retries++ ) + random.nextInt( 1_000 );\n-                sleeper.sleep( min( backoffFromRetryCount, MAXIMUM_RETRY_BACKOFF ) );\n+                long backoffFromRetryCount = SECONDS.toMillis(1 << retries++) + random.nextInt(1_000);\n+                sleeper.sleep(min(backoffFromRetryCount, MAXIMUM_RETRY_BACKOFF));\n             }\n             uploadProgress.done();\n \n-            triggerImportProtocol( verbose, safeUrl( consoleURL + \"/import/upload-complete\" ), boltUri, source.path(), crc32Sum, bearerTokenHeader );\n+            triggerImportProtocol(verbose, safeUrl(consoleURL + \"/import/upload-complete\"), boltUri, source.path(), crc32Sum, bearerTokenHeader);\n \n-            doStatusPolling( verbose, consoleURL, bearerToken, sourceLength );\n+            doStatusPolling(verbose, consoleURL, bearerToken, sourceLength);\n \n-            if ( deleteSourceAfterImport )\n+            if (deleteSourceAfterImport)\n             {\n-                Files.delete( source.path() );\n-            }\n-            else\n+                Files.delete(source.path());\n+            } else\n             {\n-                ctx.out().printf(\"It is safe to delete the dump file now: %s%n\", source.path().toAbsolutePath() );\n+                ctx.out().printf(\"It is safe to delete the dump file now: %s%n\", source.path().toAbsolutePath());\n             }\n-        }\n-        catch ( InterruptedException | IOException e )\n+        } catch (InterruptedException | IOException e)\n         {\n-            throw new CommandFailedException( e.getMessage(), e );\n+            throw new CommandFailedException(e.getMessage(), e);\n         }\n     }\n \n     @Override\n-    public void checkSize( boolean verbose, String consoleURL, long size, String bearerToken )\n+    public void checkSize(boolean verbose, String consoleURL, long size, String bearerToken)\n     {\n         try\n         {\n-            URL url = safeUrl( consoleURL + \"/import/size\" );\n+            URL url = safeUrl(consoleURL + \"/import/size\");\n             String bearerTokenHeader = \"Bearer \" + bearerToken;\n             HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n             try\n             {\n-                connection.setDoOutput( true );\n-                connection.setRequestMethod( \"POST\" );\n-                connection.setRequestProperty( \"Authorization\", bearerTokenHeader );\n-                connection.setRequestProperty( \"Content-Type\", \"application/json\" );\n-                try ( OutputStream postData = connection.getOutputStream() )\n+                connection.setDoOutput(true);\n+                connection.setRequestMethod(\"POST\");\n+                connection.setRequestProperty(\"Authorization\", bearerTokenHeader);\n+                connection.setRequestProperty(\"Content-Type\", \"application/json\");\n+                try (OutputStream postData = connection.getOutputStream())\n                 {\n-                    postData.write( String.format( \"{\\\"FullSize\\\":%d}\", size ).getBytes( UTF_8 ) );\n+                    postData.write(String.format(\"{\\\"FullSize\\\":%d}\", size).getBytes(UTF_8));\n                 }\n                 int responseCode = connection.getResponseCode();\n-                switch ( responseCode )\n+                switch (responseCode)\n                 {\n-                case HTTP_UNPROCESSABLE_ENTITY:\n-                    throw validationFailureErrorResponse( verbose, connection, size );\n-                case HTTP_OK:\n-                    return;\n-                default:\n-                    throw unexpectedResponse( verbose, connection, \"Size check\" );\n+                    case HTTP_UNPROCESSABLE_ENTITY:\n+                        throw validationFailureErrorResponse(verbose, connection, size);\n+                    case HTTP_OK:\n+                        return;\n+                    default:\n+                        throw unexpectedResponse(verbose, connection, \"Size check\");\n                 }\n-            }\n-            finally\n+            } finally\n             {\n                 connection.disconnect();\n             }\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new CommandFailedException( e.getMessage(), e );\n+            throw new CommandFailedException(e.getMessage(), e);\n         }\n     }\n \n-    private void doStatusPolling( boolean verbose, String consoleURL, String bearerToken, long fileSize )\n-            throws IOException, InterruptedException, CommandFailedException\n+    private void doStatusPolling(boolean verbose, String consoleURL, String bearerToken, long fileSize)\n+      throws IOException, InterruptedException, CommandFailedException\n     {\n-        ctx.out().println( \"We have received your export and it is currently being loaded into your Aura instance.\" );\n-        ctx.out().println( \"You can wait here, or abort this command and head over to the console to be notified of when your database is running.\" );\n+        ctx.out().println(\"We have received your export and it is currently being loaded into your Aura instance.\");\n+        ctx.out().println(\"You can wait here, or abort this command and head over to the console to be notified of when your database is running.\");\n         String bearerTokenHeader = \"Bearer \" + bearerToken;\n         ProgressTrackingOutputStream.Progress statusProgress =\n-                new ProgressTrackingOutputStream.Progress(\n-                        progressListenerFactory.create( \"Import progress (estimated)\", 100L ), 0 );\n+          new ProgressTrackingOutputStream.Progress(\n+            progressListenerFactory.create(\"Import progress (estimated)\", 100L), 0);\n         boolean firstRunning = true;\n         long importStarted = System.currentTimeMillis();\n-        double importTimeEstimateMinutes = 5 + (3 * bytesToGibibytes( fileSize ));\n-        long importTimeEstimateMillis = TimeUnit.SECONDS.toMillis( (long) (importTimeEstimateMinutes * 60) );\n+        double importTimeEstimateMinutes = 5 + (3 * bytesToGibibytes(fileSize));\n+        long importTimeEstimateMillis = TimeUnit.SECONDS.toMillis((long) (importTimeEstimateMinutes * 60));\n         long importStartedTimeout = importStarted + 90 * 1000; // timeout to switch from first running to loading = 1.5 minute\n-        debug( verbose, format(\n-                \"Rough guess for how long dump file import will take: %.0f minutes; file size is %.1f GB (%d bytes)\",\n-                importTimeEstimateMinutes, bytesToGibibytes( fileSize ), fileSize ) );\n-        while ( !statusProgress.isDone() )\n+        debug(verbose, format(\n+          \"Rough guess for how long dump file import will take: %.0f minutes; file size is %.1f GB (%d bytes)\",\n+          importTimeEstimateMinutes, bytesToGibibytes(fileSize), fileSize));\n+        while (!statusProgress.isDone())\n         {\n-            StatusBody statusBody = getDatabaseStatus( verbose, safeUrl( consoleURL + \"/import/status\" ), bearerTokenHeader );\n-            switch ( statusBody.Status )\n+            StatusBody statusBody = getDatabaseStatus(verbose, safeUrl(consoleURL + \"/import/status\"), bearerTokenHeader);\n+            switch (statusBody.Status)\n             {\n-            case \"running\":\n-                // It could happen that the very first call of this method is so fast, that the database is still in state\n-                // \"running\". So we need to check if this is the case and ignore the result in that case and only\n-                // take this result as valid, once the status loading or restoring was seen before.\n-                if ( !firstRunning )\n-                {\n-                    statusProgress.rewindTo( 0 );\n-                    statusProgress.add( 100 );\n-                    statusProgress.done();\n-                }\n-                else\n-                {\n-                    boolean passedStartImportTimeout = importStarted > importStartedTimeout;\n-                    if ( passedStartImportTimeout )\n+                case \"running\":\n+                    // It could happen that the very first call of this method is so fast, that the database is still in state\n+                    // \"running\". So we need to check if this is the case and ignore the result in that case and only\n+                    // take this result as valid, once the status loading or restoring was seen before.\n+                    if (!firstRunning)\n                     {\n-                        throw new CommandFailedException( \"We're sorry, it couldn't be detected that the import was started, \" +\n-                                                          \"please check the console for further details.\" );\n+                        statusProgress.rewindTo(0);\n+                        statusProgress.add(100);\n+                        statusProgress.done();\n+                    } else\n+                    {\n+                        boolean passedStartImportTimeout = importStarted > importStartedTimeout;\n+                        if (passedStartImportTimeout)\n+                        {\n+                            throw new CommandFailedException(\"We're sorry, it couldn't be detected that the import was started, \" +\n+                              \"please check the console for further details.\");\n+                        }\n                     }\n-                }\n-                break;\n-            case \"loading failed\":\n-                throw formatCommandFailedExceptionError( statusBody.Error.getMessage(), statusBody.Error.getUrl() );\n-            default:\n-                firstRunning = false;\n-                long elapsed = System.currentTimeMillis() - importStarted;\n-                statusProgress.rewindTo( 0 );\n-                statusProgress.add( importStatusProgressEstimate( statusBody.Status, elapsed, importTimeEstimateMillis ) );\n-                break;\n+                    break;\n+                case \"loading failed\":\n+                    throw formatCommandFailedExceptionError(statusBody.Error.getMessage(), statusBody.Error.getUrl());\n+                default:\n+                    firstRunning = false;\n+                    long elapsed = System.currentTimeMillis() - importStarted;\n+                    statusProgress.rewindTo(0);\n+                    statusProgress.add(importStatusProgressEstimate(statusBody.Status, elapsed, importTimeEstimateMillis));\n+                    break;\n             }\n-            sleeper.sleep( 2000 );\n+            sleeper.sleep(2000);\n         }\n-        ctx.out().println( \"Your data was successfully pushed to Aura and is now running.\" );\n+        ctx.out().println(\"Your data was successfully pushed to Aura and is now running.\");\n         long importDurationMillis = System.currentTimeMillis() - importStarted;\n-        debug( verbose, format( \"Import took about %d minutes to complete excluding upload (%d ms)\",\n-                                TimeUnit.MILLISECONDS.toMinutes( importDurationMillis ), importDurationMillis ) );\n+        debug(verbose, format(\"Import took about %d minutes to complete excluding upload (%d ms)\",\n+          TimeUnit.MILLISECONDS.toMinutes(importDurationMillis), importDurationMillis));\n     }\n \n-    int importStatusProgressEstimate( String databaseStatus, long elapsed, long importTimeEstimateMillis )\n-            throws CommandFailedException\n+    int importStatusProgressEstimate(String databaseStatus, long elapsed, long importTimeEstimateMillis)\n+      throws CommandFailedException\n     {\n-        switch ( databaseStatus )\n+        switch (databaseStatus)\n         {\n-        case \"running\":\n-            return 0;\n-        case \"loading\":\n-            int loadProgressEstimation = (int) Math.min( 98, (elapsed * 98) / importTimeEstimateMillis );\n-            return 1 + loadProgressEstimation;\n-        default:\n-            throw new CommandFailedException( String.format(\n-                    \"We're sorry, something has failed during the loading of your database. \"\n+            case \"running\":\n+                return 0;\n+            case \"loading\":\n+                int loadProgressEstimation = (int) Math.min(98, (elapsed * 98) / importTimeEstimateMillis);\n+                return 1 + loadProgressEstimation;\n+            default:\n+                throw new CommandFailedException(String.format(\n+                  \"We're sorry, something has failed during the loading of your database. \"\n                     + \"Please try again and if this problem persists, please open up a support case. Database status: %s\",\n-                    databaseStatus ) );\n+                  databaseStatus));\n         }\n     }\n \n     @Override\n-    public String authenticate( boolean verbose, String consoleUrl, String username, char[] password, boolean consentConfirmed ) throws CommandFailedException\n+    public String authenticate(boolean verbose, String consoleUrl, String username, char[] password, boolean consentConfirmed) throws CommandFailedException\n     {\n         try\n         {\n-            URL url = safeUrl( consoleUrl + \"/import/auth\" );\n+            URL url = safeUrl(consoleUrl + \"/import/auth\");\n             HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n             try\n             {\n-                connection.setRequestMethod( \"POST\" );\n-                connection.setRequestProperty( \"Authorization\", \"Basic \" + base64Encode( username, password ) );\n-                connection.setRequestProperty( \"Accept\", \"application/json\" );\n-                connection.setRequestProperty( \"Confirmed\", String.valueOf( consentConfirmed ) );\n+                connection.setRequestMethod(\"POST\");\n+                connection.setRequestProperty(\"Authorization\", \"Basic \" + base64Encode(username, password));\n+                connection.setRequestProperty(\"Accept\", \"application/json\");\n+                connection.setRequestProperty(\"Confirmed\", String.valueOf(consentConfirmed));\n                 int responseCode = connection.getResponseCode();\n-                switch ( responseCode )\n+                switch (responseCode)\n                 {\n-                case HTTP_NOT_FOUND:\n-                    throw errorResponse( verbose, connection, \"We encountered a problem while contacting your Neo4j Aura instance, \" +\n-                                                              \"please check your Bolt URI\" );\n-                case HTTP_MOVED_PERM:\n-                    throw updatePluginErrorResponse( connection );\n-                case HTTP_UNAUTHORIZED:\n-                    throw errorResponse( verbose, connection, \"Invalid username/password credentials\" );\n-                case HTTP_FORBIDDEN:\n-                    throw errorResponse( verbose, connection, \"The credentials provided do not give administrative access to the target database\" );\n-                case HTTP_CONFLICT:\n-                    throw errorResponse( verbose, connection, \"No consent to overwrite database. Aborting\" );\n-                case HTTP_OK:\n-                    try ( InputStream responseData = connection.getInputStream() )\n-                    {\n-                        String json = new String( toByteArray( responseData ), UTF_8 );\n-                        return parseJsonUsingJacksonParser( json, TokenBody.class ).Token;\n-                    }\n-                default:\n-                    throw unexpectedResponse( verbose, connection, \"Authorization\" );\n+                    case HTTP_NOT_FOUND:\n+                        throw errorResponse(verbose, connection, \"We encountered a problem while contacting your Neo4j Aura instance, \" +\n+                          \"please check your Bolt URI\");\n+                    case HTTP_MOVED_PERM:\n+                        throw updatePluginErrorResponse(connection);\n+                    case HTTP_UNAUTHORIZED:\n+                        throw errorResponse(verbose, connection, \"Invalid username/password credentials\");\n+                    case HTTP_FORBIDDEN:\n+                        throw errorResponse(verbose, connection, \"The credentials provided do not give administrative access to the target database\");\n+                    case HTTP_CONFLICT:\n+                        throw errorResponse(verbose, connection, \"No consent to overwrite database. Aborting\");\n+                    case HTTP_OK:\n+                        try (InputStream responseData = connection.getInputStream())\n+                        {\n+                            String json = new String(toByteArray(responseData), UTF_8);\n+                            return parseJsonUsingJacksonParser(json, TokenBody.class).Token;\n+                        }\n+                    default:\n+                        throw unexpectedResponse(verbose, connection, \"Authorization\");\n                 }\n-            }\n-            finally\n+            } finally\n             {\n                 connection.disconnect();\n             }\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new CommandFailedException( e.getMessage(), e );\n+            throw new CommandFailedException(e.getMessage(), e);\n         }\n     }\n \n     /**\n      * Communication with Neo4j's cloud console, resulting in some signed URI to do the actual upload to.\n      */\n-    private URL initiateCopy( boolean verbose, URL importURL, long crc32Sum, long size, String bearerToken )\n-            throws IOException, CommandFailedException\n+    private URL initiateCopy(boolean verbose, URL importURL, long crc32Sum, long size, String bearerToken)\n+      throws IOException, CommandFailedException\n     {\n         HttpURLConnection connection = (HttpURLConnection) importURL.openConnection();\n         try\n         {\n             // POST the request\n-            connection.setRequestMethod( \"POST\" );\n-            connection.setRequestProperty( \"Content-Type\", \"application/json\" );\n-            connection.setRequestProperty( \"Authorization\", bearerToken );\n-            connection.setRequestProperty( \"Accept\", \"application/json\" );\n-            connection.setDoOutput( true );\n-            try ( OutputStream postData = connection.getOutputStream() )\n+            connection.setRequestMethod(\"POST\");\n+            connection.setRequestProperty(\"Content-Type\", \"application/json\");\n+            connection.setRequestProperty(\"Authorization\", bearerToken);\n+            connection.setRequestProperty(\"Accept\", \"application/json\");\n+            connection.setDoOutput(true);\n+            try (OutputStream postData = connection.getOutputStream())\n             {\n-                postData.write( String.format( \"{\\\"Crc32\\\":%d, \\\"FullSize\\\":%d}\", crc32Sum, size ).getBytes( UTF_8 ) );\n+                postData.write(String.format(\"{\\\"Crc32\\\":%d, \\\"FullSize\\\":%d}\", crc32Sum, size).getBytes(UTF_8));\n             }\n \n             // Read the response\n             int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n+            switch (responseCode)\n             {\n-            case HTTP_NOT_FOUND:\n-                // fallthrough\n-            case HTTP_MOVED_PERM:\n-                throw updatePluginErrorResponse( connection );\n-            case HTTP_UNAUTHORIZED:\n-                throw errorResponse( verbose, connection, \"The given authorization token is invalid or has expired\" );\n-            case HTTP_UNPROCESSABLE_ENTITY:\n-                throw validationFailureErrorResponse( verbose, connection, size );\n-            case HTTP_ACCEPTED:\n-                // the import request was accepted, and the server has not seen this dump file, meaning the import request is a new operation.\n-                return safeUrl( extractSignedURIFromResponse( verbose, connection ) );\n-            default:\n-                throw unexpectedResponse( verbose, connection, \"Initiating upload target\" );\n+                case HTTP_NOT_FOUND:\n+                    // fallthrough\n+                case HTTP_MOVED_PERM:\n+                    throw updatePluginErrorResponse(connection);\n+                case HTTP_UNAUTHORIZED:\n+                    throw errorResponse(verbose, connection, \"The given authorization token is invalid or has expired\");\n+                case HTTP_UNPROCESSABLE_ENTITY:\n+                    throw validationFailureErrorResponse(verbose, connection, size);\n+                case HTTP_ACCEPTED:\n+                    // the import request was accepted, and the server has not seen this dump file, meaning the import request is a new operation.\n+                    return safeUrl(extractSignedURIFromResponse(verbose, connection));\n+                default:\n+                    throw unexpectedResponse(verbose, connection, \"Initiating upload target\");\n             }\n-        }\n-        finally\n+        } finally\n         {\n             connection.disconnect();\n         }\n@@ -410,27 +402,26 @@ public class HttpCopier implements PushToCloudCommand.Copier\n      * Makes initial contact with the signed URL we got back when talking to the Neo4j cloud console. This will create yet another URL which will be used to\n      * upload the source to, potentially resumed if it gets interrupted in the middle.\n      */\n-    private URL initiateResumableUpload( boolean verbose, URL signedURL ) throws IOException, CommandFailedException\n+    private URL initiateResumableUpload(boolean verbose, URL signedURL) throws IOException, CommandFailedException\n     {\n         HttpURLConnection connection = (HttpURLConnection) signedURL.openConnection();\n         try\n         {\n-            connection.setRequestMethod( \"POST\" );\n-            connection.setRequestProperty( \"Content-Length\", \"0\" );\n-            connection.setFixedLengthStreamingMode( 0 );\n-            connection.setRequestProperty( \"x-goog-resumable\", \"start\" );\n+            connection.setRequestMethod(\"POST\");\n+            connection.setRequestProperty(\"Content-Length\", \"0\");\n+            connection.setFixedLengthStreamingMode(0);\n+            connection.setRequestProperty(\"x-goog-resumable\", \"start\");\n             // We don't want to have any Content-Type set really, but there's this issue with the standard HttpURLConnection\n             // implementation where it defaults Content-Type to application/x-www-form-urlencoded for POSTs for some reason\n-            connection.setRequestProperty( \"Content-Type\", \"\" );\n-            connection.setDoOutput( true );\n+            connection.setRequestProperty(\"Content-Type\", \"\");\n+            connection.setDoOutput(true);\n             int responseCode = connection.getResponseCode();\n-            if ( responseCode != HTTP_CREATED )\n+            if (responseCode != HTTP_CREATED)\n             {\n-                throw unexpectedResponse( verbose, connection, \"Initiating database upload\" );\n+                throw unexpectedResponse(verbose, connection, \"Initiating database upload\");\n             }\n-            return safeUrl( connection.getHeaderField( \"Location\" ) );\n-        }\n-        finally\n+            return safeUrl(connection.getHeaderField(\"Location\"));\n+        } finally\n         {\n             connection.disconnect();\n         }\n@@ -439,118 +430,115 @@ public class HttpCopier implements PushToCloudCommand.Copier\n     /**\n      * Uploads source from the given position to the upload location.\n      */\n-    private boolean resumeUpload( boolean verbose, Path source, String boltUri, long sourceLength, long position, URL uploadLocation,\n-                                  ProgressTrackingOutputStream.Progress uploadProgress )\n-            throws IOException, CommandFailedException\n+    private boolean resumeUpload(boolean verbose, Path source, String boltUri, long sourceLength, long position, URL uploadLocation,\n+                                 ProgressTrackingOutputStream.Progress uploadProgress)\n+      throws IOException, CommandFailedException\n     {\n         HttpURLConnection connection = (HttpURLConnection) uploadLocation.openConnection();\n         try\n         {\n-            connection.setRequestMethod( \"PUT\" );\n+            connection.setRequestMethod(\"PUT\");\n             long contentLength = sourceLength - position;\n-            connection.setRequestProperty( \"Content-Length\", String.valueOf( contentLength ) );\n-            connection.setFixedLengthStreamingMode( contentLength );\n-            if ( position > 0 )\n+            connection.setRequestProperty(\"Content-Length\", String.valueOf(contentLength));\n+            connection.setFixedLengthStreamingMode(contentLength);\n+            if (position > 0)\n             {\n                 // If we're not starting from the beginning we need to specify what range we're uploading in this format\n-                connection.setRequestProperty( \"Content-Range\", format( \"bytes %d-%d/%d\", position, sourceLength - 1, sourceLength ) );\n+                connection.setRequestProperty(\"Content-Range\", format(\"bytes %d-%d/%d\", position, sourceLength - 1, sourceLength));\n             }\n-            connection.setDoOutput( true );\n-            uploadProgress.rewindTo( position );\n-            try ( InputStream sourceStream = Files.newInputStream( source );\n-                  OutputStream targetStream = connection.getOutputStream() )\n+            connection.setDoOutput(true);\n+            uploadProgress.rewindTo(position);\n+            try (InputStream sourceStream = Files.newInputStream(source);\n+                 OutputStream targetStream = connection.getOutputStream())\n             {\n-                safeSkip( sourceStream, position );\n-                IOUtils.copy( new BufferedInputStream( sourceStream ), new ProgressTrackingOutputStream( targetStream, uploadProgress ) );\n+                safeSkip(sourceStream, position);\n+                IOUtils.copy(new BufferedInputStream(sourceStream), new ProgressTrackingOutputStream(targetStream, uploadProgress));\n             }\n             int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n+            switch (responseCode)\n             {\n-            case HTTP_OK:\n-                return true; // the file is now uploaded, all good\n-            case HTTP_INTERNAL_ERROR:\n-            case HTTP_UNAVAILABLE:\n-                debugErrorResponse( verbose, connection );\n-                return false;\n-            default:\n-                throw resumePossibleErrorResponse( connection, source, boltUri );\n+                case HTTP_OK:\n+                    return true; // the file is now uploaded, all good\n+                case HTTP_INTERNAL_ERROR:\n+                case HTTP_UNAVAILABLE:\n+                    debugErrorResponse(verbose, connection);\n+                    return false;\n+                default:\n+                    throw resumePossibleErrorResponse(connection, source, boltUri);\n             }\n-        }\n-        finally\n+        } finally\n         {\n             connection.disconnect();\n         }\n     }\n \n-    private void triggerImportProtocol( boolean verbose, URL importURL, String boltUri, Path source, long crc32Sum, String bearerToken )\n-            throws IOException, CommandFailedException\n+    private void triggerImportProtocol(boolean verbose, URL importURL, String boltUri, Path source, long crc32Sum, String bearerToken)\n+      throws IOException, CommandFailedException\n     {\n         HttpURLConnection connection = (HttpURLConnection) importURL.openConnection();\n         try\n         {\n-            connection.setRequestMethod( \"POST\" );\n-            connection.setRequestProperty( \"Content-Type\", \"application/json\" );\n-            connection.setRequestProperty( \"Authorization\", bearerToken );\n-            connection.setDoOutput( true );\n-            try ( OutputStream postData = connection.getOutputStream() )\n+            connection.setRequestMethod(\"POST\");\n+            connection.setRequestProperty(\"Content-Type\", \"application/json\");\n+            connection.setRequestProperty(\"Authorization\", bearerToken);\n+            connection.setDoOutput(true);\n+            try (OutputStream postData = connection.getOutputStream())\n             {\n-                postData.write( String.format( \"{\\\"Crc32\\\":%d}\", crc32Sum ).getBytes( UTF_8 ) );\n+                postData.write(String.format(\"{\\\"Crc32\\\":%d}\", crc32Sum).getBytes(UTF_8));\n             }\n \n             int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n+            switch (responseCode)\n             {\n-            case HTTP_NOT_FOUND:\n-                // fallthrough\n-            case HTTP_MOVED_PERM:\n-                throw updatePluginErrorResponse( connection );\n-            case HTTP_TOO_MANY_REQUESTS:\n-                throw resumePossibleErrorResponse( connection, source, boltUri );\n-            case HTTP_CONFLICT:\n-                throw errorResponse( verbose, connection,\n-                                     \"The target database contained data and consent to overwrite the data was not given. Aborting\" );\n-            case HTTP_OK:\n-                // All good, we managed to trigger the import protocol after our completed upload\n-                break;\n-            default:\n-                throw resumePossibleErrorResponse( connection, source, boltUri );\n+                case HTTP_NOT_FOUND:\n+                    // fallthrough\n+                case HTTP_MOVED_PERM:\n+                    throw updatePluginErrorResponse(connection);\n+                case HTTP_TOO_MANY_REQUESTS:\n+                    throw resumePossibleErrorResponse(connection, source, boltUri);\n+                case HTTP_CONFLICT:\n+                    throw errorResponse(verbose, connection,\n+                      \"The target database contained data and consent to overwrite the data was not given. Aborting\");\n+                case HTTP_OK:\n+                    // All good, we managed to trigger the import protocol after our completed upload\n+                    break;\n+                default:\n+                    throw resumePossibleErrorResponse(connection, source, boltUri);\n             }\n-        }\n-        finally\n+        } finally\n         {\n             connection.disconnect();\n         }\n     }\n \n-    private StatusBody getDatabaseStatus( boolean verbose, URL statusURL, String bearerToken )\n-            throws IOException, CommandFailedException\n+    private StatusBody getDatabaseStatus(boolean verbose, URL statusURL, String bearerToken)\n+      throws IOException, CommandFailedException\n     {\n         HttpURLConnection connection = (HttpURLConnection) statusURL.openConnection();\n         try\n         {\n-            connection.setRequestMethod( \"GET\" );\n-            connection.setRequestProperty( \"Authorization\", bearerToken );\n-            connection.setDoOutput( true );\n+            connection.setRequestMethod(\"GET\");\n+            connection.setRequestProperty(\"Authorization\", bearerToken);\n+            connection.setDoOutput(true);\n \n             int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n+            switch (responseCode)\n             {\n-            case HTTP_NOT_FOUND:\n-                // fallthrough\n-            case HTTP_MOVED_PERM:\n-                throw updatePluginErrorResponse( connection );\n-            case HTTP_OK:\n-                try ( InputStream responseData = connection.getInputStream() )\n-                {\n-                    String json = new String( toByteArray( responseData ), UTF_8 );\n-                    //debugResponse( verbose, json, connection, false );\n-                    return parseJsonUsingJacksonParser( json, StatusBody.class );\n-                }\n-            default:\n-                throw unexpectedResponse( verbose, connection, \"Trigger import/restore after successful upload\" );\n+                case HTTP_NOT_FOUND:\n+                    // fallthrough\n+                case HTTP_MOVED_PERM:\n+                    throw updatePluginErrorResponse(connection);\n+                case HTTP_OK:\n+                    try (InputStream responseData = connection.getInputStream())\n+                    {\n+                        String json = new String(toByteArray(responseData), UTF_8);\n+                        //debugResponse( verbose, json, connection, false );\n+                        return parseJsonUsingJacksonParser(json, StatusBody.class);\n+                    }\n+                default:\n+                    throw unexpectedResponse(verbose, connection, \"Trigger import/restore after successful upload\");\n             }\n-        }\n-        finally\n+        } finally\n         {\n             connection.disconnect();\n         }\n@@ -560,189 +548,187 @@ public class HttpCopier implements PushToCloudCommand.Copier\n      * Asks about how far the upload has gone so far, typically after being interrupted one way or another. The result of this method can be fed into {@link\n      * #resumeUpload(boolean, Path, String, long, long, URL, ProgressTrackingOutputStream.Progress)} to resume an upload.\n      */\n-    private long getResumablePosition( boolean verbose, long sourceLength, URL uploadLocation ) throws IOException, CommandFailedException\n+    private long getResumablePosition(boolean verbose, long sourceLength, URL uploadLocation) throws IOException, CommandFailedException\n     {\n-        debug( verbose, \"Asking about resumable position for the upload\" );\n+        debug(verbose, \"Asking about resumable position for the upload\");\n         HttpURLConnection connection = (HttpURLConnection) uploadLocation.openConnection();\n         try\n         {\n-            connection.setRequestMethod( \"PUT\" );\n-            connection.setRequestProperty( \"Content-Length\", \"0\" );\n-            connection.setFixedLengthStreamingMode( 0 );\n-            connection.setRequestProperty( \"Content-Range\", \"bytes */\" + sourceLength );\n-            connection.setDoOutput( true );\n+            connection.setRequestMethod(\"PUT\");\n+            connection.setRequestProperty(\"Content-Length\", \"0\");\n+            connection.setFixedLengthStreamingMode(0);\n+            connection.setRequestProperty(\"Content-Range\", \"bytes */\" + sourceLength);\n+            connection.setDoOutput(true);\n             int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n+            switch (responseCode)\n             {\n-            case HTTP_OK:\n-            case HTTP_CREATED:\n-                debug( verbose, \"Upload seems to be completed got \" + responseCode );\n-                return POSITION_UPLOAD_COMPLETED;\n-            case HTTP_RESUME_INCOMPLETE:\n-                String range = connection.getHeaderField( \"Range\" );\n-                debug( verbose, \"Upload not completed got \" + range );\n-                long position = range == null ? 0 // No bytes have been received at all, so let's return position 0, i.e. from the beginning of the file\n-                                              : parseResumablePosition( range );\n-                debug( verbose, \"Parsed that as position \" + position );\n-                return position;\n-            default:\n-                throw unexpectedResponse( verbose, connection, \"Acquire resumable upload position\" );\n+                case HTTP_OK:\n+                case HTTP_CREATED:\n+                    debug(verbose, \"Upload seems to be completed got \" + responseCode);\n+                    return POSITION_UPLOAD_COMPLETED;\n+                case HTTP_RESUME_INCOMPLETE:\n+                    String range = connection.getHeaderField(\"Range\");\n+                    debug(verbose, \"Upload not completed got \" + range);\n+                    long position = range == null ? 0 // No bytes have been received at all, so let's return position 0, i.e. from the beginning of the file\n+                      : parseResumablePosition(range);\n+                    debug(verbose, \"Parsed that as position \" + position);\n+                    return position;\n+                default:\n+                    throw unexpectedResponse(verbose, connection, \"Acquire resumable upload position\");\n             }\n-        }\n-        finally\n+        } finally\n         {\n             connection.disconnect();\n         }\n     }\n \n-    private String extractSignedURIFromResponse( boolean verbose, HttpURLConnection connection ) throws IOException, CommandFailedException\n+    private String extractSignedURIFromResponse(boolean verbose, HttpURLConnection connection) throws IOException, CommandFailedException\n     {\n-        try ( InputStream responseData = connection.getInputStream() )\n+        try (InputStream responseData = connection.getInputStream())\n         {\n-            String json = new String( toByteArray( responseData ), UTF_8 );\n-            debug( verbose, \"Got json '\" + json + \"' back expecting to contain the signed URL\" );\n-            return parseJsonUsingJacksonParser( json, SignedURIBody.class ).SignedURI;\n+            String json = new String(toByteArray(responseData), UTF_8);\n+            debug(verbose, \"Got json '\" + json + \"' back expecting to contain the signed URL\");\n+            return parseJsonUsingJacksonParser(json, SignedURIBody.class).SignedURI;\n         }\n     }\n \n-    private void debug( boolean verbose, String string )\n+    private void debug(boolean verbose, String string)\n     {\n-        if ( verbose )\n+        if (verbose)\n         {\n-            ctx.out().println( string );\n+            ctx.out().println(string);\n         }\n     }\n \n-    private void debugErrorResponse( boolean verbose, HttpURLConnection connection ) throws IOException\n+    private void debugErrorResponse(boolean verbose, HttpURLConnection connection) throws IOException\n     {\n-        if ( verbose )\n+        if (verbose)\n         {\n             String responseString;\n-            try ( InputStream responseData = connection.getErrorStream() )\n+            try (InputStream responseData = connection.getErrorStream())\n             {\n-                responseString = new String( toByteArray( responseData ), UTF_8 );\n+                responseString = new String(toByteArray(responseData), UTF_8);\n             }\n-            debugResponse( true, responseString, connection, true );\n+            debugResponse(true, responseString, connection, true);\n         }\n     }\n \n-    private void debugResponse( boolean verbose, String responseBody, HttpURLConnection connection, boolean error ) throws IOException\n+    private void debugResponse(boolean verbose, String responseBody, HttpURLConnection connection, boolean error) throws IOException\n     {\n-        if ( verbose )\n+        if (verbose)\n         {\n-            debug( true, error ? \"=== Unexpected response ===\" : \"=== Response ===\" );\n-            debug( true, \"Response message: \" + connection.getResponseMessage() );\n-            debug( true, \"Response headers:\" );\n-            connection.getHeaderFields().forEach( ( key, value1 ) ->\n+            debug(true, error ? \"=== Unexpected response ===\" : \"=== Response ===\");\n+            debug(true, \"Response message: \" + connection.getResponseMessage());\n+            debug(true, \"Response headers:\");\n+            connection.getHeaderFields().forEach((key, value1) ->\n             {\n-                for ( String value : value1 )\n+                for (String value : value1)\n                 {\n-                    debug( true, \"  \" + key + \": \" + value );\n+                    debug(true, \"  \" + key + \": \" + value);\n                 }\n-            } );\n-            debug( true, \"Response data: \" + responseBody );\n+            });\n+            debug(true, \"Response data: \" + responseBody);\n         }\n     }\n \n-    private CommandFailedException errorResponse( boolean verbose, HttpURLConnection connection, String errorDescription ) throws IOException\n+    private CommandFailedException errorResponse(boolean verbose, HttpURLConnection connection, String errorDescription) throws IOException\n     {\n-        debugErrorResponse( verbose, connection );\n-        return new CommandFailedException( errorDescription );\n+        debugErrorResponse(verbose, connection);\n+        return new CommandFailedException(errorDescription);\n     }\n \n-    private CommandFailedException resumePossibleErrorResponse( HttpURLConnection connection, Path dump, String boltUri ) throws IOException\n+    private CommandFailedException resumePossibleErrorResponse(HttpURLConnection connection, Path dump, String boltUri) throws IOException\n     {\n-        debugErrorResponse( true, connection );\n-        return new CommandFailedException( \"We encountered a problem while communicating to the Neo4j Aura system. \\n\" +\n-                                           \"You can re-try using the existing dump by running this command: \\n\" +\n-                                           String.format( \"neo4j-admin push-to-cloud --%s=%s --%s=%s\", \"dump\", dump.toAbsolutePath(), \"bolt-uri\",\n-                                                          boltUri ) );\n+        debugErrorResponse(true, connection);\n+        return new CommandFailedException(\"We encountered a problem while communicating to the Neo4j Aura system. \\n\" +\n+          \"You can re-try using the existing dump by running this command: \\n\" +\n+          String.format(\"neo4j-admin push-to-cloud --%s=%s --%s=%s\", \"dump\", dump.toAbsolutePath(), \"bolt-uri\",\n+            boltUri));\n     }\n \n-    private CommandFailedException updatePluginErrorResponse( HttpURLConnection connection ) throws IOException\n+    private CommandFailedException updatePluginErrorResponse(HttpURLConnection connection) throws IOException\n     {\n-        debugErrorResponse( true, connection );\n+        debugErrorResponse(true, connection);\n         return new CommandFailedException(\n-                \"We encountered a problem while communicating to the Neo4j Aura system. \" +\n-                \"Please check that you are using the latest version of the push-to-cloud plugin and upgrade if necessary. \" +\n-                \"If this problem persists after upgrading, please contact support and attach the logs shown below to your ticket in the support portal.\" );\n+          \"We encountered a problem while communicating to the Neo4j Aura system. \" +\n+            \"Please check that you are using the latest version of the push-to-cloud plugin and upgrade if necessary. \" +\n+            \"If this problem persists after upgrading, please contact support and attach the logs shown below to your ticket in the support portal.\");\n     }\n \n-    private CommandFailedException validationFailureErrorResponse( boolean verbose, HttpURLConnection connection, long size )\n-            throws IOException\n+    private CommandFailedException validationFailureErrorResponse(boolean verbose, HttpURLConnection connection, long size)\n+      throws IOException\n     {\n-        try ( InputStream responseData = connection.getErrorStream() )\n+        try (InputStream responseData = connection.getErrorStream())\n         {\n-            String responseString = new String( toByteArray( responseData ), UTF_8 );\n-            debugResponse( verbose, responseString, connection, true );\n-            ErrorBody errorBody = parseJsonUsingJacksonParser( responseString, ErrorBody.class );\n+            String responseString = new String(toByteArray(responseData), UTF_8);\n+            debugResponse(verbose, responseString, connection, true);\n+            ErrorBody errorBody = parseJsonUsingJacksonParser(responseString, ErrorBody.class);\n \n             String message = errorBody.getMessage();\n \n             // No special treatment required\n-            if ( ERROR_REASON_EXCEEDS_MAX_SIZE.equals( errorBody.getReason() ) )\n+            if (ERROR_REASON_EXCEEDS_MAX_SIZE.equals(errorBody.getReason()))\n             {\n-                String trimmedMessage = StringUtils.removeEnd( message, \".\" );\n-                message = format( \"%s. Minimum storage space required: %s\", trimmedMessage, PushToCloudCommand.sizeText( size) );\n+                String trimmedMessage = StringUtils.removeEnd(message, \".\");\n+                message = format(\"%s. Minimum storage space required: %s\", trimmedMessage, PushToCloudCommand.sizeText(size));\n             }\n \n-            return formatCommandFailedExceptionError( message, errorBody.getUrl() );\n+            return formatCommandFailedExceptionError(message, errorBody.getUrl());\n         }\n     }\n \n-    private CommandFailedException unexpectedResponse( boolean verbose, HttpURLConnection connection, String requestDescription ) throws IOException\n+    private CommandFailedException unexpectedResponse(boolean verbose, HttpURLConnection connection, String requestDescription) throws IOException\n     {\n-        return errorResponse( verbose, connection, format( \"Unexpected response code %d from request: %s\", connection.getResponseCode(), requestDescription ) );\n+        return errorResponse(verbose, connection, format(\"Unexpected response code %d from request: %s\", connection.getResponseCode(), requestDescription));\n     }\n \n-    private CommandFailedException formatCommandFailedExceptionError( String message, String url )\n+    private CommandFailedException formatCommandFailedExceptionError(String message, String url)\n     {\n-        if ( StringUtils.isEmpty( url ) )\n+        if (StringUtils.isEmpty(url))\n         {\n-            return new CommandFailedException( message );\n-        }\n-        else\n+            return new CommandFailedException(message);\n+        } else\n         {\n-            String trimmedMessage = StringUtils.removeEnd( message, \".\" );\n-            return new CommandFailedException( format( \"Error: %s. See: %s\", trimmedMessage, url ) );\n+            String trimmedMessage = StringUtils.removeEnd(message, \".\");\n+            return new CommandFailedException(format(\"Error: %s. See: %s\", trimmedMessage, url));\n         }\n     }\n \n     interface Sleeper\n     {\n-        void sleep( long millis ) throws InterruptedException;\n+        void sleep(long millis) throws InterruptedException;\n     }\n \n     public interface ProgressListenerFactory\n     {\n-        ProgressListener create( String text, long length );\n+        ProgressListener create(String text, long length);\n     }\n \n     // Simple structs for mapping JSON to objects, used by the jackson parser which Neo4j happens to depend on anyway\n-    @JsonIgnoreProperties( ignoreUnknown = true )\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n     private static class SignedURIBody\n     {\n         public String SignedURI;\n     }\n \n-    @JsonIgnoreProperties( ignoreUnknown = true )\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n     private static class TokenBody\n     {\n         public String Token;\n     }\n \n-    @JsonIgnoreProperties( ignoreUnknown = true )\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n     static class StatusBody\n     {\n         public String Status;\n         public ErrorBody Error = new ErrorBody();\n     }\n \n-    @JsonIgnoreProperties( ignoreUnknown = true )\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n     static class ErrorBody\n     {\n         private static final String DEFAULT_MESSAGE =\n-                \"an unexpected problem ocurred, please contact customer support for assistance\";\n+          \"an unexpected problem ocurred, please contact customer support for assistance\";\n         private static final String DEFAULT_REASON = \"UnknownError\";\n \n         private final String message;\n@@ -751,12 +737,12 @@ public class HttpCopier implements PushToCloudCommand.Copier\n \n         ErrorBody()\n         {\n-            this( null, null, null );\n+            this(null, null, null);\n         }\n \n         @JsonCreator\n-        ErrorBody( @JsonProperty( \"Message\" ) String message, @JsonProperty( \"Reason\" ) String reason,\n-                   @JsonProperty( \"Url\" ) String url )\n+        ErrorBody(@JsonProperty(\"Message\") String message, @JsonProperty(\"Reason\") String reason,\n+                  @JsonProperty(\"Url\") String url)\n         {\n             this.message = message;\n             this.reason = reason;\n@@ -765,12 +751,12 @@ public class HttpCopier implements PushToCloudCommand.Copier\n \n         public String getMessage()\n         {\n-            return StringUtils.defaultIfBlank( this.message, DEFAULT_MESSAGE );\n+            return StringUtils.defaultIfBlank(this.message, DEFAULT_MESSAGE);\n         }\n \n         public String getReason()\n         {\n-            return StringUtils.defaultIfBlank( this.reason, DEFAULT_REASON );\n+            return StringUtils.defaultIfBlank(this.reason, DEFAULT_REASON);\n         }\n \n         public String getUrl()\n",
            "diff_size": 361
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "440",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/779/HttpCopier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/779/HttpCopier.java\nindex 4fc3316f112..49b047e9b2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/779/HttpCopier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/779/HttpCopier.java\n@@ -275,7 +275,7 @@ public class HttpCopier implements PushToCloudCommand.Copier\n                     {\n                         throw new CommandFailedException( \"We're sorry, it couldn't be detected that the import was started, \" +\n                                                           \"please check the console for further details.\" );\n-                    }\n+    }\n                 }\n                 break;\n             case \"loading failed\":\n@@ -291,8 +291,7 @@ public class HttpCopier implements PushToCloudCommand.Copier\n         }\n         ctx.out().println( \"Your data was successfully pushed to Aura and is now running.\" );\n         long importDurationMillis = System.currentTimeMillis() - importStarted;\n-        debug( verbose, format( \"Import took about %d minutes to complete excluding upload (%d ms)\",\n-                                TimeUnit.MILLISECONDS.toMinutes( importDurationMillis ), importDurationMillis ) );\n+        debug( verbose, format( \"Import took about %d minutes to complete excluding upload (%d ms)\", TimeUnit.MILLISECONDS.toMinutes( importDurationMillis ), importDurationMillis ) );\n     }\n \n     int importStatusProgressEstimate( String databaseStatus, long elapsed, long importTimeEstimateMillis )\n@@ -308,8 +307,7 @@ public class HttpCopier implements PushToCloudCommand.Copier\n         default:\n             throw new CommandFailedException( String.format(\n                     \"We're sorry, something has failed during the loading of your database. \"\n-                    + \"Please try again and if this problem persists, please open up a support case. Database status: %s\",\n-                    databaseStatus ) );\n+                    + \"Please try again and if this problem persists, please open up a support case. Database status: %s\", databaseStatus ) );\n         }\n     }\n \n@@ -439,8 +437,7 @@ public class HttpCopier implements PushToCloudCommand.Copier\n     /**\n      * Uploads source from the given position to the upload location.\n      */\n-    private boolean resumeUpload( boolean verbose, Path source, String boltUri, long sourceLength, long position, URL uploadLocation,\n-                                  ProgressTrackingOutputStream.Progress uploadProgress )\n+    private boolean resumeUpload( boolean verbose, Path source, String boltUri, long sourceLength, long position, URL uploadLocation, ProgressTrackingOutputStream.Progress uploadProgress )\n             throws IOException, CommandFailedException\n     {\n         HttpURLConnection connection = (HttpURLConnection) uploadLocation.openConnection();\n@@ -683,7 +680,7 @@ public class HttpCopier implements PushToCloudCommand.Copier\n             if ( ERROR_REASON_EXCEEDS_MAX_SIZE.equals( errorBody.getReason() ) )\n             {\n                 String trimmedMessage = StringUtils.removeEnd( message, \".\" );\n-                message = format( \"%s. Minimum storage space required: %s\", trimmedMessage, PushToCloudCommand.sizeText( size) );\n+                message = format( \"%s. Minimum storage space required: %s\", trimmedMessage, PushToCloudCommand.sizeText( size ) );\n             }\n \n             return formatCommandFailedExceptionError( message, errorBody.getUrl() );\n@@ -757,7 +754,7 @@ public class HttpCopier implements PushToCloudCommand.Copier\n         @JsonCreator\n         ErrorBody( @JsonProperty( \"Message\" ) String message, @JsonProperty( \"Reason\" ) String reason,\n                    @JsonProperty( \"Url\" ) String url )\n-        {\n+{\n             this.message = message;\n             this.reason = reason;\n             this.url = url;\n@@ -778,4 +775,4 @@ public class HttpCopier implements PushToCloudCommand.Copier\n             return this.url;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
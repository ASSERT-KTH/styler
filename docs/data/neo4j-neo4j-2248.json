{
    "project_name": "neo4j-neo4j",
    "error_id": "2248",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2248/EnvelopeSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2248/EnvelopeSettings.java\nindex 5dfa488dfa1..a651f6b6e1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2248/EnvelopeSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2248/EnvelopeSettings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.config;\n \n import java.util.Arrays;\n@@ -40,25 +41,25 @@ class EnvelopeSettings\n     private Double[] min;\n     private Double[] max;\n \n-    EnvelopeSettings( CoordinateReferenceSystem crs )\n+    EnvelopeSettings(CoordinateReferenceSystem crs)\n     {\n         this.crs = crs;\n         this.min = new Double[crs.getDimension()];\n         this.max = new Double[crs.getDimension()];\n-        Arrays.fill( this.min, Double.NaN );\n-        Arrays.fill( this.max, Double.NaN );\n+        Arrays.fill(this.min, Double.NaN);\n+        Arrays.fill(this.max, Double.NaN);\n     }\n \n-    static Map<CoordinateReferenceSystem,EnvelopeSettings> envelopeSettingsFromConfig( Config config )\n+    static Map<CoordinateReferenceSystem, EnvelopeSettings> envelopeSettingsFromConfig(Config config)\n     {\n-        Map<CoordinateReferenceSystem,EnvelopeSettings> env = new HashMap<>();\n-        config.getGroups( CrsConfig.class ).forEach( ( id, crsConfig ) ->\n+        Map<CoordinateReferenceSystem, EnvelopeSettings> env = new HashMap<>();\n+        config.getGroups(CrsConfig.class).forEach((id, crsConfig) ->\n         {\n-            EnvelopeSettings envelopeSettings = new EnvelopeSettings( crsConfig.crs );\n-            envelopeSettings.min = config.get( crsConfig.min ).toArray( Double[]::new );\n-            envelopeSettings.max = config.get( crsConfig.max ).toArray( Double[]::new );\n-            env.put( crsConfig.crs, envelopeSettings );\n-        } );\n+            EnvelopeSettings envelopeSettings = new EnvelopeSettings(crsConfig.crs);\n+            envelopeSettings.min = config.get(crsConfig.min).toArray(Double[]::new);\n+            envelopeSettings.max = config.get(crsConfig.max).toArray(Double[]::new);\n+            env.put(crsConfig.crs, envelopeSettings);\n+        });\n \n         return env;\n     }\n@@ -70,21 +71,21 @@ class EnvelopeSettings\n         double[] min = new double[dimension];\n         double[] max = new double[dimension];\n         int cartesianStartIndex = 0;\n-        if ( crs.isGeographic() )\n+        if (crs.isGeographic())\n         {\n             // Geographic CRS default to extent of the earth in degrees\n-            min[0] = minOrDefault( 0, DEFAULT_MIN_LONGITUDE );\n-            max[0] = maxOrDefault( 0, DEFAULT_MAX_LONGITUDE );\n-            min[1] = minOrDefault( 1, DEFAULT_MIN_LATITUDE );\n-            max[1] = maxOrDefault( 1, DEFAULT_MAX_LATITUDE );\n+            min[0] = minOrDefault(0, DEFAULT_MIN_LONGITUDE);\n+            max[0] = maxOrDefault(0, DEFAULT_MAX_LONGITUDE);\n+            min[1] = minOrDefault(1, DEFAULT_MIN_LATITUDE);\n+            max[1] = maxOrDefault(1, DEFAULT_MAX_LATITUDE);\n             cartesianStartIndex = 2;    // if geographic index has higher than 2D, then other dimensions are cartesian\n         }\n-        for ( int i = cartesianStartIndex; i < dimension; i++ )\n+        for (int i = cartesianStartIndex; i < dimension; i++)\n         {\n-            min[i] = minOrDefault( i, DEFAULT_MIN_EXTENT );\n-            max[i] = maxOrDefault( i, DEFAULT_MAX_EXTENT );\n+            min[i] = minOrDefault(i, DEFAULT_MIN_EXTENT);\n+            max[i] = maxOrDefault(i, DEFAULT_MAX_EXTENT);\n         }\n-        return new Envelope( min, max );\n+        return new Envelope(min, max);\n     }\n \n     CoordinateReferenceSystem getCrs()\n@@ -92,18 +93,18 @@ class EnvelopeSettings\n         return crs;\n     }\n \n-    private double minOrDefault( int i, double defVal )\n+    private double minOrDefault(int i, double defVal)\n     {\n-        return valOrDefault( min[i], defVal );\n+        return valOrDefault(min[i], defVal);\n     }\n \n-    private double maxOrDefault( int i, double defVal )\n+    private double maxOrDefault(int i, double defVal)\n     {\n-        return valOrDefault( max[i], defVal );\n+        return valOrDefault(max[i], defVal);\n     }\n \n-    private static double valOrDefault( double val, double def )\n+    private static double valOrDefault(double val, double def)\n     {\n-        return Double.isNaN( val ) ? def : val;\n+        return Double.isNaN(val) ? def : val;\n     }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
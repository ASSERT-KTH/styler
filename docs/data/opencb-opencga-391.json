{
    "project_name": "opencb-opencga",
    "error_id": "391",
    "information": {
        "errors": [
            {
                "line": "215",
                "column": "40",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            return true;\n        }\n        if (!(o instanceof Individual)){\n            return false;\n        }\n        Individual that = (Individual) o;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/391/Individual.java\nindex 81e6b1cfe29..6410fe0dac9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/391/Individual.java\n@@ -212,7 +212,7 @@ public class Individual extends Annotable {\n         if (this == o) {\n             return true;\n         }\n-        if (!(o instanceof Individual)){\n+        if (!(o instanceof Individual)) {\n             return false;\n         }\n         Individual that = (Individual) o;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/391/Individual.java\nindex 81e6b1cfe29..52ace6096b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/391/Individual.java\n@@ -39,496 +39,496 @@ import static org.opencb.opencga.core.common.FieldUtils.defaultObject;\n  */\n public class Individual extends Annotable {\n \n-    private String id;\n-    private String name;\n-    private String uuid;\n-\n-    private Individual father;\n-    private Individual mother;\n-    private Multiples multiples;\n-    private Location location;\n-\n-    private Sex sex;\n-    private KaryotypicSex karyotypicSex;\n-    private String ethnicity;\n-    private Population population;\n-    private String dateOfBirth;\n-    private int release;\n-    private int version;\n-    private String creationDate;\n-    private String modificationDate;\n-    private Status status;\n-    private LifeStatus lifeStatus;\n-    @Deprecated\n-    private AffectationStatus affectationStatus;\n-    private List<Phenotype> phenotypes;\n-    private List<Disorder> disorders;\n-    private List<Sample> samples;\n-    private boolean parentalConsanguinity;\n+  private String id;\n+  private String name;\n+  private String uuid;\n+\n+  private Individual father;\n+  private Individual mother;\n+  private Multiples multiples;\n+  private Location location;\n+\n+  private Sex sex;\n+  private KaryotypicSex karyotypicSex;\n+  private String ethnicity;\n+  private Population population;\n+  private String dateOfBirth;\n+  private int release;\n+  private int version;\n+  private String creationDate;\n+  private String modificationDate;\n+  private Status status;\n+  private LifeStatus lifeStatus;\n+  @Deprecated\n+  private AffectationStatus affectationStatus;\n+  private List<Phenotype> phenotypes;\n+  private List<Disorder> disorders;\n+  private List<Sample> samples;\n+  private boolean parentalConsanguinity;\n \n //    private List<AnnotationSet> annotationSets;\n \n-    private Map<String, Object> attributes;\n-\n-    public Individual() {\n-    }\n+  private Map<String, Object> attributes;\n+\n+  public Individual() {\n+  }\n+\n+  public Individual(String id, String name, Sex sex, String ethnicity, Population population, int release,\n+                    List<AnnotationSet> annotationSets, Map<String, Object> attributes) {\n+    this(id, name, new Individual(), new Individual(), new Multiples(), new Location(), sex, null,\n+        ethnicity, population, \"\", release, 1, TimeUtils.getTime(), new Status(), LifeStatus.UNKNOWN,\n+        AffectationStatus.UNKNOWN, Collections.emptyList(), Collections.emptyList(), Collections.emptyList(), false, annotationSets,\n+        attributes);\n+  }\n+\n+  public Individual(String id, String name, Individual father, Individual mother, Multiples multiples, Location location, Sex sex,\n+                    KaryotypicSex karyotypicSex, String ethnicity, Population population, LifeStatus lifeStatus,\n+                    AffectationStatus affectationStatus, String dateOfBirth, List<Sample> samples, boolean parentalConsanguinity,\n+                    int release, List<AnnotationSet> annotationSets, List<Phenotype> phenotypeList, List<Disorder> disorders) {\n+    this(id, name, father, mother, multiples, location, sex, karyotypicSex, ethnicity, population,\n+        dateOfBirth, release, 1, TimeUtils.getTime(), new Status(), lifeStatus, affectationStatus, phenotypeList, disorders,\n+        samples, parentalConsanguinity, annotationSets, Collections.emptyMap());\n+  }\n+\n+  public Individual(String id, String name, Individual father, Individual mother, Multiples multiples, Location location, Sex sex,\n+                    KaryotypicSex karyotypicSex, String ethnicity, Population population, String dateOfBirth, int release, int version,\n+                    String creationDate, Status status, LifeStatus lifeStatus, AffectationStatus affectationStatus,\n+                    List<Phenotype> phenotypes, List<Disorder> disorders, List<Sample> samples, boolean parentalConsanguinity,\n+                    List<AnnotationSet> annotationSets, Map<String, Object> attributes) {\n+    this.id = id;\n+    this.name = name;\n+    this.father = defaultObject(father, Individual::new);\n+    this.mother = defaultObject(mother, Individual::new);\n+    this.multiples = defaultObject(multiples, Multiples::new);\n+    this.location = location;\n+    this.sex = sex;\n+    this.karyotypicSex = karyotypicSex;\n+    this.ethnicity = ethnicity;\n+    this.population = defaultObject(population, Population::new);\n+    this.dateOfBirth = dateOfBirth;\n+    this.release = release;\n+    this.version = version;\n+    this.creationDate = defaultObject(creationDate, TimeUtils::getTime);\n+    this.status = defaultObject(status, Status::new);\n+    this.lifeStatus = lifeStatus;\n+    this.affectationStatus = affectationStatus;\n+    this.phenotypes = defaultObject(phenotypes, ArrayList::new);\n+    this.disorders = defaultObject(disorders, ArrayList::new);\n+    this.samples = defaultObject(samples, ArrayList::new);\n+    this.parentalConsanguinity = parentalConsanguinity;\n+    this.annotationSets = annotationSets;\n+    this.attributes = defaultObject(attributes, HashMap::new);\n+  }\n+\n+  public static class Population {\n \n-    public Individual(String id, String name, Sex sex, String ethnicity, Population population, int release,\n-                      List<AnnotationSet> annotationSets, Map<String, Object> attributes) {\n-        this(id, name, new Individual(), new Individual(), new Multiples(), new Location(), sex, null,\n-                ethnicity, population, \"\", release, 1, TimeUtils.getTime(), new Status(), LifeStatus.UNKNOWN,\n-                AffectationStatus.UNKNOWN, Collections.emptyList(), Collections.emptyList(), Collections.emptyList(), false, annotationSets,\n-                attributes);\n-    }\n+    private String name;\n+    private String subpopulation;\n+    private String description;\n \n-    public Individual(String id, String name, Individual father, Individual mother, Multiples multiples, Location location, Sex sex,\n-                      KaryotypicSex karyotypicSex, String ethnicity, Population population, LifeStatus lifeStatus,\n-                      AffectationStatus affectationStatus, String dateOfBirth, List<Sample> samples, boolean parentalConsanguinity,\n-                      int release, List<AnnotationSet> annotationSets, List<Phenotype> phenotypeList, List<Disorder> disorders) {\n-        this(id, name, father, mother, multiples, location, sex, karyotypicSex, ethnicity, population,\n-                dateOfBirth, release, 1, TimeUtils.getTime(), new Status(), lifeStatus, affectationStatus, phenotypeList, disorders,\n-                samples, parentalConsanguinity, annotationSets, Collections.emptyMap());\n-    }\n \n-    public Individual(String id, String name, Individual father, Individual mother, Multiples multiples, Location location, Sex sex,\n-                      KaryotypicSex karyotypicSex, String ethnicity, Population population, String dateOfBirth, int release, int version,\n-                      String creationDate, Status status, LifeStatus lifeStatus, AffectationStatus affectationStatus,\n-                      List<Phenotype> phenotypes, List<Disorder> disorders, List<Sample> samples, boolean parentalConsanguinity,\n-                      List<AnnotationSet> annotationSets, Map<String, Object> attributes) {\n-        this.id = id;\n-        this.name = name;\n-        this.father = defaultObject(father, Individual::new);\n-        this.mother = defaultObject(mother, Individual::new);\n-        this.multiples = defaultObject(multiples, Multiples::new);\n-        this.location = location;\n-        this.sex = sex;\n-        this.karyotypicSex = karyotypicSex;\n-        this.ethnicity = ethnicity;\n-        this.population = defaultObject(population, Population::new);\n-        this.dateOfBirth = dateOfBirth;\n-        this.release = release;\n-        this.version = version;\n-        this.creationDate = defaultObject(creationDate, TimeUtils::getTime);\n-        this.status = defaultObject(status, Status::new);\n-        this.lifeStatus = lifeStatus;\n-        this.affectationStatus = affectationStatus;\n-        this.phenotypes = defaultObject(phenotypes, ArrayList::new);\n-        this.disorders = defaultObject(disorders, ArrayList::new);\n-        this.samples = defaultObject(samples, ArrayList::new);\n-        this.parentalConsanguinity = parentalConsanguinity;\n-        this.annotationSets = annotationSets;\n-        this.attributes = defaultObject(attributes, HashMap::new);\n+    public Population() {\n+      this.name = \"\";\n+      this.subpopulation = \"\";\n+      this.description = \"\";\n     }\n \n-    public static class Population {\n-\n-        private String name;\n-        private String subpopulation;\n-        private String description;\n-\n-\n-        public Population() {\n-            this.name = \"\";\n-            this.subpopulation = \"\";\n-            this.description = \"\";\n-        }\n-\n-        public Population(String name, String subpopulation, String description) {\n-            this.name = name;\n-            this.subpopulation = subpopulation;\n-            this.description = description;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            final StringBuilder sb = new StringBuilder(\"Population{\");\n-            sb.append(\"name='\").append(name).append('\\'');\n-            sb.append(\", subpopulation='\").append(subpopulation).append('\\'');\n-            sb.append(\", description='\").append(description).append('\\'');\n-            sb.append('}');\n-            return sb.toString();\n-        }\n-\n-        public String getName() {\n-            return name;\n-        }\n-\n-        public void setName(String name) {\n-            this.name = name;\n-        }\n-\n-        public String getSubpopulation() {\n-            return subpopulation;\n-        }\n-\n-        public void setSubpopulation(String subpopulation) {\n-            this.subpopulation = subpopulation;\n-        }\n-\n-        public String getDescription() {\n-            return description;\n-        }\n-\n-        public void setDescription(String description) {\n-            this.description = description;\n-        }\n+    public Population(String name, String subpopulation, String description) {\n+      this.name = name;\n+      this.subpopulation = subpopulation;\n+      this.description = description;\n     }\n \n-\n     @Override\n     public String toString() {\n-        final StringBuilder sb = new StringBuilder(\"Individual{\");\n-        sb.append(\"id='\").append(id).append('\\'');\n-        sb.append(\", name='\").append(name).append('\\'');\n-        sb.append(\", uuid='\").append(uuid).append('\\'');\n-        sb.append(\", father=\").append(father);\n-        sb.append(\", mother=\").append(mother);\n-        sb.append(\", multiples=\").append(multiples);\n-        sb.append(\", location=\").append(location);\n-        sb.append(\", sex=\").append(sex);\n-        sb.append(\", karyotypicSex=\").append(karyotypicSex);\n-        sb.append(\", ethnicity='\").append(ethnicity).append('\\'');\n-        sb.append(\", population=\").append(population);\n-        sb.append(\", dateOfBirth='\").append(dateOfBirth).append('\\'');\n-        sb.append(\", release=\").append(release);\n-        sb.append(\", version=\").append(version);\n-        sb.append(\", creationDate='\").append(creationDate).append('\\'');\n-        sb.append(\", modificationDate='\").append(modificationDate).append('\\'');\n-        sb.append(\", status=\").append(status);\n-        sb.append(\", lifeStatus=\").append(lifeStatus);\n-        sb.append(\", affectationStatus=\").append(affectationStatus);\n-        sb.append(\", phenotypes=\").append(phenotypes);\n-        sb.append(\", disorders=\").append(disorders);\n-        sb.append(\", samples=\").append(samples);\n-        sb.append(\", parentalConsanguinity=\").append(parentalConsanguinity);\n-        sb.append(\", attributes=\").append(attributes);\n-        sb.append(\", annotationSets=\").append(annotationSets);\n-        sb.append('}');\n-        return sb.toString();\n-    }\n-\n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (!(o instanceof Individual)){\n-            return false;\n-        }\n-        Individual that = (Individual) o;\n-        return release == that.release\n-                && version == that.version\n-                && parentalConsanguinity == that.parentalConsanguinity\n-                && Objects.equals(uuid, that.uuid)\n-                && Objects.equals(id, that.id)\n-                && Objects.equals(name, that.name)\n-                && Objects.equals(father, that.father)\n-                && Objects.equals(mother, that.mother)\n-                && Objects.equals(multiples, that.multiples)\n-                && sex == that.sex\n-                && karyotypicSex == that.karyotypicSex\n-                && Objects.equals(ethnicity, that.ethnicity)\n-                && Objects.equals(population, that.population)\n-                && Objects.equals(dateOfBirth, that.dateOfBirth)\n-                && Objects.equals(creationDate, that.creationDate)\n-                && Objects.equals(status, that.status)\n-                && lifeStatus == that.lifeStatus\n-                && affectationStatus == that.affectationStatus\n-                && Objects.equals(phenotypes, that.phenotypes)\n-                && Objects.equals(samples, that.samples)\n-                && Objects.equals(attributes, that.attributes);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(uuid, id, name, father, mother, multiples, sex, karyotypicSex, ethnicity, population, dateOfBirth, release,\n-                version, creationDate, status, lifeStatus, affectationStatus, phenotypes, samples, parentalConsanguinity, attributes);\n-    }\n-\n-    @Override\n-    public Individual setUid(long uid) {\n-        super.setUid(uid);\n-        return this;\n-    }\n-\n-    @Override\n-    public Individual setStudyUid(long studyUid) {\n-        super.setStudyUid(studyUid);\n-        return this;\n-    }\n-\n-    public String getUuid() {\n-        return uuid;\n-    }\n-\n-    public Individual setUuid(String uuid) {\n-        this.uuid = uuid;\n-        return this;\n-    }\n-\n-    public String getId() {\n-        return id;\n-    }\n-\n-    public Individual setId(String id) {\n-        this.id = id;\n-        return this;\n+      final StringBuilder sb = new StringBuilder(\"Population{\");\n+      sb.append(\"name='\").append(name).append('\\'');\n+      sb.append(\", subpopulation='\").append(subpopulation).append('\\'');\n+      sb.append(\", description='\").append(description).append('\\'');\n+      sb.append('}');\n+      return sb.toString();\n     }\n \n     public String getName() {\n-        return name;\n-    }\n-\n-    public Individual setName(String name) {\n-        this.name = name;\n-        return this;\n-    }\n+      return name;\n+    }\n+\n+    public void setName(String name) {\n+      this.name = name;\n+    }\n+\n+    public String getSubpopulation() {\n+      return subpopulation;\n+    }\n+\n+    public void setSubpopulation(String subpopulation) {\n+      this.subpopulation = subpopulation;\n+    }\n+\n+    public String getDescription() {\n+      return description;\n+    }\n+\n+    public void setDescription(String description) {\n+      this.description = description;\n+    }\n+  }\n+\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"Individual{\");\n+    sb.append(\"id='\").append(id).append('\\'');\n+    sb.append(\", name='\").append(name).append('\\'');\n+    sb.append(\", uuid='\").append(uuid).append('\\'');\n+    sb.append(\", father=\").append(father);\n+    sb.append(\", mother=\").append(mother);\n+    sb.append(\", multiples=\").append(multiples);\n+    sb.append(\", location=\").append(location);\n+    sb.append(\", sex=\").append(sex);\n+    sb.append(\", karyotypicSex=\").append(karyotypicSex);\n+    sb.append(\", ethnicity='\").append(ethnicity).append('\\'');\n+    sb.append(\", population=\").append(population);\n+    sb.append(\", dateOfBirth='\").append(dateOfBirth).append('\\'');\n+    sb.append(\", release=\").append(release);\n+    sb.append(\", version=\").append(version);\n+    sb.append(\", creationDate='\").append(creationDate).append('\\'');\n+    sb.append(\", modificationDate='\").append(modificationDate).append('\\'');\n+    sb.append(\", status=\").append(status);\n+    sb.append(\", lifeStatus=\").append(lifeStatus);\n+    sb.append(\", affectationStatus=\").append(affectationStatus);\n+    sb.append(\", phenotypes=\").append(phenotypes);\n+    sb.append(\", disorders=\").append(disorders);\n+    sb.append(\", samples=\").append(samples);\n+    sb.append(\", parentalConsanguinity=\").append(parentalConsanguinity);\n+    sb.append(\", attributes=\").append(attributes);\n+    sb.append(\", annotationSets=\").append(annotationSets);\n+    sb.append('}');\n+    return sb.toString();\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof Individual)) {\n+      return false;\n+    }\n+    Individual that = (Individual) o;\n+    return release == that.release\n+        && version == that.version\n+        && parentalConsanguinity == that.parentalConsanguinity\n+        && Objects.equals(uuid, that.uuid)\n+        && Objects.equals(id, that.id)\n+        && Objects.equals(name, that.name)\n+        && Objects.equals(father, that.father)\n+        && Objects.equals(mother, that.mother)\n+        && Objects.equals(multiples, that.multiples)\n+        && sex == that.sex\n+        && karyotypicSex == that.karyotypicSex\n+        && Objects.equals(ethnicity, that.ethnicity)\n+        && Objects.equals(population, that.population)\n+        && Objects.equals(dateOfBirth, that.dateOfBirth)\n+        && Objects.equals(creationDate, that.creationDate)\n+        && Objects.equals(status, that.status)\n+        && lifeStatus == that.lifeStatus\n+        && affectationStatus == that.affectationStatus\n+        && Objects.equals(phenotypes, that.phenotypes)\n+        && Objects.equals(samples, that.samples)\n+        && Objects.equals(attributes, that.attributes);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(uuid, id, name, father, mother, multiples, sex, karyotypicSex, ethnicity, population, dateOfBirth, release,\n+        version, creationDate, status, lifeStatus, affectationStatus, phenotypes, samples, parentalConsanguinity, attributes);\n+  }\n+\n+  @Override\n+  public Individual setUid(long uid) {\n+    super.setUid(uid);\n+    return this;\n+  }\n+\n+  @Override\n+  public Individual setStudyUid(long studyUid) {\n+    super.setStudyUid(studyUid);\n+    return this;\n+  }\n+\n+  public String getUuid() {\n+    return uuid;\n+  }\n+\n+  public Individual setUuid(String uuid) {\n+    this.uuid = uuid;\n+    return this;\n+  }\n+\n+  public String getId() {\n+    return id;\n+  }\n+\n+  public Individual setId(String id) {\n+    this.id = id;\n+    return this;\n+  }\n+\n+  public String getName() {\n+    return name;\n+  }\n+\n+  public Individual setName(String name) {\n+    this.name = name;\n+    return this;\n+  }\n+\n+  public Individual getFather() {\n+    return father;\n+  }\n+\n+  public Individual setFather(Individual father) {\n+    this.father = father;\n+    return this;\n+  }\n+\n+  public Individual getMother() {\n+    return mother;\n+  }\n+\n+  public Individual setMother(Individual mother) {\n+    this.mother = mother;\n+    return this;\n+  }\n+\n+  public Multiples getMultiples() {\n+    return multiples;\n+  }\n+\n+  public Individual setMultiples(Multiples multiples) {\n+    this.multiples = multiples;\n+    return this;\n+  }\n+\n+  public Location getLocation() {\n+    return location;\n+  }\n+\n+  public Individual setLocation(Location location) {\n+    this.location = location;\n+    return this;\n+  }\n+\n+  public Sex getSex() {\n+    return sex;\n+  }\n+\n+  public Individual setSex(Sex sex) {\n+    this.sex = sex;\n+    return this;\n+  }\n+\n+  public KaryotypicSex getKaryotypicSex() {\n+    return karyotypicSex;\n+  }\n+\n+  public Individual setKaryotypicSex(KaryotypicSex karyotypicSex) {\n+    this.karyotypicSex = karyotypicSex;\n+    return this;\n+  }\n+\n+  public String getEthnicity() {\n+    return ethnicity;\n+  }\n+\n+  public Individual setEthnicity(String ethnicity) {\n+    this.ethnicity = ethnicity;\n+    return this;\n+  }\n+\n+  public Population getPopulation() {\n+    return population;\n+  }\n+\n+  public Individual setPopulation(Population population) {\n+    this.population = population;\n+    return this;\n+  }\n+\n+  public String getCreationDate() {\n+    return creationDate;\n+  }\n+\n+  public Individual setCreationDate(String creationDate) {\n+    this.creationDate = creationDate;\n+    return this;\n+  }\n+\n+  public String getModificationDate() {\n+    return modificationDate;\n+  }\n+\n+  public Individual setModificationDate(String modificationDate) {\n+    this.modificationDate = modificationDate;\n+    return this;\n+  }\n+\n+  public String getDateOfBirth() {\n+    return dateOfBirth;\n+  }\n+\n+  public Individual setDateOfBirth(String dateOfBirth) {\n+    this.dateOfBirth = dateOfBirth;\n+    return this;\n+  }\n+\n+  public Status getStatus() {\n+    return status;\n+  }\n+\n+  public Individual setStatus(Status status) {\n+    this.status = status;\n+    return this;\n+  }\n+\n+  public int getRelease() {\n+    return release;\n+  }\n+\n+  public Individual setRelease(int release) {\n+    this.release = release;\n+    return this;\n+  }\n+\n+  public int getVersion() {\n+    return version;\n+  }\n+\n+  public Individual setVersion(int version) {\n+    this.version = version;\n+    return this;\n+  }\n+\n+  public LifeStatus getLifeStatus() {\n+    return lifeStatus;\n+  }\n+\n+  public Individual setLifeStatus(LifeStatus lifeStatus) {\n+    this.lifeStatus = lifeStatus;\n+    return this;\n+  }\n+\n+  @Deprecated\n+  public AffectationStatus getAffectationStatus() {\n+    return affectationStatus;\n+  }\n+\n+  @Deprecated\n+  public Individual setAffectationStatus(AffectationStatus affectationStatus) {\n+    this.affectationStatus = affectationStatus;\n+    return this;\n+  }\n+\n+  public List<Phenotype> getPhenotypes() {\n+    return phenotypes;\n+  }\n+\n+  public Individual setPhenotypes(List<Phenotype> phenotypes) {\n+    this.phenotypes = phenotypes;\n+    return this;\n+  }\n+\n+  public List<Disorder> getDisorders() {\n+    return disorders;\n+  }\n+\n+  public Individual setDisorders(List<Disorder> disorders) {\n+    this.disorders = disorders;\n+    return this;\n+  }\n+\n+  public List<Sample> getSamples() {\n+    return samples;\n+  }\n+\n+  public Individual setSamples(List<Sample> samples) {\n+    this.samples = samples;\n+    return this;\n+  }\n \n-    public Individual getFather() {\n-        return father;\n-    }\n+  public boolean isParentalConsanguinity() {\n+    return parentalConsanguinity;\n+  }\n \n-    public Individual setFather(Individual father) {\n-        this.father = father;\n-        return this;\n-    }\n+  public Individual setParentalConsanguinity(boolean parentalConsanguinity) {\n+    this.parentalConsanguinity = parentalConsanguinity;\n+    return this;\n+  }\n \n-    public Individual getMother() {\n-        return mother;\n-    }\n+  public Map<String, Object> getAttributes() {\n+    return attributes;\n+  }\n \n-    public Individual setMother(Individual mother) {\n-        this.mother = mother;\n-        return this;\n-    }\n+  public Individual setAttributes(Map<String, Object> attributes) {\n+    this.attributes = attributes;\n+    return this;\n+  }\n \n-    public Multiples getMultiples() {\n-        return multiples;\n-    }\n+  // Acl params to communicate the WS and the sample manager\n+  public static class IndividualAclParams extends AclParams {\n \n-    public Individual setMultiples(Multiples multiples) {\n-        this.multiples = multiples;\n-        return this;\n-    }\n+    private String sample;\n+    private boolean propagate;\n \n-    public Location getLocation() {\n-        return location;\n-    }\n-\n-    public Individual setLocation(Location location) {\n-        this.location = location;\n-        return this;\n-    }\n-\n-    public Sex getSex() {\n-        return sex;\n-    }\n-\n-    public Individual setSex(Sex sex) {\n-        this.sex = sex;\n-        return this;\n-    }\n-\n-    public KaryotypicSex getKaryotypicSex() {\n-        return karyotypicSex;\n-    }\n-\n-    public Individual setKaryotypicSex(KaryotypicSex karyotypicSex) {\n-        this.karyotypicSex = karyotypicSex;\n-        return this;\n-    }\n+    public IndividualAclParams() {\n \n-    public String getEthnicity() {\n-        return ethnicity;\n     }\n \n-    public Individual setEthnicity(String ethnicity) {\n-        this.ethnicity = ethnicity;\n-        return this;\n+    public IndividualAclParams(String permissions, Action action, String sample, boolean propagate) {\n+      super(permissions, action);\n+      this.sample = sample;\n+      this.propagate = propagate;\n     }\n \n-    public Population getPopulation() {\n-        return population;\n-    }\n-\n-    public Individual setPopulation(Population population) {\n-        this.population = population;\n-        return this;\n-    }\n-\n-    public String getCreationDate() {\n-        return creationDate;\n-    }\n-\n-    public Individual setCreationDate(String creationDate) {\n-        this.creationDate = creationDate;\n-        return this;\n-    }\n-\n-    public String getModificationDate() {\n-        return modificationDate;\n-    }\n-\n-    public Individual setModificationDate(String modificationDate) {\n-        this.modificationDate = modificationDate;\n-        return this;\n-    }\n-\n-    public String getDateOfBirth() {\n-        return dateOfBirth;\n-    }\n-\n-    public Individual setDateOfBirth(String dateOfBirth) {\n-        this.dateOfBirth = dateOfBirth;\n-        return this;\n-    }\n-\n-    public Status getStatus() {\n-        return status;\n-    }\n-\n-    public Individual setStatus(Status status) {\n-        this.status = status;\n-        return this;\n-    }\n-\n-    public int getRelease() {\n-        return release;\n-    }\n-\n-    public Individual setRelease(int release) {\n-        this.release = release;\n-        return this;\n-    }\n-\n-    public int getVersion() {\n-        return version;\n-    }\n-\n-    public Individual setVersion(int version) {\n-        this.version = version;\n-        return this;\n-    }\n-\n-    public LifeStatus getLifeStatus() {\n-        return lifeStatus;\n-    }\n-\n-    public Individual setLifeStatus(LifeStatus lifeStatus) {\n-        this.lifeStatus = lifeStatus;\n-        return this;\n-    }\n-\n-    @Deprecated\n-    public AffectationStatus getAffectationStatus() {\n-        return affectationStatus;\n-    }\n-\n-    @Deprecated\n-    public Individual setAffectationStatus(AffectationStatus affectationStatus) {\n-        this.affectationStatus = affectationStatus;\n-        return this;\n-    }\n-\n-    public List<Phenotype> getPhenotypes() {\n-        return phenotypes;\n-    }\n-\n-    public Individual setPhenotypes(List<Phenotype> phenotypes) {\n-        this.phenotypes = phenotypes;\n-        return this;\n-    }\n-\n-    public List<Disorder> getDisorders() {\n-        return disorders;\n-    }\n-\n-    public Individual setDisorders(List<Disorder> disorders) {\n-        this.disorders = disorders;\n-        return this;\n-    }\n-\n-    public List<Sample> getSamples() {\n-        return samples;\n+    @Override\n+    public String toString() {\n+      final StringBuilder sb = new StringBuilder(\"IndividualAclParams{\");\n+      sb.append(\"permissions='\").append(permissions).append('\\'');\n+      sb.append(\", action=\").append(action);\n+      sb.append(\", sample='\").append(sample).append('\\'');\n+      sb.append(\", propagate=\").append(propagate);\n+      sb.append('}');\n+      return sb.toString();\n     }\n \n-    public Individual setSamples(List<Sample> samples) {\n-        this.samples = samples;\n-        return this;\n+    public String getSample() {\n+      return sample;\n     }\n \n-    public boolean isParentalConsanguinity() {\n-        return parentalConsanguinity;\n+    public IndividualAclParams setSample(String sample) {\n+      this.sample = sample;\n+      return this;\n     }\n \n-    public Individual setParentalConsanguinity(boolean parentalConsanguinity) {\n-        this.parentalConsanguinity = parentalConsanguinity;\n-        return this;\n+    public boolean isPropagate() {\n+      return propagate;\n     }\n \n-    public Map<String, Object> getAttributes() {\n-        return attributes;\n+    public IndividualAclParams setPropagate(boolean propagate) {\n+      this.propagate = propagate;\n+      return this;\n     }\n \n-    public Individual setAttributes(Map<String, Object> attributes) {\n-        this.attributes = attributes;\n-        return this;\n+    public IndividualAclParams setPermissions(String permissions) {\n+      super.setPermissions(permissions);\n+      return this;\n     }\n \n-    // Acl params to communicate the WS and the sample manager\n-    public static class IndividualAclParams extends AclParams {\n-\n-        private String sample;\n-        private boolean propagate;\n-\n-        public IndividualAclParams() {\n-\n-        }\n-\n-        public IndividualAclParams(String permissions, Action action, String sample, boolean propagate) {\n-            super(permissions, action);\n-            this.sample = sample;\n-            this.propagate = propagate;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            final StringBuilder sb = new StringBuilder(\"IndividualAclParams{\");\n-            sb.append(\"permissions='\").append(permissions).append('\\'');\n-            sb.append(\", action=\").append(action);\n-            sb.append(\", sample='\").append(sample).append('\\'');\n-            sb.append(\", propagate=\").append(propagate);\n-            sb.append('}');\n-            return sb.toString();\n-        }\n-\n-        public String getSample() {\n-            return sample;\n-        }\n-\n-        public IndividualAclParams setSample(String sample) {\n-            this.sample = sample;\n-            return this;\n-        }\n-\n-        public boolean isPropagate() {\n-            return propagate;\n-        }\n-\n-        public IndividualAclParams setPropagate(boolean propagate) {\n-            this.propagate = propagate;\n-            return this;\n-        }\n-\n-        public IndividualAclParams setPermissions(String permissions) {\n-            super.setPermissions(permissions);\n-            return this;\n-        }\n-\n-        public IndividualAclParams setAction(Action action) {\n-            super.setAction(action);\n-            return this;\n-        }\n+    public IndividualAclParams setAction(Action action) {\n+      super.setAction(action);\n+      return this;\n     }\n+  }\n \n }\n",
            "diff_size": 803
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 332).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/391/Individual.java\nindex 81e6b1cfe29..dfc98ecdfff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/391/Individual.java\n@@ -73,8 +73,7 @@ public class Individual extends Annotable {\n     public Individual() {\n     }\n \n-    public Individual(String id, String name, Sex sex, String ethnicity, Population population, int release,\n-                      List<AnnotationSet> annotationSets, Map<String, Object> attributes) {\n+    public Individual(String id, String name, Sex sex, String ethnicity, Population population, int release, List<AnnotationSet> annotationSets, Map<String, Object> attributes) {\n         this(id, name, new Individual(), new Individual(), new Multiples(), new Location(), sex, null,\n                 ethnicity, population, \"\", release, 1, TimeUtils.getTime(), new Status(), LifeStatus.UNKNOWN,\n                 AffectationStatus.UNKNOWN, Collections.emptyList(), Collections.emptyList(), Collections.emptyList(), false, annotationSets,\n@@ -82,20 +81,17 @@ public class Individual extends Annotable {\n     }\n \n     public Individual(String id, String name, Individual father, Individual mother, Multiples multiples, Location location, Sex sex,\n-                      KaryotypicSex karyotypicSex, String ethnicity, Population population, LifeStatus lifeStatus,\n-                      AffectationStatus affectationStatus, String dateOfBirth, List<Sample> samples, boolean parentalConsanguinity,\n-                      int release, List<AnnotationSet> annotationSets, List<Phenotype> phenotypeList, List<Disorder> disorders) {\n+                      KaryotypicSex karyotypicSex, String ethnicity, Population population, LifeStatus lifeStatus, AffectationStatus affectationStatus, String dateOfBirth, List<Sample> samples, boolean parentalConsanguinity, int release, List<AnnotationSet> annotationSets, List<Phenotype> phenotypeList, List<Disorder> disorders) {\n         this(id, name, father, mother, multiples, location, sex, karyotypicSex, ethnicity, population,\n                 dateOfBirth, release, 1, TimeUtils.getTime(), new Status(), lifeStatus, affectationStatus, phenotypeList, disorders,\n                 samples, parentalConsanguinity, annotationSets, Collections.emptyMap());\n     }\n \n     public Individual(String id, String name, Individual father, Individual mother, Multiples multiples, Location location, Sex sex,\n-                      KaryotypicSex karyotypicSex, String ethnicity, Population population, String dateOfBirth, int release, int version,\n-                      String creationDate, Status status, LifeStatus lifeStatus, AffectationStatus affectationStatus,\n+                      KaryotypicSex karyotypicSex, String ethnicity, Population population, String dateOfBirth, int release, int version, String creationDate, Status status, LifeStatus lifeStatus, AffectationStatus affectationStatus,\n                       List<Phenotype> phenotypes, List<Disorder> disorders, List<Sample> samples, boolean parentalConsanguinity,\n                       List<AnnotationSet> annotationSets, Map<String, Object> attributes) {\n-        this.id = id;\n+    this.id = id;\n         this.name = name;\n         this.father = defaultObject(father, Individual::new);\n         this.mother = defaultObject(mother, Individual::new);\n@@ -212,7 +208,7 @@ public class Individual extends Annotable {\n         if (this == o) {\n             return true;\n         }\n-        if (!(o instanceof Individual)){\n+        if (!(o instanceof Individual)) {\n             return false;\n         }\n         Individual that = (Individual) o;\n@@ -531,4 +527,4 @@ public class Individual extends Annotable {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/391/Individual.java\nindex 81e6b1cfe29..6410fe0dac9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/391/Individual.java\n@@ -212,7 +212,7 @@ public class Individual extends Annotable {\n         if (this == o) {\n             return true;\n         }\n-        if (!(o instanceof Individual)){\n+        if (!(o instanceof Individual)) {\n             return false;\n         }\n         Individual that = (Individual) o;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/391/Individual.java\nindex 81e6b1cfe29..6410fe0dac9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/391/Individual.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/391/Individual.java\n@@ -212,7 +212,7 @@ public class Individual extends Annotable {\n         if (this == o) {\n             return true;\n         }\n-        if (!(o instanceof Individual)){\n+        if (!(o instanceof Individual)) {\n             return false;\n         }\n         Individual that = (Individual) o;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
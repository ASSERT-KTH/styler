{
    "project_name": "graphfoundation-ongdb",
    "error_id": "376",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/376/BaseCommandReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/376/BaseCommandReader.java\nindex 35fdd8f6487..85984737e82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/376/BaseCommandReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/376/BaseCommandReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.command;\n \n import java.io.IOException;\n@@ -33,42 +34,42 @@ import org.neo4j.storageengine.api.ReadableChannel;\n  */\n public abstract class BaseCommandReader implements CommandReader\n {\n-    /**\n-     * Handles format back to 1.9 where the command format didn't have a version.\n-     */\n-    @Override\n-    public final Command read( ReadableChannel channel ) throws IOException\n+  /**\n+   * Handles format back to 1.9 where the command format didn't have a version.\n+   */\n+  @Override\n+  public final Command read(ReadableChannel channel) throws IOException\n+  {\n+    byte commandType;\n+    do\n     {\n-        byte commandType;\n-        do\n-        {\n-            commandType = channel.get();\n-        }\n-        while ( commandType == NeoCommandType.NONE );\n-\n-        return read( commandType, channel );\n+      commandType = channel.get();\n     }\n+    while (commandType == NeoCommandType.NONE);\n+\n+    return read(commandType, channel);\n+  }\n \n-    /**\n-     * Reads the next {@link Command} from {@code channel}.\n-     *\n-     * @param commandType type of command to read, f.ex. node command, relationship command a.s.o.\n-     * @param channel     {@link ReadableClosableChannel} to read from.\n-     * @return {@link Command} or {@code null} if end reached.\n-     * @throws IOException if channel throws exception.\n-     */\n-    protected abstract Command read( byte commandType, ReadableChannel channel ) throws IOException;\n+  /**\n+   * Reads the next {@link Command} from {@code channel}.\n+   *\n+   * @param commandType type of command to read, f.ex. node command, relationship command a.s.o.\n+   * @param channel     {@link ReadableClosableChannel} to read from.\n+   * @return {@link Command} or {@code null} if end reached.\n+   * @throws IOException if channel throws exception.\n+   */\n+  protected abstract Command read(byte commandType, ReadableChannel channel) throws IOException;\n \n-    protected IOException unknownCommandType( byte commandType, ReadableChannel channel ) throws IOException\n+  protected IOException unknownCommandType(byte commandType, ReadableChannel channel) throws IOException\n+  {\n+    String message = \"Unknown command type[\" + commandType + \"]\";\n+    if (channel instanceof PositionAwareChannel)\n     {\n-        String message = \"Unknown command type[\" + commandType + \"]\";\n-        if ( channel instanceof PositionAwareChannel )\n-        {\n-            PositionAwareChannel logChannel = (PositionAwareChannel) channel;\n-            LogPositionMarker position = new LogPositionMarker();\n-            logChannel.getCurrentPosition( position );\n-            message += \" near \" + position.newPosition();\n-        }\n-        return new IOException( message );\n+      PositionAwareChannel logChannel = (PositionAwareChannel) channel;\n+      LogPositionMarker position = new LogPositionMarker();\n+      logChannel.getCurrentPosition(position);\n+      message += \" near \" + position.newPosition();\n     }\n+    return new IOException(message);\n+  }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/376/BaseCommandReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/376/BaseCommandReader.java\nindex 35fdd8f6487..12be386c816 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/376/BaseCommandReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/376/BaseCommandReader.java\n@@ -45,8 +45,7 @@ public abstract class BaseCommandReader implements CommandReader\n             commandType = channel.get();\n         }\n         while ( commandType == NeoCommandType.NONE );\n-\n-        return read( commandType, channel );\n+return read( commandType, channel );\n     }\n \n     /**\n@@ -71,4 +70,4 @@ public abstract class BaseCommandReader implements CommandReader\n         }\n         return new IOException( message );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/376/BaseCommandReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/376/BaseCommandReader.java\nindex 35fdd8f6487..5d241f36e76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/376/BaseCommandReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/376/BaseCommandReader.java\n@@ -20,7 +20,6 @@\n package org.neo4j.kernel.impl.transaction.command;\n \n import java.io.IOException;\n-\n import org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine;\n import org.neo4j.kernel.impl.transaction.log.LogPositionMarker;\n import org.neo4j.kernel.impl.transaction.log.PositionAwareChannel;\n@@ -31,6 +30,7 @@ import org.neo4j.storageengine.api.ReadableChannel;\n /**\n  * Basic functionality for {@link CommandReader} for {@link RecordStorageEngine}.\n  */\n+\n public abstract class BaseCommandReader implements CommandReader\n {\n     /**\n@@ -44,8 +44,8 @@ public abstract class BaseCommandReader implements CommandReader\n         {\n             commandType = channel.get();\n         }\n-        while ( commandType == NeoCommandType.NONE );\n \n+        while( commandType == NeoCommandType.NONE);\n         return read( commandType, channel );\n     }\n \n@@ -57,7 +57,9 @@ public abstract class BaseCommandReader implements CommandReader\n      * @return {@link Command} or {@code null} if end reached.\n      * @throws IOException if channel throws exception.\n      */\n-    protected abstract Command read( byte commandType, ReadableChannel channel ) throws IOException;\n+\n+    protected abstract Command read( byte commandType, ReadableChannel channel ) throws IOException\n+    ;\n \n     protected IOException unknownCommandType( byte commandType, ReadableChannel channel ) throws IOException\n     {\n@@ -69,6 +71,7 @@ public abstract class BaseCommandReader implements CommandReader\n             logChannel.getCurrentPosition( position );\n             message += \" near \" + position.newPosition();\n         }\n+\n         return new IOException( message );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3811",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "117",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3811/StoreAbstractRelationshipCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3811/StoreAbstractRelationshipCursor.java\nindex de929daca72..cc407aff32a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3811/StoreAbstractRelationshipCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3811/StoreAbstractRelationshipCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.store;\n \n import org.neo4j.cursor.Cursor;\n@@ -36,89 +37,89 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n  */\n public abstract class StoreAbstractRelationshipCursor implements Cursor<RelationshipItem>, RelationshipItem\n {\n-    protected final RelationshipRecord relationshipRecord;\n-    final RecordCursor<RelationshipRecord> relationshipRecordCursor;\n-    private final LockService lockService;\n-    StoreAbstractRelationshipCursor( RelationshipRecord relationshipRecord, RecordCursors cursors,\n-            LockService lockService )\n-    {\n-        this.relationshipRecordCursor = cursors.relationship();\n-        this.relationshipRecord = relationshipRecord;\n-        this.lockService = lockService;\n-    }\n+  protected final RelationshipRecord relationshipRecord;\n+  final RecordCursor<RelationshipRecord> relationshipRecordCursor;\n+  private final LockService lockService;\n \n-    @Override\n-    public RelationshipItem get()\n-    {\n-        return this;\n-    }\n+  StoreAbstractRelationshipCursor(RelationshipRecord relationshipRecord, RecordCursors cursors,\n+                                  LockService lockService)\n+  {\n+    this.relationshipRecordCursor = cursors.relationship();\n+    this.relationshipRecord = relationshipRecord;\n+    this.lockService = lockService;\n+  }\n \n-    @Override\n-    public long id()\n-    {\n-        return relationshipRecord.getId();\n-    }\n+  @Override\n+  public RelationshipItem get()\n+  {\n+    return this;\n+  }\n \n-    @Override\n-    public int type()\n-    {\n-        return relationshipRecord.getType();\n-    }\n+  @Override\n+  public long id()\n+  {\n+    return relationshipRecord.getId();\n+  }\n \n-    @Override\n-    public long startNode()\n-    {\n-        return relationshipRecord.getFirstNode();\n-    }\n+  @Override\n+  public int type()\n+  {\n+    return relationshipRecord.getType();\n+  }\n \n-    @Override\n-    public long endNode()\n-    {\n-        return relationshipRecord.getSecondNode();\n-    }\n+  @Override\n+  public long startNode()\n+  {\n+    return relationshipRecord.getFirstNode();\n+  }\n \n-    @Override\n-    public long otherNode( long nodeId )\n-    {\n-        return relationshipRecord.getFirstNode() == nodeId ?\n-               relationshipRecord.getSecondNode() : relationshipRecord.getFirstNode();\n-    }\n+  @Override\n+  public long endNode()\n+  {\n+    return relationshipRecord.getSecondNode();\n+  }\n \n-    @Override\n-    public long nextPropertyId()\n-    {\n-        return relationshipRecord.getNextProp();\n-    }\n+  @Override\n+  public long otherNode(long nodeId)\n+  {\n+    return relationshipRecord.getFirstNode() == nodeId ?\n+        relationshipRecord.getSecondNode() : relationshipRecord.getFirstNode();\n+  }\n+\n+  @Override\n+  public long nextPropertyId()\n+  {\n+    return relationshipRecord.getNextProp();\n+  }\n \n-    @Override\n-    public Lock lock()\n+  @Override\n+  public Lock lock()\n+  {\n+    Lock lock = lockService.acquireRelationshipLock(relationshipRecord.getId(), LockService.LockType.READ_LOCK);\n+    if (lockService != NO_LOCK_SERVICE)\n     {\n-        Lock lock = lockService.acquireRelationshipLock( relationshipRecord.getId(), LockService.LockType.READ_LOCK );\n-        if ( lockService != NO_LOCK_SERVICE )\n+      boolean success = false;\n+      try\n+      {\n+        // It's safer to re-read the relationship record here, specifically nextProp, after acquiring the lock\n+        if (!relationshipRecordCursor.next(relationshipRecord.getId(), relationshipRecord, FORCE))\n+        {\n+          // So it looks like the node has been deleted. The current behavior of RelationshipStore#fillRecord\n+          // w/ FORCE is to only set the inUse field on loading an unused record. This should (and will)\n+          // change to be more of a centralized behavior by the stores. Anyway, setting this pointer\n+          // to the primitive equivalent of null the property cursor will just look empty from the\n+          // outside and the releasing of the lock will be done as usual.\n+          relationshipRecord.setNextProp(Record.NO_NEXT_PROPERTY.intValue());\n+        }\n+        success = true;\n+      } finally\n+      {\n+        if (!success)\n         {\n-            boolean success = false;\n-            try\n-            {\n-                // It's safer to re-read the relationship record here, specifically nextProp, after acquiring the lock\n-                if ( !relationshipRecordCursor.next( relationshipRecord.getId(), relationshipRecord, FORCE ) )\n-                {\n-                    // So it looks like the node has been deleted. The current behavior of RelationshipStore#fillRecord\n-                    // w/ FORCE is to only set the inUse field on loading an unused record. This should (and will)\n-                    // change to be more of a centralized behavior by the stores. Anyway, setting this pointer\n-                    // to the primitive equivalent of null the property cursor will just look empty from the\n-                    // outside and the releasing of the lock will be done as usual.\n-                    relationshipRecord.setNextProp( Record.NO_NEXT_PROPERTY.intValue() );\n-                }\n-                success = true;\n-            }\n-            finally\n-            {\n-                if ( !success )\n-                {\n-                    lock.release();\n-                }\n-            }\n+          lock.release();\n         }\n-        return lock;\n+      }\n     }\n+    return lock;\n+  }\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3811/StoreAbstractRelationshipCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3811/StoreAbstractRelationshipCursor.java\nindex de929daca72..826653117d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3811/StoreAbstractRelationshipCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3811/StoreAbstractRelationshipCursor.java\n@@ -39,7 +39,8 @@ public abstract class StoreAbstractRelationshipCursor implements Cursor<Relation\n     protected final RelationshipRecord relationshipRecord;\n     final RecordCursor<RelationshipRecord> relationshipRecordCursor;\n     private final LockService lockService;\n-    StoreAbstractRelationshipCursor( RelationshipRecord relationshipRecord, RecordCursors cursors,\n+\n+StoreAbstractRelationshipCursor( RelationshipRecord relationshipRecord, RecordCursors cursors,\n             LockService lockService )\n     {\n         this.relationshipRecordCursor = cursors.relationship();\n@@ -80,8 +81,7 @@ public abstract class StoreAbstractRelationshipCursor implements Cursor<Relation\n     @Override\n     public long otherNode( long nodeId )\n     {\n-        return relationshipRecord.getFirstNode() == nodeId ?\n-               relationshipRecord.getSecondNode() : relationshipRecord.getFirstNode();\n+        return relationshipRecord.getFirstNode() == nodeId ? relationshipRecord.getSecondNode() : relationshipRecord.getFirstNode();\n     }\n \n     @Override\n@@ -109,7 +109,8 @@ public abstract class StoreAbstractRelationshipCursor implements Cursor<Relation\n                     // outside and the releasing of the lock will be done as usual.\n                     relationshipRecord.setNextProp( Record.NO_NEXT_PROPERTY.intValue() );\n                 }\n-                success = true;\n+\n+success = true;\n             }\n             finally\n             {\n@@ -121,4 +122,4 @@ public abstract class StoreAbstractRelationshipCursor implements Cursor<Relation\n         }\n         return lock;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
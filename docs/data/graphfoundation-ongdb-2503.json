{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2503",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2503/MemoryUsageStatsProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2503/MemoryUsageStatsProvider.java\nindex 14e0e3ae4d9..5a34378eb88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2503/MemoryUsageStatsProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2503/MemoryUsageStatsProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import org.neo4j.unsafe.impl.batchimport.cache.GatheringMemoryStatsVisitor;\n@@ -33,34 +34,34 @@ import static org.neo4j.helpers.Format.bytes;\n  */\n public class MemoryUsageStatsProvider extends GenericStatsProvider implements Stat\n {\n-    private final MemoryStatsVisitor.Visitable[] users;\n+  private final MemoryStatsVisitor.Visitable[] users;\n \n-    public MemoryUsageStatsProvider( MemoryStatsVisitor.Visitable... users )\n-    {\n-        this.users = users;\n-        add( Keys.memory_usage, this );\n-    }\n+  public MemoryUsageStatsProvider(MemoryStatsVisitor.Visitable... users)\n+  {\n+    this.users = users;\n+    add(Keys.memory_usage, this);\n+  }\n \n-    @Override\n-    public DetailLevel detailLevel()\n-    {\n-        return DetailLevel.IMPORTANT;\n-    }\n+  @Override\n+  public DetailLevel detailLevel()\n+  {\n+    return DetailLevel.IMPORTANT;\n+  }\n \n-    @Override\n-    public long asLong()\n+  @Override\n+  public long asLong()\n+  {\n+    GatheringMemoryStatsVisitor visitor = new GatheringMemoryStatsVisitor();\n+    for (MemoryStatsVisitor.Visitable user : users)\n     {\n-        GatheringMemoryStatsVisitor visitor = new GatheringMemoryStatsVisitor();\n-        for ( MemoryStatsVisitor.Visitable user : users )\n-        {\n-            user.acceptMemoryStatsVisitor( visitor );\n-        }\n-        return visitor.getHeapUsage() + visitor.getOffHeapUsage();\n+      user.acceptMemoryStatsVisitor(visitor);\n     }\n+    return visitor.getHeapUsage() + visitor.getOffHeapUsage();\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return bytes( asLong() );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return bytes(asLong());\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2503/MemoryUsageStatsProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2503/MemoryUsageStatsProvider.java\nindex 14e0e3ae4d9..56664ad2a37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2503/MemoryUsageStatsProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2503/MemoryUsageStatsProvider.java\n@@ -38,7 +38,8 @@ public class MemoryUsageStatsProvider extends GenericStatsProvider implements St\n     public MemoryUsageStatsProvider( MemoryStatsVisitor.Visitable... users )\n     {\n         this.users = users;\n-        add( Keys.memory_usage, this );\n+\n+add( Keys.memory_usage, this );\n     }\n \n     @Override\n@@ -55,7 +56,8 @@ public class MemoryUsageStatsProvider extends GenericStatsProvider implements St\n         {\n             user.acceptMemoryStatsVisitor( visitor );\n         }\n-        return visitor.getHeapUsage() + visitor.getOffHeapUsage();\n+\n+return visitor.getHeapUsage() + visitor.getOffHeapUsage();\n     }\n \n     @Override\n@@ -63,4 +65,4 @@ public class MemoryUsageStatsProvider extends GenericStatsProvider implements St\n     {\n         return bytes( asLong() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
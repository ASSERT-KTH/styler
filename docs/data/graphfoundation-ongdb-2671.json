{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2671",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2671/DiffApplyingPrimitiveLongIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2671/DiffApplyingPrimitiveLongIterator.java\nindex c2b2133a0ba..07f232103c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2671/DiffApplyingPrimitiveLongIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2671/DiffApplyingPrimitiveLongIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.diffsets;\n \n import javax.annotation.Nullable;\n@@ -32,103 +33,103 @@ import org.neo4j.graphdb.Resource;\n  */\n class DiffApplyingPrimitiveLongIterator extends PrimitiveLongBaseIterator implements PrimitiveLongResourceIterator\n {\n-    protected enum Phase\n-    {\n-        FILTERED_SOURCE\n-                {\n-                    @Override\n-                    boolean fetchNext( DiffApplyingPrimitiveLongIterator self )\n-                    {\n-                        return self.computeNextFromSourceAndFilter();\n-                    }\n-                },\n-\n-        ADDED_ELEMENTS\n-                {\n-                    @Override\n-                    boolean fetchNext( DiffApplyingPrimitiveLongIterator self )\n-                    {\n-                        return self.computeNextFromAddedElements();\n-                    }\n-                },\n-\n-        NO_ADDED_ELEMENTS\n-                {\n-                    @Override\n-                    boolean fetchNext( DiffApplyingPrimitiveLongIterator self )\n-                    {\n-                        return false;\n-                    }\n-                };\n-\n-        abstract boolean fetchNext( DiffApplyingPrimitiveLongIterator self );\n-    }\n+  protected enum Phase\n+  {\n+    FILTERED_SOURCE\n+        {\n+          @Override\n+          boolean fetchNext(DiffApplyingPrimitiveLongIterator self)\n+          {\n+            return self.computeNextFromSourceAndFilter();\n+          }\n+        },\n \n-    private final PrimitiveLongIterator source;\n-    private final PrimitiveLongIterator addedElementsIterator;\n-    private final PrimitiveLongSet addedElements;\n-    private final PrimitiveLongSet removedElements;\n-    @Nullable\n-    private final Resource resource;\n-    private Phase phase;\n+    ADDED_ELEMENTS\n+        {\n+          @Override\n+          boolean fetchNext(DiffApplyingPrimitiveLongIterator self)\n+          {\n+            return self.computeNextFromAddedElements();\n+          }\n+        },\n \n-    private DiffApplyingPrimitiveLongIterator( PrimitiveLongIterator source, PrimitiveLongSet addedElements, PrimitiveLongSet removedElements,\n-            @Nullable Resource resource )\n-    {\n-        this.source = source;\n-        this.addedElements = addedElements;\n-        this.addedElementsIterator = addedElements.iterator();\n-        this.removedElements = removedElements;\n-        this.resource = resource;\n-        this.phase = Phase.FILTERED_SOURCE;\n-    }\n+    NO_ADDED_ELEMENTS\n+        {\n+          @Override\n+          boolean fetchNext(DiffApplyingPrimitiveLongIterator self)\n+          {\n+            return false;\n+          }\n+        };\n \n-    static PrimitiveLongIterator augment( PrimitiveLongIterator source, PrimitiveLongSet addedElements, PrimitiveLongSet removedElements )\n-    {\n-        return new DiffApplyingPrimitiveLongIterator( source, addedElements, removedElements, null );\n-    }\n+    abstract boolean fetchNext(DiffApplyingPrimitiveLongIterator self);\n+  }\n \n-    static PrimitiveLongResourceIterator augment( PrimitiveLongResourceIterator source, PrimitiveLongSet addedElements, PrimitiveLongSet removedElements )\n-    {\n-        return new DiffApplyingPrimitiveLongIterator( source, addedElements, removedElements, source );\n-    }\n+  private final PrimitiveLongIterator source;\n+  private final PrimitiveLongIterator addedElementsIterator;\n+  private final PrimitiveLongSet addedElements;\n+  private final PrimitiveLongSet removedElements;\n+  @Nullable\n+  private final Resource resource;\n+  private Phase phase;\n \n-    @Override\n-    protected boolean fetchNext()\n-    {\n-        return phase.fetchNext( this );\n-    }\n+  private DiffApplyingPrimitiveLongIterator(PrimitiveLongIterator source, PrimitiveLongSet addedElements, PrimitiveLongSet removedElements,\n+                                            @Nullable Resource resource)\n+  {\n+    this.source = source;\n+    this.addedElements = addedElements;\n+    this.addedElementsIterator = addedElements.iterator();\n+    this.removedElements = removedElements;\n+    this.resource = resource;\n+    this.phase = Phase.FILTERED_SOURCE;\n+  }\n \n-    private boolean computeNextFromSourceAndFilter()\n-    {\n-        while ( source.hasNext() )\n-        {\n-            long value = source.next();\n-            if ( !removedElements.contains( value ) && !addedElements.contains( value ) )\n-            {\n-                return next( value );\n-            }\n-        }\n-        transitionToAddedElements();\n-        return phase.fetchNext( this );\n-    }\n+  static PrimitiveLongIterator augment(PrimitiveLongIterator source, PrimitiveLongSet addedElements, PrimitiveLongSet removedElements)\n+  {\n+    return new DiffApplyingPrimitiveLongIterator(source, addedElements, removedElements, null);\n+  }\n \n-    private void transitionToAddedElements()\n-    {\n-        phase = addedElementsIterator.hasNext() ? Phase.ADDED_ELEMENTS : Phase.NO_ADDED_ELEMENTS;\n-    }\n+  static PrimitiveLongResourceIterator augment(PrimitiveLongResourceIterator source, PrimitiveLongSet addedElements, PrimitiveLongSet removedElements)\n+  {\n+    return new DiffApplyingPrimitiveLongIterator(source, addedElements, removedElements, source);\n+  }\n+\n+  @Override\n+  protected boolean fetchNext()\n+  {\n+    return phase.fetchNext(this);\n+  }\n \n-    private boolean computeNextFromAddedElements()\n+  private boolean computeNextFromSourceAndFilter()\n+  {\n+    while (source.hasNext())\n     {\n-        return addedElementsIterator.hasNext() && next( addedElementsIterator.next() );\n+      long value = source.next();\n+      if (!removedElements.contains(value) && !addedElements.contains(value))\n+      {\n+        return next(value);\n+      }\n     }\n+    transitionToAddedElements();\n+    return phase.fetchNext(this);\n+  }\n+\n+  private void transitionToAddedElements()\n+  {\n+    phase = addedElementsIterator.hasNext() ? Phase.ADDED_ELEMENTS : Phase.NO_ADDED_ELEMENTS;\n+  }\n \n-    @Override\n-    public void close()\n+  private boolean computeNextFromAddedElements()\n+  {\n+    return addedElementsIterator.hasNext() && next(addedElementsIterator.next());\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    if (resource != null)\n     {\n-        if ( resource != null )\n-        {\n-            resource.close();\n-        }\n+      resource.close();\n     }\n+  }\n }\n",
            "diff_size": 124
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2671/DiffApplyingPrimitiveLongIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2671/DiffApplyingPrimitiveLongIterator.java\nindex c2b2133a0ba..efe14ec8b42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2671/DiffApplyingPrimitiveLongIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2671/DiffApplyingPrimitiveLongIterator.java\n@@ -35,25 +35,21 @@ class DiffApplyingPrimitiveLongIterator extends PrimitiveLongBaseIterator implem\n     protected enum Phase\n     {\n         FILTERED_SOURCE\n-                {\n+{\n                     @Override\n                     boolean fetchNext( DiffApplyingPrimitiveLongIterator self )\n                     {\n                         return self.computeNextFromSourceAndFilter();\n                     }\n-                },\n-\n-        ADDED_ELEMENTS\n-                {\n+                }, ADDED_ELEMENTS\n+{\n                     @Override\n                     boolean fetchNext( DiffApplyingPrimitiveLongIterator self )\n                     {\n                         return self.computeNextFromAddedElements();\n                     }\n-                },\n-\n-        NO_ADDED_ELEMENTS\n-                {\n+                }, NO_ADDED_ELEMENTS\n+{\n                     @Override\n                     boolean fetchNext( DiffApplyingPrimitiveLongIterator self )\n                     {\n@@ -61,14 +57,15 @@ class DiffApplyingPrimitiveLongIterator extends PrimitiveLongBaseIterator implem\n                     }\n                 };\n \n-        abstract boolean fetchNext( DiffApplyingPrimitiveLongIterator self );\n+abstract boolean fetchNext( DiffApplyingPrimitiveLongIterator self );\n     }\n \n     private final PrimitiveLongIterator source;\n     private final PrimitiveLongIterator addedElementsIterator;\n     private final PrimitiveLongSet addedElements;\n     private final PrimitiveLongSet removedElements;\n-    @Nullable\n+\n+@Nullable\n     private final Resource resource;\n     private Phase phase;\n \n@@ -109,7 +106,8 @@ class DiffApplyingPrimitiveLongIterator extends PrimitiveLongBaseIterator implem\n                 return next( value );\n             }\n         }\n-        transitionToAddedElements();\n+\n+transitionToAddedElements();\n         return phase.fetchNext( this );\n     }\n \n@@ -131,4 +129,4 @@ class DiffApplyingPrimitiveLongIterator extends PrimitiveLongBaseIterator implem\n             resource.close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
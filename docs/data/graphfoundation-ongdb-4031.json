{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4031",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4031/IndexProviderImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4031/IndexProviderImpl.java\nindex 1902bde32a1..5f11cdb5803 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4031/IndexProviderImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4031/IndexProviderImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi;\n \n import java.util.Map;\n@@ -33,55 +34,53 @@ import org.neo4j.kernel.api.Statement;\n \n public class IndexProviderImpl implements IndexProvider\n {\n-    private final Supplier<KernelTransaction> transactionBridge;\n-    private final GraphDatabaseService gds;\n+  private final Supplier<KernelTransaction> transactionBridge;\n+  private final GraphDatabaseService gds;\n \n-    public IndexProviderImpl( GraphDatabaseService gds, Supplier<KernelTransaction> transactionBridge )\n-    {\n-        this.gds = gds;\n-        this.transactionBridge = transactionBridge;\n-    }\n+  public IndexProviderImpl(GraphDatabaseService gds, Supplier<KernelTransaction> transactionBridge)\n+  {\n+    this.gds = gds;\n+    this.transactionBridge = transactionBridge;\n+  }\n \n-    @Override\n-    public Index<Node> getOrCreateNodeIndex( String indexName, Map<String,String> customConfiguration )\n+  @Override\n+  public Index<Node> getOrCreateNodeIndex(String indexName, Map<String, String> customConfiguration)\n+  {\n+    KernelTransaction ktx = transactionBridge.get();\n+    try (Statement ignore = ktx.acquireStatement())\n     {\n-        KernelTransaction ktx = transactionBridge.get();\n-        try ( Statement ignore = ktx.acquireStatement() )\n-        {\n-            if ( !ktx.indexRead().nodeExplicitIndexExists( indexName, customConfiguration ) )\n-            {\n-                // There's a sub-o-meta thing here where we create index config,\n-                // and the index will itself share the same IndexConfigStore as us and pick up and use\n-                // that. We should pass along config somehow with calls.\n-                ktx.indexWrite().nodeExplicitIndexCreateLazily( indexName, customConfiguration );\n-            }\n-            return new ExplicitIndexProxy<>( indexName, ExplicitIndexProxy.NODE, gds, transactionBridge );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n+      if (!ktx.indexRead().nodeExplicitIndexExists(indexName, customConfiguration))\n+      {\n+        // There's a sub-o-meta thing here where we create index config,\n+        // and the index will itself share the same IndexConfigStore as us and pick up and use\n+        // that. We should pass along config somehow with calls.\n+        ktx.indexWrite().nodeExplicitIndexCreateLazily(indexName, customConfiguration);\n+      }\n+      return new ExplicitIndexProxy<>(indexName, ExplicitIndexProxy.NODE, gds, transactionBridge);\n+    } catch (InvalidTransactionTypeKernelException e)\n+    {\n+      throw new ConstraintViolationException(e.getMessage(), e);\n     }\n+  }\n \n-    @Override\n-    public RelationshipIndex getOrCreateRelationshipIndex( String indexName, Map<String,\n-            String> customConfiguration )\n+  @Override\n+  public RelationshipIndex getOrCreateRelationshipIndex(String indexName, Map<String,\n+      String> customConfiguration)\n+  {\n+    KernelTransaction ktx = transactionBridge.get();\n+    try (Statement ignore = ktx.acquireStatement())\n+    {\n+      if (!ktx.indexRead().relationshipExplicitIndexExists(indexName, customConfiguration))\n+      {\n+        // There's a sub-o-meta thing here where we create index config,\n+        // and the index will itself share the same IndexConfigStore as us and pick up and use\n+        // that. We should pass along config somehow with calls.\n+        ktx.indexWrite().relationshipExplicitIndexCreateLazily(indexName, customConfiguration);\n+      }\n+      return new RelationshipExplicitIndexProxy(indexName, gds, transactionBridge);\n+    } catch (InvalidTransactionTypeKernelException e)\n     {\n-        KernelTransaction ktx = transactionBridge.get();\n-        try ( Statement ignore = ktx.acquireStatement() )\n-        {\n-            if ( !ktx.indexRead().relationshipExplicitIndexExists( indexName, customConfiguration ) )\n-            {\n-                // There's a sub-o-meta thing here where we create index config,\n-                // and the index will itself share the same IndexConfigStore as us and pick up and use\n-                // that. We should pass along config somehow with calls.\n-                ktx.indexWrite().relationshipExplicitIndexCreateLazily( indexName, customConfiguration );\n-            }\n-            return new RelationshipExplicitIndexProxy( indexName, gds, transactionBridge );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n+      throw new ConstraintViolationException(e.getMessage(), e);\n     }\n+  }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4031/IndexProviderImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4031/IndexProviderImpl.java\nindex 1902bde32a1..4f65ffbbfbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4031/IndexProviderImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4031/IndexProviderImpl.java\n@@ -64,8 +64,7 @@ public class IndexProviderImpl implements IndexProvider\n     }\n \n     @Override\n-    public RelationshipIndex getOrCreateRelationshipIndex( String indexName, Map<String,\n-            String> customConfiguration )\n+    public RelationshipIndex getOrCreateRelationshipIndex( String indexName, Map<String,String> customConfiguration )\n     {\n         KernelTransaction ktx = transactionBridge.get();\n         try ( Statement ignore = ktx.acquireStatement() )\n@@ -84,4 +83,4 @@ public class IndexProviderImpl implements IndexProvider\n             throw new ConstraintViolationException( e.getMessage(), e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
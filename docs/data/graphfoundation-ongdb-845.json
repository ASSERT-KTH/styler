{
    "project_name": "graphfoundation-ongdb",
    "error_id": "845",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/845/ParameterisedOutsideWorld.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/845/ParameterisedOutsideWorld.java\nindex b6c44b6141f..303183bdf4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/845/ParameterisedOutsideWorld.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/845/ParameterisedOutsideWorld.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin;\n \n import java.io.Console;\n@@ -34,91 +35,91 @@ import org.neo4j.io.fs.FileSystemAbstraction;\n public class ParameterisedOutsideWorld implements OutsideWorld\n {\n \n-    private final PrintStream stdout;\n-    private final PrintStream stderr;\n-    private final Console console;\n-    private final InputStream stdin;\n-    private final FileSystemAbstraction fileSystemAbstraction;\n-\n-    public ParameterisedOutsideWorld( Console console, OutputStream stdout, OutputStream stderr, InputStream stdin,\n-            FileSystemAbstraction fileSystemAbstraction )\n-    {\n-        this.stdout = new PrintStream( stdout );\n-        this.stderr = new PrintStream( stderr );\n-        this.stdin = stdin;\n-        this.fileSystemAbstraction = fileSystemAbstraction;\n-        this.console = console;\n-    }\n-\n-    @Override\n-    public void stdOutLine( String text )\n-    {\n-        stdout.println( text );\n-    }\n-\n-    @Override\n-    public void stdErrLine( String text )\n-    {\n-        stderr.println( text );\n-    }\n-\n-    @Override\n-    public String readLine()\n-    {\n-        return console.readLine();\n-    }\n-\n-    @Override\n-    public String promptLine( String fmt, Object... args )\n-    {\n-        return console.readLine( fmt, args );\n-    }\n-\n-    @Override\n-    public char[] promptPassword( String fmt, Object... args )\n-    {\n-        return console.readPassword( fmt, args );\n-    }\n-\n-    @Override\n-    public void exit( int status )\n-    {\n-        IOUtils.closeAllSilently( this );\n-    }\n-\n-    @Override\n-    public void printStacktrace( Exception exception )\n-    {\n-        exception.printStackTrace( stderr );\n-    }\n-\n-    @Override\n-    public FileSystemAbstraction fileSystem()\n-    {\n-        return fileSystemAbstraction;\n-    }\n-\n-    @Override\n-    public PrintStream errorStream()\n-    {\n-        return stderr;\n-    }\n-\n-    @Override\n-    public PrintStream outStream()\n-    {\n-        return stdout;\n-    }\n-\n-    @Override\n-    public InputStream inStream()\n-    {\n-        return stdin;\n-    }\n-\n-    @Override\n-    public void close() throws IOException\n-    {\n-        fileSystemAbstraction.close();\n-    }\n+  private final PrintStream stdout;\n+  private final PrintStream stderr;\n+  private final Console console;\n+  private final InputStream stdin;\n+  private final FileSystemAbstraction fileSystemAbstraction;\n+\n+  public ParameterisedOutsideWorld(Console console, OutputStream stdout, OutputStream stderr, InputStream stdin,\n+                                   FileSystemAbstraction fileSystemAbstraction)\n+  {\n+    this.stdout = new PrintStream(stdout);\n+    this.stderr = new PrintStream(stderr);\n+    this.stdin = stdin;\n+    this.fileSystemAbstraction = fileSystemAbstraction;\n+    this.console = console;\n+  }\n+\n+  @Override\n+  public void stdOutLine(String text)\n+  {\n+    stdout.println(text);\n+  }\n+\n+  @Override\n+  public void stdErrLine(String text)\n+  {\n+    stderr.println(text);\n+  }\n+\n+  @Override\n+  public String readLine()\n+  {\n+    return console.readLine();\n+  }\n+\n+  @Override\n+  public String promptLine(String fmt, Object... args)\n+  {\n+    return console.readLine(fmt, args);\n+  }\n+\n+  @Override\n+  public char[] promptPassword(String fmt, Object... args)\n+  {\n+    return console.readPassword(fmt, args);\n+  }\n+\n+  @Override\n+  public void exit(int status)\n+  {\n+    IOUtils.closeAllSilently(this);\n+  }\n+\n+  @Override\n+  public void printStacktrace(Exception exception)\n+  {\n+    exception.printStackTrace(stderr);\n+  }\n+\n+  @Override\n+  public FileSystemAbstraction fileSystem()\n+  {\n+    return fileSystemAbstraction;\n+  }\n+\n+  @Override\n+  public PrintStream errorStream()\n+  {\n+    return stderr;\n+  }\n+\n+  @Override\n+  public PrintStream outStream()\n+  {\n+    return stdout;\n+  }\n+\n+  @Override\n+  public InputStream inStream()\n+  {\n+    return stdin;\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    fileSystemAbstraction.close();\n+  }\n }\n",
            "diff_size": 88
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/845/ParameterisedOutsideWorld.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/845/ParameterisedOutsideWorld.java\nindex b6c44b6141f..51272cbe66c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/845/ParameterisedOutsideWorld.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/845/ParameterisedOutsideWorld.java\n@@ -33,7 +33,6 @@ import org.neo4j.io.fs.FileSystemAbstraction;\n  */\n public class ParameterisedOutsideWorld implements OutsideWorld\n {\n-\n     private final PrintStream stdout;\n     private final PrintStream stderr;\n     private final Console console;\n@@ -121,4 +120,4 @@ public class ParameterisedOutsideWorld implements OutsideWorld\n     {\n         fileSystemAbstraction.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
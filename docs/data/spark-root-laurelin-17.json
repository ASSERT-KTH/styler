{
    "project_name": "spark-root-laurelin",
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "50",
                "column": "40",
                "severity": "warning",
                "message": "'new' has incorrect indentation level 39, expected level should be 40.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                                    .maximumSize(100)\n                                    .build(\n                                       new CacheLoader<DataSourceReaderKey,\n                                                       DataSourceReader>() {\n                                            @Override\n                                            public DataSourceReader load(DataSourceReaderKey key) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler/17/Root.java\nindex bc2fe2d22d5..c23d54fe4ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler/17/Root.java\n@@ -47,7 +47,7 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n                                     .softValues()\n                                     .maximumSize(100)\n                                     .build(\n-                                       new CacheLoader<DataSourceReaderKey,\n+                                        new CacheLoader<DataSourceReaderKey,\n                                                        DataSourceReader>() {\n                                             @Override\n                                             public DataSourceReader load(DataSourceReaderKey key) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/intellij/17/Root.java\nindex bc2fe2d22d5..2c314c56835 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/intellij/17/Root.java\n@@ -42,29 +42,33 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n      * eagerly garbage collected\n      */\n     private static LoadingCache<DataSourceReaderKey,\n-                                DataSourceReader> dedupDataSource =\n-                                    CacheBuilder.newBuilder()\n-                                    .softValues()\n-                                    .maximumSize(100)\n-                                    .build(\n-                                       new CacheLoader<DataSourceReaderKey,\n-                                                       DataSourceReader>() {\n-                                            @Override\n-                                            public DataSourceReader load(DataSourceReaderKey key) {\n-                                                logger.trace(\"Construct new reader\");\n-                                                DataSourceOptions options = new DataSourceOptions(key.options);\n-                                                boolean traceIO = key.traceIO;\n-                                                SparkContext context = key.context;\n-                                                CacheFactory basketCacheFactory = new CacheFactory();\n-                                                if ((traceIO) && (context != null)) {\n-                                                    synchronized (Root.class) {\n-                                                        ioAccum = new CollectionAccumulator<Event.Storage>();\n-                                                        context.register(ioAccum, \"edu.vanderbilt.accre.laurelin.ioprofile\");\n-                                                    }\n-                                                }\n-                                                return new Reader(options, basketCacheFactory, context, ioAccum);\n-                                            }\n-                                            });\n+        DataSourceReader> dedupDataSource =\n+        CacheBuilder.newBuilder()\n+            .softValues()\n+            .maximumSize(100)\n+            .build(\n+                new CacheLoader<DataSourceReaderKey,\n+                    DataSourceReader>() {\n+                    @Override\n+                    public DataSourceReader load(DataSourceReaderKey key) {\n+                        logger.trace(\"Construct new reader\");\n+                        DataSourceOptions options =\n+                            new DataSourceOptions(key.options);\n+                        boolean traceIO = key.traceIO;\n+                        SparkContext context = key.context;\n+                        CacheFactory basketCacheFactory = new CacheFactory();\n+                        if ((traceIO) && (context != null)) {\n+                            synchronized (Root.class) {\n+                                ioAccum =\n+                                    new CollectionAccumulator<Event.Storage>();\n+                                context.register(ioAccum,\n+                                    \"edu.vanderbilt.accre.laurelin.ioprofile\");\n+                            }\n+                        }\n+                        return new Reader(options, basketCacheFactory, context,\n+                            ioAccum);\n+                    }\n+                });\n \n     static class DataSourceReaderKey {\n         @Override\n@@ -76,10 +80,11 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n         public boolean equals(Object obj) {\n             DataSourceReaderKey other = (DataSourceReaderKey) obj;\n             return (context == other.context) && options.equals(other.options)\n-                    && traceIO == other.traceIO;\n+                && traceIO == other.traceIO;\n         }\n \n-        public DataSourceReaderKey(DataSourceOptions options, SparkContext context, boolean traceIO) {\n+        public DataSourceReaderKey(DataSourceOptions options,\n+                                   SparkContext context, boolean traceIO) {\n             this.traceIO = traceIO;\n             this.context = context;\n             this.options = options.asMap();\n@@ -94,6 +99,7 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n     /**\n      * This is called by Spark, unlike the following function that accepts a\n      * SparkContext\n+     *\n      * @param options DS options\n      */\n     @Override\n@@ -103,14 +109,18 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n \n     /**\n      * Used for unit-tests when there is no current spark context\n+     *\n      * @param options DS options\n      * @param context spark context to use\n      * @param traceIO whether or not to trace the IO operations\n      * @return new reader\n      */\n-    public DataSourceReader createReader(DataSourceOptions options, SparkContext context, boolean traceIO) {\n+    public DataSourceReader createReader(DataSourceOptions options,\n+                                         SparkContext context,\n+                                         boolean traceIO) {\n         try {\n-            return dedupDataSource.get(new DataSourceReaderKey(options, context, traceIO));\n+            return dedupDataSource\n+                .get(new DataSourceReaderKey(options, context, traceIO));\n         } catch (ExecutionException e) {\n             throw new RuntimeException(\"Could not load DataSourceReader\", e);\n         }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "column": "49",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 48, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "column": "49",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 48, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "column": "49",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 48, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "column": "49",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 48, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "column": "49",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 48, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "column": "49",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 48, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "column": "53",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 52, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "column": "57",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 56, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "column": "57",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 56, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "53",
                    "severity": "warning",
                    "message": "'synchronized rcurly' has incorrect indentation level 52, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "column": "49",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 48, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "column": "49",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 48, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "column": "45",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 44, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "column": "1",
                    "severity": "warning",
                    "message": "'CLASS_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "62",
                    "column": "1",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/naturalize/17/Root.java\nindex bc2fe2d22d5..520b503bbbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/naturalize/17/Root.java\n@@ -41,15 +41,9 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n      * are transient, we need to make these soft references so they're not\n      * eagerly garbage collected\n      */\n-    private static LoadingCache<DataSourceReaderKey,\n-                                DataSourceReader> dedupDataSource =\n-                                    CacheBuilder.newBuilder()\n-                                    .softValues()\n-                                    .maximumSize(100)\n-                                    .build(\n-                                       new CacheLoader<DataSourceReaderKey,\n-                                                       DataSourceReader>() {\n-                                            @Override\n+    private static LoadingCache<DataSourceReaderKey,DataSourceReader> dedupDataSource = CacheBuilder.newBuilder().softValues().maximumSize(100).build(new CacheLoader<DataSourceReaderKey,DataSourceReader>() {\n+\n+@Override\n                                             public DataSourceReader load(DataSourceReaderKey key) {\n                                                 logger.trace(\"Construct new reader\");\n                                                 DataSourceOptions options = new DataSourceOptions(key.options);\n@@ -64,9 +58,8 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n                                                 }\n                                                 return new Reader(options, basketCacheFactory, context, ioAccum);\n                                             }\n-                                            });\n-\n-    static class DataSourceReaderKey {\n+    });\n+static class DataSourceReaderKey {\n         @Override\n         public int hashCode() {\n             return Objects.hash(context, options, traceIO);\n@@ -75,8 +68,7 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n         @Override\n         public boolean equals(Object obj) {\n             DataSourceReaderKey other = (DataSourceReaderKey) obj;\n-            return (context == other.context) && options.equals(other.options)\n-                    && traceIO == other.traceIO;\n+            return (context == other.context) && options.equals(other.options) && traceIO == other.traceIO;\n         }\n \n         public DataSourceReaderKey(DataSourceOptions options, SparkContext context, boolean traceIO) {\n@@ -121,4 +113,4 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n         return \"root\";\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 7, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'synchronized' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "column": "32",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "34",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 33, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "warning",
                    "message": "'synchronized' child has incorrect indentation level 33, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "warning",
                    "message": "'synchronized rcurly' has incorrect indentation level 7, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "152",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 151, expected level should be one of the following: 4, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "column": "5",
                    "severity": "warning",
                    "message": "'CLASS_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/codebuff/17/Root.java\nindex bc2fe2d22d5..d18d98bd9f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/codebuff/17/Root.java\n@@ -3,7 +3,6 @@ package edu.vanderbilt.accre.laurelin;\n import java.util.Map;\n import java.util.Objects;\n import java.util.concurrent.ExecutionException;\n-\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.apache.spark.SparkContext;\n@@ -13,11 +12,9 @@ import org.apache.spark.sql.sources.v2.DataSourceV2;\n import org.apache.spark.sql.sources.v2.ReadSupport;\n import org.apache.spark.sql.sources.v2.reader.DataSourceReader;\n import org.apache.spark.util.CollectionAccumulator;\n-\n import com.google.common.cache.CacheBuilder;\n import com.google.common.cache.CacheLoader;\n import com.google.common.cache.LoadingCache;\n-\n import edu.vanderbilt.accre.laurelin.cache.CacheFactory;\n import edu.vanderbilt.accre.laurelin.root_proxy.IOProfile.Event;\n import edu.vanderbilt.accre.laurelin.spark_ttree.Reader;\n@@ -41,31 +38,23 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n      * are transient, we need to make these soft references so they're not\n      * eagerly garbage collected\n      */\n-    private static LoadingCache<DataSourceReaderKey,\n-                                DataSourceReader> dedupDataSource =\n-                                    CacheBuilder.newBuilder()\n-                                    .softValues()\n-                                    .maximumSize(100)\n-                                    .build(\n-                                       new CacheLoader<DataSourceReaderKey,\n-                                                       DataSourceReader>() {\n-                                            @Override\n-                                            public DataSourceReader load(DataSourceReaderKey key) {\n-                                                logger.trace(\"Construct new reader\");\n-                                                DataSourceOptions options = new DataSourceOptions(key.options);\n-                                                boolean traceIO = key.traceIO;\n-                                                SparkContext context = key.context;\n-                                                CacheFactory basketCacheFactory = new CacheFactory();\n-                                                if ((traceIO) && (context != null)) {\n-                                                    synchronized (Root.class) {\n-                                                        ioAccum = new CollectionAccumulator<Event.Storage>();\n-                                                        context.register(ioAccum, \"edu.vanderbilt.accre.laurelin.ioprofile\");\n-                                                    }\n-                                                }\n-                                                return new Reader(options, basketCacheFactory, context, ioAccum);\n-                                            }\n-                                            });\n-\n+    private static LoadingCache<DataSourceReaderKey, DataSourceReader> dedupDataSource = CacheBuilder.newBuilder().softValues().maximumSize(100).build(new CacheLoader<DataSourceReaderKey, DataSourceReader>() {\n+@Override\n+public DataSourceReader load(DataSourceReaderKey key) {\n+   logger.trace(\"Construct new reader\");\n+   DataSourceOptions options = new DataSourceOptions(key.options);\n+   boolean traceIO = key.traceIO;\n+   SparkContext context = key.context;\n+   CacheFactory basketCacheFactory = new CacheFactory();\n+   if ((traceIO) && (context != null)) {\n+       synchronized(Root.class ) {\n+                                 ioAccum = new CollectionAccumulator<Event.Storage>();\n+                                 context.register(ioAccum, \"edu.vanderbilt.accre.laurelin.ioprofile\");\n+       }\n+   }\n+   return new Reader(options, basketCacheFactory, context, ioAccum);\n+}\n+                                                                                                                                                       });\n     static class DataSourceReaderKey {\n         @Override\n         public int hashCode() {\n@@ -74,21 +63,20 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n \n         @Override\n         public boolean equals(Object obj) {\n-            DataSourceReaderKey other = (DataSourceReaderKey) obj;\n-            return (context == other.context) && options.equals(other.options)\n-                    && traceIO == other.traceIO;\n+            DataSourceReaderKey other = (DataSourceReaderKey)obj;\n+            return (context == other.context) && options.equals(other.options) && traceIO == other.traceIO;\n         }\n \n         public DataSourceReaderKey(DataSourceOptions options, SparkContext context, boolean traceIO) {\n             this.traceIO = traceIO;\n             this.context = context;\n             this.options = options.asMap();\n-\n         }\n \n         boolean traceIO;\n         SparkContext context;\n         Map<String, String> options;\n+\n     }\n \n     /**\n@@ -96,6 +84,7 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n      * SparkContext\n      * @param options DS options\n      */\n+\n     @Override\n     public DataSourceReader createReader(DataSourceOptions options) {\n         return createReader(options, SparkContext.getOrCreate(), false);\n@@ -108,6 +97,7 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n      * @param traceIO whether or not to trace the IO operations\n      * @return new reader\n      */\n+\n     public DataSourceReader createReader(DataSourceOptions options, SparkContext context, boolean traceIO) {\n         try {\n             return dedupDataSource.get(new DataSourceReaderKey(options, context, traceIO));\n@@ -120,5 +110,4 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n     public String shortName() {\n         return \"root\";\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_random/17/Root.java\nindex bc2fe2d22d5..c23d54fe4ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_random/17/Root.java\n@@ -47,7 +47,7 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n                                     .softValues()\n                                     .maximumSize(100)\n                                     .build(\n-                                       new CacheLoader<DataSourceReaderKey,\n+                                        new CacheLoader<DataSourceReaderKey,\n                                                        DataSourceReader>() {\n                                             @Override\n                                             public DataSourceReader load(DataSourceReaderKey key) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_three_grams/17/Root.java\nindex bc2fe2d22d5..c23d54fe4ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/17/Root.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_three_grams/17/Root.java\n@@ -47,7 +47,7 @@ public class Root implements DataSourceV2, ReadSupport, DataSourceRegister {\n                                     .softValues()\n                                     .maximumSize(100)\n                                     .build(\n-                                       new CacheLoader<DataSourceReaderKey,\n+                                        new CacheLoader<DataSourceReaderKey,\n                                                        DataSourceReader>() {\n                                             @Override\n                                             public DataSourceReader load(DataSourceReaderKey key) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
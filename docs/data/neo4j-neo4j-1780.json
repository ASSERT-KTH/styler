{
    "project_name": "neo4j-neo4j",
    "error_id": "1780",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1780/AdversarialPagedFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1780/AdversarialPagedFile.java\nindex 845c3ff8944..ea6c02468a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1780/AdversarialPagedFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1780/AdversarialPagedFile.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.adversaries.pagecache;\n \n import java.io.IOException;\n@@ -38,28 +39,28 @@ import org.neo4j.io.pagecache.tracing.cursor.PageCursorTracer;\n  * Depending on the adversary each operation can throw either {@link RuntimeException} like {@link SecurityException}\n  * or {@link IOException} like {@link NoSuchFileException}.\n  */\n-@SuppressWarnings( \"unchecked\" )\n+@SuppressWarnings(\"unchecked\")\n public class AdversarialPagedFile implements PagedFile\n {\n     private final PagedFile delegate;\n     private final Adversary adversary;\n \n-    public AdversarialPagedFile( PagedFile delegate, Adversary adversary )\n+    public AdversarialPagedFile(PagedFile delegate, Adversary adversary)\n     {\n-        this.delegate = Objects.requireNonNull( delegate );\n-        this.adversary = Objects.requireNonNull( adversary );\n+        this.delegate = Objects.requireNonNull(delegate);\n+        this.adversary = Objects.requireNonNull(adversary);\n     }\n \n     @Override\n-    public PageCursor io( long pageId, int pf_flags, PageCursorTracer tracer ) throws IOException\n+    public PageCursor io(long pageId, int pf_flags, PageCursorTracer tracer) throws IOException\n     {\n-        adversary.injectFailure( IllegalStateException.class );\n-        PageCursor pageCursor = delegate.io( pageId, pf_flags, tracer );\n-        if ( (pf_flags & PF_SHARED_READ_LOCK) == PF_SHARED_READ_LOCK )\n+        adversary.injectFailure(IllegalStateException.class);\n+        PageCursor pageCursor = delegate.io(pageId, pf_flags, tracer);\n+        if ((pf_flags & PF_SHARED_READ_LOCK) == PF_SHARED_READ_LOCK)\n         {\n-            return new AdversarialReadPageCursor( pageCursor, adversary );\n+            return new AdversarialReadPageCursor(pageCursor, adversary);\n         }\n-        return new AdversarialWritePageCursor( pageCursor, adversary );\n+        return new AdversarialWritePageCursor(pageCursor, adversary);\n     }\n \n     @Override\n@@ -71,7 +72,7 @@ public class AdversarialPagedFile implements PagedFile\n     @Override\n     public long fileSize() throws IOException\n     {\n-        adversary.injectFailure( IllegalStateException.class );\n+        adversary.injectFailure(IllegalStateException.class);\n         return delegate.fileSize();\n     }\n \n@@ -84,35 +85,35 @@ public class AdversarialPagedFile implements PagedFile\n     @Override\n     public void flushAndForce() throws IOException\n     {\n-        adversary.injectFailure( NoSuchFileException.class, IOException.class, SecurityException.class );\n+        adversary.injectFailure(NoSuchFileException.class, IOException.class, SecurityException.class);\n         delegate.flushAndForce();\n     }\n \n     @Override\n-    public void flushAndForce( IOLimiter limiter ) throws IOException\n+    public void flushAndForce(IOLimiter limiter) throws IOException\n     {\n-        adversary.injectFailure( NoSuchFileException.class, IOException.class, SecurityException.class );\n-        delegate.flushAndForce( limiter );\n+        adversary.injectFailure(NoSuchFileException.class, IOException.class, SecurityException.class);\n+        delegate.flushAndForce(limiter);\n     }\n \n     @Override\n     public long getLastPageId() throws IOException\n     {\n-        adversary.injectFailure( IllegalStateException.class );\n+        adversary.injectFailure(IllegalStateException.class);\n         return delegate.getLastPageId();\n     }\n \n     @Override\n     public void close()\n     {\n-        adversary.injectFailure( NoSuchFileException.class, SecurityException.class );\n+        adversary.injectFailure(NoSuchFileException.class, SecurityException.class);\n         delegate.close();\n     }\n \n     @Override\n-    public void setDeleteOnClose( boolean deleteOnClose )\n+    public void setDeleteOnClose(boolean deleteOnClose)\n     {\n-        delegate.setDeleteOnClose( deleteOnClose );\n+        delegate.setDeleteOnClose(deleteOnClose);\n     }\n \n     @Override\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
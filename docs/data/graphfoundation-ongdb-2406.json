{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2406",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2406/LogEntryWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2406/LogEntryWriter.java\nindex 9b12b3515b9..33320bc0ad1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2406/LogEntryWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2406/LogEntryWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.io.IOException;\n@@ -37,91 +38,92 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogEntryVersion.CURREN\n \n public class LogEntryWriter\n {\n-    private final FlushableChannel channel;\n-    private final Visitor<StorageCommand,IOException> serializer;\n-\n-    /**\n-     * Create a writer that uses {@link LogEntryVersion#CURRENT} for versioning.\n-     * @param channel underlying channel\n-     */\n-    public LogEntryWriter( FlushableChannel channel )\n-    {\n-        this.channel = channel;\n-        this.serializer = new StorageCommandSerializer( channel );\n-    }\n-\n-    protected void writeLogEntryHeader( byte type ) throws IOException\n-    {\n-        channel.put( CURRENT.byteCode() ).put( type );\n-    }\n-\n-    public void writeStartEntry( LogEntryStart entry ) throws IOException\n-    {\n-        writeStartEntry( entry.getMasterId(), entry.getLocalId(), entry.getTimeWritten(), entry.getLastCommittedTxWhenTransactionStarted(),\n-                entry.getAdditionalHeader() );\n-    }\n-\n-    public void writeStartEntry( int masterId, int authorId, long timeWritten, long latestCommittedTxWhenStarted,\n-                                 byte[] additionalHeaderData ) throws IOException\n-    {\n-        writeLogEntryHeader( TX_START );\n-        channel.putInt( masterId ).putInt( authorId ).putLong( timeWritten ).putLong( latestCommittedTxWhenStarted )\n-               .putInt( additionalHeaderData.length ).put( additionalHeaderData, additionalHeaderData.length );\n-    }\n-\n-    public void writeCommitEntry( LogEntryCommit entry ) throws IOException\n+  private final FlushableChannel channel;\n+  private final Visitor<StorageCommand, IOException> serializer;\n+\n+  /**\n+   * Create a writer that uses {@link LogEntryVersion#CURRENT} for versioning.\n+   *\n+   * @param channel underlying channel\n+   */\n+  public LogEntryWriter(FlushableChannel channel)\n+  {\n+    this.channel = channel;\n+    this.serializer = new StorageCommandSerializer(channel);\n+  }\n+\n+  protected void writeLogEntryHeader(byte type) throws IOException\n+  {\n+    channel.put(CURRENT.byteCode()).put(type);\n+  }\n+\n+  public void writeStartEntry(LogEntryStart entry) throws IOException\n+  {\n+    writeStartEntry(entry.getMasterId(), entry.getLocalId(), entry.getTimeWritten(), entry.getLastCommittedTxWhenTransactionStarted(),\n+        entry.getAdditionalHeader());\n+  }\n+\n+  public void writeStartEntry(int masterId, int authorId, long timeWritten, long latestCommittedTxWhenStarted,\n+                              byte[] additionalHeaderData) throws IOException\n+  {\n+    writeLogEntryHeader(TX_START);\n+    channel.putInt(masterId).putInt(authorId).putLong(timeWritten).putLong(latestCommittedTxWhenStarted)\n+        .putInt(additionalHeaderData.length).put(additionalHeaderData, additionalHeaderData.length);\n+  }\n+\n+  public void writeCommitEntry(LogEntryCommit entry) throws IOException\n+  {\n+    writeCommitEntry(entry.getTxId(), entry.getTimeWritten());\n+  }\n+\n+  public void writeCommitEntry(long transactionId, long timeWritten) throws IOException\n+  {\n+    writeLogEntryHeader(TX_COMMIT);\n+    channel.putLong(transactionId).putLong(timeWritten);\n+  }\n+\n+  public void serialize(TransactionRepresentation tx) throws IOException\n+  {\n+    tx.accept(serializer);\n+  }\n+\n+  public void serialize(CommittedTransactionRepresentation tx) throws IOException\n+  {\n+    writeStartEntry(tx.getStartEntry());\n+    serialize(tx.getTransactionRepresentation());\n+    writeCommitEntry(tx.getCommitEntry());\n+  }\n+\n+  public void serialize(Collection<StorageCommand> commands) throws IOException\n+  {\n+    for (StorageCommand command : commands)\n     {\n-        writeCommitEntry( entry.getTxId(), entry.getTimeWritten() );\n+      serializer.visit(command);\n     }\n+  }\n \n-    public void writeCommitEntry( long transactionId, long timeWritten ) throws IOException\n-    {\n-        writeLogEntryHeader( TX_COMMIT );\n-        channel.putLong( transactionId ).putLong( timeWritten );\n-    }\n-\n-    public void serialize( TransactionRepresentation tx ) throws IOException\n-    {\n-        tx.accept( serializer );\n-    }\n+  public void writeCheckPointEntry(LogPosition logPosition) throws IOException\n+  {\n+    writeLogEntryHeader(CHECK_POINT);\n+    channel.putLong(logPosition.getLogVersion()).\n+        putLong(logPosition.getByteOffset());\n+  }\n \n-    public void serialize( CommittedTransactionRepresentation tx ) throws IOException\n-    {\n-        writeStartEntry( tx.getStartEntry() );\n-        serialize( tx.getTransactionRepresentation() );\n-        writeCommitEntry( tx.getCommitEntry() );\n-    }\n-\n-    public void serialize( Collection<StorageCommand> commands ) throws IOException\n-    {\n-        for ( StorageCommand command : commands )\n-        {\n-            serializer.visit( command );\n-        }\n-    }\n+  private class StorageCommandSerializer implements Visitor<StorageCommand, IOException>\n+  {\n+    private final FlushableChannel channel;\n \n-    public void writeCheckPointEntry( LogPosition logPosition ) throws IOException\n+    StorageCommandSerializer(FlushableChannel channel)\n     {\n-        writeLogEntryHeader( CHECK_POINT );\n-        channel.putLong( logPosition.getLogVersion() ).\n-                putLong( logPosition.getByteOffset() );\n+      this.channel = channel;\n     }\n \n-    private class StorageCommandSerializer implements Visitor<StorageCommand,IOException>\n+    @Override\n+    public boolean visit(StorageCommand command) throws IOException\n     {\n-        private final FlushableChannel channel;\n-\n-        StorageCommandSerializer( FlushableChannel channel )\n-        {\n-            this.channel = channel;\n-        }\n-\n-        @Override\n-        public boolean visit( StorageCommand command ) throws IOException\n-        {\n-            writeLogEntryHeader( COMMAND );\n-            command.serialize( channel );\n-            return false;\n-        }\n+      writeLogEntryHeader(COMMAND);\n+      command.serialize(channel);\n+      return false;\n     }\n+  }\n }\n",
            "diff_size": 107
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 212).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2406/LogEntryWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2406/LogEntryWriter.java\nindex 9b12b3515b9..dd3af1a2aaf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2406/LogEntryWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2406/LogEntryWriter.java\n@@ -57,16 +57,13 @@ public class LogEntryWriter\n \n     public void writeStartEntry( LogEntryStart entry ) throws IOException\n     {\n-        writeStartEntry( entry.getMasterId(), entry.getLocalId(), entry.getTimeWritten(), entry.getLastCommittedTxWhenTransactionStarted(),\n-                entry.getAdditionalHeader() );\n+        writeStartEntry( entry.getMasterId(), entry.getLocalId(), entry.getTimeWritten(), entry.getLastCommittedTxWhenTransactionStarted(), entry.getAdditionalHeader() );\n     }\n \n-    public void writeStartEntry( int masterId, int authorId, long timeWritten, long latestCommittedTxWhenStarted,\n-                                 byte[] additionalHeaderData ) throws IOException\n-    {\n+    public void writeStartEntry( int masterId, int authorId, long timeWritten, long latestCommittedTxWhenStarted, byte[] additionalHeaderData ) throws IOException\n+{\n         writeLogEntryHeader( TX_START );\n-        channel.putInt( masterId ).putInt( authorId ).putLong( timeWritten ).putLong( latestCommittedTxWhenStarted )\n-               .putInt( additionalHeaderData.length ).put( additionalHeaderData, additionalHeaderData.length );\n+        channel.putInt( masterId ).putInt( authorId ).putLong( timeWritten ).putLong( latestCommittedTxWhenStarted ).putInt( additionalHeaderData.length ).put( additionalHeaderData, additionalHeaderData.length );\n     }\n \n     public void writeCommitEntry( LogEntryCommit entry ) throws IOException\n@@ -103,8 +100,7 @@ public class LogEntryWriter\n     public void writeCheckPointEntry( LogPosition logPosition ) throws IOException\n     {\n         writeLogEntryHeader( CHECK_POINT );\n-        channel.putLong( logPosition.getLogVersion() ).\n-                putLong( logPosition.getByteOffset() );\n+        channel.putLong( logPosition.getLogVersion() ).putLong( logPosition.getByteOffset() );\n     }\n \n     private class StorageCommandSerializer implements Visitor<StorageCommand,IOException>\n@@ -124,4 +120,4 @@ public class LogEntryWriter\n             return false;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
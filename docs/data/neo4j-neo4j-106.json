{
    "project_name": "neo4j-neo4j",
    "error_id": "106",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "104",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/106/FulltextIndexBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/106/FulltextIndexBuilder.java\nindex 43782807559..6c8f16defb5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/106/FulltextIndexBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/106/FulltextIndexBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import org.apache.lucene.analysis.Analyzer;\n@@ -42,10 +43,10 @@ public class FulltextIndexBuilder extends AbstractLuceneIndexBuilder<FulltextInd\n     private boolean populating;\n     private IndexUpdateSink indexUpdateSink = NullIndexUpdateSink.INSTANCE;\n \n-    private FulltextIndexBuilder( IndexDescriptor descriptor, Config config, TokenHolder propertyKeyTokenHolder, Analyzer analyzer,\n-            String[] propertyNames )\n+    private FulltextIndexBuilder(IndexDescriptor descriptor, Config config, TokenHolder propertyKeyTokenHolder, Analyzer analyzer,\n+                                 String[] propertyNames)\n     {\n-        super( config );\n+        super(config);\n         this.descriptor = descriptor;\n         this.analyzer = analyzer;\n         this.propertyNames = propertyNames;\n@@ -55,14 +56,14 @@ public class FulltextIndexBuilder extends AbstractLuceneIndexBuilder<FulltextInd\n     /**\n      * Create new lucene fulltext index builder.\n      *\n-     * @param descriptor The descriptor for this index\n+     * @param descriptor             The descriptor for this index\n      * @param propertyKeyTokenHolder A token holder used to look up property key token names by id.\n      * @return new FulltextIndexBuilder\n      */\n-    public static FulltextIndexBuilder create( IndexDescriptor descriptor, Config config, TokenHolder propertyKeyTokenHolder, Analyzer analyzer,\n-            String[] propertyNames )\n+    public static FulltextIndexBuilder create(IndexDescriptor descriptor, Config config, TokenHolder propertyKeyTokenHolder, Analyzer analyzer,\n+                                              String[] propertyNames)\n     {\n-        return new FulltextIndexBuilder( descriptor, config, propertyKeyTokenHolder, analyzer, propertyNames );\n+        return new FulltextIndexBuilder(descriptor, config, propertyKeyTokenHolder, analyzer, propertyNames);\n     }\n \n     /**\n@@ -72,13 +73,13 @@ public class FulltextIndexBuilder extends AbstractLuceneIndexBuilder<FulltextInd\n      * @param isPopulating {@code true} if the index should be created in a populating mode.\n      * @return this index builder.\n      */\n-    FulltextIndexBuilder withPopulatingMode( boolean isPopulating )\n+    FulltextIndexBuilder withPopulatingMode(boolean isPopulating)\n     {\n         this.populating = isPopulating;\n         return this;\n     }\n \n-    FulltextIndexBuilder withIndexUpdateSink( IndexUpdateSink indexUpdateSink )\n+    FulltextIndexBuilder withIndexUpdateSink(IndexUpdateSink indexUpdateSink)\n     {\n         this.indexUpdateSink = indexUpdateSink;\n         return this;\n@@ -91,28 +92,26 @@ public class FulltextIndexBuilder extends AbstractLuceneIndexBuilder<FulltextInd\n      */\n     public DatabaseIndex<FulltextIndexReader> build()\n     {\n-        if ( isReadOnly() )\n+        if (isReadOnly())\n         {\n             final ReadOnlyIndexPartitionFactory partitionFactory = new ReadOnlyIndexPartitionFactory();\n             LuceneFulltextIndex fulltextIndex =\n-                    new LuceneFulltextIndex( storageBuilder.build(), partitionFactory, descriptor, propertyKeyTokenHolder, config, analyzer, propertyNames );\n-            return new ReadOnlyFulltextIndex( fulltextIndex );\n-        }\n-        else\n+              new LuceneFulltextIndex(storageBuilder.build(), partitionFactory, descriptor, propertyKeyTokenHolder, config, analyzer, propertyNames);\n+            return new ReadOnlyFulltextIndex(fulltextIndex);\n+        } else\n         {\n             Supplier<IndexWriterConfig> writerConfigFactory;\n-            if ( populating )\n+            if (populating)\n             {\n-                writerConfigFactory = () -> IndexWriterConfigs.population( config, analyzer );\n-            }\n-            else\n+                writerConfigFactory = () -> IndexWriterConfigs.population(config, analyzer);\n+            } else\n             {\n-                writerConfigFactory = () -> IndexWriterConfigs.standard( config, analyzer );\n+                writerConfigFactory = () -> IndexWriterConfigs.standard(config, analyzer);\n             }\n-            WritableIndexPartitionFactory partitionFactory = new WritableIndexPartitionFactory( writerConfigFactory );\n+            WritableIndexPartitionFactory partitionFactory = new WritableIndexPartitionFactory(writerConfigFactory);\n             LuceneFulltextIndex fulltextIndex =\n-                    new LuceneFulltextIndex( storageBuilder.build(), partitionFactory, descriptor, propertyKeyTokenHolder, config, analyzer, propertyNames );\n-            return new WritableFulltextIndex( indexUpdateSink, fulltextIndex );\n+              new LuceneFulltextIndex(storageBuilder.build(), partitionFactory, descriptor, propertyKeyTokenHolder, config, analyzer, propertyNames);\n+            return new WritableFulltextIndex(indexUpdateSink, fulltextIndex);\n         }\n     }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
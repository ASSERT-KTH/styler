{
    "project_name": "graphfoundation-ongdb",
    "error_id": "867",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/867/IndexCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/867/IndexCapability.java\nindex 4a50741a300..ae24ec513aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/867/IndexCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/867/IndexCapability.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import org.neo4j.values.storable.ValueCategory;\n@@ -30,62 +31,62 @@ import org.neo4j.values.storable.ValueCategory;\n  */\n public interface IndexCapability\n {\n-    IndexOrder[] ORDER_ASC = {IndexOrder.ASCENDING};\n-    IndexOrder[] ORDER_NONE = new IndexOrder[0];\n-    IndexLimitation[] LIMITIATION_NONE = new IndexLimitation[0];\n+  IndexOrder[] ORDER_ASC = {IndexOrder.ASCENDING};\n+  IndexOrder[] ORDER_NONE = new IndexOrder[0];\n+  IndexLimitation[] LIMITIATION_NONE = new IndexLimitation[0];\n \n-    /**\n-     * What possible orderings is this index capable to provide for a query on given combination of {@link ValueCategory}.\n-     * Ordering of ValueCategory correspond to ordering of related {@link IndexReference#properties()}.\n-     *\n-     * @param valueCategories Ordered array of {@link ValueCategory ValueCategories} for which index should be queried. Note that valueCategory\n-     * must correspond to related {@link IndexReference#properties()}. A {@code null} value in the array\n-     * ({@code new ValueCategory[]{null}}) is interpreted as a wildcard for any {@link ValueCategory}. Note that this is not the same as\n-     * {@code order(null)} which is undefined.\n-     * @return {@link IndexOrder} array containing all possible orderings for provided value categories or empty array if no explicit\n-     * ordering is possible or if length of {@code valueCategories} and {@link IndexReference#properties()} differ.\n-     */\n-    IndexOrder[] orderCapability( ValueCategory... valueCategories );\n+  /**\n+   * What possible orderings is this index capable to provide for a query on given combination of {@link ValueCategory}.\n+   * Ordering of ValueCategory correspond to ordering of related {@link IndexReference#properties()}.\n+   *\n+   * @param valueCategories Ordered array of {@link ValueCategory ValueCategories} for which index should be queried. Note that valueCategory\n+   *                        must correspond to related {@link IndexReference#properties()}. A {@code null} value in the array\n+   *                        ({@code new ValueCategory[]{null}}) is interpreted as a wildcard for any {@link ValueCategory}. Note that this is not the same as\n+   *                        {@code order(null)} which is undefined.\n+   * @return {@link IndexOrder} array containing all possible orderings for provided value categories or empty array if no explicit\n+   * ordering is possible or if length of {@code valueCategories} and {@link IndexReference#properties()} differ.\n+   */\n+  IndexOrder[] orderCapability(ValueCategory... valueCategories);\n \n-    /**\n-     * Is the index capable of providing values for a query on given combination of {@link ValueCategory}.\n-     * Ordering of ValueCategory correspond to ordering of {@code properties} in related {@link IndexReference}.\n-     *\n-     * @param valueCategories Ordered array of {@link ValueCategory ValueCategories} for which index should be queried. Note that valueCategory\n-     * must correspond to related {@link IndexReference#properties()}. {@link ValueCategory#UNKNOWN} can be used as a wildcard for\n-     * any {@link ValueCategory}. Behaviour is undefined for empty {@code null} array and {@code null} values in array.\n-     * @return {@link IndexValueCapability#YES} if index is capable of providing values for query on provided array of value categories,\n-     * {@link IndexValueCapability#NO} if not or {@link IndexValueCapability#PARTIAL} for some results. If length of\n-     * {@code valueCategories} and {@link IndexReference#properties()} differ {@link IndexValueCapability#NO} is returned.\n-     */\n-    IndexValueCapability valueCapability( ValueCategory... valueCategories );\n+  /**\n+   * Is the index capable of providing values for a query on given combination of {@link ValueCategory}.\n+   * Ordering of ValueCategory correspond to ordering of {@code properties} in related {@link IndexReference}.\n+   *\n+   * @param valueCategories Ordered array of {@link ValueCategory ValueCategories} for which index should be queried. Note that valueCategory\n+   *                        must correspond to related {@link IndexReference#properties()}. {@link ValueCategory#UNKNOWN} can be used as a wildcard for\n+   *                        any {@link ValueCategory}. Behaviour is undefined for empty {@code null} array and {@code null} values in array.\n+   * @return {@link IndexValueCapability#YES} if index is capable of providing values for query on provided array of value categories,\n+   * {@link IndexValueCapability#NO} if not or {@link IndexValueCapability#PARTIAL} for some results. If length of\n+   * {@code valueCategories} and {@link IndexReference#properties()} differ {@link IndexValueCapability#NO} is returned.\n+   */\n+  IndexValueCapability valueCapability(ValueCategory... valueCategories);\n \n-    /**\n-     * @return an array of limitations that this index has. It could be anything that planning could look at and\n-     * either try to avoid or issue warning for.\n-     */\n-    default IndexLimitation[] limitations()\n-    {\n-        return LIMITIATION_NONE;\n-    }\n+  /**\n+   * @return an array of limitations that this index has. It could be anything that planning could look at and\n+   * either try to avoid or issue warning for.\n+   */\n+  default IndexLimitation[] limitations()\n+  {\n+    return LIMITIATION_NONE;\n+  }\n \n-    default boolean singleWildcard( ValueCategory[] valueCategories )\n+  default boolean singleWildcard(ValueCategory[] valueCategories)\n+  {\n+    return valueCategories.length == 1 && valueCategories[0] == ValueCategory.UNKNOWN;\n+  }\n+\n+  IndexCapability NO_CAPABILITY = new IndexCapability()\n+  {\n+    @Override\n+    public IndexOrder[] orderCapability(ValueCategory... valueCategories)\n     {\n-        return valueCategories.length == 1 && valueCategories[0] == ValueCategory.UNKNOWN;\n+      return ORDER_NONE;\n     }\n \n-    IndexCapability NO_CAPABILITY = new IndexCapability()\n+    @Override\n+    public IndexValueCapability valueCapability(ValueCategory... valueCategories)\n     {\n-        @Override\n-        public IndexOrder[] orderCapability( ValueCategory... valueCategories )\n-        {\n-            return ORDER_NONE;\n-        }\n-\n-        @Override\n-        public IndexValueCapability valueCapability( ValueCategory... valueCategories )\n-        {\n-            return IndexValueCapability.NO;\n-        }\n-    };\n+      return IndexValueCapability.NO;\n+    }\n+  };\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/867/IndexCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/867/IndexCapability.java\nindex 4a50741a300..afe9996befd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/867/IndexCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/867/IndexCapability.java\n@@ -88,4 +88,4 @@ public interface IndexCapability\n             return IndexValueCapability.NO;\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
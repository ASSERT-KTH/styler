{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3662",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3662/StoreUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3662/StoreUtil.java\nindex 6a2b624a8ec..92c4a1f35e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3662/StoreUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3662/StoreUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com.storecopy;\n \n import org.apache.commons.lang3.StringUtils;\n@@ -35,126 +36,125 @@ import static org.neo4j.io.fs.FileHandle.HANDLE_DELETE;\n \n public class StoreUtil\n {\n-    // Branched directories will end up in <dbStoreDir>/branched/<timestamp>/\n-    public static final String BRANCH_SUBDIRECTORY = \"branched\";\n-    private static final String[] DONT_MOVE_DIRECTORIES = {\"metrics\", \"logs\", \"certificates\"};\n-    public static final String TEMP_COPY_DIRECTORY_NAME = \"temp-copy\";\n-\n-    private static final FileFilter STORE_FILE_FILTER = file ->\n-    {\n-        for ( String directory : DONT_MOVE_DIRECTORIES )\n-        {\n-            if ( file.getName().equals( directory ) )\n-            {\n-                return false;\n-            }\n-        }\n-        return !isBranchedDataRootDirectory( file ) && !isTemporaryCopy( file );\n-    };\n-    private static final FileFilter DEEP_STORE_FILE_FILTER = file ->\n-    {\n-        for ( String directory : DONT_MOVE_DIRECTORIES )\n-        {\n-            if ( file.getPath().contains( directory ) )\n-            {\n-                return false;\n-            }\n-        }\n-        return !isPartOfBranchedDataRootDirectory( file );\n-    };\n-\n-    private StoreUtil()\n+  // Branched directories will end up in <dbStoreDir>/branched/<timestamp>/\n+  public static final String BRANCH_SUBDIRECTORY = \"branched\";\n+  private static final String[] DONT_MOVE_DIRECTORIES = {\"metrics\", \"logs\", \"certificates\"};\n+  public static final String TEMP_COPY_DIRECTORY_NAME = \"temp-copy\";\n+\n+  private static final FileFilter STORE_FILE_FILTER = file ->\n+  {\n+    for (String directory : DONT_MOVE_DIRECTORIES)\n     {\n+      if (file.getName().equals(directory))\n+      {\n+        return false;\n+      }\n     }\n-\n-    public static void cleanStoreDir( File storeDir, PageCache pageCache ) throws IOException\n+    return !isBranchedDataRootDirectory(file) && !isTemporaryCopy(file);\n+  };\n+  private static final FileFilter DEEP_STORE_FILE_FILTER = file ->\n+  {\n+    for (String directory : DONT_MOVE_DIRECTORIES)\n     {\n-        for ( File file : relevantDbFiles( storeDir ) )\n-        {\n-            FileUtils.deleteRecursively( file );\n-        }\n-\n-        pageCache.getCachedFileSystem().streamFilesRecursive( storeDir )\n-                .filter( fh -> DEEP_STORE_FILE_FILTER.accept( fh.getFile() ) ).forEach( HANDLE_DELETE );\n+      if (file.getPath().contains(directory))\n+      {\n+        return false;\n+      }\n     }\n+    return !isPartOfBranchedDataRootDirectory(file);\n+  };\n \n-    public static File newBranchedDataDir( File storeDir )\n+  private StoreUtil()\n+  {\n+  }\n+\n+  public static void cleanStoreDir(File storeDir, PageCache pageCache) throws IOException\n+  {\n+    for (File file : relevantDbFiles(storeDir))\n     {\n-        File result = getBranchedDataDirectory( storeDir, System.currentTimeMillis() );\n-        result.mkdirs();\n-        return result;\n+      FileUtils.deleteRecursively(file);\n     }\n \n-    public static void moveAwayDb( File storeDir, File branchedDataDir, PageCache pageCache ) throws IOException\n-    {\n-        for ( File file : relevantDbFiles( storeDir ) )\n-        {\n-            FileUtils.moveFileToDirectory( file, branchedDataDir );\n-        }\n+    pageCache.getCachedFileSystem().streamFilesRecursive(storeDir)\n+        .filter(fh -> DEEP_STORE_FILE_FILTER.accept(fh.getFile())).forEach(HANDLE_DELETE);\n+  }\n \n-        moveAwayDbWithPageCache( storeDir, branchedDataDir, pageCache, DEEP_STORE_FILE_FILTER );\n-    }\n+  public static File newBranchedDataDir(File storeDir)\n+  {\n+    File result = getBranchedDataDirectory(storeDir, System.currentTimeMillis());\n+    result.mkdirs();\n+    return result;\n+  }\n \n-    public static void moveAwayDbWithPageCache( File from, File to, PageCache pageCache, FileFilter filter )\n+  public static void moveAwayDb(File storeDir, File branchedDataDir, PageCache pageCache) throws IOException\n+  {\n+    for (File file : relevantDbFiles(storeDir))\n     {\n-        final Stream<FileHandle> fileHandleStream;\n-        try\n-        {\n-            fileHandleStream = pageCache.getCachedFileSystem().streamFilesRecursive( from );\n-        }\n-        catch ( IOException e )\n-        {\n-            // Directory does not exist, has possibly been moved with file system previous to this call.\n-            return;\n-        }\n-        final Consumer<FileHandle> handleRename = FileHandle.handleRenameBetweenDirectories( from, to );\n-        fileHandleStream.filter( fh -> filter.accept( fh.getFile() ) ).forEach( handleRename );\n+      FileUtils.moveFileToDirectory(file, branchedDataDir);\n     }\n \n-    public static void deleteRecursive( File storeDir, PageCache pageCache ) throws IOException\n-    {\n-        FileUtils.deleteRecursively( storeDir );\n-        pageCache.getCachedFileSystem().streamFilesRecursive( storeDir ).forEach( HANDLE_DELETE );\n-    }\n+    moveAwayDbWithPageCache(storeDir, branchedDataDir, pageCache, DEEP_STORE_FILE_FILTER);\n+  }\n \n-    public static boolean isBranchedDataDirectory( File file )\n+  public static void moveAwayDbWithPageCache(File from, File to, PageCache pageCache, FileFilter filter)\n+  {\n+    final Stream<FileHandle> fileHandleStream;\n+    try\n     {\n-        return file.isDirectory() && file.getParentFile().getName().equals( BRANCH_SUBDIRECTORY ) &&\n-               StringUtils.isNumeric( file.getName() );\n-    }\n-\n-    public static File getBranchedDataRootDirectory( File storeDir )\n+      fileHandleStream = pageCache.getCachedFileSystem().streamFilesRecursive(from);\n+    } catch (IOException e)\n     {\n-        return new File( storeDir, BRANCH_SUBDIRECTORY );\n+      // Directory does not exist, has possibly been moved with file system previous to this call.\n+      return;\n     }\n-\n-    public static File getBranchedDataDirectory( File storeDir, long timestamp )\n+    final Consumer<FileHandle> handleRename = FileHandle.handleRenameBetweenDirectories(from, to);\n+    fileHandleStream.filter(fh -> filter.accept(fh.getFile())).forEach(handleRename);\n+  }\n+\n+  public static void deleteRecursive(File storeDir, PageCache pageCache) throws IOException\n+  {\n+    FileUtils.deleteRecursively(storeDir);\n+    pageCache.getCachedFileSystem().streamFilesRecursive(storeDir).forEach(HANDLE_DELETE);\n+  }\n+\n+  public static boolean isBranchedDataDirectory(File file)\n+  {\n+    return file.isDirectory() && file.getParentFile().getName().equals(BRANCH_SUBDIRECTORY) &&\n+        StringUtils.isNumeric(file.getName());\n+  }\n+\n+  public static File getBranchedDataRootDirectory(File storeDir)\n+  {\n+    return new File(storeDir, BRANCH_SUBDIRECTORY);\n+  }\n+\n+  public static File getBranchedDataDirectory(File storeDir, long timestamp)\n+  {\n+    return new File(getBranchedDataRootDirectory(storeDir), \"\" + timestamp);\n+  }\n+\n+  public static File[] relevantDbFiles(File storeDir)\n+  {\n+    if (!storeDir.exists())\n     {\n-        return new File( getBranchedDataRootDirectory( storeDir ), \"\" + timestamp );\n+      return new File[0];\n     }\n \n-    public static File[] relevantDbFiles( File storeDir )\n-    {\n-        if ( !storeDir.exists() )\n-        {\n-            return new File[0];\n-        }\n+    return storeDir.listFiles(STORE_FILE_FILTER);\n+  }\n \n-        return storeDir.listFiles( STORE_FILE_FILTER );\n-    }\n+  private static boolean isBranchedDataRootDirectory(File file)\n+  {\n+    return file.isDirectory() && BRANCH_SUBDIRECTORY.equals(file.getName());\n+  }\n \n-    private static boolean isBranchedDataRootDirectory( File file )\n-    {\n-        return file.isDirectory() && BRANCH_SUBDIRECTORY.equals( file.getName() );\n-    }\n+  private static boolean isTemporaryCopy(File file)\n+  {\n+    return file.isDirectory() && file.getName().equals(TEMP_COPY_DIRECTORY_NAME);\n+  }\n \n-    private static boolean isTemporaryCopy( File file )\n-    {\n-        return file.isDirectory() && file.getName().equals( TEMP_COPY_DIRECTORY_NAME );\n-    }\n-\n-    private static boolean isPartOfBranchedDataRootDirectory( File file )\n-    {\n-        return file.getPath().contains( BRANCH_SUBDIRECTORY );\n-    }\n+  private static boolean isPartOfBranchedDataRootDirectory(File file)\n+  {\n+    return file.getPath().contains(BRANCH_SUBDIRECTORY);\n+  }\n }\n",
            "diff_size": 154
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "123",
                    "column": "99",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3662/StoreUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3662/StoreUtil.java\nindex 6a2b624a8ec..3d17aacbc05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3662/StoreUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3662/StoreUtil.java\n@@ -38,7 +38,8 @@ public class StoreUtil\n     // Branched directories will end up in <dbStoreDir>/branched/<timestamp>/\n     public static final String BRANCH_SUBDIRECTORY = \"branched\";\n     private static final String[] DONT_MOVE_DIRECTORIES = {\"metrics\", \"logs\", \"certificates\"};\n-    public static final String TEMP_COPY_DIRECTORY_NAME = \"temp-copy\";\n+\n+public static final String TEMP_COPY_DIRECTORY_NAME = \"temp-copy\";\n \n     private static final FileFilter STORE_FILE_FILTER = file ->\n     {\n@@ -51,7 +52,8 @@ public class StoreUtil\n         }\n         return !isBranchedDataRootDirectory( file ) && !isTemporaryCopy( file );\n     };\n-    private static final FileFilter DEEP_STORE_FILE_FILTER = file ->\n+\n+private static final FileFilter DEEP_STORE_FILE_FILTER = file ->\n     {\n         for ( String directory : DONT_MOVE_DIRECTORIES )\n         {\n@@ -74,8 +76,7 @@ public class StoreUtil\n             FileUtils.deleteRecursively( file );\n         }\n \n-        pageCache.getCachedFileSystem().streamFilesRecursive( storeDir )\n-                .filter( fh -> DEEP_STORE_FILE_FILTER.accept( fh.getFile() ) ).forEach( HANDLE_DELETE );\n+        pageCache.getCachedFileSystem().streamFilesRecursive( storeDir ).filter( fh -> DEEP_STORE_FILE_FILTER.accept( fh.getFile() ) ).forEach( HANDLE_DELETE );\n     }\n \n     public static File newBranchedDataDir( File storeDir )\n@@ -119,8 +120,7 @@ public class StoreUtil\n \n     public static boolean isBranchedDataDirectory( File file )\n     {\n-        return file.isDirectory() && file.getParentFile().getName().equals( BRANCH_SUBDIRECTORY ) &&\n-               StringUtils.isNumeric( file.getName() );\n+        return file.isDirectory() && file.getParentFile().getName().equals( BRANCH_SUBDIRECTORY ) &&StringUtils.isNumeric( file.getName() );\n     }\n \n     public static File getBranchedDataRootDirectory( File storeDir )\n@@ -157,4 +157,4 @@ public class StoreUtil\n     {\n         return file.getPath().contains( BRANCH_SUBDIRECTORY );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "916",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/916/RpcEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/916/RpcEngine.java\nindex 75493ec16ac..dfb8f843e1f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/916/RpcEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/916/RpcEngine.java\n@@ -22,14 +22,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n+ * <p>\n+ * Add shutDown method to fix Angel client exit problem.\n  */\n \n /**\n@@ -51,15 +53,17 @@ public interface RpcEngine {\n \n   /** Construct a client-side proxy object. */\n   VersionedProtocol getProxy(Class<? extends VersionedProtocol> protocol, long clientVersion,\n-      InetSocketAddress addr, Configuration conf, SocketFactory factory, int rpcTimeout,\n-      List<String> addrList4Failover) throws IOException;\n+                             InetSocketAddress addr, Configuration conf, SocketFactory factory,\n+                             int rpcTimeout,\n+                             List<String> addrList4Failover) throws IOException;\n \n   /** Stop this proxy. */\n   void stopProxy(VersionedProtocol proxy);\n \n   /** Construct a server for a protocol implementation instance. */\n   RpcServer getServer(Class<? extends VersionedProtocol> protocol, Object instance,\n-      Class<?>[] ifaces, String bindAddress, int port, Configuration conf) throws IOException;\n+                      Class<?>[] ifaces, String bindAddress, int port, Configuration conf)\n+      throws IOException;\n \n   /** Stop all workers and clear resources */\n   void shutDown();\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/916/RpcEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/916/RpcEngine.java\nindex 75493ec16ac..9734523c6da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/916/RpcEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/916/RpcEngine.java\n@@ -63,4 +63,4 @@ public interface RpcEngine {\n \n   /** Stop all workers and clear resources */\n   void shutDown();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/916/RpcEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/916/RpcEngine.java\nindex 75493ec16ac..e8e00354862 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/916/RpcEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/916/RpcEngine.java\n@@ -39,7 +39,6 @@\n package com.tencent.angel.ipc;\n \n import org.apache.hadoop.conf.Configuration;\n-\n import javax.net.SocketFactory;\n import java.io.IOException;\n import java.net.InetSocketAddress;\n@@ -47,20 +46,29 @@ import java.util.List;\n \n \n /** An RPC implementation. */\n+\n+\n public interface RpcEngine {\n \n   /** Construct a client-side proxy object. */\n-  VersionedProtocol getProxy(Class<? extends VersionedProtocol> protocol, long clientVersion,\n-      InetSocketAddress addr, Configuration conf, SocketFactory factory, int rpcTimeout,\n-      List<String> addrList4Failover) throws IOException;\n+  VersionedProtocol getProxy(\n+    Class<? extends VersionedProtocol> protocol, long clientVersion, InetSocketAddress addr, Configuration conf, SocketFactory factory, int rpcTimeout, List<String> addrList4Failover) throws IOException;\n \n   /** Stop this proxy. */\n+\n+\n   void stopProxy(VersionedProtocol proxy);\n \n   /** Construct a server for a protocol implementation instance. */\n-  RpcServer getServer(Class<? extends VersionedProtocol> protocol, Object instance,\n-      Class<?>[] ifaces, String bindAddress, int port, Configuration conf) throws IOException;\n+\n+\n+  RpcServer getServer(Class<? extends VersionedProtocol> protocol,\n+Object instance,\n+Class<?>[] ifaces,\n+String bindAddress, int port, Configuration conf) throws IOException;\n \n   /** Stop all workers and clear resources */\n+\n+\n   void shutDown();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
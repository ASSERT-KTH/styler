{
    "project_name": "eclipse-ee4j-glassfish",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "92",
                "column": "14",
                "severity": "warning",
                "message": "'if' child has incorrect indentation level 13, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "        ActionReport.ExitCode ec = ActionReport.ExitCode.SUCCESS;\n        if (rs.getMessage() != null){\n             report.setMessage(rs.getMessage());\n        }\n        if (rs.getStatus() == ResourceStatus.FAILURE) {\n            ec = ActionReport.ExitCode.FAILURE;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/3/CreateManagedExecutorService.java\nindex f0ef081990a..34a4eef5ff5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/3/CreateManagedExecutorService.java\n@@ -89,7 +89,7 @@ public class CreateManagedExecutorService extends CreateManagedExecutorServiceBa\n         }\n         ActionReport.ExitCode ec = ActionReport.ExitCode.SUCCESS;\n         if (rs.getMessage() != null){\n-             report.setMessage(rs.getMessage());\n+            report.setMessage(rs.getMessage());\n         }\n         if (rs.getStatus() == ResourceStatus.FAILURE) {\n             ec = ActionReport.ExitCode.FAILURE;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/3/CreateManagedExecutorService.java\nindex f0ef081990a..ce9098c077f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/3/CreateManagedExecutorService.java\n@@ -37,19 +37,22 @@ import java.util.HashMap;\n \n /**\n  * Create Managed Executor Service Command\n- *\n  */\n-@TargetType(value={CommandTarget.DAS, CommandTarget.DOMAIN, CommandTarget.CLUSTER, CommandTarget.STANDALONE_INSTANCE })\n+@TargetType(value = {CommandTarget.DAS, CommandTarget.DOMAIN, CommandTarget.CLUSTER,\n+    CommandTarget.STANDALONE_INSTANCE})\n @ExecuteOn(RuntimeType.ALL)\n-@Service(name=\"create-managed-executor-service\")\n+@Service(name = \"create-managed-executor-service\")\n @PerLookup\n @I18n(\"create.managed.executor.service\")\n-public class CreateManagedExecutorService extends CreateManagedExecutorServiceBase implements AdminCommand {\n+public class CreateManagedExecutorService extends CreateManagedExecutorServiceBase\n+    implements AdminCommand {\n \n-    @Param(name=\"maximumpoolsize\", alias=\"maximumPoolSize\", defaultValue=\"\"+Integer.MAX_VALUE, optional=true)\n+    @Param(name = \"maximumpoolsize\", alias = \"maximumPoolSize\", defaultValue = \"\" +\n+        Integer.MAX_VALUE, optional = true)\n     private Integer maximumpoolsize;\n \n-    @Param(name=\"taskqueuecapacity\", alias=\"taskQueueCapacity\", defaultValue=\"\"+Integer.MAX_VALUE, optional=true)\n+    @Param(name = \"taskqueuecapacity\", alias = \"taskQueueCapacity\", defaultValue = \"\" +\n+        Integer.MAX_VALUE, optional = true)\n     private Integer taskqueuecapacity;\n \n     @Inject\n@@ -65,6 +68,7 @@ public class CreateManagedExecutorService extends CreateManagedExecutorServiceBa\n         attrList.put(ResourceConstants.TASK_QUEUE_CAPACITY,\n             taskqueuecapacity.toString());\n     }\n+\n     /**\n      * Executes the command with the command parameters passed as Properties\n      * where the keys are the paramter names and the values the parameter values\n@@ -80,21 +84,24 @@ public class CreateManagedExecutorService extends CreateManagedExecutorServiceBa\n         ResourceStatus rs;\n \n         try {\n-            rs = managedExecutorServiceMgr.create(domain.getResources(), attrList, properties, target);\n-        } catch(Exception e) {\n-            report.setMessage(localStrings.getLocalString(\"create.managed.executor.service.failed\", \"Managed executor service {0} creation failed\", jndiName));\n+            rs = managedExecutorServiceMgr\n+                .create(domain.getResources(), attrList, properties, target);\n+        } catch (Exception e) {\n+            report.setMessage(localStrings.getLocalString(\"create.managed.executor.service.failed\",\n+                \"Managed executor service {0} creation failed\", jndiName));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n             report.setFailureCause(e);\n             return;\n         }\n         ActionReport.ExitCode ec = ActionReport.ExitCode.SUCCESS;\n-        if (rs.getMessage() != null){\n-             report.setMessage(rs.getMessage());\n+        if (rs.getMessage() != null) {\n+            report.setMessage(rs.getMessage());\n         }\n         if (rs.getStatus() == ResourceStatus.FAILURE) {\n             ec = ActionReport.ExitCode.FAILURE;\n-            if (rs.getException() != null)\n+            if (rs.getException() != null) {\n                 report.setFailureCause(rs.getException());\n+            }\n         }\n         report.setActionExitCode(ec);\n     }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "92",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "column": "1",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/3/CreateManagedExecutorService.java\nindex f0ef081990a..bf5cd3b991d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/3/CreateManagedExecutorService.java\n@@ -89,13 +89,14 @@ public class CreateManagedExecutorService extends CreateManagedExecutorServiceBa\n         }\n         ActionReport.ExitCode ec = ActionReport.ExitCode.SUCCESS;\n         if (rs.getMessage() != null){\n-             report.setMessage(rs.getMessage());\n-        }\n-        if (rs.getStatus() == ResourceStatus.FAILURE) {\n+    report.setMessage(rs.getMessage());\n+    }\n+\n+if (rs.getStatus() == ResourceStatus.FAILURE) {\n             ec = ActionReport.ExitCode.FAILURE;\n             if (rs.getException() != null)\n                 report.setFailureCause(rs.getException());\n         }\n         report.setActionExitCode(ec);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_random/3/CreateManagedExecutorService.java\nindex f0ef081990a..34a4eef5ff5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_random/3/CreateManagedExecutorService.java\n@@ -89,7 +89,7 @@ public class CreateManagedExecutorService extends CreateManagedExecutorServiceBa\n         }\n         ActionReport.ExitCode ec = ActionReport.ExitCode.SUCCESS;\n         if (rs.getMessage() != null){\n-             report.setMessage(rs.getMessage());\n+            report.setMessage(rs.getMessage());\n         }\n         if (rs.getStatus() == ResourceStatus.FAILURE) {\n             ec = ActionReport.ExitCode.FAILURE;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/3/CreateManagedExecutorService.java\nindex f0ef081990a..34a4eef5ff5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/3/CreateManagedExecutorService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/3/CreateManagedExecutorService.java\n@@ -89,7 +89,7 @@ public class CreateManagedExecutorService extends CreateManagedExecutorServiceBa\n         }\n         ActionReport.ExitCode ec = ActionReport.ExitCode.SUCCESS;\n         if (rs.getMessage() != null){\n-             report.setMessage(rs.getMessage());\n+            report.setMessage(rs.getMessage());\n         }\n         if (rs.getStatus() == ResourceStatus.FAILURE) {\n             ec = ActionReport.ExitCode.FAILURE;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
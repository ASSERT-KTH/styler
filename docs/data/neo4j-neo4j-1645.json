{
    "project_name": "neo4j-neo4j",
    "error_id": "1645",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "116",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1645/BaseGetRoutingTableProcedure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1645/BaseGetRoutingTableProcedure.java\nindex d5e77a07a08..c5bd6b5f5ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1645/BaseGetRoutingTableProcedure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1645/BaseGetRoutingTableProcedure.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.builtin.routing;\n \n import java.util.List;\n@@ -63,12 +64,12 @@ public abstract class BaseGetRoutingTableProcedure implements CallableProcedure\n     protected final Config config;\n     protected final Log log;\n \n-    protected BaseGetRoutingTableProcedure( List<String> namespace, DatabaseManager<?> databaseManager, Config config, LogProvider logProvider )\n+    protected BaseGetRoutingTableProcedure(List<String> namespace, DatabaseManager<?> databaseManager, Config config, LogProvider logProvider)\n     {\n-        this.signature = buildSignature( namespace );\n+        this.signature = buildSignature(namespace);\n         this.databaseManager = databaseManager;\n         this.config = config;\n-        this.log = logProvider.getLog( getClass() );\n+        this.log = logProvider.getLog(getClass());\n     }\n \n     @Override\n@@ -78,98 +79,94 @@ public abstract class BaseGetRoutingTableProcedure implements CallableProcedure\n     }\n \n     @Override\n-    public final RawIterator<AnyValue[],ProcedureException> apply( Context ctx, AnyValue[] input, ResourceTracker resourceTracker ) throws ProcedureException\n+    public final RawIterator<AnyValue[], ProcedureException> apply(Context ctx, AnyValue[] input, ResourceTracker resourceTracker) throws ProcedureException\n     {\n-        var databaseId = extractDatabaseId( input );\n+        var databaseId = extractDatabaseId(input);\n \n-        var routingContext = extractRoutingContext( input );\n+        var routingContext = extractRoutingContext(input);\n \n-        var result = invoke( databaseId, routingContext );\n-        log.debug( \"Routing result for database %s and routing context %s is %s\", databaseId, routingContext, result );\n-        assertRoutingResultNotEmpty( result, databaseId );\n+        var result = invoke(databaseId, routingContext);\n+        log.debug(\"Routing result for database %s and routing context %s is %s\", databaseId, routingContext, result);\n+        assertRoutingResultNotEmpty(result, databaseId);\n \n-        return RawIterator.<AnyValue[],ProcedureException>of( RoutingResultFormat.build( result ) );\n+        return RawIterator.<AnyValue[], ProcedureException>of(RoutingResultFormat.build(result));\n     }\n \n     protected abstract String description();\n \n-    protected abstract RoutingResult invoke( NamedDatabaseId namedDatabaseId, MapValue routingContext ) throws ProcedureException;\n+    protected abstract RoutingResult invoke(NamedDatabaseId namedDatabaseId, MapValue routingContext) throws ProcedureException;\n \n-    Optional<Database> getDatabase( NamedDatabaseId databaseId )\n+    Optional<Database> getDatabase(NamedDatabaseId databaseId)\n     {\n-        return databaseManager.getDatabaseContext( databaseId ).map( DatabaseContext::database );\n+        return databaseManager.getDatabaseContext(databaseId).map(DatabaseContext::database);\n     }\n \n-    private NamedDatabaseId extractDatabaseId( AnyValue[] input ) throws ProcedureException\n+    private NamedDatabaseId extractDatabaseId(AnyValue[] input) throws ProcedureException\n     {\n         var arg = input[1];\n         final String databaseName;\n-        if ( arg == Values.NO_VALUE )\n+        if (arg == Values.NO_VALUE)\n         {\n-            databaseName = config.get( default_database );\n-        }\n-        else if ( arg instanceof TextValue )\n+            databaseName = config.get(default_database);\n+        } else if (arg instanceof TextValue)\n         {\n             databaseName = ((TextValue) arg).stringValue();\n-        }\n-        else\n+        } else\n         {\n-            throw new IllegalArgumentException( \"Illegal database name argument \" + arg );\n+            throw new IllegalArgumentException(\"Illegal database name argument \" + arg);\n         }\n         return databaseManager.databaseIdRepository()\n-                .getByName( databaseName )\n-                .orElseThrow( () -> databaseNotFoundException( databaseName ) );\n+          .getByName(databaseName)\n+          .orElseThrow(() -> databaseNotFoundException(databaseName));\n     }\n \n-    private void assertDatabaseExists( NamedDatabaseId namedDatabaseId ) throws ProcedureException\n+    private void assertDatabaseExists(NamedDatabaseId namedDatabaseId) throws ProcedureException\n     {\n-        databaseManager.databaseIdRepository().getById( namedDatabaseId.databaseId() )\n-                       .orElseThrow( () -> databaseNotFoundException( namedDatabaseId.name() ) );\n+        databaseManager.databaseIdRepository().getById(namedDatabaseId.databaseId())\n+          .orElseThrow(() -> databaseNotFoundException(namedDatabaseId.name()));\n     }\n \n-    private void assertRoutingResultNotEmpty( RoutingResult result, NamedDatabaseId namedDatabaseId ) throws ProcedureException\n+    private void assertRoutingResultNotEmpty(RoutingResult result, NamedDatabaseId namedDatabaseId) throws ProcedureException\n     {\n-        if ( result.containsNoEndpoints() )\n+        if (result.containsNoEndpoints())\n         {\n-            assertDatabaseExists( namedDatabaseId );\n-            throw new ProcedureException( DatabaseUnavailable, \"Routing table for database \" + namedDatabaseId.name() + \" is empty\" );\n+            assertDatabaseExists(namedDatabaseId);\n+            throw new ProcedureException(DatabaseUnavailable, \"Routing table for database \" + namedDatabaseId.name() + \" is empty\");\n         }\n     }\n \n-    private static MapValue extractRoutingContext( AnyValue[] input )\n+    private static MapValue extractRoutingContext(AnyValue[] input)\n     {\n         var arg = input[0];\n-        if ( arg == Values.NO_VALUE )\n+        if (arg == Values.NO_VALUE)\n         {\n             return MapValue.EMPTY;\n-        }\n-        else if ( arg instanceof MapValue )\n+        } else if (arg instanceof MapValue)\n         {\n             return (MapValue) arg;\n-        }\n-        else\n+        } else\n         {\n-            throw new IllegalArgumentException( \"Illegal routing context argument \" + arg );\n+            throw new IllegalArgumentException(\"Illegal routing context argument \" + arg);\n         }\n     }\n \n-    private ProcedureSignature buildSignature( List<String> namespace )\n+    private ProcedureSignature buildSignature(List<String> namespace)\n     {\n-        return procedureSignature( new QualifiedName( namespace, NAME ) )\n-                .in( CONTEXT.parameterName(), Neo4jTypes.NTMap )\n-                .in( DATABASE.parameterName(), Neo4jTypes.NTString, nullValue( Neo4jTypes.NTString ) )\n-                .out( TTL.parameterName(), Neo4jTypes.NTInteger )\n-                .out( SERVERS.parameterName(), Neo4jTypes.NTList( Neo4jTypes.NTMap ) )\n-                .mode( Mode.DBMS )\n-                .description( description() )\n-                .systemProcedure()\n-                .allowExpiredCredentials()\n-                .build();\n+        return procedureSignature(new QualifiedName(namespace, NAME))\n+          .in(CONTEXT.parameterName(), Neo4jTypes.NTMap)\n+          .in(DATABASE.parameterName(), Neo4jTypes.NTString, nullValue(Neo4jTypes.NTString))\n+          .out(TTL.parameterName(), Neo4jTypes.NTInteger)\n+          .out(SERVERS.parameterName(), Neo4jTypes.NTList(Neo4jTypes.NTMap))\n+          .mode(Mode.DBMS)\n+          .description(description())\n+          .systemProcedure()\n+          .allowExpiredCredentials()\n+          .build();\n     }\n \n-    static ProcedureException databaseNotFoundException( String databaseName )\n+    static ProcedureException databaseNotFoundException(String databaseName)\n     {\n-        return new ProcedureException( DatabaseNotFound,\n-                \"Unable to get a routing table for database '\" + databaseName + \"' because this database does not exist\" );\n+        return new ProcedureException(DatabaseNotFound,\n+          \"Unable to get a routing table for database '\" + databaseName + \"' because this database does not exist\");\n     }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1645/BaseGetRoutingTableProcedure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1645/BaseGetRoutingTableProcedure.java\nindex d5e77a07a08..5521c8b0d54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1645/BaseGetRoutingTableProcedure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1645/BaseGetRoutingTableProcedure.java\n@@ -172,4 +172,4 @@ public abstract class BaseGetRoutingTableProcedure implements CallableProcedure\n         return new ProcedureException( DatabaseNotFound,\n                 \"Unable to get a routing table for database '\" + databaseName + \"' because this database does not exist\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
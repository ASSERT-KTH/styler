{
    "project_name": "neo4j-neo4j",
    "error_id": "156",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/156/LogHeaderReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/156/LogHeaderReader.java\nindex 33e0eba42ac..1d211b02116 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/156/LogHeaderReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/156/LogHeaderReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.io.IOException;\n@@ -43,17 +44,17 @@ public final class LogHeaderReader\n     {\n     }\n \n-    public static LogHeader readLogHeader( FileSystemAbstraction fileSystem, Path file, MemoryTracker memoryTracker ) throws IOException\n+    public static LogHeader readLogHeader(FileSystemAbstraction fileSystem, Path file, MemoryTracker memoryTracker) throws IOException\n     {\n-        return readLogHeader( fileSystem, file, true, memoryTracker );\n+        return readLogHeader(fileSystem, file, true, memoryTracker);\n     }\n \n-    public static LogHeader readLogHeader( FileSystemAbstraction fileSystem, Path file, boolean strict, MemoryTracker memoryTracker ) throws IOException\n+    public static LogHeader readLogHeader(FileSystemAbstraction fileSystem, Path file, boolean strict, MemoryTracker memoryTracker) throws IOException\n     {\n-        try ( StoreChannel channel = fileSystem.read( file );\n-              var scopedBuffer = new HeapScopedBuffer( CURRENT_FORMAT_LOG_HEADER_SIZE, memoryTracker ) )\n+        try (StoreChannel channel = fileSystem.read(file);\n+             var scopedBuffer = new HeapScopedBuffer(CURRENT_FORMAT_LOG_HEADER_SIZE, memoryTracker))\n         {\n-            return readLogHeader( scopedBuffer.getBuffer(), channel, strict, file );\n+            return readLogHeader(scopedBuffer.getBuffer(), channel, strict, file);\n         }\n     }\n \n@@ -61,82 +62,83 @@ public final class LogHeaderReader\n      * Reads the header of a log. Data will be read from {@code channel} using supplied {@code buffer}\n      * as to allow more controlled allocation.\n      *\n-     * @param buffer {@link ByteBuffer} to read into. Passed in to allow control over allocation.\n-     * @param channel {@link ReadableByteChannel} to read from, typically a channel over a file containing the data.\n-     * @param strict if {@code true} then will fail with {@link IncompleteLogHeaderException} on incomplete\n-     * header, i.e. if there's not enough data in the channel to even read the header. If {@code false} then\n-     * the return value will instead be {@code null}.\n+     * @param buffer                                  {@link ByteBuffer} to read into. Passed in to allow control over allocation.\n+     * @param channel                                 {@link ReadableByteChannel} to read from, typically a channel over a file containing the data.\n+     * @param strict                                  if {@code true} then will fail with {@link IncompleteLogHeaderException} on incomplete\n+     *                                                header, i.e. if there's not enough data in the channel to even read the header. If {@code false} then\n+     *                                                the return value will instead be {@code null}.\n      * @param fileForAdditionalErrorInformationOrNull when in {@code strict} mode the exception can be\n-     * amended with information about which file the channel represents, if any. Purely for better forensics\n-     * ability.\n+     *                                                amended with information about which file the channel represents, if any. Purely for better forensics\n+     *                                                ability.\n      * @return {@link LogHeader} containing the log header data from the {@code channel}.\n-     * @throws IOException if unable to read from {@code channel}\n+     * @throws IOException                  if unable to read from {@code channel}\n      * @throws IncompleteLogHeaderException if {@code strict} and not enough data could be read\n      */\n-    public static LogHeader readLogHeader( ByteBuffer buffer, ReadableByteChannel channel, boolean strict,\n-            Path fileForAdditionalErrorInformationOrNull ) throws IOException\n+    public static LogHeader readLogHeader(ByteBuffer buffer, ReadableByteChannel channel, boolean strict,\n+                                          Path fileForAdditionalErrorInformationOrNull) throws IOException\n     {\n         // Decode first part of the header that contains the version\n-        if ( !safeRead( buffer, channel, LOG_HEADER_VERSION_SIZE, strict, fileForAdditionalErrorInformationOrNull ) )\n+        if (!safeRead(buffer, channel, LOG_HEADER_VERSION_SIZE, strict, fileForAdditionalErrorInformationOrNull))\n         {\n             return null;\n         }\n \n         long encodedLogVersions = buffer.getLong();\n-        if ( encodedLogVersions == 0 )\n+        if (encodedLogVersions == 0)\n         {\n             // Since the format version is a non-zero number, we know we are reading a pre-allocated file\n             return null;\n         }\n \n-        byte logFormatVersion = decodeLogFormatVersion( encodedLogVersions );\n-        long logVersion = decodeLogVersion( encodedLogVersions );\n+        byte logFormatVersion = decodeLogFormatVersion(encodedLogVersions);\n+        long logVersion = decodeLogVersion(encodedLogVersions);\n \n         // The header's total length differs from versions\n-        if ( logFormatVersion == LOG_VERSION_3_5 )\n+        if (logFormatVersion == LOG_VERSION_3_5)\n         {\n-            if ( !safeRead( buffer, channel, Long.BYTES, strict, fileForAdditionalErrorInformationOrNull ) )\n+            if (!safeRead(buffer, channel, Long.BYTES, strict, fileForAdditionalErrorInformationOrNull))\n             {\n                 return null;\n             }\n             long previousCommittedTx = buffer.getLong();\n-            return new LogHeader( logFormatVersion, logVersion, previousCommittedTx, LOG_HEADER_SIZE_3_5 );\n+            return new LogHeader(logFormatVersion, logVersion, previousCommittedTx, LOG_HEADER_SIZE_3_5);\n         }\n-        if ( logFormatVersion == LOG_VERSION_4_0 )\n+        if (logFormatVersion == LOG_VERSION_4_0)\n         {\n-            if ( !safeRead( buffer, channel, LOG_HEADER_SIZE_4_0 - LOG_HEADER_VERSION_SIZE, strict, fileForAdditionalErrorInformationOrNull ) )\n+            if (!safeRead(buffer, channel, LOG_HEADER_SIZE_4_0 - LOG_HEADER_VERSION_SIZE, strict, fileForAdditionalErrorInformationOrNull))\n             {\n                 return null;\n             }\n             long previousCommittedTx = buffer.getLong();\n-            StoreId storeId = new StoreId( buffer.getLong(), buffer.getLong(), buffer.getLong(), buffer.getLong(), buffer.getLong() );\n+            StoreId storeId = new StoreId(buffer.getLong(), buffer.getLong(), buffer.getLong(), buffer.getLong(), buffer.getLong());\n             buffer.getLong(); // reserved\n-            return new LogHeader( logFormatVersion, logVersion, previousCommittedTx, storeId, LOG_HEADER_SIZE_4_0 );\n+            return new LogHeader(logFormatVersion, logVersion, previousCommittedTx, storeId, LOG_HEADER_SIZE_4_0);\n         }\n \n-        throw new IOException( \"Unrecognized transaction log format version: \" + logFormatVersion );\n+        throw new IOException(\"Unrecognized transaction log format version: \" + logFormatVersion);\n     }\n \n     /**\n      * Try to read the {@code size} of bytes, and throw if {@code strict} is true.\n+     *\n      * @return true if all of the bytes were successfully read.\n      */\n-    private static boolean safeRead( ByteBuffer buffer, ReadableByteChannel channel, int size, boolean strict,\n-            Path fileForAdditionalErrorInformationOrNull )\n-            throws IOException\n+    private static boolean safeRead(ByteBuffer buffer, ReadableByteChannel channel, int size, boolean strict,\n+                                    Path fileForAdditionalErrorInformationOrNull)\n+      throws IOException\n     {\n         buffer.clear();\n-        buffer.limit( size );\n-        int read = channel.read( buffer );\n-        if ( read != size )\n+        buffer.limit(size);\n+        int read = channel.read(buffer);\n+        if (read != size)\n         {\n-            if ( strict )\n+            if (strict)\n             {\n-                if ( fileForAdditionalErrorInformationOrNull != null )\n+                if (fileForAdditionalErrorInformationOrNull != null)\n                 {\n-                    throw new IncompleteLogHeaderException( fileForAdditionalErrorInformationOrNull, read, size );\n+                    throw new IncompleteLogHeaderException(fileForAdditionalErrorInformationOrNull, read, size);\n                 }\n-                throw new IncompleteLogHeaderException( read, size );\n+                throw new IncompleteLogHeaderException(read, size);\n             }\n             return false;\n         }\n@@ -144,12 +146,12 @@ public final class LogHeaderReader\n         return true;\n     }\n \n-    static long decodeLogVersion( long encLogVersion )\n+    static long decodeLogVersion(long encLogVersion)\n     {\n         return encLogVersion & 0x00FF_FFFF_FFFF_FFFFL;\n     }\n \n-    static byte decodeLogFormatVersion( long encLogVersion )\n+    static byte decodeLogFormatVersion(long encLogVersion)\n     {\n         return (byte) ((encLogVersion >> 56) & 0xFF);\n     }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
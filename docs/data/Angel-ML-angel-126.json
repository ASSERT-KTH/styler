{
    "project_name": "Angel-ML-angel",
    "error_id": "126",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/126/DotPartitionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/126/DotPartitionResult.java\nindex 16663cb28d3..0949316b1b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/126/DotPartitionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/126/DotPartitionResult.java\n@@ -29,12 +29,13 @@ public class DotPartitionResult extends PartitionGetResult {\n     this.values = values;\n   }\n \n-  public DotPartitionResult() {}\n+  public DotPartitionResult() {\n+  }\n \n   @Override\n   public void serialize(ByteBuf buf) {\n     buf.writeInt(values.length);\n-    for (int i = 0; i < values.length; i ++) buf.writeFloat(values[i]);\n+    for (int i = 0; i < values.length; i++) buf.writeFloat(values[i]);\n   }\n \n   @Override\n@@ -50,7 +51,7 @@ public class DotPartitionResult extends PartitionGetResult {\n   }\n \n   public void merge(float[] result) {\n-    for (int c = 0; c < result.length; c ++) result[c] += buf.readFloat();\n+    for (int c = 0; c < result.length; c++) result[c] += buf.readFloat();\n   }\n \n   public void clear() {\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/126/DotPartitionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/126/DotPartitionResult.java\nindex 16663cb28d3..494f53b5f9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/126/DotPartitionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/126/DotPartitionResult.java\n@@ -56,4 +56,4 @@ public class DotPartitionResult extends PartitionGetResult {\n   public void clear() {\n     buf.release();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/126/DotPartitionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/126/DotPartitionResult.java\nindex 16663cb28d3..7f477ef0036 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/126/DotPartitionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/126/DotPartitionResult.java\n@@ -21,7 +21,10 @@ import com.tencent.angel.ml.matrix.psf.get.base.PartitionGetResult;\n import io.netty.buffer.ByteBuf;\n \n public class DotPartitionResult extends PartitionGetResult {\n+\n   float[] values;\n+\n+\n   int length;\n   ByteBuf buf;\n \n@@ -34,7 +37,8 @@ public class DotPartitionResult extends PartitionGetResult {\n   @Override\n   public void serialize(ByteBuf buf) {\n     buf.writeInt(values.length);\n-    for (int i = 0; i < values.length; i ++) buf.writeFloat(values[i]);\n+    for (int i = 0; i < values.length; i++)\n+      buf.writeFloat(values[i]);\n   }\n \n   @Override\n@@ -50,10 +54,11 @@ public class DotPartitionResult extends PartitionGetResult {\n   }\n \n   public void merge(float[] result) {\n-    for (int c = 0; c < result.length; c ++) result[c] += buf.readFloat();\n+    for (int c = 0; c < result.length; c++)\n+      result[c] += buf.readFloat();\n   }\n \n   public void clear() {\n     buf.release();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
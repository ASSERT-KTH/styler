{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "56",
    "information": {
        "errors": [
            {
                "line": "23",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 99).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * A serializer of JSON structures.\n *\n * <p>Not thet this serializer doesn't parse the JSON, it just enables handling the input String as\n * already serialized JSON type.\n */\npublic class JsonSerializer implements ValueSerializerFactory {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/56/JsonSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/56/JsonSerializer.java\nindex 785417575ef..8301e8c39db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/56/JsonSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/56/JsonSerializer.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.scheme;\n \n import java.net.URI;\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/56/JsonSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/56/JsonSerializer.java\nindex 785417575ef..900fd3ade94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/56/JsonSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/56/JsonSerializer.java\n@@ -61,4 +61,4 @@ public class JsonSerializer implements ValueSerializerFactory {\n   public String getClassName(URI specifier) {\n     return String.class.getName();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/56/JsonSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/56/JsonSerializer.java\nindex 785417575ef..4be5ed1da0f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/56/JsonSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/56/JsonSerializer.java\n@@ -23,6 +23,8 @@ import java.net.URI;\n  * <p>Not thet this serializer doesn't parse the JSON, it just enables handling the input String as\n  * already serialized JSON type.\n  */\n+\n+\n public class JsonSerializer implements ValueSerializerFactory {\n \n   private static final long serialVersionUID = 1L;\n@@ -36,29 +38,29 @@ public class JsonSerializer implements ValueSerializerFactory {\n   @Override\n   public <T> ValueSerializer<T> getValueSerializer(URI specifier) {\n     return (ValueSerializer<T>)\n-        new StringUtf8Serializer.StringValueSerializer() {\n+      new StringUtf8Serializer.StringValueSerializer() {\n \n-          private static final long serialVersionUID = 1L;\n+        private static final long serialVersionUID = 1L;\n \n-          @Override\n-          public String getDefault() {\n-            return \"{}\";\n-          }\n+        @Override\n+        public String getDefault() {\n+          return \"{}\";\n+        }\n \n-          @Override\n-          public String asJsonValue(String value) {\n-            return value;\n-          }\n+        @Override\n+        public String asJsonValue(String value) {\n+          return value;\n+        }\n \n-          @Override\n-          public String fromJsonValue(String json) {\n-            return json;\n-          }\n-        };\n+        @Override\n+        public String fromJsonValue(String json) {\n+          return json;\n+        }\n+      };\n   }\n \n   @Override\n   public String getClassName(URI specifier) {\n     return String.class.getName();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
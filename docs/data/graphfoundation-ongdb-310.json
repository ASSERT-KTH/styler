{
    "project_name": "graphfoundation-ongdb",
    "error_id": "310",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "210",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "214",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "222",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/310/TransactionLogFiles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/310/TransactionLogFiles.java\nindex 87745d01b10..43197811ab1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/310/TransactionLogFiles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/310/TransactionLogFiles.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.files;\n \n import java.io.File;\n@@ -49,280 +50,277 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogVersions.CURRENT_LO\n  */\n public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n {\n-    public static final String DEFAULT_NAME = \"neostore.transaction.db\";\n-    public static final FilenameFilter DEFAULT_FILENAME_FILTER = TransactionLogFilesHelper.DEFAULT_FILENAME_FILTER;\n-    private static final File[] EMPTY_FILES_ARRAY = {};\n-\n-    private final TransactionLogFilesContext logFilesContext;\n-    private final TransactionLogFileInformation logFileInformation;\n-\n-    private final LogHeaderCache logHeaderCache;\n-    private final FileSystemAbstraction fileSystem;\n-    private final LogFileCreationMonitor monitor;\n-    private final TransactionLogFilesHelper fileHelper;\n-    private final TransactionLogFile logFile;\n-    private final File logsDirectory;\n-\n-    TransactionLogFiles( File logsDirectory, String name, TransactionLogFilesContext context )\n+  public static final String DEFAULT_NAME = \"neostore.transaction.db\";\n+  public static final FilenameFilter DEFAULT_FILENAME_FILTER = TransactionLogFilesHelper.DEFAULT_FILENAME_FILTER;\n+  private static final File[] EMPTY_FILES_ARRAY = {};\n+\n+  private final TransactionLogFilesContext logFilesContext;\n+  private final TransactionLogFileInformation logFileInformation;\n+\n+  private final LogHeaderCache logHeaderCache;\n+  private final FileSystemAbstraction fileSystem;\n+  private final LogFileCreationMonitor monitor;\n+  private final TransactionLogFilesHelper fileHelper;\n+  private final TransactionLogFile logFile;\n+  private final File logsDirectory;\n+\n+  TransactionLogFiles(File logsDirectory, String name, TransactionLogFilesContext context)\n+  {\n+    this.logFilesContext = context;\n+    this.logsDirectory = logsDirectory;\n+    this.fileHelper = new TransactionLogFilesHelper(logsDirectory, name);\n+    this.fileSystem = context.getFileSystem();\n+    this.monitor = context.getLogFileCreationMonitor();\n+    this.logHeaderCache = new LogHeaderCache(1000);\n+    this.logFileInformation = new TransactionLogFileInformation(this, logHeaderCache, context);\n+    this.logFile = new TransactionLogFile(this, context);\n+  }\n+\n+  @Override\n+  public void init() throws IOException\n+  {\n+    logFile.init();\n+  }\n+\n+  @Override\n+  public void start() throws IOException\n+  {\n+    logFile.start();\n+  }\n+\n+  @Override\n+  public void shutdown() throws IOException\n+  {\n+    logFile.shutdown();\n+  }\n+\n+  @Override\n+  public long getLogVersion(File historyLogFile)\n+  {\n+    return getLogVersion(historyLogFile.getName());\n+  }\n+\n+  @Override\n+  public long getLogVersion(String historyLogFilename)\n+  {\n+    return fileHelper.getLogVersion(historyLogFilename);\n+  }\n+\n+  @Override\n+  public File[] logFiles()\n+  {\n+    File[] files = fileSystem.listFiles(fileHelper.getParentDirectory(), fileHelper.getLogFilenameFilter());\n+    if (files == null)\n     {\n-        this.logFilesContext = context;\n-        this.logsDirectory = logsDirectory;\n-        this.fileHelper = new TransactionLogFilesHelper( logsDirectory, name );\n-        this.fileSystem = context.getFileSystem();\n-        this.monitor = context.getLogFileCreationMonitor();\n-        this.logHeaderCache = new LogHeaderCache( 1000 );\n-        this.logFileInformation = new TransactionLogFileInformation( this, logHeaderCache, context );\n-        this.logFile = new TransactionLogFile( this, context );\n+      return EMPTY_FILES_ARRAY;\n     }\n-\n-    @Override\n-    public void init() throws IOException\n+    return files;\n+  }\n+\n+  @Override\n+  public boolean isLogFile(File file)\n+  {\n+    return fileHelper.getLogFilenameFilter().accept(null, file.getName());\n+  }\n+\n+  @Override\n+  public File logFilesDirectory()\n+  {\n+    return logsDirectory;\n+  }\n+\n+  @Override\n+  public File getLogFileForVersion(long version)\n+  {\n+    return fileHelper.getLogFileForVersion(version);\n+  }\n+\n+  @Override\n+  public File getHighestLogFile()\n+  {\n+    return getLogFileForVersion(getHighestLogVersion());\n+  }\n+\n+  @Override\n+  public boolean versionExists(long version)\n+  {\n+    return fileSystem.fileExists(getLogFileForVersion(version));\n+  }\n+\n+  @Override\n+  public LogHeader extractHeader(long version) throws IOException\n+  {\n+    return readLogHeader(fileSystem, getLogFileForVersion(version));\n+  }\n+\n+  @Override\n+  public boolean hasAnyEntries(long version)\n+  {\n+    return fileSystem.getFileSize(getLogFileForVersion(version)) > LOG_HEADER_SIZE;\n+  }\n+\n+  @Override\n+  public long getHighestLogVersion()\n+  {\n+    RangeLogVersionVisitor visitor = new RangeLogVersionVisitor();\n+    accept(visitor);\n+    return visitor.highest;\n+  }\n+\n+  @Override\n+  public long getLowestLogVersion()\n+  {\n+    RangeLogVersionVisitor visitor = new RangeLogVersionVisitor();\n+    accept(visitor);\n+    return visitor.lowest;\n+  }\n+\n+  @Override\n+  public void accept(LogVersionVisitor visitor)\n+  {\n+    for (File file : logFiles())\n     {\n-        logFile.init();\n+      visitor.visit(file, getLogVersion(file));\n     }\n+  }\n \n-    @Override\n-    public void start() throws IOException\n-    {\n-        logFile.start();\n-    }\n+  @Override\n+  public PhysicalLogVersionedStoreChannel openForVersion(long version) throws IOException\n+  {\n+    final File fileToOpen = getLogFileForVersion(version);\n \n-    @Override\n-    public void shutdown() throws IOException\n+    if (!versionExists(version))\n     {\n-        logFile.shutdown();\n+      throw new FileNotFoundException(format(\"File does not exist [%s]\", fileToOpen.getCanonicalPath()));\n     }\n \n-    @Override\n-    public long getLogVersion( File historyLogFile )\n+    StoreChannel rawChannel = null;\n+    try\n     {\n-        return getLogVersion( historyLogFile.getName() );\n-    }\n-\n-    @Override\n-    public long getLogVersion( String historyLogFilename )\n+      rawChannel = openLogFileChannel(fileToOpen, OpenMode.READ);\n+      ByteBuffer buffer = ByteBuffer.allocate(LOG_HEADER_SIZE);\n+      LogHeader header = readLogHeader(buffer, rawChannel, true, fileToOpen);\n+      if ((header == null) || (header.logVersion != version))\n+      {\n+        throw new IllegalStateException(\n+            format(\"Unexpected log file header. Expected header version: %d, actual header: %s\", version,\n+                header != null ? header.toString() : \"null header.\"));\n+      }\n+      return new PhysicalLogVersionedStoreChannel(rawChannel, version, header.logFormatVersion);\n+    } catch (FileNotFoundException cause)\n     {\n-        return fileHelper.getLogVersion( historyLogFilename );\n-    }\n-\n-    @Override\n-    public File[] logFiles()\n+      throw (FileNotFoundException) new FileNotFoundException(\n+          format(\"File could not be opened [%s]\", fileToOpen.getCanonicalPath())).initCause(cause);\n+    } catch (Throwable unexpectedError)\n     {\n-        File[] files = fileSystem.listFiles( fileHelper.getParentDirectory(), fileHelper.getLogFilenameFilter() );\n-        if ( files == null )\n+      if (rawChannel != null)\n+      {\n+        // If we managed to open the file before failing, then close the channel\n+        try\n         {\n-            return EMPTY_FILES_ARRAY;\n-        }\n-        return files;\n-    }\n-\n-    @Override\n-    public boolean isLogFile( File file )\n-    {\n-        return fileHelper.getLogFilenameFilter().accept( null, file.getName() );\n-    }\n-\n-    @Override\n-    public File logFilesDirectory()\n-    {\n-        return logsDirectory;\n-    }\n-\n-    @Override\n-    public File getLogFileForVersion( long version )\n-    {\n-        return fileHelper.getLogFileForVersion( version );\n-    }\n-\n-    @Override\n-    public File getHighestLogFile()\n-    {\n-        return getLogFileForVersion( getHighestLogVersion() );\n-    }\n-\n-    @Override\n-    public boolean versionExists( long version )\n-    {\n-        return fileSystem.fileExists( getLogFileForVersion( version ) );\n-    }\n-\n-    @Override\n-    public LogHeader extractHeader( long version ) throws IOException\n-    {\n-        return readLogHeader( fileSystem, getLogFileForVersion( version ) );\n-    }\n-\n-    @Override\n-    public boolean hasAnyEntries( long version )\n-    {\n-        return fileSystem.getFileSize( getLogFileForVersion( version ) ) > LOG_HEADER_SIZE;\n-    }\n-\n-    @Override\n-    public long getHighestLogVersion()\n-    {\n-        RangeLogVersionVisitor visitor = new RangeLogVersionVisitor();\n-        accept( visitor );\n-        return visitor.highest;\n-    }\n-\n-    @Override\n-    public long getLowestLogVersion()\n-    {\n-        RangeLogVersionVisitor visitor = new RangeLogVersionVisitor();\n-        accept( visitor );\n-        return visitor.lowest;\n-    }\n-\n-    @Override\n-    public void accept( LogVersionVisitor visitor )\n-    {\n-        for ( File file : logFiles() )\n+          rawChannel.close();\n+        } catch (IOException e)\n         {\n-            visitor.visit( file, getLogVersion( file ) );\n+          unexpectedError.addSuppressed(e);\n         }\n+      }\n+      throw unexpectedError;\n     }\n-\n-    @Override\n-    public PhysicalLogVersionedStoreChannel openForVersion( long version ) throws IOException\n+  }\n+\n+  /**\n+   * Creates a new channel for the specified version, creating the backing file if it doesn't already exist.\n+   * If the file exists then the header is verified to be of correct version. Having an existing file there\n+   * could happen after a previous crash in the middle of rotation, where the new file was created,\n+   * but the incremented log version changed hadn't made it to persistent storage.\n+   *\n+   * @param forVersion                log version for the file/channel to create.\n+   * @param mode                      mode in which open log file\n+   * @param lastTransactionIdSupplier supplier of last transaction id that was written into previous log file\n+   * @return {@link PhysicalLogVersionedStoreChannel} for newly created/opened log file.\n+   * @throws IOException if there's any I/O related error.\n+   */\n+  PhysicalLogVersionedStoreChannel createLogChannelForVersion(long forVersion, OpenMode mode,\n+                                                              LongSupplier lastTransactionIdSupplier) throws IOException\n+  {\n+    File toOpen = getLogFileForVersion(forVersion);\n+    StoreChannel storeChannel = fileSystem.open(toOpen, mode);\n+    ByteBuffer headerBuffer = ByteBuffer.allocate(LOG_HEADER_SIZE);\n+    LogHeader header = readLogHeader(headerBuffer, storeChannel, false, toOpen);\n+    if (header == null)\n     {\n-        final File fileToOpen = getLogFileForVersion( version );\n-\n-        if ( !versionExists( version ) )\n-        {\n-            throw new FileNotFoundException( format( \"File does not exist [%s]\", fileToOpen.getCanonicalPath() ) );\n-        }\n-\n-        StoreChannel rawChannel = null;\n-        try\n-        {\n-            rawChannel = openLogFileChannel( fileToOpen, OpenMode.READ );\n-            ByteBuffer buffer = ByteBuffer.allocate( LOG_HEADER_SIZE );\n-            LogHeader header = readLogHeader( buffer, rawChannel, true, fileToOpen );\n-            if ( (header == null) || (header.logVersion != version) )\n-            {\n-                throw new IllegalStateException(\n-                        format( \"Unexpected log file header. Expected header version: %d, actual header: %s\", version,\n-                                header != null ? header.toString() : \"null header.\" ) );\n-            }\n-            return new PhysicalLogVersionedStoreChannel( rawChannel, version, header.logFormatVersion );\n-        }\n-        catch ( FileNotFoundException cause )\n-        {\n-            throw (FileNotFoundException) new FileNotFoundException(\n-                    format( \"File could not be opened [%s]\", fileToOpen.getCanonicalPath() ) ).initCause( cause );\n-        }\n-        catch ( Throwable unexpectedError )\n-        {\n-            if ( rawChannel != null )\n-            {\n-                // If we managed to open the file before failing, then close the channel\n-                try\n-                {\n-                    rawChannel.close();\n-                }\n-                catch ( IOException e )\n-                {\n-                    unexpectedError.addSuppressed( e );\n-                }\n-            }\n-            throw unexpectedError;\n-        }\n+      // Either the header is not there in full or the file was new. Don't care\n+      long lastTxId = lastTransactionIdSupplier.getAsLong();\n+      writeLogHeader(headerBuffer, forVersion, lastTxId);\n+      logHeaderCache.putHeader(forVersion, lastTxId);\n+      storeChannel.writeAll(headerBuffer);\n+      monitor.created(toOpen, forVersion, lastTxId);\n     }\n-\n-    /**\n-     * Creates a new channel for the specified version, creating the backing file if it doesn't already exist.\n-     * If the file exists then the header is verified to be of correct version. Having an existing file there\n-     * could happen after a previous crash in the middle of rotation, where the new file was created,\n-     * but the incremented log version changed hadn't made it to persistent storage.\n-     *\n-     * @param forVersion log version for the file/channel to create.\n-     * @param mode mode in which open log file\n-     * @param lastTransactionIdSupplier supplier of last transaction id that was written into previous log file\n-     * @return {@link PhysicalLogVersionedStoreChannel} for newly created/opened log file.\n-     * @throws IOException if there's any I/O related error.\n-     */\n-    PhysicalLogVersionedStoreChannel createLogChannelForVersion( long forVersion, OpenMode mode,\n-            LongSupplier lastTransactionIdSupplier ) throws IOException\n+    byte formatVersion = header == null ? CURRENT_LOG_VERSION : header.logFormatVersion;\n+    return new PhysicalLogVersionedStoreChannel(storeChannel, forVersion, formatVersion);\n+  }\n+\n+  @Override\n+  public void accept(LogHeaderVisitor visitor) throws IOException\n+  {\n+    // Start from the where we're currently at and go backwards in time (versions)\n+    long logVersion = getHighestLogVersion();\n+    long highTransactionId = logFilesContext.getLastCommittedTransactionId();\n+    while (versionExists(logVersion))\n     {\n-        File toOpen = getLogFileForVersion( forVersion );\n-        StoreChannel storeChannel = fileSystem.open( toOpen, mode );\n-        ByteBuffer headerBuffer = ByteBuffer.allocate( LOG_HEADER_SIZE );\n-        LogHeader header = readLogHeader( headerBuffer, storeChannel, false, toOpen );\n-        if ( header == null )\n+      Long previousLogLastTxId = logHeaderCache.getLogHeader(logVersion);\n+      if (previousLogLastTxId == null)\n+      {\n+        LogHeader header = readLogHeader(fileSystem, getLogFileForVersion(logVersion), false);\n+        if (header != null)\n         {\n-            // Either the header is not there in full or the file was new. Don't care\n-            long lastTxId = lastTransactionIdSupplier.getAsLong();\n-            writeLogHeader( headerBuffer, forVersion, lastTxId );\n-            logHeaderCache.putHeader( forVersion, lastTxId );\n-            storeChannel.writeAll( headerBuffer );\n-            monitor.created( toOpen, forVersion, lastTxId );\n+          assert logVersion == header.logVersion;\n+          logHeaderCache.putHeader(header.logVersion, header.lastCommittedTxId);\n+          previousLogLastTxId = header.lastCommittedTxId;\n         }\n-        byte formatVersion = header == null ? CURRENT_LOG_VERSION : header.logFormatVersion;\n-        return new PhysicalLogVersionedStoreChannel( storeChannel, forVersion, formatVersion );\n-    }\n+      }\n \n-    @Override\n-    public void accept( LogHeaderVisitor visitor ) throws IOException\n-    {\n-        // Start from the where we're currently at and go backwards in time (versions)\n-        long logVersion = getHighestLogVersion();\n-        long highTransactionId = logFilesContext.getLastCommittedTransactionId();\n-        while ( versionExists( logVersion ) )\n+      if (previousLogLastTxId != null)\n+      {\n+        long lowTransactionId = previousLogLastTxId + 1;\n+        LogPosition position = LogPosition.start(logVersion);\n+        if (!visitor.visit(position, lowTransactionId, highTransactionId))\n         {\n-            Long previousLogLastTxId = logHeaderCache.getLogHeader( logVersion );\n-            if ( previousLogLastTxId == null )\n-            {\n-                LogHeader header = readLogHeader( fileSystem, getLogFileForVersion( logVersion ), false );\n-                if ( header != null )\n-                {\n-                    assert logVersion == header.logVersion;\n-                    logHeaderCache.putHeader( header.logVersion, header.lastCommittedTxId );\n-                    previousLogLastTxId = header.lastCommittedTxId;\n-                }\n-            }\n-\n-            if ( previousLogLastTxId != null )\n-            {\n-                long lowTransactionId = previousLogLastTxId + 1;\n-                LogPosition position = LogPosition.start( logVersion );\n-                if ( !visitor.visit( position, lowTransactionId, highTransactionId ) )\n-                {\n-                    break;\n-                }\n-                highTransactionId = previousLogLastTxId;\n-            }\n-            logVersion--;\n+          break;\n         }\n+        highTransactionId = previousLogLastTxId;\n+      }\n+      logVersion--;\n     }\n+  }\n+\n+  @Override\n+  public LogFile getLogFile()\n+  {\n+    return logFile;\n+  }\n+\n+  @Override\n+  public TransactionLogFileInformation getLogFileInformation()\n+  {\n+    return logFileInformation;\n+  }\n+\n+  private StoreChannel openLogFileChannel(File file, OpenMode mode) throws IOException\n+  {\n+    return fileSystem.open(file, mode);\n+  }\n+\n+  private static class RangeLogVersionVisitor implements LogVersionVisitor\n+  {\n+    private long lowest = -1;\n+    private long highest = -1;\n \n     @Override\n-    public LogFile getLogFile()\n-    {\n-        return logFile;\n-    }\n-\n-    @Override\n-    public TransactionLogFileInformation getLogFileInformation()\n-    {\n-        return logFileInformation;\n-    }\n-\n-    private StoreChannel openLogFileChannel( File file, OpenMode mode ) throws IOException\n+    public void visit(File file, long logVersion)\n     {\n-        return fileSystem.open( file, mode );\n-    }\n-\n-    private static class RangeLogVersionVisitor implements LogVersionVisitor\n-    {\n-        private long lowest = -1;\n-        private long highest = -1;\n-\n-        @Override\n-        public void visit( File file, long logVersion )\n-        {\n-            highest = max( highest, logVersion );\n-            lowest = lowest == -1 ? logVersion : min( lowest, logVersion );\n-        }\n+      highest = max(highest, logVersion);\n+      lowest = lowest == -1 ? logVersion : min(lowest, logVersion);\n     }\n+  }\n }\n",
            "diff_size": 413
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/310/TransactionLogFiles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/310/TransactionLogFiles.java\nindex 87745d01b10..3c0e1383c46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/310/TransactionLogFiles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/310/TransactionLogFiles.java\n@@ -50,8 +50,10 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogVersions.CURRENT_LO\n public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n {\n     public static final String DEFAULT_NAME = \"neostore.transaction.db\";\n-    public static final FilenameFilter DEFAULT_FILENAME_FILTER = TransactionLogFilesHelper.DEFAULT_FILENAME_FILTER;\n-    private static final File[] EMPTY_FILES_ARRAY = {};\n+\n+public static final FilenameFilter DEFAULT_FILENAME_FILTER = TransactionLogFilesHelper.DEFAULT_FILENAME_FILTER;\n+    private static final File[] EMPTY_FILES_ARRAY = {\n+};\n \n     private final TransactionLogFilesContext logFilesContext;\n     private final TransactionLogFileInformation logFileInformation;\n@@ -113,7 +115,8 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n         {\n             return EMPTY_FILES_ARRAY;\n         }\n-        return files;\n+\n+return files;\n     }\n \n     @Override\n@@ -187,8 +190,7 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n     public PhysicalLogVersionedStoreChannel openForVersion( long version ) throws IOException\n     {\n         final File fileToOpen = getLogFileForVersion( version );\n-\n-        if ( !versionExists( version ) )\n+if ( !versionExists( version ) )\n         {\n             throw new FileNotFoundException( format( \"File does not exist [%s]\", fileToOpen.getCanonicalPath() ) );\n         }\n@@ -199,19 +201,17 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n             rawChannel = openLogFileChannel( fileToOpen, OpenMode.READ );\n             ByteBuffer buffer = ByteBuffer.allocate( LOG_HEADER_SIZE );\n             LogHeader header = readLogHeader( buffer, rawChannel, true, fileToOpen );\n-            if ( (header == null) || (header.logVersion != version) )\n+            if ( ( header == null ) || (header.logVersion != version) )\n             {\n-                throw new IllegalStateException(\n-                        format( \"Unexpected log file header. Expected header version: %d, actual header: %s\", version,\n+                throw new IllegalStateException( format( \"Unexpected log file header. Expected header version: %d, actual header: %s\", version,\n                                 header != null ? header.toString() : \"null header.\" ) );\n-            }\n+    }\n             return new PhysicalLogVersionedStoreChannel( rawChannel, version, header.logFormatVersion );\n         }\n         catch ( FileNotFoundException cause )\n         {\n-            throw (FileNotFoundException) new FileNotFoundException(\n-                    format( \"File could not be opened [%s]\", fileToOpen.getCanonicalPath() ) ).initCause( cause );\n-        }\n+            throw (FileNotFoundException) new FileNotFoundException( format( \"File could not be opened [%s]\", fileToOpen.getCanonicalPath() ) ).initCause( cause );\n+    }\n         catch ( Throwable unexpectedError )\n         {\n             if ( rawChannel != null )\n@@ -244,7 +244,7 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n      */\n     PhysicalLogVersionedStoreChannel createLogChannelForVersion( long forVersion, OpenMode mode,\n             LongSupplier lastTransactionIdSupplier ) throws IOException\n-    {\n+{\n         File toOpen = getLogFileForVersion( forVersion );\n         StoreChannel storeChannel = fileSystem.open( toOpen, mode );\n         ByteBuffer headerBuffer = ByteBuffer.allocate( LOG_HEADER_SIZE );\n@@ -290,7 +290,8 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n                 {\n                     break;\n                 }\n-                highTransactionId = previousLogLastTxId;\n+\n+highTransactionId = previousLogLastTxId;\n             }\n             logVersion--;\n         }\n@@ -325,4 +326,4 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n             lowest = lowest == -1 ? logVersion : min( lowest, logVersion );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "185",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "207",
                    "column": "35",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "277",
                    "column": "9",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "277",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/310/TransactionLogFiles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/310/TransactionLogFiles.java\nindex 87745d01b10..694622b6a2c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/310/TransactionLogFiles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/310/TransactionLogFiles.java\n@@ -25,7 +25,6 @@ import java.io.FilenameFilter;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.util.function.LongSupplier;\n-\n import org.neo4j.io.fs.FileSystemAbstraction;\n import org.neo4j.io.fs.OpenMode;\n import org.neo4j.io.fs.StoreChannel;\n@@ -34,28 +33,33 @@ import org.neo4j.kernel.impl.transaction.log.LogPosition;\n import org.neo4j.kernel.impl.transaction.log.PhysicalLogVersionedStoreChannel;\n import org.neo4j.kernel.impl.transaction.log.entry.LogHeader;\n import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n-\n import static java.lang.Math.max;\n+\n import static java.lang.Math.min;\n+\n import static java.lang.String.format;\n+\n import static org.neo4j.kernel.impl.transaction.log.entry.LogHeader.LOG_HEADER_SIZE;\n+\n import static org.neo4j.kernel.impl.transaction.log.entry.LogHeaderReader.readLogHeader;\n+\n import static org.neo4j.kernel.impl.transaction.log.entry.LogHeaderWriter.writeLogHeader;\n+\n import static org.neo4j.kernel.impl.transaction.log.entry.LogVersions.CURRENT_LOG_VERSION;\n \n /**\n  * Used to figure out what logical log file to open when the database\n  * starts up.\n  */\n+\n public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n {\n     public static final String DEFAULT_NAME = \"neostore.transaction.db\";\n+\n     public static final FilenameFilter DEFAULT_FILENAME_FILTER = TransactionLogFilesHelper.DEFAULT_FILENAME_FILTER;\n     private static final File[] EMPTY_FILES_ARRAY = {};\n-\n     private final TransactionLogFilesContext logFilesContext;\n     private final TransactionLogFileInformation logFileInformation;\n-\n     private final LogHeaderCache logHeaderCache;\n     private final FileSystemAbstraction fileSystem;\n     private final LogFileCreationMonitor monitor;\n@@ -113,6 +117,7 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n         {\n             return EMPTY_FILES_ARRAY;\n         }\n+\n         return files;\n     }\n \n@@ -177,7 +182,8 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n     @Override\n     public void accept( LogVersionVisitor visitor )\n     {\n-        for ( File file : logFiles() )\n+        for( File file : logFiles()\n+        )\n         {\n             visitor.visit( file, getLogVersion( file ) );\n         }\n@@ -187,8 +193,7 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n     public PhysicalLogVersionedStoreChannel openForVersion( long version ) throws IOException\n     {\n         final File fileToOpen = getLogFileForVersion( version );\n-\n-        if ( !versionExists( version ) )\n+        if ( ! versionExists( version ) )\n         {\n             throw new FileNotFoundException( format( \"File does not exist [%s]\", fileToOpen.getCanonicalPath() ) );\n         }\n@@ -199,35 +204,35 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n             rawChannel = openLogFileChannel( fileToOpen, OpenMode.READ );\n             ByteBuffer buffer = ByteBuffer.allocate( LOG_HEADER_SIZE );\n             LogHeader header = readLogHeader( buffer, rawChannel, true, fileToOpen );\n-            if ( (header == null) || (header.logVersion != version) )\n+            if ( ( header == null)|| ( header.logVersion != version) )\n             {\n-                throw new IllegalStateException(\n-                        format( \"Unexpected log file header. Expected header version: %d, actual header: %s\", version,\n-                                header != null ? header.toString() : \"null header.\" ) );\n+                throw new IllegalStateException( format( \"Unexpected log file header. Expected header version: %d, actual header: %s\", version, header != null ? header.toString() : \"null header.\" ) );\n             }\n+\n             return new PhysicalLogVersionedStoreChannel( rawChannel, version, header.logFormatVersion );\n         }\n         catch ( FileNotFoundException cause )\n         {\n-            throw (FileNotFoundException) new FileNotFoundException(\n-                    format( \"File could not be opened [%s]\", fileToOpen.getCanonicalPath() ) ).initCause( cause );\n+            throw (FileNotFoundException) new FileNotFoundException( format( \"File could not be opened [%s]\", fileToOpen.getCanonicalPath() ) ).initCause( cause );\n         }\n-        catch ( Throwable unexpectedError )\n-        {\n-            if ( rawChannel != null )\n+\n+            catch ( Throwable unexpectedError )\n             {\n-                // If we managed to open the file before failing, then close the channel\n-                try\n+                if ( rawChannel != null )\n                 {\n-                    rawChannel.close();\n-                }\n-                catch ( IOException e )\n-                {\n-                    unexpectedError.addSuppressed( e );\n+                // If we managed to open the file before failing, then close the channel\n+                    try\n+                    {\n+                        rawChannel.close();\n+                    }\n+                    catch ( IOException e )\n+                    {\n+                        unexpectedError.addSuppressed( e );\n+                    }\n                 }\n+\n+                throw unexpectedError;\n             }\n-            throw unexpectedError;\n-        }\n     }\n \n     /**\n@@ -242,8 +247,8 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n      * @return {@link PhysicalLogVersionedStoreChannel} for newly created/opened log file.\n      * @throws IOException if there's any I/O related error.\n      */\n-    PhysicalLogVersionedStoreChannel createLogChannelForVersion( long forVersion, OpenMode mode,\n-            LongSupplier lastTransactionIdSupplier ) throws IOException\n+\n+    PhysicalLogVersionedStoreChannel createLogChannelForVersion( long forVersion, OpenMode mode, LongSupplier lastTransactionIdSupplier ) throws IOException\n     {\n         File toOpen = getLogFileForVersion( forVersion );\n         StoreChannel storeChannel = fileSystem.open( toOpen, mode );\n@@ -258,6 +263,7 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n             storeChannel.writeAll( headerBuffer );\n             monitor.created( toOpen, forVersion, lastTxId );\n         }\n+\n         byte formatVersion = header == null ? CURRENT_LOG_VERSION : header.logFormatVersion;\n         return new PhysicalLogVersionedStoreChannel( storeChannel, forVersion, formatVersion );\n     }\n@@ -268,7 +274,7 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n         // Start from the where we're currently at and go backwards in time (versions)\n         long logVersion = getHighestLogVersion();\n         long highTransactionId = logFilesContext.getLastCommittedTransactionId();\n-        while ( versionExists( logVersion ) )\n+        while( versionExists( logVersion ))\n         {\n             Long previousLogLastTxId = logHeaderCache.getLogHeader( logVersion );\n             if ( previousLogLastTxId == null )\n@@ -286,12 +292,14 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n             {\n                 long lowTransactionId = previousLogLastTxId + 1;\n                 LogPosition position = LogPosition.start( logVersion );\n-                if ( !visitor.visit( position, lowTransactionId, highTransactionId ) )\n+                if ( ! visitor.visit( position, lowTransactionId, highTransactionId ) )\n                 {\n                     break;\n                 }\n+\n                 highTransactionId = previousLogLastTxId;\n             }\n+\n             logVersion--;\n         }\n     }\n@@ -315,14 +323,13 @@ public class TransactionLogFiles extends LifecycleAdapter implements LogFiles\n \n     private static class RangeLogVersionVisitor implements LogVersionVisitor\n     {\n-        private long lowest = -1;\n-        private long highest = -1;\n-\n+        private long lowest = - 1;\n+        private long highest = - 1;\n         @Override\n         public void visit( File file, long logVersion )\n         {\n             highest = max( highest, logVersion );\n-            lowest = lowest == -1 ? logVersion : min( lowest, logVersion );\n+            lowest = lowest == - 1 ? logVersion : min( lowest, logVersion );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
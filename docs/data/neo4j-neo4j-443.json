{
    "project_name": "neo4j-neo4j",
    "error_id": "443",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/443/DefaultNodePropertyAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/443/DefaultNodePropertyAccessor.java\nindex 0290ec8b123..6f493271758 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/443/DefaultNodePropertyAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/443/DefaultNodePropertyAccessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state.storeview;\n \n import org.neo4j.io.IOUtils;\n@@ -36,23 +37,23 @@ public class DefaultNodePropertyAccessor implements NodePropertyAccessor\n     private final StorageNodeCursor nodeCursor;\n     private final StoragePropertyCursor propertyCursor;\n \n-    public DefaultNodePropertyAccessor( StorageReader reader, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    public DefaultNodePropertyAccessor(StorageReader reader, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n         this.reader = reader;\n-        nodeCursor = reader.allocateNodeCursor( cursorTracer );\n-        propertyCursor = reader.allocatePropertyCursor( cursorTracer, memoryTracker );\n+        nodeCursor = reader.allocateNodeCursor(cursorTracer);\n+        propertyCursor = reader.allocatePropertyCursor(cursorTracer, memoryTracker);\n     }\n \n     @Override\n-    public Value getNodePropertyValue( long nodeId, int propertyKeyId, PageCursorTracer cursorTracer )\n+    public Value getNodePropertyValue(long nodeId, int propertyKeyId, PageCursorTracer cursorTracer)\n     {\n-        nodeCursor.single( nodeId );\n-        if ( nodeCursor.next() && nodeCursor.hasProperties() )\n+        nodeCursor.single(nodeId);\n+        if (nodeCursor.next() && nodeCursor.hasProperties())\n         {\n-            nodeCursor.properties( propertyCursor );\n-            while ( propertyCursor.next() )\n+            nodeCursor.properties(propertyCursor);\n+            while (propertyCursor.next())\n             {\n-                if ( propertyCursor.propertyKey() == propertyKeyId )\n+                if (propertyCursor.propertyKey() == propertyKeyId)\n                 {\n                     return propertyCursor.propertyValue();\n                 }\n@@ -64,6 +65,6 @@ public class DefaultNodePropertyAccessor implements NodePropertyAccessor\n     @Override\n     public void close()\n     {\n-        IOUtils.closeAllUnchecked( nodeCursor, propertyCursor, reader );\n+        IOUtils.closeAllUnchecked(nodeCursor, propertyCursor, reader);\n     }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
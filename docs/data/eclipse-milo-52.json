{
    "project_name": "eclipse-milo",
    "error_id": "52",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "33",
                "severity": "error",
                "message": "'}' at column 33 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class FloatConversions {\n\n    private FloatConversions() {}\n\n    @NotNull\n    static Boolean floatToBoolean(@NotNull Float f) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/52/FloatConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/52/FloatConversions.java\nindex 691f9b95fc2..a9f8bf551b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/52/FloatConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/52/FloatConversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class FloatConversions {\n \n-    private FloatConversions() {}\n+    private FloatConversions() {\n+    }\n \n     @NotNull\n     static Boolean floatToBoolean(@NotNull Float f) {\n@@ -135,17 +136,28 @@ final class FloatConversions {\n     static Object explicitConversion(@NotNull Float f, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return floatToBoolean(f);\n-            case Byte:      return floatToByte(f);\n-            case Int16:     return floatToInt16(f);\n-            case Int32:     return floatToInt32(f);\n-            case Int64:     return floatToInt64(f);\n-            case SByte:     return floatToSByte(f);\n-            case String:    return floatToString(f);\n-            case UInt16:    return floatToUInt16(f);\n-            case UInt32:    return floatToUInt32(f);\n-            case UInt64:    return floatToUInt64(f);\n-            default:        return implicitConversion(f, targetType);\n+            case Boolean:\n+                return floatToBoolean(f);\n+            case Byte:\n+                return floatToByte(f);\n+            case Int16:\n+                return floatToInt16(f);\n+            case Int32:\n+                return floatToInt32(f);\n+            case Int64:\n+                return floatToInt64(f);\n+            case SByte:\n+                return floatToSByte(f);\n+            case String:\n+                return floatToString(f);\n+            case UInt16:\n+                return floatToUInt16(f);\n+            case UInt32:\n+                return floatToUInt32(f);\n+            case UInt64:\n+                return floatToUInt64(f);\n+            default:\n+                return implicitConversion(f, targetType);\n         }\n         //@formatter:on\n     }\n@@ -154,8 +166,10 @@ final class FloatConversions {\n     static Object implicitConversion(@NotNull Float f, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return floatToDouble(f);\n-            default:        return null;\n+            case Double:\n+                return floatToDouble(f);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/52/FloatConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/52/FloatConversions.java\nindex 691f9b95fc2..71fc0fd5524 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/52/FloatConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/52/FloatConversions.java\n@@ -135,7 +135,8 @@ final class FloatConversions {\n     static Object explicitConversion(@NotNull Float f, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return floatToBoolean(f);\n+            case Boolean:\n+    return floatToBoolean(f);\n             case Byte:      return floatToByte(f);\n             case Int16:     return floatToInt16(f);\n             case Int32:     return floatToInt32(f);\n@@ -145,7 +146,8 @@ final class FloatConversions {\n             case UInt16:    return floatToUInt16(f);\n             case UInt32:    return floatToUInt32(f);\n             case UInt64:    return floatToUInt64(f);\n-            default:        return implicitConversion(f, targetType);\n+            default:\n+    return implicitConversion(f, targetType);\n         }\n         //@formatter:on\n     }\n@@ -155,9 +157,10 @@ final class FloatConversions {\n         //@formatter:off\n         switch (targetType) {\n             case Double:    return floatToDouble(f);\n-            default:        return null;\n+            default:\n+    return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/52/FloatConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/52/FloatConversions.java\nindex 691f9b95fc2..066d9ecd91a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/52/FloatConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/52/FloatConversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class FloatConversions {\n \n-    private FloatConversions() {}\n+    private FloatConversions() {\n+    }\n \n     @NotNull\n     static Boolean floatToBoolean(@NotNull Float f) {\n@@ -122,10 +123,7 @@ final class FloatConversions {\n     static Object convert(@Nullable Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof Float) {\n             Float f = (Float) o;\n-\n-            return implicit ?\n-                implicitConversion(f, targetType) :\n-                explicitConversion(f, targetType);\n+            return implicit ? implicitConversion(f, targetType) : explicitConversion(f, targetType);\n         } else {\n             return null;\n         }\n@@ -135,17 +133,37 @@ final class FloatConversions {\n     static Object explicitConversion(@NotNull Float f, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return floatToBoolean(f);\n-            case Byte:      return floatToByte(f);\n-            case Int16:     return floatToInt16(f);\n-            case Int32:     return floatToInt32(f);\n-            case Int64:     return floatToInt64(f);\n-            case SByte:     return floatToSByte(f);\n-            case String:    return floatToString(f);\n-            case UInt16:    return floatToUInt16(f);\n-            case UInt32:    return floatToUInt32(f);\n-            case UInt64:    return floatToUInt64(f);\n-            default:        return implicitConversion(f, targetType);\n+            case Boolean:\n+                return floatToBoolean(f);\n+\n+            case Byte:\n+                return floatToByte(f);\n+\n+            case Int16:\n+                return floatToInt16(f);\n+\n+            case Int32:\n+                return floatToInt32(f);\n+\n+            case Int64:\n+                return floatToInt64(f);\n+\n+            case SByte:\n+                return floatToSByte(f);\n+\n+            case String:\n+                return floatToString(f);\n+\n+            case UInt16:\n+                return floatToUInt16(f);\n+\n+            case UInt32:\n+                return floatToUInt32(f);\n+\n+            case UInt64:\n+                return floatToUInt64(f);\n+            default:\n+                return implicitConversion(f, targetType);\n         }\n         //@formatter:on\n     }\n@@ -154,10 +172,12 @@ final class FloatConversions {\n     static Object implicitConversion(@NotNull Float f, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return floatToDouble(f);\n-            default:        return null;\n+            case Double:\n+                return floatToDouble(f);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/52/FloatConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/52/FloatConversions.java\nindex 691f9b95fc2..490f3969798 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/52/FloatConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/52/FloatConversions.java\n@@ -25,9 +25,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class FloatConversions {\n \n-    private FloatConversions() {}\n+    private FloatConversions() {\n \n-    @NotNull\n+    } @NotNull\n     static Boolean floatToBoolean(@NotNull Float f) {\n         return f != 0.0f;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
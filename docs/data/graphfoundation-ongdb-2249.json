{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2249",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2249/WrappedCharReadable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2249/WrappedCharReadable.java\nindex f794e0678a1..88655af6eb0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2249/WrappedCharReadable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2249/WrappedCharReadable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import java.io.IOException;\n@@ -27,73 +28,73 @@ import java.io.Reader;\n  */\n class WrappedCharReadable extends CharReadable.Adapter\n {\n-    private final long length;\n-    private final Reader reader;\n-    private long position;\n-    private final String sourceDescription;\n+  private final long length;\n+  private final Reader reader;\n+  private long position;\n+  private final String sourceDescription;\n \n-    WrappedCharReadable( long length, Reader reader )\n-    {\n-        this.length = length;\n-        this.reader = reader;\n-        sourceDescription = reader.toString();\n-    }\n+  WrappedCharReadable(long length, Reader reader)\n+  {\n+    this.length = length;\n+    this.reader = reader;\n+    sourceDescription = reader.toString();\n+  }\n \n-    @Override\n-    public SectionedCharBuffer read( SectionedCharBuffer buffer, int from ) throws IOException\n-    {\n-        buffer.compact( buffer, from );\n-        buffer.readFrom( reader );\n-        position += buffer.available();\n-        return buffer;\n-    }\n+  @Override\n+  public SectionedCharBuffer read(SectionedCharBuffer buffer, int from) throws IOException\n+  {\n+    buffer.compact(buffer, from);\n+    buffer.readFrom(reader);\n+    position += buffer.available();\n+    return buffer;\n+  }\n \n-    @Override\n-    public int read( char[] into, int offset, int length ) throws IOException\n+  @Override\n+  public int read(char[] into, int offset, int length) throws IOException\n+  {\n+    int totalRead = 0;\n+    boolean eof = false;\n+    while (totalRead < length)\n     {\n-        int totalRead = 0;\n-        boolean eof = false;\n-        while ( totalRead < length )\n-        {\n-            int read = reader.read( into, offset + totalRead, length - totalRead );\n-            if ( read == -1 )\n-            {\n-                eof = true;\n-                break;\n-            }\n-            totalRead += read;\n-        }\n-        position += totalRead;\n-        return totalRead == 0 && eof ? -1 : totalRead;\n+      int read = reader.read(into, offset + totalRead, length - totalRead);\n+      if (read == -1)\n+      {\n+        eof = true;\n+        break;\n+      }\n+      totalRead += read;\n     }\n+    position += totalRead;\n+    return totalRead == 0 && eof ? -1 : totalRead;\n+  }\n \n-    @Override\n-    public void close() throws IOException\n-    {\n-        reader.close();\n-    }\n+  @Override\n+  public void close() throws IOException\n+  {\n+    reader.close();\n+  }\n \n-    @Override\n-    public long position()\n-    {\n-        return position;\n-    }\n+  @Override\n+  public long position()\n+  {\n+    return position;\n+  }\n \n-    @Override\n-    public String sourceDescription()\n-    {\n-        return sourceDescription;\n-    }\n+  @Override\n+  public String sourceDescription()\n+  {\n+    return sourceDescription;\n+  }\n \n-    @Override\n-    public long length()\n-    {\n-        return length;\n-    }\n+  @Override\n+  public long length()\n+  {\n+    return length;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return sourceDescription;\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return sourceDescription;\n+  }\n }\n",
            "diff_size": 67
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2249/WrappedCharReadable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2249/WrappedCharReadable.java\nindex f794e0678a1..f71e57741a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2249/WrappedCharReadable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2249/WrappedCharReadable.java\n@@ -61,9 +61,11 @@ class WrappedCharReadable extends CharReadable.Adapter\n                 eof = true;\n                 break;\n             }\n-            totalRead += read;\n+\n+totalRead += read;\n         }\n-        position += totalRead;\n+\n+position += totalRead;\n         return totalRead == 0 && eof ? -1 : totalRead;\n     }\n \n@@ -96,4 +98,4 @@ class WrappedCharReadable extends CharReadable.Adapter\n     {\n         return sourceDescription;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
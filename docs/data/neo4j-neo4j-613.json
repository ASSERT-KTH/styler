{
    "project_name": "neo4j-neo4j",
    "error_id": "613",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "226",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "231",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/613/TransactionToRecordStateVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/613/TransactionToRecordStateVisitor.java\nindex 736eee24fa7..78efe28a1a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/613/TransactionToRecordStateVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/613/TransactionToRecordStateVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.eclipse.collections.api.IntIterable;\n@@ -48,8 +49,8 @@ class TransactionToRecordStateVisitor extends TxStateVisitor.Adapter\n     private final ConstraintRuleAccessor constraintSemantics;\n     private final PageCursorTracer cursorTracer;\n \n-    TransactionToRecordStateVisitor( TransactionRecordState recordState, SchemaState schemaState, SchemaRuleAccess schemaRuleAccess,\n-            ConstraintRuleAccessor constraintSemantics, PageCursorTracer cursorTracer )\n+    TransactionToRecordStateVisitor(TransactionRecordState recordState, SchemaState schemaState, SchemaRuleAccess schemaRuleAccess,\n+                                    ConstraintRuleAccessor constraintSemantics, PageCursorTracer cursorTracer)\n     {\n         this.recordState = recordState;\n         this.schemaState = schemaState;\n@@ -64,158 +65,157 @@ class TransactionToRecordStateVisitor extends TxStateVisitor.Adapter\n     {\n         try\n         {\n-            if ( clearSchemaState )\n+            if (clearSchemaState)\n             {\n                 schemaState.clear();\n             }\n-        }\n-        finally\n+        } finally\n         {\n             clearSchemaState = false;\n         }\n     }\n \n     @Override\n-    public void visitCreatedNode( long id )\n+    public void visitCreatedNode(long id)\n     {\n-        recordState.nodeCreate( id );\n+        recordState.nodeCreate(id);\n     }\n \n     @Override\n-    public void visitDeletedNode( long id )\n+    public void visitDeletedNode(long id)\n     {\n-        recordState.nodeDelete( id );\n+        recordState.nodeDelete(id);\n     }\n \n     @Override\n-    public void visitCreatedRelationship( long id, int type, long startNode, long endNode )\n+    public void visitCreatedRelationship(long id, int type, long startNode, long endNode)\n     {\n         // record the state changes to be made to the store\n-        recordState.relCreate( id, type, startNode, endNode );\n+        recordState.relCreate(id, type, startNode, endNode);\n     }\n \n     @Override\n-    public void visitDeletedRelationship( long id )\n+    public void visitDeletedRelationship(long id)\n     {\n         // record the state changes to be made to the store\n-        recordState.relDelete( id );\n+        recordState.relDelete(id);\n     }\n \n     @Override\n-    public void visitNodePropertyChanges( long id, Iterator<StorageProperty> added,\n-            Iterator<StorageProperty> changed, IntIterable removed )\n+    public void visitNodePropertyChanges(long id, Iterator<StorageProperty> added,\n+                                         Iterator<StorageProperty> changed, IntIterable removed)\n     {\n-        removed.each( propId -> recordState.nodeRemoveProperty( id, propId ) );\n-        while ( changed.hasNext() )\n+        removed.each(propId -> recordState.nodeRemoveProperty(id, propId));\n+        while (changed.hasNext())\n         {\n             StorageProperty prop = changed.next();\n-            recordState.nodeChangeProperty( id, prop.propertyKeyId(), prop.value() );\n+            recordState.nodeChangeProperty(id, prop.propertyKeyId(), prop.value());\n         }\n-        while ( added.hasNext() )\n+        while (added.hasNext())\n         {\n             StorageProperty prop = added.next();\n-            recordState.nodeAddProperty( id, prop.propertyKeyId(), prop.value() );\n+            recordState.nodeAddProperty(id, prop.propertyKeyId(), prop.value());\n         }\n     }\n \n     @Override\n-    public void visitRelPropertyChanges( long id, Iterator<StorageProperty> added,\n-            Iterator<StorageProperty> changed, IntIterable removed )\n+    public void visitRelPropertyChanges(long id, Iterator<StorageProperty> added,\n+                                        Iterator<StorageProperty> changed, IntIterable removed)\n     {\n-        removed.each( relId -> recordState.relRemoveProperty( id, relId ) );\n-        while ( changed.hasNext() )\n+        removed.each(relId -> recordState.relRemoveProperty(id, relId));\n+        while (changed.hasNext())\n         {\n             StorageProperty prop = changed.next();\n-            recordState.relChangeProperty( id, prop.propertyKeyId(), prop.value() );\n+            recordState.relChangeProperty(id, prop.propertyKeyId(), prop.value());\n         }\n-        while ( added.hasNext() )\n+        while (added.hasNext())\n         {\n             StorageProperty prop = added.next();\n-            recordState.relAddProperty( id, prop.propertyKeyId(), prop.value() );\n+            recordState.relAddProperty(id, prop.propertyKeyId(), prop.value());\n         }\n     }\n \n     @Override\n-    public void visitNodeLabelChanges( long id, final LongSet added, final LongSet removed )\n+    public void visitNodeLabelChanges(long id, final LongSet added, final LongSet removed)\n     {\n         // record the state changes to be made to the store\n-        removed.each( label -> recordState.removeLabelFromNode( label, id ) );\n-        added.each( label -> recordState.addLabelToNode( label, id ) );\n+        removed.each(label -> recordState.removeLabelFromNode(label, id));\n+        added.each(label -> recordState.addLabelToNode(label, id));\n     }\n \n     @Override\n-    public void visitAddedIndex( IndexDescriptor index ) throws KernelException\n+    public void visitAddedIndex(IndexDescriptor index) throws KernelException\n     {\n-        schemaStateChanger.createSchemaRule( recordState, index );\n+        schemaStateChanger.createSchemaRule(recordState, index);\n     }\n \n     @Override\n-    public void visitRemovedIndex( IndexDescriptor index )\n+    public void visitRemovedIndex(IndexDescriptor index)\n     {\n-        schemaStateChanger.dropSchemaRule( recordState, index );\n+        schemaStateChanger.dropSchemaRule(recordState, index);\n     }\n \n     @Override\n-    public void visitAddedConstraint( ConstraintDescriptor constraint ) throws KernelException\n+    public void visitAddedConstraint(ConstraintDescriptor constraint) throws KernelException\n     {\n         clearSchemaState = true;\n-        long constraintId = schemaStorage.newRuleId( cursorTracer );\n+        long constraintId = schemaStorage.newRuleId(cursorTracer);\n \n-        switch ( constraint.type() )\n+        switch (constraint.type())\n         {\n-        case UNIQUE:\n-            visitAddedUniquenessConstraint( constraint.asUniquenessConstraint(), constraintId );\n-            break;\n+            case UNIQUE:\n+                visitAddedUniquenessConstraint(constraint.asUniquenessConstraint(), constraintId);\n+                break;\n \n-        case UNIQUE_EXISTS:\n-            visitAddedNodeKeyConstraint( constraint.asNodeKeyConstraint(), constraintId );\n-            break;\n+            case UNIQUE_EXISTS:\n+                visitAddedNodeKeyConstraint(constraint.asNodeKeyConstraint(), constraintId);\n+                break;\n \n-        case EXISTS:\n-            ConstraintDescriptor rule = constraintSemantics.createExistenceConstraint( constraintId, constraint );\n-            schemaStateChanger.createSchemaRule( recordState, rule );\n-            break;\n+            case EXISTS:\n+                ConstraintDescriptor rule = constraintSemantics.createExistenceConstraint(constraintId, constraint);\n+                schemaStateChanger.createSchemaRule(recordState, rule);\n+                break;\n \n-        default:\n-            throw new IllegalStateException( constraint.type().toString() );\n+            default:\n+                throw new IllegalStateException(constraint.type().toString());\n         }\n     }\n \n-    private void visitAddedUniquenessConstraint( UniquenessConstraintDescriptor uniqueConstraint, long constraintId ) throws KernelException\n+    private void visitAddedUniquenessConstraint(UniquenessConstraintDescriptor uniqueConstraint, long constraintId) throws KernelException\n     {\n-        IndexDescriptor indexRule = (IndexDescriptor) schemaStorage.loadSingleSchemaRule( uniqueConstraint.ownedIndexId(), cursorTracer );\n-        ConstraintDescriptor constraint = constraintSemantics.createUniquenessConstraintRule( constraintId, uniqueConstraint, indexRule.getId() );\n-        schemaStateChanger.createSchemaRule( recordState, constraint );\n-        schemaStateChanger.setConstraintIndexOwner( recordState, indexRule, constraintId );\n+        IndexDescriptor indexRule = (IndexDescriptor) schemaStorage.loadSingleSchemaRule(uniqueConstraint.ownedIndexId(), cursorTracer);\n+        ConstraintDescriptor constraint = constraintSemantics.createUniquenessConstraintRule(constraintId, uniqueConstraint, indexRule.getId());\n+        schemaStateChanger.createSchemaRule(recordState, constraint);\n+        schemaStateChanger.setConstraintIndexOwner(recordState, indexRule, constraintId);\n     }\n \n-    private void visitAddedNodeKeyConstraint( NodeKeyConstraintDescriptor uniqueConstraint, long constraintId ) throws KernelException\n+    private void visitAddedNodeKeyConstraint(NodeKeyConstraintDescriptor uniqueConstraint, long constraintId) throws KernelException\n     {\n-        IndexDescriptor indexRule = (IndexDescriptor) schemaStorage.loadSingleSchemaRule( uniqueConstraint.ownedIndexId(), cursorTracer );\n-        ConstraintDescriptor constraint = constraintSemantics.createNodeKeyConstraintRule( constraintId, uniqueConstraint, indexRule.getId() );\n-        schemaStateChanger.createSchemaRule( recordState, constraint );\n-        schemaStateChanger.setConstraintIndexOwner( recordState, indexRule, constraintId );\n+        IndexDescriptor indexRule = (IndexDescriptor) schemaStorage.loadSingleSchemaRule(uniqueConstraint.ownedIndexId(), cursorTracer);\n+        ConstraintDescriptor constraint = constraintSemantics.createNodeKeyConstraintRule(constraintId, uniqueConstraint, indexRule.getId());\n+        schemaStateChanger.createSchemaRule(recordState, constraint);\n+        schemaStateChanger.setConstraintIndexOwner(recordState, indexRule, constraintId);\n     }\n \n     @Override\n-    public void visitRemovedConstraint( ConstraintDescriptor constraint )\n+    public void visitRemovedConstraint(ConstraintDescriptor constraint)\n     {\n         clearSchemaState = true;\n         try\n         {\n-            ConstraintDescriptor rule = schemaStorage.constraintsGetSingle( constraint, cursorTracer );\n-            schemaStateChanger.dropSchemaRule( recordState, rule );\n+            ConstraintDescriptor rule = schemaStorage.constraintsGetSingle(constraint, cursorTracer);\n+            schemaStateChanger.dropSchemaRule(recordState, rule);\n \n-            if ( constraint.enforcesUniqueness() )\n+            if (constraint.enforcesUniqueness())\n             {\n                 // Remove the index for the constraint as well\n-                IndexDescriptor[] indexes = schemaStorage.indexGetForSchema( constraint.schema(), cursorTracer );\n-                for ( IndexDescriptor index : indexes )\n+                IndexDescriptor[] indexes = schemaStorage.indexGetForSchema(constraint.schema(), cursorTracer);\n+                for (IndexDescriptor index : indexes)\n                 {\n                     OptionalLong owningConstraintId = index.getOwningConstraintId();\n-                    if ( owningConstraintId.isPresent() && owningConstraintId.getAsLong() == rule.getId() )\n+                    if (owningConstraintId.isPresent() && owningConstraintId.getAsLong() == rule.getId())\n                     {\n-                        visitRemovedIndex( index );\n+                        visitRemovedIndex(index);\n                     }\n                     // Note that we _could_ also go through all the matching indexes that have isUnique == true and no owning constraint id, and remove those\n                     // as well. These might be orphaned indexes from failed constraint creations. However, since we want to allow multiple indexes and\n@@ -223,34 +223,32 @@ class TransactionToRecordStateVisitor extends TxStateVisitor.Adapter\n                     // the case, then we cannot remove them, since that would ruin the constraint they are being built for.\n                 }\n             }\n-        }\n-        catch ( SchemaRuleNotFoundException e )\n+        } catch (SchemaRuleNotFoundException e)\n         {\n             throw new IllegalStateException(\n-                    \"Constraint to be removed should exist, since its existence should have been validated earlier \" +\n-                            \"and the schema should have been locked.\", e );\n-        }\n-        catch ( DuplicateSchemaRuleException e )\n+              \"Constraint to be removed should exist, since its existence should have been validated earlier \" +\n+                \"and the schema should have been locked.\", e);\n+        } catch (DuplicateSchemaRuleException e)\n         {\n-            throw new IllegalStateException( \"Multiple constraints found for specified label and property.\", e );\n+            throw new IllegalStateException(\"Multiple constraints found for specified label and property.\", e);\n         }\n     }\n \n     @Override\n-    public void visitCreatedLabelToken( long id, String name, boolean internal )\n+    public void visitCreatedLabelToken(long id, String name, boolean internal)\n     {\n-        recordState.createLabelToken( name, id, internal );\n+        recordState.createLabelToken(name, id, internal);\n     }\n \n     @Override\n-    public void visitCreatedPropertyKeyToken( long id, String name, boolean internal )\n+    public void visitCreatedPropertyKeyToken(long id, String name, boolean internal)\n     {\n-        recordState.createPropertyKeyToken( name, id, internal );\n+        recordState.createPropertyKeyToken(name, id, internal);\n     }\n \n     @Override\n-    public void visitCreatedRelationshipTypeToken( long id, String name, boolean internal )\n+    public void visitCreatedRelationshipTypeToken(long id, String name, boolean internal)\n     {\n-        recordState.createRelationshipTypeToken( name, id, internal );\n+        recordState.createRelationshipTypeToken(name, id, internal);\n     }\n }\n",
            "diff_size": 81
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1597",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1597/ManagementData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1597/ManagementData.java\nindex 42bc2deef78..63bdb492ffb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1597/ManagementData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1597/ManagementData.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.jmx.impl;\n \n import javax.management.ObjectName;\n@@ -26,44 +27,44 @@ import org.neo4j.kernel.internal.KernelData;\n \n public final class ManagementData extends DependencyResolver.Adapter\n {\n-    private final KernelData kernel;\n-    private final ManagementSupport support;\n-    final ManagementBeanProvider provider;\n+  private final KernelData kernel;\n+  private final ManagementSupport support;\n+  final ManagementBeanProvider provider;\n \n-    public ManagementData( ManagementBeanProvider provider, KernelData kernel, ManagementSupport support )\n-    {\n-        this.provider = provider;\n-        this.kernel = kernel;\n-        this.support = support;\n-    }\n+  public ManagementData(ManagementBeanProvider provider, KernelData kernel, ManagementSupport support)\n+  {\n+    this.provider = provider;\n+    this.kernel = kernel;\n+    this.support = support;\n+  }\n \n-    public KernelData getKernelData()\n-    {\n-        return kernel;\n-    }\n+  public KernelData getKernelData()\n+  {\n+    return kernel;\n+  }\n \n-    ObjectName getObjectName( String... extraNaming )\n+  ObjectName getObjectName(String... extraNaming)\n+  {\n+    ObjectName name = support.createObjectName(kernel.instanceId(), provider.beanInterface, extraNaming);\n+    if (name == null)\n     {\n-        ObjectName name = support.createObjectName( kernel.instanceId(), provider.beanInterface, extraNaming );\n-        if ( name == null )\n-        {\n-            throw new IllegalArgumentException( provider.beanInterface\n-                                                + \" is not a Neo4j Management Bean interface\" );\n-        }\n-        return name;\n+      throw new IllegalArgumentException(provider.beanInterface\n+          + \" is not a Neo4j Management Bean interface\");\n     }\n+    return name;\n+  }\n \n-    void validate( Class<? extends Neo4jMBean> implClass )\n+  void validate(Class<? extends Neo4jMBean> implClass)\n+  {\n+    if (!provider.beanInterface.isAssignableFrom(implClass))\n     {\n-        if ( !provider.beanInterface.isAssignableFrom( implClass ) )\n-        {\n-            throw new IllegalStateException( implClass + \" does not implement \" + provider.beanInterface );\n-        }\n+      throw new IllegalStateException(implClass + \" does not implement \" + provider.beanInterface);\n     }\n+  }\n \n-    @Override\n-    public <T> T resolveDependency( Class<T> type, SelectionStrategy selector ) throws IllegalArgumentException\n-    {\n-        return getKernelData().graphDatabase().getDependencyResolver().resolveDependency( type, selector );\n-    }\n+  @Override\n+  public <T> T resolveDependency(Class<T> type, SelectionStrategy selector) throws IllegalArgumentException\n+  {\n+    return getKernelData().graphDatabase().getDependencyResolver().resolveDependency(type, selector);\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1597/ManagementData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1597/ManagementData.java\nindex 42bc2deef78..cede37302d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1597/ManagementData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1597/ManagementData.java\n@@ -47,9 +47,8 @@ public final class ManagementData extends DependencyResolver.Adapter\n         ObjectName name = support.createObjectName( kernel.instanceId(), provider.beanInterface, extraNaming );\n         if ( name == null )\n         {\n-            throw new IllegalArgumentException( provider.beanInterface\n-                                                + \" is not a Neo4j Management Bean interface\" );\n-        }\n+            throw new IllegalArgumentException( provider.beanInterface + \" is not a Neo4j Management Bean interface\" );\n+    }\n         return name;\n     }\n \n@@ -66,4 +65,4 @@ public final class ManagementData extends DependencyResolver.Adapter\n     {\n         return getKernelData().graphDatabase().getDependencyResolver().resolveDependency( type, selector );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
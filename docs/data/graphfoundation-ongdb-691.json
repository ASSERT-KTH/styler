{
    "project_name": "graphfoundation-ongdb",
    "error_id": "691",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "198",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/691/User.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/691/User.java\nindex 910e6231ce4..4f2fadc6023 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/691/User.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/691/User.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.security;\n \n import java.util.SortedSet;\n@@ -32,162 +33,169 @@ public class User\n       locks. Correctness depends on write-time assertions and this class remaining immutable. Please do not introduce\n       mutable fields here.\n      */\n-    /** User name */\n-    private final String name;\n-\n-    /** Authentication credentials used by the built in username/password authentication scheme */\n-    private final Credential credential;\n-\n-    /** Set of flags, eg. password_change_required */\n-    private final SortedSet<String> flags;\n+  /**\n+   * User name\n+   */\n+  private final String name;\n+\n+  /**\n+   * Authentication credentials used by the built in username/password authentication scheme\n+   */\n+  private final Credential credential;\n+\n+  /**\n+   * Set of flags, eg. password_change_required\n+   */\n+  private final SortedSet<String> flags;\n+\n+  public static final String PASSWORD_CHANGE_REQUIRED = \"password_change_required\";\n+\n+  private User(String name, Credential credential, SortedSet<String> flags)\n+  {\n+    this.name = name;\n+    this.credential = credential;\n+    this.flags = flags;\n+  }\n+\n+  public String name()\n+  {\n+    return name;\n+  }\n+\n+  public Credential credentials()\n+  {\n+    return credential;\n+  }\n+\n+  public boolean hasFlag(String flag)\n+  {\n+    return flags.contains(flag);\n+  }\n+\n+  public Iterable<String> getFlags()\n+  {\n+    return flags;\n+  }\n+\n+  public boolean passwordChangeRequired()\n+  {\n+    return flags.contains(PASSWORD_CHANGE_REQUIRED);\n+  }\n+\n+  /**\n+   * Use this user as a base for a new user object\n+   */\n+  public Builder augment()\n+  {\n+    return new Builder(this);\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n+    }\n \n-    public static final String PASSWORD_CHANGE_REQUIRED = \"password_change_required\";\n+    User user = (User) o;\n \n-    private User( String name, Credential credential, SortedSet<String> flags )\n+    if (!flags.equals(user.flags))\n     {\n-        this.name = name;\n-        this.credential = credential;\n-        this.flags = flags;\n+      return false;\n     }\n-\n-    public String name()\n+    if (credential != null ? !credential.equals(user.credential) : user.credential != null)\n     {\n-        return name;\n+      return false;\n     }\n-\n-    public Credential credentials()\n+    return name != null ? name.equals(user.name) : user.name == null;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = name != null ? name.hashCode() : 0;\n+    result = 31 * result + (credential != null ? credential.hashCode() : 0);\n+    result = 31 * result + (flags.hashCode());\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"User{\" +\n+        \"name='\" + name + '\\'' +\n+        \", credentials=\" + credential +\n+        \", flags=\" + flags +\n+        '}';\n+  }\n+\n+  public static class Builder\n+  {\n+    private String name;\n+    private Credential credential = Credential.INACCESSIBLE;\n+    private TreeSet<String> flags = new TreeSet<>();\n+\n+    public Builder()\n     {\n-        return credential;\n     }\n \n-    public boolean hasFlag( String flag )\n+    public Builder(String name, Credential credential)\n     {\n-        return flags.contains( flag );\n+      this.name = name;\n+      this.credential = credential;\n     }\n \n-    public Iterable<String> getFlags()\n+    public Builder(User base)\n     {\n-        return flags;\n+      name = base.name;\n+      credential = base.credential;\n+      flags.addAll(base.flags);\n     }\n \n-    public boolean passwordChangeRequired()\n+    public Builder withName(String name)\n     {\n-        return flags.contains( PASSWORD_CHANGE_REQUIRED );\n+      this.name = name;\n+      return this;\n     }\n \n-    /** Use this user as a base for a new user object */\n-    public Builder augment()\n+    public Builder withCredentials(Credential creds)\n     {\n-        return new Builder( this );\n+      this.credential = creds;\n+      return this;\n     }\n \n-    @Override\n-    public boolean equals( Object o )\n+    public Builder withFlag(String flag)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        User user = (User) o;\n-\n-        if ( !flags.equals( user.flags ) )\n-        {\n-            return false;\n-        }\n-        if ( credential != null ? !credential.equals( user.credential ) : user.credential != null )\n-        {\n-            return false;\n-        }\n-        return name != null ? name.equals( user.name ) : user.name == null;\n+      this.flags.add(flag);\n+      return this;\n     }\n \n-    @Override\n-    public int hashCode()\n+    public Builder withoutFlag(String flag)\n     {\n-        int result = name != null ? name.hashCode() : 0;\n-        result = 31 * result + ( credential != null ? credential.hashCode() : 0);\n-        result = 31 * result + ( flags.hashCode() );\n-        return result;\n+      this.flags.remove(flag);\n+      return this;\n     }\n \n-    @Override\n-    public String toString()\n+    public Builder withRequiredPasswordChange(boolean change)\n     {\n-        return \"User{\" +\n-                \"name='\" + name + '\\'' +\n-                \", credentials=\" + credential +\n-                \", flags=\" + flags +\n-                '}';\n+      if (change)\n+      {\n+        withFlag(PASSWORD_CHANGE_REQUIRED);\n+      } else\n+      {\n+        withoutFlag(PASSWORD_CHANGE_REQUIRED);\n+      }\n+      return this;\n     }\n \n-    public static class Builder\n+    public User build()\n     {\n-        private String name;\n-        private Credential credential = Credential.INACCESSIBLE;\n-        private TreeSet<String> flags = new TreeSet<>();\n-\n-        public Builder()\n-        {\n-        }\n-\n-        public Builder( String name, Credential credential )\n-        {\n-            this.name = name;\n-            this.credential = credential;\n-        }\n-\n-        public Builder( User base )\n-        {\n-            name = base.name;\n-            credential = base.credential;\n-            flags.addAll( base.flags );\n-        }\n-\n-        public Builder withName( String name )\n-        {\n-            this.name = name;\n-            return this;\n-        }\n-\n-        public Builder withCredentials( Credential creds )\n-        {\n-            this.credential = creds;\n-            return this;\n-        }\n-\n-        public Builder withFlag( String flag )\n-        {\n-            this.flags.add( flag );\n-            return this;\n-        }\n-\n-        public Builder withoutFlag( String flag )\n-        {\n-            this.flags.remove( flag );\n-            return this;\n-        }\n-\n-        public Builder withRequiredPasswordChange( boolean change )\n-        {\n-            if ( change )\n-            {\n-                withFlag( PASSWORD_CHANGE_REQUIRED );\n-            }\n-            else\n-            {\n-                withoutFlag( PASSWORD_CHANGE_REQUIRED );\n-            }\n-            return this;\n-        }\n-\n-        public User build()\n-        {\n-            return new User( name, credential, flags );\n-        }\n+      return new User(name, credential, flags);\n     }\n+  }\n }\n",
            "diff_size": 223
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/691/User.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/691/User.java\nindex 910e6231ce4..b9e0b6a99d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/691/User.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/691/User.java\n@@ -88,7 +88,8 @@ public class User\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -99,18 +100,20 @@ public class User\n         {\n             return false;\n         }\n-        if ( credential != null ? !credential.equals( user.credential ) : user.credential != null )\n+\n+if ( credential != null ? !credential.equals( user.credential ) : user.credential != null )\n         {\n             return false;\n         }\n-        return name != null ? name.equals( user.name ) : user.name == null;\n+\n+return name != null ? name.equals( user.name ) : user.name == null;\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = name != null ? name.hashCode() : 0;\n-        result = 31 * result + ( credential != null ? credential.hashCode() : 0);\n+        result = 31 * result + ( credential != null ? credential.hashCode() : 0 );\n         result = 31 * result + ( flags.hashCode() );\n         return result;\n     }\n@@ -118,11 +121,7 @@ public class User\n     @Override\n     public String toString()\n     {\n-        return \"User{\" +\n-                \"name='\" + name + '\\'' +\n-                \", credentials=\" + credential +\n-                \", flags=\" + flags +\n-                '}';\n+        return \"User{\" + \"name='\" + name + '\\'' + \", credentials=\" + credential + \", flags=\" + flags + '}';\n     }\n \n     public static class Builder\n@@ -190,4 +189,4 @@ public class User\n             return new User( name, credential, flags );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
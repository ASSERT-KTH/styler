{
    "project_name": "self-xdsd-self-storage",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "67",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            invoices.getById(1)\n        );\n        for(final InvoicedTask invoiced : ofInvoiceOne) {\n            final Task task = invoiced.task();\n            MatcherAssert.assertThat(\n                invoiced.invoice().invoiceId(),",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/26/SelfInvoicedTasksITCase.java\nindex 1e3be1616ca..9219c644376 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/26/SelfInvoicedTasksITCase.java\n@@ -64,7 +64,7 @@ public final class SelfInvoicedTasksITCase {\n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n             invoices.getById(1)\n         );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n+        for (final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/26/SelfInvoicedTasksITCase.java\nindex 1e3be1616ca..2b7e3bb8c6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/26/SelfInvoicedTasksITCase.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.*;\n@@ -34,6 +35,7 @@ import java.time.LocalDateTime;\n \n /**\n  * Integration tests for {@link SelfInvoicedTasks}.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.4\n@@ -44,7 +46,7 @@ public final class SelfInvoicedTasksITCase {\n      * We should not be able to iterate over all the\n      * invoiced tasks in Self.\n      */\n-    @Test (expected = UnsupportedOperationException.class)\n+    @Test(expected = UnsupportedOperationException.class)\n     public void cannotIterate() {\n         final InvoicedTasks tasks = new SelfJooq(\n             new H2Database()\n@@ -64,7 +66,7 @@ public final class SelfInvoicedTasksITCase {\n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n             invoices.getById(1)\n         );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n+        for (final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n@@ -91,10 +93,11 @@ public final class SelfInvoicedTasksITCase {\n \n     /**\n      * SelfInvoicedTask can register/Invoice a task.\n+     *\n      * @checkstyle ExecutableStatementCount (100 lines)\n      * @todo #79:30min Modify the test bellow to work solely\n-     *  with real data from the test H2 database. It should not\n-     *  require any mocking at all.\n+     * with real data from the test H2 database. It should not\n+     * require any mocking at all.\n      */\n     @Test\n     public void registersTask() {\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'\"amihaiemil/docker-java-api\"' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'\"john\"' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'18500' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'10' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "'0' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "'18500' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "'45' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/26/SelfInvoicedTasksITCase.java\nindex 1e3be1616ca..90d5f456c35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/26/SelfInvoicedTasksITCase.java\n@@ -44,7 +44,7 @@ public final class SelfInvoicedTasksITCase {\n      * We should not be able to iterate over all the\n      * invoiced tasks in Self.\n      */\n-    @Test (expected = UnsupportedOperationException.class)\n+    @Test(expected = UnsupportedOperationException.class)\n     public void cannotIterate() {\n         final InvoicedTasks tasks = new SelfJooq(\n             new H2Database()\n@@ -57,34 +57,45 @@ public final class SelfInvoicedTasksITCase {\n      */\n     @Test\n     public void returnsTasksOfInvoice() {\n-        final Storage storage = new SelfJooq(new H2Database());\n+        final Storage storage = new SelfJooq(\n+    new H2Database());\n         final Invoices invoices = storage.invoices();\n         final InvoicedTasks tasks = storage.invoicedTasks();\n \n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n-            invoices.getById(1)\n+            invoices.getById(\n+    1\n+    )\n         );\n         for(final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n-                Matchers.equalTo(1)\n+                Matchers.equalTo(\n+    1\n+    )\n             );\n             MatcherAssert.assertThat(\n                 task.project().repoFullName(),\n-                Matchers.equalTo(\"amihaiemil/docker-java-api\")\n+                Matchers.equalTo(\n+    \"amihaiemil/docker-java-api\"\n+    )\n             );\n             MatcherAssert.assertThat(\n                 task.project().provider(),\n-                Matchers.equalTo(Provider.Names.GITHUB)\n+                Matchers.equalTo(Provider.Names.GITHUB\n+    )\n             );\n             MatcherAssert.assertThat(\n                 task.assignee().username(),\n-                Matchers.equalTo(\"john\")\n+                Matchers.equalTo(\n+    \"john\"\n+    )\n             );\n             MatcherAssert.assertThat(\n                 task.role(),\n-                Matchers.equalTo(Contract.Roles.DEV)\n+                Matchers.equalTo(Contract.Roles.DEV\n+    )\n             );\n         }\n     }\n@@ -99,52 +110,69 @@ public final class SelfInvoicedTasksITCase {\n     @Test\n     public void registersTask() {\n         final Project project = Mockito.mock(Project.class);\n-        Mockito.when(project.provider()).thenReturn(Provider.Names.GITHUB);\n-        Mockito.when(project.repoFullName())\n-            .thenReturn(\"amihaiemil/docker-java-api\");\n+        Mockito.when(project.provider()).thenReturn(Provider.Names.GITHUB\n+    );\n+        Mockito.when(project.repoFullName()).thenReturn(\n+    \"amihaiemil/docker-java-api\");\n         final Contributor john = Mockito.mock(Contributor.class);\n-        Mockito.when(john.username()).thenReturn(\"john\");\n+        Mockito.when(john.username()).thenReturn(\n+    \"john\");\n         final Issue issue = Mockito.mock(Issue.class);\n-        Mockito.when(issue.issueId()).thenReturn(\"456\");\n+        Mockito.when(issue.issueId()).thenReturn(\n+    \"456\");\n \n         final Task task = Mockito.mock(Task.class);\n         Mockito.when(task.project()).thenReturn(project);\n         Mockito.when(task.assignee()).thenReturn(john);\n         Mockito.when(task.issue()).thenReturn(issue);\n-        Mockito.when(task.value()).thenReturn(BigDecimal.valueOf(18500));\n-        Mockito.when(task.role()).thenReturn(Contract.Roles.DEV);\n+        Mockito.when(task.value()).thenReturn(BigDecimal.valueOf(\n+    18500));\n+        Mockito.when(task.role()).thenReturn(Contract.Roles.DEV\n+    );\n         Mockito.when(task.assignmentDate()).thenReturn(LocalDateTime.now());\n         Mockito.when(task.deadline()).thenReturn(\n-            LocalDateTime.now().plusDays(10)\n+            LocalDateTime.now().plusDays(\n+    10\n+    )\n         );\n-        Mockito.when(task.estimation()).thenReturn(45);\n+        Mockito.when(task.estimation()).thenReturn(\n+    45);\n \n         final InvoicedTasks tasks = new SelfJooq(\n             new H2Database()\n         ).invoicedTasks();\n         final Invoice one = Mockito.mock(Invoice.class);\n-        Mockito.when(one.invoiceId()).thenReturn(1);\n+        Mockito.when(one.invoiceId()).thenReturn(\n+    1);\n         final InvoicedTask invoiced = tasks.register(\n-            one, task, BigDecimal.valueOf(0)\n+            one, task, BigDecimal.valueOf(\n+    0\n+    )\n         );\n \n         MatcherAssert.assertThat(invoiced.task(), Matchers.is(task));\n         MatcherAssert.assertThat(\n             invoiced.invoicedTaskId(),\n-            Matchers.greaterThan(1)\n+            Matchers.greaterThan(\n+    1\n+    )\n         );\n         MatcherAssert.assertThat(\n             invoiced.value(),\n-            Matchers.equalTo(BigDecimal.valueOf(18500))\n+            Matchers.equalTo(BigDecimal.valueOf(\n+    18500))\n         );\n         MatcherAssert.assertThat(\n             invoiced.task().estimation(),\n-            Matchers.equalTo(45)\n+            Matchers.equalTo(\n+    45\n+    )\n         );\n         MatcherAssert.assertThat(\n             invoiced.invoice().invoiceId(),\n-            Matchers.equalTo(1)\n+            Matchers.equalTo(\n+    1\n+    )\n         );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "50",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 35, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "column": "72",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "77",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 60, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "116",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 94, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "column": "96",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 97, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "99",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "column": "122",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 100, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "column": "102",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 103, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "column": "105",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "column": "128",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 106, expected level should be 103.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "column": "108",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 56, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "108",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "131",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "109",
                    "column": "146",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "169",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "column": "165",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "167",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "79",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "67",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 542).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "104",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "column": "119",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "149",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "155",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "column": "170",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "183",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "197",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "204",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "column": "219",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "232",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "246",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "266",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "273",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "275",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "column": "290",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "302",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "316",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "336",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "column": "351",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "373",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "387",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "407",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "409",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "column": "424",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "440",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "454",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "485",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "489",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "491",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "column": "506",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "524",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "538",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "542",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "104",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "135",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 37, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 40, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "column": "42",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "141",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 43, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "column": "45",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 46, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "column": "48",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "147",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 49, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "column": "51",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 88).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "150",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 52, expected level should be 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "column": "54",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/26/SelfInvoicedTasksITCase.java\nindex 1e3be1616ca..fcb333ffdea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/26/SelfInvoicedTasksITCase.java\n@@ -28,7 +28,6 @@ import org.hamcrest.MatcherAssert;\n import org.hamcrest.Matchers;\n import org.junit.Test;\n import org.mockito.Mockito;\n-\n import java.math.BigDecimal;\n import java.time.LocalDateTime;\n \n@@ -38,55 +37,63 @@ import java.time.LocalDateTime;\n  * @version $Id$\n  * @since 0.0.4\n  */\n+\n+\n public final class SelfInvoicedTasksITCase {\n \n     /**\n      * We should not be able to iterate over all the\n      * invoiced tasks in Self.\n      */\n-    @Test (expected = UnsupportedOperationException.class)\n+\n+\n+    @Test( expected= UnsupportedOperationException.class)\n     public void cannotIterate() {\n-        final InvoicedTasks tasks = new SelfJooq(\n-            new H2Database()\n-        ).invoicedTasks();\n-        tasks.iterator();\n+        final InvoicedTasks tasks= new SelfJooq(\n+new H2Database()\n+                                   ) .invoicedTasks(); tasks.iterator();\n     }\n \n     /**\n      * SelfInvoicedTasks should return en existing Invoice's tasks.\n      */\n+\n     @Test\n     public void returnsTasksOfInvoice() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Invoices invoices = storage.invoices();\n-        final InvoicedTasks tasks = storage.invoicedTasks();\n-\n-        final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n-            invoices.getById(1)\n-        );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n-            final Task task = invoiced.task();\n-            MatcherAssert.assertThat(\n-                invoiced.invoice().invoiceId(),\n-                Matchers.equalTo(1)\n-            );\n-            MatcherAssert.assertThat(\n-                task.project().repoFullName(),\n-                Matchers.equalTo(\"amihaiemil/docker-java-api\")\n-            );\n-            MatcherAssert.assertThat(\n-                task.project().provider(),\n-                Matchers.equalTo(Provider.Names.GITHUB)\n-            );\n-            MatcherAssert.assertThat(\n-                task.assignee().username(),\n-                Matchers.equalTo(\"john\")\n-            );\n-            MatcherAssert.assertThat(\n-                task.role(),\n-                Matchers.equalTo(Contract.Roles.DEV)\n-            );\n-        }\n+        final Storage storage= new SelfJooq(\n+new H2Database()\n+                               );\n+\n+\n+        final Invoices invoices= storage.invoices();\n+\n+\n+        final InvoicedTasks tasks= storage.invoicedTasks();\n+\n+\n+        final InvoicedTasks ofInvoiceOne= tasks.ofInvoice( invoices.getById( 1) );\n+\n+\n+        for( final InvoicedTask invoiced: ofInvoiceOne) {\n+                                                            final Task task= invoiced.task(); MatcherAssert.assertThat(\n+                                                                                                  invoiced.invoice() .invoiceId(),\n+                                                                                                  Matchers.equalTo( 1)\n+                                                                                              ); MatcherAssert.assertThat(\n+                                                                                                     task.project() .repoFullName(),\n+                                                                                                     Matchers.equalTo(\n+                                                                                                     \"amihaiemil/docker-java-api\" )\n+                                                                                                 ); MatcherAssert.assertThat(\n+                                                                                                        task.project() .provider(),\n+                                                                                                        Matchers.equalTo( Provider.Names.GITHUB)\n+                                                                                                    ); MatcherAssert.assertThat(\n+                                                                                                           task.assignee() .username(),\n+                                                                                                           Matchers.equalTo(\n+                                                                                                           \"john\" )\n+                                                                                                       ); MatcherAssert.assertThat(\n+                                                                                                              task.role(),\n+                                                                                                              Matchers.equalTo( Contract.Roles.DEV)\n+                                                                                                          );\n+                                                        }\n     }\n \n     /**\n@@ -96,55 +103,51 @@ public final class SelfInvoicedTasksITCase {\n      *  with real data from the test H2 database. It should not\n      *  require any mocking at all.\n      */\n+\n     @Test\n     public void registersTask() {\n-        final Project project = Mockito.mock(Project.class);\n-        Mockito.when(project.provider()).thenReturn(Provider.Names.GITHUB);\n-        Mockito.when(project.repoFullName())\n-            .thenReturn(\"amihaiemil/docker-java-api\");\n-        final Contributor john = Mockito.mock(Contributor.class);\n-        Mockito.when(john.username()).thenReturn(\"john\");\n-        final Issue issue = Mockito.mock(Issue.class);\n-        Mockito.when(issue.issueId()).thenReturn(\"456\");\n-\n-        final Task task = Mockito.mock(Task.class);\n-        Mockito.when(task.project()).thenReturn(project);\n-        Mockito.when(task.assignee()).thenReturn(john);\n-        Mockito.when(task.issue()).thenReturn(issue);\n-        Mockito.when(task.value()).thenReturn(BigDecimal.valueOf(18500));\n-        Mockito.when(task.role()).thenReturn(Contract.Roles.DEV);\n-        Mockito.when(task.assignmentDate()).thenReturn(LocalDateTime.now());\n-        Mockito.when(task.deadline()).thenReturn(\n-            LocalDateTime.now().plusDays(10)\n-        );\n-        Mockito.when(task.estimation()).thenReturn(45);\n-\n-        final InvoicedTasks tasks = new SelfJooq(\n-            new H2Database()\n-        ).invoicedTasks();\n-        final Invoice one = Mockito.mock(Invoice.class);\n-        Mockito.when(one.invoiceId()).thenReturn(1);\n-        final InvoicedTask invoiced = tasks.register(\n-            one, task, BigDecimal.valueOf(0)\n-        );\n-\n-        MatcherAssert.assertThat(invoiced.task(), Matchers.is(task));\n-        MatcherAssert.assertThat(\n-            invoiced.invoicedTaskId(),\n-            Matchers.greaterThan(1)\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.value(),\n-            Matchers.equalTo(BigDecimal.valueOf(18500))\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.task().estimation(),\n-            Matchers.equalTo(45)\n-        );\n-        MatcherAssert.assertThat(\n-            invoiced.invoice().invoiceId(),\n-            Matchers.equalTo(1)\n-        );\n-    }\n+        final Project project= Mockito.mock( Project.class); Mockito.when( project.provider() ).thenReturn( Provider.Names.GITHUB); Mockito.when( project.repoFullName() ).thenReturn(\n+                                                                                                                                        \"amihaiemil/docker-java-api\" );\n+\n+\n+        final Contributor john= Mockito.mock( Contributor.class); Mockito.when( john.username() ).thenReturn(\n+                                                                      \"john\" );\n+\n+\n+        final Issue issue= Mockito.mock( Issue.class); Mockito.when( issue.issueId() ).thenReturn(\n+                                                           \"456\" );\n+\n \n-}\n+        final Task task= Mockito.mock( Task.class); Mockito.when( task.project() ).thenReturn( project); Mockito.when( task.assignee() ).thenReturn( john); Mockito.when( task.issue() ).thenReturn( issue); Mockito.when( task.value() ).thenReturn( BigDecimal.valueOf( 18500) ); Mockito.when( task.role() ).thenReturn( Contract.Roles.DEV); Mockito.when( task.assignmentDate() ).thenReturn( LocalDateTime.now() ); Mockito.when( task.deadline() ).thenReturn( LocalDateTime.now() .plusDays( 10) ); Mockito.when( task.estimation() ).thenReturn( 45);\n+\n+\n+        final InvoicedTasks tasks= new SelfJooq(\n+new H2Database()\n+                                   ) .invoicedTasks();\n+\n+\n+        final Invoice one= Mockito.mock( Invoice.class); Mockito.when( one.invoiceId() ).thenReturn( 1);\n+\n+\n+        final InvoicedTask invoiced= tasks.register(\n+                                         one,\n+                                         task,\n+                                         BigDecimal.valueOf( 0)\n+                                     ); MatcherAssert.assertThat(\n+                                            invoiced.task(),\n+                                            Matchers.is( task)\n+                                        ); MatcherAssert.assertThat(\n+                                               invoiced.invoicedTaskId(),\n+                                               Matchers.greaterThan( 1)\n+                                           ); MatcherAssert.assertThat(\n+                                                  invoiced.value(),\n+                                                  Matchers.equalTo( BigDecimal.valueOf( 18500) )\n+                                              ); MatcherAssert.assertThat(\n+                                                     invoiced.task() .estimation(),\n+                                                     Matchers.equalTo( 45)\n+                                                 ); MatcherAssert.assertThat(\n+                                                        invoiced.invoice() .invoiceId(),\n+                                                        Matchers.equalTo( 1)\n+                                                    );\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 127
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/26/SelfInvoicedTasksITCase.java\nindex 1e3be1616ca..9219c644376 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/26/SelfInvoicedTasksITCase.java\n@@ -64,7 +64,7 @@ public final class SelfInvoicedTasksITCase {\n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n             invoices.getById(1)\n         );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n+        for (final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/26/SelfInvoicedTasksITCase.java\nindex 1e3be1616ca..9219c644376 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/26/SelfInvoicedTasksITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/26/SelfInvoicedTasksITCase.java\n@@ -64,7 +64,7 @@ public final class SelfInvoicedTasksITCase {\n         final InvoicedTasks ofInvoiceOne = tasks.ofInvoice(\n             invoices.getById(1)\n         );\n-        for(final InvoicedTask invoiced : ofInvoiceOne) {\n+        for (final InvoicedTask invoiced : ofInvoiceOne) {\n             final Task task = invoiced.task();\n             MatcherAssert.assertThat(\n                 invoiced.invoice().invoiceId(),\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
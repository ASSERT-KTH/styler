{
    "project_name": "neo4j-neo4j",
    "error_id": "1447",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "133",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "147",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "351",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1447/LocalTimeValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1447/LocalTimeValue.java\nindex 8ec24b32118..ac4ffa174ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1447/LocalTimeValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1447/LocalTimeValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.time.Clock;\n@@ -46,108 +47,106 @@ import static org.neo4j.memory.HeapEstimator.LOCAL_TIME_SIZE;\n import static org.neo4j.memory.HeapEstimator.shallowSizeOfInstance;\n import static org.neo4j.values.storable.DateTimeValue.parseZoneName;\n \n-public final class LocalTimeValue extends TemporalValue<LocalTime,LocalTimeValue>\n+public final class LocalTimeValue extends TemporalValue<LocalTime, LocalTimeValue>\n {\n-    private static final long INSTANCE_SIZE = shallowSizeOfInstance( LocalTimeValue.class ) + LOCAL_TIME_SIZE;\n+    private static final long INSTANCE_SIZE = shallowSizeOfInstance(LocalTimeValue.class) + LOCAL_TIME_SIZE;\n \n-    public static final LocalTimeValue MIN_VALUE = new LocalTimeValue( LocalTime.MIN );\n-    public static final LocalTimeValue MAX_VALUE = new LocalTimeValue( LocalTime.MAX );\n+    public static final LocalTimeValue MIN_VALUE = new LocalTimeValue(LocalTime.MIN);\n+    public static final LocalTimeValue MAX_VALUE = new LocalTimeValue(LocalTime.MAX);\n \n     private final LocalTime value;\n \n-    private LocalTimeValue( LocalTime value )\n+    private LocalTimeValue(LocalTime value)\n     {\n         this.value = value;\n     }\n \n-    public static LocalTimeValue localTime( LocalTime value )\n+    public static LocalTimeValue localTime(LocalTime value)\n     {\n-        return new LocalTimeValue( requireNonNull( value, \"LocalTime\" ) );\n+        return new LocalTimeValue(requireNonNull(value, \"LocalTime\"));\n     }\n \n-    public static LocalTimeValue localTime( int hour, int minute, int second, int nanosOfSecond )\n+    public static LocalTimeValue localTime(int hour, int minute, int second, int nanosOfSecond)\n     {\n-        return new LocalTimeValue( assertValidArgument( () -> LocalTime.of( hour, minute, second, nanosOfSecond ) ) );\n+        return new LocalTimeValue(assertValidArgument(() -> LocalTime.of(hour, minute, second, nanosOfSecond)));\n     }\n \n-    public static LocalTimeValue localTime( long nanoOfDay )\n+    public static LocalTimeValue localTime(long nanoOfDay)\n     {\n-        return new LocalTimeValue( localTimeRaw( nanoOfDay ) );\n+        return new LocalTimeValue(localTimeRaw(nanoOfDay));\n     }\n \n-    public static LocalTime localTimeRaw( long nanoOfDay )\n+    public static LocalTime localTimeRaw(long nanoOfDay)\n     {\n-        return assertValidArgument( () -> LocalTime.ofNanoOfDay( nanoOfDay ) );\n+        return assertValidArgument(() -> LocalTime.ofNanoOfDay(nanoOfDay));\n     }\n \n-    public static LocalTimeValue parse( CharSequence text )\n+    public static LocalTimeValue parse(CharSequence text)\n     {\n-        return parse( LocalTimeValue.class, PATTERN, LocalTimeValue::parse, text );\n+        return parse(LocalTimeValue.class, PATTERN, LocalTimeValue::parse, text);\n     }\n \n-    public static LocalTimeValue parse( TextValue text )\n+    public static LocalTimeValue parse(TextValue text)\n     {\n-        return parse( LocalTimeValue.class, PATTERN, LocalTimeValue::parse, text );\n+        return parse(LocalTimeValue.class, PATTERN, LocalTimeValue::parse, text);\n     }\n \n-    public static LocalTimeValue now( Clock clock )\n+    public static LocalTimeValue now(Clock clock)\n     {\n-        return new LocalTimeValue( LocalTime.now( clock ) );\n+        return new LocalTimeValue(LocalTime.now(clock));\n     }\n \n-    public static LocalTimeValue now( Clock clock, String timezone )\n+    public static LocalTimeValue now(Clock clock, String timezone)\n     {\n-        return now( clock.withZone( parseZoneName( timezone ) ) );\n+        return now(clock.withZone(parseZoneName(timezone)));\n     }\n \n-    public static LocalTimeValue now( Clock clock, Supplier<ZoneId> defaultZone )\n+    public static LocalTimeValue now(Clock clock, Supplier<ZoneId> defaultZone)\n     {\n-        return now( clock.withZone( defaultZone.get() ) );\n+        return now(clock.withZone(defaultZone.get()));\n     }\n \n-    public static LocalTimeValue build( MapValue map, Supplier<ZoneId> defaultZone )\n+    public static LocalTimeValue build(MapValue map, Supplier<ZoneId> defaultZone)\n     {\n-        return StructureBuilder.build( builder( defaultZone ), map );\n+        return StructureBuilder.build(builder(defaultZone), map);\n     }\n \n-    public static LocalTimeValue select( AnyValue from, Supplier<ZoneId> defaultZone )\n+    public static LocalTimeValue select(AnyValue from, Supplier<ZoneId> defaultZone)\n     {\n-        return builder( defaultZone ).selectTime( from );\n+        return builder(defaultZone).selectTime(from);\n     }\n \n     public static LocalTimeValue truncate(\n-            TemporalUnit unit,\n-            TemporalValue input,\n-            MapValue fields,\n-            Supplier<ZoneId> defaultZone )\n+      TemporalUnit unit,\n+      TemporalValue input,\n+      MapValue fields,\n+      Supplier<ZoneId> defaultZone)\n     {\n         LocalTime localTime = input.getLocalTimePart();\n-        LocalTime truncatedLT = assertValidUnit( () -> localTime.truncatedTo( unit ) );\n-        if ( fields.size() == 0 )\n+        LocalTime truncatedLT = assertValidUnit(() -> localTime.truncatedTo(unit));\n+        if (fields.size() == 0)\n         {\n-            return localTime( truncatedLT );\n-        }\n-        else\n+            return localTime(truncatedLT);\n+        } else\n         {\n-            return updateFieldMapWithConflictingSubseconds( fields, unit, truncatedLT,\n-                    ( mapValue, localTime1 ) -> {\n-                        if ( mapValue.size() == 0 )\n-                        {\n-                            return localTime( localTime1 );\n-                        }\n-                        else\n-                        {\n-                            return build( mapValue.updatedWith( \"time\", localTime( localTime1 ) ), defaultZone );\n-                        }\n-                    } );\n+            return updateFieldMapWithConflictingSubseconds(fields, unit, truncatedLT,\n+              (mapValue, localTime1) -> {\n+                  if (mapValue.size() == 0)\n+                  {\n+                      return localTime(localTime1);\n+                  } else\n+                  {\n+                      return build(mapValue.updatedWith(\"time\", localTime(localTime1)), defaultZone);\n+                  }\n+              });\n         }\n     }\n \n-    static final LocalTime DEFAULT_LOCAL_TIME = LocalTime.of( TemporalFields.hour.defaultValue, TemporalFields.minute.defaultValue );\n+    static final LocalTime DEFAULT_LOCAL_TIME = LocalTime.of(TemporalFields.hour.defaultValue, TemporalFields.minute.defaultValue);\n \n-    private static TimeValue.TimeBuilder<LocalTimeValue> builder( Supplier<ZoneId> defaultZone )\n+    private static TimeValue.TimeBuilder<LocalTimeValue> builder(Supplier<ZoneId> defaultZone)\n     {\n-        return new TimeValue.TimeBuilder<>( defaultZone )\n+        return new TimeValue.TimeBuilder<>(defaultZone)\n         {\n             @Override\n             protected boolean supportsTimeZone()\n@@ -159,45 +158,44 @@ public final class LocalTimeValue extends TemporalValue<LocalTime,LocalTimeValue\n             public LocalTimeValue buildInternal()\n             {\n                 LocalTime result;\n-                if ( fields.containsKey( TemporalFields.time ) )\n+                if (fields.containsKey(TemporalFields.time))\n                 {\n-                    AnyValue time = fields.get( TemporalFields.time );\n-                    if ( !(time instanceof TemporalValue) )\n+                    AnyValue time = fields.get(TemporalFields.time);\n+                    if (!(time instanceof TemporalValue))\n                     {\n-                        throw new InvalidArgumentException( String.format( \"Cannot construct local time from: %s\", time ) );\n+                        throw new InvalidArgumentException(String.format(\"Cannot construct local time from: %s\", time));\n                     }\n                     result = ((TemporalValue) time).getLocalTimePart();\n-                }\n-                else\n+                } else\n                 {\n                     result = DEFAULT_LOCAL_TIME;\n                 }\n \n-                result = assignAllFields( result );\n-                return localTime( result );\n+                result = assignAllFields(result);\n+                return localTime(result);\n             }\n \n             @Override\n             protected LocalTimeValue selectTime(\n-                    AnyValue time )\n+              AnyValue time)\n             {\n \n-                if ( !(time instanceof TemporalValue) )\n+                if (!(time instanceof TemporalValue))\n                 {\n-                    throw new InvalidArgumentException( String.format( \"Cannot construct local time from: %s\", time ) );\n+                    throw new InvalidArgumentException(String.format(\"Cannot construct local time from: %s\", time));\n                 }\n                 TemporalValue v = (TemporalValue) time;\n                 LocalTime lt = v.getLocalTimePart();\n-                return localTime( lt );\n+                return localTime(lt);\n             }\n         };\n     }\n \n     @Override\n-    int unsafeCompareTo( Value otherValue )\n+    int unsafeCompareTo(Value otherValue)\n     {\n         LocalTimeValue other = (LocalTimeValue) otherValue;\n-        return value.compareTo( other.value );\n+        return value.compareTo(other.value);\n     }\n \n     @Override\n@@ -215,7 +213,7 @@ public final class LocalTimeValue extends TemporalValue<LocalTime,LocalTimeValue\n     @Override\n     LocalDate getDatePart()\n     {\n-        throw new UnsupportedTemporalUnitException( String.format( \"Cannot get the date of: %s\", this ) );\n+        throw new UnsupportedTemporalUnitException(String.format(\"Cannot get the date of: %s\", this));\n     }\n \n     @Override\n@@ -225,14 +223,14 @@ public final class LocalTimeValue extends TemporalValue<LocalTime,LocalTimeValue\n     }\n \n     @Override\n-    OffsetTime getTimePart( Supplier<ZoneId> defaultZone )\n+    OffsetTime getTimePart(Supplier<ZoneId> defaultZone)\n     {\n-        ZoneOffset currentOffset = assertValidArgument( () ->  ZonedDateTime.ofInstant( Instant.now(), defaultZone.get() ) ).getOffset();\n-        return OffsetTime.of( value, currentOffset );\n+        ZoneOffset currentOffset = assertValidArgument(() -> ZonedDateTime.ofInstant(Instant.now(), defaultZone.get())).getOffset();\n+        return OffsetTime.of(value, currentOffset);\n     }\n \n     @Override\n-    ZoneId getZoneId( Supplier<ZoneId> defaultZone )\n+    ZoneId getZoneId(Supplier<ZoneId> defaultZone)\n     {\n         return defaultZone.get();\n     }\n@@ -240,7 +238,7 @@ public final class LocalTimeValue extends TemporalValue<LocalTime,LocalTimeValue\n     @Override\n     ZoneOffset getZoneOffset()\n     {\n-        throw new UnsupportedTemporalUnitException( String.format( \"Cannot get the offset of: %s\", this ) );\n+        throw new UnsupportedTemporalUnitException(String.format(\"Cannot get the offset of: %s\", this));\n     }\n \n     @Override\n@@ -256,21 +254,21 @@ public final class LocalTimeValue extends TemporalValue<LocalTime,LocalTimeValue\n     }\n \n     @Override\n-    public boolean equals( Value other )\n+    public boolean equals(Value other)\n     {\n-        return other instanceof LocalTimeValue && value.equals( ((LocalTimeValue) other).value );\n+        return other instanceof LocalTimeValue && value.equals(((LocalTimeValue) other).value);\n     }\n \n     @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n+    public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n     {\n-        writer.writeLocalTime( value );\n+        writer.writeLocalTime(value);\n     }\n \n     @Override\n     public String prettyPrint()\n     {\n-        return assertPrintable( () -> value.format( DateTimeFormatter.ISO_LOCAL_TIME ) );\n+        return assertPrintable(() -> value.format(DateTimeFormatter.ISO_LOCAL_TIME));\n     }\n \n     @Override\n@@ -286,27 +284,27 @@ public final class LocalTimeValue extends TemporalValue<LocalTime,LocalTimeValue\n     }\n \n     @Override\n-    public <T> T map( ValueMapper<T> mapper )\n+    public <T> T map(ValueMapper<T> mapper)\n     {\n-        return mapper.mapLocalTime( this );\n+        return mapper.mapLocalTime(this);\n     }\n \n     @Override\n-    public LocalTimeValue add( DurationValue duration )\n+    public LocalTimeValue add(DurationValue duration)\n     {\n-        return replacement( assertValidArithmetic( () -> value.plusNanos( duration.nanosOfDay() ) ) );\n+        return replacement(assertValidArithmetic(() -> value.plusNanos(duration.nanosOfDay())));\n     }\n \n     @Override\n-    public LocalTimeValue sub( DurationValue duration )\n+    public LocalTimeValue sub(DurationValue duration)\n     {\n-        return replacement( assertValidArithmetic( () -> value.minusNanos( duration.nanosOfDay() ) ) );\n+        return replacement(assertValidArithmetic(() -> value.minusNanos(duration.nanosOfDay())));\n     }\n \n     @Override\n-    LocalTimeValue replacement( LocalTime time )\n+    LocalTimeValue replacement(LocalTime time)\n     {\n-        return time == value ? this : new LocalTimeValue( time );\n+        return time == value ? this : new LocalTimeValue(time);\n     }\n \n     @Override\n@@ -316,51 +314,50 @@ public final class LocalTimeValue extends TemporalValue<LocalTime,LocalTimeValue\n     }\n \n     static final String TIME_PATTERN = \"(?:(?:(?<longHour>[0-9]{1,2})(?::(?<longMinute>[0-9]{1,2})\"\n-                                       + \"(?::(?<longSecond>[0-9]{1,2})(?:\\\\.(?<longFraction>[0-9]{1,9}))?)?)?)|\"\n-                                       + \"(?:(?<shortHour>[0-9]{2})(?:(?<shortMinute>[0-9]{2})\"\n-                                       + \"(?:(?<shortSecond>[0-9]{2})(?:\\\\.(?<shortFraction>[0-9]{1,9}))?)?)?))\";\n-    private static final Pattern PATTERN = Pattern.compile( \"(?:T)?\" + TIME_PATTERN );\n+      + \"(?::(?<longSecond>[0-9]{1,2})(?:\\\\.(?<longFraction>[0-9]{1,9}))?)?)?)|\"\n+      + \"(?:(?<shortHour>[0-9]{2})(?:(?<shortMinute>[0-9]{2})\"\n+      + \"(?:(?<shortSecond>[0-9]{2})(?:\\\\.(?<shortFraction>[0-9]{1,9}))?)?)?))\";\n+    private static final Pattern PATTERN = Pattern.compile(\"(?:T)?\" + TIME_PATTERN);\n \n-    private static LocalTimeValue parse( Matcher matcher )\n+    private static LocalTimeValue parse(Matcher matcher)\n     {\n-        return new LocalTimeValue( parseTime( matcher ) );\n+        return new LocalTimeValue(parseTime(matcher));\n     }\n \n-    static LocalTime parseTime( Matcher matcher )\n+    static LocalTime parseTime(Matcher matcher)\n     {\n         int hour;\n         int minute;\n         int second;\n         int fraction;\n-        String longHour = matcher.group( \"longHour\" );\n-        if ( longHour != null )\n+        String longHour = matcher.group(\"longHour\");\n+        if (longHour != null)\n         {\n-            hour = parseInt( longHour );\n-            minute = optInt( matcher.group( \"longMinute\" ) );\n-            second = optInt( matcher.group( \"longSecond\" ) );\n-            fraction = parseNanos( matcher.group( \"longFraction\" ) );\n-        }\n-        else\n+            hour = parseInt(longHour);\n+            minute = optInt(matcher.group(\"longMinute\"));\n+            second = optInt(matcher.group(\"longSecond\"));\n+            fraction = parseNanos(matcher.group(\"longFraction\"));\n+        } else\n         {\n-            String shortHour = matcher.group( \"shortHour\" );\n-            hour = parseInt( shortHour );\n-            minute = optInt( matcher.group( \"shortMinute\" ) );\n-            second = optInt( matcher.group( \"shortSecond\" ) );\n-            fraction = parseNanos( matcher.group( \"shortFraction\" ) );\n+            String shortHour = matcher.group(\"shortHour\");\n+            hour = parseInt(shortHour);\n+            minute = optInt(matcher.group(\"shortMinute\"));\n+            second = optInt(matcher.group(\"shortSecond\"));\n+            fraction = parseNanos(matcher.group(\"shortFraction\"));\n         }\n-        return assertParsable( () -> LocalTime.of( hour, minute, second, fraction ) );\n+        return assertParsable(() -> LocalTime.of(hour, minute, second, fraction));\n     }\n \n-    private static int parseNanos( String value )\n+    private static int parseNanos(String value)\n     {\n-        if ( value == null )\n+        if (value == null)\n         {\n             return 0;\n         }\n-        int nanos = parseInt( value );\n-        if ( nanos != 0 )\n+        int nanos = parseInt(value);\n+        if (nanos != 0)\n         {\n-            for ( int i = value.length(); i < 9; i++ )\n+            for (int i = value.length(); i < 9; i++)\n             {\n                 nanos *= 10;\n             }\n@@ -368,8 +365,8 @@ public final class LocalTimeValue extends TemporalValue<LocalTime,LocalTimeValue\n         return nanos;\n     }\n \n-    static int optInt( String value )\n+    static int optInt(String value)\n     {\n-        return value == null ? 0 : parseInt( value );\n+        return value == null ? 0 : parseInt(value);\n     }\n }\n",
            "diff_size": 112
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3809",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3809/ConsoleUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3809/ConsoleUtil.java\nindex 0f124905745..7e9ec5544f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3809/ConsoleUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3809/ConsoleUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.console.input;\n \n import io.airlift.airline.Cli;\n@@ -37,87 +38,85 @@ import static org.neo4j.helpers.ArrayUtil.join;\n \n public class ConsoleUtil\n {\n-    public static final Listener<PrintStream> NO_PROMPT = out ->\n-    {   // Do nothing\n-    };\n+  public static final Listener<PrintStream> NO_PROMPT = out ->\n+  {   // Do nothing\n+  };\n \n-    public static Listener<PrintStream> staticPrompt( final String prompt )\n-    {\n-        return out -> out.print( prompt );\n-    }\n+  public static Listener<PrintStream> staticPrompt(final String prompt)\n+  {\n+    return out -> out.print(prompt);\n+  }\n \n-    public static final PrintStream NULL_PRINT_STREAM = new PrintStream( NullOutputStream.NULL_OUTPUT_STREAM );\n+  public static final PrintStream NULL_PRINT_STREAM = new PrintStream(NullOutputStream.NULL_OUTPUT_STREAM);\n \n-    public static String[] tokenizeStringWithQuotes( String string )\n+  public static String[] tokenizeStringWithQuotes(String string)\n+  {\n+    ArrayList<String> result = new ArrayList<>();\n+    string = string.trim();\n+    boolean inside = string.startsWith(\"\\\"\");\n+    StringTokenizer quoteTokenizer = new StringTokenizer(string, \"\\\"\");\n+    while (quoteTokenizer.hasMoreTokens())\n     {\n-        ArrayList<String> result = new ArrayList<>();\n-        string = string.trim();\n-        boolean inside = string.startsWith( \"\\\"\" );\n-        StringTokenizer quoteTokenizer = new StringTokenizer( string, \"\\\"\" );\n-        while ( quoteTokenizer.hasMoreTokens() )\n-        {\n-            String token = quoteTokenizer.nextToken();\n-            token = token.trim();\n-            if ( token.length() == 0 )\n-            {\n-                // Skip it\n-            }\n-            else if ( inside )\n-            {\n-                // Don't split\n-                result.add( token );\n-            }\n-            else\n-            {\n-                splitAndKeepEscapedSpaces( token, false, result );\n-            }\n-            inside = !inside;\n-        }\n-        return result.toArray( new String[result.size()] );\n+      String token = quoteTokenizer.nextToken();\n+      token = token.trim();\n+      if (token.length() == 0)\n+      {\n+        // Skip it\n+      } else if (inside)\n+      {\n+        // Don't split\n+        result.add(token);\n+      } else\n+      {\n+        splitAndKeepEscapedSpaces(token, false, result);\n+      }\n+      inside = !inside;\n     }\n+    return result.toArray(new String[result.size()]);\n+  }\n \n-    private static void splitAndKeepEscapedSpaces( String string, boolean preserveEscapes, Collection<String> into )\n+  private static void splitAndKeepEscapedSpaces(String string, boolean preserveEscapes, Collection<String> into)\n+  {\n+    StringBuilder current = new StringBuilder();\n+    for (int i = 0; i < string.length(); i++)\n     {\n-        StringBuilder current = new StringBuilder();\n-        for ( int i = 0; i < string.length(); i++ )\n-        {\n-            char ch = string.charAt( i );\n-            if ( ch == ' ' )\n-            {\n-                boolean isGluedSpace = i > 0 && string.charAt( i - 1 ) == '\\\\';\n-                if ( !isGluedSpace )\n-                {\n-                    into.add( current.toString() );\n-                    current = new StringBuilder();\n-                    continue;\n-                }\n-            }\n-\n-            if ( preserveEscapes || ch != '\\\\' )\n-            {\n-                current.append( ch );\n-            }\n-        }\n-        if ( current.length() > 0 )\n+      char ch = string.charAt(i);\n+      if (ch == ' ')\n+      {\n+        boolean isGluedSpace = i > 0 && string.charAt(i - 1) == '\\\\';\n+        if (!isGluedSpace)\n         {\n-            into.add( current.toString() );\n+          into.add(current.toString());\n+          current = new StringBuilder();\n+          continue;\n         }\n-    }\n+      }\n \n-    public static InputStream oneCommand( String... args )\n-    {\n-        String string = join( args, \" \" );\n-        return new ByteArrayInputStream( string.getBytes() );\n+      if (preserveEscapes || ch != '\\\\')\n+      {\n+        current.append(ch);\n+      }\n     }\n-\n-    public static String airlineHelp( Cli<?> cli )\n+    if (current.length() > 0)\n     {\n-        StringBuilder builder = new StringBuilder();\n-        Help.help( cli.getMetadata(), Collections.emptyList(), builder );\n-        return builder.toString();\n+      into.add(current.toString());\n     }\n+  }\n \n-    private ConsoleUtil()\n-    {\n-    }\n+  public static InputStream oneCommand(String... args)\n+  {\n+    String string = join(args, \" \");\n+    return new ByteArrayInputStream(string.getBytes());\n+  }\n+\n+  public static String airlineHelp(Cli<?> cli)\n+  {\n+    StringBuilder builder = new StringBuilder();\n+    Help.help(cli.getMetadata(), Collections.emptyList(), builder);\n+    return builder.toString();\n+  }\n+\n+  private ConsoleUtil()\n+  {\n+  }\n }\n",
            "diff_size": 97
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "90",
                    "column": "41",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3809/ConsoleUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3809/ConsoleUtil.java\nindex 0f124905745..ce6b6ebabce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3809/ConsoleUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3809/ConsoleUtil.java\n@@ -38,7 +38,8 @@ import static org.neo4j.helpers.ArrayUtil.join;\n public class ConsoleUtil\n {\n     public static final Listener<PrintStream> NO_PROMPT = out ->\n-    {   // Do nothing\n+    {\n+    // Do nothing\n     };\n \n     public static Listener<PrintStream> staticPrompt( final String prompt )\n@@ -71,9 +72,11 @@ public class ConsoleUtil\n             {\n                 splitAndKeepEscapedSpaces( token, false, result );\n             }\n-            inside = !inside;\n+\n+inside = !inside;\n         }\n-        return result.toArray( new String[result.size()] );\n+\n+return result.toArray( new String[result.size()] );\n     }\n \n     private static void splitAndKeepEscapedSpaces( String string, boolean preserveEscapes, Collection<String> into )\n@@ -84,7 +87,7 @@ public class ConsoleUtil\n             char ch = string.charAt( i );\n             if ( ch == ' ' )\n             {\n-                boolean isGluedSpace = i > 0 && string.charAt( i - 1 ) == '\\\\';\n+                boolean isGluedSpace = i> 0 && string.charAt( i - 1 ) == '\\\\';\n                 if ( !isGluedSpace )\n                 {\n                     into.add( current.toString() );\n@@ -120,4 +123,4 @@ public class ConsoleUtil\n     private ConsoleUtil()\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
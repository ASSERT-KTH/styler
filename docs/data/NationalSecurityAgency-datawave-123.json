{
    "project_name": "NationalSecurityAgency-datawave",
    "error_id": "123",
    "information": {
        "errors": [
            {
                "line": "9",
                "severity": "error",
                "message": "Accumulo non-public classes imported",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "import org.apache.accumulo.core.client.IteratorSetting;\nimport org.apache.accumulo.core.clientImpl.ScannerOptions;\nimport org.apache.accumulo.core.dataImpl.thrift.IterInfo;\n\nimport com.google.common.collect.Lists;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/123/SessionOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/intellij/123/SessionOptions.java\nindex 1be2d50a6cb..133eace9444 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/123/SessionOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/intellij/123/SessionOptions.java\n@@ -12,38 +12,38 @@ import com.google.common.collect.Lists;\n \n /**\n  * Extension to allow an open constructor\n- * \n+ * <p>\n  * Justification: constructor\n  */\n public class SessionOptions extends ScannerOptions {\n-    \n-    protected ShardQueryConfiguration config;\n-    \n-    public SessionOptions() {\n-        super();\n-    }\n-    \n-    public SessionOptions(SessionOptions other) {\n-        super(other);\n-        this.config = other.config;\n-    }\n-    \n-    public void setQueryConfig(ShardQueryConfiguration config) {\n-        this.config = config;\n-    }\n-    \n-    public ShardQueryConfiguration getConfiguration() {\n-        return config;\n-    }\n-    \n-    public Collection<IteratorSetting> getIterators() {\n-        \n-        Collection<IteratorSetting> settings = Lists.newArrayList();\n-        for (IterInfo iter : serverSideIteratorList) {\n-            IteratorSetting setting = new IteratorSetting(iter.getPriority(), iter.getIterName(), iter.getClassName());\n-            setting.addOptions(serverSideIteratorOptions.get(iter.getIterName()));\n-            settings.add(setting);\n-        }\n-        return settings;\n+\n+  protected ShardQueryConfiguration config;\n+\n+  public SessionOptions() {\n+    super();\n+  }\n+\n+  public SessionOptions(SessionOptions other) {\n+    super(other);\n+    this.config = other.config;\n+  }\n+\n+  public void setQueryConfig(ShardQueryConfiguration config) {\n+    this.config = config;\n+  }\n+\n+  public ShardQueryConfiguration getConfiguration() {\n+    return config;\n+  }\n+\n+  public Collection<IteratorSetting> getIterators() {\n+\n+    Collection<IteratorSetting> settings = Lists.newArrayList();\n+    for (IterInfo iter : serverSideIteratorList) {\n+      IteratorSetting setting = new IteratorSetting(iter.getPriority(), iter.getIterName(), iter.getClassName());\n+      setting.addOptions(serverSideIteratorOptions.get(iter.getIterName()));\n+      settings.add(setting);\n     }\n+    return settings;\n+  }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/123/SessionOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/naturalize/123/SessionOptions.java\nindex 1be2d50a6cb..c59b22c80a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/123/SessionOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/naturalize/123/SessionOptions.java\n@@ -46,4 +46,4 @@ public class SessionOptions extends ScannerOptions {\n         }\n         return settings;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "7",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/123/SessionOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/codebuff/123/SessionOptions.java\nindex 1be2d50a6cb..cfa89029fed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/123/SessionOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/codebuff/123/SessionOptions.java\n@@ -1,13 +1,10 @@\n package datawave.query.tables;\n \n import java.util.Collection;\n-\n import datawave.query.config.ShardQueryConfiguration;\n-\n import org.apache.accumulo.core.client.IteratorSetting;\n import org.apache.accumulo.core.clientImpl.ScannerOptions;\n import org.apache.accumulo.core.dataImpl.thrift.IterInfo;\n-\n import com.google.common.collect.Lists;\n \n /**\n@@ -15,29 +12,30 @@ import com.google.common.collect.Lists;\n  * \n  * Justification: constructor\n  */\n+\n+\n public class SessionOptions extends ScannerOptions {\n-    \n+\n     protected ShardQueryConfiguration config;\n-    \n+\n     public SessionOptions() {\n         super();\n     }\n-    \n+\n     public SessionOptions(SessionOptions other) {\n         super(other);\n         this.config = other.config;\n     }\n-    \n+\n     public void setQueryConfig(ShardQueryConfiguration config) {\n         this.config = config;\n     }\n-    \n+\n     public ShardQueryConfiguration getConfiguration() {\n         return config;\n     }\n-    \n+\n     public Collection<IteratorSetting> getIterators() {\n-        \n         Collection<IteratorSetting> settings = Lists.newArrayList();\n         for (IterInfo iter : serverSideIteratorList) {\n             IteratorSetting setting = new IteratorSetting(iter.getPriority(), iter.getIterName(), iter.getClassName());\n@@ -46,4 +44,4 @@ public class SessionOptions extends ScannerOptions {\n         }\n         return settings;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "100",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "84",
                "severity": "error",
                "message": "'}' at column 84 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public void initialize(\n      StatisticsThirdQuartileMustBeANumberOnNumericDataType constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\nindex b9aa5d59265..b0c86bf4208 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n@@ -27,7 +27,7 @@ public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator impl\n   public void initialize(\n       StatisticsThirdQuartileMustBeANumberOnNumericDataType constraintAnnotation) {}\n \n-  /*\n+      /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\nindex b9aa5d59265..07345dd74a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n@@ -11,25 +11,25 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n /**\n  * Validates the statistics of a variable. It checks the third quartile has a numeric string, if the\n  * variable has a numeric data type.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator implements\n     ConstraintValidator<StatisticsThirdQuartileMustBeANumberOnNumericDataType, Variable> {\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n   public void initialize(\n-      StatisticsThirdQuartileMustBeANumberOnNumericDataType constraintAnnotation) {}\n+      StatisticsThirdQuartileMustBeANumberOnNumericDataType constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 228).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\nindex b9aa5d59265..4cb56a64d06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n@@ -15,8 +15,7 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n  * @author Daniel Katzberg\n  *\n  */\n-public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator implements\n-    ConstraintValidator<StatisticsThirdQuartileMustBeANumberOnNumericDataType, Variable> {\n+public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator implements ConstraintValidator<StatisticsThirdQuartileMustBeANumberOnNumericDataType, Variable> {\n \n   /*\n    * (non-Javadoc)\n@@ -27,7 +26,7 @@ public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator impl\n   public void initialize(\n       StatisticsThirdQuartileMustBeANumberOnNumericDataType constraintAnnotation) {}\n \n-  /*\n+/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n@@ -35,12 +34,8 @@ public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator impl\n    */\n   @Override\n   public boolean isValid(Variable variable, ConstraintValidatorContext context) {\n-\n-    if (variable == null || variable.getDataType() == null\n-        || variable.getDistribution() == null\n-        || variable.getDistribution().getStatistics() == null\n-        || variable.getDistribution().getStatistics().getThirdQuartile() == null\n-        || !variable.getDataType().equals(DataTypes.NUMERIC)) {\n+  if (variable == null || variable.getDataType() == null\n+        || variable.getDistribution() == null || variable.getDistribution().getStatistics() == null || variable.getDistribution().getStatistics().getThirdQuartile() == null || !variable.getDataType().equals(DataTypes.NUMERIC)) {\n       return true;\n     }\n \n@@ -53,4 +48,4 @@ public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator impl\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'Variable' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\nindex b9aa5d59265..6e547b26fcc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n@@ -2,9 +2,7 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.apache.commons.lang3.math.NumberUtils;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.DataTypes;\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n \n@@ -15,17 +13,21 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n  * @author Daniel Katzberg\n  *\n  */\n-public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator implements\n-    ConstraintValidator<StatisticsThirdQuartileMustBeANumberOnNumericDataType, Variable> {\n+\n+\n+public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator implements ConstraintValidator<StatisticsThirdQuartileMustBeANumberOnNumericDataType,\n+Variable> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(\n-      StatisticsThirdQuartileMustBeANumberOnNumericDataType constraintAnnotation) {}\n+  public void initialize(StatisticsThirdQuartileMustBeANumberOnNumericDataType constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -33,18 +35,22 @@ public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator impl\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(Variable variable, ConstraintValidatorContext context) {\n \n-    if (variable == null || variable.getDataType() == null\n+\n+  @Override\n+  public boolean isValid(Variable variable,\n+    ConstraintValidatorContext context) {\n+    if (variable == null\n+        || variable.getDataType() == null\n         || variable.getDistribution() == null\n         || variable.getDistribution().getStatistics() == null\n-        || variable.getDistribution().getStatistics().getThirdQuartile() == null\n+        || variable.getDistribution().getStatistics()\n+                                     .getThirdQuartile() == null\n         || !variable.getDataType().equals(DataTypes.NUMERIC)) {\n       return true;\n     }\n-\n-    String thirdQuartile = variable.getDistribution().getStatistics().getThirdQuartile();\n+    String thirdQuartile = variable.getDistribution().getStatistics()\n+                                                     .getThirdQuartile();\n     try {\n       NumberUtils.createNumber(thirdQuartile);\n       return true;\n@@ -52,5 +58,4 @@ public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator impl\n       return false;\n     }\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\nindex b9aa5d59265..b0c86bf4208 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n@@ -27,7 +27,7 @@ public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator impl\n   public void initialize(\n       StatisticsThirdQuartileMustBeANumberOnNumericDataType constraintAnnotation) {}\n \n-  /*\n+      /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\nindex b9aa5d59265..c80bfd65dc3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/100/StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator.java\n@@ -26,8 +26,7 @@ public class StatisticsThirdQuartileMustBeANumberOnNumericDataTypeValidator impl\n   @Override\n   public void initialize(\n       StatisticsThirdQuartileMustBeANumberOnNumericDataType constraintAnnotation) {}\n-\n-  /*\n+      /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
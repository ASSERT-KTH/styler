{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1518",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admingui.validator;\n\nimport gov.hhs.fha.nhinc.admingui.util.HelperUtil;\nimport java.text.MessageFormat;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1518/CheckboxRequiredTrueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1518/CheckboxRequiredTrueValidator.java\nindex 5e6ae73174f..58dbc40d958 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1518/CheckboxRequiredTrueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1518/CheckboxRequiredTrueValidator.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.validator;\n \n import gov.hhs.fha.nhinc.admingui.util.HelperUtil;\n@@ -40,28 +41,27 @@ import org.slf4j.LoggerFactory;\n \n /**\n  * @author Tran Tang\n- *\n  */\n @FacesValidator(\"CheckboxRequiredTrueValidator\")\n public class CheckboxRequiredTrueValidator implements Validator {\n-    private static final Logger LOG = LoggerFactory.getLogger(CheckboxRequiredTrueValidator.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(CheckboxRequiredTrueValidator.class);\n \n-    @Override\n-    public void validate(FacesContext context, UIComponent component, Object value) {\n+  @Override\n+  public void validate(FacesContext context, UIComponent component, Object value) {\n \n-        if (!Boolean.TRUE.equals(value)) {\n-            String errorMessage = (String) component.getAttributes().get(\"errorMessage\");\n+    if (!Boolean.TRUE.equals(value)) {\n+      String errorMessage = (String) component.getAttributes().get(\"errorMessage\");\n \n-            if (StringUtils.isBlank(errorMessage)) {\n-                errorMessage = ((UIInput) component).getRequiredMessage();\n-            }\n+      if (StringUtils.isBlank(errorMessage)) {\n+        errorMessage = ((UIInput) component).getRequiredMessage();\n+      }\n \n-            if (StringUtils.isBlank(errorMessage)) {\n-                errorMessage = MessageFormat.format(\"'{0}' is required.\", component.getId());\n-            }\n-\n-            throw new ValidatorException(HelperUtil.getMsgError(errorMessage));\n-        }\n+      if (StringUtils.isBlank(errorMessage)) {\n+        errorMessage = MessageFormat.format(\"'{0}' is required.\", component.getId());\n+      }\n \n+      throw new ValidatorException(HelperUtil.getMsgError(errorMessage));\n     }\n+\n+  }\n }\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "62",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1518/CheckboxRequiredTrueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1518/CheckboxRequiredTrueValidator.java\nindex 5e6ae73174f..de179f3ef11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1518/CheckboxRequiredTrueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1518/CheckboxRequiredTrueValidator.java\n@@ -42,26 +42,30 @@ import org.slf4j.LoggerFactory;\n  * @author Tran Tang\n  *\n  */\n+\n+\n @FacesValidator(\"CheckboxRequiredTrueValidator\")\n public class CheckboxRequiredTrueValidator implements Validator {\n-    private static final Logger LOG = LoggerFactory.getLogger(CheckboxRequiredTrueValidator.class);\n \n-    @Override\n-    public void validate(FacesContext context, UIComponent component, Object value) {\n+    private static final Logger LOG = LoggerFactory.getLogger(CheckboxRequiredTrueValidator.class);\n \n-        if (!Boolean.TRUE.equals(value)) {\n-            String errorMessage = (String) component.getAttributes().get(\"errorMessage\");\n \n+    @Override\n+    public void validate(FacesContext context,\n+        UIComponent component, Object value) {\n+        if (!\n+                Boolean.TRUE.equals(value)) {\n+            String errorMessage = (String)\n+                                      component.getAttributes().get(\"errorMessage\");\n             if (StringUtils.isBlank(errorMessage)) {\n-                errorMessage = ((UIInput) component).getRequiredMessage();\n+                errorMessage = ((UIInput)\n+                                    component ).getRequiredMessage();\n             }\n-\n             if (StringUtils.isBlank(errorMessage)) {\n                 errorMessage = MessageFormat.format(\"'{0}' is required.\", component.getId());\n             }\n-\n             throw new ValidatorException(HelperUtil.getMsgError(errorMessage));\n         }\n-\n     }\n+\n }\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "30",
                    "column": "10",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1518/CheckboxRequiredTrueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1518/CheckboxRequiredTrueValidator.java\nindex 5e6ae73174f..b220417bf7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1518/CheckboxRequiredTrueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1518/CheckboxRequiredTrueValidator.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.admingui.validator;\n+\n+package gov.hhs.fha.nhinc.admingui.\n+\n+validator ;\n \n import gov.hhs.fha.nhinc.admingui.util.HelperUtil;\n import java.text.MessageFormat;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "eclipse-milo",
    "error_id": "136",
    "information": {
        "errors": [
            {
                "line": "29",
                "column": "34",
                "severity": "error",
                "message": "'}' at column 34 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class UInt16Conversions {\n\n    private UInt16Conversions() {}\n\n    @Nonnull\n    static Boolean uInt16ToBoolean(@Nonnull UShort us) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/136/UInt16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/136/UInt16Conversions.java\nindex 5a4ca9ed816..c33924c7c26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/136/UInt16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/136/UInt16Conversions.java\n@@ -26,7 +26,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class UInt16Conversions {\n \n-    private UInt16Conversions() {}\n+    private UInt16Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean uInt16ToBoolean(@Nonnull UShort us) {\n@@ -123,11 +124,16 @@ final class UInt16Conversions {\n     static Object explicitConversion(@Nonnull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return uInt16ToBoolean(us);\n-            case Byte:      return uInt16ToByte(us);\n-            case SByte:     return uInt16ToSByte(us);\n-            case String:    return uInt16ToString(us);\n-            default:        return implicitConversion(us, targetType);\n+            case Boolean:\n+                return uInt16ToBoolean(us);\n+            case Byte:\n+                return uInt16ToByte(us);\n+            case SByte:\n+                return uInt16ToSByte(us);\n+            case String:\n+                return uInt16ToString(us);\n+            default:\n+                return implicitConversion(us, targetType);\n         }\n         //@formatter:on\n     }\n@@ -136,15 +142,24 @@ final class UInt16Conversions {\n     static Object implicitConversion(@Nonnull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:        return uInt16ToDouble(us);\n-            case Float:         return uInt16ToFloat(us);\n-            case Int16:         return uInt16ToInt16(us);\n-            case Int32:         return uInt16ToInt32(us);\n-            case Int64:         return uInt16ToInt64(us);\n-            case StatusCode:    return uInt16ToStatusCode(us);\n-            case UInt32:        return uInt16ToUInt32(us);\n-            case UInt64:        return uInt16ToUInt64(us);\n-            default:            return null;\n+            case Double:\n+                return uInt16ToDouble(us);\n+            case Float:\n+                return uInt16ToFloat(us);\n+            case Int16:\n+                return uInt16ToInt16(us);\n+            case Int32:\n+                return uInt16ToInt32(us);\n+            case Int64:\n+                return uInt16ToInt64(us);\n+            case StatusCode:\n+                return uInt16ToStatusCode(us);\n+            case UInt32:\n+                return uInt16ToUInt32(us);\n+            case UInt64:\n+                return uInt16ToUInt64(us);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/136/UInt16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/136/UInt16Conversions.java\nindex 5a4ca9ed816..5680b18e984 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/136/UInt16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/136/UInt16Conversions.java\n@@ -123,11 +123,13 @@ final class UInt16Conversions {\n     static Object explicitConversion(@Nonnull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return uInt16ToBoolean(us);\n+            case Boolean:\n+    return uInt16ToBoolean(us);\n             case Byte:      return uInt16ToByte(us);\n             case SByte:     return uInt16ToSByte(us);\n             case String:    return uInt16ToString(us);\n-            default:        return implicitConversion(us, targetType);\n+            default:\n+    return implicitConversion(us, targetType);\n         }\n         //@formatter:on\n     }\n@@ -137,10 +139,14 @@ final class UInt16Conversions {\n         //@formatter:off\n         switch (targetType) {\n             case Double:        return uInt16ToDouble(us);\n-            case Float:         return uInt16ToFloat(us);\n-            case Int16:         return uInt16ToInt16(us);\n-            case Int32:         return uInt16ToInt32(us);\n-            case Int64:         return uInt16ToInt64(us);\n+            case Float:\n+    return uInt16ToFloat(us);\n+            case Int16:\n+    return uInt16ToInt16(us);\n+            case Int32:\n+    return uInt16ToInt32(us);\n+            case Int64:\n+    return uInt16ToInt64(us);\n             case StatusCode:    return uInt16ToStatusCode(us);\n             case UInt32:        return uInt16ToUInt32(us);\n             case UInt64:        return uInt16ToUInt64(us);\n@@ -149,4 +155,4 @@ final class UInt16Conversions {\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/136/UInt16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/136/UInt16Conversions.java\nindex 5a4ca9ed816..1eeb30f300e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/136/UInt16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/136/UInt16Conversions.java\n@@ -12,7 +12,6 @@ package org.eclipse.milo.opcua.sdk.server.events.conversions;\n \n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n-\n import org.eclipse.milo.opcua.stack.core.BuiltinDataType;\n import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n@@ -26,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class UInt16Conversions {\n \n-    private UInt16Conversions() {}\n+    private UInt16Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean uInt16ToBoolean(@Nonnull UShort us) {\n@@ -110,10 +110,7 @@ final class UInt16Conversions {\n     static Object convert(@Nullable Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof UShort) {\n             UShort us = (UShort) o;\n-\n-            return implicit ?\n-                implicitConversion(us, targetType) :\n-                explicitConversion(us, targetType);\n+            return implicit ? implicitConversion(us, targetType) : explicitConversion(us, targetType);\n         } else {\n             return null;\n         }\n@@ -123,11 +120,19 @@ final class UInt16Conversions {\n     static Object explicitConversion(@Nonnull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return uInt16ToBoolean(us);\n-            case Byte:      return uInt16ToByte(us);\n-            case SByte:     return uInt16ToSByte(us);\n-            case String:    return uInt16ToString(us);\n-            default:        return implicitConversion(us, targetType);\n+            case Boolean:\n+                return uInt16ToBoolean(us);\n+\n+            case Byte:\n+                return uInt16ToByte(us);\n+\n+            case SByte:\n+                return uInt16ToSByte(us);\n+\n+            case String:\n+                return uInt16ToString(us);\n+            default:\n+                return implicitConversion(us, targetType);\n         }\n         //@formatter:on\n     }\n@@ -136,17 +141,33 @@ final class UInt16Conversions {\n     static Object implicitConversion(@Nonnull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:        return uInt16ToDouble(us);\n-            case Float:         return uInt16ToFloat(us);\n-            case Int16:         return uInt16ToInt16(us);\n-            case Int32:         return uInt16ToInt32(us);\n-            case Int64:         return uInt16ToInt64(us);\n-            case StatusCode:    return uInt16ToStatusCode(us);\n-            case UInt32:        return uInt16ToUInt32(us);\n-            case UInt64:        return uInt16ToUInt64(us);\n-            default:            return null;\n+            case Double:\n+                return uInt16ToDouble(us);\n+\n+            case Float:\n+                return uInt16ToFloat(us);\n+\n+            case Int16:\n+                return uInt16ToInt16(us);\n+\n+            case Int32:\n+                return uInt16ToInt32(us);\n+\n+            case Int64:\n+                return uInt16ToInt64(us);\n+\n+            case StatusCode:\n+                return uInt16ToStatusCode(us);\n+\n+            case UInt32:\n+                return uInt16ToUInt32(us);\n+\n+            case UInt64:\n+                return uInt16ToUInt64(us);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/136/UInt16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/136/UInt16Conversions.java\nindex 5a4ca9ed816..57f549c8e76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/136/UInt16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/136/UInt16Conversions.java\n@@ -26,9 +26,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class UInt16Conversions {\n \n-    private UInt16Conversions() {}\n+    private UInt16Conversions() {\n \n-    @Nonnull\n+    } @Nonnull\n     static Boolean uInt16ToBoolean(@Nonnull UShort us) {\n         return us.intValue() != 0;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
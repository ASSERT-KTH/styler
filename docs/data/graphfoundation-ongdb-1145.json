{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1145",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "49",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "59",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "70",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1145/HostnamePort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1145/HostnamePort.java\nindex 37a65521853..65a86c92dba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1145/HostnamePort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1145/HostnamePort.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers;\n \n import org.apache.commons.lang3.StringUtils;\n@@ -33,214 +34,208 @@ import static java.lang.String.format;\n  */\n public class HostnamePort\n {\n-    private final String host;\n-    private final int[] ports;\n+  private final String host;\n+  private final int[] ports;\n \n-    public HostnamePort( String hostnamePort ) throws IllegalArgumentException\n-    {\n-        Objects.requireNonNull( hostnamePort );\n-\n-        String[] parts = splitHostAndPort( hostnamePort );\n-        if ( parts.length == 1 )\n-        {\n-            host = StringUtils.defaultIfBlank( parts[0], null );\n-            ports = new int[]{0, 0};\n-        }\n-        else if ( parts.length == 2 )\n-        {\n-            host = StringUtils.defaultIfBlank( parts[0], null );\n-\n-            String[] portStrings = parts[1].split( \"-\" );\n-            ports = new int[2];\n-\n-            if ( portStrings.length == 1 )\n-            {\n-                ports[0] = ports[1] = Integer.parseInt( portStrings[0] );\n-            }\n-            else if ( portStrings.length == 2 )\n-            {\n-                ports[0] = Integer.parseInt( portStrings[0] );\n-                ports[1] = Integer.parseInt( portStrings[1] );\n-            }\n-            else\n-            {\n-                throw new IllegalArgumentException( format( \"Cannot have more than two port ranges: %s\",\n-                        hostnamePort ) );\n-            }\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException( hostnamePort );\n-        }\n-    }\n+  public HostnamePort(String hostnamePort) throws IllegalArgumentException\n+  {\n+    Objects.requireNonNull(hostnamePort);\n \n-    public HostnamePort( String host, int port )\n+    String[] parts = splitHostAndPort(hostnamePort);\n+    if (parts.length == 1)\n     {\n-        this( host, port, port );\n-    }\n-\n-    public HostnamePort( String host, int portFrom, int portTo )\n+      host = StringUtils.defaultIfBlank(parts[0], null);\n+      ports = new int[] {0, 0};\n+    } else if (parts.length == 2)\n     {\n-        this.host = host;\n-        ports = new int[]{portFrom, portTo};\n-    }\n-\n-    /**\n-     * The host part, or {@code null} if not given.\n-     *\n-     * @return the host part, or {@code null} if not given\n-     */\n-    public String getHost()\n+      host = StringUtils.defaultIfBlank(parts[0], null);\n+\n+      String[] portStrings = parts[1].split(\"-\");\n+      ports = new int[2];\n+\n+      if (portStrings.length == 1)\n+      {\n+        ports[0] = ports[1] = Integer.parseInt(portStrings[0]);\n+      } else if (portStrings.length == 2)\n+      {\n+        ports[0] = Integer.parseInt(portStrings[0]);\n+        ports[1] = Integer.parseInt(portStrings[1]);\n+      } else\n+      {\n+        throw new IllegalArgumentException(format(\"Cannot have more than two port ranges: %s\",\n+            hostnamePort));\n+      }\n+    } else\n     {\n-        return host;\n+      throw new IllegalArgumentException(hostnamePort);\n     }\n-\n-    public static String getHostAddress( String host, String defaultHost )\n+  }\n+\n+  public HostnamePort(String host, int port)\n+  {\n+    this(host, port, port);\n+  }\n+\n+  public HostnamePort(String host, int portFrom, int portTo)\n+  {\n+    this.host = host;\n+    ports = new int[] {portFrom, portTo};\n+  }\n+\n+  /**\n+   * The host part, or {@code null} if not given.\n+   *\n+   * @return the host part, or {@code null} if not given\n+   */\n+  public String getHost()\n+  {\n+    return host;\n+  }\n+\n+  public static String getHostAddress(String host, String defaultHost)\n+  {\n+    if (host == null)\n     {\n-        if ( host == null )\n-        {\n-            return defaultHost;\n-        }\n-        else\n-        {\n-            return host;\n-        }\n-    }\n-\n-    public String getHost( String defaultHost )\n+      return defaultHost;\n+    } else\n     {\n-        return getHostAddress( host, defaultHost );\n+      return host;\n     }\n-\n-    /**\n-     * The port range as two ints. If only one port given, then both ints have the same value.\n-     * If no port range is given, then the array has {0,0} as value.\n-     *\n-     * @return the port range as two ints, which may have the same value; if no port range has been given both ints are {@code 0}\n-     */\n-    public int[] getPorts()\n+  }\n+\n+  public String getHost(String defaultHost)\n+  {\n+    return getHostAddress(host, defaultHost);\n+  }\n+\n+  /**\n+   * The port range as two ints. If only one port given, then both ints have the same value.\n+   * If no port range is given, then the array has {0,0} as value.\n+   *\n+   * @return the port range as two ints, which may have the same value; if no port range has been given both ints are {@code 0}\n+   */\n+  public int[] getPorts()\n+  {\n+    return ports;\n+  }\n+\n+  /**\n+   * The first port, or 0 if no port was given.\n+   *\n+   * @return the first port or {@code 0} if no port was given\n+   */\n+  public int getPort()\n+  {\n+    return ports[0];\n+  }\n+\n+  public boolean isRange()\n+  {\n+    return ports[0] != ports[1];\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return toString(null /*no default host*/);\n+  }\n+\n+  public String toString(String defaultHost)\n+  {\n+    StringBuilder builder = new StringBuilder();\n+    String host = getHost(defaultHost);\n+    if (host != null)\n     {\n-        return ports;\n+      builder.append(host);\n     }\n \n-    /**\n-     * The first port, or 0 if no port was given.\n-     *\n-     * @return the first port or {@code 0} if no port was given\n-     */\n-    public int getPort()\n+    if (getPort() != 0)\n     {\n-        return ports[0];\n+      builder.append(':');\n+      builder.append(getPort());\n+      if (isRange())\n+      {\n+        builder.append('-').append(getPorts()[1]);\n+      }\n     }\n \n-    public boolean isRange()\n-    {\n-        return ports[0] != ports[1];\n-    }\n+    return builder.toString();\n+  }\n \n-    @Override\n-    public String toString()\n+  public boolean matches(URI toMatch)\n+  {\n+    boolean result = false;\n+    for (int port = ports[0]; port <= ports[1]; port++)\n     {\n-        return toString( null /*no default host*/ );\n+      if (port == toMatch.getPort())\n+      {\n+        result = true;\n+        break;\n+      }\n     }\n \n-    public String toString( String defaultHost )\n+    if (host == null && toMatch.getHost() == null)\n+    {\n+      return result;\n+    } else if (host == null)\n     {\n-        StringBuilder builder = new StringBuilder();\n-        String host = getHost( defaultHost );\n-        if ( host != null )\n-        {\n-            builder.append( host );\n-        }\n-\n-        if ( getPort() != 0 )\n-        {\n-            builder.append( ':' );\n-            builder.append( getPort() );\n-            if ( isRange() )\n-            {\n-                builder.append( '-' ).append( getPorts()[1] );\n-            }\n-        }\n-\n-        return builder.toString();\n+      return false;\n     }\n \n-    public boolean matches( URI toMatch )\n+    // URI may contain IP, so make sure we check it too by converting ours, if necessary\n+    String toMatchHost = toMatch.getHost();\n+\n+    // this tries to match hostnames as they are at first, then tries to extract and match ip addresses of both\n+    return result && (host.equalsIgnoreCase(toMatchHost) ||\n+        getHost(null).equalsIgnoreCase(getHostAddress(toMatchHost, toMatchHost)));\n+  }\n+\n+  private static String[] splitHostAndPort(String hostnamePort)\n+  {\n+    hostnamePort = hostnamePort.trim();\n+\n+    int indexOfSchemaSeparator = hostnamePort.indexOf(\"://\");\n+    if (indexOfSchemaSeparator != -1)\n     {\n-        boolean result = false;\n-        for ( int port = ports[0]; port <= ports[1]; port++ )\n-        {\n-            if ( port == toMatch.getPort() )\n-            {\n-                result = true;\n-                break;\n-            }\n-        }\n-\n-        if ( host == null && toMatch.getHost() == null )\n-        {\n-            return result;\n-        }\n-        else if ( host == null )\n-        {\n-            return false;\n-        }\n-\n-        // URI may contain IP, so make sure we check it too by converting ours, if necessary\n-        String toMatchHost = toMatch.getHost();\n-\n-        // this tries to match hostnames as they are at first, then tries to extract and match ip addresses of both\n-        return result && (host.equalsIgnoreCase( toMatchHost ) ||\n-                getHost( null ).equalsIgnoreCase( getHostAddress( toMatchHost, toMatchHost ) ));\n+      hostnamePort = hostnamePort.substring(indexOfSchemaSeparator + 3);\n     }\n \n-    private static String[] splitHostAndPort( String hostnamePort )\n+    boolean isIPv6HostPort = hostnamePort.startsWith(\"[\") && hostnamePort.contains(\"]\");\n+    if (isIPv6HostPort)\n     {\n-        hostnamePort = hostnamePort.trim();\n-\n-        int indexOfSchemaSeparator = hostnamePort.indexOf( \"://\" );\n-        if ( indexOfSchemaSeparator != -1 )\n-        {\n-            hostnamePort = hostnamePort.substring( indexOfSchemaSeparator + 3 );\n-        }\n-\n-        boolean isIPv6HostPort = hostnamePort.startsWith( \"[\" ) && hostnamePort.contains( \"]\" );\n-        if ( isIPv6HostPort )\n-        {\n-            int splitIndex = hostnamePort.indexOf( ']' ) + 1;\n-\n-            String host = hostnamePort.substring( 0, splitIndex );\n-            String port = hostnamePort.substring( splitIndex );\n-            if ( StringUtils.isNotBlank( port ) )\n-            {\n-                port = port.substring( 1 ); // remove ':'\n-                return new String[]{host, port};\n-            }\n-            return new String[]{host};\n-        }\n-        return hostnamePort.split( \":\" );\n+      int splitIndex = hostnamePort.indexOf(']') + 1;\n+\n+      String host = hostnamePort.substring(0, splitIndex);\n+      String port = hostnamePort.substring(splitIndex);\n+      if (StringUtils.isNotBlank(port))\n+      {\n+        port = port.substring(1); // remove ':'\n+        return new String[] {host, port};\n+      }\n+      return new String[] {host};\n     }\n+    return hostnamePort.split(\":\");\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        HostnamePort that = (HostnamePort) o;\n-        return Objects.equals( host, that.host ) &&\n-                Arrays.equals( ports, that.ports );\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return Objects.hash( host, Arrays.hashCode( ports ) );\n+      return false;\n     }\n+    HostnamePort that = (HostnamePort) o;\n+    return Objects.equals(host, that.host) &&\n+        Arrays.equals(ports, that.ports);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(host, Arrays.hashCode(ports));\n+  }\n }\n",
            "diff_size": 290
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "238",
                    "column": "50",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1145/HostnamePort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1145/HostnamePort.java\nindex 37a65521853..7d6c2ba5ff1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1145/HostnamePort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1145/HostnamePort.java\n@@ -52,8 +52,7 @@ public class HostnamePort\n \n             String[] portStrings = parts[1].split( \"-\" );\n             ports = new int[2];\n-\n-            if ( portStrings.length == 1 )\n+if ( portStrings.length == 1 )\n             {\n                 ports[0] = ports[1] = Integer.parseInt( portStrings[0] );\n             }\n@@ -66,7 +65,7 @@ public class HostnamePort\n             {\n                 throw new IllegalArgumentException( format( \"Cannot have more than two port ranges: %s\",\n                         hostnamePort ) );\n-            }\n+    }\n         }\n         else\n         {\n@@ -191,8 +190,7 @@ public class HostnamePort\n         String toMatchHost = toMatch.getHost();\n \n         // this tries to match hostnames as they are at first, then tries to extract and match ip addresses of both\n-        return result && (host.equalsIgnoreCase( toMatchHost ) ||\n-                getHost( null ).equalsIgnoreCase( getHostAddress( toMatchHost, toMatchHost ) ));\n+        return result && (host.equalsIgnoreCase( toMatchHost ) || getHost( null ).equalsIgnoreCase( getHostAddress( toMatchHost, toMatchHost ) ));\n     }\n \n     private static String[] splitHostAndPort( String hostnamePort )\n@@ -219,7 +217,8 @@ public class HostnamePort\n             }\n             return new String[]{host};\n         }\n-        return hostnamePort.split( \":\" );\n+\n+return hostnamePort.split( \":\" );\n     }\n \n     @Override\n@@ -229,13 +228,14 @@ public class HostnamePort\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        HostnamePort that = (HostnamePort) o;\n-        return Objects.equals( host, that.host ) &&\n-                Arrays.equals( ports, that.ports );\n+\n+HostnamePort that = (HostnamePort) o;\n+        return Objects.equals( host, that.host ) &&Arrays.equals( ports, that.ports );\n     }\n \n     @Override\n@@ -243,4 +243,4 @@ public class HostnamePort\n     {\n         return Objects.hash( host, Arrays.hashCode( ports ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1365",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "193",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1365/NotificationCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1365/NotificationCode.java\nindex ac4d5abc808..e7abc285746 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1365/NotificationCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1365/NotificationCode.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.impl.notification;\n \n \n@@ -31,288 +32,287 @@ import org.neo4j.kernel.api.exceptions.Status;\n  */\n public enum NotificationCode\n {\n-    CARTESIAN_PRODUCT(\n-       SeverityLevel.WARNING,\n-       Status.Statement.CartesianProductWarning,\n-       \"If a part of a query contains multiple disconnected patterns, this will build a \" +\n-       \"cartesian product between all those parts. This may produce a large amount of data and slow down\" +\n-       \" query processing. \" +\n-       \"While occasionally intended, it may often be possible to reformulate the query that avoids the \" +\n-       \"use of this cross \" +\n-       \"product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH\"\n-    ),\n-    LEGACY_PLANNER(\n-        SeverityLevel.WARNING,\n-        Status.Statement.FeatureDeprecationWarning,\n-        \"Using PLANNER for switching between planners has been deprecated, please use CYPHER planner=[rule,cost] instead\"\n-    ),\n-    DEPRECATED_PLANNER(\n-        SeverityLevel.WARNING,\n-        Status.Statement.FeatureDeprecationWarning,\n-        \"The rule planner, which was used to plan this query, is deprecated and will be discontinued soon. \" +\n-                \"If you did not explicitly choose the rule planner, you should try to change your query so that the \" +\n-                \"rule planner is not used\"\n-    ),\n-    PLANNER_UNSUPPORTED(\n-        SeverityLevel.WARNING,\n-        Status.Statement.PlannerUnsupportedWarning,\n-        \"Using COST planner is unsupported for this query, please use RULE planner instead\"\n-    ),\n-    RULE_PLANNER_UNAVAILABLE_FALLBACK(\n-        SeverityLevel.WARNING,\n-        Status.Statement.PlannerUnavailableWarning,\n-        \"Using RULE planner is unsupported for current CYPHER version, the query has been executed by an older CYPHER \" +\n-        \"version\"\n-    ),\n-    RUNTIME_UNSUPPORTED(\n-        SeverityLevel.WARNING,\n-        Status.Statement.RuntimeUnsupportedWarning,\n-        \"Selected runtime is unsupported for this query, please use a different runtime instead or fallback to default.\"\n-    ),\n-    INDEX_HINT_UNFULFILLABLE(\n-        SeverityLevel.WARNING,\n-        Status.Schema.IndexNotFound,\n-        \"The hinted index does not exist, please check the schema\"\n-    ),\n-    JOIN_HINT_UNFULFILLABLE(\n-        SeverityLevel.WARNING,\n-        Status.Statement.JoinHintUnfulfillableWarning,\n-        \"The hinted join was not planned. This could happen because no generated plan contained the join key, \" +\n-                \"please try using a different join key or restructure your query.\"\n-    ),\n-    JOIN_HINT_UNSUPPORTED(\n-        SeverityLevel.WARNING,\n-        Status.Statement.JoinHintUnsupportedWarning,\n-        \"Using RULE planner is unsupported for queries with join hints, please use COST planner instead\"\n-    ),\n-    LENGTH_ON_NON_PATH(\n-        SeverityLevel.WARNING,\n-        Status.Statement.FeatureDeprecationWarning,\n-        \"Using 'length' on anything that is not a path is deprecated, please use 'size' instead\"\n-    ),\n-    INDEX_LOOKUP_FOR_DYNAMIC_PROPERTY(\n-        SeverityLevel.WARNING,\n-        Status.Statement.DynamicPropertyWarning,\n-        \"Using a dynamic property makes it impossible to use an index lookup for this query\"\n-    ),\n-    BARE_NODE_SYNTAX_DEPRECATED( // This notification is no longer produced by current Cypher compilers\n-        SeverityLevel.WARNING,   // but it is left here for backwards compatibility.\n-        Status.Statement.FeatureDeprecationWarning,\n-        \"Use of bare node patterns has been deprecated. Please enclose the identifier in parenthesis.\"\n-    ),\n-    DEPRECATED_FUNCTION(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The query used a deprecated function.\"\n-    ),\n-    DEPRECATED_PROCEDURE(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The query used a deprecated procedure.\"\n-    ),\n-    PROCEDURE_WARNING(\n-            SeverityLevel.WARNING,\n-            Status.Procedure.ProcedureWarning,\n-            \"The query used a procedure that generated a warning.\"\n-    ),\n-    DEPRECATED_PROCEDURE_RETURN_FIELD(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The query used a deprecated field from a procedure.\"\n-    ),\n-    DEPRECATED_BINDING_VAR_LENGTH_RELATIONSHIP(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"Binding relationships to a list in a variable length pattern is deprecated.\"\n-    ),\n-    DEPRECATED_RELATIONSHIP_TYPE_SEPARATOR(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The semantics of using colon in the separation of alternative relationship types in conjunction with the \" +\n-            \"use of variable binding, inlined property predicates, or variable length will change in a future version.\"\n-    ),\n-    EAGER_LOAD_CSV(\n-        SeverityLevel.WARNING,\n-        Status.Statement.EagerOperatorWarning,\n-        \"Using LOAD CSV with a large data set in a query where the execution plan contains the \" +\n-        \"Eager operator could potentially consume a lot of memory and is likely to not perform well. \" +\n-        \"See the Neo4j Manual entry on the Eager operator for more information and hints on \" +\n-        \"how problems could be avoided.\"\n-    ),\n-    LARGE_LABEL_LOAD_CSV(\n-        SeverityLevel.WARNING,\n-        Status.Statement.NoApplicableIndexWarning,\n-        \"Using LOAD CSV followed by a MATCH or MERGE that matches a non-indexed label will most likely \" +\n-        \"not perform well on large data sets. Please consider using a schema index.\"\n-        ),\n-    MISSING_LABEL(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnknownLabelWarning,\n-            \"One of the labels in your query is not available in the database, make sure you didn't \" +\n-            \"misspell it or that the label is available when you run this statement in your application\"\n-    ),\n-    MISSING_REL_TYPE(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnknownRelationshipTypeWarning,\n-            \"One of the relationship types in your query is not available in the database, make sure you didn't \" +\n-            \"misspell it or that the label is available when you run this statement in your application\"\n-    ),\n-    MISSING_PROPERTY_NAME(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnknownPropertyKeyWarning,\n-            \"One of the property names in your query is not available in the database, make sure you didn't \" +\n-            \"misspell it or that the label is available when you run this statement in your application\"\n-    ),\n-    UNBOUNDED_SHORTEST_PATH(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnboundedVariableLengthPatternWarning,\n-            \"Using shortest path with an unbounded pattern will likely result in long execution times. \" +\n-            \"It is recommended to use an upper limit to the number of node hops in your pattern.\"\n-    ),\n-    EXHAUSTIVE_SHORTEST_PATH(\n-            SeverityLevel.WARNING,\n-            Status.Statement.ExhaustiveShortestPathWarning,\n-            \"Using shortest path with an exhaustive search fallback might cause query slow down since shortest path \" +\n-            \"graph algorithms might not work for this use case. It is recommended to introduce a WITH to separate the \" +\n-            \"MATCH containing the shortest path from the existential predicates on that path.\"\n-    ),\n-    CREATE_UNIQUE_UNAVAILABLE_FALLBACK(\n-            SeverityLevel.WARNING,\n-            Status.Statement.PlannerUnavailableWarning,\n-        \"CREATE UNIQUE is unsupported for current CYPHER version, the query has been executed by an older CYPHER version\"\n-    ),\n-    START_UNAVAILABLE_FALLBACK(\n-            SeverityLevel.WARNING,\n-            Status.Statement.PlannerUnavailableWarning,\n-            \"START is not supported for current CYPHER version, the query has been executed by an older CYPHER version\"\n-    ),\n-    START_DEPRECATED(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"START has been deprecated and will be removed in a future version.\" ),\n-    EXPERIMENTAL_FEATURE(\n-            SeverityLevel.WARNING,\n-            Status.Statement.ExperimentalFeature,\n-            \"You are using an experimental feature\" ),\n-    SUBOPTIMAL_INDEX_FOR_CONTAINS_QUERY(\n-            SeverityLevel.INFORMATION,\n-            Status.Statement.SuboptimalIndexForWildcardQuery,\n-            \"If the performance of this statement using `CONTAINS` doesn't meet your expectations check out the alternative index-providers, see \" +\n-                    \"documentation on index configuration.\" ),\n-    SUBOPTIMAL_INDEX_FOR_ENDS_WITH_QUERY(\n-            SeverityLevel.INFORMATION,\n-            Status.Statement.SuboptimalIndexForWildcardQuery,\n-            \"If the performance of this statement using `ENDS WITH` doesn't meet your expectations check out the alternative index-providers, see \" +\n-                    \"documentation on index configuration.\" );\n+  CARTESIAN_PRODUCT(\n+      SeverityLevel.WARNING,\n+      Status.Statement.CartesianProductWarning,\n+      \"If a part of a query contains multiple disconnected patterns, this will build a \" +\n+          \"cartesian product between all those parts. This may produce a large amount of data and slow down\" +\n+          \" query processing. \" +\n+          \"While occasionally intended, it may often be possible to reformulate the query that avoids the \" +\n+          \"use of this cross \" +\n+          \"product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH\"\n+  ),\n+  LEGACY_PLANNER(\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"Using PLANNER for switching between planners has been deprecated, please use CYPHER planner=[rule,cost] instead\"\n+  ),\n+  DEPRECATED_PLANNER(\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The rule planner, which was used to plan this query, is deprecated and will be discontinued soon. \" +\n+          \"If you did not explicitly choose the rule planner, you should try to change your query so that the \" +\n+          \"rule planner is not used\"\n+  ),\n+  PLANNER_UNSUPPORTED(\n+      SeverityLevel.WARNING,\n+      Status.Statement.PlannerUnsupportedWarning,\n+      \"Using COST planner is unsupported for this query, please use RULE planner instead\"\n+  ),\n+  RULE_PLANNER_UNAVAILABLE_FALLBACK(\n+      SeverityLevel.WARNING,\n+      Status.Statement.PlannerUnavailableWarning,\n+      \"Using RULE planner is unsupported for current CYPHER version, the query has been executed by an older CYPHER \" +\n+          \"version\"\n+  ),\n+  RUNTIME_UNSUPPORTED(\n+      SeverityLevel.WARNING,\n+      Status.Statement.RuntimeUnsupportedWarning,\n+      \"Selected runtime is unsupported for this query, please use a different runtime instead or fallback to default.\"\n+  ),\n+  INDEX_HINT_UNFULFILLABLE(\n+      SeverityLevel.WARNING,\n+      Status.Schema.IndexNotFound,\n+      \"The hinted index does not exist, please check the schema\"\n+  ),\n+  JOIN_HINT_UNFULFILLABLE(\n+      SeverityLevel.WARNING,\n+      Status.Statement.JoinHintUnfulfillableWarning,\n+      \"The hinted join was not planned. This could happen because no generated plan contained the join key, \" +\n+          \"please try using a different join key or restructure your query.\"\n+  ),\n+  JOIN_HINT_UNSUPPORTED(\n+      SeverityLevel.WARNING,\n+      Status.Statement.JoinHintUnsupportedWarning,\n+      \"Using RULE planner is unsupported for queries with join hints, please use COST planner instead\"\n+  ),\n+  LENGTH_ON_NON_PATH(\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"Using 'length' on anything that is not a path is deprecated, please use 'size' instead\"\n+  ),\n+  INDEX_LOOKUP_FOR_DYNAMIC_PROPERTY(\n+      SeverityLevel.WARNING,\n+      Status.Statement.DynamicPropertyWarning,\n+      \"Using a dynamic property makes it impossible to use an index lookup for this query\"\n+  ),\n+  BARE_NODE_SYNTAX_DEPRECATED( // This notification is no longer produced by current Cypher compilers\n+      SeverityLevel.WARNING,   // but it is left here for backwards compatibility.\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"Use of bare node patterns has been deprecated. Please enclose the identifier in parenthesis.\"\n+  ),\n+  DEPRECATED_FUNCTION(\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The query used a deprecated function.\"\n+  ),\n+  DEPRECATED_PROCEDURE(\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The query used a deprecated procedure.\"\n+  ),\n+  PROCEDURE_WARNING(\n+      SeverityLevel.WARNING,\n+      Status.Procedure.ProcedureWarning,\n+      \"The query used a procedure that generated a warning.\"\n+  ),\n+  DEPRECATED_PROCEDURE_RETURN_FIELD(\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The query used a deprecated field from a procedure.\"\n+  ),\n+  DEPRECATED_BINDING_VAR_LENGTH_RELATIONSHIP(\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"Binding relationships to a list in a variable length pattern is deprecated.\"\n+  ),\n+  DEPRECATED_RELATIONSHIP_TYPE_SEPARATOR(\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The semantics of using colon in the separation of alternative relationship types in conjunction with the \" +\n+          \"use of variable binding, inlined property predicates, or variable length will change in a future version.\"\n+  ),\n+  EAGER_LOAD_CSV(\n+      SeverityLevel.WARNING,\n+      Status.Statement.EagerOperatorWarning,\n+      \"Using LOAD CSV with a large data set in a query where the execution plan contains the \" +\n+          \"Eager operator could potentially consume a lot of memory and is likely to not perform well. \" +\n+          \"See the Neo4j Manual entry on the Eager operator for more information and hints on \" +\n+          \"how problems could be avoided.\"\n+  ),\n+  LARGE_LABEL_LOAD_CSV(\n+      SeverityLevel.WARNING,\n+      Status.Statement.NoApplicableIndexWarning,\n+      \"Using LOAD CSV followed by a MATCH or MERGE that matches a non-indexed label will most likely \" +\n+          \"not perform well on large data sets. Please consider using a schema index.\"\n+  ),\n+  MISSING_LABEL(\n+      SeverityLevel.WARNING,\n+      Status.Statement.UnknownLabelWarning,\n+      \"One of the labels in your query is not available in the database, make sure you didn't \" +\n+          \"misspell it or that the label is available when you run this statement in your application\"\n+  ),\n+  MISSING_REL_TYPE(\n+      SeverityLevel.WARNING,\n+      Status.Statement.UnknownRelationshipTypeWarning,\n+      \"One of the relationship types in your query is not available in the database, make sure you didn't \" +\n+          \"misspell it or that the label is available when you run this statement in your application\"\n+  ),\n+  MISSING_PROPERTY_NAME(\n+      SeverityLevel.WARNING,\n+      Status.Statement.UnknownPropertyKeyWarning,\n+      \"One of the property names in your query is not available in the database, make sure you didn't \" +\n+          \"misspell it or that the label is available when you run this statement in your application\"\n+  ),\n+  UNBOUNDED_SHORTEST_PATH(\n+      SeverityLevel.WARNING,\n+      Status.Statement.UnboundedVariableLengthPatternWarning,\n+      \"Using shortest path with an unbounded pattern will likely result in long execution times. \" +\n+          \"It is recommended to use an upper limit to the number of node hops in your pattern.\"\n+  ),\n+  EXHAUSTIVE_SHORTEST_PATH(\n+      SeverityLevel.WARNING,\n+      Status.Statement.ExhaustiveShortestPathWarning,\n+      \"Using shortest path with an exhaustive search fallback might cause query slow down since shortest path \" +\n+          \"graph algorithms might not work for this use case. It is recommended to introduce a WITH to separate the \" +\n+          \"MATCH containing the shortest path from the existential predicates on that path.\"\n+  ),\n+  CREATE_UNIQUE_UNAVAILABLE_FALLBACK(\n+      SeverityLevel.WARNING,\n+      Status.Statement.PlannerUnavailableWarning,\n+      \"CREATE UNIQUE is unsupported for current CYPHER version, the query has been executed by an older CYPHER version\"\n+  ),\n+  START_UNAVAILABLE_FALLBACK(\n+      SeverityLevel.WARNING,\n+      Status.Statement.PlannerUnavailableWarning,\n+      \"START is not supported for current CYPHER version, the query has been executed by an older CYPHER version\"\n+  ),\n+  START_DEPRECATED(\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"START has been deprecated and will be removed in a future version.\"),\n+  EXPERIMENTAL_FEATURE(\n+      SeverityLevel.WARNING,\n+      Status.Statement.ExperimentalFeature,\n+      \"You are using an experimental feature\"),\n+  SUBOPTIMAL_INDEX_FOR_CONTAINS_QUERY(\n+      SeverityLevel.INFORMATION,\n+      Status.Statement.SuboptimalIndexForWildcardQuery,\n+      \"If the performance of this statement using `CONTAINS` doesn't meet your expectations check out the alternative index-providers, see \" +\n+          \"documentation on index configuration.\"),\n+  SUBOPTIMAL_INDEX_FOR_ENDS_WITH_QUERY(\n+      SeverityLevel.INFORMATION,\n+      Status.Statement.SuboptimalIndexForWildcardQuery,\n+      \"If the performance of this statement using `ENDS WITH` doesn't meet your expectations check out the alternative index-providers, see \" +\n+          \"documentation on index configuration.\");\n \n-    private final Status status;\n-    private final String description;\n-    private final SeverityLevel severity;\n+  private final Status status;\n+  private final String description;\n+  private final SeverityLevel severity;\n \n-    NotificationCode( SeverityLevel severity, Status status, String description )\n-    {\n-        this.severity = severity;\n-        this.status = status;\n-        this.description = description;\n-    }\n+  NotificationCode(SeverityLevel severity, Status status, String description)\n+  {\n+    this.severity = severity;\n+    this.status = status;\n+    this.description = description;\n+  }\n \n-    // TODO: Move construction of Notifications to a factory with explicit methods per type of notification\n-    public Notification notification( InputPosition position, NotificationDetail... details )\n-    {\n-        return new Notification( position, details );\n-    }\n+  // TODO: Move construction of Notifications to a factory with explicit methods per type of notification\n+  public Notification notification(InputPosition position, NotificationDetail... details)\n+  {\n+    return new Notification(position, details);\n+  }\n+\n+  public final class Notification implements org.neo4j.graphdb.Notification\n+  {\n+    private final InputPosition position;\n+    private final String detailedDescription;\n \n-    public final class Notification implements org.neo4j.graphdb.Notification\n+    Notification(InputPosition position, NotificationDetail... details)\n     {\n-        private final InputPosition position;\n-        private final String detailedDescription;\n+      this.position = position;\n \n-        Notification( InputPosition position, NotificationDetail... details )\n+      if (details.length == 0)\n+      {\n+        this.detailedDescription = description;\n+      } else\n+      {\n+        StringBuilder builder = new StringBuilder(description.length());\n+        builder.append(description);\n+        builder.append(' ');\n+        builder.append('(');\n+        String comma = \"\";\n+        for (NotificationDetail detail : details)\n         {\n-            this.position = position;\n-\n-            if ( details.length == 0 )\n-            {\n-                this.detailedDescription = description;\n-            }\n-            else\n-            {\n-                StringBuilder builder = new StringBuilder( description.length() );\n-                builder.append( description );\n-                builder.append( ' ' );\n-                builder.append( '(' );\n-                String comma = \"\";\n-                for ( NotificationDetail detail : details )\n-                {\n-                    builder.append( comma );\n-                    builder.append( detail );\n-                    comma = \", \";\n-                }\n-                builder.append( ')' );\n-\n-                this.detailedDescription = builder.toString();\n-            }\n+          builder.append(comma);\n+          builder.append(detail);\n+          comma = \", \";\n         }\n+        builder.append(')');\n \n-        @Override\n-        public String getCode()\n-        {\n-            return status.code().serialize();\n-        }\n+        this.detailedDescription = builder.toString();\n+      }\n+    }\n \n-        @Override\n-        public String getTitle()\n-        {\n-            return status.code().description();\n-        }\n+    @Override\n+    public String getCode()\n+    {\n+      return status.code().serialize();\n+    }\n \n-        @Override\n-        public String getDescription()\n-        {\n-            return detailedDescription;\n-        }\n+    @Override\n+    public String getTitle()\n+    {\n+      return status.code().description();\n+    }\n \n-        @Override\n-        public InputPosition getPosition()\n-        {\n-            return position;\n-        }\n+    @Override\n+    public String getDescription()\n+    {\n+      return detailedDescription;\n+    }\n \n-        @Override\n-        public SeverityLevel getSeverity()\n-        {\n-            return severity;\n-        }\n+    @Override\n+    public InputPosition getPosition()\n+    {\n+      return position;\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return \"Notification{\" +\n-                    \"position=\" + position +\n-                    \", detailedDescription='\" + detailedDescription + '\\'' +\n-                    '}';\n-        }\n+    @Override\n+    public SeverityLevel getSeverity()\n+    {\n+      return severity;\n+    }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            Notification that = (Notification) o;\n-            return Objects.equals( position, that.position ) &&\n-                    Objects.equals( detailedDescription, that.detailedDescription );\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return \"Notification{\" +\n+          \"position=\" + position +\n+          \", detailedDescription='\" + detailedDescription + '\\'' +\n+          '}';\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( position, detailedDescription );\n-        }\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      Notification that = (Notification) o;\n+      return Objects.equals(position, that.position) &&\n+          Objects.equals(detailedDescription, that.detailedDescription);\n+    }\n+\n+    @Override\n+    public int hashCode()\n+    {\n+      return Objects.hash(position, detailedDescription);\n     }\n+  }\n }\n",
            "diff_size": 300
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 483).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 288).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 230).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 276).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 358).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 260).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 251).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 251).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 363).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 306).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 242).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "190",
                    "column": "62",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1365/NotificationCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1365/NotificationCode.java\nindex ac4d5abc808..c0232ecfb50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1365/NotificationCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1365/NotificationCode.java\n@@ -18,8 +18,6 @@\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n package org.neo4j.graphdb.impl.notification;\n-\n-\n import java.util.Objects;\n \n import org.neo4j.graphdb.InputPosition;\n@@ -31,181 +29,67 @@ import org.neo4j.kernel.api.exceptions.Status;\n  */\n public enum NotificationCode\n {\n-    CARTESIAN_PRODUCT(\n-       SeverityLevel.WARNING,\n-       Status.Statement.CartesianProductWarning,\n-       \"If a part of a query contains multiple disconnected patterns, this will build a \" +\n-       \"cartesian product between all those parts. This may produce a large amount of data and slow down\" +\n-       \" query processing. \" +\n-       \"While occasionally intended, it may often be possible to reformulate the query that avoids the \" +\n-       \"use of this cross \" +\n-       \"product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH\"\n-    ),\n-    LEGACY_PLANNER(\n-        SeverityLevel.WARNING,\n-        Status.Statement.FeatureDeprecationWarning,\n-        \"Using PLANNER for switching between planners has been deprecated, please use CYPHER planner=[rule,cost] instead\"\n-    ),\n-    DEPRECATED_PLANNER(\n-        SeverityLevel.WARNING,\n-        Status.Statement.FeatureDeprecationWarning,\n-        \"The rule planner, which was used to plan this query, is deprecated and will be discontinued soon. \" +\n-                \"If you did not explicitly choose the rule planner, you should try to change your query so that the \" +\n-                \"rule planner is not used\"\n-    ),\n-    PLANNER_UNSUPPORTED(\n-        SeverityLevel.WARNING,\n-        Status.Statement.PlannerUnsupportedWarning,\n-        \"Using COST planner is unsupported for this query, please use RULE planner instead\"\n-    ),\n-    RULE_PLANNER_UNAVAILABLE_FALLBACK(\n-        SeverityLevel.WARNING,\n-        Status.Statement.PlannerUnavailableWarning,\n-        \"Using RULE planner is unsupported for current CYPHER version, the query has been executed by an older CYPHER \" +\n-        \"version\"\n-    ),\n-    RUNTIME_UNSUPPORTED(\n-        SeverityLevel.WARNING,\n-        Status.Statement.RuntimeUnsupportedWarning,\n-        \"Selected runtime is unsupported for this query, please use a different runtime instead or fallback to default.\"\n-    ),\n-    INDEX_HINT_UNFULFILLABLE(\n-        SeverityLevel.WARNING,\n-        Status.Schema.IndexNotFound,\n-        \"The hinted index does not exist, please check the schema\"\n-    ),\n-    JOIN_HINT_UNFULFILLABLE(\n-        SeverityLevel.WARNING,\n-        Status.Statement.JoinHintUnfulfillableWarning,\n-        \"The hinted join was not planned. This could happen because no generated plan contained the join key, \" +\n-                \"please try using a different join key or restructure your query.\"\n-    ),\n-    JOIN_HINT_UNSUPPORTED(\n-        SeverityLevel.WARNING,\n-        Status.Statement.JoinHintUnsupportedWarning,\n-        \"Using RULE planner is unsupported for queries with join hints, please use COST planner instead\"\n-    ),\n-    LENGTH_ON_NON_PATH(\n-        SeverityLevel.WARNING,\n-        Status.Statement.FeatureDeprecationWarning,\n-        \"Using 'length' on anything that is not a path is deprecated, please use 'size' instead\"\n-    ),\n-    INDEX_LOOKUP_FOR_DYNAMIC_PROPERTY(\n-        SeverityLevel.WARNING,\n-        Status.Statement.DynamicPropertyWarning,\n-        \"Using a dynamic property makes it impossible to use an index lookup for this query\"\n-    ),\n+    CARTESIAN_PRODUCT( SeverityLevel.WARNING,\n+       Status.Statement.CartesianProductWarning, \"If a part of a query contains multiple disconnected patterns, this will build a \" + \"cartesian product between all those parts. This may produce a large amount of data and slow down\" + \" query processing. \" + \"While occasionally intended, it may often be possible to reformulate the query that avoids the \" + \"use of this cross \" + \"product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH\" ),\n+    LEGACY_PLANNER( SeverityLevel.WARNING,\n+        Status.Statement.FeatureDeprecationWarning, \"Using PLANNER for switching between planners has been deprecated, please use CYPHER planner=[rule,cost] instead\" ),\n+    DEPRECATED_PLANNER( SeverityLevel.WARNING,\n+        Status.Statement.FeatureDeprecationWarning, \"The rule planner, which was used to plan this query, is deprecated and will be discontinued soon. \" + \"If you did not explicitly choose the rule planner, you should try to change your query so that the \" + \"rule planner is not used\" ),\n+    PLANNER_UNSUPPORTED( SeverityLevel.WARNING,\n+        Status.Statement.PlannerUnsupportedWarning, \"Using COST planner is unsupported for this query, please use RULE planner instead\" ),\n+    RULE_PLANNER_UNAVAILABLE_FALLBACK( SeverityLevel.WARNING,\n+        Status.Statement.PlannerUnavailableWarning, \"Using RULE planner is unsupported for current CYPHER version, the query has been executed by an older CYPHER \" + \"version\" ),\n+    RUNTIME_UNSUPPORTED( SeverityLevel.WARNING,\n+        Status.Statement.RuntimeUnsupportedWarning, \"Selected runtime is unsupported for this query, please use a different runtime instead or fallback to default.\" ),\n+    INDEX_HINT_UNFULFILLABLE( SeverityLevel.WARNING,\n+        Status.Schema.IndexNotFound, \"The hinted index does not exist, please check the schema\" ),\n+    JOIN_HINT_UNFULFILLABLE( SeverityLevel.WARNING,\n+        Status.Statement.JoinHintUnfulfillableWarning, \"The hinted join was not planned. This could happen because no generated plan contained the join key, \" + \"please try using a different join key or restructure your query.\" ),\n+    JOIN_HINT_UNSUPPORTED( SeverityLevel.WARNING,\n+        Status.Statement.JoinHintUnsupportedWarning, \"Using RULE planner is unsupported for queries with join hints, please use COST planner instead\" ),\n+    LENGTH_ON_NON_PATH( SeverityLevel.WARNING,\n+        Status.Statement.FeatureDeprecationWarning, \"Using 'length' on anything that is not a path is deprecated, please use 'size' instead\" ),\n+    INDEX_LOOKUP_FOR_DYNAMIC_PROPERTY( SeverityLevel.WARNING,\n+        Status.Statement.DynamicPropertyWarning, \"Using a dynamic property makes it impossible to use an index lookup for this query\" ),\n     BARE_NODE_SYNTAX_DEPRECATED( // This notification is no longer produced by current Cypher compilers\n-        SeverityLevel.WARNING,   // but it is left here for backwards compatibility.\n-        Status.Statement.FeatureDeprecationWarning,\n-        \"Use of bare node patterns has been deprecated. Please enclose the identifier in parenthesis.\"\n-    ),\n-    DEPRECATED_FUNCTION(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The query used a deprecated function.\"\n-    ),\n-    DEPRECATED_PROCEDURE(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The query used a deprecated procedure.\"\n-    ),\n-    PROCEDURE_WARNING(\n-            SeverityLevel.WARNING,\n-            Status.Procedure.ProcedureWarning,\n-            \"The query used a procedure that generated a warning.\"\n-    ),\n-    DEPRECATED_PROCEDURE_RETURN_FIELD(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The query used a deprecated field from a procedure.\"\n-    ),\n-    DEPRECATED_BINDING_VAR_LENGTH_RELATIONSHIP(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"Binding relationships to a list in a variable length pattern is deprecated.\"\n-    ),\n-    DEPRECATED_RELATIONSHIP_TYPE_SEPARATOR(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The semantics of using colon in the separation of alternative relationship types in conjunction with the \" +\n-            \"use of variable binding, inlined property predicates, or variable length will change in a future version.\"\n-    ),\n-    EAGER_LOAD_CSV(\n-        SeverityLevel.WARNING,\n-        Status.Statement.EagerOperatorWarning,\n-        \"Using LOAD CSV with a large data set in a query where the execution plan contains the \" +\n-        \"Eager operator could potentially consume a lot of memory and is likely to not perform well. \" +\n-        \"See the Neo4j Manual entry on the Eager operator for more information and hints on \" +\n-        \"how problems could be avoided.\"\n-    ),\n-    LARGE_LABEL_LOAD_CSV(\n-        SeverityLevel.WARNING,\n-        Status.Statement.NoApplicableIndexWarning,\n-        \"Using LOAD CSV followed by a MATCH or MERGE that matches a non-indexed label will most likely \" +\n-        \"not perform well on large data sets. Please consider using a schema index.\"\n-        ),\n-    MISSING_LABEL(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnknownLabelWarning,\n-            \"One of the labels in your query is not available in the database, make sure you didn't \" +\n-            \"misspell it or that the label is available when you run this statement in your application\"\n-    ),\n-    MISSING_REL_TYPE(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnknownRelationshipTypeWarning,\n-            \"One of the relationship types in your query is not available in the database, make sure you didn't \" +\n-            \"misspell it or that the label is available when you run this statement in your application\"\n-    ),\n-    MISSING_PROPERTY_NAME(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnknownPropertyKeyWarning,\n-            \"One of the property names in your query is not available in the database, make sure you didn't \" +\n-            \"misspell it or that the label is available when you run this statement in your application\"\n-    ),\n-    UNBOUNDED_SHORTEST_PATH(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnboundedVariableLengthPatternWarning,\n-            \"Using shortest path with an unbounded pattern will likely result in long execution times. \" +\n-            \"It is recommended to use an upper limit to the number of node hops in your pattern.\"\n-    ),\n-    EXHAUSTIVE_SHORTEST_PATH(\n-            SeverityLevel.WARNING,\n-            Status.Statement.ExhaustiveShortestPathWarning,\n-            \"Using shortest path with an exhaustive search fallback might cause query slow down since shortest path \" +\n-            \"graph algorithms might not work for this use case. It is recommended to introduce a WITH to separate the \" +\n-            \"MATCH containing the shortest path from the existential predicates on that path.\"\n-    ),\n-    CREATE_UNIQUE_UNAVAILABLE_FALLBACK(\n-            SeverityLevel.WARNING,\n-            Status.Statement.PlannerUnavailableWarning,\n-        \"CREATE UNIQUE is unsupported for current CYPHER version, the query has been executed by an older CYPHER version\"\n-    ),\n-    START_UNAVAILABLE_FALLBACK(\n-            SeverityLevel.WARNING,\n-            Status.Statement.PlannerUnavailableWarning,\n-            \"START is not supported for current CYPHER version, the query has been executed by an older CYPHER version\"\n-    ),\n-    START_DEPRECATED(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"START has been deprecated and will be removed in a future version.\" ),\n-    EXPERIMENTAL_FEATURE(\n-            SeverityLevel.WARNING,\n-            Status.Statement.ExperimentalFeature,\n-            \"You are using an experimental feature\" ),\n-    SUBOPTIMAL_INDEX_FOR_CONTAINS_QUERY(\n-            SeverityLevel.INFORMATION,\n-            Status.Statement.SuboptimalIndexForWildcardQuery,\n-            \"If the performance of this statement using `CONTAINS` doesn't meet your expectations check out the alternative index-providers, see \" +\n-                    \"documentation on index configuration.\" ),\n-    SUBOPTIMAL_INDEX_FOR_ENDS_WITH_QUERY(\n-            SeverityLevel.INFORMATION,\n-            Status.Statement.SuboptimalIndexForWildcardQuery,\n-            \"If the performance of this statement using `ENDS WITH` doesn't meet your expectations check out the alternative index-providers, see \" +\n-                    \"documentation on index configuration.\" );\n-\n-    private final Status status;\n+        SeverityLevel.WARNING, // but it is left here for backwards compatibility.\n+        Status.Statement.FeatureDeprecationWarning, \"Use of bare node patterns has been deprecated. Please enclose the identifier in parenthesis.\" ),\n+    DEPRECATED_FUNCTION( SeverityLevel.WARNING,\n+            Status.Statement.FeatureDeprecationWarning, \"The query used a deprecated function.\" ),\n+    DEPRECATED_PROCEDURE( SeverityLevel.WARNING,\n+            Status.Statement.FeatureDeprecationWarning, \"The query used a deprecated procedure.\" ),\n+    PROCEDURE_WARNING( SeverityLevel.WARNING,\n+            Status.Procedure.ProcedureWarning, \"The query used a procedure that generated a warning.\" ),\n+    DEPRECATED_PROCEDURE_RETURN_FIELD( SeverityLevel.WARNING,\n+            Status.Statement.FeatureDeprecationWarning, \"The query used a deprecated field from a procedure.\" ),\n+    DEPRECATED_BINDING_VAR_LENGTH_RELATIONSHIP( SeverityLevel.WARNING,\n+            Status.Statement.FeatureDeprecationWarning, \"Binding relationships to a list in a variable length pattern is deprecated.\" ),\n+    DEPRECATED_RELATIONSHIP_TYPE_SEPARATOR( SeverityLevel.WARNING,\n+            Status.Statement.FeatureDeprecationWarning, \"The semantics of using colon in the separation of alternative relationship types in conjunction with the \" + \"use of variable binding, inlined property predicates, or variable length will change in a future version.\" ),\n+    EAGER_LOAD_CSV( SeverityLevel.WARNING,\n+        Status.Statement.EagerOperatorWarning, \"Using LOAD CSV with a large data set in a query where the execution plan contains the \" + \"Eager operator could potentially consume a lot of memory and is likely to not perform well. \" + \"See the Neo4j Manual entry on the Eager operator for more information and hints on \" + \"how problems could be avoided.\" ),\n+    LARGE_LABEL_LOAD_CSV( SeverityLevel.WARNING,\n+        Status.Statement.NoApplicableIndexWarning, \"Using LOAD CSV followed by a MATCH or MERGE that matches a non-indexed label will most likely \" + \"not perform well on large data sets. Please consider using a schema index.\" ),\n+    MISSING_LABEL( SeverityLevel.WARNING,\n+            Status.Statement.UnknownLabelWarning, \"One of the labels in your query is not available in the database, make sure you didn't \" + \"misspell it or that the label is available when you run this statement in your application\" ),\n+    MISSING_REL_TYPE( SeverityLevel.WARNING,\n+            Status.Statement.UnknownRelationshipTypeWarning, \"One of the relationship types in your query is not available in the database, make sure you didn't \" + \"misspell it or that the label is available when you run this statement in your application\" ),\n+    MISSING_PROPERTY_NAME( SeverityLevel.WARNING,\n+            Status.Statement.UnknownPropertyKeyWarning, \"One of the property names in your query is not available in the database, make sure you didn't \" + \"misspell it or that the label is available when you run this statement in your application\" ),\n+    UNBOUNDED_SHORTEST_PATH( SeverityLevel.WARNING,\n+            Status.Statement.UnboundedVariableLengthPatternWarning, \"Using shortest path with an unbounded pattern will likely result in long execution times. \" + \"It is recommended to use an upper limit to the number of node hops in your pattern.\" ),\n+    EXHAUSTIVE_SHORTEST_PATH( SeverityLevel.WARNING,\n+            Status.Statement.ExhaustiveShortestPathWarning, \"Using shortest path with an exhaustive search fallback might cause query slow down since shortest path \" + \"graph algorithms might not work for this use case. It is recommended to introduce a WITH to separate the \" + \"MATCH containing the shortest path from the existential predicates on that path.\" ),\n+    CREATE_UNIQUE_UNAVAILABLE_FALLBACK( SeverityLevel.WARNING,\n+            Status.Statement.PlannerUnavailableWarning, \"CREATE UNIQUE is unsupported for current CYPHER version, the query has been executed by an older CYPHER version\" ),\n+    START_UNAVAILABLE_FALLBACK( SeverityLevel.WARNING,\n+            Status.Statement.PlannerUnavailableWarning, \"START is not supported for current CYPHER version, the query has been executed by an older CYPHER version\" ),\n+    START_DEPRECATED( SeverityLevel.WARNING,\n+            Status.Statement.FeatureDeprecationWarning, \"START has been deprecated and will be removed in a future version.\" ), EXPERIMENTAL_FEATURE( SeverityLevel.WARNING,\n+            Status.Statement.ExperimentalFeature, \"You are using an experimental feature\" ), SUBOPTIMAL_INDEX_FOR_CONTAINS_QUERY( SeverityLevel.INFORMATION,\n+            Status.Statement.SuboptimalIndexForWildcardQuery, \"If the performance of this statement using `CONTAINS` doesn't meet your expectations check out the alternative index-providers, see \" + \"documentation on index configuration.\" ), SUBOPTIMAL_INDEX_FOR_ENDS_WITH_QUERY( SeverityLevel.INFORMATION,\n+            Status.Statement.SuboptimalIndexForWildcardQuery, \"If the performance of this statement using `ENDS WITH` doesn't meet your expectations check out the alternative index-providers, see \" + \"documentation on index configuration.\" );\n+private final Status status;\n     private final String description;\n     private final SeverityLevel severity;\n \n@@ -249,8 +133,7 @@ public enum NotificationCode\n                     comma = \", \";\n                 }\n                 builder.append( ')' );\n-\n-                this.detailedDescription = builder.toString();\n+this.detailedDescription = builder.toString();\n             }\n         }\n \n@@ -287,11 +170,8 @@ public enum NotificationCode\n         @Override\n         public String toString()\n         {\n-            return \"Notification{\" +\n-                    \"position=\" + position +\n-                    \", detailedDescription='\" + detailedDescription + '\\'' +\n-                    '}';\n-        }\n+            return \"Notification{\" + \"position=\" + position + \", detailedDescription='\" + detailedDescription + '\\'' + '}';\n+    }\n \n         @Override\n         public boolean equals( Object o )\n@@ -300,13 +180,14 @@ public enum NotificationCode\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            Notification that = (Notification) o;\n-            return Objects.equals( position, that.position ) &&\n-                    Objects.equals( detailedDescription, that.detailedDescription );\n+\n+Notification that = (Notification) o;\n+            return Objects.equals( position, that.position ) &&Objects.equals( detailedDescription, that.detailedDescription );\n         }\n \n         @Override\n@@ -315,4 +196,4 @@ public enum NotificationCode\n             return Objects.hash( position, detailedDescription );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 189
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "eclipse-kura",
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "420",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 152).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                                if (isAtReachable(commAtConnection)) {\n                                    logger.warn(\n                                            \"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\");\n                                    logger.info(\"disableGps() :: Will assume that GPS is disabled\");\n                                    this.gpsEnabled = false;\n                                    break;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "420",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/11/TelitModem.java\nindex 0fceff3ccd0..dda544134b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/11/TelitModem.java\n@@ -417,8 +417,7 @@ public abstract class TelitModem {\n                             } else {\n                                 if (isAtReachable(commAtConnection)) {\n                                     logger.warn(\n-                                            \"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\");\n-                                    logger.info(\"disableGps() :: Will assume that GPS is disabled\");\n+                                            \"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\"); logger.info(\"disableGps() :: Will assume that GPS is disabled\");\n                                     this.gpsEnabled = false;\n                                     break;\n                                 } else {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/11/TelitModem.java\nindex 0fceff3ccd0..9c925fdd8fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/11/TelitModem.java\n@@ -91,11 +91,11 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n                 try {\n                     reply = commAtConnection.sendCommand(TelitModemAtCommands.getModelNumber.getCommand().getBytes(),\n-                            1000, 100);\n+                        1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n@@ -118,11 +118,11 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n                 try {\n                     reply = commAtConnection.sendCommand(TelitModemAtCommands.getManufacturer.getCommand().getBytes(),\n-                            1000, 100);\n+                        1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n@@ -145,11 +145,11 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n                 try {\n                     reply = commAtConnection.sendCommand(TelitModemAtCommands.getSerialNumber.getCommand().getBytes(),\n-                            1000, 100);\n+                        1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n@@ -178,11 +178,11 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n                 try {\n                     reply = commAtConnection.sendCommand(TelitModemAtCommands.getRevision.getCommand().getBytes(), 1000,\n-                            100);\n+                        100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n@@ -228,7 +228,7 @@ public abstract class TelitModem {\n             String gpsPort = getGpsPort();\n             if ((atPort.equals(getDataPort()) || atPort.equals(gpsPort) && this.gpsEnabled) && this.rssi < 0) {\n                 logger.trace(\"getSignalStrength() :: returning previously obtained RSSI={} :: m_gpsEnabled={}\",\n-                        this.rssi, this.gpsEnabled);\n+                    this.rssi, this.gpsEnabled);\n                 return this.rssi;\n             }\n \n@@ -238,11 +238,11 @@ public abstract class TelitModem {\n             if (!isAtReachable(commAtConnection)) {\n                 closeSerialPort(commAtConnection);\n                 throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                    MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n             }\n             try {\n                 reply = commAtConnection.sendCommand(TelitModemAtCommands.getSignalStrength.getCommand().getBytes(),\n-                        1000, 100);\n+                    1000, 100);\n             } catch (IOException e) {\n                 closeSerialPort(commAtConnection);\n                 throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n@@ -285,12 +285,12 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n \n                 try {\n                     reply = commAtConnection.sendCommand(TelitModemAtCommands.isGpsPowered.getCommand().getBytes(),\n-                            1000, 100);\n+                        1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n@@ -326,7 +326,7 @@ public abstract class TelitModem {\n             if (!isAtReachable(commAtConnection)) {\n                 closeSerialPort(commAtConnection);\n                 throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                    MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n             }\n \n             byte[] reply;\n@@ -354,7 +354,7 @@ public abstract class TelitModem {\n                             logger.trace(\"enableGps() :: gpsEnableNMEA reply={}\", sReply);\n                             if (!sReply.isEmpty() && sReply.startsWith(\"CONNECT\")) {\n                                 logger.info(\"enableGps() :: Modem replied to the {} command with 'CONNECT'\",\n-                                        gpsEnableNMEAcommand);\n+                                    gpsEnableNMEAcommand);\n                                 logger.info(\"enableGps() :: !!! Modem GPS enabled !!!\");\n                                 this.gpsEnabled = true;\n                                 break;\n@@ -362,7 +362,7 @@ public abstract class TelitModem {\n                         } else {\n                             if (sReply.isEmpty()) {\n                                 logger.info(\"enableGps() :: Modem replied to the {} command with 'OK'\",\n-                                        gpsEnableNMEAcommand);\n+                                    gpsEnableNMEAcommand);\n                                 logger.info(\"enableGps() :: !!! Modem GPS enabled !!!\");\n                                 this.gpsEnabled = true;\n                                 break;\n@@ -393,18 +393,18 @@ public abstract class TelitModem {\n                     int numAttempts = 3;\n                     while (numAttempts > 0) {\n                         logger.debug(\"disableGps() :: sendCommand escapeSequence {}\",\n-                                TelitModemAtCommands.escapeSequence.getCommand());\n+                            TelitModemAtCommands.escapeSequence.getCommand());\n \n                         sleep(1000); // do not send anything for 1 second before the escape sequence\n                         byte[] reply = commAtConnection\n-                                .sendCommand(TelitModemAtCommands.escapeSequence.getCommand().getBytes(), 1000, 1100);\n+                            .sendCommand(TelitModemAtCommands.escapeSequence.getCommand().getBytes(), 1000, 1100);\n \n                         if (reply != null && reply.length > 0) {\n                             logger.trace(\"disableGps() :: reply={}\", new String(reply));\n                             String sReply = new String(reply);\n                             if (sReply.contains(\"NO CARRIER\")) {\n                                 logger.info(\n-                                        \"disableGps() :: Modem replied with 'NO CARRIER' to the +++ escape sequence\");\n+                                    \"disableGps() :: Modem replied with 'NO CARRIER' to the +++ escape sequence\");\n                                 sleep(2000);\n                                 if (isAtReachable(commAtConnection)) {\n                                     logger.info(\"disableGps() :: !!! Modem GPS disabled !!!, OK\");\n@@ -417,7 +417,7 @@ public abstract class TelitModem {\n                             } else {\n                                 if (isAtReachable(commAtConnection)) {\n                                     logger.warn(\n-                                            \"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\");\n+                                        \"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\");\n                                     logger.info(\"disableGps() :: Will assume that GPS is disabled\");\n                                     this.gpsEnabled = false;\n                                     break;\n@@ -438,7 +438,7 @@ public abstract class TelitModem {\n                 }\n \n                 logger.debug(\"disableGps() :: sendCommand gpsPowerDown :: {}\",\n-                        TelitModemAtCommands.gpsPowerDown.getCommand());\n+                    TelitModemAtCommands.gpsPowerDown.getCommand());\n                 commAtConnection.sendCommand(TelitModemAtCommands.gpsPowerDown.getCommand().getBytes(), 1000, 100);\n \n             } catch (IOException e) {\n@@ -458,11 +458,11 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n                 try {\n                     reply = commAtConnection.sendCommand(TelitModemAtCommands.getIMSI.getCommand().getBytes(), 1000,\n-                            100);\n+                        100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n@@ -491,11 +491,11 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n                 try {\n                     reply = commAtConnection.sendCommand(TelitModemAtCommands.getICCID.getCommand().getBytes(), 1000,\n-                            100);\n+                        100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n@@ -629,7 +629,7 @@ public abstract class TelitModem {\n         CommConnection connection = null;\n         if (this.connectionFactory != null) {\n             String uri = new CommURI.Builder(port).withBaudRate(115200).withDataBits(8).withStopBits(1).withParity(0)\n-                    .withTimeout(2000).build().toString();\n+                .withTimeout(2000).build().toString();\n \n             try {\n                 connection = (CommConnection) this.connectionFactory.createConnection(uri, 1, false);\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "420",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/11/TelitModem.java\nindex 0fceff3ccd0..14a7f6cba11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/11/TelitModem.java\n@@ -776,4 +776,4 @@ public abstract class TelitModem {\n         sbCommand.append(\",1,1,1,1,1,1\\r\\n\");\n         return sbCommand.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "421",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "632",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/11/TelitModem.java\nindex 0fceff3ccd0..3ecb6790393 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/11/TelitModem.java\n@@ -15,7 +15,6 @@ package org.eclipse.kura.net.admin.modem.telit.generic;\n import java.io.IOException;\n import java.net.URISyntaxException;\n import java.util.List;\n-\n import org.eclipse.kura.KuraErrorCode;\n import org.eclipse.kura.KuraException;\n import org.eclipse.kura.comm.CommConnection;\n@@ -35,11 +34,8 @@ import org.slf4j.LoggerFactory;\n public abstract class TelitModem {\n \n     private static final Logger logger = LoggerFactory.getLogger(TelitModem.class);\n-\n     protected static final String MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG = \"Modem not available for AT commands\";\n-\n     protected final Object atLock = new Object();\n-\n     protected String model;\n     protected String manufacturer;\n     protected String serialNumber;\n@@ -48,7 +44,6 @@ public abstract class TelitModem {\n     protected Boolean gpsSupported;\n     protected String imsi;\n     protected String iccid;\n-\n     private boolean gpsEnabled;\n     private ModemDevice device;\n     private final String platform;\n@@ -56,7 +51,6 @@ public abstract class TelitModem {\n     private List<NetConfig> netConfigs = null;\n \n     public TelitModem(ModemDevice device, String platform, ConnectionFactory connectionFactory) {\n-\n         this.device = device;\n         this.platform = platform;\n         this.connectionFactory = connectionFactory;\n@@ -65,12 +59,10 @@ public abstract class TelitModem {\n \n     public void reset() {\n         int offOnDelay = 1000;\n-\n         sleep(5000);\n         while (true) {\n             try {\n                 turnOff();\n-\n                 this.gpsEnabled = false;\n                 sleep(offOnDelay);\n                 turnOn();\n@@ -85,22 +77,24 @@ public abstract class TelitModem {\n     public String getModel() throws KuraException {\n         synchronized (this.atLock) {\n             if (this.model == null) {\n-                logger.debug(\"sendCommand getModelNumber :: {}\", TelitModemAtCommands.getModelNumber.getCommand());\n+                logger.debug(\"sendCommand getModelNumber :: {}\",\n+                             TelitModemAtCommands.getModelNumber.getCommand());\n                 byte[] reply;\n                 CommConnection commAtConnection = openSerialPort(getAtPort());\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n+\n                 try {\n-                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getModelNumber.getCommand().getBytes(),\n-                            1000, 100);\n+                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getModelNumber.getCommand().getBytes(), 1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n                 }\n                 closeSerialPort(commAtConnection);\n+\n                 if (reply != null) {\n                     this.model = getResponseString(reply);\n                 }\n@@ -112,22 +106,24 @@ public abstract class TelitModem {\n     public String getManufacturer() throws KuraException {\n         synchronized (this.atLock) {\n             if (this.manufacturer == null) {\n-                logger.debug(\"sendCommand getManufacturer :: {}\", TelitModemAtCommands.getManufacturer.getCommand());\n+                logger.debug(\"sendCommand getManufacturer :: {}\",\n+                             TelitModemAtCommands.getManufacturer.getCommand());\n                 byte[] reply;\n                 CommConnection commAtConnection = openSerialPort(getAtPort());\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n+\n                 try {\n-                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getManufacturer.getCommand().getBytes(),\n-                            1000, 100);\n+                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getManufacturer.getCommand().getBytes(), 1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n                 }\n                 closeSerialPort(commAtConnection);\n+\n                 if (reply != null) {\n                     this.manufacturer = getResponseString(reply);\n                 }\n@@ -139,28 +135,31 @@ public abstract class TelitModem {\n     public String getSerialNumber() throws KuraException {\n         synchronized (this.atLock) {\n             if (this.serialNumber == null) {\n-                logger.debug(\"sendCommand getSerialNumber :: {}\", TelitModemAtCommands.getSerialNumber.getCommand());\n+                logger.debug(\"sendCommand getSerialNumber :: {}\",\n+                             TelitModemAtCommands.getSerialNumber.getCommand());\n                 byte[] reply;\n                 CommConnection commAtConnection = openSerialPort(getAtPort());\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n+\n                 try {\n-                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getSerialNumber.getCommand().getBytes(),\n-                            1000, 100);\n+                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getSerialNumber.getCommand().getBytes(), 1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n                 }\n                 closeSerialPort(commAtConnection);\n+\n                 if (reply != null) {\n                     String serialNum = getResponseString(reply);\n                     if (serialNum != null && !serialNum.isEmpty()) {\n                         if (serialNum.startsWith(\"#CGSN:\")) {\n                             serialNum = serialNum.substring(\"#CGSN:\".length()).trim();\n                         }\n+\n                         this.serialNumber = serialNum;\n                     }\n                 }\n@@ -178,16 +177,17 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n+\n                 try {\n-                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getRevision.getCommand().getBytes(), 1000,\n-                            100);\n+                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getRevision.getCommand().getBytes(), 1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n                 }\n                 closeSerialPort(commAtConnection);\n+\n                 if (reply != null) {\n                     this.revisionId = getResponseString(reply);\n                 }\n@@ -221,33 +221,34 @@ public abstract class TelitModem {\n     }\n \n     public int getSignalStrength() throws KuraException {\n-\n         int signalStrength = -113;\n         synchronized (this.atLock) {\n             String atPort = getAtPort();\n             String gpsPort = getGpsPort();\n             if ((atPort.equals(getDataPort()) || atPort.equals(gpsPort) && this.gpsEnabled) && this.rssi < 0) {\n                 logger.trace(\"getSignalStrength() :: returning previously obtained RSSI={} :: m_gpsEnabled={}\",\n-                        this.rssi, this.gpsEnabled);\n+                             this.rssi,\n+                             this.gpsEnabled);\n                 return this.rssi;\n             }\n-\n-            logger.debug(\"sendCommand getSignalStrength :: {}\", TelitModemAtCommands.getSignalStrength.getCommand());\n+            logger.debug(\"sendCommand getSignalStrength :: {}\",\n+                         TelitModemAtCommands.getSignalStrength.getCommand());\n             byte[] reply;\n             CommConnection commAtConnection = openSerialPort(atPort);\n             if (!isAtReachable(commAtConnection)) {\n                 closeSerialPort(commAtConnection);\n                 throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                    MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n             }\n+\n             try {\n-                reply = commAtConnection.sendCommand(TelitModemAtCommands.getSignalStrength.getCommand().getBytes(),\n-                        1000, 100);\n+                reply = commAtConnection.sendCommand(TelitModemAtCommands.getSignalStrength.getCommand().getBytes(), 1000, 100);\n             } catch (IOException e) {\n                 closeSerialPort(commAtConnection);\n                 throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n             }\n             closeSerialPort(commAtConnection);\n+\n             if (reply != null) {\n                 String[] asCsq;\n                 String sCsq = this.getResponseString(reply);\n@@ -255,6 +256,7 @@ public abstract class TelitModem {\n                     sCsq = sCsq.substring(\"+CSQ:\".length()).trim();\n                     logger.trace(\"getSignalStrength() :: +CSQ={}\", sCsq);\n                     asCsq = sCsq.split(\",\");\n+\n                     if (asCsq.length == 2) {\n                         int rssiVal = Integer.parseInt(asCsq[0]);\n                         if (rssiVal < 99) {\n@@ -265,6 +267,7 @@ public abstract class TelitModem {\n                 }\n             }\n         }\n+\n         this.rssi = signalStrength;\n         return signalStrength;\n     }\n@@ -277,25 +280,27 @@ public abstract class TelitModem {\n             this.gpsSupported = false;\n             return this.gpsSupported;\n         }\n+\n         synchronized (this.atLock) {\n             if (this.gpsSupported == null) {\n-                logger.debug(\"sendCommand isGpsSupported :: {}\", TelitModemAtCommands.isGpsPowered.getCommand());\n+                logger.debug(\"sendCommand isGpsSupported :: {}\",\n+                             TelitModemAtCommands.isGpsPowered.getCommand());\n                 byte[] reply;\n                 CommConnection commAtConnection = openSerialPort(getAtPort());\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n \n                 try {\n-                    reply = commAtConnection.sendCommand(TelitModemAtCommands.isGpsPowered.getCommand().getBytes(),\n-                            1000, 100);\n+                    reply = commAtConnection.sendCommand(TelitModemAtCommands.isGpsPowered.getCommand().getBytes(), 1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n                 }\n                 closeSerialPort(commAtConnection);\n+\n                 if (reply != null) {\n                     String sReply = getResponseString(reply);\n                     if (sReply != null && !sReply.isEmpty()) {\n@@ -321,12 +326,13 @@ public abstract class TelitModem {\n             this.gpsEnabled = false;\n             return;\n         }\n+\n         synchronized (this.atLock) {\n             CommConnection commAtConnection = openSerialPort(getAtPort());\n             if (!isAtReachable(commAtConnection)) {\n                 closeSerialPort(commAtConnection);\n                 throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                    MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n             }\n \n             byte[] reply;\n@@ -346,23 +352,22 @@ public abstract class TelitModem {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n                 }\n-\n                 if (reply != null && reply.length > 0) {\n                     String sReply = getResponseString(reply);\n                     if (sReply != null) {\n                         if (atPort.equals(gpsPort)) {\n                             logger.trace(\"enableGps() :: gpsEnableNMEA reply={}\", sReply);\n+\n                             if (!sReply.isEmpty() && sReply.startsWith(\"CONNECT\")) {\n                                 logger.info(\"enableGps() :: Modem replied to the {} command with 'CONNECT'\",\n-                                        gpsEnableNMEAcommand);\n+                                            gpsEnableNMEAcommand);\n                                 logger.info(\"enableGps() :: !!! Modem GPS enabled !!!\");\n                                 this.gpsEnabled = true;\n                                 break;\n                             }\n                         } else {\n                             if (sReply.isEmpty()) {\n-                                logger.info(\"enableGps() :: Modem replied to the {} command with 'OK'\",\n-                                        gpsEnableNMEAcommand);\n+                                logger.info(\"enableGps() :: Modem replied to the {} command with 'OK'\", gpsEnableNMEAcommand);\n                                 logger.info(\"enableGps() :: !!! Modem GPS enabled !!!\");\n                                 this.gpsEnabled = true;\n                                 break;\n@@ -373,7 +378,6 @@ public abstract class TelitModem {\n                 numAttempts--;\n                 sleep(2000);\n             }\n-\n             closeSerialPort(commAtConnection);\n         }\n     }\n@@ -384,6 +388,7 @@ public abstract class TelitModem {\n             this.gpsEnabled = false;\n             return;\n         }\n+\n         synchronized (this.atLock) {\n             CommConnection commAtConnection = openSerialPort(getAtPort());\n             try {\n@@ -393,19 +398,16 @@ public abstract class TelitModem {\n                     int numAttempts = 3;\n                     while (numAttempts > 0) {\n                         logger.debug(\"disableGps() :: sendCommand escapeSequence {}\",\n-                                TelitModemAtCommands.escapeSequence.getCommand());\n-\n+                                     TelitModemAtCommands.escapeSequence.getCommand());\n                         sleep(1000); // do not send anything for 1 second before the escape sequence\n-                        byte[] reply = commAtConnection\n-                                .sendCommand(TelitModemAtCommands.escapeSequence.getCommand().getBytes(), 1000, 1100);\n-\n+                        byte[] reply = commAtConnection.sendCommand(TelitModemAtCommands.escapeSequence.getCommand().getBytes(), 1000, 1100);\n                         if (reply != null && reply.length > 0) {\n                             logger.trace(\"disableGps() :: reply={}\", new String(reply));\n                             String sReply = new String(reply);\n                             if (sReply.contains(\"NO CARRIER\")) {\n-                                logger.info(\n-                                        \"disableGps() :: Modem replied with 'NO CARRIER' to the +++ escape sequence\");\n+                                logger.info(\"disableGps() :: Modem replied with 'NO CARRIER' to the +++ escape sequence\");\n                                 sleep(2000);\n+\n                                 if (isAtReachable(commAtConnection)) {\n                                     logger.info(\"disableGps() :: !!! Modem GPS disabled !!!, OK\");\n                                     this.gpsEnabled = false;\n@@ -416,8 +418,7 @@ public abstract class TelitModem {\n                                 }\n                             } else {\n                                 if (isAtReachable(commAtConnection)) {\n-                                    logger.warn(\n-                                            \"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\");\n+                                    logger.warn(\"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\");\n                                     logger.info(\"disableGps() :: Will assume that GPS is disabled\");\n                                     this.gpsEnabled = false;\n                                     break;\n@@ -436,11 +437,9 @@ public abstract class TelitModem {\n                     logger.warn(\"disableGps() :: Modem GPS has already been disabled\");\n                     this.gpsEnabled = false;\n                 }\n-\n                 logger.debug(\"disableGps() :: sendCommand gpsPowerDown :: {}\",\n-                        TelitModemAtCommands.gpsPowerDown.getCommand());\n+                             TelitModemAtCommands.gpsPowerDown.getCommand());\n                 commAtConnection.sendCommand(TelitModemAtCommands.gpsPowerDown.getCommand().getBytes(), 1000, 100);\n-\n             } catch (IOException e) {\n                 closeSerialPort(commAtConnection);\n                 throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n@@ -458,22 +457,24 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n+\n                 try {\n-                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getIMSI.getCommand().getBytes(), 1000,\n-                            100);\n+                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getIMSI.getCommand().getBytes(), 1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n                 }\n                 closeSerialPort(commAtConnection);\n+\n                 if (reply != null) {\n                     String mobileSubscriberIdentity = getResponseString(reply);\n                     if (mobileSubscriberIdentity != null && !mobileSubscriberIdentity.isEmpty()) {\n                         if (mobileSubscriberIdentity.startsWith(\"#CIMI:\")) {\n                             mobileSubscriberIdentity = mobileSubscriberIdentity.substring(\"#CIMI:\".length()).trim();\n                         }\n+\n                         this.imsi = mobileSubscriberIdentity;\n                     }\n                 }\n@@ -491,22 +492,24 @@ public abstract class TelitModem {\n                 if (!isAtReachable(commAtConnection)) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.NOT_CONNECTED,\n-                            MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n+                        MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());\n                 }\n+\n                 try {\n-                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getICCID.getCommand().getBytes(), 1000,\n-                            100);\n+                    reply = commAtConnection.sendCommand(TelitModemAtCommands.getICCID.getCommand().getBytes(), 1000, 100);\n                 } catch (IOException e) {\n                     closeSerialPort(commAtConnection);\n                     throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n                 }\n                 closeSerialPort(commAtConnection);\n+\n                 if (reply != null) {\n                     String integratedCirquitCardId = getResponseString(reply);\n                     if (integratedCirquitCardId != null && !integratedCirquitCardId.isEmpty()) {\n                         if (integratedCirquitCardId.startsWith(\"#CCID:\")) {\n                             integratedCirquitCardId = integratedCirquitCardId.substring(\"#CCID:\".length()).trim();\n                         }\n+\n                         this.iccid = integratedCirquitCardId;\n                     }\n                 }\n@@ -603,10 +606,10 @@ public abstract class TelitModem {\n             } else if (portType == SerialPortType.DATAPORT) {\n                 port = getDataPort();\n             } else if (portType == SerialPortType.GPSPORT) {\n-                port = getGpsPort();\n+                       port = getGpsPort();\n             } else {\n-                throw new KuraException(KuraErrorCode.INTERNAL_ERROR, \"Invalid Port Type\");\n-            }\n+                       throw new KuraException(KuraErrorCode.INTERNAL_ERROR, \"Invalid Port Type\");\n+                   }\n             if (port != null) {\n                 StringBuilder sb = new StringBuilder();\n                 sb.append(\"comm:\").append(port).append(\";baudrate=115200;databits=8;stopbits=1;parity=0\");\n@@ -623,14 +626,10 @@ public abstract class TelitModem {\n     }\n \n     public abstract boolean isTelitSimCardReady() throws KuraException;\n-\n     protected CommConnection openSerialPort(String port) throws KuraException {\n-\n         CommConnection connection = null;\n         if (this.connectionFactory != null) {\n-            String uri = new CommURI.Builder(port).withBaudRate(115200).withDataBits(8).withStopBits(1).withParity(0)\n-                    .withTimeout(2000).build().toString();\n-\n+            String uri = new CommURI.Builder(port).withBaudRate(115200).withDataBits(8).withStopBits(1).withParity(0).withTimeout(2000).build().toString();\n             try {\n                 connection = (CommConnection) this.connectionFactory.createConnection(uri, 1, false);\n             } catch (Exception e) {\n@@ -652,12 +651,12 @@ public abstract class TelitModem {\n     }\n \n     protected boolean isAtReachable(CommConnection connection) {\n-\n         boolean status = false;\n         int attemptNo = 0;\n         do {\n             try {\n-                logger.trace(\"isAtReachable() :: sending AT commnd to modem on port {}\", connection.getURI().getPort());\n+                logger.trace(\"isAtReachable() :: sending AT commnd to modem on port {}\",\n+                             connection.getURI().getPort());\n                 byte[] reply = connection.sendCommand(TelitModemAtCommands.at.getCommand().getBytes(), 1000, 100);\n                 if (reply.length > 0) {\n                     String sReply = new String(reply);\n@@ -671,12 +670,12 @@ public abstract class TelitModem {\n                 attemptNo++;\n             }\n         } while (!status && attemptNo < 3);\n-\n         logger.trace(\"isAtReachable() :: port={}, status={}\", connection.getURI().getPort(), status);\n         return status;\n     }\n \n     // Parse the AT command response for the relevant info\n+\n     protected String getResponseString(String resp) {\n         if (resp == null) {\n             return \"\";\n@@ -690,7 +689,6 @@ public abstract class TelitModem {\n         if (resp == null) {\n             return \"\";\n         }\n-\n         return getResponseString(new String(resp));\n     }\n \n@@ -699,16 +697,15 @@ public abstract class TelitModem {\n             Thread.sleep(millis);\n         } catch (InterruptedException e) {\n             // ignore\n+\n         }\n     }\n \n     private boolean isGpsPowered(CommConnection commAtConnection) throws KuraException {\n-\n         boolean gpsPowered = false;\n         if (this.gpsSupported == null || !this.gpsSupported) {\n             return false;\n         }\n-\n         logger.debug(\"sendCommand isGpsPowered :: {}\", TelitModemAtCommands.isGpsPowered.getCommand());\n         byte[] reply = null;\n         try {\n@@ -718,17 +715,16 @@ public abstract class TelitModem {\n         }\n         if (reply != null) {\n             String sReply = getResponseString(reply);\n-            if (sReply != null && !sReply.isEmpty() && sReply.startsWith(\"$GPSP:\")) {\n+            if (sReply != null && !sReply.isEmpty()\n+                    && sReply.startsWith(\"$GPSP:\")) {\n                 sReply = sReply.substring(\"$GPSP:\".length()).trim();\n                 gpsPowered = \"1\".equals(sReply) ? true : false;\n             }\n         }\n-\n         return gpsPowered;\n     }\n \n     private void turnOff() throws KuraException {\n-\n         UsbModemDriver modemDriver = getModemDriver();\n         if (modemDriver != null) {\n             modemDriver.disable();\n@@ -738,7 +734,6 @@ public abstract class TelitModem {\n     }\n \n     private void turnOn() throws KuraException {\n-\n         UsbModemDriver modemDriver = getModemDriver();\n         if (modemDriver != null) {\n             modemDriver.enable();\n@@ -748,10 +743,10 @@ public abstract class TelitModem {\n     }\n \n     private UsbModemDriver getModemDriver() {\n-\n         if (this.device == null) {\n             return null;\n         }\n+\n         UsbModemDriver modemDriver = null;\n         if (this.device instanceof UsbModemDevice) {\n             SupportedUsbModemInfo usbModemInfo = SupportedUsbModemsInfo.getModem((UsbModemDevice) this.device);\n@@ -766,7 +761,6 @@ public abstract class TelitModem {\n     }\n \n     private String formGpsEnableNMEACommand(String atPort, String gpsPort) throws KuraException {\n-\n         StringBuilder sbCommand = new StringBuilder(TelitModemAtCommands.gpsEnableNMEA.getCommand());\n         if (atPort.equals(gpsPort)) {\n             sbCommand.append(\"3\");\n@@ -776,4 +770,4 @@ public abstract class TelitModem {\n         sbCommand.append(\",1,1,1,1,1,1\\r\\n\");\n         return sbCommand.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 114
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "420",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/11/TelitModem.java\nindex 0fceff3ccd0..dda544134b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/11/TelitModem.java\n@@ -417,8 +417,7 @@ public abstract class TelitModem {\n                             } else {\n                                 if (isAtReachable(commAtConnection)) {\n                                     logger.warn(\n-                                            \"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\");\n-                                    logger.info(\"disableGps() :: Will assume that GPS is disabled\");\n+                                            \"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\"); logger.info(\"disableGps() :: Will assume that GPS is disabled\");\n                                     this.gpsEnabled = false;\n                                     break;\n                                 } else {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "419",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/11/TelitModem.java\nindex 0fceff3ccd0..1b41f0668dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/11/TelitModem.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/11/TelitModem.java\n@@ -416,9 +416,8 @@ public abstract class TelitModem {\n                                 }\n                             } else {\n                                 if (isAtReachable(commAtConnection)) {\n-                                    logger.warn(\n-                                            \"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\");\n-                                    logger.info(\"disableGps() :: Will assume that GPS is disabled\");\n+                                    logger.warn(\"disableGps() :: Modem didn't reply with 'NO CARRIER' to the +++ escape sequence but port is AT reachable\");\n+                            logger.info(\"disableGps() :: Will assume that GPS is disabled\");\n                                     this.gpsEnabled = false;\n                                     break;\n                                 } else {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
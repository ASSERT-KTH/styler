{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "297",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class IdentitySelectorEvaluation\n{\n\t/**\n\t * The XPath expressionfor this xs:selector.\n\t */\n\tprivate final RestrictedXPath xpath;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/297/IdentitySelectorEvaluation.java\nindex 904469bdaa5..3bec57e43cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/297/IdentitySelectorEvaluation.java\n@@ -24,10 +24,10 @@ import org.genxdm.xs.constraints.RestrictedXPath;\n  */\n public class IdentitySelectorEvaluation\n {\n-\t/**\n+/**\n \t * The XPath expressionfor this xs:selector.\n \t */\n-\tprivate final RestrictedXPath xpath;\n+ private final RestrictedXPath xpath;\n \t/**\n \t * An index into the current XPath step. This value may advance and retreat.\n \t */\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/297/IdentitySelectorEvaluation.java\nindex 904469bdaa5..c4e7b670051 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/297/IdentitySelectorEvaluation.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright (c) 2009-2010 TIBCO Software Inc.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.processor.w3c.xs.validation.impl;\n \n import javax.xml.namespace.QName;\n@@ -22,146 +23,119 @@ import org.genxdm.xs.constraints.RestrictedXPath;\n /**\n  * The status of a streaming XPath evaluation for an xs:selector.\n  */\n-public class IdentitySelectorEvaluation\n-{\n-\t/**\n-\t * The XPath expressionfor this xs:selector.\n-\t */\n-\tprivate final RestrictedXPath xpath;\n-\t/**\n-\t * An index into the current XPath step. This value may advance and retreat.\n-\t */\n-\tprivate IdentityXPathIndex currentStep;\n-\n-\tpublic boolean matching = true;\n-\n-\t/**\n-\t * Used to indicate that the XPath selection is active.\n-\t */\n-\tpublic boolean selecting = false;\n-\n-\t/**\n-\t * This is synonymous with the status not being the first in the list. All status entries after the first were\n-\t * dynamically added as a result of evaluating the XPath expression in a streaming fashion with a relocation (//).\n-\t */\n-\tpublic final boolean removable;\n-\n-\tpublic IdentitySelectorEvaluation(final RestrictedXPath xpath, final boolean removable)\n-\t{\n-\t\tthis.xpath = xpath;\n-\t\tthis.removable = removable;\n-\t\tif (removable)\n-\t\t{\n-\t\t\tthis.currentStep = new IdentityXPathIndex(0, xpath.getUBoundStep());\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tthis.currentStep = new IdentityXPathIndex(-1, xpath.getUBoundStep());\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Essentially advances to the next step.\n-\t * \n-\t * When context node steps are present, steps forwards over them.\n-\t */\n-\tpublic void advance()\n-\t{\n-\t\tcurrentStep.advance();\n-\n-\t\tif (!currentStep.isBelow())\n-\t\t{\n-\t\t\t// Consume context node (.) steps\n-\t\t\twhile (currentStep.canAdvance())\n-\t\t\t{\n-\t\t\t\tif (onContextNode())\n-\t\t\t\t{\n-\t\t\t\t\tcurrentStep.advance();\n-\t\t\t\t}\n-\t\t\t\telse\n-\t\t\t\t{\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Essentially retreats to the previous step.\n-\t * \n-\t * When context node steps are present, steps backwards over them.\n-\t */\n-\tpublic void retreat()\n-\t{\n-\t\tcurrentStep.decrement();\n-\n-\t\tif (currentStep.inBounds())\n-\t\t{\n-\t\t\twhile (currentStep.canDecrement())\n-\t\t\t{\n-\t\t\t\tif (onContextNode())\n-\t\t\t\t{\n-\t\t\t\t\tcurrentStep.decrement();\n-\t\t\t\t}\n-\t\t\t\telse\n-\t\t\t\t{\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tpublic boolean inBounds()\n-\t{\n-\t\treturn currentStep.inBounds();\n-\t}\n-\n-\tpublic boolean isSelecting()\n-\t{\n-\t\treturn selecting;\n-\t}\n-\n-\tpublic void setSelecting(final boolean selecting)\n-\t{\n-\t\tthis.selecting = selecting;\n-\t}\n-\n-\tpublic boolean onContextNode()\n-\t{\n-\t\treturn xpath.isContextNode(currentStep.value());\n-\t}\n-\n-\tpublic boolean onLastStep()\n-\t{\n-\t\treturn currentStep.isUpperBound();\n-\t}\n-\n-\tpublic boolean matchesElement(final QName elementName)\n-\t{\n-\t\tif (xpath.isAttribute())\n-\t\t{\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\tif (onContextNode())\n-\t\t{\n-\t\t\treturn true;\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tfinal int idxStep = currentStep.value();\n-\n-\t\t\tfinal String stepLN = xpath.getStepLocalName(idxStep);\n-\t\t\tfinal String stepNS = xpath.getStepNamespace(idxStep);\n-\n-\t\t\tif (xpath.isWildcardLocalName(idxStep) && (xpath.isWildcardNamespace(idxStep) || stepNS.equals(elementName.getNamespaceURI())))\n-\t\t\t{\n-\t\t\t\treturn true;\n-\t\t\t}\n-\t\t\telse\n-\t\t\t{\n-\t\t\t\treturn elementName.getLocalPart().equals(stepLN) && elementName.getNamespaceURI().equals(stepNS);\n-\t\t\t}\n-\t\t}\n-\t}\n+public class IdentitySelectorEvaluation {\n+    /**\n+     * The XPath expressionfor this xs:selector.\n+     */\n+    private final RestrictedXPath xpath;\n+\n+    /**\n+     * An index into the current XPath step. This value may advance and retreat.\n+     */\n+    private IdentityXPathIndex currentStep;\n+\n+    public boolean matching = true;\n+\n+    /**\n+     * Used to indicate that the XPath selection is active.\n+     */\n+    public boolean selecting = false;\n+\n+    /**\n+     * This is synonymous with the status not being the first in the list. All status entries after the first were\n+     * dynamically added as a result of evaluating the XPath expression in a streaming fashion with a relocation (//).\n+     */\n+    public final boolean removable;\n+\n+    public IdentitySelectorEvaluation(final RestrictedXPath xpath, final boolean removable) {\n+        this.xpath = xpath;\n+        this.removable = removable;\n+        if (removable) {\n+            this.currentStep = new IdentityXPathIndex(0, xpath.getUBoundStep());\n+        } else {\n+            this.currentStep = new IdentityXPathIndex(-1, xpath.getUBoundStep());\n+        }\n+    }\n+\n+    /**\n+     * Essentially advances to the next step.\n+     *\n+     * When context node steps are present, steps forwards over them.\n+     */\n+    public void advance() {\n+        currentStep.advance();\n+\n+        if (!currentStep.isBelow()) {\n+            // Consume context node (.) steps\n+            while (currentStep.canAdvance()) {\n+                if (onContextNode()) {\n+                    currentStep.advance();\n+                } else {\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Essentially retreats to the previous step.\n+     *\n+     * When context node steps are present, steps backwards over them.\n+     */\n+    public void retreat() {\n+        currentStep.decrement();\n+\n+        if (currentStep.inBounds()) {\n+            while (currentStep.canDecrement()) {\n+                if (onContextNode()) {\n+                    currentStep.decrement();\n+                } else {\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    public boolean inBounds() {\n+        return currentStep.inBounds();\n+    }\n+\n+    public boolean isSelecting() {\n+        return selecting;\n+    }\n+\n+    public void setSelecting(final boolean selecting) {\n+        this.selecting = selecting;\n+    }\n+\n+    public boolean onContextNode() {\n+        return xpath.isContextNode(currentStep.value());\n+    }\n+\n+    public boolean onLastStep() {\n+        return currentStep.isUpperBound();\n+    }\n+\n+    public boolean matchesElement(final QName elementName) {\n+        if (xpath.isAttribute()) {\n+            return false;\n+        }\n+\n+        if (onContextNode()) {\n+            return true;\n+        } else {\n+            final int idxStep = currentStep.value();\n+\n+            final String stepLN = xpath.getStepLocalName(idxStep);\n+            final String stepNS = xpath.getStepNamespace(idxStep);\n+\n+            if (xpath.isWildcardLocalName(idxStep) && (xpath.isWildcardNamespace(idxStep) ||\n+                stepNS.equals(elementName.getNamespaceURI()))) {\n+                return true;\n+            } else {\n+                return elementName.getLocalPart().equals(stepLN) &&\n+                    elementName.getNamespaceURI().equals(stepNS);\n+            }\n+        }\n+    }\n }\n",
            "diff_size": 147
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/297/IdentitySelectorEvaluation.java\nindex 904469bdaa5..47f279fd543 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/297/IdentitySelectorEvaluation.java\n@@ -24,7 +24,7 @@ import org.genxdm.xs.constraints.RestrictedXPath;\n  */\n public class IdentitySelectorEvaluation\n {\n-\t/**\n+    /**\n \t * The XPath expressionfor this xs:selector.\n \t */\n \tprivate final RestrictedXPath xpath;\n@@ -48,17 +48,17 @@ public class IdentitySelectorEvaluation\n \n \tpublic IdentitySelectorEvaluation(final RestrictedXPath xpath, final boolean removable)\n \t{\n-\t\tthis.xpath = xpath;\n+    this.xpath = xpath;\n \t\tthis.removable = removable;\n \t\tif (removable)\n \t\t{\n-\t\t\tthis.currentStep = new IdentityXPathIndex(0, xpath.getUBoundStep());\n-\t\t}\n+    this.currentStep = new IdentityXPathIndex(0, xpath.getUBoundStep());\n+    }\n \t\telse\n \t\t{\n-\t\t\tthis.currentStep = new IdentityXPathIndex(-1, xpath.getUBoundStep());\n-\t\t}\n-\t}\n+    this.currentStep = new IdentityXPathIndex(-1, xpath.getUBoundStep());\n+    }\n+    }\n \n \t/**\n \t * Essentially advances to the next step.\n@@ -67,24 +67,24 @@ public class IdentitySelectorEvaluation\n \t */\n \tpublic void advance()\n \t{\n-\t\tcurrentStep.advance();\n+    currentStep.advance();\n \n \t\tif (!currentStep.isBelow())\n \t\t{\n-\t\t\t// Consume context node (.) steps\n+    // Consume context node (.) steps\n \t\t\twhile (currentStep.canAdvance())\n \t\t\t{\n-\t\t\t\tif (onContextNode())\n+    if (onContextNode())\n \t\t\t\t{\n-\t\t\t\t\tcurrentStep.advance();\n-\t\t\t\t}\n+    currentStep.advance();\n+    }\n \t\t\t\telse\n \t\t\t\t{\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+    break;\n+    }\n+    }\n+    }\n+    }\n \n \t/**\n \t * Essentially retreats to the previous step.\n@@ -93,75 +93,75 @@ public class IdentitySelectorEvaluation\n \t */\n \tpublic void retreat()\n \t{\n-\t\tcurrentStep.decrement();\n+    currentStep.decrement();\n \n \t\tif (currentStep.inBounds())\n \t\t{\n-\t\t\twhile (currentStep.canDecrement())\n+    while (currentStep.canDecrement())\n \t\t\t{\n-\t\t\t\tif (onContextNode())\n+    if (onContextNode())\n \t\t\t\t{\n-\t\t\t\t\tcurrentStep.decrement();\n-\t\t\t\t}\n+    currentStep.decrement();\n+    }\n \t\t\t\telse\n \t\t\t\t{\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+    break;\n+    }\n+    }\n+    }\n+    }\n \n \tpublic boolean inBounds()\n \t{\n-\t\treturn currentStep.inBounds();\n-\t}\n+    return currentStep.inBounds();\n+    }\n \n \tpublic boolean isSelecting()\n \t{\n-\t\treturn selecting;\n-\t}\n+    return selecting;\n+    }\n \n \tpublic void setSelecting(final boolean selecting)\n \t{\n-\t\tthis.selecting = selecting;\n-\t}\n+    this.selecting = selecting;\n+    }\n \n \tpublic boolean onContextNode()\n \t{\n-\t\treturn xpath.isContextNode(currentStep.value());\n-\t}\n+    return xpath.isContextNode(currentStep.value());\n+    }\n \n \tpublic boolean onLastStep()\n \t{\n-\t\treturn currentStep.isUpperBound();\n-\t}\n+    return currentStep.isUpperBound();\n+    }\n \n \tpublic boolean matchesElement(final QName elementName)\n \t{\n-\t\tif (xpath.isAttribute())\n+    if (xpath.isAttribute())\n \t\t{\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \n \t\tif (onContextNode())\n \t\t{\n-\t\t\treturn true;\n-\t\t}\n+    return true;\n+    }\n \t\telse\n \t\t{\n-\t\t\tfinal int idxStep = currentStep.value();\n+    final int idxStep = currentStep.value();\n \n \t\t\tfinal String stepLN = xpath.getStepLocalName(idxStep);\n \t\t\tfinal String stepNS = xpath.getStepNamespace(idxStep);\n \n \t\t\tif (xpath.isWildcardLocalName(idxStep) && (xpath.isWildcardNamespace(idxStep) || stepNS.equals(elementName.getNamespaceURI())))\n \t\t\t{\n-\t\t\t\treturn true;\n-\t\t\t}\n+    return true;\n+    }\n \t\t\telse\n \t\t\t{\n-\t\t\t\treturn elementName.getLocalPart().equals(stepLN) && elementName.getNamespaceURI().equals(stepNS);\n-\t\t\t}\n-\t\t}\n-\t}\n-}\n+    return elementName.getLocalPart().equals(stepLN) && elementName.getNamespaceURI().equals(stepNS);\n+    }\n+    }\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/297/IdentitySelectorEvaluation.java\nindex 904469bdaa5..d92f8f7b01a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/297/IdentitySelectorEvaluation.java\n@@ -16,152 +16,148 @@\n package org.genxdm.processor.w3c.xs.validation.impl;\n \n import javax.xml.namespace.QName;\n-\n import org.genxdm.xs.constraints.RestrictedXPath;\n \n /**\n  * The status of a streaming XPath evaluation for an xs:selector.\n  */\n+\n public class IdentitySelectorEvaluation\n {\n-\t/**\n-\t * The XPath expressionfor this xs:selector.\n-\t */\n-\tprivate final RestrictedXPath xpath;\n-\t/**\n-\t * An index into the current XPath step. This value may advance and retreat.\n-\t */\n-\tprivate IdentityXPathIndex currentStep;\n-\n-\tpublic boolean matching = true;\n-\n-\t/**\n-\t * Used to indicate that the XPath selection is active.\n-\t */\n-\tpublic boolean selecting = false;\n-\n-\t/**\n-\t * This is synonymous with the status not being the first in the list. All status entries after the first were\n-\t * dynamically added as a result of evaluating the XPath expression in a streaming fashion with a relocation (//).\n-\t */\n-\tpublic final boolean removable;\n-\n-\tpublic IdentitySelectorEvaluation(final RestrictedXPath xpath, final boolean removable)\n-\t{\n-\t\tthis.xpath = xpath;\n-\t\tthis.removable = removable;\n-\t\tif (removable)\n-\t\t{\n-\t\t\tthis.currentStep = new IdentityXPathIndex(0, xpath.getUBoundStep());\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tthis.currentStep = new IdentityXPathIndex(-1, xpath.getUBoundStep());\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Essentially advances to the next step.\n-\t * \n-\t * When context node steps are present, steps forwards over them.\n-\t */\n-\tpublic void advance()\n-\t{\n-\t\tcurrentStep.advance();\n-\n-\t\tif (!currentStep.isBelow())\n-\t\t{\n-\t\t\t// Consume context node (.) steps\n-\t\t\twhile (currentStep.canAdvance())\n-\t\t\t{\n-\t\t\t\tif (onContextNode())\n-\t\t\t\t{\n-\t\t\t\t\tcurrentStep.advance();\n-\t\t\t\t}\n-\t\t\t\telse\n-\t\t\t\t{\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Essentially retreats to the previous step.\n-\t * \n-\t * When context node steps are present, steps backwards over them.\n-\t */\n-\tpublic void retreat()\n-\t{\n-\t\tcurrentStep.decrement();\n-\n-\t\tif (currentStep.inBounds())\n-\t\t{\n-\t\t\twhile (currentStep.canDecrement())\n-\t\t\t{\n-\t\t\t\tif (onContextNode())\n-\t\t\t\t{\n-\t\t\t\t\tcurrentStep.decrement();\n-\t\t\t\t}\n-\t\t\t\telse\n-\t\t\t\t{\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tpublic boolean inBounds()\n-\t{\n-\t\treturn currentStep.inBounds();\n-\t}\n-\n-\tpublic boolean isSelecting()\n-\t{\n-\t\treturn selecting;\n-\t}\n-\n-\tpublic void setSelecting(final boolean selecting)\n-\t{\n-\t\tthis.selecting = selecting;\n-\t}\n-\n-\tpublic boolean onContextNode()\n-\t{\n-\t\treturn xpath.isContextNode(currentStep.value());\n-\t}\n-\n-\tpublic boolean onLastStep()\n-\t{\n-\t\treturn currentStep.isUpperBound();\n-\t}\n-\n-\tpublic boolean matchesElement(final QName elementName)\n-\t{\n-\t\tif (xpath.isAttribute())\n-\t\t{\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\tif (onContextNode())\n-\t\t{\n-\t\t\treturn true;\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tfinal int idxStep = currentStep.value();\n-\n-\t\t\tfinal String stepLN = xpath.getStepLocalName(idxStep);\n-\t\t\tfinal String stepNS = xpath.getStepNamespace(idxStep);\n-\n-\t\t\tif (xpath.isWildcardLocalName(idxStep) && (xpath.isWildcardNamespace(idxStep) || stepNS.equals(elementName.getNamespaceURI())))\n-\t\t\t{\n-\t\t\t\treturn true;\n-\t\t\t}\n-\t\t\telse\n-\t\t\t{\n-\t\t\t\treturn elementName.getLocalPart().equals(stepLN) && elementName.getNamespaceURI().equals(stepNS);\n-\t\t\t}\n-\t\t}\n-\t}\n-}\n+    /**\n+     * The XPath expressionfor this xs:selector.\n+     */\n+    private final RestrictedXPath xpath;\n+    /**\n+     * An index into the current XPath step. This value may advance and retreat.\n+     */\n+    private IdentityXPathIndex currentStep;\n+    public boolean matching = true;\n+\n+    /**\n+     * Used to indicate that the XPath selection is active.\n+     */\n+    public boolean selecting = false;\n+\n+    /**\n+     * This is synonymous with the status not being the first in the list. All status entries after the first were\n+     * dynamically added as a result of evaluating the XPath expression in a streaming fashion with a relocation (//).\n+     */\n+    public final boolean removable;\n+\n+    public IdentitySelectorEvaluation(final RestrictedXPath xpath, final boolean removable)\n+    {\n+        this.xpath = xpath;\n+        this.removable = removable;\n+        if (removable)\n+        {\n+            this.currentStep = new IdentityXPathIndex(0, xpath.getUBoundStep());\n+        }\n+        else\n+        {\n+            this.currentStep = new IdentityXPathIndex(-1, xpath.getUBoundStep());\n+        }\n+    }\n+\n+    /**\n+     * Essentially advances to the next step.\n+     * \n+     * When context node steps are present, steps forwards over them.\n+     */\n+\n+    public void advance()\n+    {\n+        currentStep.advance();\n+        if (!currentStep.isBelow())\n+        {\n+            // Consume context node (.) steps\n+            while (currentStep.canAdvance())\n+            {\n+                if (onContextNode())\n+                {\n+                    currentStep.advance();\n+                }\n+                else\n+                {\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Essentially retreats to the previous step.\n+     * \n+     * When context node steps are present, steps backwards over them.\n+     */\n+\n+    public void retreat()\n+    {\n+        currentStep.decrement();\n+        if (currentStep.inBounds())\n+        {\n+            while (currentStep.canDecrement())\n+            {\n+                if (onContextNode())\n+                {\n+                    currentStep.decrement();\n+                }\n+                else\n+                {\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    public boolean inBounds()\n+    {\n+        return currentStep.inBounds();\n+    }\n+\n+    public boolean isSelecting()\n+    {\n+        return selecting;\n+    }\n+\n+    public void setSelecting(final boolean selecting)\n+    {\n+        this.selecting = selecting;\n+    }\n+\n+    public boolean onContextNode()\n+    {\n+        return xpath.isContextNode(currentStep.value());\n+    }\n+\n+    public boolean onLastStep()\n+    {\n+        return currentStep.isUpperBound();\n+    }\n+\n+    public boolean matchesElement(final QName elementName)\n+    {\n+        if (xpath.isAttribute())\n+        {\n+            return false;\n+        }\n+        if (onContextNode())\n+        {\n+            return true;\n+        }\n+        else\n+        {\n+            final int idxStep = currentStep.value();\n+            final String stepLN = xpath.getStepLocalName(idxStep);\n+            final String stepNS = xpath.getStepNamespace(idxStep);\n+            if (xpath.isWildcardLocalName(idxStep) && (xpath.isWildcardNamespace(idxStep) || stepNS.equals(elementName.getNamespaceURI())))\n+            {\n+                return true;\n+            }\n+            else\n+            {\n+                return elementName.getLocalPart().equals(stepLN) && elementName.getNamespaceURI().equals(stepNS);\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 143
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/297/IdentitySelectorEvaluation.java\nindex 904469bdaa5..3bec57e43cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/297/IdentitySelectorEvaluation.java\n@@ -24,10 +24,10 @@ import org.genxdm.xs.constraints.RestrictedXPath;\n  */\n public class IdentitySelectorEvaluation\n {\n-\t/**\n+/**\n \t * The XPath expressionfor this xs:selector.\n \t */\n-\tprivate final RestrictedXPath xpath;\n+ private final RestrictedXPath xpath;\n \t/**\n \t * An index into the current XPath step. This value may advance and retreat.\n \t */\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/297/IdentitySelectorEvaluation.java\nindex 904469bdaa5..eee41d1ebad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/297/IdentitySelectorEvaluation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/297/IdentitySelectorEvaluation.java\n@@ -24,10 +24,10 @@ import org.genxdm.xs.constraints.RestrictedXPath;\n  */\n public class IdentitySelectorEvaluation\n {\n-\t/**\n+    /**\n \t * The XPath expressionfor this xs:selector.\n \t */\n-\tprivate final RestrictedXPath xpath;\n+ private final RestrictedXPath xpath;\n \t/**\n \t * An index into the current XPath step. This value may advance and retreat.\n \t */\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
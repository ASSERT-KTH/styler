{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2492",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2492/RFC1123.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2492/RFC1123.java\nindex 0f6f15d4805..9eb662d7fab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2492/RFC1123.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2492/RFC1123.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr.util;\n \n import java.text.ParseException;\n@@ -28,63 +29,63 @@ import java.util.TimeZone;\n \n public final class RFC1123\n {\n-    private static final ThreadLocal<RFC1123> INSTANCES = new ThreadLocal<>();\n+  private static final ThreadLocal<RFC1123> INSTANCES = new ThreadLocal<>();\n \n-    public static final TimeZone GMT = TimeZone.getTimeZone( \"GMT\" );\n+  public static final TimeZone GMT = TimeZone.getTimeZone(\"GMT\");\n \n-    private static final Date Y2K_START_DATE;\n+  private static final Date Y2K_START_DATE;\n \n-    static\n-    {\n-        Calendar calendar = Calendar.getInstance();\n-        calendar.setTimeZone( GMT );\n-        calendar.set( 2000, Calendar.JANUARY, 1, 0, 0, 0 );\n-        calendar.set( Calendar.MILLISECOND, 0 );\n-        Y2K_START_DATE = calendar.getTime();\n-    }\n+  static\n+  {\n+    Calendar calendar = Calendar.getInstance();\n+    calendar.setTimeZone(GMT);\n+    calendar.set(2000, Calendar.JANUARY, 1, 0, 0, 0);\n+    calendar.set(Calendar.MILLISECOND, 0);\n+    Y2K_START_DATE = calendar.getTime();\n+  }\n \n-    private final SimpleDateFormat format;\n+  private final SimpleDateFormat format;\n \n-    private RFC1123()\n-    {\n-        format = new SimpleDateFormat( \"EEE, dd MMM yyyy HH:mm:ss Z\", Locale.US );\n-        format.setTimeZone( GMT );\n-    }\n+  private RFC1123()\n+  {\n+    format = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss Z\", Locale.US);\n+    format.setTimeZone(GMT);\n+  }\n \n-    public Date parse( String input ) throws ParseException\n-    {\n-        format.set2DigitYearStart( Y2K_START_DATE );\n-        return format.parse( input );\n-    }\n+  public Date parse(String input) throws ParseException\n+  {\n+    format.set2DigitYearStart(Y2K_START_DATE);\n+    return format.parse(input);\n+  }\n \n-    public String format( Date date )\n+  public String format(Date date)\n+  {\n+    if (null == date)\n     {\n-        if ( null == date )\n-        {\n-            throw new IllegalArgumentException( \"Date is null\" );\n-        }\n-\n-        return format.format( date );\n+      throw new IllegalArgumentException(\"Date is null\");\n     }\n \n-    static RFC1123 instance()\n-    {\n-        RFC1123 instance = INSTANCES.get();\n-        if ( null == instance )\n-        {\n-            instance = new RFC1123();\n-            INSTANCES.set( instance );\n-        }\n-        return instance;\n-    }\n+    return format.format(date);\n+  }\n \n-    public static Date parseTimestamp( String input ) throws ParseException\n+  static RFC1123 instance()\n+  {\n+    RFC1123 instance = INSTANCES.get();\n+    if (null == instance)\n     {\n-        return instance().parse( input );\n+      instance = new RFC1123();\n+      INSTANCES.set(instance);\n     }\n+    return instance;\n+  }\n \n-    public static String formatDate( Date date )\n-    {\n-        return instance().format( date );\n-    }\n+  public static Date parseTimestamp(String input) throws ParseException\n+  {\n+    return instance().parse(input);\n+  }\n+\n+  public static String formatDate(Date date)\n+  {\n+    return instance().format(date);\n+  }\n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2492/RFC1123.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2492/RFC1123.java\nindex 0f6f15d4805..99d247a34fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2492/RFC1123.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2492/RFC1123.java\n@@ -75,7 +75,8 @@ public final class RFC1123\n             instance = new RFC1123();\n             INSTANCES.set( instance );\n         }\n-        return instance;\n+\n+return instance;\n     }\n \n     public static Date parseTimestamp( String input ) throws ParseException\n@@ -87,4 +88,4 @@ public final class RFC1123\n     {\n         return instance().format( date );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
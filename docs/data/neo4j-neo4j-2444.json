{
    "project_name": "neo4j-neo4j",
    "error_id": "2444",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "157",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2444/FabricStatementLifecycles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2444/FabricStatementLifecycles.java\nindex c3265bfa56c..dbfb00cdca9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2444/FabricStatementLifecycles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2444/FabricStatementLifecycles.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.executor;\n \n import java.util.Optional;\n@@ -45,44 +46,43 @@ public class FabricStatementLifecycles\n     private final QueryExecutionMonitor dbmsMonitor;\n     private final ExecutingQueryFactory executingQueryFactory;\n \n-    public FabricStatementLifecycles( DatabaseManager<DatabaseContext> databaseManager, Monitors dbmsMonitors, Config config, SystemNanoClock systemNanoClock )\n+    public FabricStatementLifecycles(DatabaseManager<DatabaseContext> databaseManager, Monitors dbmsMonitors, Config config, SystemNanoClock systemNanoClock)\n     {\n         this.databaseManager = databaseManager;\n-        this.dbmsMonitor = dbmsMonitors.newMonitor( QueryExecutionMonitor.class );\n+        this.dbmsMonitor = dbmsMonitors.newMonitor(QueryExecutionMonitor.class);\n         this.executingQueryFactory = new ExecutingQueryFactory(\n-                systemNanoClock,\n-                setupCpuClockAtomicReference( config ),\n-                config );\n+          systemNanoClock,\n+          setupCpuClockAtomicReference(config),\n+          config);\n     }\n \n-    private AtomicReference<CpuClock> setupCpuClockAtomicReference( Config config )\n+    private AtomicReference<CpuClock> setupCpuClockAtomicReference(Config config)\n     {\n-        AtomicReference<CpuClock> cpuClock = new AtomicReference<>( CpuClock.NOT_AVAILABLE );\n-        SettingChangeListener<Boolean> cpuClockUpdater = ( before, after ) ->\n+        AtomicReference<CpuClock> cpuClock = new AtomicReference<>(CpuClock.NOT_AVAILABLE);\n+        SettingChangeListener<Boolean> cpuClockUpdater = (before, after) ->\n         {\n-            if ( after )\n+            if (after)\n             {\n-                cpuClock.set( CpuClock.CPU_CLOCK );\n-            }\n-            else\n+                cpuClock.set(CpuClock.CPU_CLOCK);\n+            } else\n             {\n-                cpuClock.set( CpuClock.NOT_AVAILABLE );\n+                cpuClock.set(CpuClock.NOT_AVAILABLE);\n             }\n         };\n-        cpuClockUpdater.accept( null, config.get( GraphDatabaseSettings.track_query_cpu_time ) );\n-        config.addListener( GraphDatabaseSettings.track_query_cpu_time, cpuClockUpdater );\n+        cpuClockUpdater.accept(null, config.get(GraphDatabaseSettings.track_query_cpu_time));\n+        config.addListener(GraphDatabaseSettings.track_query_cpu_time, cpuClockUpdater);\n         return cpuClock;\n     }\n \n-    StatementLifecycle create( FabricTransactionInfo transactionInfo, String statement, MapValue params )\n+    StatementLifecycle create(FabricTransactionInfo transactionInfo, String statement, MapValue params)\n     {\n         var executingQuery = executingQueryFactory.createUnbound(\n-                statement, params,\n-                transactionInfo.getClientConnectionInfo(),\n-                transactionInfo.getLoginContext().subject().username(),\n-                transactionInfo.getTxMetadata() );\n+          statement, params,\n+          transactionInfo.getClientConnectionInfo(),\n+          transactionInfo.getLoginContext().subject().username(),\n+          transactionInfo.getTxMetadata());\n \n-        return new StatementLifecycle( executingQuery );\n+        return new StatementLifecycle(executingQuery);\n     }\n \n     public enum StatementPhase\n@@ -98,7 +98,7 @@ public class FabricStatementLifecycles\n         private StatementPhase phase;\n         private MonitoringMode monitoringMode;\n \n-        private StatementLifecycle( ExecutingQuery executingQuery )\n+        private StatementLifecycle(ExecutingQuery executingQuery)\n         {\n             this.executingQuery = executingQuery;\n             this.phase = StatementPhase.FABRIC;\n@@ -106,18 +106,17 @@ public class FabricStatementLifecycles\n \n         void startProcessing()\n         {\n-            getQueryExecutionMonitor().startProcessing( executingQuery );\n+            getQueryExecutionMonitor().startProcessing(executingQuery);\n         }\n \n-        void doneFabricProcessing( FabricPlan plan )\n+        void doneFabricProcessing(FabricPlan plan)\n         {\n-            executingQuery.onObfuscatorReady( CypherQueryObfuscator.apply( plan.obfuscationMetadata() ) );\n+            executingQuery.onObfuscatorReady(CypherQueryObfuscator.apply(plan.obfuscationMetadata()));\n \n-            if ( plan.inFabricContext() )\n+            if (plan.inFabricContext())\n             {\n                 monitoringMode = new ParentChildMonitoringMode();\n-            }\n-            else\n+            } else\n             {\n                 monitoringMode = new SingleQueryMonitoringMode();\n             }\n@@ -125,7 +124,7 @@ public class FabricStatementLifecycles\n \n         void startExecution()\n         {\n-            getQueryExecutionMonitor().startExecution( executingQuery );\n+            getQueryExecutionMonitor().startExecution(executingQuery);\n             monitoringMode.startExecution();\n         }\n \n@@ -138,35 +137,35 @@ public class FabricStatementLifecycles\n         {\n             phase = StatementPhase.ENDED;\n             QueryExecutionMonitor monitor = getQueryExecutionMonitor();\n-            monitor.beforeEnd( executingQuery, true );\n-            monitor.endSuccess( executingQuery );\n+            monitor.beforeEnd(executingQuery, true);\n+            monitor.endSuccess(executingQuery);\n         }\n \n-        void endFailure( Throwable failure )\n+        void endFailure(Throwable failure)\n         {\n             phase = StatementPhase.ENDED;\n             QueryExecutionMonitor monitor = getQueryExecutionMonitor();\n-            monitor.beforeEnd( executingQuery, false );\n-            monitor.endFailure( executingQuery, failure.getMessage() );\n+            monitor.beforeEnd(executingQuery, false);\n+            monitor.endFailure(executingQuery, failure.getMessage());\n         }\n \n         private QueryExecutionMonitor getQueryExecutionMonitor()\n         {\n-            return getDbMonitor().orElse( dbmsMonitor );\n+            return getDbMonitor().orElse(dbmsMonitor);\n         }\n \n         private Optional<QueryExecutionMonitor> getDbMonitor()\n         {\n-            if ( dbMonitor == null )\n+            if (dbMonitor == null)\n             {\n                 executingQuery.databaseId()\n-                              .flatMap( databaseManager::getDatabaseContext )\n-                              .map( dbm -> dbm.dependencies().resolveDependency( Monitors.class ) )\n-                              .map( monitors -> monitors.newMonitor( QueryExecutionMonitor.class ) )\n-                              .ifPresent( monitor -> dbMonitor = monitor );\n+                  .flatMap(databaseManager::getDatabaseContext)\n+                  .map(dbm -> dbm.dependencies().resolveDependency(Monitors.class))\n+                  .map(monitors -> monitors.newMonitor(QueryExecutionMonitor.class))\n+                  .ifPresent(monitor -> dbMonitor = monitor);\n             }\n \n-            return Optional.ofNullable( dbMonitor );\n+            return Optional.ofNullable(dbMonitor);\n         }\n \n         public boolean inFabricPhase()\n@@ -231,8 +230,8 @@ public class FabricStatementLifecycles\n             @Override\n             void startExecution()\n             {\n-                executingQuery.onCompilationCompleted( null, null, null );\n-                executingQuery.onExecutionStarted( OptionalMemoryTracker.NONE );\n+                executingQuery.onCompilationCompleted(null, null, null);\n+                executingQuery.onExecutionStarted(OptionalMemoryTracker.NONE);\n             }\n \n             @Override\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
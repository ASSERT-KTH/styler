{
    "project_name": "neo4j-neo4j",
    "error_id": "57",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/57/StateNodeRelationshipIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/57/StateNodeRelationshipIds.java\nindex 57e9f633ddf..c9bba67ce81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/57/StateNodeRelationshipIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/57/StateNodeRelationshipIds.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.state;\n \n import org.neo4j.memory.MemoryTracker;\n@@ -27,20 +28,20 @@ import static org.neo4j.storageengine.api.txstate.RelationshipModifications.noAd\n \n class StateNodeRelationshipIds implements RelationshipModifications.NodeRelationshipIds\n {\n-    private static final long SHALLOW_SIZE = shallowSizeOfInstance( StateNodeRelationshipIds.class );\n+    private static final long SHALLOW_SIZE = shallowSizeOfInstance(StateNodeRelationshipIds.class);\n     private final NodeStateImpl nodeState;\n     private final boolean hasCreations;\n     private final boolean hasDeletions;\n     private final RelationshipModifications.IdDataDecorator relationshipVisit;\n \n-    static StateNodeRelationshipIds createStateNodeRelationshipIds( NodeStateImpl nodeState, RelationshipModifications.IdDataDecorator relationshipVisit,\n-            MemoryTracker memoryTracker )\n+    static StateNodeRelationshipIds createStateNodeRelationshipIds(NodeStateImpl nodeState, RelationshipModifications.IdDataDecorator relationshipVisit,\n+                                                                   MemoryTracker memoryTracker)\n     {\n-        memoryTracker.allocateHeap( SHALLOW_SIZE );\n-        return new StateNodeRelationshipIds( nodeState, relationshipVisit );\n+        memoryTracker.allocateHeap(SHALLOW_SIZE);\n+        return new StateNodeRelationshipIds(nodeState, relationshipVisit);\n     }\n \n-    private StateNodeRelationshipIds( NodeStateImpl nodeState, RelationshipModifications.IdDataDecorator relationshipVisit )\n+    private StateNodeRelationshipIds(NodeStateImpl nodeState, RelationshipModifications.IdDataDecorator relationshipVisit)\n     {\n         this.nodeState = nodeState;\n         this.hasCreations = nodeState.hasAddedRelationships();\n@@ -61,9 +62,9 @@ class StateNodeRelationshipIds implements RelationshipModifications.NodeRelation\n     }\n \n     @Override\n-    public boolean hasCreations( int type )\n+    public boolean hasCreations(int type)\n     {\n-        return hasCreations && nodeState.hasAddedRelationships( type );\n+        return hasCreations && nodeState.hasAddedRelationships(type);\n     }\n \n     @Override\n@@ -75,26 +76,26 @@ class StateNodeRelationshipIds implements RelationshipModifications.NodeRelation\n     @Override\n     public RelationshipModifications.RelationshipBatch creations()\n     {\n-        return nodeState.additionsAsRelationshipBatch( relationshipVisit );\n+        return nodeState.additionsAsRelationshipBatch(relationshipVisit);\n     }\n \n     @Override\n     public RelationshipModifications.RelationshipBatch deletions()\n     {\n-        return nodeState.removalsAsRelationshipBatch( noAdditionalDataDecorator() );\n+        return nodeState.removalsAsRelationshipBatch(noAdditionalDataDecorator());\n     }\n \n     @Override\n     public void forEachCreationSplitInterruptible(\n-            RelationshipModifications.InterruptibleTypeIdsVisitor visitor )\n+      RelationshipModifications.InterruptibleTypeIdsVisitor visitor)\n     {\n-        nodeState.visitAddedIdsSplit( visitor, relationshipVisit );\n+        nodeState.visitAddedIdsSplit(visitor, relationshipVisit);\n     }\n \n     @Override\n     public void forEachDeletionSplitInterruptible(\n-            RelationshipModifications.InterruptibleTypeIdsVisitor visitor )\n+      RelationshipModifications.InterruptibleTypeIdsVisitor visitor)\n     {\n-        nodeState.visitRemovedIdsSplit( visitor );\n+        nodeState.visitRemovedIdsSplit(visitor);\n     }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
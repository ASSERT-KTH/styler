{
    "project_name": "twilio-twilio-java",
    "error_id": "590",
    "information": {
        "errors": [
            {
                "line": "213",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/590/CountryReader.java\nindex 23ab0ee33a0..c7e05c9b7a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/590/CountryReader.java\n@@ -210,7 +210,7 @@ public class CountryReader extends Reader<Country> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/590/CountryReader.java\nindex 23ab0ee33a0..5de100936e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/590/CountryReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.voice.v1.dialingpermissions;\n@@ -210,7 +210,7 @@ public class CountryReader extends Reader<Country> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/590/CountryReader.java\nindex 23ab0ee33a0..e96a8f23328 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/590/CountryReader.java\n@@ -24,6 +24,7 @@ import com.twilio.rest.Domains;\n  * change. Use them with caution. If you currently do not have developer preview\n  * access, please contact help@twilio.com.\n  */\n+\n public class CountryReader extends Reader<Country> {\n     private String isoCode;\n     private String continent;\n@@ -40,6 +41,7 @@ public class CountryReader extends Reader<Country> {\n      *                ISO country code\n      * @return this\n      */\n+\n     public CountryReader setIsoCode(final String isoCode) {\n         this.isoCode = isoCode;\n         return this;\n@@ -52,6 +54,8 @@ public class CountryReader extends Reader<Country> {\n      *                  the continent\n      * @return this\n      */\n+\n+\n     public CountryReader setContinent(final String continent) {\n         this.continent = continent;\n         return this;\n@@ -64,6 +68,8 @@ public class CountryReader extends Reader<Country> {\n      * @param countryCode Country code filter\n      * @return this\n      */\n+\n+\n     public CountryReader setCountryCode(final String countryCode) {\n         this.countryCode = countryCode;\n         return this;\n@@ -77,6 +83,8 @@ public class CountryReader extends Reader<Country> {\n      *                              dialing to low-risk numbers enabled\n      * @return this\n      */\n+\n+\n     public CountryReader setLowRiskNumbersEnabled(final Boolean lowRiskNumbersEnabled) {\n         this.lowRiskNumbersEnabled = lowRiskNumbersEnabled;\n         return this;\n@@ -91,6 +99,8 @@ public class CountryReader extends Reader<Country> {\n      *                                      special service numbers enabled\n      * @return this\n      */\n+\n+\n     public CountryReader setHighRiskSpecialNumbersEnabled(final Boolean highRiskSpecialNumbersEnabled) {\n         this.highRiskSpecialNumbersEnabled = highRiskSpecialNumbersEnabled;\n         return this;\n@@ -106,6 +116,8 @@ public class CountryReader extends Reader<Country> {\n      *                                        toll fraud numbers enabled\n      * @return this\n      */\n+\n+\n     public CountryReader setHighRiskTollfraudNumbersEnabled(final Boolean highRiskTollfraudNumbersEnabled) {\n         this.highRiskTollfraudNumbersEnabled = highRiskTollfraudNumbersEnabled;\n         return this;\n@@ -117,6 +129,7 @@ public class CountryReader extends Reader<Country> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Country ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Country> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -128,14 +141,11 @@ public class CountryReader extends Reader<Country> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Country ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Country> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.VOICE.toString(),\n-            \"/v1/DialingPermissions/Countries\"\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.VOICE.toString(), \"/v1/DialingPermissions/Countries\");\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -148,14 +158,12 @@ public class CountryReader extends Reader<Country> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Country ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Country> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Country> getPage(final String targetUrl,\n+                                 final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -166,13 +174,11 @@ public class CountryReader extends Reader<Country> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Country> nextPage(final Page<Country> page,\n                                   final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.VOICE.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.VOICE.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -183,13 +189,11 @@ public class CountryReader extends Reader<Country> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Country> previousPage(final Page<Country> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.VOICE.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.VOICE.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -200,9 +204,11 @@ public class CountryReader extends Reader<Country> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Country> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Country> pageForRequest(final TwilioRestClient client,\n+                                         final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Country read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -210,15 +216,11 @@ public class CountryReader extends Reader<Country> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"content\",\n-            response.getContent(),\n-            Country.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"content\", response.getContent(), Country.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -226,6 +228,8 @@ public class CountryReader extends Reader<Country> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (isoCode != null) {\n             request.addQueryParam(\"IsoCode\", isoCode);\n@@ -248,7 +252,8 @@ public class CountryReader extends Reader<Country> {\n         }\n \n         if (highRiskTollfraudNumbersEnabled != null) {\n-            request.addQueryParam(\"HighRiskTollfraudNumbersEnabled\", highRiskTollfraudNumbersEnabled.toString());\n+            request.addQueryParam(\"HighRiskTollfraudNumbersEnabled\",\n+                                  highRiskTollfraudNumbersEnabled.toString());\n         }\n \n         if (getPageSize() != null) {\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/590/CountryReader.java\nindex 23ab0ee33a0..c7e05c9b7a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/590/CountryReader.java\n@@ -210,7 +210,7 @@ public class CountryReader extends Reader<Country> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/590/CountryReader.java\nindex 23ab0ee33a0..9dc2eab5cee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/590/CountryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/590/CountryReader.java\n@@ -210,7 +210,8 @@ public class CountryReader extends Reader<Country> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
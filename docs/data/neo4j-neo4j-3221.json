{
    "project_name": "neo4j-neo4j",
    "error_id": "3221",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3221/StandaloneDatabaseComponents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3221/StandaloneDatabaseComponents.java\nindex 9ec85de5194..d712c94c790 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3221/StandaloneDatabaseComponents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3221/StandaloneDatabaseComponents.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.factory.module.edition.context;\n \n import java.util.function.Function;\n@@ -39,7 +40,7 @@ import org.neo4j.token.TokenHolders;\n \n public class StandaloneDatabaseComponents implements EditionDatabaseComponents\n {\n-    private final Function<DatabaseLayout,DatabaseLayoutWatcher> watcherServiceFactory;\n+    private final Function<DatabaseLayout, DatabaseLayoutWatcher> watcherServiceFactory;\n     private final IOLimiter ioLimiter;\n     private final ConstraintSemantics constraintSemantics;\n     private final CommitProcessFactory commitProcessFactory;\n@@ -52,16 +53,16 @@ public class StandaloneDatabaseComponents implements EditionDatabaseComponents\n     private final AccessCapabilityFactory accessCapabilityFactory;\n     private final DatabaseStartupController startupController;\n \n-    public StandaloneDatabaseComponents( StandaloneEditionModule editionModule, NamedDatabaseId namedDatabaseId )\n+    public StandaloneDatabaseComponents(StandaloneEditionModule editionModule, NamedDatabaseId namedDatabaseId)\n     {\n         this.commitProcessFactory = editionModule.getCommitProcessFactory();\n         this.constraintSemantics = editionModule.getConstraintSemantics();\n         this.ioLimiter = editionModule.getIoLimiter();\n         this.watcherServiceFactory = editionModule.getWatcherServiceFactory();\n-        this.idContext = editionModule.getIdContextFactory().createIdContext( namedDatabaseId );\n-        this.tokenHolders = editionModule.getTokenHoldersProvider().apply( namedDatabaseId );\n+        this.idContext = editionModule.getIdContextFactory().createIdContext(namedDatabaseId);\n+        this.tokenHolders = editionModule.getTokenHoldersProvider().apply(namedDatabaseId);\n         this.locks = editionModule.getLocksSupplier().get();\n-        this.statementLocksFactory = editionModule.getStatementLocksFactoryProvider().apply( locks );\n+        this.statementLocksFactory = editionModule.getStatementLocksFactoryProvider().apply(locks);\n         this.transactionMonitor = editionModule.createTransactionMonitor();\n         this.queryEngineProvider = editionModule.getQueryEngineProvider();\n         this.startupController = editionModule.getDatabaseStartupController();\n@@ -81,7 +82,7 @@ public class StandaloneDatabaseComponents implements EditionDatabaseComponents\n     }\n \n     @Override\n-    public Function<DatabaseLayout,DatabaseLayoutWatcher> getWatcherServiceFactory()\n+    public Function<DatabaseLayout, DatabaseLayoutWatcher> getWatcherServiceFactory()\n     {\n         return watcherServiceFactory;\n     }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "245",
    "information": {
        "errors": [
            {
                "line": "103",
                "severity": "warning",
                "message": "'catch' child has incorrect indentation level 7, expected level should be 8.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "        computeCredential = getComputeCredential();\n      } catch (GeneralSecurityException e) {\n       throw new IOException(e);\n      }\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/245/AuthCredentials.java\nindex e6c783565d8..3af5849bb0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/245/AuthCredentials.java\n@@ -100,8 +100,8 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n-      }\n+        throw new IOException(e);\n+    }\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/245/AuthCredentials.java\nindex e6c783565d8..ed0fafe1100 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/245/AuthCredentials.java\n@@ -49,7 +49,7 @@ public abstract class AuthCredentials implements Serializable {\n \n     @Override\n     protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+                                                            Set<String> scopes) {\n       return new AppIdentityCredential(scopes);\n     }\n   }\n@@ -100,13 +100,13 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n+        throw new IOException(e);\n       }\n     }\n \n     @Override\n     protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+                                                            Set<String> scopes) {\n       return computeCredential;\n     }\n   }\n@@ -123,18 +123,18 @@ public abstract class AuthCredentials implements Serializable {\n \n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n       in.defaultReadObject();\n-      googleCredentials =  GoogleCredentials.getApplicationDefault();\n+      googleCredentials = GoogleCredentials.getApplicationDefault();\n     }\n \n     @Override\n     protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+                                                            Set<String> scopes) {\n       return new HttpCredentialsAdapter(googleCredentials);\n     }\n   }\n \n   protected abstract HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-      Set<String> scopes);\n+                                                                   Set<String> scopes);\n \n   public static AuthCredentials createForAppEngine() {\n     return new AppEngineAuthCredentials();\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/245/AuthCredentials.java\nindex e6c783565d8..49dd4d0cf78 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/245/AuthCredentials.java\n@@ -100,8 +100,8 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n-      }\n+  throw new IOException(e);\n+  }\n     }\n \n     @Override\n@@ -123,7 +123,7 @@ public abstract class AuthCredentials implements Serializable {\n \n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n       in.defaultReadObject();\n-      googleCredentials =  GoogleCredentials.getApplicationDefault();\n+      googleCredentials = GoogleCredentials.getApplicationDefault();\n     }\n \n     @Override\n@@ -178,4 +178,4 @@ public abstract class AuthCredentials implements Serializable {\n     credential.refreshToken();\n     return credential;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'CLASS_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/245/AuthCredentials.java\nindex e6c783565d8..c32cc741d3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/245/AuthCredentials.java\n@@ -28,7 +28,6 @@ import com.google.api.client.http.javanet.NetHttpTransport;\n import com.google.api.client.json.jackson.JacksonFactory;\n import com.google.auth.http.HttpCredentialsAdapter;\n import com.google.auth.oauth2.GoogleCredentials;\n-\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.Serializable;\n@@ -39,17 +38,17 @@ import java.util.Set;\n /**\n  * Credentials for accessing Google Cloud services.\n  */\n+\n+\n public abstract class AuthCredentials implements Serializable {\n \n   private static final long serialVersionUID = 236297804453464604L;\n-\n   private static class AppEngineAuthCredentials extends AuthCredentials {\n \n     private static final long serialVersionUID = 7931300552744202954L;\n \n     @Override\n-    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes) {\n       return new AppIdentityCredential(scopes);\n     }\n   }\n@@ -71,11 +70,8 @@ public abstract class AuthCredentials implements Serializable {\n     }\n \n     @Override\n-    protected HttpRequestInitializer httpRequestInitializer(\n-        HttpTransport transport, Set<String> scopes) {\n-      GoogleCredential.Builder builder = new GoogleCredential.Builder()\n-          .setTransport(transport)\n-          .setJsonFactory(new JacksonFactory());\n+    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes) {\n+      GoogleCredential.Builder builder = new GoogleCredential.Builder().setTransport(transport).setJsonFactory(new JacksonFactory());\n       if (privateKey != null) {\n         builder.setServiceAccountPrivateKey(privateKey);\n         builder.setServiceAccountId(account);\n@@ -88,7 +84,6 @@ public abstract class AuthCredentials implements Serializable {\n   private static class ComputeEngineAuthCredentials extends AuthCredentials {\n \n     private static final long serialVersionUID = -5217355402127260144L;\n-\n     private transient ComputeCredential computeCredential;\n \n     ComputeEngineAuthCredentials() throws IOException, GeneralSecurityException {\n@@ -100,13 +95,12 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n+        throw new IOException(e);\n       }\n     }\n \n     @Override\n-    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes) {\n       return computeCredential;\n     }\n   }\n@@ -114,7 +108,6 @@ public abstract class AuthCredentials implements Serializable {\n   private static class ApplicationDefaultAuthCredentials extends AuthCredentials {\n \n     private static final long serialVersionUID = -8306873864136099893L;\n-\n     private transient GoogleCredentials googleCredentials;\n \n     ApplicationDefaultAuthCredentials() throws IOException {\n@@ -123,25 +116,22 @@ public abstract class AuthCredentials implements Serializable {\n \n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n       in.defaultReadObject();\n-      googleCredentials =  GoogleCredentials.getApplicationDefault();\n+      googleCredentials = GoogleCredentials.getApplicationDefault();\n     }\n \n     @Override\n-    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes) {\n       return new HttpCredentialsAdapter(googleCredentials);\n     }\n   }\n \n-  protected abstract HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-      Set<String> scopes);\n+  protected abstract HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes);\n \n   public static AuthCredentials createForAppEngine() {\n     return new AppEngineAuthCredentials();\n   }\n \n-  public static AuthCredentials createForComputeEngine()\n-      throws IOException, GeneralSecurityException {\n+  public static AuthCredentials createForComputeEngine() throws IOException, GeneralSecurityException {\n     return new ComputeEngineAuthCredentials();\n   }\n \n@@ -158,6 +148,7 @@ public abstract class AuthCredentials implements Serializable {\n    * @return the credentials instance.\n    * @throws IOException if the credentials cannot be created in the current environment.\n    */\n+\n   public static AuthCredentials createApplicationDefaults() throws IOException {\n     return new ApplicationDefaultAuthCredentials();\n   }\n@@ -178,4 +169,4 @@ public abstract class AuthCredentials implements Serializable {\n     credential.refreshToken();\n     return credential;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/245/AuthCredentials.java\nindex e6c783565d8..3af5849bb0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/245/AuthCredentials.java\n@@ -100,8 +100,8 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n-      }\n+        throw new IOException(e);\n+    }\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/245/AuthCredentials.java\nindex e6c783565d8..3af5849bb0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/245/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/245/AuthCredentials.java\n@@ -100,8 +100,8 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n-      }\n+        throw new IOException(e);\n+    }\n     }\n \n     @Override\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "229",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/229/EquivalentSchemaRuleAlreadyExistsException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/229/EquivalentSchemaRuleAlreadyExistsException.java\nindex 978409799ea..c3805467942 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/229/EquivalentSchemaRuleAlreadyExistsException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/229/EquivalentSchemaRuleAlreadyExistsException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.exceptions.schema;\n \n import org.neo4j.common.TokenNameLookup;\n@@ -30,21 +31,21 @@ public class EquivalentSchemaRuleAlreadyExistsException extends SchemaKernelExce\n     private static final String EQUIVALENT_INDEX = \"An equivalent index already exists, '%s'.\";\n     private static final String EQUIVALENT_CONSTRAINT = \"An equivalent constraint already exists, '%s'.\";\n \n-    public EquivalentSchemaRuleAlreadyExistsException( SchemaRule schemaRule, OperationContext context, TokenNameLookup tokenNameLookup )\n+    public EquivalentSchemaRuleAlreadyExistsException(SchemaRule schemaRule, OperationContext context, TokenNameLookup tokenNameLookup)\n     {\n-        super( Status.Schema.EquivalentSchemaRuleAlreadyExists, constructUserMessage( context, tokenNameLookup, schemaRule ) );\n+        super(Status.Schema.EquivalentSchemaRuleAlreadyExists, constructUserMessage(context, tokenNameLookup, schemaRule));\n     }\n \n-    private static String constructUserMessage( OperationContext context, TokenNameLookup tokenNameLookup, SchemaRule schemaRule )\n+    private static String constructUserMessage(OperationContext context, TokenNameLookup tokenNameLookup, SchemaRule schemaRule)\n     {\n-        switch ( context )\n+        switch (context)\n         {\n-        case INDEX_CREATION:\n-            return String.format( EQUIVALENT_INDEX, schemaRule.userDescription( tokenNameLookup ) );\n-        case CONSTRAINT_CREATION:\n-            return String.format( EQUIVALENT_CONSTRAINT, schemaRule.userDescription( tokenNameLookup ) );\n-        default:\n-            return String.format( EQUIVALENT_SCHEMA_RULE, schemaRule.userDescription( tokenNameLookup ) );\n+            case INDEX_CREATION:\n+                return String.format(EQUIVALENT_INDEX, schemaRule.userDescription(tokenNameLookup));\n+            case CONSTRAINT_CREATION:\n+                return String.format(EQUIVALENT_CONSTRAINT, schemaRule.userDescription(tokenNameLookup));\n+            default:\n+                return String.format(EQUIVALENT_SCHEMA_RULE, schemaRule.userDescription(tokenNameLookup));\n         }\n     }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Plugily-Projects-MurderMystery",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "35",
                "column": "92",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "  public PartyHandler initialize(Main plugin) {\n    PartyHandler partyHandler;\n    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)){\n      if (Bukkit.getServer().getPluginManager().getPlugin(\"Parties\") != null) {\n        return new PartiesPartyHandlerImpl();\n      } else if (Bukkit.getServer().getPluginManager().getPlugin(\"Spigot-Party-API-PAF\") != null) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler/25/PartySupportInitializer.java\nindex 1bdf10e66f6..0b7fd60f1d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler/25/PartySupportInitializer.java\n@@ -32,7 +32,7 @@ public class PartySupportInitializer {\n \n   public PartyHandler initialize(Main plugin) {\n     PartyHandler partyHandler;\n-    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)){\n+    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)) {\n       if (Bukkit.getServer().getPluginManager().getPlugin(\"Parties\") != null) {\n         return new PartiesPartyHandlerImpl();\n       } else if (Bukkit.getServer().getPluginManager().getPlugin(\"Spigot-Party-API-PAF\") != null) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/intellij/25/PartySupportInitializer.java\nindex 1bdf10e66f6..0b7fd60f1d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/intellij/25/PartySupportInitializer.java\n@@ -32,7 +32,7 @@ public class PartySupportInitializer {\n \n   public PartyHandler initialize(Main plugin) {\n     PartyHandler partyHandler;\n-    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)){\n+    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)) {\n       if (Bukkit.getServer().getPluginManager().getPlugin(\"Parties\") != null) {\n         return new PartiesPartyHandlerImpl();\n       } else if (Bukkit.getServer().getPluginManager().getPlugin(\"Spigot-Party-API-PAF\") != null) {\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/naturalize/25/PartySupportInitializer.java\nindex 1bdf10e66f6..0d8aca643e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/naturalize/25/PartySupportInitializer.java\n@@ -32,7 +32,7 @@ public class PartySupportInitializer {\n \n   public PartyHandler initialize(Main plugin) {\n     PartyHandler partyHandler;\n-    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)){\n+    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)) {\n       if (Bukkit.getServer().getPluginManager().getPlugin(\"Parties\") != null) {\n         return new PartiesPartyHandlerImpl();\n       } else if (Bukkit.getServer().getPluginManager().getPlugin(\"Spigot-Party-API-PAF\") != null) {\n@@ -65,4 +65,4 @@ public class PartySupportInitializer {\n     return partyHandler;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 21, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 23, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 21, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 21, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 23, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 21, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 21, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 23, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 21, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 21, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 23, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 21, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 19, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/codebuff/25/PartySupportInitializer.java\nindex 1bdf10e66f6..40d02d2d9c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/codebuff/25/PartySupportInitializer.java\n@@ -28,41 +28,44 @@ import pl.plajer.murdermystery.Main;\n  * <p>\n  * Created at 09.02.2020\n  */\n+\n+\n public class PartySupportInitializer {\n \n   public PartyHandler initialize(Main plugin) {\n     PartyHandler partyHandler;\n-    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)){\n+    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)) {\n       if (Bukkit.getServer().getPluginManager().getPlugin(\"Parties\") != null) {\n         return new PartiesPartyHandlerImpl();\n       } else if (Bukkit.getServer().getPluginManager().getPlugin(\"Spigot-Party-API-PAF\") != null) {\n         return new PAFBPartyHandlerImpl();\n       } else if (Bukkit.getServer().getPluginManager().getPlugin(\"PartyAndFriends\") != null) {\n-        return new PAFSPartyHandlerImpl();\n-      }\n+               return new PAFSPartyHandlerImpl();\n+             }\n     }\n     partyHandler = new PartyHandler() {\n-      @Override\n-      public boolean isPlayerInParty(Player player) {\n-        return false;\n-      }\n \n-      @Override\n-      public GameParty getParty(Player player) {\n-        return null;\n-      }\n+                     @Override\n+                     public boolean isPlayerInParty(Player player) {\n+                       return false;\n+                     }\n+\n+                     @Override\n+                     public GameParty getParty(Player player) {\n+                       return null;\n+                     }\n \n-      @Override\n-      public boolean partiesSupported() {\n-        return false;\n-      }\n+                     @Override\n+                     public boolean partiesSupported() {\n+                       return false;\n+                     }\n \n-      @Override\n-      public PartyPluginType getPartyPluginType() {\n-        return PartyPluginType.NONE;\n-      }\n-    };\n+                     @Override\n+                     public PartyPluginType getPartyPluginType() {\n+                       return PartyPluginType.NONE;\n+                     }\n+                   };\n     return partyHandler;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_random/25/PartySupportInitializer.java\nindex 1bdf10e66f6..0b7fd60f1d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_random/25/PartySupportInitializer.java\n@@ -32,7 +32,7 @@ public class PartySupportInitializer {\n \n   public PartyHandler initialize(Main plugin) {\n     PartyHandler partyHandler;\n-    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)){\n+    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)) {\n       if (Bukkit.getServer().getPluginManager().getPlugin(\"Parties\") != null) {\n         return new PartiesPartyHandlerImpl();\n       } else if (Bukkit.getServer().getPluginManager().getPlugin(\"Spigot-Party-API-PAF\") != null) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_three_grams/25/PartySupportInitializer.java\nindex 1bdf10e66f6..0b7fd60f1d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/25/PartySupportInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_three_grams/25/PartySupportInitializer.java\n@@ -32,7 +32,7 @@ public class PartySupportInitializer {\n \n   public PartyHandler initialize(Main plugin) {\n     PartyHandler partyHandler;\n-    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)){\n+    if (!plugin.getConfigPreferences().getOption(ConfigPreferences.Option.DISABLE_PARTIES)) {\n       if (Bukkit.getServer().getPluginManager().getPlugin(\"Parties\") != null) {\n         return new PartiesPartyHandlerImpl();\n       } else if (Bukkit.getServer().getPluginManager().getPlugin(\"Spigot-Party-API-PAF\") != null) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1948",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "54",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1948/RelationshipExpanderBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1948/RelationshipExpanderBuilder.java\nindex 1b3bd1e5eca..c5fa68b8a6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1948/RelationshipExpanderBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1948/RelationshipExpanderBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.domain;\n \n import java.util.Arrays;\n@@ -29,69 +30,68 @@ import org.neo4j.graphdb.RelationshipType;\n \n public class RelationshipExpanderBuilder\n {\n-    private RelationshipExpanderBuilder()\n-    {\n-    }\n+  private RelationshipExpanderBuilder()\n+  {\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static PathExpander describeRelationships( Map<String, Object> description )\n-    {\n-        PathExpanderBuilder expander = PathExpanderBuilder.allTypesAndDirections();\n+  @SuppressWarnings(\"unchecked\")\n+  public static PathExpander describeRelationships(Map<String, Object> description)\n+  {\n+    PathExpanderBuilder expander = PathExpanderBuilder.allTypesAndDirections();\n \n-        Object relationshipsDescription = description.get( \"relationships\" );\n-        if ( relationshipsDescription != null )\n-        {\n-            Collection<Object> pairDescriptions;\n-            if ( relationshipsDescription instanceof Collection )\n-            {\n-                pairDescriptions = (Collection<Object>) relationshipsDescription;\n-            }\n-            else\n-            {\n-                pairDescriptions = Arrays.asList( relationshipsDescription );\n-            }\n+    Object relationshipsDescription = description.get(\"relationships\");\n+    if (relationshipsDescription != null)\n+    {\n+      Collection<Object> pairDescriptions;\n+      if (relationshipsDescription instanceof Collection)\n+      {\n+        pairDescriptions = (Collection<Object>) relationshipsDescription;\n+      } else\n+      {\n+        pairDescriptions = Arrays.asList(relationshipsDescription);\n+      }\n \n-            for ( Object pairDescription : pairDescriptions )\n-            {\n-                Map map = (Map) pairDescription;\n-                String name = (String) map.get( \"type\" );\n-                RelationshipType type = RelationshipType.withName( name );\n-                String directionName = (String) map.get( \"direction\" );\n-                expander = ( directionName == null ) ? expander.add( type ) : expander.add( type,\n-                        stringToEnum( directionName, RelationshipDirection.class, true ).internal );\n-            }\n-        }\n-        return expander.build();\n+      for (Object pairDescription : pairDescriptions)\n+      {\n+        Map map = (Map) pairDescription;\n+        String name = (String) map.get(\"type\");\n+        RelationshipType type = RelationshipType.withName(name);\n+        String directionName = (String) map.get(\"direction\");\n+        expander = (directionName == null) ? expander.add(type) : expander.add(type,\n+            stringToEnum(directionName, RelationshipDirection.class, true).internal);\n+      }\n     }\n+    return expander.build();\n+  }\n \n-    // TODO Refactor - same method exists in TraversalDescriptionBuilder\n-    private static <T extends Enum<T>> T stringToEnum( String name, Class<T> enumClass, boolean fuzzyMatch )\n+  // TODO Refactor - same method exists in TraversalDescriptionBuilder\n+  private static <T extends Enum<T>> T stringToEnum(String name, Class<T> enumClass, boolean fuzzyMatch)\n+  {\n+    if (name == null)\n     {\n-        if ( name == null )\n-        {\n-            return null;\n-        }\n+      return null;\n+    }\n \n-        // name = enumifyName( name );\n-        for ( T candidate : enumClass.getEnumConstants() )\n-        {\n-            if ( candidate.name()\n-                    .equals( name ) )\n-            {\n-                return candidate;\n-            }\n-        }\n-        if ( fuzzyMatch )\n+    // name = enumifyName( name );\n+    for (T candidate : enumClass.getEnumConstants())\n+    {\n+      if (candidate.name()\n+          .equals(name))\n+      {\n+        return candidate;\n+      }\n+    }\n+    if (fuzzyMatch)\n+    {\n+      for (T candidate : enumClass.getEnumConstants())\n+      {\n+        if (candidate.name()\n+            .startsWith(name))\n         {\n-            for ( T candidate : enumClass.getEnumConstants() )\n-            {\n-                if ( candidate.name()\n-                        .startsWith( name ) )\n-                {\n-                    return candidate;\n-                }\n-            }\n+          return candidate;\n         }\n-        throw new RuntimeException( \"Unregognized \" + enumClass.getSimpleName() + \" '\" + name + \"'\" );\n+      }\n     }\n+    throw new RuntimeException(\"Unregognized \" + enumClass.getSimpleName() + \" '\" + name + \"'\");\n+  }\n }\n",
            "diff_size": 67
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1948/RelationshipExpanderBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1948/RelationshipExpanderBuilder.java\nindex 1b3bd1e5eca..9748edb643b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1948/RelationshipExpanderBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1948/RelationshipExpanderBuilder.java\n@@ -34,11 +34,10 @@ public class RelationshipExpanderBuilder\n     }\n \n     @SuppressWarnings( \"unchecked\" )\n-    public static PathExpander describeRelationships( Map<String, Object> description )\n+    public static PathExpander describeRelationships( Map<String,Object> description )\n     {\n         PathExpanderBuilder expander = PathExpanderBuilder.allTypesAndDirections();\n-\n-        Object relationshipsDescription = description.get( \"relationships\" );\n+Object relationshipsDescription = description.get( \"relationships\" );\n         if ( relationshipsDescription != null )\n         {\n             Collection<Object> pairDescriptions;\n@@ -59,7 +58,7 @@ public class RelationshipExpanderBuilder\n                 String directionName = (String) map.get( \"direction\" );\n                 expander = ( directionName == null ) ? expander.add( type ) : expander.add( type,\n                         stringToEnum( directionName, RelationshipDirection.class, true ).internal );\n-            }\n+    }\n         }\n         return expander.build();\n     }\n@@ -75,8 +74,7 @@ public class RelationshipExpanderBuilder\n         // name = enumifyName( name );\n         for ( T candidate : enumClass.getEnumConstants() )\n         {\n-            if ( candidate.name()\n-                    .equals( name ) )\n+            if ( candidate.name().equals( name ) )\n             {\n                 return candidate;\n             }\n@@ -85,8 +83,7 @@ public class RelationshipExpanderBuilder\n         {\n             for ( T candidate : enumClass.getEnumConstants() )\n             {\n-                if ( candidate.name()\n-                        .startsWith( name ) )\n+                if ( candidate.name().startsWith( name ) )\n                 {\n                     return candidate;\n                 }\n@@ -94,4 +91,4 @@ public class RelationshipExpanderBuilder\n         }\n         throw new RuntimeException( \"Unregognized \" + enumClass.getSimpleName() + \" '\" + name + \"'\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2961",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "6",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2961/MasterInfoService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2961/MasterInfoService.java\nindex 3b7d71a5a5e..716e9ee2680 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2961/MasterInfoService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2961/MasterInfoService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest;\n \n import javax.ws.rs.GET;\n@@ -36,138 +37,137 @@ import static javax.ws.rs.core.Response.Status.NOT_FOUND;\n import static javax.ws.rs.core.Response.Status.OK;\n import static javax.ws.rs.core.Response.status;\n \n-@Path( MasterInfoService.BASE_PATH )\n+@Path(MasterInfoService.BASE_PATH)\n public class MasterInfoService implements AdvertisableService\n {\n-    public static final String BASE_PATH = \"server/ha\";\n-    public static final String IS_MASTER_PATH = \"/master\";\n-    public static final String IS_SLAVE_PATH = \"/slave\";\n-    public static final String IS_AVAILABLE_PATH = \"/available\";\n-\n-    private final OutputFormat output;\n-    private final HighlyAvailableGraphDatabase haDb;\n-\n-    public MasterInfoService( @Context OutputFormat output, @Context GraphDatabaseService db )\n+  public static final String BASE_PATH = \"server/ha\";\n+  public static final String IS_MASTER_PATH = \"/master\";\n+  public static final String IS_SLAVE_PATH = \"/slave\";\n+  public static final String IS_AVAILABLE_PATH = \"/available\";\n+\n+  private final OutputFormat output;\n+  private final HighlyAvailableGraphDatabase haDb;\n+\n+  public MasterInfoService(@Context OutputFormat output, @Context GraphDatabaseService db)\n+  {\n+    this.output = output;\n+    if (db instanceof HighlyAvailableGraphDatabase)\n     {\n-        this.output = output;\n-        if ( db instanceof HighlyAvailableGraphDatabase )\n-        {\n-            this.haDb = (HighlyAvailableGraphDatabase) db;\n-        }\n-        else\n-        {\n-            this.haDb = null;\n-        }\n+      this.haDb = (HighlyAvailableGraphDatabase) db;\n+    } else\n+    {\n+      this.haDb = null;\n     }\n+  }\n \n-    @GET\n-    public Response discover()\n+  @GET\n+  public Response discover()\n+  {\n+    if (haDb == null)\n     {\n-        if ( haDb == null )\n-        {\n-            return status( FORBIDDEN ).build();\n-        }\n+      return status(FORBIDDEN).build();\n+    }\n \n-        String isMasterUri = IS_MASTER_PATH;\n-        String isSlaveUri = IS_SLAVE_PATH;\n+    String isMasterUri = IS_MASTER_PATH;\n+    String isSlaveUri = IS_SLAVE_PATH;\n \n-        HaDiscoveryRepresentation dr = new HaDiscoveryRepresentation( BASE_PATH, isMasterUri, isSlaveUri );\n-        return output.ok( dr );\n-    }\n+    HaDiscoveryRepresentation dr = new HaDiscoveryRepresentation(BASE_PATH, isMasterUri, isSlaveUri);\n+    return output.ok(dr);\n+  }\n \n-    @GET\n-    @Path( IS_MASTER_PATH )\n-    public Response isMaster()\n+  @GET\n+  @Path(IS_MASTER_PATH)\n+  public Response isMaster()\n+  {\n+    if (haDb == null)\n     {\n-        if ( haDb == null )\n-        {\n-            return status( FORBIDDEN ).build();\n-        }\n-\n-        String role = haDb.role().toLowerCase();\n-        if ( role.equals( \"master\" ) )\n-        {\n-            return positiveResponse();\n-        }\n-\n-        if ( role.equals( \"slave\" ) )\n-        {\n-            return negativeResponse();\n-        }\n-\n-        return unknownResponse();\n+      return status(FORBIDDEN).build();\n     }\n \n-    @GET\n-    @Path( IS_SLAVE_PATH )\n-    public Response isSlave()\n+    String role = haDb.role().toLowerCase();\n+    if (role.equals(\"master\"))\n     {\n-        if ( haDb == null )\n-        {\n-            return status( FORBIDDEN ).build();\n-        }\n-\n-        String role = haDb.role().toLowerCase();\n-        if ( role.equals( \"slave\" ) )\n-        {\n-            return positiveResponse();\n-        }\n-\n-        if ( role.equals( \"master\" ) )\n-        {\n-            return negativeResponse();\n-        }\n-\n-        return unknownResponse();\n+      return positiveResponse();\n     }\n \n-    @GET\n-    @Path( IS_AVAILABLE_PATH )\n-    public Response isAvailable()\n+    if (role.equals(\"slave\"))\n     {\n-        if ( haDb == null )\n-        {\n-            return status( FORBIDDEN ).build();\n-        }\n-\n-        String role = haDb.role().toLowerCase();\n-        if ( \"slave\".equals( role ) || \"master\".equals( role ) )\n-        {\n-            return plainTextResponse( OK, role );\n-        }\n-\n-        return unknownResponse();\n+      return negativeResponse();\n     }\n \n-    private Response negativeResponse()\n-    {\n-        return plainTextResponse( NOT_FOUND, \"false\" );\n-    }\n+    return unknownResponse();\n+  }\n \n-    private Response positiveResponse()\n+  @GET\n+  @Path(IS_SLAVE_PATH)\n+  public Response isSlave()\n+  {\n+    if (haDb == null)\n     {\n-        return plainTextResponse( OK, \"true\" );\n+      return status(FORBIDDEN).build();\n     }\n \n-    private Response unknownResponse()\n+    String role = haDb.role().toLowerCase();\n+    if (role.equals(\"slave\"))\n     {\n-        return plainTextResponse( NOT_FOUND, \"UNKNOWN\" );\n+      return positiveResponse();\n     }\n \n-    private Response plainTextResponse( Response.Status status, String entityBody )\n+    if (role.equals(\"master\"))\n     {\n-        return status( status ).type( TEXT_PLAIN_TYPE ).entity( entityBody ).build();\n+      return negativeResponse();\n     }\n \n-    @Override\n-    public String getName()\n+    return unknownResponse();\n+  }\n+\n+  @GET\n+  @Path(IS_AVAILABLE_PATH)\n+  public Response isAvailable()\n+  {\n+    if (haDb == null)\n     {\n-        return \"ha\";\n+      return status(FORBIDDEN).build();\n     }\n \n-    @Override\n-    public String getServerPath()\n+    String role = haDb.role().toLowerCase();\n+    if (\"slave\".equals(role) || \"master\".equals(role))\n     {\n-        return BASE_PATH;\n+      return plainTextResponse(OK, role);\n     }\n+\n+    return unknownResponse();\n+  }\n+\n+  private Response negativeResponse()\n+  {\n+    return plainTextResponse(NOT_FOUND, \"false\");\n+  }\n+\n+  private Response positiveResponse()\n+  {\n+    return plainTextResponse(OK, \"true\");\n+  }\n+\n+  private Response unknownResponse()\n+  {\n+    return plainTextResponse(NOT_FOUND, \"UNKNOWN\");\n+  }\n+\n+  private Response plainTextResponse(Response.Status status, String entityBody)\n+  {\n+    return status(status).type(TEXT_PLAIN_TYPE).entity(entityBody).build();\n+  }\n+\n+  @Override\n+  public String getName()\n+  {\n+    return \"ha\";\n+  }\n+\n+  @Override\n+  public String getServerPath()\n+  {\n+    return BASE_PATH;\n+  }\n }\n",
            "diff_size": 156
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2961/MasterInfoService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2961/MasterInfoService.java\nindex 3b7d71a5a5e..bb25e5eed99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2961/MasterInfoService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2961/MasterInfoService.java\n@@ -40,11 +40,13 @@ import static javax.ws.rs.core.Response.status;\n public class MasterInfoService implements AdvertisableService\n {\n     public static final String BASE_PATH = \"server/ha\";\n-    public static final String IS_MASTER_PATH = \"/master\";\n-    public static final String IS_SLAVE_PATH = \"/slave\";\n-    public static final String IS_AVAILABLE_PATH = \"/available\";\n \n-    private final OutputFormat output;\n+public static final String IS_MASTER_PATH = \"/master\";\n+\n+public static final String IS_SLAVE_PATH = \"/slave\";\n+\n+public static final String IS_AVAILABLE_PATH = \"/available\";\n+private final OutputFormat output;\n     private final HighlyAvailableGraphDatabase haDb;\n \n     public MasterInfoService( @Context OutputFormat output, @Context GraphDatabaseService db )\n@@ -170,4 +172,4 @@ public class MasterInfoService implements AdvertisableService\n     {\n         return BASE_PATH;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
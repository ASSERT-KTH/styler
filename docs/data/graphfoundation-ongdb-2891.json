{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2891",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2891/GCMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2891/GCMetrics.java\nindex 3f7bff62af6..890f3a38aea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2891/GCMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2891/GCMetrics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.source.jvm;\n \n import com.codahale.metrics.Gauge;\n@@ -29,32 +30,32 @@ import static com.codahale.metrics.MetricRegistry.name;\n \n public class GCMetrics extends JvmMetrics\n {\n-    public static final String GC_PREFIX = name( NAME_PREFIX, \"gc\" );\n-    public static final String GC_TIME = name( GC_PREFIX, \"time\" );\n-    public static final String GC_COUNT = name( GC_PREFIX, \"count\" );\n+  public static final String GC_PREFIX = name(NAME_PREFIX, \"gc\");\n+  public static final String GC_TIME = name(GC_PREFIX, \"time\");\n+  public static final String GC_COUNT = name(GC_PREFIX, \"count\");\n \n-    private final MetricRegistry registry;\n+  private final MetricRegistry registry;\n \n-    public GCMetrics( MetricRegistry registry )\n-    {\n-        this.registry = registry;\n-    }\n+  public GCMetrics(MetricRegistry registry)\n+  {\n+    this.registry = registry;\n+  }\n \n-    @Override\n-    public void start()\n+  @Override\n+  public void start()\n+  {\n+    for (final GarbageCollectorMXBean gcBean : ManagementFactory.getGarbageCollectorMXBeans())\n     {\n-        for ( final GarbageCollectorMXBean gcBean : ManagementFactory.getGarbageCollectorMXBeans() )\n-        {\n-            registry.register( name( GC_TIME, prettifyName( gcBean.getName() ) ),\n-                    (Gauge<Long>) gcBean::getCollectionTime );\n-            registry.register( name( GC_COUNT, prettifyName( gcBean.getName() ) ),\n-                    (Gauge<Long>) gcBean::getCollectionCount );\n-        }\n+      registry.register(name(GC_TIME, prettifyName(gcBean.getName())),\n+          (Gauge<Long>) gcBean::getCollectionTime);\n+      registry.register(name(GC_COUNT, prettifyName(gcBean.getName())),\n+          (Gauge<Long>) gcBean::getCollectionCount);\n     }\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        registry.removeMatching( ( name, metric ) -> name.startsWith( GC_PREFIX ) );\n-    }\n+  @Override\n+  public void stop()\n+  {\n+    registry.removeMatching((name, metric) -> name.startsWith(GC_PREFIX));\n+  }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2891/GCMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2891/GCMetrics.java\nindex 3f7bff62af6..6a9c15747f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2891/GCMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2891/GCMetrics.java\n@@ -45,11 +45,9 @@ public class GCMetrics extends JvmMetrics\n     {\n         for ( final GarbageCollectorMXBean gcBean : ManagementFactory.getGarbageCollectorMXBeans() )\n         {\n-            registry.register( name( GC_TIME, prettifyName( gcBean.getName() ) ),\n-                    (Gauge<Long>) gcBean::getCollectionTime );\n-            registry.register( name( GC_COUNT, prettifyName( gcBean.getName() ) ),\n-                    (Gauge<Long>) gcBean::getCollectionCount );\n-        }\n+            registry.register( name( GC_TIME, prettifyName( gcBean.getName() ) ), (Gauge<Long>) gcBean::getCollectionTime );\n+registry.register( name( GC_COUNT, prettifyName( gcBean.getName() ) ), (Gauge<Long>) gcBean::getCollectionCount );\n+    }\n     }\n \n     @Override\n@@ -57,4 +55,4 @@ public class GCMetrics extends JvmMetrics\n     {\n         registry.removeMatching( ( name, metric ) -> name.startsWith( GC_PREFIX ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
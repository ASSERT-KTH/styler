{
    "project_name": "graphfoundation-ongdb",
    "error_id": "225",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/225/MinimumCountFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/225/MinimumCountFilter.java\nindex 0da45413839..32b246cce46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/225/MinimumCountFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/225/MinimumCountFilter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.routing.load_balancing.filters;\n \n import java.util.Objects;\n@@ -29,45 +30,45 @@ import static java.util.Collections.emptySet;\n  */\n public class MinimumCountFilter<T> implements Filter<T>\n {\n-    private final int minCount;\n+  private final int minCount;\n \n-    public MinimumCountFilter( int minCount )\n-    {\n-        this.minCount = minCount;\n-    }\n+  public MinimumCountFilter(int minCount)\n+  {\n+    this.minCount = minCount;\n+  }\n \n-    @Override\n-    public Set<T> apply( Set<T> data )\n-    {\n-        return data.size() >= minCount ? data : emptySet();\n-    }\n+  @Override\n+  public Set<T> apply(Set<T> data)\n+  {\n+    return data.size() >= minCount ? data : emptySet();\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        MinimumCountFilter<?> that = (MinimumCountFilter<?>) o;\n-        return minCount == that.minCount;\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return Objects.hash( minCount );\n+      return false;\n     }\n+    MinimumCountFilter<?> that = (MinimumCountFilter<?>) o;\n+    return minCount == that.minCount;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"MinimumCountFilter{\" +\n-               \"minCount=\" + minCount +\n-               '}';\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(minCount);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"MinimumCountFilter{\" +\n+        \"minCount=\" + minCount +\n+        '}';\n+  }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/225/MinimumCountFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/225/MinimumCountFilter.java\nindex 0da45413839..ad38d8f8fdb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/225/MinimumCountFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/225/MinimumCountFilter.java\n@@ -49,7 +49,8 @@ public class MinimumCountFilter<T> implements Filter<T>\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -66,8 +67,6 @@ public class MinimumCountFilter<T> implements Filter<T>\n     @Override\n     public String toString()\n     {\n-        return \"MinimumCountFilter{\" +\n-               \"minCount=\" + minCount +\n-               '}';\n+        return \"MinimumCountFilter{\" + \"minCount=\" + minCount + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "33",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "53",
                    "column": "23",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/225/MinimumCountFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/225/MinimumCountFilter.java\nindex 0da45413839..15e1b1d17b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/225/MinimumCountFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/225/MinimumCountFilter.java\n@@ -21,13 +21,13 @@ package org.neo4j.causalclustering.routing.load_balancing.filters;\n \n import java.util.Objects;\n import java.util.Set;\n-\n import static java.util.Collections.emptySet;\n \n /**\n  * Only returns a valid (non-empty) result if the minimum count is met.\n  */\n-public class MinimumCountFilter<T> implements Filter<T>\n+\n+public class MinimumCountFilter <T> implements Filter<T>\n {\n     private final int minCount;\n \n@@ -49,10 +49,12 @@ public class MinimumCountFilter<T> implements Filter<T>\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+        if ( o == null|| getClass() != o.getClass() )\n         {\n             return false;\n         }\n+\n         MinimumCountFilter<?> that = (MinimumCountFilter<?>) o;\n         return minCount == that.minCount;\n     }\n@@ -66,8 +68,6 @@ public class MinimumCountFilter<T> implements Filter<T>\n     @Override\n     public String toString()\n     {\n-        return \"MinimumCountFilter{\" +\n-               \"minCount=\" + minCount +\n-               '}';\n+        return \"MinimumCountFilter{\" + \"minCount=\" + minCount + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
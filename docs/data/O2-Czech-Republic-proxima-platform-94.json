{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "94",
    "information": {
        "errors": [
            {
                "line": "69",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 98).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public TypeDescriptor<Pair<K, V>> getEncodedTypeDescriptor() {\n    return descriptor(keyCoder.getEncodedTypeDescriptor(), valueCoder.getEncodedTypeDescriptor());\n  }\n\n  @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/94/PairCoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/94/PairCoder.java\nindex 3f016b768d4..99ea992b027 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/94/PairCoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/94/PairCoder.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.core.io;\n \n import cz.o2.proxima.annotations.Internal;\n@@ -40,12 +41,17 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n   public static <K, V> TypeDescriptor<Pair<K, V>> descriptor(\n       TypeDescriptor<K> key, TypeDescriptor<V> value) {\n \n-    return new TypeDescriptor<Pair<K, V>>() {}.where(new TypeParameter<K>() {}, key)\n-        .where(new TypeParameter<V>() {}, value);\n+    return new TypeDescriptor<Pair<K, V>>() {\n+    }.where(new TypeParameter<K>() {\n+    }, key)\n+        .where(new TypeParameter<V>() {\n+        }, value);\n   }\n \n-  @Getter private final Coder<K> keyCoder;\n-  @Getter private final Coder<V> valueCoder;\n+  @Getter\n+  private final Coder<K> keyCoder;\n+  @Getter\n+  private final Coder<V> valueCoder;\n \n   private PairCoder(Coder<K> keyCoder, Coder<V> valueCoder) {\n     this.keyCoder = keyCoder;\n@@ -66,7 +72,8 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n \n   @Override\n   public TypeDescriptor<Pair<K, V>> getEncodedTypeDescriptor() {\n-    return descriptor(keyCoder.getEncodedTypeDescriptor(), valueCoder.getEncodedTypeDescriptor());\n+    return descriptor(keyCoder.getEncodedTypeDescriptor(),\n+        valueCoder.getEncodedTypeDescriptor());\n   }\n \n   @Override\n@@ -84,5 +91,6 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n   }\n \n   @Override\n-  public void verifyDeterministic() {}\n+  public void verifyDeterministic() {\n+  }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/94/PairCoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/94/PairCoder.java\nindex 3f016b768d4..f729e29d8d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/94/PairCoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/94/PairCoder.java\n@@ -85,4 +85,4 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n \n   @Override\n   public void verifyDeterministic() {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/94/PairCoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/94/PairCoder.java\nindex 3f016b768d4..2c6ace68cc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/94/PairCoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/94/PairCoder.java\n@@ -28,23 +28,23 @@ import org.apache.beam.sdk.values.TypeDescriptor;\n import org.apache.beam.sdk.values.TypeParameter;\n \n /** A coder for {@link Pair}s. */\n+\n+\n @Internal\n public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n \n   private static final long serialVersionUID = 1L;\n-\n   public static <K, V> PairCoder<K, V> of(Coder<K> keyCoder, Coder<V> valueCoder) {\n     return new PairCoder<>(keyCoder, valueCoder);\n   }\n \n-  public static <K, V> TypeDescriptor<Pair<K, V>> descriptor(\n-      TypeDescriptor<K> key, TypeDescriptor<V> value) {\n-\n+  public static <K, V> TypeDescriptor<Pair<K, V>> descriptor(TypeDescriptor<K> key, TypeDescriptor<V> value) {\n     return new TypeDescriptor<Pair<K, V>>() {}.where(new TypeParameter<K>() {}, key)\n-        .where(new TypeParameter<V>() {}, value);\n+                                              .where(new TypeParameter<V>() {}, value);\n   }\n \n   @Getter private final Coder<K> keyCoder;\n+\n   @Getter private final Coder<V> valueCoder;\n \n   private PairCoder(Coder<K> keyCoder, Coder<V> valueCoder) {\n@@ -54,7 +54,6 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n \n   @Override\n   public void encode(Pair<K, V> value, OutputStream outStream) throws IOException {\n-\n     keyCoder.encode(value.getFirst(), outStream);\n     valueCoder.encode(value.getSecond(), outStream);\n   }\n@@ -85,4 +84,4 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n \n   @Override\n   public void verifyDeterministic() {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "column": "99",
                    "severity": "error",
                    "message": "'}' at column 99 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "99",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "69",
                    "column": "100",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/94/PairCoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/94/PairCoder.java\nindex 3f016b768d4..e8307377426 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/94/PairCoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/94/PairCoder.java\n@@ -66,10 +66,7 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n \n   @Override\n   public TypeDescriptor<Pair<K, V>> getEncodedTypeDescriptor() {\n-    return descriptor(keyCoder.getEncodedTypeDescriptor(), valueCoder.getEncodedTypeDescriptor());\n-  }\n-\n-  @Override\n+    return descriptor(keyCoder.getEncodedTypeDescriptor(), valueCoder.getEncodedTypeDescriptor());}@Override\n   public boolean equals(Object obj) {\n     if (!(obj instanceof PairCoder)) {\n       return false;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
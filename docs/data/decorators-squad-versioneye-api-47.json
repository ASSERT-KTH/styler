{
    "project_name": "decorators-squad-versioneye-api",
    "error_id": "47",
    "information": {
        "errors": [
            {
                "line": "112",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            .getJsonArray(\"authenticated\");\n        final JsonArrayBuilder users = Json.createArrayBuilder();\n        for(final JsonValue user: online) {\n            users.add(user);\n        }\n        users.add(Json.createObjectBuilder().add(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler/47/MkVersionEye.java\nindex 05abb9d50b9..7ecd00b372f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler/47/MkVersionEye.java\n@@ -109,7 +109,7 @@ public final class MkVersionEye implements VersionEye {\n         JsonArray online = this.server.storage().build()\n             .getJsonArray(\"authenticated\");\n         final JsonArrayBuilder users = Json.createArrayBuilder();\n-        for(final JsonValue user: online) {\n+        for (final JsonValue user: online) {\n             users.add(user);\n         }\n         users.add(Json.createObjectBuilder().add(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/47/MkVersionEye.java\nindex 05abb9d50b9..fc4d5f3f96a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/47/MkVersionEye.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2017, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.versioneye;\n \n import java.io.IOException;\n@@ -48,18 +49,19 @@ public final class MkVersionEye implements VersionEye {\n      * VersionEye server.\n      */\n     private MkServer server;\n-    \n+\n     /**\n      * Authenticated user's username.\n      */\n     private String username;\n-    \n+\n     /**\n      * Ctor.\n      */\n     public MkVersionEye() {\n         this.server = new MkJsonServer();\n     }\n+\n     /**\n      * Ctor.\n      * @param authenticated Mock Authenticated User.\n@@ -67,7 +69,7 @@ public final class MkVersionEye implements VersionEye {\n     public MkVersionEye(final Authenticated authenticated) {\n         this(new MkJsonServer(), authenticated);\n     }\n-    \n+\n     /**\n      * Ctor.\n      * @param server VersionEye server storage. See {@link MkServer}\n@@ -80,7 +82,7 @@ public final class MkVersionEye implements VersionEye {\n         this.username = user.username();\n         this.authenticate(user);\n     }\n-    \n+\n     @Override\n     public Services services() {\n         return new MkServices(this.server);\n@@ -100,7 +102,7 @@ public final class MkVersionEye implements VersionEye {\n     public Me me() {\n         return new MkMe(this.server, this.username);\n     }\n-    \n+\n     /**\n      * Add authenticated user to the MkServer.\n      * @param authenticated The user to authenticate.\n@@ -109,7 +111,7 @@ public final class MkVersionEye implements VersionEye {\n         JsonArray online = this.server.storage().build()\n             .getJsonArray(\"authenticated\");\n         final JsonArrayBuilder users = Json.createArrayBuilder();\n-        for(final JsonValue user: online) {\n+        for (final JsonValue user : online) {\n             users.add(user);\n         }\n         users.add(Json.createObjectBuilder().add(\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 106.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/47/MkVersionEye.java\nindex 05abb9d50b9..daab3002705 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/47/MkVersionEye.java\n@@ -52,7 +52,7 @@ public final class MkVersionEye implements VersionEye {\n     /**\n      * Authenticated user's username.\n      */\n-    private String username;\n+private String username;\n     \n     /**\n      * Ctor.\n@@ -73,9 +73,7 @@ public final class MkVersionEye implements VersionEye {\n      * @param server VersionEye server storage. See {@link MkServer}\n      * @param user Mock Authenticated User.\n      */\n-    public MkVersionEye(\n-        final MkServer server, final Authenticated user\n-    ) {\n+    public MkVersionEye(final MkServer server, final Authenticated user) {\n         this.server = server;\n         this.username = user.username();\n         this.authenticate(user);\n@@ -105,17 +103,15 @@ public final class MkVersionEye implements VersionEye {\n      * Add authenticated user to the MkServer.\n      * @param authenticated The user to authenticate.\n      */\n-    private void authenticate(final Authenticated authenticated) {\n+private void authenticate(final Authenticated authenticated) {\n         JsonArray online = this.server.storage().build()\n             .getJsonArray(\"authenticated\");\n         final JsonArrayBuilder users = Json.createArrayBuilder();\n         for(final JsonValue user: online) {\n             users.add(user);\n         }\n-        users.add(Json.createObjectBuilder().add(\n-            this.username, authenticated.json())\n-        );\n+        users.add(Json.createObjectBuilder().add(this.username, authenticated.json()));\n         this.server.storage().add(\"authenticated\", users.build());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 8, indentation should be the same level as line 73.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 88, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 8, indentation should be the same level as line 81.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "81",
                    "column": "51",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 241, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 305, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 337).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 305, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 329).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 237, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 238).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'this' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "column": "4",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/47/MkVersionEye.java\nindex 05abb9d50b9..72f14b27f08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/47/MkVersionEye.java\n@@ -28,7 +28,6 @@\n package com.amihaiemil.versioneye;\n \n import java.io.IOException;\n-\n import javax.json.Json;\n import javax.json.JsonArray;\n import javax.json.JsonArrayBuilder;\n@@ -42,45 +41,49 @@ import javax.json.JsonValue;\n  * @todo #13:30min/DEV Continue implementing the mock API.\n  *  Mocks for Users, Organizations Teams etc are needed,\n  */\n+\n+\n public final class MkVersionEye implements VersionEye {\n \n     /**\n      * VersionEye server.\n      */\n+\n+\n     private MkServer server;\n     \n     /**\n      * Authenticated user's username.\n      */\n+\n+\n     private String username;\n     \n     /**\n      * Ctor.\n      */\n+\n+\n     public MkVersionEye() {\n         this.server = new MkJsonServer();\n     }\n     /**\n      * Ctor.\n      * @param authenticated Mock Authenticated User.\n-     */\n-    public MkVersionEye(final Authenticated authenticated) {\n-        this(new MkJsonServer(), authenticated);\n-    }\n+     */ public MkVersionEye(final Authenticated authenticated) {\n+                                                                                            this(new MkJsonServer(), authenticated);\n+                                                                                        }\n     \n     /**\n      * Ctor.\n      * @param server VersionEye server storage. See {@link MkServer}\n      * @param user Mock Authenticated User.\n-     */\n-    public MkVersionEye(\n-        final MkServer server, final Authenticated user\n-    ) {\n-        this.server = server;\n-        this.username = user.username();\n-        this.authenticate(user);\n-    }\n-    \n+     */ public MkVersionEye(final MkServer server,final Authenticated user) {\n+                                                                                                                                                                                                                                                 this.server = server;\n+                                                                                                                                                                                                                                                                                                                 this.username = user.username();\n+                                                                                                                                                                                                                                                                                                                 this.authenticate(user);\n+                                                                                                                                                                                                                                             }\n+\n     @Override\n     public Services services() {\n         return new MkServices(this.server);\n@@ -105,17 +108,20 @@ public final class MkVersionEye implements VersionEye {\n      * Add authenticated user to the MkServer.\n      * @param authenticated The user to authenticate.\n      */\n+\n+\n     private void authenticate(final Authenticated authenticated) {\n-        JsonArray online = this.server.storage().build()\n-            .getJsonArray(\"authenticated\");\n-        final JsonArrayBuilder users = Json.createArrayBuilder();\n-        for(final JsonValue user: online) {\n-            users.add(user);\n-        }\n-        users.add(Json.createObjectBuilder().add(\n-            this.username, authenticated.json())\n-        );\n-        this.server.storage().add(\"authenticated\", users.build());\n+        JsonArray online=\n+this.server.storage()\n+.build()\n+.getJsonArray(\"authenticated\");\n+final JsonArrayBuilder users= Json.createArrayBuilder();\n+\n+\n+for(final JsonValue user: online) {\n+users.add(user);\n+} users.add(Json.createObjectBuilder().add(this.username, authenticated.json()));\n+this.server.storage().add(\"authenticated\", users.build());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler_random/47/MkVersionEye.java\nindex 05abb9d50b9..7ecd00b372f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/47/MkVersionEye.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler_random/47/MkVersionEye.java\n@@ -109,7 +109,7 @@ public final class MkVersionEye implements VersionEye {\n         JsonArray online = this.server.storage().build()\n             .getJsonArray(\"authenticated\");\n         final JsonArrayBuilder users = Json.createArrayBuilder();\n-        for(final JsonValue user: online) {\n+        for (final JsonValue user: online) {\n             users.add(user);\n         }\n         users.add(Json.createObjectBuilder().add(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
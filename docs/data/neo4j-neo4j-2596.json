{
    "project_name": "neo4j-neo4j",
    "error_id": "2596",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "151",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2596/TimeBasedTaskScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2596/TimeBasedTaskScheduler.java\nindex 327e7f5c3ce..2f9595c273d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2596/TimeBasedTaskScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2596/TimeBasedTaskScheduler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.scheduler;\n \n import java.util.Comparator;\n@@ -39,9 +40,9 @@ import org.neo4j.util.VisibleForTesting;\n \n final class TimeBasedTaskScheduler implements Runnable\n {\n-    private static final long NO_TASKS_PARK = TimeUnit.MINUTES.toNanos( 10 );\n+    private static final long NO_TASKS_PARK = TimeUnit.MINUTES.toNanos(10);\n     private static final Comparator<ScheduledJobHandle<?>> DEADLINE_COMPARATOR =\n-            Comparator.comparingLong( handle -> handle.nextDeadlineNanos );\n+      Comparator.comparingLong(handle -> handle.nextDeadlineNanos);\n \n     private final SystemNanoClock clock;\n     private final ThreadPoolManager pools;\n@@ -53,98 +54,98 @@ final class TimeBasedTaskScheduler implements Runnable\n     private volatile Thread timeKeeper;\n     private volatile boolean stopped;\n \n-    TimeBasedTaskScheduler( SystemNanoClock clock, ThreadPoolManager pools, FailedJobRunsStore failedJobRunsStore, LongSupplier jobIdSupplier )\n+    TimeBasedTaskScheduler(SystemNanoClock clock, ThreadPoolManager pools, FailedJobRunsStore failedJobRunsStore, LongSupplier jobIdSupplier)\n     {\n         this.clock = clock;\n         this.pools = pools;\n         this.failedJobRunsStore = failedJobRunsStore;\n         this.jobIdSupplier = jobIdSupplier;\n-        delayedTasks = new PriorityBlockingQueue<>( 42, DEADLINE_COMPARATOR );\n+        delayedTasks = new PriorityBlockingQueue<>(42, DEADLINE_COMPARATOR);\n         canceledTasks = new ConcurrentLinkedQueue<>();\n     }\n \n-    public JobHandle<?> submit( Group group, Runnable job, long initialDelayNanos, long reschedulingDelayNanos )\n+    public JobHandle<?> submit(Group group, Runnable job, long initialDelayNanos, long reschedulingDelayNanos)\n     {\n-        return submit( group, JobMonitoringParams.NOT_MONITORED, job, initialDelayNanos, reschedulingDelayNanos );\n+        return submit(group, JobMonitoringParams.NOT_MONITORED, job, initialDelayNanos, reschedulingDelayNanos);\n     }\n \n-    public JobHandle<?> submit( Group group, JobMonitoringParams jobMonitoringParams, Runnable job, long initialDelayNanos, long reschedulingDelayNanos )\n+    public JobHandle<?> submit(Group group, JobMonitoringParams jobMonitoringParams, Runnable job, long initialDelayNanos, long reschedulingDelayNanos)\n     {\n         long now = clock.nanos();\n         long nextDeadlineNanos = now + initialDelayNanos;\n \n         long jobId = -1;\n-        if ( jobMonitoringParams != JobMonitoringParams.NOT_MONITORED )\n+        if (jobMonitoringParams != JobMonitoringParams.NOT_MONITORED)\n         {\n             jobId = jobIdSupplier.getAsLong();\n         }\n \n-        ScheduledJobHandle<?> task = new ScheduledJobHandle<>( this,\n-                group,\n-                job,\n-                nextDeadlineNanos,\n-                reschedulingDelayNanos,\n-                jobMonitoringParams,\n-                clock.nanos(),\n-                monitoredJobs,\n-                failedJobRunsStore,\n-                clock,\n-                jobId );\n-\n-        if ( jobMonitoringParams != JobMonitoringParams.NOT_MONITORED )\n+        ScheduledJobHandle<?> task = new ScheduledJobHandle<>(this,\n+          group,\n+          job,\n+          nextDeadlineNanos,\n+          reschedulingDelayNanos,\n+          jobMonitoringParams,\n+          clock.nanos(),\n+          monitoredJobs,\n+          failedJobRunsStore,\n+          clock,\n+          jobId);\n+\n+        if (jobMonitoringParams != JobMonitoringParams.NOT_MONITORED)\n         {\n-            monitoredJobs.add( task );\n+            monitoredJobs.add(task);\n         }\n-        enqueueTask( task );\n+        enqueueTask(task);\n         return task;\n     }\n \n-    void enqueueTask( ScheduledJobHandle<?> newTasks )\n+    void enqueueTask(ScheduledJobHandle<?> newTasks)\n     {\n-        delayedTasks.offer( newTasks );\n-        LockSupport.unpark( timeKeeper );\n+        delayedTasks.offer(newTasks);\n+        LockSupport.unpark(timeKeeper);\n     }\n \n     @Override\n     public void run()\n     {\n         timeKeeper = Thread.currentThread();\n-        while ( !stopped )\n+        while (!stopped)\n         {\n             long timeToNextTickNanos = tick();\n-            if ( stopped )\n+            if (stopped)\n             {\n                 return;\n             }\n-            LockSupport.parkNanos( this, timeToNextTickNanos );\n+            LockSupport.parkNanos(this, timeToNextTickNanos);\n         }\n     }\n \n     public long tick()\n     {\n         long now = clock.nanos();\n-        long timeToNextDeadlineSinceStart = scheduleDueTasks( now );\n+        long timeToNextDeadlineSinceStart = scheduleDueTasks(now);\n         long processingTime = clock.nanos() - now;\n         return timeToNextDeadlineSinceStart - processingTime;\n     }\n \n-    private long scheduleDueTasks( long now )\n+    private long scheduleDueTasks(long now)\n     {\n-        if ( delayedTasks.isEmpty() )\n+        if (delayedTasks.isEmpty())\n         {\n             // We have no tasks to run. Park until we're woken up by an enqueueTask() call.\n             return NO_TASKS_PARK;\n         }\n-        while ( !canceledTasks.isEmpty() )\n+        while (!canceledTasks.isEmpty())\n         {\n             ScheduledJobHandle<?> canceled = canceledTasks.poll();\n-            delayedTasks.remove( canceled );\n-            monitoredJobs.remove( canceled );\n+            delayedTasks.remove(canceled);\n+            monitoredJobs.remove(canceled);\n         }\n-        while ( !stopped && !delayedTasks.isEmpty() && delayedTasks.peek().nextDeadlineNanos <= now )\n+        while (!stopped && !delayedTasks.isEmpty() && delayedTasks.peek().nextDeadlineNanos <= now)\n         {\n             ScheduledJobHandle<?> task = delayedTasks.poll();\n-            task.submitIfRunnable( pools );\n+            task.submitIfRunnable(pools);\n         }\n         return delayedTasks.isEmpty() ? NO_TASKS_PARK : delayedTasks.peek().nextDeadlineNanos - now;\n     }\n@@ -158,18 +159,18 @@ final class TimeBasedTaskScheduler implements Runnable\n     public void stop()\n     {\n         stopped = true;\n-        LockSupport.unpark( timeKeeper );\n+        LockSupport.unpark(timeKeeper);\n     }\n \n-    void cancelTask( ScheduledJobHandle<?> job )\n+    void cancelTask(ScheduledJobHandle<?> job)\n     {\n-        canceledTasks.add( job );\n+        canceledTasks.add(job);\n     }\n \n     List<MonitoredJobInfo> getMonitoredJobs()\n     {\n         return monitoredJobs.stream()\n-                            .map( ScheduledJobHandle::getMonitoringInfo )\n-                            .collect( Collectors.toList() );\n+          .map(ScheduledJobHandle::getMonitoringInfo)\n+          .collect(Collectors.toList());\n     }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
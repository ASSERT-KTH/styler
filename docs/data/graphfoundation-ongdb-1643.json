{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1643",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "124",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1643/JsonFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1643/JsonFormat.java\nindex 6ee4c9f60b0..a31eca45d77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1643/JsonFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1643/JsonFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr.formats;\n \n import java.net.URI;\n@@ -41,113 +42,109 @@ import static org.neo4j.server.rest.domain.JsonHelper.readJson;\n \n public class JsonFormat extends RepresentationFormat\n {\n-    public JsonFormat()\n-    {\n-        super( MediaType.APPLICATION_JSON_TYPE );\n-    }\n+  public JsonFormat()\n+  {\n+    super(MediaType.APPLICATION_JSON_TYPE);\n+  }\n \n-    @Override\n-    protected ListWriter serializeList( String type )\n-    {\n-        return new ListWrappingWriter( new ArrayList<>() );\n-    }\n+  @Override\n+  protected ListWriter serializeList(String type)\n+  {\n+    return new ListWrappingWriter(new ArrayList<>());\n+  }\n \n-    @Override\n-    protected String complete( ListWriter serializer )\n-    {\n-        return JsonHelper.createJsonFrom( ( (ListWrappingWriter) serializer ).data );\n-    }\n+  @Override\n+  protected String complete(ListWriter serializer)\n+  {\n+    return JsonHelper.createJsonFrom(((ListWrappingWriter) serializer).data);\n+  }\n \n-    @Override\n-    protected MappingWriter serializeMapping( String type )\n-    {\n-        return new MapWrappingWriter( new LinkedHashMap<>() );\n-    }\n+  @Override\n+  protected MappingWriter serializeMapping(String type)\n+  {\n+    return new MapWrappingWriter(new LinkedHashMap<>());\n+  }\n \n-    @Override\n-    protected String complete( MappingWriter serializer )\n-    {\n-        return JsonHelper.createJsonFrom( ( (MapWrappingWriter) serializer ).data );\n-    }\n+  @Override\n+  protected String complete(MappingWriter serializer)\n+  {\n+    return JsonHelper.createJsonFrom(((MapWrappingWriter) serializer).data);\n+  }\n+\n+  @Override\n+  protected String serializeValue(String type, Object value)\n+  {\n+    return JsonHelper.createJsonFrom(value);\n+  }\n+\n+  private boolean empty(String input)\n+  {\n+    return input == null || \"\".equals(input.trim());\n+  }\n \n-    @Override\n-    protected String serializeValue( String type, Object value )\n+  @Override\n+  public Map<String, Object> readMap(String input, String... requiredKeys) throws BadInputException\n+  {\n+    if (empty(input))\n     {\n-        return JsonHelper.createJsonFrom( value );\n+      return DefaultFormat.validateKeys(Collections.emptyMap(), requiredKeys);\n     }\n-\n-    private boolean empty( String input )\n+    try\n+    {\n+      return DefaultFormat.validateKeys(JsonHelper.jsonToMap(stripByteOrderMark(input)), requiredKeys);\n+    } catch (Exception ex)\n     {\n-        return input == null || \"\".equals( input.trim() );\n+      throw new BadInputException(ex);\n     }\n+  }\n \n-    @Override\n-    public Map<String, Object> readMap( String input, String... requiredKeys ) throws BadInputException\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public List<Object> readList(String input) throws BadInputException\n+  {\n+    try\n     {\n-        if ( empty( input ) )\n-        {\n-            return DefaultFormat.validateKeys( Collections.emptyMap(), requiredKeys );\n-        }\n-        try\n-        {\n-            return DefaultFormat.validateKeys( JsonHelper.jsonToMap( stripByteOrderMark( input ) ), requiredKeys );\n-        }\n-        catch ( Exception ex )\n-        {\n-            throw new BadInputException( ex );\n-        }\n+      return (List<Object>) JsonHelper.readJson(input);\n+    } catch (ClassCastException | JsonParseException ex)\n+    {\n+      throw new BadInputException(ex);\n     }\n+  }\n \n-    @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public List<Object> readList( String input ) throws BadInputException\n+  @Override\n+  public Object readValue(String input) throws BadInputException\n+  {\n+    if (empty(input))\n     {\n-        try\n-        {\n-            return (List<Object>) JsonHelper.readJson( input );\n-        }\n-        catch ( ClassCastException | JsonParseException ex )\n-        {\n-            throw new BadInputException( ex );\n-        }\n+      return Collections.emptyMap();\n     }\n-\n-    @Override\n-    public Object readValue( String input ) throws BadInputException\n+    try\n     {\n-        if ( empty( input ) )\n-        {\n-            return Collections.emptyMap();\n-        }\n-        try\n-        {\n-            return assertSupportedPropertyValue( readJson( stripByteOrderMark( input ) ) );\n-        }\n-        catch ( JsonParseException ex )\n-        {\n-            throw new BadInputException( ex );\n-        }\n+      return assertSupportedPropertyValue(readJson(stripByteOrderMark(input)));\n+    } catch (JsonParseException ex)\n+    {\n+      throw new BadInputException(ex);\n     }\n+  }\n \n-    @Override\n-    public URI readUri( String input ) throws BadInputException\n+  @Override\n+  public URI readUri(String input) throws BadInputException\n+  {\n+    try\n+    {\n+      return new URI(readValue(input).toString());\n+    } catch (URISyntaxException e)\n     {\n-        try\n-        {\n-            return new URI( readValue( input ).toString() );\n-        }\n-        catch ( URISyntaxException e )\n-        {\n-            throw new BadInputException( e );\n-        }\n+      throw new BadInputException(e);\n     }\n+  }\n \n-    private String stripByteOrderMark( String string )\n+  private String stripByteOrderMark(String string)\n+  {\n+    if (string != null && string.length() > 0 && string.charAt(0) == 0xfeff)\n     {\n-        if ( string != null && string.length() > 0 && string.charAt( 0 ) == 0xfeff )\n-        {\n-            return string.substring( 1 );\n-        }\n-        return string;\n+      return string.substring(1);\n     }\n+    return string;\n+  }\n }\n",
            "diff_size": 119
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1643/JsonFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1643/JsonFormat.java\nindex 6ee4c9f60b0..21e9570d447 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1643/JsonFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1643/JsonFormat.java\n@@ -55,7 +55,7 @@ public class JsonFormat extends RepresentationFormat\n     @Override\n     protected String complete( ListWriter serializer )\n     {\n-        return JsonHelper.createJsonFrom( ( (ListWrappingWriter) serializer ).data );\n+        return JsonHelper.createJsonFrom( ( (ListWrappingWriter) serializer).data );\n     }\n \n     @Override\n@@ -67,7 +67,7 @@ public class JsonFormat extends RepresentationFormat\n     @Override\n     protected String complete( MappingWriter serializer )\n     {\n-        return JsonHelper.createJsonFrom( ( (MapWrappingWriter) serializer ).data );\n+        return JsonHelper.createJsonFrom( ( (MapWrappingWriter) serializer).data );\n     }\n \n     @Override\n@@ -82,13 +82,14 @@ public class JsonFormat extends RepresentationFormat\n     }\n \n     @Override\n-    public Map<String, Object> readMap( String input, String... requiredKeys ) throws BadInputException\n+    public Map<String,Object> readMap( String input, String... requiredKeys ) throws BadInputException\n     {\n         if ( empty( input ) )\n         {\n             return DefaultFormat.validateKeys( Collections.emptyMap(), requiredKeys );\n         }\n-        try\n+\n+try\n         {\n             return DefaultFormat.validateKeys( JsonHelper.jsonToMap( stripByteOrderMark( input ) ), requiredKeys );\n         }\n@@ -119,7 +120,8 @@ public class JsonFormat extends RepresentationFormat\n         {\n             return Collections.emptyMap();\n         }\n-        try\n+\n+try\n         {\n             return assertSupportedPropertyValue( readJson( stripByteOrderMark( input ) ) );\n         }\n@@ -148,6 +150,7 @@ public class JsonFormat extends RepresentationFormat\n         {\n             return string.substring( 1 );\n         }\n-        return string;\n+\n+return string;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "80",
                    "column": "29",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "102",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "28",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "148",
                    "column": "50",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1643/JsonFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1643/JsonFormat.java\nindex 6ee4c9f60b0..fa93e5172aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1643/JsonFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1643/JsonFormat.java\n@@ -27,7 +27,6 @@ import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n import javax.ws.rs.core.MediaType;\n-\n import org.neo4j.server.rest.domain.JsonHelper;\n import org.neo4j.server.rest.domain.JsonParseException;\n import org.neo4j.server.rest.repr.BadInputException;\n@@ -35,8 +34,8 @@ import org.neo4j.server.rest.repr.DefaultFormat;\n import org.neo4j.server.rest.repr.ListWriter;\n import org.neo4j.server.rest.repr.MappingWriter;\n import org.neo4j.server.rest.repr.RepresentationFormat;\n-\n import static org.neo4j.server.rest.domain.JsonHelper.assertSupportedPropertyValue;\n+\n import static org.neo4j.server.rest.domain.JsonHelper.readJson;\n \n public class JsonFormat extends RepresentationFormat\n@@ -55,7 +54,7 @@ public class JsonFormat extends RepresentationFormat\n     @Override\n     protected String complete( ListWriter serializer )\n     {\n-        return JsonHelper.createJsonFrom( ( (ListWrappingWriter) serializer ).data );\n+        return JsonHelper.createJsonFrom( ((ListWrappingWriter) serializer).data );\n     }\n \n     @Override\n@@ -67,7 +66,7 @@ public class JsonFormat extends RepresentationFormat\n     @Override\n     protected String complete( MappingWriter serializer )\n     {\n-        return JsonHelper.createJsonFrom( ( (MapWrappingWriter) serializer ).data );\n+        return JsonHelper.createJsonFrom( ((MapWrappingWriter) serializer).data );\n     }\n \n     @Override\n@@ -78,16 +77,17 @@ public class JsonFormat extends RepresentationFormat\n \n     private boolean empty( String input )\n     {\n-        return input == null || \"\".equals( input.trim() );\n+        return input == null|| \"\".equals( input.trim() );\n     }\n \n     @Override\n-    public Map<String, Object> readMap( String input, String... requiredKeys ) throws BadInputException\n+    public Map<String,Object> readMap( String input, String... requiredKeys ) throws BadInputException\n     {\n         if ( empty( input ) )\n         {\n             return DefaultFormat.validateKeys( Collections.emptyMap(), requiredKeys );\n         }\n+\n         try\n         {\n             return DefaultFormat.validateKeys( JsonHelper.jsonToMap( stripByteOrderMark( input ) ), requiredKeys );\n@@ -99,7 +99,7 @@ public class JsonFormat extends RepresentationFormat\n     }\n \n     @Override\n-    @SuppressWarnings( \"unchecked\" )\n+    @ SuppressWarnings( \"unchecked\")\n     public List<Object> readList( String input ) throws BadInputException\n     {\n         try\n@@ -119,6 +119,7 @@ public class JsonFormat extends RepresentationFormat\n         {\n             return Collections.emptyMap();\n         }\n+\n         try\n         {\n             return assertSupportedPropertyValue( readJson( stripByteOrderMark( input ) ) );\n@@ -144,10 +145,11 @@ public class JsonFormat extends RepresentationFormat\n \n     private String stripByteOrderMark( String string )\n     {\n-        if ( string != null && string.length() > 0 && string.charAt( 0 ) == 0xfeff )\n+        if ( string != null&& string.length() > 0&& string.charAt( 0 ) == 0xfeff )\n         {\n             return string.substring( 1 );\n         }\n+\n         return string;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
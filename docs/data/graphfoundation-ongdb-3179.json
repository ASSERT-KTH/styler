{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3179",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3179/RecordIdIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3179/RecordIdIterator.java\nindex 88c603523c3..f2eeae4a99f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3179/RecordIdIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3179/RecordIdIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import org.neo4j.collection.primitive.PrimitiveLongIterator;\n@@ -36,113 +37,113 @@ import static org.neo4j.collection.primitive.PrimitiveLongCollections.range;\n  */\n public interface RecordIdIterator\n {\n-    /**\n-     * @return next batch of ids as {@link PrimitiveLongIterator}, or {@code null} if there are no more ids to return.\n-     */\n-    PrimitiveLongIterator nextBatch();\n+  /**\n+   * @return next batch of ids as {@link PrimitiveLongIterator}, or {@code null} if there are no more ids to return.\n+   */\n+  PrimitiveLongIterator nextBatch();\n+\n+  static RecordIdIterator backwards(long lowIncluded, long highExcluded, Configuration config)\n+  {\n+    return new Backwards(lowIncluded, highExcluded, config);\n+  }\n+\n+  static RecordIdIterator forwards(long lowIncluded, long highExcluded, Configuration config)\n+  {\n+    return new Forwards(lowIncluded, highExcluded, config);\n+  }\n+\n+  static RecordIdIterator allIn(RecordStore<? extends AbstractBaseRecord> store, Configuration config)\n+  {\n+    return forwards(store.getNumberOfReservedLowIds(), store.getHighId(), config);\n+  }\n+\n+  static RecordIdIterator allInReversed(RecordStore<? extends AbstractBaseRecord> store,\n+                                        Configuration config)\n+  {\n+    return backwards(store.getNumberOfReservedLowIds(), store.getHighId(), config);\n+  }\n+\n+  class Forwards implements RecordIdIterator\n+  {\n+    private final long lowIncluded;\n+    private final long highExcluded;\n+    private final int batchSize;\n+    private long startId;\n+\n+    public Forwards(long lowIncluded, long highExcluded, Configuration config)\n+    {\n+      this.lowIncluded = lowIncluded;\n+      this.highExcluded = highExcluded;\n+      this.batchSize = config.batchSize();\n+      this.startId = lowIncluded;\n+    }\n \n-    static RecordIdIterator backwards( long lowIncluded, long highExcluded, Configuration config )\n+    @Override\n+    public PrimitiveLongIterator nextBatch()\n     {\n-        return new Backwards( lowIncluded, highExcluded, config );\n+      if (startId >= highExcluded)\n+      {\n+        return null;\n+      }\n+\n+      long endId = min(highExcluded, findRoofId(startId));\n+      PrimitiveLongIterator result = range(startId, endId - 1 /*excluded*/);\n+      startId = endId;\n+      return result;\n     }\n \n-    static RecordIdIterator forwards( long lowIncluded, long highExcluded, Configuration config )\n+    private long findRoofId(long floorId)\n     {\n-        return new Forwards( lowIncluded, highExcluded, config );\n+      int rest = (int) (floorId % batchSize);\n+      return max(rest == 0 ? floorId + batchSize : floorId + batchSize - rest, lowIncluded);\n     }\n \n-    static RecordIdIterator allIn( RecordStore<? extends AbstractBaseRecord> store, Configuration config )\n+    @Override\n+    public String toString()\n+    {\n+      return \"[\" + lowIncluded + \"-\" + highExcluded + \"[\";\n+    }\n+  }\n+\n+  class Backwards implements RecordIdIterator\n+  {\n+    private final long lowIncluded;\n+    private final long highExcluded;\n+    private final int batchSize;\n+    private long endId;\n+\n+    public Backwards(long lowIncluded, long highExcluded, Configuration config)\n     {\n-        return forwards( store.getNumberOfReservedLowIds(), store.getHighId(), config );\n+      this.lowIncluded = lowIncluded;\n+      this.highExcluded = highExcluded;\n+      this.batchSize = config.batchSize();\n+      this.endId = highExcluded;\n     }\n \n-    static RecordIdIterator allInReversed( RecordStore<? extends AbstractBaseRecord> store,\n-            Configuration config )\n+    @Override\n+    public PrimitiveLongIterator nextBatch()\n     {\n-        return backwards( store.getNumberOfReservedLowIds(), store.getHighId(), config );\n+      if (endId <= lowIncluded)\n+      {\n+        return null;\n+      }\n+\n+      long startId = findFloorId(endId);\n+      PrimitiveLongIterator result = range(startId, endId - 1 /*excluded*/);\n+      endId = max(lowIncluded, startId);\n+      return result;\n     }\n \n-    class Forwards implements RecordIdIterator\n+    private long findFloorId(long roofId)\n     {\n-        private final long lowIncluded;\n-        private final long highExcluded;\n-        private final int batchSize;\n-        private long startId;\n-\n-        public Forwards( long lowIncluded, long highExcluded, Configuration config )\n-        {\n-            this.lowIncluded = lowIncluded;\n-            this.highExcluded = highExcluded;\n-            this.batchSize = config.batchSize();\n-            this.startId = lowIncluded;\n-        }\n-\n-        @Override\n-        public PrimitiveLongIterator nextBatch()\n-        {\n-            if ( startId >= highExcluded )\n-            {\n-                return null;\n-            }\n-\n-            long endId = min( highExcluded, findRoofId( startId ) );\n-            PrimitiveLongIterator result = range( startId, endId - 1 /*excluded*/ );\n-            startId = endId;\n-            return result;\n-        }\n-\n-        private long findRoofId( long floorId )\n-        {\n-            int rest = (int) (floorId % batchSize);\n-            return max( rest == 0 ? floorId + batchSize : floorId + batchSize - rest, lowIncluded );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"[\" + lowIncluded + \"-\" + highExcluded + \"[\";\n-        }\n+      int rest = (int) (roofId % batchSize);\n+      return max(rest == 0 ? roofId - batchSize : roofId - rest, lowIncluded);\n     }\n \n-    class Backwards implements RecordIdIterator\n+    @Override\n+    public String toString()\n     {\n-        private final long lowIncluded;\n-        private final long highExcluded;\n-        private final int batchSize;\n-        private long endId;\n-\n-        public Backwards( long lowIncluded, long highExcluded, Configuration config )\n-        {\n-            this.lowIncluded = lowIncluded;\n-            this.highExcluded = highExcluded;\n-            this.batchSize = config.batchSize();\n-            this.endId = highExcluded;\n-        }\n-\n-        @Override\n-        public PrimitiveLongIterator nextBatch()\n-        {\n-            if ( endId <= lowIncluded )\n-            {\n-                return null;\n-            }\n-\n-            long startId = findFloorId( endId );\n-            PrimitiveLongIterator result = range( startId, endId - 1 /*excluded*/ );\n-            endId = max( lowIncluded, startId );\n-            return result;\n-        }\n-\n-        private long findFloorId( long roofId )\n-        {\n-            int rest = (int) (roofId % batchSize);\n-            return max( rest == 0 ? roofId - batchSize : roofId - rest, lowIncluded );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"]\" + highExcluded + \"-\" + lowIncluded + \"]\";\n-        }\n+      return \"]\" + highExcluded + \"-\" + lowIncluded + \"]\";\n     }\n+  }\n }\n",
            "diff_size": 165
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "96",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3179/RecordIdIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3179/RecordIdIterator.java\nindex 88c603523c3..4467d2e0917 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3179/RecordIdIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3179/RecordIdIterator.java\n@@ -93,7 +93,7 @@ public interface RecordIdIterator\n \n         private long findRoofId( long floorId )\n         {\n-            int rest = (int) (floorId % batchSize);\n+            int rest = ( int) ( floorId % batchSize);\n             return max( rest == 0 ? floorId + batchSize : floorId + batchSize - rest, lowIncluded );\n         }\n \n@@ -135,7 +135,7 @@ public interface RecordIdIterator\n \n         private long findFloorId( long roofId )\n         {\n-            int rest = (int) (roofId % batchSize);\n+            int rest = ( int) ( roofId % batchSize);\n             return max( rest == 0 ? roofId - batchSize : roofId - rest, lowIncluded );\n         }\n \n@@ -145,4 +145,4 @@ public interface RecordIdIterator\n             return \"]\" + highExcluded + \"-\" + lowIncluded + \"]\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "180",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.mpi.adapter.component;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/180/AdapterComponentMpiOrchImpl.java\nindex b842cd63643..169450593a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/180/AdapterComponentMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/180/AdapterComponentMpiOrchImpl.java\nindex b842cd63643..4efc0fd80e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/180/AdapterComponentMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -32,27 +33,26 @@ import org.apache.log4j.Logger;\n import org.hl7.v3.PRPAIN201306UV02;\n \n /**\n- *\n  * @author westberg\n  */\n public class AdapterComponentMpiOrchImpl {\n-    private static final Logger LOG = Logger.getLogger(AdapterComponentMpiOrchImpl.class);\n+  private static final Logger LOG = Logger.getLogger(AdapterComponentMpiOrchImpl.class);\n \n-    /**\n-     * Call the find candidates on the MPI.\n-     *\n-     * @param findCandidatesRequest The find candidates on the MPI\n-     * @param assertion The assertion information.\n-     * @return The patients found.\n-     */\n-    public PRPAIN201306UV02 findCandidates(org.hl7.v3.PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {\n-        // return PatientChecker.FindPatient(findCandidatesRequest);\n-        LOG.trace(\"Entering AdapterComponentMpiOrchImpl.findCandidates method...\");\n+  /**\n+   * Call the find candidates on the MPI.\n+   *\n+   * @param findCandidatesRequest The find candidates on the MPI\n+   * @param assertion             The assertion information.\n+   * @return The patients found.\n+   */\n+  public PRPAIN201306UV02 findCandidates(org.hl7.v3.PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {\n+    // return PatientChecker.FindPatient(findCandidatesRequest);\n+    LOG.trace(\"Entering AdapterComponentMpiOrchImpl.findCandidates method...\");\n \n-        AdapterComponentMpiChecker oMpiChecker = null;\n-        AdapterComponentMpiCheckerObjectFactory oFactory = new AdapterComponentMpiCheckerObjectFactory();\n-        oMpiChecker = oFactory.getAdapterComponentMpiChecker();\n-        PRPAIN201306UV02 oResponse = oMpiChecker.findPatient(findCandidatesRequest);\n-        return oResponse;\n-    }\n+    AdapterComponentMpiChecker oMpiChecker = null;\n+    AdapterComponentMpiCheckerObjectFactory oFactory = new AdapterComponentMpiCheckerObjectFactory();\n+    oMpiChecker = oFactory.getAdapterComponentMpiChecker();\n+    PRPAIN201306UV02 oResponse = oMpiChecker.findPatient(findCandidatesRequest);\n+    return oResponse;\n+  }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/180/AdapterComponentMpiOrchImpl.java\nindex b842cd63643..d3179e097bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/180/AdapterComponentMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -50,9 +51,11 @@ public class AdapterComponentMpiOrchImpl {\n         LOG.trace(\"Entering AdapterComponentMpiOrchImpl.findCandidates method...\");\n \n         AdapterComponentMpiChecker oMpiChecker = null;\n-        AdapterComponentMpiCheckerObjectFactory oFactory = new AdapterComponentMpiCheckerObjectFactory();\n+\n+AdapterComponentMpiCheckerObjectFactory oFactory = new AdapterComponentMpiCheckerObjectFactory();\n         oMpiChecker = oFactory.getAdapterComponentMpiChecker();\n         PRPAIN201306UV02 oResponse = oMpiChecker.findPatient(findCandidatesRequest);\n-        return oResponse;\n+\n+return oResponse;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/180/AdapterComponentMpiOrchImpl.java\nindex b842cd63643..a3577d5faae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/180/AdapterComponentMpiOrchImpl.java\n@@ -27,7 +27,6 @@\n package gov.hhs.fha.nhinc.mpi.adapter.component;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n-\n import org.apache.log4j.Logger;\n import org.hl7.v3.PRPAIN201306UV02;\n \n@@ -35,7 +34,10 @@ import org.hl7.v3.PRPAIN201306UV02;\n  *\n  * @author westberg\n  */\n+\n+\n public class AdapterComponentMpiOrchImpl {\n+\n     private static final Logger LOG = Logger.getLogger(AdapterComponentMpiOrchImpl.class);\n \n     /**\n@@ -45,14 +47,16 @@ public class AdapterComponentMpiOrchImpl {\n      * @param assertion The assertion information.\n      * @return The patients found.\n      */\n+\n+\n     public PRPAIN201306UV02 findCandidates(org.hl7.v3.PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {\n         // return PatientChecker.FindPatient(findCandidatesRequest);\n         LOG.trace(\"Entering AdapterComponentMpiOrchImpl.findCandidates method...\");\n-\n         AdapterComponentMpiChecker oMpiChecker = null;\n         AdapterComponentMpiCheckerObjectFactory oFactory = new AdapterComponentMpiCheckerObjectFactory();\n         oMpiChecker = oFactory.getAdapterComponentMpiChecker();\n         PRPAIN201306UV02 oResponse = oMpiChecker.findPatient(findCandidatesRequest);\n         return oResponse;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/180/AdapterComponentMpiOrchImpl.java\nindex b842cd63643..169450593a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/180/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/180/AdapterComponentMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
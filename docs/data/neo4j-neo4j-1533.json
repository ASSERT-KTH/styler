{
    "project_name": "neo4j-neo4j",
    "error_id": "1533",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1533/ConstraintCreator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1533/ConstraintCreator.java\nindex 044ae9b488c..fee183cef36 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1533/ConstraintCreator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1533/ConstraintCreator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.schema;\n \n import java.util.Map;\n@@ -28,10 +29,10 @@ import org.neo4j.graphdb.ConstraintViolationException;\n  * A builder for entering details about a constraint to create. After all details have been entered\n  * {@link #create()} must be called for the constraint to actually be created. A constraint creator knows\n  * which {@link org.neo4j.graphdb.Label label} it is to be created for.\n- *\n+ * <p>\n  * All methods except {@link #create()} will return an {@link ConstraintCreator} which should be\n  * used for further interaction.\n- *\n+ * <p>\n  * Compatibility note: New methods may be added to this interface without notice,\n  * backwards compatibility is only guaranteed for clients of this interface, not for\n  * implementors.\n@@ -48,7 +49,7 @@ public interface ConstraintCreator\n      * @param propertyKey property to impose the uniqueness constraint for.\n      * @return a {@link ConstraintCreator} instance to be used for further interaction.\n      */\n-    ConstraintCreator assertPropertyIsUnique( String propertyKey );\n+    ConstraintCreator assertPropertyIsUnique(String propertyKey);\n \n     /**\n      * Imposes an existence constraint for the given property.\n@@ -57,7 +58,7 @@ public interface ConstraintCreator\n      * @param propertyKey property to impose the existence constraint for.\n      * @return a {@link ConstraintCreator}  instance to be used for further interaction.\n      */\n-    ConstraintCreator assertPropertyExists( String propertyKey );\n+    ConstraintCreator assertPropertyExists(String propertyKey);\n \n     /**\n      * Imposes both a uniqueness constraint, and a property existence constraint, for the given property.\n@@ -66,7 +67,7 @@ public interface ConstraintCreator\n      * @param propertyKey property to use as the node key.\n      * @return a {@link ConstraintCreator} instance to be used for further interaction.\n      */\n-    ConstraintCreator assertPropertyIsNodeKey( String propertyKey );\n+    ConstraintCreator assertPropertyIsNodeKey(String propertyKey);\n \n     /**\n      * Assign a name to the constraint, which will then be returned from {@link ConstraintDefinition#getName()}, and can be used for finding the constraint\n@@ -75,7 +76,7 @@ public interface ConstraintCreator\n      * @param name the name to give the constraint.\n      * @return a {@link ConstraintCreator} instance to be used for further interaction.\n      */\n-    ConstraintCreator withName( String name );\n+    ConstraintCreator withName(String name);\n \n     /**\n      * Assign an index type to the constraint. If the constraint is not backed by an index, then the presence of an index type will cause {@link #create()} to\n@@ -85,7 +86,7 @@ public interface ConstraintCreator\n      * @return a {@link ConstraintCreator} instance to be used for further interaction.\n      * @see IndexType\n      */\n-    ConstraintCreator withIndexType( IndexType indexType );\n+    ConstraintCreator withIndexType(IndexType indexType);\n \n     /**\n      * Set index-specific index configurations. If the constraint is not backed by an index, then the presence of an index configuration will cause\n@@ -96,14 +97,14 @@ public interface ConstraintCreator\n      * @param indexConfiguration The index settings in the index configuration that differ from their defaults.\n      * @return a {@link ConstraintCreator} instance to be used for further interaction.\n      */\n-    ConstraintCreator withIndexConfiguration( Map<IndexSetting,Object> indexConfiguration );\n+    ConstraintCreator withIndexConfiguration(Map<IndexSetting, Object> indexConfiguration);\n \n     /**\n      * Creates a constraint with the details specified by the other methods in this interface.\n      *\n      * @return the created {@link ConstraintDefinition constraint}.\n      * @throws ConstraintViolationException if creating this constraint would violate any\n-     * existing constraints.\n+     *                                      existing constraints.\n      */\n     ConstraintDefinition create() throws ConstraintViolationException;\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1533/ConstraintCreator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1533/ConstraintCreator.java\nindex 044ae9b488c..a5b965c0e34 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1533/ConstraintCreator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1533/ConstraintCreator.java\n@@ -106,4 +106,4 @@ public interface ConstraintCreator\n      * existing constraints.\n      */\n     ConstraintDefinition create() throws ConstraintViolationException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
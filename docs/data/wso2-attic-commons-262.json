{
    "project_name": "wso2-attic-commons",
    "error_id": "262",
    "information": {
        "errors": [
            {
                "line": "385",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 131).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      case WSDLConstants.PORT:\n      {\n        Port port = (Port)((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().createPort();\n        port.setEnclosingDefinition(getEnclosingDefinition());\n        getEPorts().add(port);\n        port.setElement(child);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/262/ServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/262/ServiceImpl.java\nindex 278a6b032f0..4f3da9c0470 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/262/ServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/262/ServiceImpl.java\n@@ -382,7 +382,8 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n     {\n       case WSDLConstants.PORT:\n       {\n-        Port port = (Port)((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().createPort();\n+          Port port = (Port)((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().\n+      createPort();\n         port.setEnclosingDefinition(getEnclosingDefinition());\n         getEPorts().add(port);\n         port.setElement(child);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/262/ServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/262/ServiceImpl.java\nindex 278a6b032f0..29de61a67dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/262/ServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/262/ServiceImpl.java\n@@ -8,6 +8,7 @@\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n+\n package org.eclipse.wst.wsdl.internal.impl;\n \n \n@@ -54,8 +55,7 @@ import org.w3c.dom.Element;\n  *\n  * @generated\n  */\n-public class ServiceImpl extends ExtensibleElementImpl implements Service\n-{\n+public class ServiceImpl extends ExtensibleElementImpl implements Service {\n   /**\n    * This class is not intended to be serialized.\n    * serialVersionUID is assigned with 1L to avoid\n@@ -67,9 +67,10 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n    * The default value of the '{@link #getQName() <em>QName</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #getQName()\n+   *\n    * @generated\n    * @ordered\n+   * @see #getQName()\n    */\n   protected static final QName QNAME_EDEFAULT = null;\n \n@@ -77,9 +78,10 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n    * The cached value of the '{@link #getQName() <em>QName</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #getQName()\n+   *\n    * @generated\n    * @ordered\n+   * @see #getQName()\n    */\n   protected QName qName = QNAME_EDEFAULT;\n \n@@ -87,9 +89,10 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n    * The default value of the '{@link #isUndefined() <em>Undefined</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #isUndefined()\n+   *\n    * @generated\n    * @ordered\n+   * @see #isUndefined()\n    */\n   protected static final boolean UNDEFINED_EDEFAULT = false;\n \n@@ -97,9 +100,10 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n    * The cached value of the '{@link #isUndefined() <em>Undefined</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #isUndefined()\n+   *\n    * @generated\n    * @ordered\n+   * @see #isUndefined()\n    */\n   protected boolean undefined = UNDEFINED_EDEFAULT;\n \n@@ -107,87 +111,89 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n    * The cached value of the '{@link #getEPorts() <em>EPorts</em>}' containment reference list.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #getEPorts()\n+   *\n    * @generated\n    * @ordered\n+   * @see #getEPorts()\n    */\n   protected EList ePorts;\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  protected ServiceImpl()\n-  {\n+  protected ServiceImpl() {\n     super();\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  protected EClass eStaticClass()\n-  {\n+  protected EClass eStaticClass() {\n     return WSDLPackage.Literals.SERVICE;\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public QName getQName()\n-  {\n+  public QName getQName() {\n     return qName;\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void setQName(QName newQName)\n-  {\n+  public void setQName(QName newQName) {\n     QName oldQName = qName;\n     qName = newQName;\n-    if (eNotificationRequired())\n+    if (eNotificationRequired()) {\n       eNotify(new ENotificationImpl(this, Notification.SET, WSDLPackage.SERVICE__QNAME, oldQName, qName));\n+    }\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public boolean isUndefined()\n-  {\n+  public boolean isUndefined() {\n     return undefined;\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void setUndefined(boolean newUndefined)\n-  {\n+  public void setUndefined(boolean newUndefined) {\n     boolean oldUndefined = undefined;\n     undefined = newUndefined;\n-    if (eNotificationRequired())\n+    if (eNotificationRequired()) {\n       eNotify(new ENotificationImpl(this, Notification.SET, WSDLPackage.SERVICE__UNDEFINED, oldUndefined, undefined));\n+    }\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public EList getEPorts()\n-  {\n-    if (ePorts == null)\n-    {\n+  public EList getEPorts() {\n+    if (ePorts == null) {\n       ePorts = new EObjectContainmentEList(Port.class, this, WSDLPackage.SERVICE__EPORTS);\n     }\n     return ePorts;\n@@ -196,27 +202,26 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n   /**\n    * <!-- begin-user-doc -->\n    * Add a port to this service.\n+   *\n    * @param port the port to be added\n-   * <!-- end-user-doc -->\n+   *             <!-- end-user-doc -->\n    * @generated NOT\n    */\n-  public void addPort(javax.wsdl.Port port)\n-  {\n-    getEPorts().add((Port)port);\n+  public void addPort(javax.wsdl.Port port) {\n+    getEPorts().add((Port) port);\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * Get all the ports defined here.\n    * <!-- end-user-doc -->\n+   *\n    * @generated NOT\n    */\n-  public Map getPorts()\n-  {\n+  public Map getPorts() {\n     HashMap hashMap = new HashMap();\n-    for (Iterator i = getEPorts().iterator(); i.hasNext();)\n-    {\n-      Port port = (Port)i.next();\n+    for (Iterator i = getEPorts().iterator(); i.hasNext(); ) {\n+      Port port = (Port) i.next();\n       hashMap.put(port.getName(), port);\n     }\n     return hashMap;\n@@ -232,14 +237,11 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n    * <!-- end-user-doc -->\n    * @generated NOT\n    */\n-  public javax.wsdl.Port getPort(String name)\n-  {\n+  public javax.wsdl.Port getPort(String name) {\n     Port result = null;\n-    for (Iterator i = getEPorts().iterator(); i.hasNext();)\n-    {\n-      Port port = (Port)i.next();\n-      if (name.equals(port.getName()))\n-      {\n+    for (Iterator i = getEPorts().iterator(); i.hasNext(); ) {\n+      Port port = (Port) i.next();\n+      if (name.equals(port.getName())) {\n         result = port;\n         break;\n       }\n@@ -250,14 +252,13 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.SERVICE__EPORTS:\n-      return ((InternalEList)getEPorts()).basicRemove(otherEnd, msgs);\n+  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {\n+    switch (featureID) {\n+    case WSDLPackage.SERVICE__EPORTS:\n+      return ((InternalEList) getEPorts()).basicRemove(otherEnd, msgs);\n     }\n     return super.eInverseRemove(otherEnd, featureID, msgs);\n   }\n@@ -265,17 +266,16 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public Object eGet(int featureID, boolean resolve, boolean coreType)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.SERVICE__QNAME:\n+  public Object eGet(int featureID, boolean resolve, boolean coreType) {\n+    switch (featureID) {\n+    case WSDLPackage.SERVICE__QNAME:\n       return getQName();\n-      case WSDLPackage.SERVICE__UNDEFINED:\n+    case WSDLPackage.SERVICE__UNDEFINED:\n       return isUndefined() ? Boolean.TRUE : Boolean.FALSE;\n-      case WSDLPackage.SERVICE__EPORTS:\n+    case WSDLPackage.SERVICE__EPORTS:\n       return getEPorts();\n     }\n     return super.eGet(featureID, resolve, coreType);\n@@ -284,21 +284,20 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void eSet(int featureID, Object newValue)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.SERVICE__QNAME:\n-      setQName((QName)newValue);\n+  public void eSet(int featureID, Object newValue) {\n+    switch (featureID) {\n+    case WSDLPackage.SERVICE__QNAME:\n+      setQName((QName) newValue);\n       return;\n-      case WSDLPackage.SERVICE__UNDEFINED:\n-      setUndefined(((Boolean)newValue).booleanValue());\n+    case WSDLPackage.SERVICE__UNDEFINED:\n+      setUndefined(((Boolean) newValue).booleanValue());\n       return;\n-      case WSDLPackage.SERVICE__EPORTS:\n+    case WSDLPackage.SERVICE__EPORTS:\n       getEPorts().clear();\n-      getEPorts().addAll((Collection)newValue);\n+      getEPorts().addAll((Collection) newValue);\n       return;\n     }\n     super.eSet(featureID, newValue);\n@@ -307,19 +306,18 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void eUnset(int featureID)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.SERVICE__QNAME:\n+  public void eUnset(int featureID) {\n+    switch (featureID) {\n+    case WSDLPackage.SERVICE__QNAME:\n       setQName(QNAME_EDEFAULT);\n       return;\n-      case WSDLPackage.SERVICE__UNDEFINED:\n+    case WSDLPackage.SERVICE__UNDEFINED:\n       setUndefined(UNDEFINED_EDEFAULT);\n       return;\n-      case WSDLPackage.SERVICE__EPORTS:\n+    case WSDLPackage.SERVICE__EPORTS:\n       getEPorts().clear();\n       return;\n     }\n@@ -329,17 +327,16 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public boolean eIsSet(int featureID)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.SERVICE__QNAME:\n+  public boolean eIsSet(int featureID) {\n+    switch (featureID) {\n+    case WSDLPackage.SERVICE__QNAME:\n       return QNAME_EDEFAULT == null ? qName != null : !QNAME_EDEFAULT.equals(qName);\n-      case WSDLPackage.SERVICE__UNDEFINED:\n+    case WSDLPackage.SERVICE__UNDEFINED:\n       return undefined != UNDEFINED_EDEFAULT;\n-      case WSDLPackage.SERVICE__EPORTS:\n+    case WSDLPackage.SERVICE__EPORTS:\n       return ePorts != null && !ePorts.isEmpty();\n     }\n     return super.eIsSet(featureID);\n@@ -348,12 +345,13 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public String toString()\n-  {\n-    if (eIsProxy())\n+  public String toString() {\n+    if (eIsProxy()) {\n       return super.toString();\n+    }\n \n     StringBuffer result = new StringBuffer(super.toString());\n     result.append(\" (qName: \"); //$NON-NLS-1$\n@@ -368,65 +366,52 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n   // Reconcile methods\n   //\n \n-  public void reconcileAttributes(Element changedElement)\n-  {\n+  public void reconcileAttributes(Element changedElement) {\n     Definition definition = getEnclosingDefinition();\n     String name = changedElement.getAttribute(WSDLConstants.NAME_ATTRIBUTE);\n     QName qname = new QName(definition.getTargetNamespace(), name == null ? \"\" : name); //$NON-NLS-1$\n     setQName(qname);\n   }\n \n-  public void handleUnreconciledElement(Element child, Collection remainingModelObjects)\n-  {\n-    switch (WSDLUtil.getInstance().getWSDLType(child))\n-    {\n-      case WSDLConstants.PORT:\n-      {\n-        Port port = (Port)((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().createPort();\n-        port.setEnclosingDefinition(getEnclosingDefinition());\n-        getEPorts().add(port);\n-        port.setElement(child);\n-        break;\n-      }\n-      case WSDLConstants.DOCUMENTATION:\n-      {\n-        setDocumentationElement(child);\n-        break;\n-      }\n-      default:\n-      {\n-        super.handleUnreconciledElement(child, remainingModelObjects);\n-        break;\n-      }\n+  public void handleUnreconciledElement(Element child, Collection remainingModelObjects) {\n+    switch (WSDLUtil.getInstance().getWSDLType(child)) {\n+    case WSDLConstants.PORT: {\n+      Port port = (Port) ((WSDLPackage) EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory()\n+        .createPort();\n+      port.setEnclosingDefinition(getEnclosingDefinition());\n+      getEPorts().add(port);\n+      port.setElement(child);\n+      break;\n+    }\n+    case WSDLConstants.DOCUMENTATION: {\n+      setDocumentationElement(child);\n+      break;\n+    }\n+    default: {\n+      super.handleUnreconciledElement(child, remainingModelObjects);\n+      break;\n+    }\n     }\n   }\n \n-  protected void handleReconciliation(Collection remainingModelObjects)\n-  {\n-    for (Iterator i = remainingModelObjects.iterator(); i.hasNext();)\n-    {\n+  protected void handleReconciliation(Collection remainingModelObjects) {\n+    for (Iterator i = remainingModelObjects.iterator(); i.hasNext(); ) {\n       remove(i.next());\n     }\n   }\n \n-  private void remove(Object modelObject)\n-  {\n+  private void remove(Object modelObject) {\n     List list = getList(modelObject);\n-    if (list != null)\n-    {\n+    if (list != null) {\n       list.remove(modelObject);\n     }\n   }\n \n-  private List getList(Object modelObject)\n-  {\n+  private List getList(Object modelObject) {\n     List result = null;\n-    if (modelObject instanceof Port)\n-    {\n+    if (modelObject instanceof Port) {\n       result = getEPorts();\n-    }\n-    else if (modelObject instanceof ExtensibilityElement)\n-    {\n+    } else if (modelObject instanceof ExtensibilityElement) {\n       result = getExtensibilityElements();\n     }\n     return result;\n@@ -436,38 +421,35 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n   // For reconciliation: Model -> DOM\n   //\n \n-  protected void changeAttribute(EAttribute eAttribute)\n-  {\n-    if (isReconciling)\n+  protected void changeAttribute(EAttribute eAttribute) {\n+    if (isReconciling) {\n       return;\n+    }\n \n     super.changeAttribute(eAttribute);\n     Element theElement = getElement();\n-    if (theElement != null)\n-    {\n-      if (eAttribute == null || eAttribute == WSDLPackage.Literals.SERVICE__QNAME)\n+    if (theElement != null) {\n+      if (eAttribute == null || eAttribute == WSDLPackage.Literals.SERVICE__QNAME) {\n         niceSetAttribute(theElement, WSDLConstants.NAME_ATTRIBUTE, getQName().getLocalPart());\n+      }\n     }\n   }\n \n-  public Element createElement()\n-  {\n+  public Element createElement() {\n     Element newElement = createElement(WSDLConstants.SERVICE);\n     setElement(newElement);\n \n     Iterator iterator = getExtensibilityElements().iterator();\n-    while (iterator.hasNext())\n-    {\n-      ExtensibilityElement extensibilityElement = (ExtensibilityElement)iterator.next();\n-      Element child = ((ExtensibilityElementImpl)extensibilityElement).createElement();\n+    while (iterator.hasNext()) {\n+      ExtensibilityElement extensibilityElement = (ExtensibilityElement) iterator.next();\n+      Element child = ((ExtensibilityElementImpl) extensibilityElement).createElement();\n       newElement.appendChild(child);\n     }\n \n     iterator = getEPorts().iterator();\n-    while (iterator.hasNext())\n-    {\n-      Port port = (Port)iterator.next();\n-      Element child = ((PortImpl)port).createElement();\n+    while (iterator.hasNext()) {\n+      Port port = (Port) iterator.next();\n+      Element child = ((PortImpl) port).createElement();\n       newElement.appendChild(child);\n     }\n \n",
            "diff_size": 162
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "385",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/262/ServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/262/ServiceImpl.java\nindex 278a6b032f0..4f3da9c0470 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/262/ServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/262/ServiceImpl.java\n@@ -382,7 +382,8 @@ public class ServiceImpl extends ExtensibleElementImpl implements Service\n     {\n       case WSDLConstants.PORT:\n       {\n-        Port port = (Port)((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().createPort();\n+          Port port = (Port)((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().\n+      createPort();\n         port.setEnclosingDefinition(getEnclosingDefinition());\n         getEPorts().add(port);\n         port.setElement(child);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
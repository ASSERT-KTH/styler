{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3308",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "104",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "128",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "128",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3308/AdminTool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3308/AdminTool.java\nindex 6b1c4e7739a..725e87a3c5e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3308/AdminTool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3308/AdminTool.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin;\n \n import java.io.IOException;\n@@ -33,173 +34,168 @@ import static org.neo4j.commandline.Util.neo4jVersion;\n \n public class AdminTool\n {\n-    public static final int STATUS_SUCCESS = 0;\n-    public static final int STATUS_ERROR = 1;\n-    public static final String NEO4J_HOME = System.getenv().getOrDefault( \"NEO4J_HOME\", \"\" );\n-    public static final String NEO4J_CONF = System.getenv().getOrDefault( \"NEO4J_CONF\", \"\" );\n-    public static final String NEO4J_DEBUG = System.getenv().getOrDefault( \"NEO4J_DEBUG\", null );\n-\n-    public static void main( String[] args ) throws IOException\n+  public static final int STATUS_SUCCESS = 0;\n+  public static final int STATUS_ERROR = 1;\n+  public static final String NEO4J_HOME = System.getenv().getOrDefault(\"NEO4J_HOME\", \"\");\n+  public static final String NEO4J_CONF = System.getenv().getOrDefault(\"NEO4J_CONF\", \"\");\n+  public static final String NEO4J_DEBUG = System.getenv().getOrDefault(\"NEO4J_DEBUG\", null);\n+\n+  public static void main(String[] args) throws IOException\n+  {\n+    Path homeDir = Paths.get(NEO4J_HOME);\n+    Path configDir = Paths.get(NEO4J_CONF);\n+    boolean debug = NEO4J_DEBUG != null;\n+\n+    try (RealOutsideWorld outsideWorld = new RealOutsideWorld())\n     {\n-        Path homeDir = Paths.get( NEO4J_HOME );\n-        Path configDir = Paths.get( NEO4J_CONF );\n-        boolean debug = NEO4J_DEBUG != null;\n-\n-        try ( RealOutsideWorld outsideWorld = new RealOutsideWorld() )\n-        {\n-            new AdminTool( CommandLocator.fromServiceLocator(), BlockerLocator.fromServiceLocator(), outsideWorld,\n-                    debug ).execute( homeDir, configDir, args );\n-        }\n+      new AdminTool(CommandLocator.fromServiceLocator(), BlockerLocator.fromServiceLocator(), outsideWorld,\n+          debug).execute(homeDir, configDir, args);\n     }\n-\n-    public static final String scriptName = \"neo4j-admin\";\n-    private final CommandLocator commandLocator;\n-    private final BlockerLocator blockerLocator;\n-    private final OutsideWorld outsideWorld;\n-    private final boolean debug;\n-    private final Usage usage;\n-\n-    public AdminTool( CommandLocator commandLocator, BlockerLocator blockerLocator, OutsideWorld outsideWorld,\n-            boolean debug )\n+  }\n+\n+  public static final String scriptName = \"neo4j-admin\";\n+  private final CommandLocator commandLocator;\n+  private final BlockerLocator blockerLocator;\n+  private final OutsideWorld outsideWorld;\n+  private final boolean debug;\n+  private final Usage usage;\n+\n+  public AdminTool(CommandLocator commandLocator, BlockerLocator blockerLocator, OutsideWorld outsideWorld,\n+                   boolean debug)\n+  {\n+    this.commandLocator = CommandLocator.withAdditionalCommand(help(), commandLocator);\n+    this.blockerLocator = blockerLocator;\n+    this.outsideWorld = outsideWorld;\n+    this.debug = debug;\n+    this.usage = new Usage(scriptName, this.commandLocator);\n+  }\n+\n+  public void execute(Path homeDir, Path configDir, String... args)\n+  {\n+    try\n     {\n-        this.commandLocator = CommandLocator.withAdditionalCommand( help(), commandLocator );\n-        this.blockerLocator = blockerLocator;\n-        this.outsideWorld = outsideWorld;\n-        this.debug = debug;\n-        this.usage = new Usage( scriptName, this.commandLocator );\n-    }\n-\n-    public void execute( Path homeDir, Path configDir, String... args )\n-    {\n-        try\n+      if (args.length == 0)\n+      {\n+        badUsage(\"you must provide a command\");\n+        return;\n+      }\n+\n+      if (Args.parse(args).has(\"version\"))\n+      {\n+        outsideWorld.stdOutLine(\"neo4j-admin \" + neo4jVersion());\n+        success();\n+        return;\n+      }\n+\n+      String name = args[0];\n+      String[] commandArgs = Arrays.copyOfRange(args, 1, args.length);\n+\n+      AdminCommand.Provider provider;\n+      try\n+      {\n+        provider = commandLocator.findProvider(name);\n+        for (AdminCommand.Blocker blocker : blockerLocator.findBlockers(name))\n         {\n-            if ( args.length == 0 )\n-            {\n-                badUsage( \"you must provide a command\" );\n-                return;\n-            }\n-\n-            if ( Args.parse( args ).has( \"version\") )\n-            {\n-                outsideWorld.stdOutLine( \"neo4j-admin \" + neo4jVersion() );\n-                success();\n-                return;\n-            }\n-\n-            String name = args[0];\n-            String[] commandArgs = Arrays.copyOfRange( args, 1, args.length );\n-\n-            AdminCommand.Provider provider;\n-            try\n-            {\n-                provider = commandLocator.findProvider( name );\n-                for ( AdminCommand.Blocker blocker : blockerLocator.findBlockers( name ) )\n-                {\n-                    if ( blocker.doesBlock( homeDir, configDir ) )\n-                    {\n-                        commandFailed( new CommandFailed( blocker.explanation() ) );\n-                    }\n-                }\n-            }\n-            catch ( NoSuchElementException e )\n-            {\n-                badUsage( format( \"unrecognized command: %s\", name ) );\n-                return;\n-            }\n-\n-            if ( provider == null )\n-            {\n-                badUsage( format( \"unrecognized command: %s\", name ) );\n-                return;\n-            }\n-\n-            if ( Args.parse( commandArgs ).has( \"help\" ) )\n-            {\n-                outsideWorld.stdErrLine( \"unknown argument: --help\" );\n-                usage.printUsageForCommand( provider, outsideWorld::stdErrLine );\n-                failure();\n-            }\n-            else\n-            {\n-                AdminCommand command = provider.create( homeDir, configDir, outsideWorld );\n-                try\n-                {\n-                    command.execute( commandArgs );\n-                    success();\n-                }\n-                catch ( IncorrectUsage e )\n-                {\n-                    badUsage( provider, e );\n-                }\n-                catch ( CommandFailed e )\n-                {\n-                    commandFailed( e );\n-                }\n-            }\n+          if (blocker.doesBlock(homeDir, configDir))\n+          {\n+            commandFailed(new CommandFailed(blocker.explanation()));\n+          }\n         }\n-        catch ( RuntimeException e )\n-        {\n-            unexpected( e );\n-        }\n-    }\n-\n-    private Supplier<AdminCommand.Provider> help()\n-    {\n-        return () -> new HelpCommandProvider( usage );\n-    }\n-\n-    private void badUsage( AdminCommand.Provider command, IncorrectUsage e )\n-    {\n-        outsideWorld.stdErrLine( e.getMessage() );\n-        outsideWorld.stdErrLine( \"\" );\n-        usage.printUsageForCommand( command, outsideWorld::stdErrLine );\n-        failure();\n-    }\n-\n-    private void badUsage( String message )\n-    {\n-        outsideWorld.stdErrLine( message );\n-        usage.print( outsideWorld::stdErrLine );\n+      } catch (NoSuchElementException e)\n+      {\n+        badUsage(format(\"unrecognized command: %s\", name));\n+        return;\n+      }\n+\n+      if (provider == null)\n+      {\n+        badUsage(format(\"unrecognized command: %s\", name));\n+        return;\n+      }\n+\n+      if (Args.parse(commandArgs).has(\"help\"))\n+      {\n+        outsideWorld.stdErrLine(\"unknown argument: --help\");\n+        usage.printUsageForCommand(provider, outsideWorld::stdErrLine);\n         failure();\n-    }\n-\n-    private void unexpected( RuntimeException e )\n-    {\n-        failure( \"unexpected error\", e );\n-    }\n-\n-    private void commandFailed( CommandFailed e )\n-    {\n-        failure( \"command failed\", e, e.code() );\n-    }\n-\n-    private void failure()\n-    {\n-        outsideWorld.exit( 1 );\n-    }\n-\n-    private void failure( String message, Exception e )\n-    {\n-        failure( message, e, STATUS_ERROR );\n-    }\n-\n-    private void failure( String message, Exception e, int code )\n-    {\n-        if ( debug )\n+      } else\n+      {\n+        AdminCommand command = provider.create(homeDir, configDir, outsideWorld);\n+        try\n         {\n-            outsideWorld.printStacktrace( e );\n+          command.execute(commandArgs);\n+          success();\n+        } catch (IncorrectUsage e)\n+        {\n+          badUsage(provider, e);\n+        } catch (CommandFailed e)\n+        {\n+          commandFailed(e);\n         }\n-        failure( format( \"%s: %s\", message, e.getMessage() ), code );\n-    }\n-\n-    private void failure( String message, int code )\n+      }\n+    } catch (RuntimeException e)\n     {\n-        outsideWorld.stdErrLine( message );\n-        outsideWorld.exit( code );\n+      unexpected(e);\n     }\n-\n-    private void success()\n+  }\n+\n+  private Supplier<AdminCommand.Provider> help()\n+  {\n+    return () -> new HelpCommandProvider(usage);\n+  }\n+\n+  private void badUsage(AdminCommand.Provider command, IncorrectUsage e)\n+  {\n+    outsideWorld.stdErrLine(e.getMessage());\n+    outsideWorld.stdErrLine(\"\");\n+    usage.printUsageForCommand(command, outsideWorld::stdErrLine);\n+    failure();\n+  }\n+\n+  private void badUsage(String message)\n+  {\n+    outsideWorld.stdErrLine(message);\n+    usage.print(outsideWorld::stdErrLine);\n+    failure();\n+  }\n+\n+  private void unexpected(RuntimeException e)\n+  {\n+    failure(\"unexpected error\", e);\n+  }\n+\n+  private void commandFailed(CommandFailed e)\n+  {\n+    failure(\"command failed\", e, e.code());\n+  }\n+\n+  private void failure()\n+  {\n+    outsideWorld.exit(1);\n+  }\n+\n+  private void failure(String message, Exception e)\n+  {\n+    failure(message, e, STATUS_ERROR);\n+  }\n+\n+  private void failure(String message, Exception e, int code)\n+  {\n+    if (debug)\n     {\n-        outsideWorld.exit( STATUS_SUCCESS );\n+      outsideWorld.printStacktrace(e);\n     }\n+    failure(format(\"%s: %s\", message, e.getMessage()), code);\n+  }\n+\n+  private void failure(String message, int code)\n+  {\n+    outsideWorld.stdErrLine(message);\n+    outsideWorld.exit(code);\n+  }\n+\n+  private void success()\n+  {\n+    outsideWorld.exit(STATUS_SUCCESS);\n+  }\n }\n",
            "diff_size": 250
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3308/AdminTool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3308/AdminTool.java\nindex 6b1c4e7739a..dc9eb918cac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3308/AdminTool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3308/AdminTool.java\n@@ -34,8 +34,10 @@ import static org.neo4j.commandline.Util.neo4jVersion;\n public class AdminTool\n {\n     public static final int STATUS_SUCCESS = 0;\n-    public static final int STATUS_ERROR = 1;\n-    public static final String NEO4J_HOME = System.getenv().getOrDefault( \"NEO4J_HOME\", \"\" );\n+\n+public static final int STATUS_ERROR = 1;\n+\n+public static final String NEO4J_HOME = System.getenv().getOrDefault( \"NEO4J_HOME\", \"\" );\n     public static final String NEO4J_CONF = System.getenv().getOrDefault( \"NEO4J_CONF\", \"\" );\n     public static final String NEO4J_DEBUG = System.getenv().getOrDefault( \"NEO4J_DEBUG\", null );\n \n@@ -49,7 +51,7 @@ public class AdminTool\n         {\n             new AdminTool( CommandLocator.fromServiceLocator(), BlockerLocator.fromServiceLocator(), outsideWorld,\n                     debug ).execute( homeDir, configDir, args );\n-        }\n+    }\n     }\n \n     public static final String scriptName = \"neo4j-admin\";\n@@ -88,8 +90,7 @@ public class AdminTool\n \n             String name = args[0];\n             String[] commandArgs = Arrays.copyOfRange( args, 1, args.length );\n-\n-            AdminCommand.Provider provider;\n+AdminCommand.Provider provider;\n             try\n             {\n                 provider = commandLocator.findProvider( name );\n@@ -189,7 +190,8 @@ public class AdminTool\n         {\n             outsideWorld.printStacktrace( e );\n         }\n-        failure( format( \"%s: %s\", message, e.getMessage() ), code );\n+\n+failure( format( \"%s: %s\", message, e.getMessage() ), code );\n     }\n \n     private void failure( String message, int code )\n@@ -202,4 +204,4 @@ public class AdminTool\n     {\n         outsideWorld.exit( STATUS_SUCCESS );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
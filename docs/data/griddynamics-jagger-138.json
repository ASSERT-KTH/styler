{
    "project_name": "griddynamics-jagger",
    "error_id": "138",
    "information": {
        "errors": [
            {
                "line": "20",
                "column": "54",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            BeanDefinition beanDefinition = beanFactory.getBeanDefinition(beanName);\n            // if user doesn't use scope attribute, we set prototype scope as default\n            if (\"\".equals(beanDefinition.getScope())){\n                beanDefinition.setScope(BeanDefinition.SCOPE_PROTOTYPE);\n            }\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/138/ProviderBeanFactoryPostProcessor.java\nindex 65bfa859cb9..889c8c2d518 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/138/ProviderBeanFactoryPostProcessor.java\n@@ -17,7 +17,7 @@ public class ProviderBeanFactoryPostProcessor implements BeanFactoryPostProcesso\n         for (String beanName : beanNames) {\n             BeanDefinition beanDefinition = beanFactory.getBeanDefinition(beanName);\n             // if user doesn't use scope attribute, we set prototype scope as default\n-            if (\"\".equals(beanDefinition.getScope())){\n+            if (\"\".equals(beanDefinition.getScope())) {\n                 beanDefinition.setScope(BeanDefinition.SCOPE_PROTOTYPE);\n             }\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/138/ProviderBeanFactoryPostProcessor.java\nindex 65bfa859cb9..cfb606ca9ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/138/ProviderBeanFactoryPostProcessor.java\n@@ -8,6 +8,7 @@ import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n \n /**\n  * Processor, which set Prototype scope to all Providers in spring context\n+ *\n  * @author kgribov\n  */\n public class ProviderBeanFactoryPostProcessor implements BeanFactoryPostProcessor {\n@@ -17,7 +18,7 @@ public class ProviderBeanFactoryPostProcessor implements BeanFactoryPostProcesso\n         for (String beanName : beanNames) {\n             BeanDefinition beanDefinition = beanFactory.getBeanDefinition(beanName);\n             // if user doesn't use scope attribute, we set prototype scope as default\n-            if (\"\".equals(beanDefinition.getScope())){\n+            if (\"\".equals(beanDefinition.getScope())) {\n                 beanDefinition.setScope(BeanDefinition.SCOPE_PROTOTYPE);\n             }\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/138/ProviderBeanFactoryPostProcessor.java\nindex 65bfa859cb9..d2e051641c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/138/ProviderBeanFactoryPostProcessor.java\n@@ -17,9 +17,9 @@ public class ProviderBeanFactoryPostProcessor implements BeanFactoryPostProcesso\n         for (String beanName : beanNames) {\n             BeanDefinition beanDefinition = beanFactory.getBeanDefinition(beanName);\n             // if user doesn't use scope attribute, we set prototype scope as default\n-            if (\"\".equals(beanDefinition.getScope())){\n+            if (\"\".equals(beanDefinition.getScope())) {\n                 beanDefinition.setScope(BeanDefinition.SCOPE_PROTOTYPE);\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/138/ProviderBeanFactoryPostProcessor.java\nindex 65bfa859cb9..889c8c2d518 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/138/ProviderBeanFactoryPostProcessor.java\n@@ -17,7 +17,7 @@ public class ProviderBeanFactoryPostProcessor implements BeanFactoryPostProcesso\n         for (String beanName : beanNames) {\n             BeanDefinition beanDefinition = beanFactory.getBeanDefinition(beanName);\n             // if user doesn't use scope attribute, we set prototype scope as default\n-            if (\"\".equals(beanDefinition.getScope())){\n+            if (\"\".equals(beanDefinition.getScope())) {\n                 beanDefinition.setScope(BeanDefinition.SCOPE_PROTOTYPE);\n             }\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/138/ProviderBeanFactoryPostProcessor.java\nindex 65bfa859cb9..889c8c2d518 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/138/ProviderBeanFactoryPostProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/138/ProviderBeanFactoryPostProcessor.java\n@@ -17,7 +17,7 @@ public class ProviderBeanFactoryPostProcessor implements BeanFactoryPostProcesso\n         for (String beanName : beanNames) {\n             BeanDefinition beanDefinition = beanFactory.getBeanDefinition(beanName);\n             // if user doesn't use scope attribute, we set prototype scope as default\n-            if (\"\".equals(beanDefinition.getScope())){\n+            if (\"\".equals(beanDefinition.getScope())) {\n                 beanDefinition.setScope(BeanDefinition.SCOPE_PROTOTYPE);\n             }\n         }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
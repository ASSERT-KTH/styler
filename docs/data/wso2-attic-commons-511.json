{
    "project_name": "wso2-attic-commons",
    "error_id": "511",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    private String operator;\n\n    public SqlBinaryConditionNode(PredicateTreeNode leftSubPredicate, PredicateTreeNode rightSubPredicate, String operator) {\n        this.operator = operator;\n        leftChild = leftSubPredicate;\n        rightChild = rightSubPredicate;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/511/SqlBinaryConditionNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/511/SqlBinaryConditionNode.java\nindex 6a11bc674fd..b76402d0f14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/511/SqlBinaryConditionNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/511/SqlBinaryConditionNode.java\n@@ -10,8 +10,9 @@ public class SqlBinaryConditionNode implements PredicateTreeNode {\n     private PredicateTreeNode rightChild;\n     private String operator;\n \n-    public SqlBinaryConditionNode(PredicateTreeNode leftSubPredicate, PredicateTreeNode rightSubPredicate, String operator) {\n-        this.operator = operator;\n+    public SqlBinaryConditionNode(PredicateTreeNode leftSubPredicate, PredicateTreeNode rightSubPredicate,\n+                                    String operator) {\n+         this.operator = operator;\n         leftChild = leftSubPredicate;\n         rightChild = rightSubPredicate;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/511/SqlBinaryConditionNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/511/SqlBinaryConditionNode.java\nindex 6a11bc674fd..ac2420eed6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/511/SqlBinaryConditionNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/511/SqlBinaryConditionNode.java\n@@ -6,30 +6,31 @@ import java.util.List;\n \n public class SqlBinaryConditionNode implements PredicateTreeNode {\n \n-    private PredicateTreeNode leftChild;\n-    private PredicateTreeNode rightChild;\n-    private String operator;\n-\n-    public SqlBinaryConditionNode(PredicateTreeNode leftSubPredicate, PredicateTreeNode rightSubPredicate, String operator) {\n-        this.operator = operator;\n-        leftChild = leftSubPredicate;\n-        rightChild = rightSubPredicate;\n-    }\n-\n-    @Override\n-    public String buildPredicateString() {\n-        return leftChild.buildPredicateString() + \" \" + operator + \" \" + rightChild.buildPredicateString();\n-    }\n-\n-    @Override\n-    public void populateParameters(List parametersList) {\n-        // inorder traverse.\n-        leftChild.populateParameters(parametersList);\n-        rightChild.populateParameters(parametersList);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return buildPredicateString();\n-    }\n+  private PredicateTreeNode leftChild;\n+  private PredicateTreeNode rightChild;\n+  private String operator;\n+\n+  public SqlBinaryConditionNode(PredicateTreeNode leftSubPredicate, PredicateTreeNode rightSubPredicate,\n+                                String operator) {\n+    this.operator = operator;\n+    leftChild = leftSubPredicate;\n+    rightChild = rightSubPredicate;\n+  }\n+\n+  @Override\n+  public String buildPredicateString() {\n+    return leftChild.buildPredicateString() + \" \" + operator + \" \" + rightChild.buildPredicateString();\n+  }\n+\n+  @Override\n+  public void populateParameters(List parametersList) {\n+    // inorder traverse.\n+    leftChild.populateParameters(parametersList);\n+    rightChild.populateParameters(parametersList);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return buildPredicateString();\n+  }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/511/SqlBinaryConditionNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/511/SqlBinaryConditionNode.java\nindex 6a11bc674fd..004ad225545 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/511/SqlBinaryConditionNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/511/SqlBinaryConditionNode.java\n@@ -32,4 +32,4 @@ public class SqlBinaryConditionNode implements PredicateTreeNode {\n     public String toString() {\n         return buildPredicateString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/511/SqlBinaryConditionNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/511/SqlBinaryConditionNode.java\nindex 6a11bc674fd..b76402d0f14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/511/SqlBinaryConditionNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/511/SqlBinaryConditionNode.java\n@@ -10,8 +10,9 @@ public class SqlBinaryConditionNode implements PredicateTreeNode {\n     private PredicateTreeNode rightChild;\n     private String operator;\n \n-    public SqlBinaryConditionNode(PredicateTreeNode leftSubPredicate, PredicateTreeNode rightSubPredicate, String operator) {\n-        this.operator = operator;\n+    public SqlBinaryConditionNode(PredicateTreeNode leftSubPredicate, PredicateTreeNode rightSubPredicate,\n+                                    String operator) {\n+         this.operator = operator;\n         leftChild = leftSubPredicate;\n         rightChild = rightSubPredicate;\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
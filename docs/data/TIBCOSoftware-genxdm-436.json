{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "436",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class WrappedBooleanExpr extends ConvertibleBooleanExpr {\n\n\tpublic static ConvertibleExpr wrap(BooleanExpr expr) {\n\t\t\n\t\tif (expr instanceof ConvertibleExpr) {\n\t\t\treturn (ConvertibleExpr) expr;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/436/WrappedBooleanExpr.java\nindex 75eb6dce93a..3a4374afffb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/436/WrappedBooleanExpr.java\n@@ -24,7 +24,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n \n public class WrappedBooleanExpr extends ConvertibleBooleanExpr {\n \n-\tpublic static ConvertibleExpr wrap(BooleanExpr expr) {\n+public static ConvertibleExpr wrap(BooleanExpr expr) {\n \t\t\n \t\tif (expr instanceof ConvertibleExpr) {\n \t\t\treturn (ConvertibleExpr) expr;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/436/WrappedBooleanExpr.java\nindex 75eb6dce93a..44f9600b1bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/436/WrappedBooleanExpr.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.processor.xpath.v10.expressions;\n \n import org.genxdm.Model;\n@@ -24,29 +25,29 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n \n public class WrappedBooleanExpr extends ConvertibleBooleanExpr {\n \n-\tpublic static ConvertibleExpr wrap(BooleanExpr expr) {\n-\t\t\n-\t\tif (expr instanceof ConvertibleExpr) {\n-\t\t\treturn (ConvertibleExpr) expr;\n-\t\t}\n-\t\t\n-\t\treturn new WrappedBooleanExpr(expr);\n-\t}\n-\t\n-\tpublic WrappedBooleanExpr(BooleanExpr expr) {\n-\t\tm_wrappedExpr = expr;\n-\t}\n-\t\n-\t@Override\n-\tpublic <N> boolean booleanFunction(Model<N> model, N contextNode,\n-\t\t\tNodeDynamicContext<N> dynEnv) {\n-\t\treturn m_wrappedExpr.booleanFunction(model, contextNode, dynEnv);\n-\t}\n+    public static ConvertibleExpr wrap(BooleanExpr expr) {\n+\n+        if (expr instanceof ConvertibleExpr) {\n+            return (ConvertibleExpr) expr;\n+        }\n+\n+        return new WrappedBooleanExpr(expr);\n+    }\n+\n+    public WrappedBooleanExpr(BooleanExpr expr) {\n+        m_wrappedExpr = expr;\n+    }\n+\n+    @Override\n+    public <N> boolean booleanFunction(Model<N> model, N contextNode,\n+                                       NodeDynamicContext<N> dynEnv) {\n+        return m_wrappedExpr.booleanFunction(model, contextNode, dynEnv);\n+    }\n \n     @Override\n     public boolean booleanFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\n         return m_wrappedExpr.booleanFunction(contextNode, dynEnv);\n     }\n-    \n-\tprivate final BooleanExpr m_wrappedExpr;\n+\n+    private final BooleanExpr m_wrappedExpr;\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/436/WrappedBooleanExpr.java\nindex 75eb6dce93a..d3c357a1a6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/436/WrappedBooleanExpr.java\n@@ -24,29 +24,26 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n \n public class WrappedBooleanExpr extends ConvertibleBooleanExpr {\n \n-\tpublic static ConvertibleExpr wrap(BooleanExpr expr) {\n-\t\t\n-\t\tif (expr instanceof ConvertibleExpr) {\n-\t\t\treturn (ConvertibleExpr) expr;\n-\t\t}\n-\t\t\n-\t\treturn new WrappedBooleanExpr(expr);\n-\t}\n-\t\n-\tpublic WrappedBooleanExpr(BooleanExpr expr) {\n+    public static ConvertibleExpr wrap(BooleanExpr expr) {\n+    if (expr instanceof ConvertibleExpr) {\n+    return (ConvertibleExpr) expr;\n+    }\n+return new WrappedBooleanExpr(expr);\n+    }\n+\n+public WrappedBooleanExpr(BooleanExpr expr) {\n \t\tm_wrappedExpr = expr;\n-\t}\n-\t\n-\t@Override\n-\tpublic <N> boolean booleanFunction(Model<N> model, N contextNode,\n-\t\t\tNodeDynamicContext<N> dynEnv) {\n-\t\treturn m_wrappedExpr.booleanFunction(model, contextNode, dynEnv);\n-\t}\n+    }\n \n-    @Override\n+@Override\n+public <N> boolean booleanFunction(Model<N> model, N contextNode, NodeDynamicContext<N> dynEnv) {\n+    return m_wrappedExpr.booleanFunction(model, contextNode, dynEnv);\n+    }\n+\n+@Override\n     public boolean booleanFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\n         return m_wrappedExpr.booleanFunction(contextNode, dynEnv);\n     }\n-    \n-\tprivate final BooleanExpr m_wrappedExpr;\n-}\n+\n+private final BooleanExpr m_wrappedExpr;\n+    }\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/436/WrappedBooleanExpr.java\nindex 75eb6dce93a..fdbe067b222 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/436/WrappedBooleanExpr.java\n@@ -22,31 +22,33 @@ import org.genxdm.xpath.v10.TraverserDynamicContext;\n import org.genxdm.xpath.v10.NodeDynamicContext;\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n \n-public class WrappedBooleanExpr extends ConvertibleBooleanExpr {\n+public class WrappedBooleanExpr extends ConvertibleBooleanExpr\n+{\n+    public static ConvertibleExpr wrap(BooleanExpr expr)\n+    {\n+        if (expr instanceof ConvertibleExpr)\n+        {\n+            return (ConvertibleExpr)expr;\n+        }\n+        return new WrappedBooleanExpr(expr);\n+    }\n+\n+    public WrappedBooleanExpr(BooleanExpr expr)\n+    {\n+        m_wrappedExpr = expr;\n+    }\n \n-\tpublic static ConvertibleExpr wrap(BooleanExpr expr) {\n-\t\t\n-\t\tif (expr instanceof ConvertibleExpr) {\n-\t\t\treturn (ConvertibleExpr) expr;\n-\t\t}\n-\t\t\n-\t\treturn new WrappedBooleanExpr(expr);\n-\t}\n-\t\n-\tpublic WrappedBooleanExpr(BooleanExpr expr) {\n-\t\tm_wrappedExpr = expr;\n-\t}\n-\t\n-\t@Override\n-\tpublic <N> boolean booleanFunction(Model<N> model, N contextNode,\n-\t\t\tNodeDynamicContext<N> dynEnv) {\n-\t\treturn m_wrappedExpr.booleanFunction(model, contextNode, dynEnv);\n-\t}\n+    @Override\n+    public <N> boolean booleanFunction(Model<N> model, N contextNode, NodeDynamicContext<N> dynEnv)\n+    {\n+        return m_wrappedExpr.booleanFunction(model, contextNode, dynEnv);\n+    }\n \n     @Override\n-    public boolean booleanFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\n+    public boolean booleanFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv)\n+    {\n         return m_wrappedExpr.booleanFunction(contextNode, dynEnv);\n     }\n-    \n-\tprivate final BooleanExpr m_wrappedExpr;\n-}\n+\n+    private final BooleanExpr m_wrappedExpr;\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/436/WrappedBooleanExpr.java\nindex 75eb6dce93a..3a4374afffb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/436/WrappedBooleanExpr.java\n@@ -24,7 +24,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n \n public class WrappedBooleanExpr extends ConvertibleBooleanExpr {\n \n-\tpublic static ConvertibleExpr wrap(BooleanExpr expr) {\n+public static ConvertibleExpr wrap(BooleanExpr expr) {\n \t\t\n \t\tif (expr instanceof ConvertibleExpr) {\n \t\t\treturn (ConvertibleExpr) expr;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/436/WrappedBooleanExpr.java\nindex 75eb6dce93a..a75d607c101 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/436/WrappedBooleanExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/436/WrappedBooleanExpr.java\n@@ -24,7 +24,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n \n public class WrappedBooleanExpr extends ConvertibleBooleanExpr {\n \n-\tpublic static ConvertibleExpr wrap(BooleanExpr expr) {\n+    public static ConvertibleExpr wrap(BooleanExpr expr) {\n \t\t\n \t\tif (expr instanceof ConvertibleExpr) {\n \t\t\treturn (ConvertibleExpr) expr;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
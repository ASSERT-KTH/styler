{
    "project_name": "neo4j-neo4j",
    "error_id": "534",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "90",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "128",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "179",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/534/RelationshipGroupChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/534/RelationshipGroupChecker.java\nindex 5fee696b351..9c5de32769c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/534/RelationshipGroupChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/534/RelationshipGroupChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checker;\n \n import java.util.function.BiConsumer;\n@@ -50,145 +51,145 @@ class RelationshipGroupChecker implements Checker\n     private final CheckerContext context;\n     private final ProgressListener progress;\n \n-    RelationshipGroupChecker( CheckerContext context )\n+    RelationshipGroupChecker(CheckerContext context)\n     {\n         this.neoStores = context.neoStores;\n         this.reporter = context.reporter;\n         this.context = context;\n-        this.progress = context.progressReporter( this, \"Relationship groups\", neoStores.getRelationshipGroupStore().getHighId() );\n+        this.progress = context.progressReporter(this, \"Relationship groups\", neoStores.getRelationshipGroupStore().getHighId());\n     }\n \n     @Override\n-    public void check( LongRange nodeIdRange, boolean firstRange, boolean lastRange ) throws Exception\n+    public void check(LongRange nodeIdRange, boolean firstRange, boolean lastRange) throws Exception\n     {\n         ParallelExecution execution = context.execution;\n-        execution.run( getClass().getSimpleName(), execution.partition( neoStores.getRelationshipGroupStore(),\n-                ( from, to, last ) -> () -> check( nodeIdRange, firstRange, from, to, context.pageCacheTracer ) ) );\n+        execution.run(getClass().getSimpleName(), execution.partition(neoStores.getRelationshipGroupStore(),\n+          (from, to, last) -> () -> check(nodeIdRange, firstRange, from, to, context.pageCacheTracer)));\n     }\n \n     @Override\n-    public boolean shouldBeChecked( ConsistencyFlags flags )\n+    public boolean shouldBeChecked(ConsistencyFlags flags)\n     {\n         return flags.isCheckGraph();\n     }\n \n-    private void check( LongRange nodeIdRange, boolean firstRound, long fromGroupId, long toGroupId, PageCacheTracer pageCacheTracer )\n+    private void check(LongRange nodeIdRange, boolean firstRound, long fromGroupId, long toGroupId, PageCacheTracer pageCacheTracer)\n     {\n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( RELATIONSHIP_GROUPS_CHECKER_TAG );\n-              RecordReader<RelationshipGroupRecord> groupReader = new RecordReader<>( neoStores.getRelationshipGroupStore(), cursorTracer );\n-              RecordReader<RelationshipGroupRecord> comparativeReader = new RecordReader<>( neoStores.getRelationshipGroupStore(), cursorTracer );\n-              RecordStorageReader reader = new RecordStorageReader( neoStores );\n-              RecordRelationshipScanCursor relationshipCursor = reader.allocateRelationshipScanCursor( cursorTracer ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(RELATIONSHIP_GROUPS_CHECKER_TAG);\n+             RecordReader<RelationshipGroupRecord> groupReader = new RecordReader<>(neoStores.getRelationshipGroupStore(), cursorTracer);\n+             RecordReader<RelationshipGroupRecord> comparativeReader = new RecordReader<>(neoStores.getRelationshipGroupStore(), cursorTracer);\n+             RecordStorageReader reader = new RecordStorageReader(neoStores);\n+             RecordRelationshipScanCursor relationshipCursor = reader.allocateRelationshipScanCursor(cursorTracer))\n         {\n             ProgressListener localProgress = progress.threadLocalReporter();\n             CacheAccess.Client client = context.cacheAccess.client();\n-            for ( long id = fromGroupId; id < toGroupId && !context.isCancelled(); id++ )\n+            for (long id = fromGroupId; id < toGroupId && !context.isCancelled(); id++)\n             {\n-                localProgress.add( 1 );\n-                RelationshipGroupRecord record = groupReader.read( id );\n-                if ( !record.inUse() )\n+                localProgress.add(1);\n+                RelationshipGroupRecord record = groupReader.read(id);\n+                if (!record.inUse())\n                 {\n                     continue;\n                 }\n \n                 long owningNode = record.getOwningNode();\n-                if ( nodeIdRange.isWithinRangeExclusiveTo( owningNode ) )\n+                if (nodeIdRange.isWithinRangeExclusiveTo(owningNode))\n                 {\n-                    long cachedOwnerNextRel = client.getFromCache( owningNode, CacheSlots.NodeLink.SLOT_RELATIONSHIP_ID );\n-                    boolean nodeIsInUse = client.getBooleanFromCache( owningNode, CacheSlots.NodeLink.SLOT_IN_USE );\n-                    if ( !nodeIsInUse )\n+                    long cachedOwnerNextRel = client.getFromCache(owningNode, CacheSlots.NodeLink.SLOT_RELATIONSHIP_ID);\n+                    boolean nodeIsInUse = client.getBooleanFromCache(owningNode, CacheSlots.NodeLink.SLOT_IN_USE);\n+                    if (!nodeIsInUse)\n                     {\n-                        reporter.forRelationshipGroup( record ).ownerNotInUse();\n-                    }\n-                    else if ( cachedOwnerNextRel == id )\n+                        reporter.forRelationshipGroup(record).ownerNotInUse();\n+                    } else if (cachedOwnerNextRel == id)\n                     {\n                         // The old checker only verified that the relationship group that node.nextGroup pointed to had this node as its owner\n-                        client.putToCacheSingle( owningNode, CacheSlots.NodeLink.SLOT_CHECK_MARK, 0 );\n+                        client.putToCacheSingle(owningNode, CacheSlots.NodeLink.SLOT_CHECK_MARK, 0);\n                     }\n                 }\n \n-                if ( firstRound )\n+                if (firstRound)\n                 {\n-                    if ( owningNode < 0 )\n+                    if (owningNode < 0)\n                     {\n-                        reporter.forRelationshipGroup( record ).illegalOwner();\n+                        reporter.forRelationshipGroup(record).illegalOwner();\n                     }\n-                    checkValidToken( record, record.getType(), context.tokenHolders.relationshipTypeTokens(), neoStores.getRelationshipTypeTokenStore(),\n-                            ( group, token ) -> reporter.forRelationshipGroup( group ).illegalRelationshipType(),\n-                            ( group, token ) -> reporter.forRelationshipGroup( group ).relationshipTypeNotInUse( token ), cursorTracer );\n+                    checkValidToken(record, record.getType(), context.tokenHolders.relationshipTypeTokens(), neoStores.getRelationshipTypeTokenStore(),\n+                      (group, token) -> reporter.forRelationshipGroup(group).illegalRelationshipType(),\n+                      (group, token) -> reporter.forRelationshipGroup(group).relationshipTypeNotInUse(token), cursorTracer);\n \n-                    if ( !NULL_REFERENCE.is( record.getNext() ) )\n+                    if (!NULL_REFERENCE.is(record.getNext()))\n                     {\n-                        RelationshipGroupRecord comparativeRecord = comparativeReader.read( record.getNext() );\n-                        if ( !comparativeRecord.inUse() )\n+                        RelationshipGroupRecord comparativeRecord = comparativeReader.read(record.getNext());\n+                        if (!comparativeRecord.inUse())\n                         {\n-                            reporter.forRelationshipGroup( record ).nextGroupNotInUse();\n-                        }\n-                        else\n+                            reporter.forRelationshipGroup(record).nextGroupNotInUse();\n+                        } else\n                         {\n-                            if ( record.getType() >= comparativeRecord.getType() )\n+                            if (record.getType() >= comparativeRecord.getType())\n                             {\n-                                reporter.forRelationshipGroup( record ).invalidTypeSortOrder();\n+                                reporter.forRelationshipGroup(record).invalidTypeSortOrder();\n                             }\n-                            if ( owningNode != comparativeRecord.getOwningNode() )\n+                            if (owningNode != comparativeRecord.getOwningNode())\n                             {\n-                                reporter.forRelationshipGroup( record ).nextHasOtherOwner( comparativeRecord );\n+                                reporter.forRelationshipGroup(record).nextHasOtherOwner(comparativeRecord);\n                             }\n                         }\n                     }\n \n-                    checkRelationshipGroupRelationshipLink( relationshipCursor, record, record.getFirstOut(), RelationshipGroupLink.OUT,\n-                            group -> reporter.forRelationshipGroup( group ).firstOutgoingRelationshipNotInUse(),\n-                            group -> reporter.forRelationshipGroup( group ).firstOutgoingRelationshipNotFirstInChain(),\n-                            group -> reporter.forRelationshipGroup( group ).firstOutgoingRelationshipOfOtherType(),\n-                            ( group, rel ) -> reporter.forRelationshipGroup( group ).firstOutgoingRelationshipDoesNotShareNodeWithGroup( rel ),\n-                            cursorTracer );\n-                    checkRelationshipGroupRelationshipLink( relationshipCursor, record, record.getFirstIn(), RelationshipGroupLink.IN,\n-                            group -> reporter.forRelationshipGroup( group ).firstIncomingRelationshipNotInUse(),\n-                            group -> reporter.forRelationshipGroup( group ).firstIncomingRelationshipNotFirstInChain(),\n-                            group -> reporter.forRelationshipGroup( group ).firstIncomingRelationshipOfOtherType(),\n-                            ( group, rel ) -> reporter.forRelationshipGroup( group ).firstIncomingRelationshipDoesNotShareNodeWithGroup( rel ),\n-                            cursorTracer );\n-                    checkRelationshipGroupRelationshipLink( relationshipCursor, record, record.getFirstLoop(), RelationshipGroupLink.LOOP,\n-                            group -> reporter.forRelationshipGroup( group ).firstLoopRelationshipNotInUse(),\n-                            group -> reporter.forRelationshipGroup( group ).firstLoopRelationshipNotFirstInChain(),\n-                            group -> reporter.forRelationshipGroup( group ).firstLoopRelationshipOfOtherType(),\n-                            ( group, rel ) -> reporter.forRelationshipGroup( group ).firstLoopRelationshipDoesNotShareNodeWithGroup( rel ),\n-                            cursorTracer );\n+                    checkRelationshipGroupRelationshipLink(relationshipCursor, record, record.getFirstOut(), RelationshipGroupLink.OUT,\n+                      group -> reporter.forRelationshipGroup(group).firstOutgoingRelationshipNotInUse(),\n+                      group -> reporter.forRelationshipGroup(group).firstOutgoingRelationshipNotFirstInChain(),\n+                      group -> reporter.forRelationshipGroup(group).firstOutgoingRelationshipOfOtherType(),\n+                      (group, rel) -> reporter.forRelationshipGroup(group).firstOutgoingRelationshipDoesNotShareNodeWithGroup(rel),\n+                      cursorTracer);\n+                    checkRelationshipGroupRelationshipLink(relationshipCursor, record, record.getFirstIn(), RelationshipGroupLink.IN,\n+                      group -> reporter.forRelationshipGroup(group).firstIncomingRelationshipNotInUse(),\n+                      group -> reporter.forRelationshipGroup(group).firstIncomingRelationshipNotFirstInChain(),\n+                      group -> reporter.forRelationshipGroup(group).firstIncomingRelationshipOfOtherType(),\n+                      (group, rel) -> reporter.forRelationshipGroup(group).firstIncomingRelationshipDoesNotShareNodeWithGroup(rel),\n+                      cursorTracer);\n+                    checkRelationshipGroupRelationshipLink(relationshipCursor, record, record.getFirstLoop(), RelationshipGroupLink.LOOP,\n+                      group -> reporter.forRelationshipGroup(group).firstLoopRelationshipNotInUse(),\n+                      group -> reporter.forRelationshipGroup(group).firstLoopRelationshipNotFirstInChain(),\n+                      group -> reporter.forRelationshipGroup(group).firstLoopRelationshipOfOtherType(),\n+                      (group, rel) -> reporter.forRelationshipGroup(group).firstLoopRelationshipDoesNotShareNodeWithGroup(rel),\n+                      cursorTracer);\n                 }\n             }\n             localProgress.done();\n         }\n     }\n \n-    private void checkRelationshipGroupRelationshipLink( RecordRelationshipScanCursor relationshipCursor, RelationshipGroupRecord record, long relationshipId,\n-            RelationshipGroupLink relationshipGroupLink, Consumer<RelationshipGroupRecord> reportRelationshipNotInUse,\n-            Consumer<RelationshipGroupRecord> reportRelationshipNotFirstInChain, Consumer<RelationshipGroupRecord> reportRelationshipOfOtherType,\n-            BiConsumer<RelationshipGroupRecord,RelationshipRecord> reportNodeNotSharedWithGroup, PageCursorTracer cursorTracer )\n+    private void checkRelationshipGroupRelationshipLink(RecordRelationshipScanCursor relationshipCursor, RelationshipGroupRecord record, long relationshipId,\n+                                                        RelationshipGroupLink relationshipGroupLink,\n+                                                        Consumer<RelationshipGroupRecord> reportRelationshipNotInUse,\n+                                                        Consumer<RelationshipGroupRecord> reportRelationshipNotFirstInChain,\n+                                                        Consumer<RelationshipGroupRecord> reportRelationshipOfOtherType,\n+                                                        BiConsumer<RelationshipGroupRecord, RelationshipRecord> reportNodeNotSharedWithGroup,\n+                                                        PageCursorTracer cursorTracer)\n     {\n-        if ( !NULL_REFERENCE.is( relationshipId ) )\n+        if (!NULL_REFERENCE.is(relationshipId))\n         {\n-            relationshipCursor.single( relationshipId );\n-            if ( !relationshipCursor.next() )\n+            relationshipCursor.single(relationshipId);\n+            if (!relationshipCursor.next())\n             {\n-                reportRelationshipNotInUse.accept( record );\n-            }\n-            else\n+                reportRelationshipNotInUse.accept(record);\n+            } else\n             {\n-                if ( !relationshipGroupLink.isFirstInChain( relationshipCursor ) )\n+                if (!relationshipGroupLink.isFirstInChain(relationshipCursor))\n                 {\n-                    reportRelationshipNotFirstInChain.accept( record );\n+                    reportRelationshipNotFirstInChain.accept(record);\n                 }\n-                if ( relationshipCursor.getType() != record.getType() )\n+                if (relationshipCursor.getType() != record.getType())\n                 {\n-                    reportRelationshipOfOtherType.accept( record );\n+                    reportRelationshipOfOtherType.accept(record);\n                 }\n \n                 boolean hasCorrectNode =\n-                        relationshipCursor.getFirstNode() == record.getOwningNode() || relationshipCursor.getSecondNode() == record.getOwningNode();\n-                if ( !hasCorrectNode )\n+                  relationshipCursor.getFirstNode() == record.getOwningNode() || relationshipCursor.getSecondNode() == record.getOwningNode();\n+                if (!hasCorrectNode)\n                 {\n-                    reportNodeNotSharedWithGroup.accept( record, context.recordLoader.relationship( relationshipCursor.getId(), cursorTracer ) );\n+                    reportNodeNotSharedWithGroup.accept(record, context.recordLoader.relationship(relationshipCursor.getId(), cursorTracer));\n                 }\n             }\n         }\n@@ -197,6 +198,6 @@ class RelationshipGroupChecker implements Checker\n     @Override\n     public String toString()\n     {\n-        return String.format( \"%s[highId:%d]\", getClass().getSimpleName(), neoStores.getRelationshipGroupStore().getHighId() );\n+        return String.format(\"%s[highId:%d]\", getClass().getSimpleName(), neoStores.getRelationshipGroupStore().getHighId());\n     }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4095",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4095/AllByPrioritySelectionStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4095/AllByPrioritySelectionStrategy.java\nindex bea968d0d4d..e2de9d13ba5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4095/AllByPrioritySelectionStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4095/AllByPrioritySelectionStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.extension.dependency;\n \n import java.util.Collections;\n@@ -32,31 +33,31 @@ import static org.neo4j.kernel.extension.KernelExtensionUtil.servicesClassPathEn\n  * in {@link #select(Class, Iterable)}, but keeps the others for access too.\n  *\n  * @param <T> type of items expected to be provided into {@link #select(Class, Iterable)}. Due to signature of the\n- * {@link #select(Class, Iterable) select method} where an explicit and local {@code R} is defined a cast from\n- * {@code R} to {@code T} is required and so will fail if {@code T} isn't matching {@code R}.\n+ *            {@link #select(Class, Iterable) select method} where an explicit and local {@code R} is defined a cast from\n+ *            {@code R} to {@code T} is required and so will fail if {@code T} isn't matching {@code R}.\n  */\n public class AllByPrioritySelectionStrategy<T extends Comparable<T>> implements DependencyResolver.SelectionStrategy\n {\n-    private List<T> lowerPrioritizedCandidates = Collections.emptyList();\n+  private List<T> lowerPrioritizedCandidates = Collections.emptyList();\n \n-    @SuppressWarnings( \"unchecked\" )\n-    @Override\n-    public <R> R select( Class<R> type, Iterable<? extends R> candidates ) throws IllegalArgumentException\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public <R> R select(Class<R> type, Iterable<? extends R> candidates) throws IllegalArgumentException\n+  {\n+    List<T> all = (List<T>) Iterables.asList(candidates);\n+    if (all.isEmpty())\n     {\n-        List<T> all = (List<T>) Iterables.asList( candidates );\n-        if ( all.isEmpty() )\n-        {\n-            throw new IllegalArgumentException( \"Could not resolve dependency of type: \" +\n-                                                type.getName() + \". \" + servicesClassPathEntryInformation() );\n-        }\n-        all.sort( Collections.reverseOrder() );\n-        R highest = (R) all.remove( 0 );\n-        lowerPrioritizedCandidates = all;\n-        return highest;\n+      throw new IllegalArgumentException(\"Could not resolve dependency of type: \" +\n+          type.getName() + \". \" + servicesClassPathEntryInformation());\n     }\n+    all.sort(Collections.reverseOrder());\n+    R highest = (R) all.remove(0);\n+    lowerPrioritizedCandidates = all;\n+    return highest;\n+  }\n \n-    public Iterable<T> lowerPrioritizedCandidates()\n-    {\n-        return lowerPrioritizedCandidates;\n-    }\n+  public Iterable<T> lowerPrioritizedCandidates()\n+  {\n+    return lowerPrioritizedCandidates;\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4095/AllByPrioritySelectionStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4095/AllByPrioritySelectionStrategy.java\nindex bea968d0d4d..5639fd38b04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4095/AllByPrioritySelectionStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4095/AllByPrioritySelectionStrategy.java\n@@ -46,9 +46,8 @@ public class AllByPrioritySelectionStrategy<T extends Comparable<T>> implements\n         List<T> all = (List<T>) Iterables.asList( candidates );\n         if ( all.isEmpty() )\n         {\n-            throw new IllegalArgumentException( \"Could not resolve dependency of type: \" +\n-                                                type.getName() + \". \" + servicesClassPathEntryInformation() );\n-        }\n+            throw new IllegalArgumentException( \"Could not resolve dependency of type: \" + type.getName() + \". \" + servicesClassPathEntryInformation() );\n+    }\n         all.sort( Collections.reverseOrder() );\n         R highest = (R) all.remove( 0 );\n         lowerPrioritizedCandidates = all;\n@@ -59,4 +58,4 @@ public class AllByPrioritySelectionStrategy<T extends Comparable<T>> implements\n     {\n         return lowerPrioritizedCandidates;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
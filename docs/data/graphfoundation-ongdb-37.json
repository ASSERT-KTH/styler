{
    "project_name": "graphfoundation-ongdb",
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/37/AutoIndexerFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/37/AutoIndexerFacade.java\nindex ac6c63f715e..95c6476ef3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/37/AutoIndexerFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/37/AutoIndexerFacade.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi;\n \n import java.util.Set;\n@@ -31,48 +32,48 @@ import org.neo4j.kernel.api.explicitindex.AutoIndexOperations;\n  */\n public class AutoIndexerFacade<T extends PropertyContainer> implements org.neo4j.graphdb.index.AutoIndexer<T>\n {\n-    private final Supplier<ReadableIndex<T>> indexProvider;\n-    private final AutoIndexOperations autoIndexing;\n+  private final Supplier<ReadableIndex<T>> indexProvider;\n+  private final AutoIndexOperations autoIndexing;\n \n-    public AutoIndexerFacade( Supplier<ReadableIndex<T>> indexProvider, AutoIndexOperations autoIndexing )\n-    {\n-        this.indexProvider = indexProvider;\n-        this.autoIndexing = autoIndexing;\n-    }\n+  public AutoIndexerFacade(Supplier<ReadableIndex<T>> indexProvider, AutoIndexOperations autoIndexing)\n+  {\n+    this.indexProvider = indexProvider;\n+    this.autoIndexing = autoIndexing;\n+  }\n \n-    @Override\n-    public void setEnabled( boolean enabled )\n-    {\n-        autoIndexing.enabled( enabled );\n-    }\n+  @Override\n+  public void setEnabled(boolean enabled)\n+  {\n+    autoIndexing.enabled(enabled);\n+  }\n \n-    @Override\n-    public boolean isEnabled()\n-    {\n-        return autoIndexing.enabled();\n-    }\n+  @Override\n+  public boolean isEnabled()\n+  {\n+    return autoIndexing.enabled();\n+  }\n \n-    @Override\n-    public ReadableIndex<T> getAutoIndex()\n-    {\n-        return indexProvider.get();\n-    }\n+  @Override\n+  public ReadableIndex<T> getAutoIndex()\n+  {\n+    return indexProvider.get();\n+  }\n \n-    @Override\n-    public void startAutoIndexingProperty( String propName )\n-    {\n-        autoIndexing.startAutoIndexingProperty( propName );\n-    }\n+  @Override\n+  public void startAutoIndexingProperty(String propName)\n+  {\n+    autoIndexing.startAutoIndexingProperty(propName);\n+  }\n \n-    @Override\n-    public void stopAutoIndexingProperty( String propName )\n-    {\n-        autoIndexing.stopAutoIndexingProperty( propName );\n-    }\n+  @Override\n+  public void stopAutoIndexingProperty(String propName)\n+  {\n+    autoIndexing.stopAutoIndexingProperty(propName);\n+  }\n \n-    @Override\n-    public Set<String> getAutoIndexedProperties()\n-    {\n-        return autoIndexing.getAutoIndexedProperties();\n-    }\n+  @Override\n+  public Set<String> getAutoIndexedProperties()\n+  {\n+    return autoIndexing.getAutoIndexedProperties();\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/37/AutoIndexerFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/37/AutoIndexerFacade.java\nindex ac6c63f715e..8f680bc3563 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/37/AutoIndexerFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/37/AutoIndexerFacade.java\n@@ -75,4 +75,4 @@ public class AutoIndexerFacade<T extends PropertyContainer> implements org.neo4j\n     {\n         return autoIndexing.getAutoIndexedProperties();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2481",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2481/Commit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2481/Commit.java\nindex fdf2cd033cc..0e4e0b9b6d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2481/Commit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2481/Commit.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel.apps;\n \n import java.rmi.RemoteException;\n@@ -31,72 +32,69 @@ import org.neo4j.shell.Session;\n import org.neo4j.shell.ShellException;\n import org.neo4j.shell.Variables;\n \n-@Service.Implementation( App.class )\n+@Service.Implementation(App.class)\n public class Commit extends NonTransactionProvidingApp\n {\n-    @Override\n-    public String getDescription()\n-    {\n-        return \"Commits a transaction\";\n-    }\n+  @Override\n+  public String getDescription()\n+  {\n+    return \"Commits a transaction\";\n+  }\n \n-    @Override\n-    protected Continuation exec( AppCommandParser parser, Session session, Output out )\n-            throws ShellException, RemoteException\n+  @Override\n+  protected Continuation exec(AppCommandParser parser, Session session, Output out)\n+      throws ShellException, RemoteException\n+  {\n+    if (parser.getLineWithoutApp().trim().length() > 0)\n     {\n-        if ( parser.getLineWithoutApp().trim().length() > 0 )\n-        {\n-            out.println( \"Error: COMMIT should  be run without trailing arguments\" );\n-            return Continuation.INPUT_COMPLETE;\n-        }\n-\n-        Integer txCount = session.getCommitCount();\n-\n-        KernelTransaction tx = Begin.currentTransaction( getServer() );\n-        if ( txCount == null || txCount.equals( 0 ) )\n-        {\n-            if ( tx != null )\n-            {\n-                out.println( \"Warning: committing a transaction not started by the shell\" );\n-                txCount = 1;\n-            }\n-            else\n-            {\n-                throw new ShellException( \"Not in a transaction\" );\n-            }\n-        }\n+      out.println(\"Error: COMMIT should  be run without trailing arguments\");\n+      return Continuation.INPUT_COMPLETE;\n+    }\n \n-        if ( txCount.equals( 1 ) )\n-        {\n-            if ( tx == null )\n-            {\n-                throw fail( session, \"Not in a transaction\" );\n-            }\n+    Integer txCount = session.getCommitCount();\n \n-            try\n-            {\n-                tx.success();\n-                tx.close();\n-                session.remove( Variables.TX_COUNT );\n-                out.println( \"Transaction committed\" );\n-                return Continuation.INPUT_COMPLETE;\n-            }\n-            catch ( Exception e )\n-            {\n-                throw fail( session, e.getMessage() );\n-            }\n-        }\n-        else\n-        {\n-            session.set( Variables.TX_COUNT, --txCount );\n-            out.println( String.format( \"Nested transaction committed (Tx count: %d)\", txCount ) );\n-            return Continuation.INPUT_COMPLETE;\n-        }\n+    KernelTransaction tx = Begin.currentTransaction(getServer());\n+    if (txCount == null || txCount.equals(0))\n+    {\n+      if (tx != null)\n+      {\n+        out.println(\"Warning: committing a transaction not started by the shell\");\n+        txCount = 1;\n+      } else\n+      {\n+        throw new ShellException(\"Not in a transaction\");\n+      }\n     }\n \n-    public static ShellException fail( Session session, String message ) throws ShellException\n+    if (txCount.equals(1))\n     {\n-        session.remove( Variables.TX_COUNT );\n-        return new ShellException( message );\n+      if (tx == null)\n+      {\n+        throw fail(session, \"Not in a transaction\");\n+      }\n+\n+      try\n+      {\n+        tx.success();\n+        tx.close();\n+        session.remove(Variables.TX_COUNT);\n+        out.println(\"Transaction committed\");\n+        return Continuation.INPUT_COMPLETE;\n+      } catch (Exception e)\n+      {\n+        throw fail(session, e.getMessage());\n+      }\n+    } else\n+    {\n+      session.set(Variables.TX_COUNT, --txCount);\n+      out.println(String.format(\"Nested transaction committed (Tx count: %d)\", txCount));\n+      return Continuation.INPUT_COMPLETE;\n     }\n+  }\n+\n+  public static ShellException fail(Session session, String message) throws ShellException\n+  {\n+    session.remove(Variables.TX_COUNT);\n+    return new ShellException(message);\n+  }\n }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2481/Commit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2481/Commit.java\nindex fdf2cd033cc..c67aafd06c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2481/Commit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2481/Commit.java\n@@ -41,9 +41,8 @@ public class Commit extends NonTransactionProvidingApp\n     }\n \n     @Override\n-    protected Continuation exec( AppCommandParser parser, Session session, Output out )\n-            throws ShellException, RemoteException\n-    {\n+    protected Continuation exec( AppCommandParser parser, Session session, Output out ) throws ShellException, RemoteException\n+{\n         if ( parser.getLineWithoutApp().trim().length() > 0 )\n         {\n             out.println( \"Error: COMMIT should  be run without trailing arguments\" );\n@@ -51,8 +50,7 @@ public class Commit extends NonTransactionProvidingApp\n         }\n \n         Integer txCount = session.getCommitCount();\n-\n-        KernelTransaction tx = Begin.currentTransaction( getServer() );\n+KernelTransaction tx = Begin.currentTransaction( getServer() );\n         if ( txCount == null || txCount.equals( 0 ) )\n         {\n             if ( tx != null )\n@@ -99,4 +97,4 @@ public class Commit extends NonTransactionProvidingApp\n         session.remove( Variables.TX_COUNT );\n         return new ShellException( message );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "828",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "140",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "209",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "234",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "259",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/828/ProcedureRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/828/ProcedureRegistry.java\nindex b6ea900989b..93113944e59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/828/ProcedureRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/828/ProcedureRegistry.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.proc;\n \n import java.util.HashSet;\n@@ -45,269 +46,260 @@ import org.neo4j.values.AnyValue;\n public class ProcedureRegistry\n {\n \n-    private final ProcedureHolder<CallableProcedure> procedures = new ProcedureHolder<>();\n-    private final ProcedureHolder<CallableUserFunction> functions = new ProcedureHolder<>();\n-    private final ProcedureHolder<CallableUserAggregationFunction> aggregationFunctions = new ProcedureHolder<>();\n-\n-    /**\n-     * Register a new procedure.\n-     *\n-     * @param proc the procedure.\n-     */\n-    public void register( CallableProcedure proc, boolean overrideCurrentImplementation ) throws ProcedureException\n-    {\n-        ProcedureSignature signature = proc.signature();\n-        QualifiedName name = signature.name();\n+  private final ProcedureHolder<CallableProcedure> procedures = new ProcedureHolder<>();\n+  private final ProcedureHolder<CallableUserFunction> functions = new ProcedureHolder<>();\n+  private final ProcedureHolder<CallableUserAggregationFunction> aggregationFunctions = new ProcedureHolder<>();\n \n-        String descriptiveName = signature.toString();\n-        validateSignature( descriptiveName, signature.inputSignature(), \"input\" );\n-        validateSignature( descriptiveName, signature.outputSignature(), \"output\" );\n+  /**\n+   * Register a new procedure.\n+   *\n+   * @param proc the procedure.\n+   */\n+  public void register(CallableProcedure proc, boolean overrideCurrentImplementation) throws ProcedureException\n+  {\n+    ProcedureSignature signature = proc.signature();\n+    QualifiedName name = signature.name();\n \n-        if ( ! signature.isVoid() && signature.outputSignature().isEmpty() )\n-        {\n-            throw new ProcedureException(\n-                Status.Procedure.ProcedureRegistrationFailed,\n-                \"Procedures with zero output fields must be declared as VOID\"\n-            );\n-        }\n+    String descriptiveName = signature.toString();\n+    validateSignature(descriptiveName, signature.inputSignature(), \"input\");\n+    validateSignature(descriptiveName, signature.outputSignature(), \"output\");\n \n-        CallableProcedure oldImplementation = procedures.get( name );\n-        if ( oldImplementation == null )\n-        {\n-            procedures.put( name, proc, signature.caseInsensitive() );\n-        }\n-        else\n-        {\n-            if ( overrideCurrentImplementation )\n-            {\n-                procedures.put( name, proc, signature.caseInsensitive() );\n-            }\n-            else\n-            {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Unable to register procedure, because the name `%s` is already in use.\", name );\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Register a new function.\n-     *\n-     * @param function the function.\n-     */\n-    public void register( CallableUserFunction function, boolean overrideCurrentImplementation ) throws ProcedureException\n+    if (!signature.isVoid() && signature.outputSignature().isEmpty())\n     {\n-        UserFunctionSignature signature = function.signature();\n-        QualifiedName name = signature.name();\n-\n-        CallableUserFunction oldImplementation = functions.get( name );\n-        if ( oldImplementation == null )\n-        {\n-            functions.put( name, function, signature.caseInsensitive() );\n-        }\n-        else\n-        {\n-            if ( overrideCurrentImplementation )\n-            {\n-                functions.put( name, function, signature.caseInsensitive() );\n-            }\n-            else\n-            {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Unable to register function, because the name `%s` is already in use.\", name );\n-            }\n-        }\n+      throw new ProcedureException(\n+          Status.Procedure.ProcedureRegistrationFailed,\n+          \"Procedures with zero output fields must be declared as VOID\"\n+      );\n     }\n \n-    /**\n-     * Register a new function.\n-     *\n-     * @param function the function.\n-     */\n-    public void register( CallableUserAggregationFunction function, boolean overrideCurrentImplementation ) throws ProcedureException\n+    CallableProcedure oldImplementation = procedures.get(name);\n+    if (oldImplementation == null)\n     {\n-        UserFunctionSignature signature = function.signature();\n-        QualifiedName name = signature.name();\n-\n-        CallableUserFunction oldImplementation = functions.get( name );\n-        if ( oldImplementation == null )\n-        {\n-            aggregationFunctions.put( name, function, signature.caseInsensitive() );\n-        }\n-        else\n-        {\n-            if ( overrideCurrentImplementation )\n-            {\n-                aggregationFunctions.put( name, function, signature.caseInsensitive() );\n-            }\n-            else\n-            {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Unable to register aggregation function, because the name `%s` is already in use.\", name );\n-            }\n-        }\n-    }\n-\n-    private void validateSignature( String descriptiveName, List<FieldSignature> fields, String fieldType )\n-            throws ProcedureException\n+      procedures.put(name, proc, signature.caseInsensitive());\n+    } else\n     {\n-        Set<String> names = new HashSet<>();\n-        for ( FieldSignature field : fields )\n-        {\n-            if ( !names.add( field.name() ) )\n-            {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Procedure `%s` cannot be registered, because it contains a duplicated \" + fieldType + \" field, '%s'. \" +\n-                        \"You need to rename or remove one of the duplicate fields.\", descriptiveName, field.name() );\n-            }\n-        }\n+      if (overrideCurrentImplementation)\n+      {\n+        procedures.put(name, proc, signature.caseInsensitive());\n+      } else\n+      {\n+        throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+            \"Unable to register procedure, because the name `%s` is already in use.\", name);\n+      }\n     }\n+  }\n \n-    public ProcedureHandle procedure( QualifiedName name ) throws ProcedureException\n-    {\n-        CallableProcedure proc = procedures.get( name );\n-        if ( proc == null )\n-        {\n-            throw noSuchProcedure( name );\n-        }\n-        return new ProcedureHandle( proc.signature(), procedures.idOf( name ) );\n-    }\n+  /**\n+   * Register a new function.\n+   *\n+   * @param function the function.\n+   */\n+  public void register(CallableUserFunction function, boolean overrideCurrentImplementation) throws ProcedureException\n+  {\n+    UserFunctionSignature signature = function.signature();\n+    QualifiedName name = signature.name();\n \n-    public UserFunctionHandle function( QualifiedName name )\n+    CallableUserFunction oldImplementation = functions.get(name);\n+    if (oldImplementation == null)\n     {\n-        CallableUserFunction func = functions.get( name );\n-        if ( func == null )\n-        {\n-            return null;\n-        }\n-        return new UserFunctionHandle( func.signature(), functions.idOf( name) );\n-    }\n-\n-    public UserFunctionHandle aggregationFunction( QualifiedName name )\n+      functions.put(name, function, signature.caseInsensitive());\n+    } else\n     {\n-        CallableUserAggregationFunction func = aggregationFunctions.get( name );\n-        if ( func == null )\n-        {\n-            return null;\n-        }\n-        return new UserFunctionHandle( func.signature(), aggregationFunctions.idOf( name) );\n+      if (overrideCurrentImplementation)\n+      {\n+        functions.put(name, function, signature.caseInsensitive());\n+      } else\n+      {\n+        throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+            \"Unable to register function, because the name `%s` is already in use.\", name);\n+      }\n     }\n+  }\n \n-    public RawIterator<Object[],ProcedureException> callProcedure( Context ctx, QualifiedName name, Object[] input, ResourceTracker resourceTracker )\n-            throws ProcedureException\n-    {\n-        CallableProcedure proc = procedures.get( name );\n-        if ( proc == null )\n-        {\n-            throw noSuchProcedure( name );\n-        }\n-        return proc.apply( ctx, input, resourceTracker );\n-    }\n+  /**\n+   * Register a new function.\n+   *\n+   * @param function the function.\n+   */\n+  public void register(CallableUserAggregationFunction function, boolean overrideCurrentImplementation) throws ProcedureException\n+  {\n+    UserFunctionSignature signature = function.signature();\n+    QualifiedName name = signature.name();\n \n-    public RawIterator<Object[],ProcedureException> callProcedure( Context ctx, int id, Object[] input, ResourceTracker resourceTracker )\n-            throws ProcedureException\n+    CallableUserFunction oldImplementation = functions.get(name);\n+    if (oldImplementation == null)\n+    {\n+      aggregationFunctions.put(name, function, signature.caseInsensitive());\n+    } else\n     {\n-        CallableProcedure proc;\n-        try\n-        {\n-            proc = procedures.get( id );\n-        }\n-        catch ( IndexOutOfBoundsException e )\n-        {\n-            throw noSuchProcedure( id );\n-        }\n-        return proc.apply( ctx, input, resourceTracker );\n+      if (overrideCurrentImplementation)\n+      {\n+        aggregationFunctions.put(name, function, signature.caseInsensitive());\n+      } else\n+      {\n+        throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+            \"Unable to register aggregation function, because the name `%s` is already in use.\", name);\n+      }\n     }\n+  }\n \n-    public AnyValue callFunction( Context ctx, QualifiedName name, AnyValue[] input )\n-            throws ProcedureException\n+  private void validateSignature(String descriptiveName, List<FieldSignature> fields, String fieldType)\n+      throws ProcedureException\n+  {\n+    Set<String> names = new HashSet<>();\n+    for (FieldSignature field : fields)\n     {\n-        CallableUserFunction func = functions.get( name );\n-        if ( func == null )\n-        {\n-            throw noSuchFunction( name );\n-        }\n-        return func.apply( ctx, input );\n+      if (!names.add(field.name()))\n+      {\n+        throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+            \"Procedure `%s` cannot be registered, because it contains a duplicated \" + fieldType + \" field, '%s'. \" +\n+                \"You need to rename or remove one of the duplicate fields.\", descriptiveName, field.name());\n+      }\n     }\n+  }\n \n-    public AnyValue callFunction( Context ctx, int functionId, AnyValue[] input )\n-            throws ProcedureException\n+  public ProcedureHandle procedure(QualifiedName name) throws ProcedureException\n+  {\n+    CallableProcedure proc = procedures.get(name);\n+    if (proc == null)\n     {\n-        CallableUserFunction func;\n-        try\n-        {\n-            func = functions.get( functionId );\n-        }\n-        catch ( IndexOutOfBoundsException e )\n-        {\n-            throw noSuchFunction( functionId );\n-        }\n-        return func.apply( ctx, input );\n+      throw noSuchProcedure(name);\n     }\n+    return new ProcedureHandle(proc.signature(), procedures.idOf(name));\n+  }\n \n-    public UserAggregator createAggregationFunction( Context ctx, QualifiedName name )\n-            throws ProcedureException\n+  public UserFunctionHandle function(QualifiedName name)\n+  {\n+    CallableUserFunction func = functions.get(name);\n+    if (func == null)\n     {\n-        CallableUserAggregationFunction func = aggregationFunctions.get( name );\n-        if ( func == null )\n-        {\n-            throw noSuchFunction( name );\n-        }\n-        return func.create(ctx);\n+      return null;\n     }\n+    return new UserFunctionHandle(func.signature(), functions.idOf(name));\n+  }\n \n-    public UserAggregator createAggregationFunction( Context ctx, int id )\n-            throws ProcedureException\n+  public UserFunctionHandle aggregationFunction(QualifiedName name)\n+  {\n+    CallableUserAggregationFunction func = aggregationFunctions.get(name);\n+    if (func == null)\n     {\n-        CallableUserAggregationFunction func = null;\n-        try\n-        {\n-            func = aggregationFunctions.get( id );\n-        }\n-        catch ( IndexOutOfBoundsException e )\n-        {\n-           throw noSuchFunction( id );\n-        }\n-        return func.create(ctx);\n+      return null;\n     }\n+    return new UserFunctionHandle(func.signature(), aggregationFunctions.idOf(name));\n+  }\n \n-    private ProcedureException noSuchProcedure( QualifiedName name )\n+  public RawIterator<Object[], ProcedureException> callProcedure(Context ctx, QualifiedName name, Object[] input, ResourceTracker resourceTracker)\n+      throws ProcedureException\n+  {\n+    CallableProcedure proc = procedures.get(name);\n+    if (proc == null)\n     {\n-        return new ProcedureException( Status.Procedure.ProcedureNotFound,\n-                \"There is no procedure with the name `%s` registered for this database instance. \" +\n-                \"Please ensure you've spelled the procedure name correctly and that the \" +\n-                \"procedure is properly deployed.\", name );\n+      throw noSuchProcedure(name);\n     }\n+    return proc.apply(ctx, input, resourceTracker);\n+  }\n \n-    private ProcedureException noSuchProcedure( int id )\n+  public RawIterator<Object[], ProcedureException> callProcedure(Context ctx, int id, Object[] input, ResourceTracker resourceTracker)\n+      throws ProcedureException\n+  {\n+    CallableProcedure proc;\n+    try\n     {\n-        return new ProcedureException( Status.Procedure.ProcedureNotFound,\n-                \"There is no procedure with the internal id `%d` registered for this database instance.\", id );\n+      proc = procedures.get(id);\n+    } catch (IndexOutOfBoundsException e)\n+    {\n+      throw noSuchProcedure(id);\n     }\n+    return proc.apply(ctx, input, resourceTracker);\n+  }\n \n-    private ProcedureException noSuchFunction( QualifiedName name )\n+  public AnyValue callFunction(Context ctx, QualifiedName name, AnyValue[] input)\n+      throws ProcedureException\n+  {\n+    CallableUserFunction func = functions.get(name);\n+    if (func == null)\n     {\n-        return new ProcedureException( Status.Procedure.ProcedureNotFound,\n-                \"There is no function with the name `%s` registered for this database instance. \" +\n-                \"Please ensure you've spelled the function name correctly and that the \" +\n-                \"function is properly deployed.\", name );\n+      throw noSuchFunction(name);\n     }\n+    return func.apply(ctx, input);\n+  }\n \n-    private ProcedureException noSuchFunction( int id )\n+  public AnyValue callFunction(Context ctx, int functionId, AnyValue[] input)\n+      throws ProcedureException\n+  {\n+    CallableUserFunction func;\n+    try\n+    {\n+      func = functions.get(functionId);\n+    } catch (IndexOutOfBoundsException e)\n     {\n-        return new ProcedureException( Status.Procedure.ProcedureNotFound,\n-                \"There is no function with the internal id `%d` registered for this database instance.\", id );\n+      throw noSuchFunction(functionId);\n     }\n+    return func.apply(ctx, input);\n+  }\n \n-    public Set<ProcedureSignature> getAllProcedures()\n+  public UserAggregator createAggregationFunction(Context ctx, QualifiedName name)\n+      throws ProcedureException\n+  {\n+    CallableUserAggregationFunction func = aggregationFunctions.get(name);\n+    if (func == null)\n     {\n-        return procedures.all().stream().map( CallableProcedure::signature ).collect( Collectors.toSet());\n+      throw noSuchFunction(name);\n     }\n+    return func.create(ctx);\n+  }\n \n-    public Set<UserFunctionSignature> getAllFunctions()\n+  public UserAggregator createAggregationFunction(Context ctx, int id)\n+      throws ProcedureException\n+  {\n+    CallableUserAggregationFunction func = null;\n+    try\n+    {\n+      func = aggregationFunctions.get(id);\n+    } catch (IndexOutOfBoundsException e)\n     {\n-        return Stream.concat(functions.all().stream().map( CallableUserFunction::signature ),\n-                aggregationFunctions.all().stream().map( CallableUserAggregationFunction::signature ))\n-                .collect( Collectors.toSet() );\n+      throw noSuchFunction(id);\n     }\n+    return func.create(ctx);\n+  }\n+\n+  private ProcedureException noSuchProcedure(QualifiedName name)\n+  {\n+    return new ProcedureException(Status.Procedure.ProcedureNotFound,\n+        \"There is no procedure with the name `%s` registered for this database instance. \" +\n+            \"Please ensure you've spelled the procedure name correctly and that the \" +\n+            \"procedure is properly deployed.\", name);\n+  }\n+\n+  private ProcedureException noSuchProcedure(int id)\n+  {\n+    return new ProcedureException(Status.Procedure.ProcedureNotFound,\n+        \"There is no procedure with the internal id `%d` registered for this database instance.\", id);\n+  }\n+\n+  private ProcedureException noSuchFunction(QualifiedName name)\n+  {\n+    return new ProcedureException(Status.Procedure.ProcedureNotFound,\n+        \"There is no function with the name `%s` registered for this database instance. \" +\n+            \"Please ensure you've spelled the function name correctly and that the \" +\n+            \"function is properly deployed.\", name);\n+  }\n+\n+  private ProcedureException noSuchFunction(int id)\n+  {\n+    return new ProcedureException(Status.Procedure.ProcedureNotFound,\n+        \"There is no function with the internal id `%d` registered for this database instance.\", id);\n+  }\n+\n+  public Set<ProcedureSignature> getAllProcedures()\n+  {\n+    return procedures.all().stream().map(CallableProcedure::signature).collect(Collectors.toSet());\n+  }\n+\n+  public Set<UserFunctionSignature> getAllFunctions()\n+  {\n+    return Stream.concat(functions.all().stream().map(CallableUserFunction::signature),\n+        aggregationFunctions.all().stream().map(CallableUserAggregationFunction::signature))\n+        .collect(Collectors.toSet());\n+  }\n }\n",
            "diff_size": 333
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "261",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 278).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "266",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "271",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 275).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "276",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "286",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/828/ProcedureRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/828/ProcedureRegistry.java\nindex b6ea900989b..bc6f64f6f71 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/828/ProcedureRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/828/ProcedureRegistry.java\n@@ -44,7 +44,6 @@ import org.neo4j.values.AnyValue;\n \n public class ProcedureRegistry\n {\n-\n     private final ProcedureHolder<CallableProcedure> procedures = new ProcedureHolder<>();\n     private final ProcedureHolder<CallableUserFunction> functions = new ProcedureHolder<>();\n     private final ProcedureHolder<CallableUserAggregationFunction> aggregationFunctions = new ProcedureHolder<>();\n@@ -58,17 +57,12 @@ public class ProcedureRegistry\n     {\n         ProcedureSignature signature = proc.signature();\n         QualifiedName name = signature.name();\n-\n-        String descriptiveName = signature.toString();\n+String descriptiveName = signature.toString();\n         validateSignature( descriptiveName, signature.inputSignature(), \"input\" );\n         validateSignature( descriptiveName, signature.outputSignature(), \"output\" );\n-\n-        if ( ! signature.isVoid() && signature.outputSignature().isEmpty() )\n+if ( ! signature.isVoid() && signature.outputSignature().isEmpty() )\n         {\n-            throw new ProcedureException(\n-                Status.Procedure.ProcedureRegistrationFailed,\n-                \"Procedures with zero output fields must be declared as VOID\"\n-            );\n+            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, \"Procedures with zero output fields must be declared as VOID\" );\n         }\n \n         CallableProcedure oldImplementation = procedures.get( name );\n@@ -84,9 +78,8 @@ public class ProcedureRegistry\n             }\n             else\n             {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Unable to register procedure, because the name `%s` is already in use.\", name );\n-            }\n+                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, \"Unable to register procedure, because the name `%s` is already in use.\", name );\n+    }\n         }\n     }\n \n@@ -99,8 +92,7 @@ public class ProcedureRegistry\n     {\n         UserFunctionSignature signature = function.signature();\n         QualifiedName name = signature.name();\n-\n-        CallableUserFunction oldImplementation = functions.get( name );\n+CallableUserFunction oldImplementation = functions.get( name );\n         if ( oldImplementation == null )\n         {\n             functions.put( name, function, signature.caseInsensitive() );\n@@ -113,9 +105,8 @@ public class ProcedureRegistry\n             }\n             else\n             {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Unable to register function, because the name `%s` is already in use.\", name );\n-            }\n+                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, \"Unable to register function, because the name `%s` is already in use.\", name );\n+    }\n         }\n     }\n \n@@ -128,8 +119,7 @@ public class ProcedureRegistry\n     {\n         UserFunctionSignature signature = function.signature();\n         QualifiedName name = signature.name();\n-\n-        CallableUserFunction oldImplementation = functions.get( name );\n+CallableUserFunction oldImplementation = functions.get( name );\n         if ( oldImplementation == null )\n         {\n             aggregationFunctions.put( name, function, signature.caseInsensitive() );\n@@ -142,24 +132,20 @@ public class ProcedureRegistry\n             }\n             else\n             {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Unable to register aggregation function, because the name `%s` is already in use.\", name );\n-            }\n+                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, \"Unable to register aggregation function, because the name `%s` is already in use.\", name );\n+    }\n         }\n     }\n \n-    private void validateSignature( String descriptiveName, List<FieldSignature> fields, String fieldType )\n-            throws ProcedureException\n-    {\n+    private void validateSignature( String descriptiveName, List<FieldSignature> fields, String fieldType ) throws ProcedureException\n+{\n         Set<String> names = new HashSet<>();\n         for ( FieldSignature field : fields )\n         {\n             if ( !names.add( field.name() ) )\n             {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Procedure `%s` cannot be registered, because it contains a duplicated \" + fieldType + \" field, '%s'. \" +\n-                        \"You need to rename or remove one of the duplicate fields.\", descriptiveName, field.name() );\n-            }\n+                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, \"Procedure `%s` cannot be registered, because it contains a duplicated \" + fieldType + \" field, '%s'. \" + \"You need to rename or remove one of the duplicate fields.\", descriptiveName, field.name() );\n+    }\n         }\n     }\n \n@@ -193,20 +179,19 @@ public class ProcedureRegistry\n         return new UserFunctionHandle( func.signature(), aggregationFunctions.idOf( name) );\n     }\n \n-    public RawIterator<Object[],ProcedureException> callProcedure( Context ctx, QualifiedName name, Object[] input, ResourceTracker resourceTracker )\n-            throws ProcedureException\n-    {\n+    public RawIterator<Object[],ProcedureException> callProcedure( Context ctx, QualifiedName name, Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n+{\n         CallableProcedure proc = procedures.get( name );\n         if ( proc == null )\n         {\n             throw noSuchProcedure( name );\n         }\n-        return proc.apply( ctx, input, resourceTracker );\n+\n+return proc.apply( ctx, input, resourceTracker );\n     }\n \n-    public RawIterator<Object[],ProcedureException> callProcedure( Context ctx, int id, Object[] input, ResourceTracker resourceTracker )\n-            throws ProcedureException\n-    {\n+    public RawIterator<Object[],ProcedureException> callProcedure( Context ctx, int id, Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n+{\n         CallableProcedure proc;\n         try\n         {\n@@ -216,23 +201,23 @@ public class ProcedureRegistry\n         {\n             throw noSuchProcedure( id );\n         }\n-        return proc.apply( ctx, input, resourceTracker );\n+\n+return proc.apply( ctx, input, resourceTracker );\n     }\n \n-    public AnyValue callFunction( Context ctx, QualifiedName name, AnyValue[] input )\n-            throws ProcedureException\n-    {\n+    public AnyValue callFunction( Context ctx, QualifiedName name, AnyValue[] input ) throws ProcedureException\n+{\n         CallableUserFunction func = functions.get( name );\n         if ( func == null )\n         {\n             throw noSuchFunction( name );\n         }\n-        return func.apply( ctx, input );\n+\n+return func.apply( ctx, input );\n     }\n \n-    public AnyValue callFunction( Context ctx, int functionId, AnyValue[] input )\n-            throws ProcedureException\n-    {\n+    public AnyValue callFunction( Context ctx, int functionId, AnyValue[] input ) throws ProcedureException\n+{\n         CallableUserFunction func;\n         try\n         {\n@@ -242,23 +227,23 @@ public class ProcedureRegistry\n         {\n             throw noSuchFunction( functionId );\n         }\n-        return func.apply( ctx, input );\n+\n+return func.apply( ctx, input );\n     }\n \n-    public UserAggregator createAggregationFunction( Context ctx, QualifiedName name )\n-            throws ProcedureException\n-    {\n+    public UserAggregator createAggregationFunction( Context ctx, QualifiedName name ) throws ProcedureException\n+{\n         CallableUserAggregationFunction func = aggregationFunctions.get( name );\n         if ( func == null )\n         {\n             throw noSuchFunction( name );\n         }\n-        return func.create(ctx);\n+\n+return func.create(ctx);\n     }\n \n-    public UserAggregator createAggregationFunction( Context ctx, int id )\n-            throws ProcedureException\n-    {\n+    public UserAggregator createAggregationFunction( Context ctx, int id ) throws ProcedureException\n+{\n         CallableUserAggregationFunction func = null;\n         try\n         {\n@@ -266,48 +251,38 @@ public class ProcedureRegistry\n         }\n         catch ( IndexOutOfBoundsException e )\n         {\n-           throw noSuchFunction( id );\n-        }\n+    throw noSuchFunction( id );\n+    }\n         return func.create(ctx);\n     }\n \n     private ProcedureException noSuchProcedure( QualifiedName name )\n     {\n-        return new ProcedureException( Status.Procedure.ProcedureNotFound,\n-                \"There is no procedure with the name `%s` registered for this database instance. \" +\n-                \"Please ensure you've spelled the procedure name correctly and that the \" +\n-                \"procedure is properly deployed.\", name );\n+        return new ProcedureException( Status.Procedure.ProcedureNotFound, \"There is no procedure with the name `%s` registered for this database instance. \" + \"Please ensure you've spelled the procedure name correctly and that the \" + \"procedure is properly deployed.\", name );\n     }\n \n     private ProcedureException noSuchProcedure( int id )\n     {\n-        return new ProcedureException( Status.Procedure.ProcedureNotFound,\n-                \"There is no procedure with the internal id `%d` registered for this database instance.\", id );\n+        return new ProcedureException( Status.Procedure.ProcedureNotFound, \"There is no procedure with the internal id `%d` registered for this database instance.\", id );\n     }\n \n     private ProcedureException noSuchFunction( QualifiedName name )\n     {\n-        return new ProcedureException( Status.Procedure.ProcedureNotFound,\n-                \"There is no function with the name `%s` registered for this database instance. \" +\n-                \"Please ensure you've spelled the function name correctly and that the \" +\n-                \"function is properly deployed.\", name );\n+        return new ProcedureException( Status.Procedure.ProcedureNotFound, \"There is no function with the name `%s` registered for this database instance. \" + \"Please ensure you've spelled the function name correctly and that the \" + \"function is properly deployed.\", name );\n     }\n \n     private ProcedureException noSuchFunction( int id )\n     {\n-        return new ProcedureException( Status.Procedure.ProcedureNotFound,\n-                \"There is no function with the internal id `%d` registered for this database instance.\", id );\n+        return new ProcedureException( Status.Procedure.ProcedureNotFound, \"There is no function with the internal id `%d` registered for this database instance.\", id );\n     }\n \n     public Set<ProcedureSignature> getAllProcedures()\n     {\n-        return procedures.all().stream().map( CallableProcedure::signature ).collect( Collectors.toSet());\n+        return procedures.all().stream().map( CallableProcedure::signature ).collect( Collectors.toSet() );\n     }\n \n     public Set<UserFunctionSignature> getAllFunctions()\n     {\n-        return Stream.concat(functions.all().stream().map( CallableUserFunction::signature ),\n-                aggregationFunctions.all().stream().map( CallableUserAggregationFunction::signature ))\n-                .collect( Collectors.toSet() );\n+        return Stream.concat(functions.all().stream().map( CallableUserFunction::signature ), aggregationFunctions.all().stream().map( CallableUserAggregationFunction::signature )).collect( Collectors.toSet() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 76
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3414",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "107",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "174",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "199",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "226",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "242",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "135",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "274",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "313",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "323",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "327",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "337",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3414/CatchupPollingProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3414/CatchupPollingProcess.java\nindex 0e697b390b2..af5d6464e17 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3414/CatchupPollingProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3414/CatchupPollingProcess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.tx;\n \n import java.io.IOException;\n@@ -71,296 +72,286 @@ import static org.neo4j.causalclustering.core.consensus.schedule.Timer.CancelMod\n  */\n public class CatchupPollingProcess extends LifecycleAdapter\n {\n-    enum Timers implements TimerName\n+  enum Timers implements TimerName\n+  {\n+    TX_PULLER_TIMER\n+  }\n+\n+  enum State\n+  {\n+    TX_PULLING,\n+    STORE_COPYING,\n+    PANIC,\n+    CANCELLED\n+  }\n+\n+  private final LocalDatabase localDatabase;\n+  private final Log log;\n+  private final Suspendable enableDisableOnStoreCopy;\n+  private final StoreCopyProcess storeCopyProcess;\n+  private final Supplier<DatabaseHealth> databaseHealthSupplier;\n+  private final CatchUpClient catchUpClient;\n+  private final UpstreamDatabaseStrategySelector selectionStrategyPipeline;\n+  private final TimerService timerService;\n+  private final long txPullIntervalMillis;\n+  private final BatchingTxApplier applier;\n+  private final PullRequestMonitor pullRequestMonitor;\n+  private final TopologyService topologyService;\n+\n+  private Timer timer;\n+  private volatile State state = TX_PULLING;\n+  private DatabaseHealth dbHealth;\n+  private CompletableFuture<Boolean> upToDateFuture; // we are up-to-date when we are successfully pulling\n+  private volatile long latestTxIdOfUpStream;\n+\n+  public CatchupPollingProcess(LogProvider logProvider, LocalDatabase localDatabase, Suspendable enableDisableOnSoreCopy, CatchUpClient catchUpClient,\n+                               UpstreamDatabaseStrategySelector selectionStrategy, TimerService timerService, long txPullIntervalMillis,\n+                               BatchingTxApplier applier, Monitors monitors, StoreCopyProcess storeCopyProcess,\n+                               Supplier<DatabaseHealth> databaseHealthSupplier, TopologyService topologyService)\n+\n+  {\n+    this.localDatabase = localDatabase;\n+    this.log = logProvider.getLog(getClass());\n+    this.enableDisableOnStoreCopy = enableDisableOnSoreCopy;\n+    this.catchUpClient = catchUpClient;\n+    this.selectionStrategyPipeline = selectionStrategy;\n+    this.timerService = timerService;\n+    this.txPullIntervalMillis = txPullIntervalMillis;\n+    this.applier = applier;\n+    this.pullRequestMonitor = monitors.newMonitor(PullRequestMonitor.class);\n+    this.storeCopyProcess = storeCopyProcess;\n+    this.databaseHealthSupplier = databaseHealthSupplier;\n+    this.topologyService = topologyService;\n+  }\n+\n+  @Override\n+  public synchronized void start()\n+  {\n+    state = TX_PULLING;\n+    timer = timerService.create(TX_PULLER_TIMER, Groups.pullUpdates, timeout -> onTimeout());\n+    timer.set(fixedTimeout(txPullIntervalMillis, MILLISECONDS));\n+    dbHealth = databaseHealthSupplier.get();\n+    upToDateFuture = new CompletableFuture<>();\n+  }\n+\n+  public Future<Boolean> upToDateFuture()\n+  {\n+    return upToDateFuture;\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    state = CANCELLED;\n+    timer.cancel(SYNC_WAIT);\n+  }\n+\n+  public State state()\n+  {\n+    return state;\n+  }\n+\n+  /**\n+   * Time to catchup!\n+   */\n+  private void onTimeout()\n+  {\n+    try\n     {\n-        TX_PULLER_TIMER\n-    }\n-\n-    enum State\n-    {\n-        TX_PULLING,\n-        STORE_COPYING,\n-        PANIC,\n-        CANCELLED\n-    }\n+      switch (state)\n+      {\n+        case TX_PULLING:\n+          pullTransactions();\n+          break;\n \n-    private final LocalDatabase localDatabase;\n-    private final Log log;\n-    private final Suspendable enableDisableOnStoreCopy;\n-    private final StoreCopyProcess storeCopyProcess;\n-    private final Supplier<DatabaseHealth> databaseHealthSupplier;\n-    private final CatchUpClient catchUpClient;\n-    private final UpstreamDatabaseStrategySelector selectionStrategyPipeline;\n-    private final TimerService timerService;\n-    private final long txPullIntervalMillis;\n-    private final BatchingTxApplier applier;\n-    private final PullRequestMonitor pullRequestMonitor;\n-    private final TopologyService topologyService;\n-\n-    private Timer timer;\n-    private volatile State state = TX_PULLING;\n-    private DatabaseHealth dbHealth;\n-    private CompletableFuture<Boolean> upToDateFuture; // we are up-to-date when we are successfully pulling\n-    private volatile long latestTxIdOfUpStream;\n-\n-    public CatchupPollingProcess( LogProvider logProvider, LocalDatabase localDatabase, Suspendable enableDisableOnSoreCopy, CatchUpClient catchUpClient,\n-                                  UpstreamDatabaseStrategySelector selectionStrategy, TimerService timerService, long txPullIntervalMillis,\n-                                  BatchingTxApplier applier, Monitors monitors, StoreCopyProcess storeCopyProcess,\n-                                  Supplier<DatabaseHealth> databaseHealthSupplier, TopologyService topologyService )\n+        case STORE_COPYING:\n+          copyStore();\n+          break;\n \n+        default:\n+          throw new IllegalStateException(\"Tried to execute catchup but was in state \" + state);\n+      }\n+    } catch (Throwable e)\n     {\n-        this.localDatabase = localDatabase;\n-        this.log = logProvider.getLog( getClass() );\n-        this.enableDisableOnStoreCopy = enableDisableOnSoreCopy;\n-        this.catchUpClient = catchUpClient;\n-        this.selectionStrategyPipeline = selectionStrategy;\n-        this.timerService = timerService;\n-        this.txPullIntervalMillis = txPullIntervalMillis;\n-        this.applier = applier;\n-        this.pullRequestMonitor = monitors.newMonitor( PullRequestMonitor.class );\n-        this.storeCopyProcess = storeCopyProcess;\n-        this.databaseHealthSupplier = databaseHealthSupplier;\n-        this.topologyService = topologyService;\n+      panic(e);\n     }\n \n-    @Override\n-    public synchronized void start()\n+    if (state != PANIC && state != CANCELLED)\n     {\n-        state = TX_PULLING;\n-        timer = timerService.create( TX_PULLER_TIMER, Groups.pullUpdates, timeout -> onTimeout() );\n-        timer.set( fixedTimeout( txPullIntervalMillis, MILLISECONDS ) );\n-        dbHealth = databaseHealthSupplier.get();\n-        upToDateFuture = new CompletableFuture<>();\n+      timer.reset();\n     }\n-\n-    public Future<Boolean> upToDateFuture()\n+  }\n+\n+  private synchronized void panic(Throwable e)\n+  {\n+    log.error(\"Unexpected issue in catchup process. No more catchup requests will be scheduled.\", e);\n+    dbHealth.panic(e);\n+    upToDateFuture.completeExceptionally(e);\n+    state = PANIC;\n+  }\n+\n+  private void pullTransactions()\n+  {\n+    MemberId upstream;\n+    try\n     {\n-        return upToDateFuture;\n-    }\n-\n-    @Override\n-    public void stop()\n+      upstream = selectionStrategyPipeline.bestUpstreamDatabase();\n+    } catch (UpstreamDatabaseSelectionException e)\n     {\n-        state = CANCELLED;\n-        timer.cancel( SYNC_WAIT );\n+      log.warn(\"Could not find upstream database from which to pull.\", e);\n+      return;\n     }\n \n-    public State state()\n+    StoreId localStoreId = localDatabase.storeId();\n+\n+    boolean moreToPull = true;\n+    int batchCount = 1;\n+    while (moreToPull)\n     {\n-        return state;\n+      moreToPull = pullAndApplyBatchOfTransactions(upstream, localStoreId, batchCount);\n+      batchCount++;\n     }\n+  }\n \n-    /**\n-     * Time to catchup!\n-     */\n-    private void onTimeout()\n+  private synchronized void handleTransaction(CommittedTransactionRepresentation tx)\n+  {\n+    if (state == PANIC)\n     {\n-        try\n-        {\n-            switch ( state )\n-            {\n-            case TX_PULLING:\n-                pullTransactions();\n-                break;\n-\n-            case STORE_COPYING:\n-                copyStore();\n-                break;\n-\n-            default:\n-                throw new IllegalStateException( \"Tried to execute catchup but was in state \" + state );\n-            }\n-        }\n-        catch ( Throwable e )\n-        {\n-            panic( e );\n-        }\n-\n-        if ( state != PANIC && state != CANCELLED )\n-        {\n-            timer.reset();\n-        }\n+      return;\n     }\n \n-    private synchronized void panic( Throwable e )\n+    try\n     {\n-        log.error( \"Unexpected issue in catchup process. No more catchup requests will be scheduled.\", e );\n-        dbHealth.panic( e );\n-        upToDateFuture.completeExceptionally( e );\n-        state = PANIC;\n+      applier.queue(tx);\n+    } catch (Throwable e)\n+    {\n+      panic(e);\n     }\n+  }\n \n-    private void pullTransactions()\n+  private synchronized void streamComplete()\n+  {\n+    if (state == PANIC)\n     {\n-        MemberId upstream;\n-        try\n-        {\n-            upstream = selectionStrategyPipeline.bestUpstreamDatabase();\n-        }\n-        catch ( UpstreamDatabaseSelectionException e )\n-        {\n-            log.warn( \"Could not find upstream database from which to pull.\", e );\n-            return;\n-        }\n-\n-        StoreId localStoreId = localDatabase.storeId();\n-\n-        boolean moreToPull = true;\n-        int batchCount = 1;\n-        while ( moreToPull )\n-        {\n-            moreToPull = pullAndApplyBatchOfTransactions( upstream, localStoreId, batchCount );\n-            batchCount++;\n-        }\n+      return;\n     }\n \n-    private synchronized void handleTransaction( CommittedTransactionRepresentation tx )\n+    try\n     {\n-        if ( state == PANIC )\n-        {\n-            return;\n-        }\n-\n-        try\n-        {\n-            applier.queue( tx );\n-        }\n-        catch ( Throwable e )\n-        {\n-            panic( e );\n-        }\n+      applier.applyBatch();\n+    } catch (Throwable e)\n+    {\n+      panic(e);\n     }\n+  }\n \n-    private synchronized void streamComplete()\n+  private boolean pullAndApplyBatchOfTransactions(MemberId upstream, StoreId localStoreId, int batchCount)\n+  {\n+    long lastQueuedTxId = applier.lastQueuedTxId();\n+    pullRequestMonitor.txPullRequest(lastQueuedTxId);\n+    TxPullRequest txPullRequest = new TxPullRequest(lastQueuedTxId, localStoreId);\n+    log.debug(\"Pull transactions from %s where tx id > %d [batch #%d]\", upstream, lastQueuedTxId, batchCount);\n+\n+    TxStreamFinishedResponse response;\n+    try\n     {\n-        if ( state == PANIC )\n+      AdvertisedSocketAddress fromAddress = topologyService.findCatchupAddress(upstream).orElseThrow(() -> new TopologyLookupException(upstream));\n+      response = catchUpClient.makeBlockingRequest(fromAddress, txPullRequest, new CatchUpResponseAdaptor<TxStreamFinishedResponse>()\n+      {\n+        @Override\n+        public void onTxPullResponse(CompletableFuture<TxStreamFinishedResponse> signal, TxPullResponse response)\n         {\n-            return;\n+          handleTransaction(response.tx());\n         }\n \n-        try\n-        {\n-            applier.applyBatch();\n-        }\n-        catch ( Throwable e )\n+        @Override\n+        public void onTxStreamFinishedResponse(CompletableFuture<TxStreamFinishedResponse> signal, TxStreamFinishedResponse response)\n         {\n-            panic( e );\n+          streamComplete();\n+          signal.complete(response);\n         }\n+      });\n+    } catch (CatchUpClientException | TopologyLookupException e)\n+    {\n+      log.warn(\"Exception occurred while pulling transactions. Will retry shortly.\", e);\n+      streamComplete();\n+      return false;\n     }\n \n-    private boolean pullAndApplyBatchOfTransactions( MemberId upstream, StoreId localStoreId, int batchCount )\n-    {\n-        long lastQueuedTxId = applier.lastQueuedTxId();\n-        pullRequestMonitor.txPullRequest( lastQueuedTxId );\n-        TxPullRequest txPullRequest = new TxPullRequest( lastQueuedTxId, localStoreId );\n-        log.debug( \"Pull transactions from %s where tx id > %d [batch #%d]\", upstream, lastQueuedTxId, batchCount );\n+    latestTxIdOfUpStream = response.latestTxId();\n \n-        TxStreamFinishedResponse response;\n-        try\n-        {\n-            AdvertisedSocketAddress fromAddress = topologyService.findCatchupAddress( upstream ).orElseThrow( () -> new TopologyLookupException( upstream ) );\n-            response = catchUpClient.makeBlockingRequest( fromAddress, txPullRequest, new CatchUpResponseAdaptor<TxStreamFinishedResponse>()\n-            {\n-                @Override\n-                public void onTxPullResponse( CompletableFuture<TxStreamFinishedResponse> signal, TxPullResponse response )\n-                {\n-                    handleTransaction( response.tx() );\n-                }\n-\n-                @Override\n-                public void onTxStreamFinishedResponse( CompletableFuture<TxStreamFinishedResponse> signal, TxStreamFinishedResponse response )\n-                {\n-                    streamComplete();\n-                    signal.complete( response );\n-                }\n-            } );\n-        }\n-        catch ( CatchUpClientException | TopologyLookupException e )\n-        {\n-            log.warn( \"Exception occurred while pulling transactions. Will retry shortly.\", e );\n-            streamComplete();\n-            return false;\n-        }\n+    switch (response.status())\n+    {\n+      case SUCCESS_END_OF_BATCH:\n+        return true;\n+      case SUCCESS_END_OF_STREAM:\n+        log.debug(\"Successfully pulled transactions from tx id %d\", lastQueuedTxId);\n+        upToDateFuture.complete(Boolean.TRUE);\n+        return false;\n+      case E_TRANSACTION_PRUNED:\n+        log.info(\"Tx pull unable to get transactions starting from %d since transactions have been pruned. Attempting a store copy.\", lastQueuedTxId);\n+        state = STORE_COPYING;\n+        return false;\n+      default:\n+        log.info(\"Tx pull request unable to get transactions > %d \" + lastQueuedTxId);\n+        return false;\n+    }\n+  }\n \n-        latestTxIdOfUpStream = response.latestTxId();\n+  private void copyStore()\n+  {\n+    StoreId localStoreId = localDatabase.storeId();\n+    downloadDatabase(localStoreId);\n+  }\n \n-        switch ( response.status() )\n-        {\n-        case SUCCESS_END_OF_BATCH:\n-            return true;\n-        case SUCCESS_END_OF_STREAM:\n-            log.debug( \"Successfully pulled transactions from tx id %d\", lastQueuedTxId );\n-            upToDateFuture.complete( Boolean.TRUE );\n-            return false;\n-        case E_TRANSACTION_PRUNED:\n-            log.info( \"Tx pull unable to get transactions starting from %d since transactions have been pruned. Attempting a store copy.\", lastQueuedTxId );\n-            state = STORE_COPYING;\n-            return false;\n-        default:\n-            log.info( \"Tx pull request unable to get transactions > %d \" + lastQueuedTxId );\n-            return false;\n-        }\n+  private void downloadDatabase(StoreId localStoreId)\n+  {\n+    try\n+    {\n+      localDatabase.stopForStoreCopy();\n+      enableDisableOnStoreCopy.disable();\n+    } catch (Throwable throwable)\n+    {\n+      throw new RuntimeException(throwable);\n     }\n \n-    private void copyStore()\n+    try\n+    {\n+      CatchupAddressProvider.UpstreamStrategyBoundAddressProvider upstreamStrategyBoundAddressProvider =\n+          new CatchupAddressProvider.UpstreamStrategyBoundAddressProvider(topologyService, selectionStrategyPipeline);\n+      storeCopyProcess.replaceWithStoreFrom(upstreamStrategyBoundAddressProvider, localStoreId);\n+    } catch (IOException | StoreCopyFailedException e)\n     {\n-        StoreId localStoreId = localDatabase.storeId();\n-        downloadDatabase( localStoreId );\n+      log.warn(\"Error copying store. Will retry shortly.\", e);\n+      return;\n+    } catch (DatabaseShutdownException e)\n+    {\n+      log.warn(\"Store copy aborted due to shutdown.\", e);\n+      return;\n     }\n \n-    private void downloadDatabase( StoreId localStoreId )\n+    try\n     {\n-        try\n-        {\n-            localDatabase.stopForStoreCopy();\n-            enableDisableOnStoreCopy.disable();\n-        }\n-        catch ( Throwable throwable )\n-        {\n-            throw new RuntimeException( throwable );\n-        }\n-\n-        try\n-        {\n-            CatchupAddressProvider.UpstreamStrategyBoundAddressProvider upstreamStrategyBoundAddressProvider =\n-                    new CatchupAddressProvider.UpstreamStrategyBoundAddressProvider( topologyService, selectionStrategyPipeline );\n-            storeCopyProcess.replaceWithStoreFrom( upstreamStrategyBoundAddressProvider, localStoreId );\n-        }\n-        catch ( IOException | StoreCopyFailedException e )\n-        {\n-            log.warn( \"Error copying store. Will retry shortly.\", e );\n-            return;\n-        }\n-        catch ( DatabaseShutdownException e )\n-        {\n-            log.warn( \"Store copy aborted due to shutdown.\", e );\n-            return;\n-        }\n-\n-        try\n-        {\n-            localDatabase.start();\n-            enableDisableOnStoreCopy.enable();\n-        }\n-        catch ( Throwable throwable )\n-        {\n-            throw new RuntimeException( throwable );\n-        }\n-\n-        latestTxIdOfUpStream = 0; // we will find out on the next pull request response\n-        state = TX_PULLING;\n-        applier.refreshFromNewStore();\n+      localDatabase.start();\n+      enableDisableOnStoreCopy.enable();\n+    } catch (Throwable throwable)\n+    {\n+      throw new RuntimeException(throwable);\n     }\n \n-    public String describeState()\n+    latestTxIdOfUpStream = 0; // we will find out on the next pull request response\n+    state = TX_PULLING;\n+    applier.refreshFromNewStore();\n+  }\n+\n+  public String describeState()\n+  {\n+    if (state == TX_PULLING && applier.lastQueuedTxId() > 0 && latestTxIdOfUpStream > 0)\n     {\n-        if ( state == TX_PULLING && applier.lastQueuedTxId() > 0 && latestTxIdOfUpStream > 0 )\n-        {\n-            return format( \"%s (%d of %d)\", TX_PULLING.name(), applier.lastQueuedTxId(), latestTxIdOfUpStream );\n-        }\n-        else\n-        {\n-            return state.name();\n-        }\n+      return format(\"%s (%d of %d)\", TX_PULLING.name(), applier.lastQueuedTxId(), latestTxIdOfUpStream);\n+    } else\n+    {\n+      return state.name();\n     }\n+  }\n }\n",
            "diff_size": 395
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 259).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "316",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3414/CatchupPollingProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3414/CatchupPollingProcess.java\nindex 0e697b390b2..6ecbaf21b2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3414/CatchupPollingProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3414/CatchupPollingProcess.java\n@@ -78,9 +78,7 @@ public class CatchupPollingProcess extends LifecycleAdapter\n \n     enum State\n     {\n-        TX_PULLING,\n-        STORE_COPYING,\n-        PANIC,\n+        TX_PULLING, STORE_COPYING, PANIC,\n         CANCELLED\n     }\n \n@@ -103,12 +101,9 @@ public class CatchupPollingProcess extends LifecycleAdapter\n     private CompletableFuture<Boolean> upToDateFuture; // we are up-to-date when we are successfully pulling\n     private volatile long latestTxIdOfUpStream;\n \n-    public CatchupPollingProcess( LogProvider logProvider, LocalDatabase localDatabase, Suspendable enableDisableOnSoreCopy, CatchUpClient catchUpClient,\n-                                  UpstreamDatabaseStrategySelector selectionStrategy, TimerService timerService, long txPullIntervalMillis,\n-                                  BatchingTxApplier applier, Monitors monitors, StoreCopyProcess storeCopyProcess,\n-                                  Supplier<DatabaseHealth> databaseHealthSupplier, TopologyService topologyService )\n-\n-    {\n+    public CatchupPollingProcess( LogProvider logProvider, LocalDatabase localDatabase, Suspendable enableDisableOnSoreCopy, CatchUpClient catchUpClient, UpstreamDatabaseStrategySelector selectionStrategy, TimerService timerService, long txPullIntervalMillis,\n+                                  BatchingTxApplier applier, Monitors monitors, StoreCopyProcess storeCopyProcess, Supplier<DatabaseHealth> databaseHealthSupplier, TopologyService topologyService )\n+{\n         this.localDatabase = localDatabase;\n         this.log = logProvider.getLog( getClass() );\n         this.enableDisableOnStoreCopy = enableDisableOnSoreCopy;\n@@ -162,12 +157,10 @@ public class CatchupPollingProcess extends LifecycleAdapter\n             case TX_PULLING:\n                 pullTransactions();\n                 break;\n-\n-            case STORE_COPYING:\n+    case STORE_COPYING:\n                 copyStore();\n                 break;\n-\n-            default:\n+    default:\n                 throw new IllegalStateException( \"Tried to execute catchup but was in state \" + state );\n             }\n         }\n@@ -254,8 +247,7 @@ public class CatchupPollingProcess extends LifecycleAdapter\n         pullRequestMonitor.txPullRequest( lastQueuedTxId );\n         TxPullRequest txPullRequest = new TxPullRequest( lastQueuedTxId, localStoreId );\n         log.debug( \"Pull transactions from %s where tx id > %d [batch #%d]\", upstream, lastQueuedTxId, batchCount );\n-\n-        TxStreamFinishedResponse response;\n+TxStreamFinishedResponse response;\n         try\n         {\n             AdvertisedSocketAddress fromAddress = topologyService.findCatchupAddress( upstream ).orElseThrow( () -> new TopologyLookupException( upstream ) );\n@@ -283,8 +275,7 @@ public class CatchupPollingProcess extends LifecycleAdapter\n         }\n \n         latestTxIdOfUpStream = response.latestTxId();\n-\n-        switch ( response.status() )\n+switch ( response.status() )\n         {\n         case SUCCESS_END_OF_BATCH:\n             return true;\n@@ -322,9 +313,8 @@ public class CatchupPollingProcess extends LifecycleAdapter\n \n         try\n         {\n-            CatchupAddressProvider.UpstreamStrategyBoundAddressProvider upstreamStrategyBoundAddressProvider =\n-                    new CatchupAddressProvider.UpstreamStrategyBoundAddressProvider( topologyService, selectionStrategyPipeline );\n-            storeCopyProcess.replaceWithStoreFrom( upstreamStrategyBoundAddressProvider, localStoreId );\n+            CatchupAddressProvider.UpstreamStrategyBoundAddressProvider upstreamStrategyBoundAddressProvider = new CatchupAddressProvider.UpstreamStrategyBoundAddressProvider( topologyService, selectionStrategyPipeline );\n+storeCopyProcess.replaceWithStoreFrom( upstreamStrategyBoundAddressProvider, localStoreId );\n         }\n         catch ( IOException | StoreCopyFailedException e )\n         {\n@@ -363,4 +353,4 @@ public class CatchupPollingProcess extends LifecycleAdapter\n             return state.name();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "83",
                    "column": "24",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "85",
                    "column": "15",
                    "severity": "error",
                    "message": "'{' at column 15 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "85",
                    "column": "15",
                    "severity": "error",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "85",
                    "column": "60",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 423).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "column": "28",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "203",
                    "column": "9",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "203",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "348",
                    "column": "33",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "348",
                    "column": "64",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3414/CatchupPollingProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3414/CatchupPollingProcess.java\nindex 0e697b390b2..b691b23dc9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3414/CatchupPollingProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3414/CatchupPollingProcess.java\n@@ -23,7 +23,6 @@ import java.io.IOException;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.Future;\n import java.util.function.Supplier;\n-\n import org.neo4j.causalclustering.catchup.CatchUpClient;\n import org.neo4j.causalclustering.catchup.CatchUpClientException;\n import org.neo4j.causalclustering.catchup.CatchUpResponseAdaptor;\n@@ -50,15 +49,22 @@ import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.logging.Log;\n import org.neo4j.logging.LogProvider;\n import org.neo4j.scheduler.JobScheduler.Groups;\n-\n import static java.lang.String.format;\n+\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+\n import static org.neo4j.causalclustering.catchup.tx.CatchupPollingProcess.State.CANCELLED;\n+\n import static org.neo4j.causalclustering.catchup.tx.CatchupPollingProcess.State.PANIC;\n+\n import static org.neo4j.causalclustering.catchup.tx.CatchupPollingProcess.State.STORE_COPYING;\n+\n import static org.neo4j.causalclustering.catchup.tx.CatchupPollingProcess.State.TX_PULLING;\n+\n import static org.neo4j.causalclustering.catchup.tx.CatchupPollingProcess.Timers.TX_PULLER_TIMER;\n+\n import static org.neo4j.causalclustering.core.consensus.schedule.TimeoutFactory.fixedTimeout;\n+\n import static org.neo4j.causalclustering.core.consensus.schedule.Timer.CancelMode.SYNC_WAIT;\n \n /**\n@@ -69,20 +75,14 @@ import static org.neo4j.causalclustering.core.consensus.schedule.Timer.CancelMod\n  * If the necessary transactions are not remotely available then a fresh copy of the\n  * entire store will be pulled down.\n  */\n+\n public class CatchupPollingProcess extends LifecycleAdapter\n {\n     enum Timers implements TimerName\n     {\n-        TX_PULLER_TIMER\n-    }\n+        TX_PULLER_TIMER}\n \n-    enum State\n-    {\n-        TX_PULLING,\n-        STORE_COPYING,\n-        PANIC,\n-        CANCELLED\n-    }\n+    enum State{ TX_PULLING, STORE_COPYING, PANIC, CANCELLED}\n \n     private final LocalDatabase localDatabase;\n     private final Log log;\n@@ -96,18 +96,13 @@ public class CatchupPollingProcess extends LifecycleAdapter\n     private final BatchingTxApplier applier;\n     private final PullRequestMonitor pullRequestMonitor;\n     private final TopologyService topologyService;\n-\n     private Timer timer;\n     private volatile State state = TX_PULLING;\n     private DatabaseHealth dbHealth;\n     private CompletableFuture<Boolean> upToDateFuture; // we are up-to-date when we are successfully pulling\n     private volatile long latestTxIdOfUpStream;\n \n-    public CatchupPollingProcess( LogProvider logProvider, LocalDatabase localDatabase, Suspendable enableDisableOnSoreCopy, CatchUpClient catchUpClient,\n-                                  UpstreamDatabaseStrategySelector selectionStrategy, TimerService timerService, long txPullIntervalMillis,\n-                                  BatchingTxApplier applier, Monitors monitors, StoreCopyProcess storeCopyProcess,\n-                                  Supplier<DatabaseHealth> databaseHealthSupplier, TopologyService topologyService )\n-\n+    public CatchupPollingProcess( LogProvider logProvider, LocalDatabase localDatabase, Suspendable enableDisableOnSoreCopy, CatchUpClient catchUpClient, UpstreamDatabaseStrategySelector selectionStrategy, TimerService timerService, long txPullIntervalMillis, BatchingTxApplier applier, Monitors monitors, StoreCopyProcess storeCopyProcess, Supplier<DatabaseHealth> databaseHealthSupplier, TopologyService topologyService )\n     {\n         this.localDatabase = localDatabase;\n         this.log = logProvider.getLog( getClass() );\n@@ -153,6 +148,7 @@ public class CatchupPollingProcess extends LifecycleAdapter\n     /**\n      * Time to catchup!\n      */\n+\n     private void onTimeout()\n     {\n         try\n@@ -162,11 +158,9 @@ public class CatchupPollingProcess extends LifecycleAdapter\n             case TX_PULLING:\n                 pullTransactions();\n                 break;\n-\n             case STORE_COPYING:\n                 copyStore();\n                 break;\n-\n             default:\n                 throw new IllegalStateException( \"Tried to execute catchup but was in state \" + state );\n             }\n@@ -176,7 +170,7 @@ public class CatchupPollingProcess extends LifecycleAdapter\n             panic( e );\n         }\n \n-        if ( state != PANIC && state != CANCELLED )\n+        if ( state != PANIC&& state != CANCELLED )\n         {\n             timer.reset();\n         }\n@@ -204,10 +198,9 @@ public class CatchupPollingProcess extends LifecycleAdapter\n         }\n \n         StoreId localStoreId = localDatabase.storeId();\n-\n         boolean moreToPull = true;\n         int batchCount = 1;\n-        while ( moreToPull )\n+        while( moreToPull)\n         {\n             moreToPull = pullAndApplyBatchOfTransactions( upstream, localStoreId, batchCount );\n             batchCount++;\n@@ -254,26 +247,25 @@ public class CatchupPollingProcess extends LifecycleAdapter\n         pullRequestMonitor.txPullRequest( lastQueuedTxId );\n         TxPullRequest txPullRequest = new TxPullRequest( lastQueuedTxId, localStoreId );\n         log.debug( \"Pull transactions from %s where tx id > %d [batch #%d]\", upstream, lastQueuedTxId, batchCount );\n-\n         TxStreamFinishedResponse response;\n         try\n         {\n             AdvertisedSocketAddress fromAddress = topologyService.findCatchupAddress( upstream ).orElseThrow( () -> new TopologyLookupException( upstream ) );\n             response = catchUpClient.makeBlockingRequest( fromAddress, txPullRequest, new CatchUpResponseAdaptor<TxStreamFinishedResponse>()\n-            {\n-                @Override\n-                public void onTxPullResponse( CompletableFuture<TxStreamFinishedResponse> signal, TxPullResponse response )\n-                {\n-                    handleTransaction( response.tx() );\n-                }\n-\n-                @Override\n-                public void onTxStreamFinishedResponse( CompletableFuture<TxStreamFinishedResponse> signal, TxStreamFinishedResponse response )\n-                {\n-                    streamComplete();\n-                    signal.complete( response );\n-                }\n-            } );\n+{\n+    @Override\n+    public void onTxPullResponse( CompletableFuture<TxStreamFinishedResponse> signal, TxPullResponse response )\n+    {\n+        handleTransaction( response.tx() );\n+    }\n+\n+    @Override\n+    public void onTxStreamFinishedResponse( CompletableFuture<TxStreamFinishedResponse> signal, TxStreamFinishedResponse response )\n+    {\n+        streamComplete();\n+        signal.complete( response );\n+    }\n+} );\n         }\n         catch ( CatchUpClientException | TopologyLookupException e )\n         {\n@@ -283,7 +275,6 @@ public class CatchupPollingProcess extends LifecycleAdapter\n         }\n \n         latestTxIdOfUpStream = response.latestTxId();\n-\n         switch ( response.status() )\n         {\n         case SUCCESS_END_OF_BATCH:\n@@ -322,8 +313,7 @@ public class CatchupPollingProcess extends LifecycleAdapter\n \n         try\n         {\n-            CatchupAddressProvider.UpstreamStrategyBoundAddressProvider upstreamStrategyBoundAddressProvider =\n-                    new CatchupAddressProvider.UpstreamStrategyBoundAddressProvider( topologyService, selectionStrategyPipeline );\n+            CatchupAddressProvider.UpstreamStrategyBoundAddressProvider upstreamStrategyBoundAddressProvider = new CatchupAddressProvider. UpstreamStrategyBoundAddressProvider( topologyService, selectionStrategyPipeline );\n             storeCopyProcess.replaceWithStoreFrom( upstreamStrategyBoundAddressProvider, localStoreId );\n         }\n         catch ( IOException | StoreCopyFailedException e )\n@@ -331,11 +321,12 @@ public class CatchupPollingProcess extends LifecycleAdapter\n             log.warn( \"Error copying store. Will retry shortly.\", e );\n             return;\n         }\n-        catch ( DatabaseShutdownException e )\n-        {\n-            log.warn( \"Store copy aborted due to shutdown.\", e );\n-            return;\n-        }\n+\n+            catch ( DatabaseShutdownException e )\n+            {\n+                log.warn( \"Store copy aborted due to shutdown.\", e );\n+                return;\n+            }\n \n         try\n         {\n@@ -354,7 +345,7 @@ public class CatchupPollingProcess extends LifecycleAdapter\n \n     public String describeState()\n     {\n-        if ( state == TX_PULLING && applier.lastQueuedTxId() > 0 && latestTxIdOfUpStream > 0 )\n+        if ( state == TX_PULLING&& applier.lastQueuedTxId() > 0&& latestTxIdOfUpStream > 0 )\n         {\n             return format( \"%s (%d of %d)\", TX_PULLING.name(), applier.lastQueuedTxId(), latestTxIdOfUpStream );\n         }\n@@ -363,4 +354,4 @@ public class CatchupPollingProcess extends LifecycleAdapter\n             return state.name();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
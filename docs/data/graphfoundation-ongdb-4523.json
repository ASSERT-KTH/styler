{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4523",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "72",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4523/MasterClient214.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4523/MasterClient214.java\nindex 0547608e337..c9c9a4a7043 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4523/MasterClient214.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4523/MasterClient214.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha;\n \n import org.jboss.netty.buffer.ChannelBuffer;\n@@ -68,258 +69,257 @@ import static org.neo4j.com.ProtocolVersion.INTERNAL_PROTOCOL_VERSION;\n  */\n public class MasterClient214 extends Client<Master> implements MasterClient\n {\n-    public static final ProtocolVersion PROTOCOL_VERSION = new ProtocolVersion( (byte) 8, INTERNAL_PROTOCOL_VERSION );\n-\n-    public static final ObjectSerializer<LockResult> LOCK_RESULT_OBJECT_SERIALIZER = ( responseObject, result ) ->\n-    {\n-        result.writeByte( responseObject.getStatus().ordinal() );\n-        if ( responseObject.getStatus() == LockStatus.DEAD_LOCKED )\n-        {\n-            writeString( result, responseObject.getMessage() );\n-        }\n-    };\n-\n-    public static final Deserializer<LockResult> LOCK_RESULT_DESERIALIZER = ( buffer, temporaryBuffer ) ->\n-    {\n-        byte statusOrdinal = buffer.readByte();\n-        LockStatus status;\n-        try\n-        {\n-            status = LockStatus.values()[statusOrdinal];\n-        }\n-        catch ( ArrayIndexOutOfBoundsException e )\n-        {\n-            throw withInvalidOrdinalMessage( buffer, statusOrdinal, e );\n-        }\n-        return status == LockStatus.DEAD_LOCKED ? new LockResult( LockStatus.DEAD_LOCKED, readString( buffer ) )\n-                                   : new LockResult( status );\n-    };\n-\n-    protected static ArrayIndexOutOfBoundsException withInvalidOrdinalMessage(\n-            ChannelBuffer buffer, byte statusOrdinal, ArrayIndexOutOfBoundsException e )\n-    {\n-        int maxBytesToPrint = 1024 * 40;\n-        return Exceptions.withMessage( e,\n-                format( \"%s | read invalid ordinal %d. First %db of this channel buffer is:%n%s\",\n-                        e.getMessage(), statusOrdinal, maxBytesToPrint,\n-                        beginningOfBufferAsHexString( buffer, maxBytesToPrint ) ) );\n-    }\n-\n-    private final long lockReadTimeoutMillis;\n-    private final HaRequestTypes requestTypes;\n-    private final Deserializer<LockResult> lockResultDeserializer;\n-\n-    public MasterClient214( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n-                            LogProvider logProvider, StoreId storeId, long readTimeoutMillis,\n-                            long lockReadTimeoutMillis, int maxConcurrentChannels, int chunkSize,\n-                            ResponseUnpacker responseUnpacker,\n-                            ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor,\n-                            LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n-    {\n-        super( destinationHostNameOrIp, destinationPort, originHostNameOrIp, logProvider, storeId,\n-                MasterServer.FRAME_LENGTH, readTimeoutMillis, maxConcurrentChannels, chunkSize,\n-                responseUnpacker, byteCounterMonitor, requestMonitor, entryReader );\n-        this.lockReadTimeoutMillis = lockReadTimeoutMillis;\n-        this.requestTypes = new HaRequestType210( entryReader, createLockResultSerializer() );\n-        this.lockResultDeserializer = createLockResultDeserializer();\n-    }\n-\n-    @Override\n-    protected Protocol createProtocol( int chunkSize, byte applicationProtocolVersion )\n-    {\n-        return new Protocol214( chunkSize, applicationProtocolVersion, getInternalProtocolVersion() );\n-    }\n-\n-    @Override\n-    public ProtocolVersion getProtocolVersion()\n-    {\n-        return PROTOCOL_VERSION;\n-    }\n-\n-    @Override\n-    public ObjectSerializer<LockResult> createLockResultSerializer()\n-    {\n-        return LOCK_RESULT_OBJECT_SERIALIZER;\n-    }\n-\n-    @Override\n-    public Deserializer<LockResult> createLockResultDeserializer()\n-    {\n-        return LOCK_RESULT_DESERIALIZER;\n-    }\n+  public static final ProtocolVersion PROTOCOL_VERSION = new ProtocolVersion((byte) 8, INTERNAL_PROTOCOL_VERSION);\n \n-    @Override\n-    protected long getReadTimeout( RequestType type, long readTimeout )\n+  public static final ObjectSerializer<LockResult> LOCK_RESULT_OBJECT_SERIALIZER = (responseObject, result) ->\n+  {\n+    result.writeByte(responseObject.getStatus().ordinal());\n+    if (responseObject.getStatus() == LockStatus.DEAD_LOCKED)\n     {\n-        if ( HaRequestTypes.Type.ACQUIRE_EXCLUSIVE_LOCK.is( type ) ||\n-             HaRequestTypes.Type.ACQUIRE_SHARED_LOCK.is( type ) )\n-        {\n-            return lockReadTimeoutMillis;\n-        }\n-        if ( HaRequestTypes.Type.COPY_STORE.is( type ) )\n-        {\n-            return readTimeout * 2;\n-        }\n-        return readTimeout;\n+      writeString(result, responseObject.getMessage());\n     }\n+  };\n \n-    @Override\n-    protected boolean shouldCheckStoreId( RequestType type )\n+  public static final Deserializer<LockResult> LOCK_RESULT_DESERIALIZER = (buffer, temporaryBuffer) ->\n+  {\n+    byte statusOrdinal = buffer.readByte();\n+    LockStatus status;\n+    try\n     {\n-        return !HaRequestTypes.Type.COPY_STORE.is( type );\n-    }\n-\n-    @Override\n-    public Response<IdAllocation> allocateIds( RequestContext context, final IdType idType )\n+      status = LockStatus.values()[statusOrdinal];\n+    } catch (ArrayIndexOutOfBoundsException e)\n     {\n-        Serializer serializer = buffer -> buffer.writeByte( idType.ordinal() );\n-        Deserializer<IdAllocation> deserializer = ( buffer, temporaryBuffer ) -> readIdAllocation( buffer );\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.ALLOCATE_IDS ), context, serializer, deserializer );\n+      throw withInvalidOrdinalMessage(buffer, statusOrdinal, e);\n     }\n-\n-    @Override\n-    public Response<Integer> createRelationshipType( RequestContext context, final String name )\n+    return status == LockStatus.DEAD_LOCKED ? new LockResult(LockStatus.DEAD_LOCKED, readString(buffer))\n+        : new LockResult(status);\n+  };\n+\n+  protected static ArrayIndexOutOfBoundsException withInvalidOrdinalMessage(\n+      ChannelBuffer buffer, byte statusOrdinal, ArrayIndexOutOfBoundsException e)\n+  {\n+    int maxBytesToPrint = 1024 * 40;\n+    return Exceptions.withMessage(e,\n+        format(\"%s | read invalid ordinal %d. First %db of this channel buffer is:%n%s\",\n+            e.getMessage(), statusOrdinal, maxBytesToPrint,\n+            beginningOfBufferAsHexString(buffer, maxBytesToPrint)));\n+  }\n+\n+  private final long lockReadTimeoutMillis;\n+  private final HaRequestTypes requestTypes;\n+  private final Deserializer<LockResult> lockResultDeserializer;\n+\n+  public MasterClient214(String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n+                         LogProvider logProvider, StoreId storeId, long readTimeoutMillis,\n+                         long lockReadTimeoutMillis, int maxConcurrentChannels, int chunkSize,\n+                         ResponseUnpacker responseUnpacker,\n+                         ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor,\n+                         LogEntryReader<ReadableClosablePositionAwareChannel> entryReader)\n+  {\n+    super(destinationHostNameOrIp, destinationPort, originHostNameOrIp, logProvider, storeId,\n+        MasterServer.FRAME_LENGTH, readTimeoutMillis, maxConcurrentChannels, chunkSize,\n+        responseUnpacker, byteCounterMonitor, requestMonitor, entryReader);\n+    this.lockReadTimeoutMillis = lockReadTimeoutMillis;\n+    this.requestTypes = new HaRequestType210(entryReader, createLockResultSerializer());\n+    this.lockResultDeserializer = createLockResultDeserializer();\n+  }\n+\n+  @Override\n+  protected Protocol createProtocol(int chunkSize, byte applicationProtocolVersion)\n+  {\n+    return new Protocol214(chunkSize, applicationProtocolVersion, getInternalProtocolVersion());\n+  }\n+\n+  @Override\n+  public ProtocolVersion getProtocolVersion()\n+  {\n+    return PROTOCOL_VERSION;\n+  }\n+\n+  @Override\n+  public ObjectSerializer<LockResult> createLockResultSerializer()\n+  {\n+    return LOCK_RESULT_OBJECT_SERIALIZER;\n+  }\n+\n+  @Override\n+  public Deserializer<LockResult> createLockResultDeserializer()\n+  {\n+    return LOCK_RESULT_DESERIALIZER;\n+  }\n+\n+  @Override\n+  protected long getReadTimeout(RequestType type, long readTimeout)\n+  {\n+    if (HaRequestTypes.Type.ACQUIRE_EXCLUSIVE_LOCK.is(type) ||\n+        HaRequestTypes.Type.ACQUIRE_SHARED_LOCK.is(type))\n     {\n-        Serializer serializer = buffer -> writeString( buffer, name );\n-        Deserializer<Integer> deserializer = ( buffer, temporaryBuffer ) -> buffer.readInt();\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.CREATE_RELATIONSHIP_TYPE ), context, serializer,\n-                deserializer );\n+      return lockReadTimeoutMillis;\n     }\n-\n-    @Override\n-    public Response<Integer> createPropertyKey( RequestContext context, final String name )\n+    if (HaRequestTypes.Type.COPY_STORE.is(type))\n     {\n-        Serializer serializer = buffer -> writeString( buffer, name );\n-        Deserializer<Integer> deserializer = ( buffer, temporaryBuffer ) -> buffer.readInt();\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.CREATE_PROPERTY_KEY ), context, serializer,\n-                deserializer );\n+      return readTimeout * 2;\n     }\n-\n-    @Override\n-    public Response<Integer> createLabel( RequestContext context, final String name )\n+    return readTimeout;\n+  }\n+\n+  @Override\n+  protected boolean shouldCheckStoreId(RequestType type)\n+  {\n+    return !HaRequestTypes.Type.COPY_STORE.is(type);\n+  }\n+\n+  @Override\n+  public Response<IdAllocation> allocateIds(RequestContext context, final IdType idType)\n+  {\n+    Serializer serializer = buffer -> buffer.writeByte(idType.ordinal());\n+    Deserializer<IdAllocation> deserializer = (buffer, temporaryBuffer) -> readIdAllocation(buffer);\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.ALLOCATE_IDS), context, serializer, deserializer);\n+  }\n+\n+  @Override\n+  public Response<Integer> createRelationshipType(RequestContext context, final String name)\n+  {\n+    Serializer serializer = buffer -> writeString(buffer, name);\n+    Deserializer<Integer> deserializer = (buffer, temporaryBuffer) -> buffer.readInt();\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.CREATE_RELATIONSHIP_TYPE), context, serializer,\n+        deserializer);\n+  }\n+\n+  @Override\n+  public Response<Integer> createPropertyKey(RequestContext context, final String name)\n+  {\n+    Serializer serializer = buffer -> writeString(buffer, name);\n+    Deserializer<Integer> deserializer = (buffer, temporaryBuffer) -> buffer.readInt();\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.CREATE_PROPERTY_KEY), context, serializer,\n+        deserializer);\n+  }\n+\n+  @Override\n+  public Response<Integer> createLabel(RequestContext context, final String name)\n+  {\n+    Serializer serializer = buffer -> writeString(buffer, name);\n+    Deserializer<Integer> deserializer = (buffer, temporaryBuffer) -> buffer.readInt();\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.CREATE_LABEL), context, serializer, deserializer);\n+  }\n+\n+  @Override\n+  public Response<Void> newLockSession(RequestContext context)\n+  {\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.NEW_LOCK_SESSION), context, EMPTY_SERIALIZER,\n+        VOID_DESERIALIZER);\n+  }\n+\n+  @Override\n+  public Response<LockResult> acquireSharedLock(\n+      RequestContext context, ResourceType type, long... resourceIds)\n+  {\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.ACQUIRE_SHARED_LOCK), context,\n+        new AcquireLockSerializer(type, resourceIds), lockResultDeserializer);\n+  }\n+\n+  @Override\n+  public Response<LockResult> acquireExclusiveLock(\n+      RequestContext context, ResourceType type, long... resourceIds)\n+  {\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.ACQUIRE_EXCLUSIVE_LOCK), context,\n+        new AcquireLockSerializer(type, resourceIds), lockResultDeserializer);\n+  }\n+\n+  @Override\n+  public Response<Long> commit(RequestContext context, TransactionRepresentation tx)\n+  {\n+    Serializer serializer = new Protocol.TransactionSerializer(tx);\n+    Deserializer<Long> deserializer = (buffer, temporaryBuffer) -> buffer.readLong();\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.COMMIT), context, serializer, deserializer);\n+  }\n+\n+  @Override\n+  public Response<Void> endLockSession(RequestContext context, final boolean success)\n+  {\n+    Serializer serializer = buffer -> buffer.writeByte(success ? 1 : 0);\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.END_LOCK_SESSION), context, serializer,\n+        VOID_DESERIALIZER);\n+  }\n+\n+  @Override\n+  public Response<Void> pullUpdates(RequestContext context)\n+  {\n+    return pullUpdates(context, ResponseUnpacker.TxHandler.NO_OP_TX_HANDLER);\n+  }\n+\n+  @Override\n+  public Response<Void> pullUpdates(RequestContext context, ResponseUnpacker.TxHandler txHandler)\n+  {\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.PULL_UPDATES), context,\n+        EMPTY_SERIALIZER, VOID_DESERIALIZER, null, txHandler);\n+  }\n+\n+  @Override\n+  public Response<HandshakeResult> handshake(final long txId, StoreId storeId)\n+  {\n+    Serializer serializer = buffer -> buffer.writeLong(txId);\n+    Deserializer<HandshakeResult> deserializer =\n+        (buffer, temporaryBuffer) -> new HandshakeResult(buffer.readLong(), buffer.readLong());\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.HANDSHAKE), RequestContext.EMPTY,\n+        serializer, deserializer, storeId, ResponseUnpacker.TxHandler.NO_OP_TX_HANDLER);\n+  }\n+\n+  @Override\n+  public Response<Void> copyStore(RequestContext context, final StoreWriter writer)\n+  {\n+    context = stripFromTransactions(context);\n+    return sendRequest(requestTypes.type(HaRequestTypes.Type.COPY_STORE), context, EMPTY_SERIALIZER,\n+        createFileStreamDeserializer(writer));\n+  }\n+\n+  protected Deserializer<Void> createFileStreamDeserializer(StoreWriter writer)\n+  {\n+    return new Protocol.FileStreamsDeserializer210(writer);\n+  }\n+\n+  private RequestContext stripFromTransactions(RequestContext context)\n+  {\n+    return new RequestContext(context.getEpoch(), context.machineId(), context.getEventIdentifier(),\n+        0, context.getChecksum());\n+  }\n+\n+  private static IdAllocation readIdAllocation(ChannelBuffer buffer)\n+  {\n+    int numberOfDefragIds = buffer.readInt();\n+    long[] defragIds = new long[numberOfDefragIds];\n+    for (int i = 0; i < numberOfDefragIds; i++)\n     {\n-        Serializer serializer = buffer -> writeString( buffer, name );\n-        Deserializer<Integer> deserializer = ( buffer, temporaryBuffer ) -> buffer.readInt();\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.CREATE_LABEL ), context, serializer, deserializer );\n+      defragIds[i] = buffer.readLong();\n     }\n-\n-    @Override\n-    public Response<Void> newLockSession( RequestContext context )\n+    long rangeStart = buffer.readLong();\n+    int rangeLength = buffer.readInt();\n+    long highId = buffer.readLong();\n+    long defragCount = buffer.readLong();\n+    return new IdAllocation(new IdRange(defragIds, rangeStart, rangeLength),\n+        highId, defragCount);\n+  }\n+\n+  private static class AcquireLockSerializer implements Serializer\n+  {\n+    private final ResourceType type;\n+    private final long[] resourceIds;\n+\n+    AcquireLockSerializer(ResourceType type, long... resourceIds)\n     {\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.NEW_LOCK_SESSION ), context, EMPTY_SERIALIZER,\n-                VOID_DESERIALIZER );\n+      this.type = type;\n+      this.resourceIds = resourceIds;\n     }\n \n     @Override\n-    public Response<LockResult> acquireSharedLock(\n-            RequestContext context, ResourceType type, long... resourceIds )\n-    {\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.ACQUIRE_SHARED_LOCK ), context,\n-                new AcquireLockSerializer( type, resourceIds ), lockResultDeserializer );\n-    }\n-\n-    @Override\n-    public Response<LockResult> acquireExclusiveLock(\n-            RequestContext context, ResourceType type, long... resourceIds )\n-    {\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.ACQUIRE_EXCLUSIVE_LOCK ), context,\n-                new AcquireLockSerializer( type, resourceIds ), lockResultDeserializer );\n-    }\n-\n-    @Override\n-    public Response<Long> commit( RequestContext context, TransactionRepresentation tx )\n-    {\n-        Serializer serializer = new Protocol.TransactionSerializer( tx );\n-        Deserializer<Long> deserializer = ( buffer, temporaryBuffer ) -> buffer.readLong();\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.COMMIT ), context, serializer, deserializer );\n-    }\n-\n-    @Override\n-    public Response<Void> endLockSession( RequestContext context, final boolean success )\n-    {\n-        Serializer serializer = buffer -> buffer.writeByte( success ? 1 : 0 );\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.END_LOCK_SESSION ), context, serializer,\n-                VOID_DESERIALIZER );\n-    }\n-\n-    @Override\n-    public Response<Void> pullUpdates( RequestContext context )\n-    {\n-        return pullUpdates( context, ResponseUnpacker.TxHandler.NO_OP_TX_HANDLER );\n-    }\n-\n-    @Override\n-    public Response<Void> pullUpdates( RequestContext context, ResponseUnpacker.TxHandler txHandler )\n-    {\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.PULL_UPDATES ), context,\n-                EMPTY_SERIALIZER, VOID_DESERIALIZER, null, txHandler );\n-    }\n-\n-    @Override\n-    public Response<HandshakeResult> handshake( final long txId, StoreId storeId )\n-    {\n-        Serializer serializer = buffer -> buffer.writeLong( txId );\n-        Deserializer<HandshakeResult> deserializer =\n-                ( buffer, temporaryBuffer ) -> new HandshakeResult( buffer.readLong(), buffer.readLong() );\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.HANDSHAKE ), RequestContext.EMPTY,\n-                serializer, deserializer, storeId, ResponseUnpacker.TxHandler.NO_OP_TX_HANDLER );\n-    }\n-\n-    @Override\n-    public Response<Void> copyStore( RequestContext context, final StoreWriter writer )\n-    {\n-        context = stripFromTransactions( context );\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.COPY_STORE ), context, EMPTY_SERIALIZER,\n-                createFileStreamDeserializer( writer ) );\n-    }\n-\n-    protected Deserializer<Void> createFileStreamDeserializer( StoreWriter writer )\n-    {\n-        return new Protocol.FileStreamsDeserializer210( writer );\n-    }\n-\n-    private RequestContext stripFromTransactions( RequestContext context )\n-    {\n-        return new RequestContext( context.getEpoch(), context.machineId(), context.getEventIdentifier(),\n-                0, context.getChecksum() );\n-    }\n-\n-    private static IdAllocation readIdAllocation( ChannelBuffer buffer )\n-    {\n-        int numberOfDefragIds = buffer.readInt();\n-        long[] defragIds = new long[numberOfDefragIds];\n-        for ( int i = 0; i < numberOfDefragIds; i++ )\n-        {\n-            defragIds[i] = buffer.readLong();\n-        }\n-        long rangeStart = buffer.readLong();\n-        int rangeLength = buffer.readInt();\n-        long highId = buffer.readLong();\n-        long defragCount = buffer.readLong();\n-        return new IdAllocation( new IdRange( defragIds, rangeStart, rangeLength ),\n-                highId, defragCount );\n-    }\n-\n-    private static class AcquireLockSerializer implements Serializer\n+    public void write(ChannelBuffer buffer)\n     {\n-        private final ResourceType type;\n-        private final long[] resourceIds;\n-\n-        AcquireLockSerializer( ResourceType type, long... resourceIds )\n-        {\n-            this.type = type;\n-            this.resourceIds = resourceIds;\n-        }\n-\n-        @Override\n-        public void write( ChannelBuffer buffer )\n-        {\n-            buffer.writeInt( type.typeId() );\n-            buffer.writeInt( resourceIds.length );\n-            for ( long entity : resourceIds )\n-            {\n-                buffer.writeLong( entity );\n-            }\n-        }\n+      buffer.writeInt(type.typeId());\n+      buffer.writeInt(resourceIds.length);\n+      for (long entity : resourceIds)\n+      {\n+        buffer.writeLong(entity);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 439
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "150",
                    "column": "68",
                    "severity": "error",
                    "message": "'||' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4523/MasterClient214.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4523/MasterClient214.java\nindex 0547608e337..815a7e37da6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4523/MasterClient214.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4523/MasterClient214.java\n@@ -91,12 +91,11 @@ public class MasterClient214 extends Client<Master> implements MasterClient\n         {\n             throw withInvalidOrdinalMessage( buffer, statusOrdinal, e );\n         }\n-        return status == LockStatus.DEAD_LOCKED ? new LockResult( LockStatus.DEAD_LOCKED, readString( buffer ) )\n-                                   : new LockResult( status );\n+\n+return status == LockStatus.DEAD_LOCKED ? new LockResult( LockStatus.DEAD_LOCKED, readString( buffer ) ) : new LockResult( status );\n     };\n \n-    protected static ArrayIndexOutOfBoundsException withInvalidOrdinalMessage(\n-            ChannelBuffer buffer, byte statusOrdinal, ArrayIndexOutOfBoundsException e )\n+    protected static ArrayIndexOutOfBoundsException withInvalidOrdinalMessage( ChannelBuffer buffer, byte statusOrdinal, ArrayIndexOutOfBoundsException e )\n     {\n         int maxBytesToPrint = 1024 * 40;\n         return Exceptions.withMessage( e,\n@@ -109,17 +108,14 @@ public class MasterClient214 extends Client<Master> implements MasterClient\n     private final HaRequestTypes requestTypes;\n     private final Deserializer<LockResult> lockResultDeserializer;\n \n-    public MasterClient214( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n-                            LogProvider logProvider, StoreId storeId, long readTimeoutMillis,\n+    public MasterClient214( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp, LogProvider logProvider, StoreId storeId, long readTimeoutMillis,\n                             long lockReadTimeoutMillis, int maxConcurrentChannels, int chunkSize,\n                             ResponseUnpacker responseUnpacker,\n-                            ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor,\n-                            LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n-    {\n+                            ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor, LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n+{\n         super( destinationHostNameOrIp, destinationPort, originHostNameOrIp, logProvider, storeId,\n-                MasterServer.FRAME_LENGTH, readTimeoutMillis, maxConcurrentChannels, chunkSize,\n-                responseUnpacker, byteCounterMonitor, requestMonitor, entryReader );\n-        this.lockReadTimeoutMillis = lockReadTimeoutMillis;\n+                MasterServer.FRAME_LENGTH, readTimeoutMillis, maxConcurrentChannels, chunkSize, responseUnpacker, byteCounterMonitor, requestMonitor, entryReader );\n+this.lockReadTimeoutMillis = lockReadTimeoutMillis;\n         this.requestTypes = new HaRequestType210( entryReader, createLockResultSerializer() );\n         this.lockResultDeserializer = createLockResultDeserializer();\n     }\n@@ -151,16 +147,17 @@ public class MasterClient214 extends Client<Master> implements MasterClient\n     @Override\n     protected long getReadTimeout( RequestType type, long readTimeout )\n     {\n-        if ( HaRequestTypes.Type.ACQUIRE_EXCLUSIVE_LOCK.is( type ) ||\n-             HaRequestTypes.Type.ACQUIRE_SHARED_LOCK.is( type ) )\n-        {\n+        if ( HaRequestTypes.Type.ACQUIRE_EXCLUSIVE_LOCK.is( type ) ||HaRequestTypes.Type.ACQUIRE_SHARED_LOCK.is( type ) )\n+{\n             return lockReadTimeoutMillis;\n         }\n-        if ( HaRequestTypes.Type.COPY_STORE.is( type ) )\n+\n+if ( HaRequestTypes.Type.COPY_STORE.is( type ) )\n         {\n             return readTimeout * 2;\n         }\n-        return readTimeout;\n+\n+return readTimeout;\n     }\n \n     @Override\n@@ -211,19 +208,15 @@ public class MasterClient214 extends Client<Master> implements MasterClient\n     }\n \n     @Override\n-    public Response<LockResult> acquireSharedLock(\n-            RequestContext context, ResourceType type, long... resourceIds )\n+    public Response<LockResult> acquireSharedLock( RequestContext context, ResourceType type, long... resourceIds )\n     {\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.ACQUIRE_SHARED_LOCK ), context,\n-                new AcquireLockSerializer( type, resourceIds ), lockResultDeserializer );\n+        return sendRequest( requestTypes.type( HaRequestTypes.Type.ACQUIRE_SHARED_LOCK ), context, new AcquireLockSerializer( type, resourceIds ), lockResultDeserializer );\n     }\n \n     @Override\n-    public Response<LockResult> acquireExclusiveLock(\n-            RequestContext context, ResourceType type, long... resourceIds )\n+    public Response<LockResult> acquireExclusiveLock( RequestContext context, ResourceType type, long... resourceIds )\n     {\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.ACQUIRE_EXCLUSIVE_LOCK ), context,\n-                new AcquireLockSerializer( type, resourceIds ), lockResultDeserializer );\n+        return sendRequest( requestTypes.type( HaRequestTypes.Type.ACQUIRE_EXCLUSIVE_LOCK ), context, new AcquireLockSerializer( type, resourceIds ), lockResultDeserializer );\n     }\n \n     @Override\n@@ -259,9 +252,8 @@ public class MasterClient214 extends Client<Master> implements MasterClient\n     public Response<HandshakeResult> handshake( final long txId, StoreId storeId )\n     {\n         Serializer serializer = buffer -> buffer.writeLong( txId );\n-        Deserializer<HandshakeResult> deserializer =\n-                ( buffer, temporaryBuffer ) -> new HandshakeResult( buffer.readLong(), buffer.readLong() );\n-        return sendRequest( requestTypes.type( HaRequestTypes.Type.HANDSHAKE ), RequestContext.EMPTY,\n+        Deserializer<HandshakeResult> deserializer = ( buffer, temporaryBuffer ) -> new HandshakeResult( buffer.readLong(), buffer.readLong() );\n+return sendRequest( requestTypes.type( HaRequestTypes.Type.HANDSHAKE ), RequestContext.EMPTY,\n                 serializer, deserializer, storeId, ResponseUnpacker.TxHandler.NO_OP_TX_HANDLER );\n     }\n \n@@ -280,8 +272,7 @@ public class MasterClient214 extends Client<Master> implements MasterClient\n \n     private RequestContext stripFromTransactions( RequestContext context )\n     {\n-        return new RequestContext( context.getEpoch(), context.machineId(), context.getEventIdentifier(),\n-                0, context.getChecksum() );\n+        return new RequestContext( context.getEpoch(), context.machineId(), context.getEventIdentifier(), 0, context.getChecksum() );\n     }\n \n     private static IdAllocation readIdAllocation( ChannelBuffer buffer )\n@@ -322,4 +313,4 @@ public class MasterClient214 extends Client<Master> implements MasterClient\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1592",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "59",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1592/BoltRequestMessageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1592/BoltRequestMessageReader.java\nindex cb248fc4628..88fafe40168 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1592/BoltRequestMessageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1592/BoltRequestMessageReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.messaging;\n \n import java.io.IOException;\n@@ -40,59 +41,56 @@ public abstract class BoltRequestMessageReader\n {\n     private final BoltConnection connection;\n     private final BoltResponseHandler externalErrorResponseHandler;\n-    private final Map<Integer,RequestMessageDecoder> decoders;\n+    private final Map<Integer, RequestMessageDecoder> decoders;\n \n-    protected BoltRequestMessageReader( BoltConnection connection, BoltResponseHandler externalErrorResponseHandler,\n-            List<RequestMessageDecoder> decoders )\n+    protected BoltRequestMessageReader(BoltConnection connection, BoltResponseHandler externalErrorResponseHandler,\n+                                       List<RequestMessageDecoder> decoders)\n     {\n         this.connection = connection;\n         this.externalErrorResponseHandler = externalErrorResponseHandler;\n-        this.decoders = decoders.stream().collect( toMap( RequestMessageDecoder::signature, identity() ) );\n+        this.decoders = decoders.stream().collect(toMap(RequestMessageDecoder::signature, identity()));\n     }\n \n-    public void read( Neo4jPack.Unpacker unpacker ) throws IOException\n+    public void read(Neo4jPack.Unpacker unpacker) throws IOException\n     {\n         try\n         {\n-            doRead( unpacker );\n-        }\n-        catch ( BoltIOException e )\n+            doRead(unpacker);\n+        } catch (BoltIOException e)\n         {\n-            if ( e.causesFailureMessage() )\n+            if (e.causesFailureMessage())\n             {\n-                Neo4jError error = Neo4jError.from( e );\n-                connection.enqueue( stateMachine -> stateMachine.handleExternalFailure( error, externalErrorResponseHandler ) );\n-            }\n-            else\n+                Neo4jError error = Neo4jError.from(e);\n+                connection.enqueue(stateMachine -> stateMachine.handleExternalFailure(error, externalErrorResponseHandler));\n+            } else\n             {\n                 throw e;\n             }\n         }\n     }\n \n-    private void doRead( Neo4jPack.Unpacker unpacker ) throws IOException\n+    private void doRead(Neo4jPack.Unpacker unpacker) throws IOException\n     {\n         try\n         {\n             unpacker.unpackStructHeader();\n             int signature = unpacker.unpackStructSignature();\n \n-            RequestMessageDecoder decoder = decoders.get( signature );\n-            if ( decoder == null )\n+            RequestMessageDecoder decoder = decoders.get(signature);\n+            if (decoder == null)\n             {\n-                throw new BoltIOException( Status.Request.InvalidFormat,\n-                        String.format( \"Message 0x%s is not a valid message signature.\", Integer.toHexString( signature ) ) );\n+                throw new BoltIOException(Status.Request.InvalidFormat,\n+                  String.format(\"Message 0x%s is not a valid message signature.\", Integer.toHexString(signature)));\n             }\n \n-            RequestMessage message = decoder.decode( unpacker );\n+            RequestMessage message = decoder.decode(unpacker);\n             BoltResponseHandler responseHandler = decoder.responseHandler();\n \n-            connection.enqueue( stateMachine -> stateMachine.process( message, responseHandler ) );\n-        }\n-        catch ( PackStream.PackStreamException e )\n+            connection.enqueue(stateMachine -> stateMachine.process(message, responseHandler));\n+        } catch (PackStream.PackStreamException e)\n         {\n-            throw new BoltIOException( Status.Request.InvalidFormat,\n-                    String.format( \"Unable to read message type. Error was: %s.\", e.getMessage() ), e );\n+            throw new BoltIOException(Status.Request.InvalidFormat,\n+              String.format(\"Unable to read message type. Error was: %s.\", e.getMessage()), e);\n         }\n     }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
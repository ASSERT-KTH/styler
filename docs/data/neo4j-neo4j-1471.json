{
    "project_name": "neo4j-neo4j",
    "error_id": "1471",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1471/HttpConnectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1471/HttpConnectorFactory.java\nindex a20adb8bee2..b9343e5fd66 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1471/HttpConnectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1471/HttpConnectorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import org.eclipse.jetty.server.ConnectionFactory;\n@@ -39,12 +40,12 @@ public class HttpConnectorFactory\n     private final NetworkConnectionTracker connectionTracker;\n     private final Config configuration;\n \n-    public HttpConnectorFactory( NetworkConnectionTracker connectionTracker, Config config )\n+    public HttpConnectorFactory(NetworkConnectionTracker connectionTracker, Config config)\n     {\n-        this( NAME, connectionTracker, config );\n+        this(NAME, connectionTracker, config);\n     }\n \n-    protected HttpConnectorFactory( String name, NetworkConnectionTracker connectionTracker, Config configuration )\n+    protected HttpConnectorFactory(String name, NetworkConnectionTracker connectionTracker, Config configuration)\n     {\n         this.name = name;\n         this.connectionTracker = connectionTracker;\n@@ -53,42 +54,42 @@ public class HttpConnectorFactory\n \n     public ConnectionFactory createHttpConnectionFactory()\n     {\n-        return new JettyHttpConnectionFactory( connectionTracker, createHttpConfig() );\n+        return new JettyHttpConnectionFactory(connectionTracker, createHttpConfig());\n     }\n \n     protected HttpConfiguration createHttpConfig()\n     {\n         HttpConfiguration httpConfig = new HttpConfiguration();\n-        httpConfig.setRequestHeaderSize( configuration.get( ServerSettings.maximum_request_header_size) );\n-        httpConfig.setResponseHeaderSize( configuration.get( ServerSettings.maximum_response_header_size) );\n-        httpConfig.setSendServerVersion( false );\n+        httpConfig.setRequestHeaderSize(configuration.get(ServerSettings.maximum_request_header_size));\n+        httpConfig.setResponseHeaderSize(configuration.get(ServerSettings.maximum_response_header_size));\n+        httpConfig.setSendServerVersion(false);\n         return httpConfig;\n     }\n \n-    public ServerConnector createConnector( Server server, SocketAddress address, JettyThreadCalculator jettyThreadCalculator )\n+    public ServerConnector createConnector(Server server, SocketAddress address, JettyThreadCalculator jettyThreadCalculator)\n     {\n         ConnectionFactory httpFactory = createHttpConnectionFactory();\n-        return createConnector(server, address, jettyThreadCalculator, httpFactory );\n+        return createConnector(server, address, jettyThreadCalculator, httpFactory);\n     }\n \n-    public ServerConnector createConnector( Server server, SocketAddress address,\n-            JettyThreadCalculator jettyThreadCalculator, ConnectionFactory... httpFactories )\n+    public ServerConnector createConnector(Server server, SocketAddress address,\n+                                           JettyThreadCalculator jettyThreadCalculator, ConnectionFactory... httpFactories)\n     {\n         int acceptors = jettyThreadCalculator.getAcceptors();\n         int selectors = jettyThreadCalculator.getSelectors();\n \n         ServerConnector connector =\n-                new ServerConnector( server, null, null, null, acceptors, selectors, httpFactories );\n+          new ServerConnector(server, null, null, null, acceptors, selectors, httpFactories);\n \n-        connector.setName( name );\n+        connector.setName(name);\n \n-        connector.setConnectionFactories( Arrays.asList( httpFactories ) );\n+        connector.setConnectionFactories(Arrays.asList(httpFactories));\n \n         // TCP backlog, per socket, 50 is the default, consider adapting if needed\n-        connector.setAcceptQueueSize( 50 );\n+        connector.setAcceptQueueSize(50);\n \n-        connector.setHost( address.getHostname() );\n-        connector.setPort( address.getPort() );\n+        connector.setHost(address.getHostname());\n+        connector.setPort(address.getPort());\n \n         return connector;\n     }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1471/HttpConnectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1471/HttpConnectorFactory.java\nindex a20adb8bee2..75532eb9bc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1471/HttpConnectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1471/HttpConnectorFactory.java\n@@ -68,7 +68,7 @@ public class HttpConnectorFactory\n     public ServerConnector createConnector( Server server, SocketAddress address, JettyThreadCalculator jettyThreadCalculator )\n     {\n         ConnectionFactory httpFactory = createHttpConnectionFactory();\n-        return createConnector(server, address, jettyThreadCalculator, httpFactory );\n+        return createConnector( server, address, jettyThreadCalculator, httpFactory );\n     }\n \n     public ServerConnector createConnector( Server server, SocketAddress address,\n@@ -92,4 +92,4 @@ public class HttpConnectorFactory\n \n         return connector;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
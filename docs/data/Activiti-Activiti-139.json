{
    "project_name": "Activiti-Activiti",
    "error_id": "139",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\nimport java.util.Collection;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/139/FlowElementsContainer.java\nindex f3886f8a22d..187b1fd1d18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/139/FlowElementsContainer.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/139/FlowElementsContainer.java\nindex f3886f8a22d..f4559ed7a11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/139/FlowElementsContainer.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.Collection;\n@@ -17,25 +18,25 @@ import java.util.Map;\n \n public interface FlowElementsContainer {\n \n-  FlowElement getFlowElement(String id);\n+    FlowElement getFlowElement(String id);\n+\n+    Collection<FlowElement> getFlowElements();\n+\n+    Map<String, FlowElement> getFlowElementMap();\n \n-  Collection<FlowElement> getFlowElements();\n+    void addFlowElement(FlowElement element);\n \n-  Map<String, FlowElement> getFlowElementMap();\n+    void addFlowElementToMap(FlowElement element);\n \n-  void addFlowElement(FlowElement element);\n-  \n-  void addFlowElementToMap(FlowElement element);\n+    void removeFlowElement(String elementId);\n \n-  void removeFlowElement(String elementId);\n-  \n-  void removeFlowElementFromMap(String elementId);\n+    void removeFlowElementFromMap(String elementId);\n \n-  Artifact getArtifact(String id);\n+    Artifact getArtifact(String id);\n \n-  Collection<Artifact> getArtifacts();\n+    Collection<Artifact> getArtifacts();\n \n-  void addArtifact(Artifact artifact);\n+    void addArtifact(Artifact artifact);\n \n-  void removeArtifact(String artifactId);\n+    void removeArtifact(String artifactId);\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'INTERFACE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/139/FlowElementsContainer.java\nindex f3886f8a22d..ad69d3f9007 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/139/FlowElementsContainer.java\n@@ -15,27 +15,34 @@ package org.activiti.bpmn.model;\n import java.util.Collection;\n import java.util.Map;\n \n+\n public interface FlowElementsContainer {\n \n+\n   FlowElement getFlowElement(String id);\n \n+\n   Collection<FlowElement> getFlowElements();\n \n+\n   Map<String, FlowElement> getFlowElementMap();\n \n   void addFlowElement(FlowElement element);\n-  \n+\n   void addFlowElementToMap(FlowElement element);\n \n   void removeFlowElement(String elementId);\n-  \n+\n   void removeFlowElementFromMap(String elementId);\n \n+\n   Artifact getArtifact(String id);\n \n+\n   Collection<Artifact> getArtifacts();\n \n   void addArtifact(Artifact artifact);\n \n   void removeArtifact(String artifactId);\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/139/FlowElementsContainer.java\nindex f3886f8a22d..187b1fd1d18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/139/FlowElementsContainer.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/139/FlowElementsContainer.java\nindex f3886f8a22d..187b1fd1d18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/139/FlowElementsContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/139/FlowElementsContainer.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.Collection;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
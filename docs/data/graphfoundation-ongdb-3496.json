{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3496",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3496/JdkCompiler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3496/JdkCompiler.java\nindex 0903db29fd7..5c15a95792c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3496/JdkCompiler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3496/JdkCompiler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.source;\n \n import java.util.List;\n@@ -33,52 +34,51 @@ import org.neo4j.codegen.CompilationFailureException;\n \n class JdkCompiler implements SourceCompiler\n {\n-    public static final Factory FACTORY = new Factory()\n-    {\n-        @Override\n-        SourceCompiler sourceCompilerFor( Configuration configuration, CodeGenerationStrategy<?> strategy )\n-                throws CodeGenerationStrategyNotSupportedException\n-        {\n-            JavaCompiler jdkCompiler = ToolProvider.getSystemJavaCompiler();\n-            if ( jdkCompiler == null )\n-            {\n-                throw new CodeGenerationStrategyNotSupportedException( strategy, \"no java source compiler available\" );\n-            }\n-            return new JdkCompiler( jdkCompiler, configuration );\n-        }\n-    };\n-    private final JavaCompiler compiler;\n-    private final Configuration configuration;\n-\n-    JdkCompiler( JavaCompiler compiler, Configuration configuration )\n+  public static final Factory FACTORY = new Factory()\n+  {\n+    @Override\n+    SourceCompiler sourceCompilerFor(Configuration configuration, CodeGenerationStrategy<?> strategy)\n+        throws CodeGenerationStrategyNotSupportedException\n     {\n-        this.compiler = compiler;\n-        this.configuration = configuration;\n+      JavaCompiler jdkCompiler = ToolProvider.getSystemJavaCompiler();\n+      if (jdkCompiler == null)\n+      {\n+        throw new CodeGenerationStrategyNotSupportedException(strategy, \"no java source compiler available\");\n+      }\n+      return new JdkCompiler(jdkCompiler, configuration);\n     }\n+  };\n+  private final JavaCompiler compiler;\n+  private final Configuration configuration;\n \n-    @Override\n-    public Iterable<? extends ByteCodes> compile( List<JavaSourceFile> sourceFiles, ClassLoader loader )\n-            throws CompilationFailureException\n-    {\n-        DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<>();\n+  JdkCompiler(JavaCompiler compiler, Configuration configuration)\n+  {\n+    this.compiler = compiler;\n+    this.configuration = configuration;\n+  }\n+\n+  @Override\n+  public Iterable<? extends ByteCodes> compile(List<JavaSourceFile> sourceFiles, ClassLoader loader)\n+      throws CompilationFailureException\n+  {\n+    DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<>();\n \n-        FileManager fileManager = new FileManager(\n-                compiler.getStandardFileManager( diagnostics, configuration.locale(), configuration.charset() ) );\n+    FileManager fileManager = new FileManager(\n+        compiler.getStandardFileManager(diagnostics, configuration.locale(), configuration.charset()));\n \n-        JavaCompiler.CompilationTask task = compiler.getTask(\n-                configuration.errorWriter(), fileManager, diagnostics, configuration.options(), null, sourceFiles );\n+    JavaCompiler.CompilationTask task = compiler.getTask(\n+        configuration.errorWriter(), fileManager, diagnostics, configuration.options(), null, sourceFiles);\n \n-        configuration.processors( task );\n-        if ( task.call() )\n-        {\n-            configuration.warningsHandler().handle( diagnostics.getDiagnostics() );\n-            return fileManager.bytecodes();\n-        }\n-        else\n-        {\n-            @SuppressWarnings( \"unchecked\" )\n-            List<Diagnostic<?>> issues = (List) diagnostics.getDiagnostics();\n-            throw new CompilationFailureException( issues );\n-        }\n+    configuration.processors(task);\n+    if (task.call())\n+    {\n+      configuration.warningsHandler().handle(diagnostics.getDiagnostics());\n+      return fileManager.bytecodes();\n+    } else\n+    {\n+      @SuppressWarnings(\"unchecked\")\n+      List<Diagnostic<?>> issues = (List) diagnostics.getDiagnostics();\n+      throw new CompilationFailureException(issues);\n     }\n+  }\n }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3496/JdkCompiler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3496/JdkCompiler.java\nindex 0903db29fd7..6625024165a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3496/JdkCompiler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3496/JdkCompiler.java\n@@ -36,9 +36,8 @@ class JdkCompiler implements SourceCompiler\n     public static final Factory FACTORY = new Factory()\n     {\n         @Override\n-        SourceCompiler sourceCompilerFor( Configuration configuration, CodeGenerationStrategy<?> strategy )\n-                throws CodeGenerationStrategyNotSupportedException\n-        {\n+        SourceCompiler sourceCompilerFor( Configuration configuration, CodeGenerationStrategy<?> strategy ) throws CodeGenerationStrategyNotSupportedException\n+{\n             JavaCompiler jdkCompiler = ToolProvider.getSystemJavaCompiler();\n             if ( jdkCompiler == null )\n             {\n@@ -57,18 +56,12 @@ class JdkCompiler implements SourceCompiler\n     }\n \n     @Override\n-    public Iterable<? extends ByteCodes> compile( List<JavaSourceFile> sourceFiles, ClassLoader loader )\n-            throws CompilationFailureException\n-    {\n+    public Iterable<? extends ByteCodes> compile( List<JavaSourceFile> sourceFiles, ClassLoader loader ) throws CompilationFailureException\n+{\n         DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<>();\n-\n-        FileManager fileManager = new FileManager(\n-                compiler.getStandardFileManager( diagnostics, configuration.locale(), configuration.charset() ) );\n-\n-        JavaCompiler.CompilationTask task = compiler.getTask(\n-                configuration.errorWriter(), fileManager, diagnostics, configuration.options(), null, sourceFiles );\n-\n-        configuration.processors( task );\n+FileManager fileManager = new FileManager( compiler.getStandardFileManager( diagnostics, configuration.locale(), configuration.charset() ) );\n+JavaCompiler.CompilationTask task = compiler.getTask( configuration.errorWriter(), fileManager, diagnostics, configuration.options(), null, sourceFiles );\n+configuration.processors( task );\n         if ( task.call() )\n         {\n             configuration.warningsHandler().handle( diagnostics.getDiagnostics() );\n@@ -81,4 +74,4 @@ class JdkCompiler implements SourceCompiler\n             throw new CompilationFailureException( issues );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
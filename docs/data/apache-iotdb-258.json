{
    "project_name": "apache-iotdb",
    "error_id": "258",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.auth.user;\n\nimport org.apache.iotdb.db.auth.entity.PathPrivilege;\nimport org.apache.iotdb.db.auth.entity.User;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/258/LocalFileUserAccessor.java\nindex 005e400917f..5ed7df60bbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/258/LocalFileUserAccessor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.auth.user;\n \n import org.apache.iotdb.db.auth.entity.PathPrivilege;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/258/LocalFileUserAccessor.java\nindex 005e400917f..636e342b00a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/258/LocalFileUserAccessor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.auth.user;\n \n import org.apache.iotdb.db.auth.entity.PathPrivilege;\n@@ -100,7 +101,7 @@ public class LocalFileUserAccessor implements IUserAccessor {\n     }\n     FileInputStream inputStream = new FileInputStream(userProfile);\n     try (DataInputStream dataInputStream =\n-        new DataInputStream(new BufferedInputStream(inputStream))) {\n+             new DataInputStream(new BufferedInputStream(inputStream))) {\n       User user = new User();\n       user.setName(IOUtils.readString(dataInputStream, STRING_ENCODING, strBufferLocal));\n       user.setPassword(IOUtils.readString(dataInputStream, STRING_ENCODING, strBufferLocal));\n@@ -153,7 +154,7 @@ public class LocalFileUserAccessor implements IUserAccessor {\n                 + IoTDBConstant.PROFILE_SUFFIX\n                 + TEMP_SUFFIX);\n     try (BufferedOutputStream outputStream =\n-        new BufferedOutputStream(new FileOutputStream(userProfile))) {\n+             new BufferedOutputStream(new FileOutputStream(userProfile))) {\n       try {\n         IOUtils.writeString(outputStream, user.getName(), STRING_ENCODING, encodingBufferLocal);\n         IOUtils.writeString(outputStream, user.getPassword(), STRING_ENCODING, encodingBufferLocal);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 6, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 6, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "193",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/258/LocalFileUserAccessor.java\nindex 005e400917f..534e53917e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/258/LocalFileUserAccessor.java\n@@ -23,10 +23,8 @@ import org.apache.iotdb.db.auth.entity.User;\n import org.apache.iotdb.db.conf.IoTDBConstant;\n import org.apache.iotdb.db.engine.fileSystem.SystemFileFactory;\n import org.apache.iotdb.db.utils.IOUtils;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.BufferedInputStream;\n import java.io.BufferedOutputStream;\n import java.io.DataInputStream;\n@@ -54,19 +52,18 @@ import java.util.Set;\n  * Int32 user name[2] size Utf-8 user name[2] bytes ... Int32 user name[m] size Utf-8 user name[m]\n  * bytes\n  */\n+\n public class LocalFileUserAccessor implements IUserAccessor {\n \n   private static final String TEMP_SUFFIX = \".temp\";\n   private static final String STRING_ENCODING = \"utf-8\";\n   private static final Logger logger = LoggerFactory.getLogger(LocalFileUserAccessor.class);\n-\n   private String userDirPath;\n   /**\n    * Reused buffer for primitive types encoding/decoding, which aim to reduce memory fragments. Use\n    * ThreadLocal for thread safety.\n    */\n   private ThreadLocal<ByteBuffer> encodingBufferLocal = new ThreadLocal<>();\n-\n   private ThreadLocal<byte[]> strBufferLocal = new ThreadLocal<>();\n \n   public LocalFileUserAccessor(String userDirPath) {\n@@ -79,16 +76,16 @@ public class LocalFileUserAccessor implements IUserAccessor {\n    * @param username The name of the user to be deserialized.\n    * @return The user object or null if no such user.\n    */\n+\n   @Override\n   public User loadUser(String username) throws IOException {\n-    File userProfile =\n-        SystemFileFactory.INSTANCE.getFile(\n-            userDirPath + File.separator + username + IoTDBConstant.PROFILE_SUFFIX);\n+    File userProfile = SystemFileFactory.INSTANCE.getFile(userDirPath + File.separator\n+    + username + IoTDBConstant.PROFILE_SUFFIX);\n     if (!userProfile.exists() || !userProfile.isFile()) {\n       // System may crush before a newer file is renamed.\n-      File newProfile =\n-          SystemFileFactory.INSTANCE.getFile(\n-              userDirPath + File.separator + username + IoTDBConstant.PROFILE_SUFFIX + TEMP_SUFFIX);\n+      File newProfile = SystemFileFactory.INSTANCE.getFile(userDirPath + File.separator\n+      + username\n+      + IoTDBConstant.PROFILE_SUFFIX + TEMP_SUFFIX);\n       if (newProfile.exists() && newProfile.isFile()) {\n         if (!newProfile.renameTo(userProfile)) {\n           logger.error(\"New profile renaming not succeed.\");\n@@ -99,16 +96,14 @@ public class LocalFileUserAccessor implements IUserAccessor {\n       }\n     }\n     FileInputStream inputStream = new FileInputStream(userProfile);\n-    try (DataInputStream dataInputStream =\n-        new DataInputStream(new BufferedInputStream(inputStream))) {\n+    try (DataInputStream dataInputStream = new DataInputStream(new BufferedInputStream(inputStream))) {\n       User user = new User();\n       user.setName(IOUtils.readString(dataInputStream, STRING_ENCODING, strBufferLocal));\n       user.setPassword(IOUtils.readString(dataInputStream, STRING_ENCODING, strBufferLocal));\n       int privilegeNum = dataInputStream.readInt();\n       List<PathPrivilege> pathPrivilegeList = new ArrayList<>();\n       for (int i = 0; i < privilegeNum; i++) {\n-        pathPrivilegeList.add(\n-            IOUtils.readPathPrivilege(dataInputStream, STRING_ENCODING, strBufferLocal));\n+        pathPrivilegeList.add(IOUtils.readPathPrivilege(dataInputStream, STRING_ENCODING, strBufferLocal));\n       }\n       user.setPrivilegeList(pathPrivilegeList);\n       int roleNum = dataInputStream.readInt();\n@@ -143,49 +138,41 @@ public class LocalFileUserAccessor implements IUserAccessor {\n    *\n    * @param user The user object that is to be saved.\n    */\n+\n   @Override\n   public void saveUser(User user) throws IOException {\n-    File userProfile =\n-        SystemFileFactory.INSTANCE.getFile(\n-            userDirPath\n-                + File.separator\n-                + user.getName()\n-                + IoTDBConstant.PROFILE_SUFFIX\n-                + TEMP_SUFFIX);\n-    try (BufferedOutputStream outputStream =\n-        new BufferedOutputStream(new FileOutputStream(userProfile))) {\n+    File userProfile = SystemFileFactory.INSTANCE.getFile(userDirPath + File.separator\n+    + user.getName()\n+    + IoTDBConstant.PROFILE_SUFFIX + TEMP_SUFFIX);\n+    try (BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(userProfile))) {\n       try {\n         IOUtils.writeString(outputStream, user.getName(), STRING_ENCODING, encodingBufferLocal);\n         IOUtils.writeString(outputStream, user.getPassword(), STRING_ENCODING, encodingBufferLocal);\n-\n         user.getPrivilegeList().sort(PathPrivilege.REFERENCE_DESCENT_SORTER);\n         int privilegeNum = user.getPrivilegeList().size();\n         IOUtils.writeInt(outputStream, privilegeNum, encodingBufferLocal);\n         for (int i = 0; i < privilegeNum; i++) {\n           PathPrivilege pathPrivilege = user.getPrivilegeList().get(i);\n-          IOUtils.writePathPrivilege(\n-              outputStream, pathPrivilege, STRING_ENCODING, encodingBufferLocal);\n+          IOUtils.writePathPrivilege(outputStream, pathPrivilege, STRING_ENCODING, encodingBufferLocal);\n         }\n-\n         int userNum = user.getRoleList().size();\n         IOUtils.writeInt(outputStream, userNum, encodingBufferLocal);\n         for (int i = 0; i < userNum; i++) {\n-          IOUtils.writeString(\n-              outputStream, user.getRoleList().get(i), STRING_ENCODING, encodingBufferLocal);\n+          IOUtils.writeString(outputStream, user.getRoleList().get(i), STRING_ENCODING, encodingBufferLocal);\n         }\n-        IOUtils.writeInt(outputStream, user.isUseWaterMark() ? 1 : 0, encodingBufferLocal);\n+        IOUtils.writeInt(outputStream, user.isUseWaterMark()\n+? 1\n+: 0, encodingBufferLocal);\n         outputStream.flush();\n-\n       } catch (Exception e) {\n         throw new IOException(e);\n       }\n     } finally {\n       encodingBufferLocal.remove();\n     }\n-\n-    File oldFile =\n-        SystemFileFactory.INSTANCE.getFile(\n-            userDirPath + File.separator + user.getName() + IoTDBConstant.PROFILE_SUFFIX);\n+    File oldFile = SystemFileFactory.INSTANCE.getFile(userDirPath + File.separator\n+    + user.getName()\n+    + IoTDBConstant.PROFILE_SUFFIX);\n     IOUtils.replaceFile(userProfile, oldFile);\n   }\n \n@@ -196,19 +183,18 @@ public class LocalFileUserAccessor implements IUserAccessor {\n    * @return True if the file is successfully deleted, false if the file does not exists.\n    * @throws IOException when the file cannot be deleted.\n    */\n+\n   @Override\n   public boolean deleteUser(String username) throws IOException {\n-    File userProfile =\n-        SystemFileFactory.INSTANCE.getFile(\n-            userDirPath + File.separator + username + IoTDBConstant.PROFILE_SUFFIX);\n-    File backFile =\n-        SystemFileFactory.INSTANCE.getFile(\n-            userDirPath + File.separator + username + IoTDBConstant.PROFILE_SUFFIX + TEMP_SUFFIX);\n+    File userProfile = SystemFileFactory.INSTANCE.getFile(userDirPath + File.separator\n+    + username + IoTDBConstant.PROFILE_SUFFIX);\n+    File backFile = SystemFileFactory.INSTANCE.getFile(userDirPath + File.separator\n+    + username\n+    + IoTDBConstant.PROFILE_SUFFIX + TEMP_SUFFIX);\n     if (!userProfile.exists() && !backFile.exists()) {\n       return false;\n     }\n-    if ((userProfile.exists() && !userProfile.delete())\n-        || (backFile.exists() && !backFile.delete())) {\n+    if ((userProfile.exists() && !userProfile.delete()) || (backFile.exists() && !backFile.delete())) {\n       throw new IOException(String.format(\"Cannot delete user file of %s\", username));\n     }\n     return true;\n@@ -217,10 +203,7 @@ public class LocalFileUserAccessor implements IUserAccessor {\n   @Override\n   public List<String> listAllUsers() {\n     File userDir = SystemFileFactory.INSTANCE.getFile(userDirPath);\n-    String[] names =\n-        userDir.list(\n-            (dir, name) ->\n-                name.endsWith(IoTDBConstant.PROFILE_SUFFIX) || name.endsWith(TEMP_SUFFIX));\n+    String[] names = userDir.list((dir, name) -> name.endsWith(IoTDBConstant.PROFILE_SUFFIX) || name.endsWith(TEMP_SUFFIX));\n     List<String> retList = new ArrayList<>();\n     if (names != null) {\n       // in very rare situations, normal file and backup file may exist at the same time\n@@ -242,4 +225,4 @@ public class LocalFileUserAccessor implements IUserAccessor {\n       logger.error(\"user info dir {} can not be created\", userDirPath);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/258/LocalFileUserAccessor.java\nindex 005e400917f..5ed7df60bbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/258/LocalFileUserAccessor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.auth.user;\n \n import org.apache.iotdb.db.auth.entity.PathPrivilege;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/258/LocalFileUserAccessor.java\nindex 005e400917f..5ed7df60bbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/258/LocalFileUserAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/258/LocalFileUserAccessor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.auth.user;\n \n import org.apache.iotdb.db.auth.entity.PathPrivilege;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
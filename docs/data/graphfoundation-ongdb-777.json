{
    "project_name": "graphfoundation-ongdb",
    "error_id": "777",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/777/ReplicatedLockTokenState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/777/ReplicatedLockTokenState.java\nindex 243d68cb407..889f32f833a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/777/ReplicatedLockTokenState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/777/ReplicatedLockTokenState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.locks;\n \n import java.io.IOException;\n@@ -33,106 +34,106 @@ import static org.neo4j.causalclustering.core.state.machines.locks.ReplicatedLoc\n \n public class ReplicatedLockTokenState\n {\n-    private ReplicatedLockTokenRequest currentToken = INVALID_REPLICATED_LOCK_TOKEN_REQUEST;\n-    private long ordinal = -1L;\n-\n-    public ReplicatedLockTokenState()\n-    {\n-    }\n-\n-    public ReplicatedLockTokenState( long ordinal, ReplicatedLockTokenRequest currentToken )\n+  private ReplicatedLockTokenRequest currentToken = INVALID_REPLICATED_LOCK_TOKEN_REQUEST;\n+  private long ordinal = -1L;\n+\n+  public ReplicatedLockTokenState()\n+  {\n+  }\n+\n+  public ReplicatedLockTokenState(long ordinal, ReplicatedLockTokenRequest currentToken)\n+  {\n+    this.ordinal = ordinal;\n+    this.currentToken = currentToken;\n+  }\n+\n+  public void set(ReplicatedLockTokenRequest currentToken, long ordinal)\n+  {\n+    this.currentToken = currentToken;\n+    this.ordinal = ordinal;\n+  }\n+\n+  public ReplicatedLockTokenRequest get()\n+  {\n+    return currentToken;\n+  }\n+\n+  long ordinal()\n+  {\n+    return ordinal;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"ReplicatedLockTokenState{currentToken=%s, ordinal=%d}\", currentToken, ordinal);\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        this.ordinal = ordinal;\n-        this.currentToken = currentToken;\n+      return true;\n     }\n-\n-    public void set( ReplicatedLockTokenRequest currentToken, long ordinal )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        this.currentToken = currentToken;\n-        this.ordinal = ordinal;\n+      return false;\n     }\n-\n-    public ReplicatedLockTokenRequest get()\n+    ReplicatedLockTokenState that = (ReplicatedLockTokenState) o;\n+    return ordinal == that.ordinal &&\n+        Objects.equals(currentToken, that.currentToken);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(currentToken, ordinal);\n+  }\n+\n+  ReplicatedLockTokenState newInstance()\n+  {\n+    return new ReplicatedLockTokenState(ordinal, currentToken);\n+  }\n+\n+  public static class Marshal extends SafeStateMarshal<ReplicatedLockTokenState>\n+  {\n+    private final ChannelMarshal<MemberId> memberMarshal;\n+\n+    public Marshal(ChannelMarshal<MemberId> memberMarshal)\n     {\n-        return currentToken;\n-    }\n-\n-    long ordinal()\n-    {\n-        return ordinal;\n+      this.memberMarshal = memberMarshal;\n     }\n \n     @Override\n-    public String toString()\n+    public void marshal(ReplicatedLockTokenState state,\n+                        WritableChannel channel) throws IOException\n     {\n-        return String.format( \"ReplicatedLockTokenState{currentToken=%s, ordinal=%d}\", currentToken, ordinal );\n+      channel.putLong(state.ordinal);\n+      channel.putInt(state.get().id());\n+      memberMarshal.marshal(state.get().owner(), channel);\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public ReplicatedLockTokenState unmarshal0(ReadableChannel channel) throws IOException, EndOfStreamException\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        ReplicatedLockTokenState that = (ReplicatedLockTokenState) o;\n-        return ordinal == that.ordinal &&\n-                Objects.equals( currentToken, that.currentToken );\n-    }\n+      long logIndex = channel.getLong();\n+      int candidateId = channel.getInt();\n+      MemberId member = memberMarshal.unmarshal(channel);\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return Objects.hash( currentToken, ordinal );\n+      return new ReplicatedLockTokenState(logIndex, new ReplicatedLockTokenRequest(member, candidateId));\n     }\n \n-    ReplicatedLockTokenState newInstance()\n+    @Override\n+    public ReplicatedLockTokenState startState()\n     {\n-        return new ReplicatedLockTokenState( ordinal, currentToken );\n+      return new ReplicatedLockTokenState();\n     }\n \n-    public static class Marshal extends SafeStateMarshal<ReplicatedLockTokenState>\n+    @Override\n+    public long ordinal(ReplicatedLockTokenState state)\n     {\n-        private final ChannelMarshal<MemberId> memberMarshal;\n-\n-        public Marshal( ChannelMarshal<MemberId> memberMarshal )\n-        {\n-            this.memberMarshal = memberMarshal;\n-        }\n-\n-        @Override\n-        public void marshal( ReplicatedLockTokenState state,\n-                             WritableChannel channel ) throws IOException\n-        {\n-            channel.putLong( state.ordinal );\n-            channel.putInt( state.get().id() );\n-            memberMarshal.marshal( state.get().owner(), channel );\n-        }\n-\n-        @Override\n-        public ReplicatedLockTokenState unmarshal0( ReadableChannel channel ) throws IOException, EndOfStreamException\n-        {\n-            long logIndex = channel.getLong();\n-            int candidateId = channel.getInt();\n-            MemberId member = memberMarshal.unmarshal( channel );\n-\n-            return new ReplicatedLockTokenState( logIndex, new ReplicatedLockTokenRequest( member, candidateId ) );\n-        }\n-\n-        @Override\n-        public ReplicatedLockTokenState startState()\n-        {\n-            return new ReplicatedLockTokenState();\n-        }\n-\n-        @Override\n-        public long ordinal( ReplicatedLockTokenState state )\n-        {\n-            return state.ordinal();\n-        }\n+      return state.ordinal();\n     }\n+  }\n }\n",
            "diff_size": 138
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "85",
                    "column": "40",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/777/ReplicatedLockTokenState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/777/ReplicatedLockTokenState.java\nindex 243d68cb407..f784298a310 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/777/ReplicatedLockTokenState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/777/ReplicatedLockTokenState.java\n@@ -75,13 +75,14 @@ public class ReplicatedLockTokenState\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        ReplicatedLockTokenState that = (ReplicatedLockTokenState) o;\n-        return ordinal == that.ordinal &&\n-                Objects.equals( currentToken, that.currentToken );\n+\n+ReplicatedLockTokenState that = (ReplicatedLockTokenState) o;\n+        return ordinal == that.ordinal &&Objects.equals( currentToken, that.currentToken );\n     }\n \n     @Override\n@@ -105,9 +106,8 @@ public class ReplicatedLockTokenState\n         }\n \n         @Override\n-        public void marshal( ReplicatedLockTokenState state,\n-                             WritableChannel channel ) throws IOException\n-        {\n+        public void marshal( ReplicatedLockTokenState state, WritableChannel channel ) throws IOException\n+{\n             channel.putLong( state.ordinal );\n             channel.putInt( state.get().id() );\n             memberMarshal.marshal( state.get().owner(), channel );\n@@ -119,8 +119,7 @@ public class ReplicatedLockTokenState\n             long logIndex = channel.getLong();\n             int candidateId = channel.getInt();\n             MemberId member = memberMarshal.unmarshal( channel );\n-\n-            return new ReplicatedLockTokenState( logIndex, new ReplicatedLockTokenRequest( member, candidateId ) );\n+return new ReplicatedLockTokenState( logIndex, new ReplicatedLockTokenRequest( member, candidateId ) );\n         }\n \n         @Override\n@@ -135,4 +134,4 @@ public class ReplicatedLockTokenState\n             return state.ordinal();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1800",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "299",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "319",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "359",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "450",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1800/AbstractKeyValueStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1800/AbstractKeyValueStore.java\nindex 54cc4de8926..89281a9e505 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1800/AbstractKeyValueStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1800/AbstractKeyValueStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.kvstore;\n \n import java.io.File;\n@@ -43,432 +44,429 @@ import static org.neo4j.kernel.impl.store.kvstore.LockWrapper.writeLock;\n  *\n  * @param <Key> a base type for the keys stored in this store.\n  */\n-@Rotation( Rotation.Strategy.LEFT_RIGHT )\n-@State( State.Strategy.CONCURRENT_HASH_MAP )\n+@Rotation(Rotation.Strategy.LEFT_RIGHT)\n+@State(State.Strategy.CONCURRENT_HASH_MAP)\n public abstract class AbstractKeyValueStore<Key> extends LifecycleAdapter\n {\n-    private final UpdateLock updateLock = new UpdateLock();\n-    private final Format format;\n-    final RotationStrategy rotationStrategy;\n-    private final RotationTimerFactory rotationTimerFactory;\n-    private final Logger logger;\n-    volatile ProgressiveState<Key> state;\n-    private DataInitializer<EntryUpdater<Key>> stateInitializer;\n-    private final FileSystemAbstraction fs;\n-    final int keySize;\n-    final int valueSize;\n-    private volatile boolean stopped;\n-\n-    public AbstractKeyValueStore( FileSystemAbstraction fs, PageCache pages, File base, RotationMonitor monitor, Logger logger,\n-            RotationTimerFactory timerFactory, VersionContextSupplier versionContextSupplier, int keySize,\n-            int valueSize, HeaderField<?>... headerFields )\n+  private final UpdateLock updateLock = new UpdateLock();\n+  private final Format format;\n+  final RotationStrategy rotationStrategy;\n+  private final RotationTimerFactory rotationTimerFactory;\n+  private final Logger logger;\n+  volatile ProgressiveState<Key> state;\n+  private DataInitializer<EntryUpdater<Key>> stateInitializer;\n+  private final FileSystemAbstraction fs;\n+  final int keySize;\n+  final int valueSize;\n+  private volatile boolean stopped;\n+\n+  public AbstractKeyValueStore(FileSystemAbstraction fs, PageCache pages, File base, RotationMonitor monitor, Logger logger,\n+                               RotationTimerFactory timerFactory, VersionContextSupplier versionContextSupplier, int keySize,\n+                               int valueSize, HeaderField<?>... headerFields)\n+  {\n+    this.fs = fs;\n+    this.keySize = keySize;\n+    this.valueSize = valueSize;\n+    Rotation rotation = getClass().getAnnotation(Rotation.class);\n+    if (monitor == null)\n+    {\n+      monitor = RotationMonitor.NONE;\n+    }\n+    this.format = new Format(headerFields);\n+    this.logger = logger;\n+    this.rotationStrategy = rotation.value().create(fs, pages, format, monitor, base, rotation.parameters());\n+    this.rotationTimerFactory = timerFactory;\n+    this.state = new DeadState.Stopped<>(format, getClass().getAnnotation(State.class).value(),\n+        versionContextSupplier);\n+  }\n+\n+  protected final void setEntryUpdaterInitializer(DataInitializer<EntryUpdater<Key>> stateInitializer)\n+  {\n+    this.stateInitializer = stateInitializer;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"%s[state=%s, hasChanges=%s]\", getClass().getSimpleName(), state, state.hasChanges());\n+  }\n+\n+  protected final <Value> Value lookup(Key key, Reader<Value> reader) throws IOException\n+  {\n+    ValueLookup<Value> lookup = new ValueLookup<>(reader);\n+    while (true)\n     {\n-        this.fs = fs;\n-        this.keySize = keySize;\n-        this.valueSize = valueSize;\n-        Rotation rotation = getClass().getAnnotation( Rotation.class );\n-        if ( monitor == null )\n+      ProgressiveState<Key> originalState = this.state;\n+      try\n+      {\n+        return lookup.value(!originalState.lookup(key, lookup));\n+      } catch (FileIsNotMappedException e)\n+      {\n+        // if the state has changed we think the exception is caused by a rotation event. In this\n+        // case we simply retry the lookup on the rotated state. Otherwise we rethrow.\n+        if (originalState == this.state)\n         {\n-            monitor = RotationMonitor.NONE;\n+          throw e;\n         }\n-        this.format = new Format( headerFields );\n-        this.logger = logger;\n-        this.rotationStrategy = rotation.value().create( fs, pages, format, monitor, base, rotation.parameters() );\n-        this.rotationTimerFactory = timerFactory;\n-        this.state = new DeadState.Stopped<>( format, getClass().getAnnotation( State.class ).value(),\n-                versionContextSupplier );\n+      }\n     }\n-\n-    protected final void setEntryUpdaterInitializer( DataInitializer<EntryUpdater<Key>> stateInitializer )\n+  }\n+\n+  /**\n+   * Introspective feature, not thread safe.\n+   */\n+  protected final void visitAll(Visitor visitor) throws IOException\n+  {\n+    ProgressiveState<Key> state = this.state;\n+    if (visitor instanceof MetadataVisitor)\n     {\n-        this.stateInitializer = stateInitializer;\n+      ((MetadataVisitor) visitor).visitMetadata(state.file(), headers(), state.storedEntryCount());\n     }\n-\n-    @Override\n-    public String toString()\n+    try (DataProvider provider = state.dataProvider())\n     {\n-        return String.format( \"%s[state=%s, hasChanges=%s]\", getClass().getSimpleName(), state, state.hasChanges() );\n+      transfer(provider, visitor);\n     }\n+  }\n \n-    protected final <Value> Value lookup( Key key, Reader<Value> reader ) throws IOException\n+  protected final void visitFile(File path, Visitor visitor) throws IOException\n+  {\n+    try (KeyValueStoreFile file = rotationStrategy.openStoreFile(path))\n     {\n-        ValueLookup<Value> lookup = new ValueLookup<>( reader );\n-        while ( true )\n-        {\n-            ProgressiveState<Key> originalState = this.state;\n-            try\n-            {\n-                return lookup.value( !originalState.lookup( key, lookup ) );\n-            }\n-            catch ( FileIsNotMappedException e )\n-            {\n-                // if the state has changed we think the exception is caused by a rotation event. In this\n-                // case we simply retry the lookup on the rotated state. Otherwise we rethrow.\n-                if ( originalState == this.state )\n-                {\n-                    throw e;\n-                }\n-            }\n-        }\n+      if (visitor instanceof MetadataVisitor)\n+      {\n+        ((MetadataVisitor) visitor).visitMetadata(path, file.headers(), file.entryCount());\n+      }\n+      try (DataProvider provider = file.dataProvider())\n+      {\n+        transfer(provider, visitor);\n+      }\n     }\n+  }\n \n-    /** Introspective feature, not thread safe. */\n-    protected final void visitAll( Visitor visitor ) throws IOException\n-    {\n-        ProgressiveState<Key> state = this.state;\n-        if ( visitor instanceof MetadataVisitor )\n-        {\n-            ((MetadataVisitor) visitor).visitMetadata( state.file(), headers(), state.storedEntryCount() );\n-        }\n-        try ( DataProvider provider = state.dataProvider() )\n-        {\n-            transfer( provider, visitor );\n-        }\n-    }\n+  protected abstract Key readKey(ReadableBuffer key) throws UnknownKey;\n \n-    protected final void visitFile( File path, Visitor visitor ) throws IOException\n-    {\n-        try ( KeyValueStoreFile file = rotationStrategy.openStoreFile( path ) )\n-        {\n-            if ( visitor instanceof MetadataVisitor )\n-            {\n-                ((MetadataVisitor) visitor).visitMetadata( path, file.headers(), file.entryCount() );\n-            }\n-            try ( DataProvider provider = file.dataProvider() )\n-            {\n-                transfer( provider, visitor );\n-            }\n-        }\n-    }\n+  protected abstract void writeKey(Key key, WritableBuffer buffer);\n+\n+  protected abstract void writeFormatSpecifier(WritableBuffer formatSpecifier);\n \n-    protected abstract Key readKey( ReadableBuffer key ) throws UnknownKey;\n+  protected abstract Headers initialHeaders(long version);\n \n-    protected abstract void writeKey( Key key, WritableBuffer buffer );\n+  protected abstract int compareHeaders(Headers lhs, Headers rhs);\n \n-    protected abstract void writeFormatSpecifier( WritableBuffer formatSpecifier );\n+  protected boolean include(Key key, ReadableBuffer value)\n+  {\n+    return true;\n+  }\n \n-    protected abstract Headers initialHeaders( long version );\n+  protected final Headers headers()\n+  {\n+    return state.headers();\n+  }\n \n-    protected abstract int compareHeaders( Headers lhs, Headers rhs );\n+  public int totalEntriesStored()\n+  {\n+    return state.storedEntryCount();\n+  }\n \n-    protected boolean include( Key key, ReadableBuffer value )\n+  public final File currentFile()\n+  {\n+    return state.file();\n+  }\n+\n+  @Override\n+  public final void init() throws IOException\n+  {\n+    try (LockWrapper ignored = writeLock(updateLock, logger))\n     {\n-        return true;\n+      state = state.initialize(rotationStrategy);\n     }\n+  }\n \n-    protected final Headers headers()\n+  @Override\n+  public final void start() throws IOException\n+  {\n+    try (LockWrapper ignored = writeLock(updateLock, logger))\n     {\n-        return state.headers();\n+      state = state.start(stateInitializer);\n     }\n+  }\n \n-    public int totalEntriesStored()\n+  protected final Optional<EntryUpdater<Key>> updater(final long version)\n+  {\n+    try (LockWrapper lock = readLock(updateLock, logger))\n     {\n-        return state.storedEntryCount();\n+      return state.optionalUpdater(version, lock.get());\n     }\n+  }\n \n-    public final File currentFile()\n+  protected final EntryUpdater<Key> updater()\n+  {\n+    try (LockWrapper lock = readLock(updateLock, logger))\n     {\n-        return state.file();\n+      return state.unsafeUpdater(lock.get());\n     }\n+  }\n \n-    @Override\n-    public final void init() throws IOException\n+  protected final EntryUpdater<Key> resetter(long version)\n+  {\n+    try (LockWrapper lock = writeLock(updateLock, logger))\n     {\n-        try ( LockWrapper ignored = writeLock( updateLock, logger ) )\n-        {\n-            state = state.initialize( rotationStrategy );\n-        }\n+      ProgressiveState<Key> current = state;\n+      return current.resetter(lock.get(), new RotationTask(version));\n     }\n-\n-    @Override\n-    public final void start() throws IOException\n+  }\n+\n+  /**\n+   * Prepare for rotation. Sets up the internal structures to ensure that all changes up to and including the changes\n+   * of the specified version are applied before rotation takes place. This method does not block, however if all\n+   * required changes have not been applied {@linkplain PreparedRotation#rotate() the rotate method} will block\n+   * waiting for all changes to be applied. Invoking {@linkplain PreparedRotation#rotate() the rotate method} some\n+   * time after all requested transactions have been applied is ok, since setting the store up for rotation does\n+   * not block updates, it just sorts them into updates that apply before rotation and updates that apply after.\n+   *\n+   * @param version the smallest version to include in the rotation. Note that the actual rotated version might be a\n+   *                later version than this version. The actual rotated version is returned by\n+   *                {@link PreparedRotation#rotate()}.\n+   */\n+  protected final PreparedRotation prepareRotation(final long version)\n+  {\n+    try (LockWrapper ignored = writeLock(updateLock, logger))\n     {\n-        try ( LockWrapper ignored = writeLock( updateLock, logger ) )\n-        {\n-            state = state.start( stateInitializer );\n-        }\n+      ProgressiveState<Key> prior = state;\n+      if (prior.storedVersion() == version && !prior.hasChanges())\n+      {\n+        return () -> version;\n+      }\n+      return new RotationTask(version);\n     }\n+  }\n+\n+  protected abstract void updateHeaders(Headers.Builder headers, long version);\n \n-    protected final Optional<EntryUpdater<Key>> updater( final long version )\n+  @Override\n+  public final void shutdown() throws IOException\n+  {\n+    try (LockWrapper ignored = writeLock(updateLock, logger))\n     {\n-        try ( LockWrapper lock = readLock( updateLock, logger ) )\n-        {\n-            return state.optionalUpdater( version, lock.get() );\n-        }\n+      stopped = true;\n+      state = state.stop();\n     }\n-\n-    protected final EntryUpdater<Key> updater()\n+  }\n+\n+  private boolean transfer(EntryVisitor<WritableBuffer> producer, EntryVisitor<ReadableBuffer> consumer)\n+      throws IOException\n+  {\n+    BigEndianByteArrayBuffer key = new BigEndianByteArrayBuffer(keySize);\n+    BigEndianByteArrayBuffer value = new BigEndianByteArrayBuffer(valueSize);\n+    while (producer.visit(key, value))\n     {\n-        try ( LockWrapper lock = readLock( updateLock, logger ) )\n-        {\n-            return state.unsafeUpdater( lock.get() );\n-        }\n+      if (!consumer.visit(key, value))\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n \n-    protected final EntryUpdater<Key> resetter( long version )\n+  public Iterable<File> allFiles()\n+  {\n+    return StreamSupport.stream(rotationStrategy.candidateFiles().spliterator(), false)\n+        .filter(fs::fileExists)\n+        .collect(Collectors.toList());\n+  }\n+\n+  private class RotationTask implements PreparedRotation, Runnable\n+  {\n+    private final RotationState<Key> rotation;\n+\n+    RotationTask(long version)\n     {\n-        try ( LockWrapper lock = writeLock( updateLock, logger ) )\n-        {\n-            ProgressiveState<Key> current = state;\n-            return current.resetter( lock.get(), new RotationTask( version ) );\n-        }\n+      state = this.rotation = state.prepareRotation(version);\n     }\n \n-    /**\n-     * Prepare for rotation. Sets up the internal structures to ensure that all changes up to and including the changes\n-     * of the specified version are applied before rotation takes place. This method does not block, however if all\n-     * required changes have not been applied {@linkplain PreparedRotation#rotate() the rotate method} will block\n-     * waiting for all changes to be applied. Invoking {@linkplain PreparedRotation#rotate() the rotate method} some\n-     * time after all requested transactions have been applied is ok, since setting the store up for rotation does\n-     * not block updates, it just sorts them into updates that apply before rotation and updates that apply after.\n-     *\n-     * @param version the smallest version to include in the rotation. Note that the actual rotated version might be a\n-     * later version than this version. The actual rotated version is returned by\n-     * {@link PreparedRotation#rotate()}.\n-     */\n-    protected final PreparedRotation prepareRotation( final long version )\n+    @Override\n+    public long rotate() throws IOException\n     {\n-        try ( LockWrapper ignored = writeLock( updateLock, logger ) )\n-        {\n-            ProgressiveState<Key> prior = state;\n-            if ( prior.storedVersion() == version && !prior.hasChanges() )\n-            {\n-                return () -> version;\n-            }\n-            return new RotationTask( version );\n-        }\n+      return rotate(false);\n     }\n \n-    protected abstract void updateHeaders( Headers.Builder headers, long version );\n-\n     @Override\n-    public final void shutdown() throws IOException\n+    public void run()\n     {\n-        try ( LockWrapper ignored = writeLock( updateLock, logger ) )\n-        {\n-            stopped = true;\n-            state = state.stop();\n-        }\n+      try (LockWrapper ignored = writeLock(updateLock, logger))\n+      {\n+        rotate(true);\n+      } catch (IOException e)\n+      {\n+        throw new UnderlyingStorageException(e);\n+      }\n     }\n \n-    private boolean transfer( EntryVisitor<WritableBuffer> producer, EntryVisitor<ReadableBuffer> consumer )\n-            throws IOException\n+    private long rotate(boolean force) throws IOException\n     {\n-        BigEndianByteArrayBuffer key = new BigEndianByteArrayBuffer( keySize );\n-        BigEndianByteArrayBuffer value = new BigEndianByteArrayBuffer( valueSize );\n-        while ( producer.visit( key, value ) )\n+      try (RotationState<Key> rotation = this.rotation)\n+      {\n+        try\n         {\n-            if ( !consumer.visit( key, value ) )\n+          final long version = rotation.rotationVersion();\n+          ProgressiveState<Key> next = rotation.rotate(force, rotationStrategy, rotationTimerFactory,\n+              value -> updateHeaders(value, version));\n+          try (LockWrapper ignored = writeLock(updateLock, logger))\n+          {\n+            state = next;\n+          }\n+          return version;\n+        } catch (Throwable t)\n+        {\n+          // Rotation failed. Here we assume that rotation state remembers this so that closing it\n+          // won't close the state as it was before rotation began, which we're reverting to right here.\n+          try (LockWrapper ignored = writeLock(updateLock, logger))\n+          {\n+            // Only mark as failed if we're still running.\n+            // If shutdown has been called while being in rotation state then shutdown will fail\n+            // without closing the store. This means that rotation takes over that responsibility.\n+            // Therefore avoid marking rotation state as failed in this case and let the store\n+            // be naturally closed before leaving this method.\n+            if (!stopped)\n             {\n-                return false;\n+              state = rotation.markAsFailed();\n             }\n+          }\n+          throw t;\n         }\n-        return true;\n+      }\n     }\n+  }\n+\n+  public abstract static class Reader<Value>\n+  {\n+    protected abstract Value parseValue(ReadableBuffer value);\n \n-    public Iterable<File> allFiles()\n+    protected Value defaultValue()\n     {\n-        return StreamSupport.stream( rotationStrategy.candidateFiles().spliterator(), false )\n-                .filter( fs::fileExists )\n-                .collect( Collectors.toList() );\n+      return null;\n     }\n+  }\n \n-    private class RotationTask implements PreparedRotation, Runnable\n+  public abstract class Visitor implements KeyValueVisitor\n+  {\n+    @Override\n+    public boolean visit(ReadableBuffer key, ReadableBuffer value)\n     {\n-        private final RotationState<Key> rotation;\n+      try\n+      {\n+        return visitKeyValuePair(readKey(key), value);\n+      } catch (UnknownKey e)\n+      {\n+        return visitUnknownKey(e, key, value);\n+      }\n+    }\n \n-        RotationTask( long version )\n-        {\n-            state = this.rotation = state.prepareRotation( version );\n-        }\n+    protected boolean visitUnknownKey(UnknownKey exception, ReadableBuffer key, ReadableBuffer value)\n+    {\n+      throw new IllegalArgumentException(exception.getMessage(), exception);\n+    }\n \n-        @Override\n-        public long rotate() throws IOException\n-        {\n-            return rotate( false );\n-        }\n+    protected abstract boolean visitKeyValuePair(Key key, ReadableBuffer value);\n+  }\n \n-        @Override\n-        public void run()\n-        {\n-            try ( LockWrapper ignored = writeLock( updateLock, logger ) )\n-            {\n-                rotate( true );\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new UnderlyingStorageException( e );\n-            }\n-        }\n+  private HeaderField<?>[] headerFieldsForFormat(ReadableBuffer formatSpecifier)\n+  {\n+    return format.defaultHeaderFieldsForFormat(formatSpecifier);\n+  }\n \n-        private long rotate( boolean force ) throws IOException\n-        {\n-            try ( RotationState<Key> rotation = this.rotation )\n-            {\n-                try\n-                {\n-                    final long version = rotation.rotationVersion();\n-                    ProgressiveState<Key> next = rotation.rotate( force, rotationStrategy, rotationTimerFactory,\n-                            value -> updateHeaders( value, version ) );\n-                    try ( LockWrapper ignored = writeLock( updateLock, logger ) )\n-                    {\n-                        state = next;\n-                    }\n-                    return version;\n-                }\n-                catch ( Throwable t )\n-                {\n-                    // Rotation failed. Here we assume that rotation state remembers this so that closing it\n-                    // won't close the state as it was before rotation began, which we're reverting to right here.\n-                    try ( LockWrapper ignored = writeLock( updateLock, logger ) )\n-                    {\n-                        // Only mark as failed if we're still running.\n-                        // If shutdown has been called while being in rotation state then shutdown will fail\n-                        // without closing the store. This means that rotation takes over that responsibility.\n-                        // Therefore avoid marking rotation state as failed in this case and let the store\n-                        // be naturally closed before leaving this method.\n-                        if ( !stopped )\n-                        {\n-                            state = rotation.markAsFailed();\n-                        }\n-                    }\n-                    throw t;\n-                }\n-            }\n-        }\n-    }\n+  protected abstract long version(Headers headers);\n \n-    public abstract static class Reader<Value>\n+  private final class Format extends ProgressiveFormat implements KeyFormat<Key>\n+  {\n+    Format(HeaderField<?>... headerFields)\n     {\n-        protected abstract Value parseValue( ReadableBuffer value );\n-\n-        protected Value defaultValue()\n-        {\n-            return null;\n-        }\n+      super(512, headerFields);\n     }\n \n-    public abstract class Visitor implements KeyValueVisitor\n+    @Override\n+    protected void writeFormatSpecifier(WritableBuffer formatSpecifier)\n     {\n-        @Override\n-        public boolean visit( ReadableBuffer key, ReadableBuffer value )\n-        {\n-            try\n-            {\n-                return visitKeyValuePair( readKey( key ), value );\n-            }\n-            catch ( UnknownKey e )\n-            {\n-                return visitUnknownKey( e, key, value );\n-            }\n-        }\n-\n-        protected boolean visitUnknownKey( UnknownKey exception, ReadableBuffer key, ReadableBuffer value )\n-        {\n-            throw new IllegalArgumentException( exception.getMessage(), exception );\n-        }\n-\n-        protected abstract boolean visitKeyValuePair( Key key, ReadableBuffer value );\n+      AbstractKeyValueStore.this.writeFormatSpecifier(formatSpecifier);\n     }\n \n-    private HeaderField<?>[] headerFieldsForFormat( ReadableBuffer formatSpecifier )\n+    @Override\n+    protected HeaderField<?>[] headerFieldsForFormat(ReadableBuffer formatSpecifier)\n     {\n-        return format.defaultHeaderFieldsForFormat( formatSpecifier );\n+      return AbstractKeyValueStore.this.headerFieldsForFormat(formatSpecifier);\n     }\n \n-    protected abstract long version( Headers headers );\n-\n-    private final class Format extends ProgressiveFormat implements KeyFormat<Key>\n+    HeaderField<?>[] defaultHeaderFieldsForFormat(ReadableBuffer formatSpecifier)\n     {\n-        Format( HeaderField<?>... headerFields )\n-        {\n-            super( 512, headerFields );\n-        }\n-\n-        @Override\n-        protected void writeFormatSpecifier( WritableBuffer formatSpecifier )\n-        {\n-            AbstractKeyValueStore.this.writeFormatSpecifier( formatSpecifier );\n-        }\n-\n-        @Override\n-        protected HeaderField<?>[] headerFieldsForFormat( ReadableBuffer formatSpecifier )\n-        {\n-            return AbstractKeyValueStore.this.headerFieldsForFormat( formatSpecifier );\n-        }\n-\n-        HeaderField<?>[] defaultHeaderFieldsForFormat( ReadableBuffer formatSpecifier )\n-        {\n-            return super.headerFieldsForFormat( formatSpecifier );\n-        }\n+      return super.headerFieldsForFormat(formatSpecifier);\n+    }\n \n-        @Override\n-        public void writeKey( Key key, WritableBuffer buffer )\n-        {\n-            AbstractKeyValueStore.this.writeKey( key, buffer );\n-        }\n+    @Override\n+    public void writeKey(Key key, WritableBuffer buffer)\n+    {\n+      AbstractKeyValueStore.this.writeKey(key, buffer);\n+    }\n \n-        @Override\n-        public int compareHeaders( Headers lhs, Headers rhs )\n-        {\n-            return AbstractKeyValueStore.this.compareHeaders( lhs, rhs );\n-        }\n+    @Override\n+    public int compareHeaders(Headers lhs, Headers rhs)\n+    {\n+      return AbstractKeyValueStore.this.compareHeaders(lhs, rhs);\n+    }\n \n-        @Override\n-        public Headers initialHeaders( long version )\n-        {\n-            return AbstractKeyValueStore.this.initialHeaders( version );\n-        }\n+    @Override\n+    public Headers initialHeaders(long version)\n+    {\n+      return AbstractKeyValueStore.this.initialHeaders(version);\n+    }\n \n-        @Override\n-        public int keySize()\n-        {\n-            return AbstractKeyValueStore.this.keySize;\n-        }\n+    @Override\n+    public int keySize()\n+    {\n+      return AbstractKeyValueStore.this.keySize;\n+    }\n \n-        @Override\n-        public long version( Headers headers )\n-        {\n-            return AbstractKeyValueStore.this.version( headers );\n-        }\n+    @Override\n+    public long version(Headers headers)\n+    {\n+      return AbstractKeyValueStore.this.version(headers);\n+    }\n \n+    @Override\n+    public DataProvider filter(final DataProvider provider)\n+    {\n+      return new DataProvider()\n+      {\n         @Override\n-        public DataProvider filter( final DataProvider provider )\n+        public boolean visit(WritableBuffer key, WritableBuffer value) throws IOException\n         {\n-            return new DataProvider()\n+          while (provider.visit(key, value))\n+          {\n+            try\n             {\n-                @Override\n-                public boolean visit( WritableBuffer key, WritableBuffer value ) throws IOException\n-                {\n-                    while ( provider.visit( key, value ) )\n-                    {\n-                        try\n-                        {\n-                            if ( include( readKey( key ), value ) )\n-                            {\n-                                return true;\n-                            }\n-                        }\n-                        catch ( UnknownKey e )\n-                        {\n-                            throw new IllegalArgumentException( e.getMessage(), e );\n-                        }\n-                    }\n-                    return false;\n-                }\n-\n-                @Override\n-                public void close() throws IOException\n-                {\n-                    provider.close();\n-                }\n-            };\n+              if (include(readKey(key), value))\n+              {\n+                return true;\n+              }\n+            } catch (UnknownKey e)\n+            {\n+              throw new IllegalArgumentException(e.getMessage(), e);\n+            }\n+          }\n+          return false;\n         }\n \n         @Override\n-        public int valueSize()\n+        public void close() throws IOException\n         {\n-            return AbstractKeyValueStore.this.valueSize;\n+          provider.close();\n         }\n+      };\n+    }\n+\n+    @Override\n+    public int valueSize()\n+    {\n+      return AbstractKeyValueStore.this.valueSize;\n     }\n+  }\n }\n",
            "diff_size": 510
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1800/AbstractKeyValueStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1800/AbstractKeyValueStore.java\nindex 54cc4de8926..8ed4b02f511 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1800/AbstractKeyValueStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1800/AbstractKeyValueStore.java\n@@ -60,8 +60,7 @@ public abstract class AbstractKeyValueStore<Key> extends LifecycleAdapter\n     private volatile boolean stopped;\n \n     public AbstractKeyValueStore( FileSystemAbstraction fs, PageCache pages, File base, RotationMonitor monitor, Logger logger,\n-            RotationTimerFactory timerFactory, VersionContextSupplier versionContextSupplier, int keySize,\n-            int valueSize, HeaderField<?>... headerFields )\n+            RotationTimerFactory timerFactory, VersionContextSupplier versionContextSupplier, int keySize, int valueSize, HeaderField<?>... headerFields )\n     {\n         this.fs = fs;\n         this.keySize = keySize;\n@@ -251,9 +250,8 @@ public abstract class AbstractKeyValueStore<Key> extends LifecycleAdapter\n         }\n     }\n \n-    private boolean transfer( EntryVisitor<WritableBuffer> producer, EntryVisitor<ReadableBuffer> consumer )\n-            throws IOException\n-    {\n+    private boolean transfer( EntryVisitor<WritableBuffer> producer, EntryVisitor<ReadableBuffer> consumer ) throws IOException\n+{\n         BigEndianByteArrayBuffer key = new BigEndianByteArrayBuffer( keySize );\n         BigEndianByteArrayBuffer value = new BigEndianByteArrayBuffer( valueSize );\n         while ( producer.visit( key, value ) )\n@@ -268,9 +266,7 @@ public abstract class AbstractKeyValueStore<Key> extends LifecycleAdapter\n \n     public Iterable<File> allFiles()\n     {\n-        return StreamSupport.stream( rotationStrategy.candidateFiles().spliterator(), false )\n-                .filter( fs::fileExists )\n-                .collect( Collectors.toList() );\n+        return StreamSupport.stream( rotationStrategy.candidateFiles().spliterator(), false ).filter( fs::fileExists ).collect( Collectors.toList() );\n     }\n \n     private class RotationTask implements PreparedRotation, Runnable\n@@ -310,11 +306,13 @@ public abstract class AbstractKeyValueStore<Key> extends LifecycleAdapter\n                     final long version = rotation.rotationVersion();\n                     ProgressiveState<Key> next = rotation.rotate( force, rotationStrategy, rotationTimerFactory,\n                             value -> updateHeaders( value, version ) );\n-                    try ( LockWrapper ignored = writeLock( updateLock, logger ) )\n+\n+try ( LockWrapper ignored = writeLock( updateLock, logger ) )\n                     {\n                         state = next;\n                     }\n-                    return version;\n+\n+return version;\n                 }\n                 catch ( Throwable t )\n                 {\n@@ -471,4 +469,4 @@ public abstract class AbstractKeyValueStore<Key> extends LifecycleAdapter\n             return AbstractKeyValueStore.this.valueSize;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
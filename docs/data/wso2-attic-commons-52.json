{
    "project_name": "wso2-attic-commons",
    "error_id": "52",
    "information": {
        "errors": [
            {
                "line": "53",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 135).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    public void onStartup(Set<Class<?>> c, ServletContext ctx) {\n        ctx.setAttribute(\"SHAREDLIB-1\", \"Attribute successfully set by Initializer class which has expressed interest in @WebServlet\");\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/52/Initializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/52/Initializer.java\nindex b1f2bef4e0c..b61ac3e2001 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/52/Initializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/52/Initializer.java\n@@ -37,6 +37,7 @@\n  * only if the new code is made subject to such option by the copyright\n  * holder.\n  */\n+\n package org.glassfish.servlet.container_initializer_lib;\n \n import java.util.Set;\n@@ -46,10 +47,11 @@ import javax.servlet.annotation.*;\n @HandlesTypes(WebServlet.class)\n public class Initializer implements ServletContainerInitializer {\n \n-    public Initializer() {\n-    }\n+  public Initializer() {\n+  }\n \n-    public void onStartup(Set<Class<?>> c, ServletContext ctx) {\n-        ctx.setAttribute(\"SHAREDLIB-1\", \"Attribute successfully set by Initializer class which has expressed interest in @WebServlet\");\n-    }\n+  public void onStartup(Set<Class<?>> c, ServletContext ctx) {\n+    ctx.setAttribute(\"SHAREDLIB-1\",\n+      \"Attribute successfully set by Initializer class which has expressed interest in @WebServlet\");\n+  }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/52/Initializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/52/Initializer.java\nindex b1f2bef4e0c..a929c2f896e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/52/Initializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/52/Initializer.java\n@@ -52,4 +52,4 @@ public class Initializer implements ServletContainerInitializer {\n     public void onStartup(Set<Class<?>> c, ServletContext ctx) {\n         ctx.setAttribute(\"SHAREDLIB-1\", \"Attribute successfully set by Initializer class which has expressed interest in @WebServlet\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
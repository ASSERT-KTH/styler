{
    "project_name": "wso2-attic-commons",
    "error_id": "207",
    "information": {
        "errors": [
            {
                "line": "83",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n        if (taskID == null || taskID.equals(\"\")) {\n            NodeList nodeList = envelope.getElementsByTagNameNS(\"http://www.insurance.example.com/claims/schema\", \"response\");\n            if (nodeList.getLength() == 1) {\n                Node ele = nodeList.item(0);\n                taskID = ele.getTextContent();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/207/CorrelationFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/207/CorrelationFilter.java\nindex 0a561df3bf5..ec0fd202d9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/207/CorrelationFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/207/CorrelationFilter.java\n@@ -80,7 +80,8 @@ public class CorrelationFilter extends AbstractExtensionCorreationFilter {\n         //String id = envelope.getAttributeNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_ATTRIBUTE_NAME);\n \n         if (taskID == null || taskID.equals(\"\")) {\n-            NodeList nodeList = envelope.getElementsByTagNameNS(\"http://www.insurance.example.com/claims/schema\", \"response\");\n+            NodeList nodeList = envelope.getElementsByTagNameNS(\n+                    \"http://www.insurance.example.com/claims/schema\", \"response\");\n             if (nodeList.getLength() == 1) {\n                 Node ele = nodeList.item(0);\n                 taskID = ele.getTextContent();\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/207/CorrelationFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/207/CorrelationFilter.java\nindex 0a561df3bf5..1fa29a7f638 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/207/CorrelationFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/207/CorrelationFilter.java\n@@ -14,80 +14,80 @@ import javax.xml.namespace.QName;\n import java.util.Iterator;\n \n public class CorrelationFilter extends AbstractExtensionCorreationFilter {\n-    private static Log log = LogFactory.getLog(CorrelationFilter.class);\n-    public static final String FEEDBACK_HEADER_LOCALNAME = \"feedback\";\n-    public static final String FEEDBACK_HEADER_ROLE_URI = \"http://schemas.xmlsoap.org/soap/envelope/actor/feedback\";\n-    public static final String FEEDBACK_ATTRIBUTE_NAMESPACE = \"http://wso2.org/humantask/feedback\";\n-    public static final String FEEDBACK_ATTRIBUTE_NAME = \"taskid\";\n+  private static Log log = LogFactory.getLog(CorrelationFilter.class);\n+  public static final String FEEDBACK_HEADER_LOCALNAME = \"feedback\";\n+  public static final String FEEDBACK_HEADER_ROLE_URI = \"http://schemas.xmlsoap.org/soap/envelope/actor/feedback\";\n+  public static final String FEEDBACK_ATTRIBUTE_NAMESPACE = \"http://wso2.org/humantask/feedback\";\n+  public static final String FEEDBACK_ATTRIBUTE_NAME = \"taskid\";\n \n-    /**\n-     * Get namespace of the filter\n-     *\n-     * @return Namespace of the filter\n-     */\n-    public String getNamespaceURI() {\n-        return \"http://wso2.org\";\n-    }\n+  /**\n+   * Get namespace of the filter\n+   *\n+   * @return Namespace of the filter\n+   */\n+  public String getNamespaceURI() {\n+    return \"http://wso2.org\";\n+  }\n \n-    /**\n-     * Register correlation filter with a name\n-     */\n-    public void registerExtensionCorrelationFilter() {\n-        registerFilter(\"sampleFilter\", CorrelationFilter.class);\n-    }\n+  /**\n+   * Register correlation filter with a name\n+   */\n+  public void registerExtensionCorrelationFilter() {\n+    registerFilter(\"sampleFilter\", CorrelationFilter.class);\n+  }\n \n-    /**\n-     * Compute correlation values\n-     *\n-     * @param body   Soap body\n-     * @param header Soap header\n-     * @return Correlation values\n-     */\n-    public String[] computeCorrelationValues(Element body, Element header) {\n+  /**\n+   * Compute correlation values\n+   *\n+   * @param body   Soap body\n+   * @param header Soap header\n+   * @return Correlation values\n+   */\n+  public String[] computeCorrelationValues(Element body, Element header) {\n \n-        String id = getTaskID(header);\n-        if (id == null) {\n-            //\n-            id = getTaskID(body);\n-        }\n+    String id = getTaskID(header);\n+    if (id == null) {\n+      //\n+      id = getTaskID(body);\n+    }\n \n-        if (id == null) {\n-            log.error(\"null id\");\n-        } else {\n-            log.info(\"ID: \" + id);\n-        }\n-        \n-        return new String[]{id};\n+    if (id == null) {\n+      log.error(\"null id\");\n+    } else {\n+      log.info(\"ID: \" + id);\n     }\n \n-    private String getTaskID(Element envelope) {\n-        /*\n-        * <soapenv:Header>\n-        * <axis2ns1:feedback xmlns:axis2ns1=\"http://wso2.org/humantask/feedback\"\n-        * soapenv:actor=\"http://schemas.xmlsoap.org/soap/envelope/actor/feedback\" axis2ns1:taskid=\"500\" />\n-        * </soapenv:Header>\n-        * */\n-        String taskID = null;\n-        NodeList nList = envelope.getElementsByTagNameNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_HEADER_LOCALNAME);\n-        if (nList.getLength() > 0) {\n-            Node nNode = nList.item(0);\n-            NamedNodeMap namedNodeMap = nNode.getAttributes();\n-            if (namedNodeMap.getLength() > 0) {\n-                Node attr = namedNodeMap.getNamedItemNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_ATTRIBUTE_NAME);\n-                taskID = attr.getTextContent();\n-            }\n-        }\n-        //String id = envelope.getAttributeNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_ATTRIBUTE_NAME);\n+    return new String[] {id};\n+  }\n+\n+  private String getTaskID(Element envelope) {\n+    /*\n+     * <soapenv:Header>\n+     * <axis2ns1:feedback xmlns:axis2ns1=\"http://wso2.org/humantask/feedback\"\n+     * soapenv:actor=\"http://schemas.xmlsoap.org/soap/envelope/actor/feedback\" axis2ns1:taskid=\"500\" />\n+     * </soapenv:Header>\n+     * */\n+    String taskID = null;\n+    NodeList nList = envelope.getElementsByTagNameNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_HEADER_LOCALNAME);\n+    if (nList.getLength() > 0) {\n+      Node nNode = nList.item(0);\n+      NamedNodeMap namedNodeMap = nNode.getAttributes();\n+      if (namedNodeMap.getLength() > 0) {\n+        Node attr = namedNodeMap.getNamedItemNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_ATTRIBUTE_NAME);\n+        taskID = attr.getTextContent();\n+      }\n+    }\n+    //String id = envelope.getAttributeNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_ATTRIBUTE_NAME);\n \n-        if (taskID == null || taskID.equals(\"\")) {\n-            NodeList nodeList = envelope.getElementsByTagNameNS(\"http://www.insurance.example.com/claims/schema\", \"response\");\n-            if (nodeList.getLength() == 1) {\n-                Node ele = nodeList.item(0);\n-                taskID = ele.getTextContent();\n-            } else {\n-                log.error(\"elements are > or < 1\");\n-            }\n-        }\n+    if (taskID == null || taskID.equals(\"\")) {\n+      NodeList nodeList = envelope.getElementsByTagNameNS(\"http://www.insurance.example.com/claims/schema\", \"response\");\n+      if (nodeList.getLength() == 1) {\n+        Node ele = nodeList.item(0);\n+        taskID = ele.getTextContent();\n+      } else {\n+        log.error(\"elements are > or < 1\");\n+      }\n+    }\n //        NodeList nodeList = envelope.getElementsByTagNameNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_HEADER_LOCALNAME);\n //\n //        if (nodeList.getLength() == 1) {\n@@ -106,15 +106,15 @@ public class CorrelationFilter extends AbstractExtensionCorreationFilter {\n //                break;\n //            }\n \n-        return taskID;\n-    }\n+    return taskID;\n+  }\n \n-    /**\n-     * Get the name of the filter\n-     *\n-     * @return Name\n-     */\n-    public String getName() {\n-        return \"sampleFilter\";  \n-    }\n+  /**\n+   * Get the name of the filter\n+   *\n+   * @return Name\n+   */\n+  public String getName() {\n+    return \"sampleFilter\";\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/207/CorrelationFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/207/CorrelationFilter.java\nindex 0a561df3bf5..958999185bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/207/CorrelationFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/207/CorrelationFilter.java\n@@ -88,25 +88,9 @@ public class CorrelationFilter extends AbstractExtensionCorreationFilter {\n                 log.error(\"elements are > or < 1\");\n             }\n         }\n-//        NodeList nodeList = envelope.getElementsByTagNameNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_HEADER_LOCALNAME);\n-//\n-//        if (nodeList.getLength() == 1) {\n-//\n-//        } else {\n-//            log.error(\"headers are > or < 1\");\n-//            return null;\n-//        }\n-//\n-//        Node header = nodeList.item(0);\n-//\n-//\n-//            if (soapHeaderBlock.getLocalName().equals(Constants.FEEDBACK_HEADER_LOCALNAME)) {\n-//                taskID = soapHeaderBlock.getAttributeValue(new QName(Constants.FEEDBACK_ATTRIBUTE_NAMESPACE,\n-//                        Constants.FEEDBACK_ATTRIBUTE_NAME));\n-//                break;\n-//            }\n \n-        return taskID;\n+//        NodeList nodeList = env\n+return taskID;\n     }\n \n     /**\n@@ -117,4 +101,5 @@ public class CorrelationFilter extends AbstractExtensionCorreationFilter {\n     public String getName() {\n         return \"sampleFilter\";  \n     }\n-}\n+\n+  }\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/207/CorrelationFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/207/CorrelationFilter.java\nindex 0a561df3bf5..ec0fd202d9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/207/CorrelationFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/207/CorrelationFilter.java\n@@ -80,7 +80,8 @@ public class CorrelationFilter extends AbstractExtensionCorreationFilter {\n         //String id = envelope.getAttributeNS(FEEDBACK_ATTRIBUTE_NAMESPACE, FEEDBACK_ATTRIBUTE_NAME);\n \n         if (taskID == null || taskID.equals(\"\")) {\n-            NodeList nodeList = envelope.getElementsByTagNameNS(\"http://www.insurance.example.com/claims/schema\", \"response\");\n+            NodeList nodeList = envelope.getElementsByTagNameNS(\n+                    \"http://www.insurance.example.com/claims/schema\", \"response\");\n             if (nodeList.getLength() == 1) {\n                 Node ele = nodeList.item(0);\n                 taskID = ele.getTextContent();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2485",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2485/DateTimeFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2485/DateTimeFunction.java\nindex 2f5f50a56ef..2b038f3c57b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2485/DateTimeFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2485/DateTimeFunction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.impl.temporal;\n \n import java.time.Clock;\n@@ -48,68 +49,68 @@ import org.neo4j.values.virtual.MapValue;\n import static org.neo4j.internal.kernel.api.procs.FieldSignature.inputField;\n import static org.neo4j.internal.kernel.api.procs.Neo4jTypes.NTDateTime;\n \n-@Description( \"Create a DateTime instant.\" )\n+@Description(\"Create a DateTime instant.\")\n class DateTimeFunction extends TemporalFunction<DateTimeValue>\n {\n     private static final String CATEGORY = Category.TEMPORAL();\n \n-    DateTimeFunction( Supplier<ZoneId> defaultZone )\n+    DateTimeFunction(Supplier<ZoneId> defaultZone)\n     {\n-        super( NTDateTime, defaultZone );\n+        super(NTDateTime, defaultZone);\n     }\n \n     @Override\n-    protected DateTimeValue now( Clock clock, String timezone, Supplier<ZoneId> defaultZone )\n+    protected DateTimeValue now(Clock clock, String timezone, Supplier<ZoneId> defaultZone)\n     {\n-        return timezone == null ? DateTimeValue.now( clock, defaultZone ) : DateTimeValue.now( clock, timezone );\n+        return timezone == null ? DateTimeValue.now(clock, defaultZone) : DateTimeValue.now(clock, timezone);\n     }\n \n     @Override\n-    protected DateTimeValue parse( TextValue value, Supplier<ZoneId> defaultZone )\n+    protected DateTimeValue parse(TextValue value, Supplier<ZoneId> defaultZone)\n     {\n-        return DateTimeValue.parse( value, defaultZone );\n+        return DateTimeValue.parse(value, defaultZone);\n     }\n \n     @Override\n-    protected DateTimeValue build( MapValue map, Supplier<ZoneId> defaultZone )\n+    protected DateTimeValue build(MapValue map, Supplier<ZoneId> defaultZone)\n     {\n-        return DateTimeValue.build( map, defaultZone );\n+        return DateTimeValue.build(map, defaultZone);\n     }\n \n     @Override\n-    protected DateTimeValue select( AnyValue from, Supplier<ZoneId> defaultZone )\n+    protected DateTimeValue select(AnyValue from, Supplier<ZoneId> defaultZone)\n     {\n-        return DateTimeValue.select( from, defaultZone );\n+        return DateTimeValue.select(from, defaultZone);\n     }\n \n     @Override\n-    protected DateTimeValue truncate( TemporalUnit unit, TemporalValue input, MapValue fields, Supplier<ZoneId> defaultZone )\n+    protected DateTimeValue truncate(TemporalUnit unit, TemporalValue input, MapValue fields, Supplier<ZoneId> defaultZone)\n     {\n-        return DateTimeValue.truncate( unit, input, fields, defaultZone );\n+        return DateTimeValue.truncate(unit, input, fields, defaultZone);\n     }\n \n     @Override\n-    void registerMore( GlobalProcedures globalProcedures ) throws ProcedureException\n+    void registerMore(GlobalProcedures globalProcedures) throws ProcedureException\n     {\n-        globalProcedures.registerBuiltIn( new FromEpoch() );\n-        globalProcedures.registerBuiltIn( new FromEpochMillis() );\n+        globalProcedures.registerBuiltIn(new FromEpoch());\n+        globalProcedures.registerBuiltIn(new FromEpochMillis());\n     }\n \n     private static class FromEpoch implements CallableUserFunction\n     {\n         private static final String DESCRIPTION =\n-                \"Create a DateTime given the seconds and nanoseconds since the start of the epoch.\";\n+          \"Create a DateTime given the seconds and nanoseconds since the start of the epoch.\";\n         private static final List<FieldSignature> SIGNATURE = Arrays.asList(\n-                inputField( \"seconds\", Neo4jTypes.NTNumber ),\n-                inputField( \"nanoseconds\", Neo4jTypes.NTNumber ) );\n+          inputField(\"seconds\", Neo4jTypes.NTNumber),\n+          inputField(\"nanoseconds\", Neo4jTypes.NTNumber));\n         private final UserFunctionSignature signature;\n \n         private FromEpoch()\n         {\n             this.signature = new UserFunctionSignature(\n-                    new QualifiedName( new String[] {\"datetime\"}, \"fromepoch\" ),\n-                    SIGNATURE, Neo4jTypes.NTDateTime, null, new String[0],\n-                    DESCRIPTION, CATEGORY, true );\n+              new QualifiedName(new String[] {\"datetime\"}, \"fromepoch\"),\n+              SIGNATURE, Neo4jTypes.NTDateTime, null, new String[0],\n+              DESCRIPTION, CATEGORY, true);\n         }\n \n         @Override\n@@ -125,35 +126,35 @@ class DateTimeFunction extends TemporalFunction<DateTimeValue>\n         }\n \n         @Override\n-        public AnyValue apply( Context ctx, AnyValue[] input ) throws ProcedureException\n+        public AnyValue apply(Context ctx, AnyValue[] input) throws ProcedureException\n         {\n-            if ( input != null && input.length == 2 )\n+            if (input != null && input.length == 2)\n             {\n-                if ( input[0] instanceof IntegralValue && input[1] instanceof IntegralValue )\n+                if (input[0] instanceof IntegralValue && input[1] instanceof IntegralValue)\n                 {\n                     IntegralValue seconds = (IntegralValue) input[0];\n                     IntegralValue nanoseconds = (IntegralValue) input[1];\n                     return DateTimeValue.ofEpoch(seconds, nanoseconds);\n                 }\n             }\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                \": Provided input was \" + Arrays.toString( input ) );\n+            throw new ProcedureException(Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n+              \": Provided input was \" + Arrays.toString(input));\n         }\n     }\n \n     private static class FromEpochMillis implements CallableUserFunction\n     {\n         private static final String DESCRIPTION =\n-                \"Create a DateTime given the milliseconds since the start of the epoch.\";\n-        private static final List<FieldSignature> SIGNATURE = Collections.singletonList( inputField( \"milliseconds\", Neo4jTypes.NTNumber ) );\n+          \"Create a DateTime given the milliseconds since the start of the epoch.\";\n+        private static final List<FieldSignature> SIGNATURE = Collections.singletonList(inputField(\"milliseconds\", Neo4jTypes.NTNumber));\n         private final UserFunctionSignature signature;\n \n         private FromEpochMillis()\n         {\n             this.signature = new UserFunctionSignature(\n-                    new QualifiedName( new String[] {\"datetime\"}, \"fromepochmillis\" ),\n-                    SIGNATURE, Neo4jTypes.NTDateTime, null, new String[0],\n-                    DESCRIPTION, CATEGORY, true );\n+              new QualifiedName(new String[] {\"datetime\"}, \"fromepochmillis\"),\n+              SIGNATURE, Neo4jTypes.NTDateTime, null, new String[0],\n+              DESCRIPTION, CATEGORY, true);\n         }\n \n         @Override\n@@ -169,18 +170,18 @@ class DateTimeFunction extends TemporalFunction<DateTimeValue>\n         }\n \n         @Override\n-        public AnyValue apply( Context ctx, AnyValue[] input ) throws ProcedureException\n+        public AnyValue apply(Context ctx, AnyValue[] input) throws ProcedureException\n         {\n-            if ( input != null && input.length == 1 )\n+            if (input != null && input.length == 1)\n             {\n-                if ( input[0] instanceof IntegralValue )\n+                if (input[0] instanceof IntegralValue)\n                 {\n                     IntegralValue milliseconds = (IntegralValue) input[0];\n-                    return DateTimeValue.ofEpochMillis( milliseconds );\n+                    return DateTimeValue.ofEpochMillis(milliseconds);\n                 }\n             }\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                    \": Provided input was \" + Arrays.toString( input ) );\n+            throw new ProcedureException(Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n+              \": Provided input was \" + Arrays.toString(input));\n         }\n     }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
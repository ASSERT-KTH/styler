{
    "project_name": "apache-usergrid",
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "50",
                "column": "97",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n        throw new IllegalStateException(\n                \"The entity value serializer can only be used for data going to the database, \" +\n                        \"and not data coming from the database\" );\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler/30/EntityValueSerializer.java\nindex d0e18d42ac5..eea0de23df5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler/30/EntityValueSerializer.java\n@@ -47,7 +47,7 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n     @Override\n     public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n         throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n+                \"The entity value serializer can only be used for data going to the database, \"\n+                        + \"and not data coming from the database\" );\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "column": "52",
                    "severity": "warning",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "59",
                    "severity": "warning",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "38",
                    "column": "52",
                    "severity": "warning",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "60",
                    "severity": "warning",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "49",
                    "column": "93",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/30/EntityValueSerializer.java\nindex d0e18d42ac5..3571257e7b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/30/EntityValueSerializer.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.cassandra;\n \n \n@@ -29,25 +30,23 @@ import static org.apache.usergrid.utils.ConversionUtils.bytebuffer;\n public class EntityValueSerializer extends AbstractSerializer<Object> {\n \n     @Override\n-    public ByteBuffer toByteBuffer( Object obj ) {\n+    public ByteBuffer toByteBuffer(Object obj) {\n         ByteBuffer bytes = null;\n-        if ( obj instanceof List ) {\n-            bytes = DynamicComposite.toByteBuffer( ( List<?> ) obj );\n-        }\n-        else if ( obj instanceof Object[] ) {\n-            bytes = DynamicComposite.toByteBuffer( ( Object[] ) obj );\n-        }\n-        else {\n-            bytes = bytebuffer( obj );\n+        if (obj instanceof List) {\n+            bytes = DynamicComposite.toByteBuffer((List<?>) obj);\n+        } else if (obj instanceof Object[]) {\n+            bytes = DynamicComposite.toByteBuffer((Object[]) obj);\n+        } else {\n+            bytes = bytebuffer(obj);\n         }\n         return bytes;\n     }\n \n \n     @Override\n-    public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n+    public Object fromByteBuffer(ByteBuffer byteBuffer) {\n         throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n+            \"The entity value serializer can only be used for data going to the database, \" +\n+                \"and not data coming from the database\");\n     }\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/30/EntityValueSerializer.java\nindex d0e18d42ac5..97b666c6adc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/30/EntityValueSerializer.java\n@@ -47,7 +47,6 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n     @Override\n     public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n         throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n+                \"The entity value serializer can only be used for data going to the database, \" + \"and not data coming from the database\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/30/EntityValueSerializer.java\nindex d0e18d42ac5..a607aa5d697 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/30/EntityValueSerializer.java\n@@ -19,7 +19,6 @@ package org.apache.usergrid.persistence.cassandra;\n \n import java.nio.ByteBuffer;\n import java.util.List;\n-\n import me.prettyprint.cassandra.serializers.AbstractSerializer;\n import me.prettyprint.hector.api.beans.DynamicComposite;\n \n@@ -46,8 +45,6 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n \n     @Override\n     public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n-        throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n+        throw new IllegalStateException( \"The entity value serializer can only be used for data going to the database, \" + \"and not data coming from the database\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "50",
                    "column": "97",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/30/EntityValueSerializer.java\nindex d0e18d42ac5..eea0de23df5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/30/EntityValueSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/30/EntityValueSerializer.java\n@@ -47,7 +47,7 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n     @Override\n     public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n         throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n+                \"The entity value serializer can only be used for data going to the database, \"\n+                        + \"and not data coming from the database\" );\n     }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
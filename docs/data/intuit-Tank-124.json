{
    "project_name": "intuit-Tank",
    "error_id": "124",
    "information": {
        "errors": [
            {
                "line": "120",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 143).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            }\n        }\n        details = map.entrySet().stream().map(entry -> new UserDetail(entry.getKey(), entry.getValue())).sorted().collect(Collectors.toList());\n        userDetails = details;\n        detailMap.put(TimeUtil.normalizeToPeriod(15, new Date()), details);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/124/CloudVmStatusContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/124/CloudVmStatusContainer.java\nindex 7e7042c0866..916ae7b5d27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/124/CloudVmStatusContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/124/CloudVmStatusContainer.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.api.model.v1.cloud;\n \n /*\n@@ -39,182 +40,178 @@ import com.intuit.tank.vm.settings.TimeUtil;\n \n /**\n  * BrokerStatus\n- * \n+ *\n  * @author dangleton\n- * \n  */\n @XmlRootElement(name = \"cloudVmContainer\", namespace = Namespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n @XmlType(name = \"CloudVmStatusContainer\", namespace = Namespace.NAMESPACE_V1, propOrder = {\n-        \"statuses\",\n-        \"status\",\n-        \"startTime\",\n-        \"endTime\",\n-        \"reportTime\",\n-        \"jobId\",\n-        \"userDetails\"\n+  \"statuses\",\n+  \"status\",\n+  \"startTime\",\n+  \"endTime\",\n+  \"reportTime\",\n+  \"jobId\",\n+  \"userDetails\"\n })\n public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmStatusContainer> {\n \n-    private static final long serialVersionUID = 1L;\n+  private static final long serialVersionUID = 1L;\n \n-    @XmlElementWrapper(name = \"statuses\", namespace = Namespace.NAMESPACE_V1)\n-    @XmlElement(name = \"status\", namespace = Namespace.NAMESPACE_V1, required = true, nillable = false)\n-    private Set<CloudVmStatus> statuses = new HashSet<CloudVmStatus>();\n+  @XmlElementWrapper(name = \"statuses\", namespace = Namespace.NAMESPACE_V1)\n+  @XmlElement(name = \"status\", namespace = Namespace.NAMESPACE_V1, required = true, nillable = false)\n+  private Set<CloudVmStatus> statuses = new HashSet<CloudVmStatus>();\n \n-    @XmlElement(name = \"status\", namespace = Namespace.NAMESPACE_V1, required = false, nillable = false)\n-    private JobQueueStatus status = JobQueueStatus.Created;\n+  @XmlElement(name = \"status\", namespace = Namespace.NAMESPACE_V1, required = false, nillable = false)\n+  private JobQueueStatus status = JobQueueStatus.Created;\n \n-    @XmlElement(name = \"startTime\", namespace = Namespace.NAMESPACE_V1, required = true, nillable = false)\n-    private Date startTime = new Date();\n+  @XmlElement(name = \"startTime\", namespace = Namespace.NAMESPACE_V1, required = true, nillable = false)\n+  private Date startTime = new Date();\n \n-    @XmlElement(name = \"endTime\", namespace = Namespace.NAMESPACE_V1, required = false, nillable = false)\n-    private Date endTime;\n+  @XmlElement(name = \"endTime\", namespace = Namespace.NAMESPACE_V1, required = false, nillable = false)\n+  private Date endTime;\n \n-    @XmlElement(name = \"reportTime\", namespace = Namespace.NAMESPACE_V1, required = true, nillable = false)\n-    private Date reportTime = new Date();\n+  @XmlElement(name = \"reportTime\", namespace = Namespace.NAMESPACE_V1, required = true, nillable = false)\n+  private Date reportTime = new Date();\n \n-    @XmlElement(name = \"jobId\", namespace = Namespace.NAMESPACE_V1, required = false, nillable = false)\n-    private String jobId;\n+  @XmlElement(name = \"jobId\", namespace = Namespace.NAMESPACE_V1, required = false, nillable = false)\n+  private String jobId;\n \n-    @XmlElementWrapper(name = \"userDetails\", namespace = Namespace.NAMESPACE_V1)\n-    @XmlElement(name = \"userDetail\", namespace = Namespace.NAMESPACE_V1, required = true, nillable = false)\n-    private List<UserDetail> userDetails = new ArrayList<UserDetail>();\n+  @XmlElementWrapper(name = \"userDetails\", namespace = Namespace.NAMESPACE_V1)\n+  @XmlElement(name = \"userDetail\", namespace = Namespace.NAMESPACE_V1, required = true, nillable = false)\n+  private List<UserDetail> userDetails = new ArrayList<UserDetail>();\n \n-    @XmlTransient\n-    private Map<Date, List<UserDetail>> detailMap = new HashMap<Date, List<UserDetail>>();\n+  @XmlTransient\n+  private Map<Date, List<UserDetail>> detailMap = new HashMap<Date, List<UserDetail>>();\n \n-    /**\n-     * @FrameworkUseOnly\n-     */\n-    public CloudVmStatusContainer() {\n-    }\n+  /**\n+   * @FrameworkUseOnly\n+   */\n+  public CloudVmStatusContainer() {\n+  }\n \n-    /**\n-     * @param statuses\n-     */\n-    public CloudVmStatusContainer(Set<CloudVmStatus> statuses) {\n-        this.statuses = statuses;\n-    }\n+  /**\n+   * @param statuses\n+   */\n+  public CloudVmStatusContainer(Set<CloudVmStatus> statuses) {\n+    this.statuses = statuses;\n+  }\n \n-    public JobQueueStatus getStatus() {\n-        return status;\n-    }\n+  public JobQueueStatus getStatus() {\n+    return status;\n+  }\n \n-    public void setStatus(JobQueueStatus status) {\n-        this.status = status;\n-    }\n+  public void setStatus(JobQueueStatus status) {\n+    this.status = status;\n+  }\n \n-    public void calculateUserDetails() {\n-        List<UserDetail> details;\n-        Map<String, Integer> map = new HashMap<String, Integer>();\n-        for (CloudVmStatus status : statuses) {\n-            for (UserDetail detail : status.getUserDetails()) {\n-                Integer val = map.get(detail.getScript());\n-                if (val == null) {\n-                    val = 0;\n-                }\n-                map.put(detail.getScript(), val + detail.getUsers());\n-            }\n+  public void calculateUserDetails() {\n+    List<UserDetail> details;\n+    Map<String, Integer> map = new HashMap<String, Integer>();\n+    for (CloudVmStatus status : statuses) {\n+      for (UserDetail detail : status.getUserDetails()) {\n+        Integer val = map.get(detail.getScript());\n+        if (val == null) {\n+          val = 0;\n         }\n-        details = map.entrySet().stream().map(entry -> new UserDetail(entry.getKey(), entry.getValue())).sorted().collect(Collectors.toList());\n-        userDetails = details;\n-        detailMap.put(TimeUtil.normalizeToPeriod(15, new Date()), details);\n-    }\n-\n-    /**\n-     * @return the detailMap\n-     */\n-    public Map<Date, List<UserDetail>> getDetailMap() {\n-        return detailMap;\n-    }\n-\n-    /**\n-     * @return the statuses\n-     */\n-    public Set<CloudVmStatus> getStatuses() {\n-        return statuses;\n-    }\n-\n-    /**\n-     * @return the startTime\n-     */\n-    public Date getStartTime() {\n-        return startTime;\n-    }\n-\n-    /**\n-     * @param startTime\n-     *            the startTime to set\n-     */\n-    public void setStartTime(Date startTime) {\n-        this.startTime = startTime;\n-    }\n-\n-    /**\n-     * @return the endTime\n-     */\n-    public Date getEndTime() {\n-        return endTime;\n-    }\n-\n-    /**\n-     * @return the userDetails\n-     */\n-    public List<UserDetail> getUserDetails() {\n-        return userDetails;\n-    }\n-\n-    /**\n-     * @param endTime\n-     *            the endTime to set\n-     */\n-    public void setEndTime(Date endTime) {\n-        this.endTime = endTime;\n-    }\n-\n-    /**\n-     * @return the reportTime\n-     */\n-    public Date getReportTime() {\n-        return reportTime;\n-    }\n-\n-    /**\n-     * @param reportTime\n-     *            the reportTime to set\n-     */\n-    public void setReportTime(Date reportTime) {\n-        this.reportTime = reportTime;\n-    }\n-\n-    /**\n-     * @return the jobId\n-     */\n-    public String getJobId() {\n-        return jobId;\n-    }\n-\n-    /**\n-     * @param jobId\n-     *            the jobId to set\n-     */\n-    public void setJobId(String jobId) {\n-        this.jobId = jobId;\n-    }\n-\n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    public int compareTo(CloudVmStatusContainer o) {\n-        if (this.startTime != null) {\n-            return this.startTime.compareTo(o.startTime);\n-        } else if (o.startTime != null) {\n-            return -1;\n-        }\n-        // both null\n-        return 0;\n-    }\n+        map.put(detail.getScript(), val + detail.getUsers());\n+      }\n+    }\n+    details = map.entrySet().stream().map(entry -> new UserDetail(entry.getKey(), entry.getValue())).sorted()\n+      .collect(Collectors.toList());\n+    userDetails = details;\n+    detailMap.put(TimeUtil.normalizeToPeriod(15, new Date()), details);\n+  }\n+\n+  /**\n+   * @return the detailMap\n+   */\n+  public Map<Date, List<UserDetail>> getDetailMap() {\n+    return detailMap;\n+  }\n+\n+  /**\n+   * @return the statuses\n+   */\n+  public Set<CloudVmStatus> getStatuses() {\n+    return statuses;\n+  }\n+\n+  /**\n+   * @return the startTime\n+   */\n+  public Date getStartTime() {\n+    return startTime;\n+  }\n+\n+  /**\n+   * @param startTime the startTime to set\n+   */\n+  public void setStartTime(Date startTime) {\n+    this.startTime = startTime;\n+  }\n+\n+  /**\n+   * @return the endTime\n+   */\n+  public Date getEndTime() {\n+    return endTime;\n+  }\n+\n+  /**\n+   * @return the userDetails\n+   */\n+  public List<UserDetail> getUserDetails() {\n+    return userDetails;\n+  }\n+\n+  /**\n+   * @param endTime the endTime to set\n+   */\n+  public void setEndTime(Date endTime) {\n+    this.endTime = endTime;\n+  }\n+\n+  /**\n+   * @return the reportTime\n+   */\n+  public Date getReportTime() {\n+    return reportTime;\n+  }\n+\n+  /**\n+   * @param reportTime the reportTime to set\n+   */\n+  public void setReportTime(Date reportTime) {\n+    this.reportTime = reportTime;\n+  }\n+\n+  /**\n+   * @return the jobId\n+   */\n+  public String getJobId() {\n+    return jobId;\n+  }\n+\n+  /**\n+   * @param jobId the jobId to set\n+   */\n+  public void setJobId(String jobId) {\n+    this.jobId = jobId;\n+  }\n+\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  public int compareTo(CloudVmStatusContainer o) {\n+    if (this.startTime != null) {\n+      return this.startTime.compareTo(o.startTime);\n+    } else if (o.startTime != null) {\n+      return -1;\n+    }\n+    // both null\n+    return 0;\n+  }\n \n }\n",
            "diff_size": 156
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/124/CloudVmStatusContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/124/CloudVmStatusContainer.java\nindex 7e7042c0866..973a3b89fad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/124/CloudVmStatusContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/124/CloudVmStatusContainer.java\n@@ -217,4 +217,4 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n         return 0;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/124/CloudVmStatusContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/124/CloudVmStatusContainer.java\nindex 7e7042c0866..0bde5541a26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/124/CloudVmStatusContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/124/CloudVmStatusContainer.java\n@@ -16,6 +16,8 @@ package com.intuit.tank.api.model.v1.cloud;\n  * #L%\n  */\n \n+\n+\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Date;\n@@ -25,7 +27,6 @@ import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import java.util.stream.Collectors;\n-\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlElement;\n@@ -33,7 +34,6 @@ import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n-\n import com.intuit.tank.vm.api.enumerated.JobQueueStatus;\n import com.intuit.tank.vm.settings.TimeUtil;\n \n@@ -43,18 +43,12 @@ import com.intuit.tank.vm.settings.TimeUtil;\n  * @author dangleton\n  * \n  */\n+\n @XmlRootElement(name = \"cloudVmContainer\", namespace = Namespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n-@XmlType(name = \"CloudVmStatusContainer\", namespace = Namespace.NAMESPACE_V1, propOrder = {\n-        \"statuses\",\n-        \"status\",\n-        \"startTime\",\n-        \"endTime\",\n-        \"reportTime\",\n-        \"jobId\",\n-        \"userDetails\"\n-})\n-public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmStatusContainer> {\n+@XmlType(name = \"CloudVmStatusContainer\", namespace = Namespace.NAMESPACE_V1, propOrder = { \"statuses\", \"status\", \"startTime\", \"endTime\", \"reportTime\", \"jobId\", \"userDetails\" })\n+public class CloudVmStatusContainer implements Serializable,\n+    Comparable<CloudVmStatusContainer> {\n \n     private static final long serialVersionUID = 1L;\n \n@@ -87,24 +81,30 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n     /**\n      * @FrameworkUseOnly\n      */\n+\n     public CloudVmStatusContainer() {\n     }\n \n     /**\n      * @param statuses\n      */\n+\n+\n     public CloudVmStatusContainer(Set<CloudVmStatus> statuses) {\n         this.statuses = statuses;\n     }\n \n+\n     public JobQueueStatus getStatus() {\n         return status;\n     }\n \n+\n     public void setStatus(JobQueueStatus status) {\n         this.status = status;\n     }\n \n+\n     public void calculateUserDetails() {\n         List<UserDetail> details;\n         Map<String, Integer> map = new HashMap<String, Integer>();\n@@ -117,14 +117,17 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n                 map.put(detail.getScript(), val + detail.getUsers());\n             }\n         }\n-        details = map.entrySet().stream().map(entry -> new UserDetail(entry.getKey(), entry.getValue())).sorted().collect(Collectors.toList());\n+        details = map.entrySet().stream().map(entry-> new UserDetail(entry.getKey(), entry.getValue())).sorted().collect(Collectors.toList());\n         userDetails = details;\n-        detailMap.put(TimeUtil.normalizeToPeriod(15, new Date()), details);\n+        detailMap.put(TimeUtil.normalizeToPeriod(15, new Date()),\n+details);\n     }\n \n     /**\n      * @return the detailMap\n      */\n+\n+\n     public Map<Date, List<UserDetail>> getDetailMap() {\n         return detailMap;\n     }\n@@ -132,6 +135,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n     /**\n      * @return the statuses\n      */\n+\n+\n     public Set<CloudVmStatus> getStatuses() {\n         return statuses;\n     }\n@@ -139,6 +144,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n     /**\n      * @return the startTime\n      */\n+\n+\n     public Date getStartTime() {\n         return startTime;\n     }\n@@ -147,6 +154,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n      * @param startTime\n      *            the startTime to set\n      */\n+\n+\n     public void setStartTime(Date startTime) {\n         this.startTime = startTime;\n     }\n@@ -154,6 +163,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n     /**\n      * @return the endTime\n      */\n+\n+\n     public Date getEndTime() {\n         return endTime;\n     }\n@@ -161,6 +172,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n     /**\n      * @return the userDetails\n      */\n+\n+\n     public List<UserDetail> getUserDetails() {\n         return userDetails;\n     }\n@@ -169,6 +182,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n      * @param endTime\n      *            the endTime to set\n      */\n+\n+\n     public void setEndTime(Date endTime) {\n         this.endTime = endTime;\n     }\n@@ -176,6 +191,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n     /**\n      * @return the reportTime\n      */\n+\n+\n     public Date getReportTime() {\n         return reportTime;\n     }\n@@ -184,6 +201,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n      * @param reportTime\n      *            the reportTime to set\n      */\n+\n+\n     public void setReportTime(Date reportTime) {\n         this.reportTime = reportTime;\n     }\n@@ -191,6 +210,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n     /**\n      * @return the jobId\n      */\n+\n+\n     public String getJobId() {\n         return jobId;\n     }\n@@ -199,6 +220,8 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n      * @param jobId\n      *            the jobId to set\n      */\n+\n+\n     public void setJobId(String jobId) {\n         this.jobId = jobId;\n     }\n@@ -206,6 +229,7 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n     /**\n      * @inheritDoc\n      */\n+\n     @Override\n     public int compareTo(CloudVmStatusContainer o) {\n         if (this.startTime != null) {\n@@ -217,4 +241,4 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n         return 0;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 48
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "121",
                    "column": "47",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/124/CloudVmStatusContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/124/CloudVmStatusContainer.java\nindex 7e7042c0866..1b1ea61972d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/124/CloudVmStatusContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/124/CloudVmStatusContainer.java\n@@ -117,7 +117,9 @@ public class CloudVmStatusContainer implements Serializable, Comparable<CloudVmS\n                 map.put(detail.getScript(), val + detail.getUsers());\n             }\n         }\n-        details = map.entrySet().stream().map(entry -> new UserDetail(entry.getKey(), entry.getValue())).sorted().collect(Collectors.toList());\n+        details = map .entrySet().stream().map(\n+        entry -> new UserDetail(entry.getKey(),entry.getValue())).sorted(\n+        ) .collect(Collectors.toList());\n         userDetails = details;\n         detailMap.put(TimeUtil.normalizeToPeriod(15, new Date()), details);\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1319",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "90",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "118",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "122",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "158",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1319/CatchupAddressProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1319/CatchupAddressProvider.java\nindex 9be2d15f8af..c9761c96a45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1319/CatchupAddressProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1319/CatchupAddressProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup;\n \n import org.neo4j.causalclustering.core.consensus.LeaderLocator;\n@@ -33,133 +34,131 @@ import org.neo4j.helpers.AdvertisedSocketAddress;\n  */\n public interface CatchupAddressProvider\n {\n-    /**\n-     * @return The address to the primary location where up to date requests are required. For a cluster aware provider the obvious choice would be the\n-     * leader address.\n-     * @throws CatchupAddressResolutionException if the provider was unable to find an address to this location.\n-     */\n-    AdvertisedSocketAddress primary() throws CatchupAddressResolutionException;\n-\n-    /**\n-     * @return The address to a secondary location that are not required to be up to date. If there are multiple secondary locations it is recommended to\n-     * do some simple load balancing for returned addresses. This is to avoid re-sending failed requests to the same instance immediately.\n-     * @throws CatchupAddressResolutionException if the provider was unable to find an address to this location.\n-     */\n-    AdvertisedSocketAddress secondary() throws CatchupAddressResolutionException;\n-\n-    static CatchupAddressProvider fromSingleAddress( AdvertisedSocketAddress advertisedSocketAddress )\n+  /**\n+   * @return The address to the primary location where up to date requests are required. For a cluster aware provider the obvious choice would be the\n+   * leader address.\n+   * @throws CatchupAddressResolutionException if the provider was unable to find an address to this location.\n+   */\n+  AdvertisedSocketAddress primary() throws CatchupAddressResolutionException;\n+\n+  /**\n+   * @return The address to a secondary location that are not required to be up to date. If there are multiple secondary locations it is recommended to\n+   * do some simple load balancing for returned addresses. This is to avoid re-sending failed requests to the same instance immediately.\n+   * @throws CatchupAddressResolutionException if the provider was unable to find an address to this location.\n+   */\n+  AdvertisedSocketAddress secondary() throws CatchupAddressResolutionException;\n+\n+  static CatchupAddressProvider fromSingleAddress(AdvertisedSocketAddress advertisedSocketAddress)\n+  {\n+    return new SingleAddressProvider(advertisedSocketAddress);\n+  }\n+\n+  class SingleAddressProvider implements CatchupAddressProvider\n+  {\n+    private final AdvertisedSocketAddress socketAddress;\n+\n+    public SingleAddressProvider(AdvertisedSocketAddress socketAddress)\n+    {\n+      this.socketAddress = socketAddress;\n+    }\n+\n+    @Override\n+    public AdvertisedSocketAddress primary()\n+    {\n+      return socketAddress;\n+    }\n+\n+    @Override\n+    public AdvertisedSocketAddress secondary()\n+    {\n+      return socketAddress;\n+    }\n+  }\n+\n+  /**\n+   * Uses given strategy for both primary and secondary address.\n+   */\n+  class UpstreamStrategyBoundAddressProvider implements CatchupAddressProvider\n+  {\n+    private final UpstreamStrategyAddressSupplier upstreamStrategyAddressSupplier;\n+\n+    public UpstreamStrategyBoundAddressProvider(TopologyService topologyService, UpstreamDatabaseStrategySelector strategySelector)\n+    {\n+      upstreamStrategyAddressSupplier = new UpstreamStrategyAddressSupplier(strategySelector, topologyService);\n+    }\n+\n+    @Override\n+    public AdvertisedSocketAddress primary() throws CatchupAddressResolutionException\n+    {\n+      return upstreamStrategyAddressSupplier.get();\n+    }\n+\n+    @Override\n+    public AdvertisedSocketAddress secondary() throws CatchupAddressResolutionException\n     {\n-        return new SingleAddressProvider( advertisedSocketAddress );\n+      return upstreamStrategyAddressSupplier.get();\n+    }\n+  }\n+\n+  /**\n+   * Uses leader address as primary and given upstream strategy as secondary address.\n+   */\n+  class PrioritisingUpstreamStrategyBasedAddressProvider implements CatchupAddressProvider\n+  {\n+    private final LeaderLocator leaderLocator;\n+    private final TopologyService topologyService;\n+    private UpstreamStrategyAddressSupplier secondaryUpstreamStrategyAddressSupplier;\n+\n+    public PrioritisingUpstreamStrategyBasedAddressProvider(LeaderLocator leaderLocator, TopologyService topologyService,\n+                                                            UpstreamDatabaseStrategySelector strategySelector)\n+    {\n+      this.leaderLocator = leaderLocator;\n+      this.topologyService = topologyService;\n+      this.secondaryUpstreamStrategyAddressSupplier = new UpstreamStrategyAddressSupplier(strategySelector, topologyService);\n     }\n \n-    class SingleAddressProvider implements CatchupAddressProvider\n+    @Override\n+    public AdvertisedSocketAddress primary() throws CatchupAddressResolutionException\n     {\n-        private final AdvertisedSocketAddress socketAddress;\n-\n-        public SingleAddressProvider( AdvertisedSocketAddress socketAddress )\n-        {\n-            this.socketAddress = socketAddress;\n-        }\n-\n-        @Override\n-        public AdvertisedSocketAddress primary()\n-        {\n-            return socketAddress;\n-        }\n-\n-        @Override\n-        public AdvertisedSocketAddress secondary()\n-        {\n-            return socketAddress;\n-        }\n+      try\n+      {\n+        MemberId leadMember = leaderLocator.getLeader();\n+        return topologyService.findCatchupAddress(leadMember).orElseThrow(() -> new CatchupAddressResolutionException(leadMember));\n+      } catch (NoLeaderFoundException e)\n+      {\n+        throw new CatchupAddressResolutionException(e);\n+      }\n     }\n \n-    /**\n-     * Uses given strategy for both primary and secondary address.\n-     */\n-    class UpstreamStrategyBoundAddressProvider implements CatchupAddressProvider\n+    @Override\n+    public AdvertisedSocketAddress secondary() throws CatchupAddressResolutionException\n     {\n-        private final UpstreamStrategyAddressSupplier upstreamStrategyAddressSupplier;\n-\n-        public UpstreamStrategyBoundAddressProvider( TopologyService topologyService, UpstreamDatabaseStrategySelector strategySelector )\n-        {\n-            upstreamStrategyAddressSupplier = new UpstreamStrategyAddressSupplier( strategySelector, topologyService );\n-        }\n-\n-        @Override\n-        public AdvertisedSocketAddress primary() throws CatchupAddressResolutionException\n-        {\n-            return upstreamStrategyAddressSupplier.get();\n-        }\n-\n-        @Override\n-        public AdvertisedSocketAddress secondary() throws CatchupAddressResolutionException\n-        {\n-            return upstreamStrategyAddressSupplier.get();\n-        }\n+      return secondaryUpstreamStrategyAddressSupplier.get();\n     }\n+  }\n+\n+  class UpstreamStrategyAddressSupplier implements ThrowingSupplier<AdvertisedSocketAddress, CatchupAddressResolutionException>\n+  {\n+    private final UpstreamDatabaseStrategySelector strategySelector;\n+    private final TopologyService topologyService;\n \n-    /**\n-     * Uses leader address as primary and given upstream strategy as secondary address.\n-     */\n-    class PrioritisingUpstreamStrategyBasedAddressProvider implements CatchupAddressProvider\n+    private UpstreamStrategyAddressSupplier(UpstreamDatabaseStrategySelector strategySelector, TopologyService topologyService)\n     {\n-        private final LeaderLocator leaderLocator;\n-        private final TopologyService topologyService;\n-        private UpstreamStrategyAddressSupplier secondaryUpstreamStrategyAddressSupplier;\n-\n-        public PrioritisingUpstreamStrategyBasedAddressProvider( LeaderLocator leaderLocator, TopologyService topologyService,\n-                UpstreamDatabaseStrategySelector strategySelector )\n-        {\n-            this.leaderLocator = leaderLocator;\n-            this.topologyService = topologyService;\n-            this.secondaryUpstreamStrategyAddressSupplier = new UpstreamStrategyAddressSupplier( strategySelector, topologyService );\n-        }\n-\n-        @Override\n-        public AdvertisedSocketAddress primary() throws CatchupAddressResolutionException\n-        {\n-            try\n-            {\n-                MemberId leadMember = leaderLocator.getLeader();\n-                return topologyService.findCatchupAddress( leadMember ).orElseThrow( () -> new CatchupAddressResolutionException( leadMember ) );\n-            }\n-            catch ( NoLeaderFoundException e )\n-            {\n-                throw new CatchupAddressResolutionException( e );\n-            }\n-        }\n-\n-        @Override\n-        public AdvertisedSocketAddress secondary() throws CatchupAddressResolutionException\n-        {\n-            return secondaryUpstreamStrategyAddressSupplier.get();\n-        }\n+      this.strategySelector = strategySelector;\n+      this.topologyService = topologyService;\n     }\n \n-    class UpstreamStrategyAddressSupplier implements ThrowingSupplier<AdvertisedSocketAddress,CatchupAddressResolutionException>\n+    @Override\n+    public AdvertisedSocketAddress get() throws CatchupAddressResolutionException\n     {\n-        private final UpstreamDatabaseStrategySelector strategySelector;\n-        private final TopologyService topologyService;\n-\n-        private UpstreamStrategyAddressSupplier( UpstreamDatabaseStrategySelector strategySelector, TopologyService topologyService )\n-        {\n-            this.strategySelector = strategySelector;\n-            this.topologyService = topologyService;\n-        }\n-\n-        @Override\n-        public AdvertisedSocketAddress get() throws CatchupAddressResolutionException\n-        {\n-            try\n-            {\n-                MemberId upstreamMember = strategySelector.bestUpstreamDatabase();\n-                return topologyService.findCatchupAddress( upstreamMember ).orElseThrow( () -> new CatchupAddressResolutionException( upstreamMember ) );\n-            }\n-            catch ( UpstreamDatabaseSelectionException e )\n-            {\n-                throw new CatchupAddressResolutionException( e );\n-            }\n-        }\n+      try\n+      {\n+        MemberId upstreamMember = strategySelector.bestUpstreamDatabase();\n+        return topologyService.findCatchupAddress(upstreamMember).orElseThrow(() -> new CatchupAddressResolutionException(upstreamMember));\n+      } catch (UpstreamDatabaseSelectionException e)\n+      {\n+        throw new CatchupAddressResolutionException(e);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 189
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1319/CatchupAddressProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1319/CatchupAddressProvider.java\nindex 9be2d15f8af..19ce480aaf7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1319/CatchupAddressProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1319/CatchupAddressProvider.java\n@@ -162,4 +162,4 @@ public interface CatchupAddressProvider\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
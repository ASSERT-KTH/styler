{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1284",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1284/FullScanNonUniqueIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1284/FullScanNonUniqueIndexSampler.java\nindex 18c52f74524..6ccd217696d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1284/FullScanNonUniqueIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1284/FullScanNonUniqueIndexSampler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -34,50 +35,49 @@ import org.neo4j.storageengine.api.schema.IndexSample;\n /**\n  * {@link NonUniqueIndexSampler} which performs a full scans of a {@link GBPTree} in {@link #result()}.\n  *\n- * @param <KEY> type of keys in tree.\n+ * @param <KEY>   type of keys in tree.\n  * @param <VALUE> type of values in tree.\n  */\n class FullScanNonUniqueIndexSampler<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-        extends NonUniqueIndexSampler.Adapter\n+    extends NonUniqueIndexSampler.Adapter\n {\n-    private final GBPTree<KEY,VALUE> gbpTree;\n-    private final Layout<KEY,VALUE> layout;\n-    private final IndexSamplingConfig samplingConfig;\n+  private final GBPTree<KEY, VALUE> gbpTree;\n+  private final Layout<KEY, VALUE> layout;\n+  private final IndexSamplingConfig samplingConfig;\n \n-    FullScanNonUniqueIndexSampler( GBPTree<KEY,VALUE> gbpTree, Layout<KEY,VALUE> layout,\n-            IndexSamplingConfig samplingConfig )\n-    {\n-        this.gbpTree = gbpTree;\n-        this.layout = layout;\n-        this.samplingConfig = samplingConfig;\n-    }\n+  FullScanNonUniqueIndexSampler(GBPTree<KEY, VALUE> gbpTree, Layout<KEY, VALUE> layout,\n+                                IndexSamplingConfig samplingConfig)\n+  {\n+    this.gbpTree = gbpTree;\n+    this.layout = layout;\n+    this.samplingConfig = samplingConfig;\n+  }\n \n-    @Override\n-    public IndexSample result()\n+  @Override\n+  public IndexSample result()\n+  {\n+    KEY lowest = layout.newKey();\n+    lowest.initAsLowest();\n+    KEY highest = layout.newKey();\n+    highest.initAsHighest();\n+    try (RawCursor<Hit<KEY, VALUE>, IOException> seek = gbpTree.seek(lowest, highest))\n     {\n-        KEY lowest = layout.newKey();\n-        lowest.initAsLowest();\n-        KEY highest = layout.newKey();\n-        highest.initAsHighest();\n-        try ( RawCursor<Hit<KEY,VALUE>,IOException> seek = gbpTree.seek( lowest, highest ) )\n-        {\n-            NonUniqueIndexSampler sampler = new DefaultNonUniqueIndexSampler( samplingConfig.sampleSizeLimit() );\n-            while ( seek.next() )\n-            {\n-                Hit<KEY,VALUE> hit = seek.get();\n-                sampler.include( hit.key().propertiesAsString() );\n-            }\n-            return sampler.result();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n-    }\n-\n-    @Override\n-    public IndexSample result( int numDocs )\n+      NonUniqueIndexSampler sampler = new DefaultNonUniqueIndexSampler(samplingConfig.sampleSizeLimit());\n+      while (seek.next())\n+      {\n+        Hit<KEY, VALUE> hit = seek.get();\n+        sampler.include(hit.key().propertiesAsString());\n+      }\n+      return sampler.result();\n+    } catch (IOException e)\n     {\n-        throw new UnsupportedOperationException();\n+      throw new UncheckedIOException(e);\n     }\n+  }\n+\n+  @Override\n+  public IndexSample result(int numDocs)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1284/FullScanNonUniqueIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1284/FullScanNonUniqueIndexSampler.java\nindex 18c52f74524..54351e13f4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1284/FullScanNonUniqueIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1284/FullScanNonUniqueIndexSampler.java\n@@ -37,8 +37,7 @@ import org.neo4j.storageengine.api.schema.IndexSample;\n  * @param <KEY> type of keys in tree.\n  * @param <VALUE> type of values in tree.\n  */\n-class FullScanNonUniqueIndexSampler<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-        extends NonUniqueIndexSampler.Adapter\n+class FullScanNonUniqueIndexSampler<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> extends NonUniqueIndexSampler.Adapter\n {\n     private final GBPTree<KEY,VALUE> gbpTree;\n     private final Layout<KEY,VALUE> layout;\n@@ -67,7 +66,8 @@ class FullScanNonUniqueIndexSampler<KEY extends NativeSchemaKey<KEY>, VALUE exte\n                 Hit<KEY,VALUE> hit = seek.get();\n                 sampler.include( hit.key().propertiesAsString() );\n             }\n-            return sampler.result();\n+\n+return sampler.result();\n         }\n         catch ( IOException e )\n         {\n@@ -80,4 +80,4 @@ class FullScanNonUniqueIndexSampler<KEY extends NativeSchemaKey<KEY>, VALUE exte\n     {\n         throw new UnsupportedOperationException();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
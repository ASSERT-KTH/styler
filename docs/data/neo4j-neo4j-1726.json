{
    "project_name": "neo4j-neo4j",
    "error_id": "1726",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1726/RelationshipGroupRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1726/RelationshipGroupRecord.java\nindex 22d7784165d..9f8eba7ccd0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1726/RelationshipGroupRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1726/RelationshipGroupRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import java.util.Objects;\n@@ -26,7 +27,7 @@ import static org.neo4j.memory.HeapEstimator.shallowSizeOfInstance;\n \n public class RelationshipGroupRecord extends AbstractBaseRecord\n {\n-    public static final long SHALLOW_SIZE = shallowSizeOfInstance( RelationshipGroupRecord.class );\n+    public static final long SHALLOW_SIZE = shallowSizeOfInstance(RelationshipGroupRecord.class);\n     private int type;\n     private long next;\n     private long firstOut;\n@@ -37,14 +38,14 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n     // Not stored, just kept in memory temporarily when loading the group chain\n     private long prev;\n \n-    public RelationshipGroupRecord( long id )\n+    public RelationshipGroupRecord(long id)\n     {\n-        super( id );\n+        super(id);\n     }\n \n-    public RelationshipGroupRecord( RelationshipGroupRecord other )\n+    public RelationshipGroupRecord(RelationshipGroupRecord other)\n     {\n-        super( other );\n+        super(other);\n         this.type = other.type;\n         this.next = other.next;\n         this.firstOut = other.firstOut;\n@@ -54,9 +55,9 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n         this.prev = other.prev;\n     }\n \n-    public RelationshipGroupRecord initialize( boolean inUse, int type, long firstOut, long firstIn, long firstLoop, long owningNode, long next )\n+    public RelationshipGroupRecord initialize(boolean inUse, int type, long firstOut, long firstIn, long firstLoop, long owningNode, long next)\n     {\n-        super.initialize( inUse );\n+        super.initialize(inUse);\n         this.type = type;\n         this.firstOut = firstOut;\n         this.firstIn = firstIn;\n@@ -70,8 +71,8 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n     @Override\n     public void clear()\n     {\n-        initialize( false, NULL_REFERENCE.intValue(), NULL_REFERENCE.intValue(), NULL_REFERENCE.intValue(),\n-                NULL_REFERENCE.intValue(), NULL_REFERENCE.intValue(), NULL_REFERENCE.intValue() );\n+        initialize(false, NULL_REFERENCE.intValue(), NULL_REFERENCE.intValue(), NULL_REFERENCE.intValue(),\n+          NULL_REFERENCE.intValue(), NULL_REFERENCE.intValue(), NULL_REFERENCE.intValue());\n         prev = NULL_REFERENCE.intValue();\n     }\n \n@@ -80,7 +81,7 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n         return type;\n     }\n \n-    public void setType( int type )\n+    public void setType(int type)\n     {\n         this.type = type;\n     }\n@@ -90,7 +91,7 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n         return firstOut;\n     }\n \n-    public void setFirstOut( long firstOut )\n+    public void setFirstOut(long firstOut)\n     {\n         this.firstOut = firstOut;\n     }\n@@ -100,7 +101,7 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n         return firstIn;\n     }\n \n-    public void setFirstIn( long firstIn )\n+    public void setFirstIn(long firstIn)\n     {\n         this.firstIn = firstIn;\n     }\n@@ -110,7 +111,7 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n         return firstLoop;\n     }\n \n-    public void setFirstLoop( long firstLoop )\n+    public void setFirstLoop(long firstLoop)\n     {\n         this.firstLoop = firstLoop;\n     }\n@@ -120,7 +121,7 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n         return next;\n     }\n \n-    public void setNext( long next )\n+    public void setNext(long next)\n     {\n         this.next = next;\n     }\n@@ -129,9 +130,10 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n      * The previous pointer, i.e. previous group in this chain of groups isn't\n      * persisted in the store, but only set during reading of the group\n      * chain.\n+     *\n      * @param prev the id of the previous group in this chain.\n      */\n-    public void setPrev( long prev )\n+    public void setPrev(long prev)\n     {\n         this.prev = prev;\n     }\n@@ -140,6 +142,7 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n      * The previous pointer, i.e. previous group in this chain of groups isn't\n      * persisted in the store, but only set during reading of the group\n      * chain.\n+     *\n      * @return the id of the previous group in this chain.\n      */\n     public long getPrev()\n@@ -152,7 +155,7 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n         return owningNode;\n     }\n \n-    public void setOwningNode( long owningNode )\n+    public void setOwningNode(long owningNode)\n     {\n         this.owningNode = owningNode;\n     }\n@@ -161,47 +164,47 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n     public String toString()\n     {\n         return \"RelationshipGroup[\" + getId() +\n-               \",type=\" + type +\n-               \",out=\" + firstOut +\n-               \",in=\" + firstIn +\n-               \",loop=\" + firstLoop +\n-               \",prev=\" + prev +\n-               \",next=\" + next +\n-               \",used=\" + inUse() +\n-               \",owner=\" + getOwningNode() +\n-               secondaryUnitToString() + \"]\";\n+          \",type=\" + type +\n+          \",out=\" + firstOut +\n+          \",in=\" + firstIn +\n+          \",loop=\" + firstLoop +\n+          \",prev=\" + prev +\n+          \",next=\" + next +\n+          \",used=\" + inUse() +\n+          \",owner=\" + getOwningNode() +\n+          secondaryUnitToString() + \"]\";\n     }\n \n     @Override\n     public RelationshipGroupRecord copy()\n     {\n-        return new RelationshipGroupRecord( this );\n+        return new RelationshipGroupRecord(this);\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n-        if ( !super.equals( o ) )\n+        if (!super.equals(o))\n         {\n             return false;\n         }\n         RelationshipGroupRecord that = (RelationshipGroupRecord) o;\n         return type == that.type && next == that.next && firstOut == that.firstOut && firstIn == that.firstIn &&\n-                firstLoop == that.firstLoop && owningNode == that.owningNode;\n+          firstLoop == that.firstLoop && owningNode == that.owningNode;\n         // don't compare prev since it's not persisted\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( super.hashCode(), type, next, firstOut, firstIn, firstLoop, owningNode, prev );\n+        return Objects.hash(super.hashCode(), type, next, firstOut, firstIn, firstLoop, owningNode, prev);\n     }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1726/RelationshipGroupRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1726/RelationshipGroupRecord.java\nindex 22d7784165d..69715fabf31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1726/RelationshipGroupRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1726/RelationshipGroupRecord.java\n@@ -195,8 +195,7 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n         }\n         RelationshipGroupRecord that = (RelationshipGroupRecord) o;\n         return type == that.type && next == that.next && firstOut == that.firstOut && firstIn == that.firstIn &&\n-                firstLoop == that.firstLoop && owningNode == that.owningNode;\n-        // don't compare prev since it's not persisted\n+                firstLoop == that.firstLoop && owningNode == that.owningNode; // don't compare prev since it's not persisted\n     }\n \n     @Override\n@@ -204,4 +203,4 @@ public class RelationshipGroupRecord extends AbstractBaseRecord\n     {\n         return Objects.hash( super.hashCode(), type, next, firstOut, firstIn, firstLoop, owningNode, prev );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
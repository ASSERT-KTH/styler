{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1448",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1448/CacheTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1448/CacheTask.java\nindex b6fb5d69322..1fc27e10dfe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1448/CacheTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1448/CacheTask.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.cache;\n \n import org.neo4j.consistency.checking.full.ConsistencyCheckerTask;\n@@ -36,89 +37,89 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n  */\n public abstract class CacheTask extends ConsistencyCheckerTask\n {\n-    protected final Stage stage;\n-    protected final CacheAccess cacheAccess;\n+  protected final Stage stage;\n+  protected final CacheAccess cacheAccess;\n+\n+  public CacheTask(Stage stage, CacheAccess cacheAccess)\n+  {\n+    super(\"CacheTask-\" + stage, Statistics.NONE, 1);\n+    this.stage = stage;\n+    this.cacheAccess = cacheAccess;\n+  }\n \n-    public CacheTask( Stage stage, CacheAccess cacheAccess )\n+  @Override\n+  public void run()\n+  {\n+    if (stage.getCacheSlotSizes().length > 0)\n     {\n-        super( \"CacheTask-\" + stage, Statistics.NONE, 1 );\n-        this.stage = stage;\n-        this.cacheAccess = cacheAccess;\n+      cacheAccess.setCacheSlotSizes(stage.getCacheSlotSizes());\n+    }\n+    processCache();\n+  }\n+\n+  protected abstract void processCache();\n+\n+  public static class CacheNextRel extends CacheTask\n+  {\n+    private final ResourceIterable<NodeRecord> nodes;\n+\n+    public CacheNextRel(Stage stage, CacheAccess cacheAccess, ResourceIterable<NodeRecord> nodes)\n+    {\n+      super(stage, cacheAccess);\n+      this.nodes = nodes;\n     }\n \n     @Override\n-    public void run()\n+    protected void processCache()\n     {\n-        if ( stage.getCacheSlotSizes().length > 0 )\n+      cacheAccess.clearCache();\n+      long[] fields = new long[] {1, 0, -1};\n+      CacheAccess.Client client = cacheAccess.client();\n+      try (ResourceIterator<NodeRecord> nodeRecords = nodes.iterator())\n+      {\n+        while (nodeRecords.hasNext())\n         {\n-            cacheAccess.setCacheSlotSizes( stage.getCacheSlotSizes() );\n+          NodeRecord node = nodeRecords.next();\n+          if (node.inUse())\n+          {\n+            fields[CacheSlots.NextRelationship.SLOT_RELATIONSHIP_ID] = node.getNextRel();\n+            client.putToCache(node.getId(), fields);\n+          }\n         }\n-        processCache();\n+      }\n     }\n+  }\n \n-    protected abstract void processCache();\n+  public static class CheckNextRel extends CacheTask\n+  {\n+    private final StoreAccess storeAccess;\n+    private final StoreProcessor storeProcessor;\n \n-    public static class CacheNextRel extends CacheTask\n+    public CheckNextRel(Stage stage, CacheAccess cacheAccess, StoreAccess storeAccess,\n+                        StoreProcessor storeProcessor)\n     {\n-        private final ResourceIterable<NodeRecord> nodes;\n-\n-        public CacheNextRel( Stage stage, CacheAccess cacheAccess, ResourceIterable<NodeRecord> nodes )\n-        {\n-            super( stage, cacheAccess );\n-            this.nodes = nodes;\n-        }\n-\n-        @Override\n-        protected void processCache()\n-        {\n-            cacheAccess.clearCache();\n-            long[] fields = new long[] {1, 0, -1};\n-            CacheAccess.Client client = cacheAccess.client();\n-            try ( ResourceIterator<NodeRecord> nodeRecords = nodes.iterator() )\n-            {\n-                while ( nodeRecords.hasNext() )\n-                {\n-                    NodeRecord node = nodeRecords.next();\n-                    if ( node.inUse() )\n-                    {\n-                        fields[CacheSlots.NextRelationship.SLOT_RELATIONSHIP_ID] = node.getNextRel();\n-                        client.putToCache( node.getId(), fields );\n-                    }\n-                }\n-            }\n-        }\n+      super(stage, cacheAccess);\n+      this.storeAccess = storeAccess;\n+      this.storeProcessor = storeProcessor;\n     }\n \n-    public static class CheckNextRel extends CacheTask\n+    @Override\n+    protected void processCache()\n     {\n-        private final StoreAccess storeAccess;\n-        private final StoreProcessor storeProcessor;\n-\n-        public CheckNextRel( Stage stage, CacheAccess cacheAccess, StoreAccess storeAccess,\n-                StoreProcessor storeProcessor )\n-        {\n-            super( stage, cacheAccess );\n-            this.storeAccess = storeAccess;\n-            this.storeProcessor = storeProcessor;\n-        }\n-\n-        @Override\n-        protected void processCache()\n+      RecordStore<NodeRecord> nodeStore = storeAccess.getNodeStore();\n+      CacheAccess.Client client = cacheAccess.client();\n+      long highId = nodeStore.getHighId();\n+      for (long nodeId = 0; nodeId < highId; nodeId++)\n+      {\n+        if (client.getFromCache(nodeId, CacheSlots.NextRelationship.SLOT_FIRST_IN_TARGET) == 0)\n         {\n-            RecordStore<NodeRecord> nodeStore = storeAccess.getNodeStore();\n-            CacheAccess.Client client = cacheAccess.client();\n-            long highId = nodeStore.getHighId();\n-            for ( long nodeId = 0; nodeId < highId; nodeId++ )\n-            {\n-                if ( client.getFromCache( nodeId, CacheSlots.NextRelationship.SLOT_FIRST_IN_TARGET ) == 0 )\n-                {\n-                    NodeRecord node = nodeStore.getRecord( nodeId, nodeStore.newRecord(), FORCE );\n-                    if ( node.inUse() && !node.isDense() )\n-                    {\n-                        storeProcessor.processNode( nodeStore, node );\n-                    }\n-                }\n-            }\n+          NodeRecord node = nodeStore.getRecord(nodeId, nodeStore.newRecord(), FORCE);\n+          if (node.inUse() && !node.isDense())\n+          {\n+            storeProcessor.processNode(nodeStore, node);\n+          }\n         }\n+      }\n     }\n+  }\n }\n",
            "diff_size": 108
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "46",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1448/CacheTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1448/CacheTask.java\nindex b6fb5d69322..6fb9bb584c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1448/CacheTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1448/CacheTask.java\n@@ -49,11 +49,12 @@ public abstract class CacheTask extends ConsistencyCheckerTask\n     @Override\n     public void run()\n     {\n-        if ( stage.getCacheSlotSizes().length > 0 )\n+        if ( stage.getCacheSlotSizes().length> 0 )\n         {\n             cacheAccess.setCacheSlotSizes( stage.getCacheSlotSizes() );\n         }\n-        processCache();\n+\n+processCache();\n     }\n \n     protected abstract void processCache();\n@@ -72,7 +73,7 @@ public abstract class CacheTask extends ConsistencyCheckerTask\n         protected void processCache()\n         {\n             cacheAccess.clearCache();\n-            long[] fields = new long[] {1, 0, -1};\n+            long[] fields = new long[]{1, 0, -1};\n             CacheAccess.Client client = cacheAccess.client();\n             try ( ResourceIterator<NodeRecord> nodeRecords = nodes.iterator() )\n             {\n@@ -121,4 +122,4 @@ public abstract class CacheTask extends ConsistencyCheckerTask\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
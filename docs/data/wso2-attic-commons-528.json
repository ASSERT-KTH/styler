{
    "project_name": "wso2-attic-commons",
    "error_id": "528",
    "information": {
        "errors": [
            {
                "line": "51",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    protected StateEvent createNewEvent(ComplexEvent complexEvent, ComplexEvent complexEvent1) {\n        return new RemoveStateEvent(new Event[]{((Event) complexEvent), ((Event) complexEvent1)}, System.currentTimeMillis());\n    }\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/528/LeftRemoveStreamJoinProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/528/LeftRemoveStreamJoinProcessor.java\nindex 8ba58c1febb..eb6ca983c45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/528/LeftRemoveStreamJoinProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/528/LeftRemoveStreamJoinProcessor.java\n@@ -48,7 +48,8 @@ public class LeftRemoveStreamJoinProcessor extends JoinProcessor {\n     }\n \n     protected StateEvent createNewEvent(ComplexEvent complexEvent, ComplexEvent complexEvent1) {\n-        return new RemoveStateEvent(new Event[]{((Event) complexEvent), ((Event) complexEvent1)}, System.currentTimeMillis());\n+        return new RemoveStateEvent(new Event[]{\n+                ((Event) complexEvent), ((Event) complexEvent1)}, System.currentTimeMillis());\n     }\n \n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/528/LeftRemoveStreamJoinProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/528/LeftRemoveStreamJoinProcessor.java\nindex 8ba58c1febb..e3c1d2298ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/528/LeftRemoveStreamJoinProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/528/LeftRemoveStreamJoinProcessor.java\n@@ -1,20 +1,21 @@\n /*\n-*  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n-*\n-*  WSO2 Inc. licenses this file to you under the Apache License,\n-*  Version 2.0 (the \"License\"); you may not use this file except\n-*  in compliance with the License.\n-*  You may obtain a copy of the License at\n-*\n-*    http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing,\n-* software distributed under the License is distributed on an\n-* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-* KIND, either express or implied.  See the License for the\n-* specific language governing permissions and limitations\n-* under the License.\n-*/\n+ *  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n package org.wso2.siddhi.core.query.processor.join;\n \n import org.wso2.siddhi.core.event.ComplexEvent;\n@@ -30,25 +31,26 @@ import java.util.concurrent.locks.Lock;\n \n public class LeftRemoveStreamJoinProcessor extends JoinProcessor {\n \n-    public LeftRemoveStreamJoinProcessor(ConditionExecutor onConditionExecutor,\n-                                         boolean triggerEvent,\n-                                         boolean distributedProcessing, Lock lock, boolean fromDB) {\n-        super(onConditionExecutor, triggerEvent, distributedProcessing, lock, fromDB);\n-    }\n+  public LeftRemoveStreamJoinProcessor(ConditionExecutor onConditionExecutor,\n+                                       boolean triggerEvent,\n+                                       boolean distributedProcessing, Lock lock, boolean fromDB) {\n+    super(onConditionExecutor, triggerEvent, distributedProcessing, lock, fromDB);\n+  }\n \n \n-    @Override\n-    protected boolean triggerEventTypeCheck(ComplexEvent complexEvent) {\n-        return complexEvent instanceof RemoveStream;\n-    }\n+  @Override\n+  protected boolean triggerEventTypeCheck(ComplexEvent complexEvent) {\n+    return complexEvent instanceof RemoveStream;\n+  }\n \n-    @Override\n-    protected ListAtomicEvent createNewListAtomicEvent() {\n-        return new RemoveListAtomicEvent();\n-    }\n+  @Override\n+  protected ListAtomicEvent createNewListAtomicEvent() {\n+    return new RemoveListAtomicEvent();\n+  }\n \n-    protected StateEvent createNewEvent(ComplexEvent complexEvent, ComplexEvent complexEvent1) {\n-        return new RemoveStateEvent(new Event[]{((Event) complexEvent), ((Event) complexEvent1)}, System.currentTimeMillis());\n-    }\n+  protected StateEvent createNewEvent(ComplexEvent complexEvent, ComplexEvent complexEvent1) {\n+    return new RemoveStateEvent(new Event[] {((Event) complexEvent), ((Event) complexEvent1)},\n+      System.currentTimeMillis());\n+  }\n \n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/528/LeftRemoveStreamJoinProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/528/LeftRemoveStreamJoinProcessor.java\nindex 8ba58c1febb..a5f766e0b95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/528/LeftRemoveStreamJoinProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/528/LeftRemoveStreamJoinProcessor.java\n@@ -30,10 +30,9 @@ import java.util.concurrent.locks.Lock;\n \n public class LeftRemoveStreamJoinProcessor extends JoinProcessor {\n \n-    public LeftRemoveStreamJoinProcessor(ConditionExecutor onConditionExecutor,\n-                                         boolean triggerEvent,\n+    public LeftRemoveStreamJoinProcessor(ConditionExecutor onConditionExecutor, boolean triggerEvent,\n                                          boolean distributedProcessing, Lock lock, boolean fromDB) {\n-        super(onConditionExecutor, triggerEvent, distributedProcessing, lock, fromDB);\n+    super(onConditionExecutor, triggerEvent, distributedProcessing, lock, fromDB);\n     }\n \n \n@@ -51,4 +50,4 @@ public class LeftRemoveStreamJoinProcessor extends JoinProcessor {\n         return new RemoveStateEvent(new Event[]{((Event) complexEvent), ((Event) complexEvent1)}, System.currentTimeMillis());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/528/LeftRemoveStreamJoinProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/528/LeftRemoveStreamJoinProcessor.java\nindex 8ba58c1febb..eb6ca983c45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/528/LeftRemoveStreamJoinProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/528/LeftRemoveStreamJoinProcessor.java\n@@ -48,7 +48,8 @@ public class LeftRemoveStreamJoinProcessor extends JoinProcessor {\n     }\n \n     protected StateEvent createNewEvent(ComplexEvent complexEvent, ComplexEvent complexEvent1) {\n-        return new RemoveStateEvent(new Event[]{((Event) complexEvent), ((Event) complexEvent1)}, System.currentTimeMillis());\n+        return new RemoveStateEvent(new Event[]{\n+                ((Event) complexEvent), ((Event) complexEvent1)}, System.currentTimeMillis());\n     }\n \n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3454",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3454/PathWrappingPathValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3454/PathWrappingPathValue.java\nindex 20a0424ebc8..47916578651 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3454/PathWrappingPathValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3454/PathWrappingPathValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import org.neo4j.graphdb.Node;\n@@ -28,59 +29,59 @@ import org.neo4j.values.virtual.RelationshipValue;\n \n public class PathWrappingPathValue extends PathValue\n {\n-    private final Path path;\n+  private final Path path;\n \n-    PathWrappingPathValue( Path path )\n-    {\n-        this.path = path;\n-    }\n+  PathWrappingPathValue(Path path)\n+  {\n+    this.path = path;\n+  }\n \n-    @Override\n-    public NodeValue startNode()\n-    {\n-        return ValueUtils.fromNodeProxy( path.startNode() );\n-    }\n+  @Override\n+  public NodeValue startNode()\n+  {\n+    return ValueUtils.fromNodeProxy(path.startNode());\n+  }\n \n-    @Override\n-    public NodeValue endNode()\n-    {\n-        return ValueUtils.fromNodeProxy( path.endNode() );\n-    }\n+  @Override\n+  public NodeValue endNode()\n+  {\n+    return ValueUtils.fromNodeProxy(path.endNode());\n+  }\n \n-    @Override\n-    public RelationshipValue lastRelationship()\n-    {\n-        return ValueUtils.fromRelationshipProxy( path.lastRelationship() );\n-    }\n+  @Override\n+  public RelationshipValue lastRelationship()\n+  {\n+    return ValueUtils.fromRelationshipProxy(path.lastRelationship());\n+  }\n \n-    @Override\n-    public NodeValue[] nodes()\n+  @Override\n+  public NodeValue[] nodes()\n+  {\n+    int length = path.length() + 1;\n+    NodeValue[] values = new NodeValue[length];\n+    int i = 0;\n+    for (Node node : path.nodes())\n     {\n-        int length = path.length() + 1;\n-        NodeValue[] values = new NodeValue[length];\n-        int i = 0;\n-        for ( Node node : path.nodes() )\n-        {\n-            values[i++] = ValueUtils.fromNodeProxy( node );\n-        }\n-        return values;\n+      values[i++] = ValueUtils.fromNodeProxy(node);\n     }\n+    return values;\n+  }\n \n-    @Override\n-    public RelationshipValue[] relationships()\n+  @Override\n+  public RelationshipValue[] relationships()\n+  {\n+    int length = path.length();\n+    RelationshipValue[] values = new RelationshipValue[length];\n+    int i = 0;\n+    for (Relationship relationship : path.relationships())\n     {\n-        int length = path.length();\n-        RelationshipValue[] values = new RelationshipValue[length];\n-        int i = 0;\n-        for ( Relationship relationship : path.relationships() )\n-        {\n-            values[i++] = ValueUtils.fromRelationshipProxy( relationship );\n-        }\n-        return values;\n+      values[i++] = ValueUtils.fromRelationshipProxy(relationship);\n     }\n+    return values;\n+  }\n \n-    public Path path()\n-    {\n-        return path;\n-    }\n+  public Path path()\n+  {\n+    return path;\n+  }\n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3454/PathWrappingPathValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3454/PathWrappingPathValue.java\nindex 20a0424ebc8..37eb2a80710 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3454/PathWrappingPathValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3454/PathWrappingPathValue.java\n@@ -63,7 +63,8 @@ public class PathWrappingPathValue extends PathValue\n         {\n             values[i++] = ValueUtils.fromNodeProxy( node );\n         }\n-        return values;\n+\n+return values;\n     }\n \n     @Override\n@@ -76,11 +77,12 @@ public class PathWrappingPathValue extends PathValue\n         {\n             values[i++] = ValueUtils.fromRelationshipProxy( relationship );\n         }\n-        return values;\n+\n+return values;\n     }\n \n     public Path path()\n     {\n         return path;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1797",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "133",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1797/AuthProceduresBase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1797/AuthProceduresBase.java\nindex bb23ed6fa05..63ca3af30a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1797/AuthProceduresBase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1797/AuthProceduresBase.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import java.util.ArrayList;\n@@ -38,137 +39,135 @@ import org.neo4j.server.security.enterprise.log.SecurityLog;\n \n import static java.util.Collections.emptyList;\n \n-@SuppressWarnings( \"WeakerAccess\" )\n+@SuppressWarnings(\"WeakerAccess\")\n public class AuthProceduresBase\n {\n-    @Context\n-    public EnterpriseSecurityContext securityContext;\n-\n-    @Context\n-    public GraphDatabaseAPI graph;\n-\n-    @Context\n-    public SecurityLog securityLog;\n+  @Context\n+  public EnterpriseSecurityContext securityContext;\n \n-    @Context\n-    public EnterpriseUserManager userManager;\n+  @Context\n+  public GraphDatabaseAPI graph;\n \n-    // ----------------- helpers ---------------------\n+  @Context\n+  public SecurityLog securityLog;\n \n-    protected void kickoutUser( String username, String reason )\n-    {\n-        try\n-        {\n-            terminateTransactionsForValidUser( username );\n-            terminateConnectionsForValidUser( username );\n-        }\n-        catch ( Exception e )\n-        {\n-            securityLog.error( securityContext.subject(), \"failed to terminate running transaction and bolt connections for \" +\n-                    \"user `%s` following %s: %s\", username, reason, e.getMessage() );\n-            throw e;\n-        }\n-    }\n+  @Context\n+  public EnterpriseUserManager userManager;\n \n-    protected void terminateTransactionsForValidUser( String username )\n-    {\n-        KernelTransaction currentTx = getCurrentTx();\n-        getActiveTransactions()\n-                .stream()\n-                .filter( tx ->\n-                     tx.subject().hasUsername( username ) &&\n-                    !tx.isUnderlyingTransaction( currentTx )\n-                ).forEach( tx -> tx.markForTermination( Status.Transaction.Terminated ) );\n-    }\n+  // ----------------- helpers ---------------------\n \n-    protected void terminateConnectionsForValidUser( String username )\n+  protected void kickoutUser(String username, String reason)\n+  {\n+    try\n     {\n-        getBoltConnectionTracker().getActiveConnections( username ).forEach( ManagedBoltStateMachine::terminate );\n-    }\n-\n-    private Set<KernelTransactionHandle> getActiveTransactions()\n+      terminateTransactionsForValidUser(username);\n+      terminateConnectionsForValidUser(username);\n+    } catch (Exception e)\n     {\n-        return graph.getDependencyResolver().resolveDependency( KernelTransactions.class ).activeTransactions();\n+      securityLog.error(securityContext.subject(), \"failed to terminate running transaction and bolt connections for \" +\n+          \"user `%s` following %s: %s\", username, reason, e.getMessage());\n+      throw e;\n     }\n-\n-    private BoltConnectionTracker getBoltConnectionTracker()\n+  }\n+\n+  protected void terminateTransactionsForValidUser(String username)\n+  {\n+    KernelTransaction currentTx = getCurrentTx();\n+    getActiveTransactions()\n+        .stream()\n+        .filter(tx ->\n+            tx.subject().hasUsername(username) &&\n+                !tx.isUnderlyingTransaction(currentTx)\n+        ).forEach(tx -> tx.markForTermination(Status.Transaction.Terminated));\n+  }\n+\n+  protected void terminateConnectionsForValidUser(String username)\n+  {\n+    getBoltConnectionTracker().getActiveConnections(username).forEach(ManagedBoltStateMachine::terminate);\n+  }\n+\n+  private Set<KernelTransactionHandle> getActiveTransactions()\n+  {\n+    return graph.getDependencyResolver().resolveDependency(KernelTransactions.class).activeTransactions();\n+  }\n+\n+  private BoltConnectionTracker getBoltConnectionTracker()\n+  {\n+    return graph.getDependencyResolver().resolveDependency(BoltConnectionTracker.class);\n+  }\n+\n+  private KernelTransaction getCurrentTx()\n+  {\n+    return graph.getDependencyResolver().resolveDependency(ThreadToStatementContextBridge.class)\n+        .getKernelTransactionBoundToThisThread(true);\n+  }\n+\n+  public static class StringResult\n+  {\n+    public final String value;\n+\n+    StringResult(String value)\n     {\n-        return graph.getDependencyResolver().resolveDependency( BoltConnectionTracker.class );\n+      this.value = value;\n     }\n-\n-    private KernelTransaction getCurrentTx()\n+  }\n+\n+  protected UserResult userResultForSubject()\n+  {\n+    String username = securityContext.subject().username();\n+    User user = userManager.silentlyGetUser(username);\n+    Iterable<String> flags = user == null ? emptyList() : user.getFlags();\n+    return new UserResult(username, securityContext.roles(), flags);\n+  }\n+\n+  protected UserResult userResultForName(String username)\n+  {\n+    if (username.equals(securityContext.subject().username()))\n     {\n-        return graph.getDependencyResolver().resolveDependency( ThreadToStatementContextBridge.class )\n-                .getKernelTransactionBoundToThisThread( true );\n-    }\n-\n-    public static class StringResult\n+      return userResultForSubject();\n+    } else\n     {\n-        public final String value;\n-\n-        StringResult( String value )\n-        {\n-            this.value = value;\n-        }\n+      User user = userManager.silentlyGetUser(username);\n+      Iterable<String> flags = user == null ? emptyList() : user.getFlags();\n+      Set<String> roles = userManager.silentlyGetRoleNamesForUser(username);\n+      return new UserResult(username, roles, flags);\n     }\n+  }\n \n-    protected UserResult userResultForSubject()\n-    {\n-        String username = securityContext.subject().username();\n-        User user = userManager.silentlyGetUser( username );\n-        Iterable<String> flags = user == null ? emptyList() : user.getFlags();\n-        return new UserResult( username, securityContext.roles(), flags );\n-    }\n+  public static class UserResult\n+  {\n+    public final String username;\n+    public final List<String> roles;\n+    public final List<String> flags;\n \n-    protected UserResult userResultForName( String username )\n+    UserResult(String username, Set<String> roles, Iterable<String> flags)\n     {\n-        if ( username.equals( securityContext.subject().username() ) )\n-        {\n-            return userResultForSubject();\n-        }\n-        else\n-        {\n-            User user = userManager.silentlyGetUser( username );\n-            Iterable<String> flags = user == null ? emptyList() : user.getFlags();\n-            Set<String> roles = userManager.silentlyGetRoleNamesForUser( username );\n-            return new UserResult( username, roles, flags );\n-        }\n+      this.username = username;\n+      this.roles = new ArrayList<>();\n+      this.roles.addAll(roles);\n+      this.flags = new ArrayList<>();\n+      for (String f : flags)\n+      {\n+        this.flags.add(f);\n+      }\n     }\n+  }\n \n-    public static class UserResult\n-    {\n-        public final String username;\n-        public final List<String> roles;\n-        public final List<String> flags;\n-\n-        UserResult( String username, Set<String> roles, Iterable<String> flags )\n-        {\n-            this.username = username;\n-            this.roles = new ArrayList<>();\n-            this.roles.addAll( roles );\n-            this.flags = new ArrayList<>();\n-            for ( String f : flags )\n-            {\n-                this.flags.add( f );\n-            }\n-        }\n-    }\n+  protected RoleResult roleResultForName(String roleName)\n+  {\n+    return new RoleResult(roleName, userManager.silentlyGetUsernamesForRole(roleName));\n+  }\n \n-    protected RoleResult roleResultForName( String roleName )\n-    {\n-        return new RoleResult( roleName, userManager.silentlyGetUsernamesForRole( roleName ) );\n-    }\n+  public static class RoleResult\n+  {\n+    public final String role;\n+    public final List<String> users;\n \n-    public static class RoleResult\n+    RoleResult(String role, Set<String> users)\n     {\n-        public final String role;\n-        public final List<String> users;\n-\n-        RoleResult( String role, Set<String> users )\n-        {\n-            this.role = role;\n-            this.users = new ArrayList<>();\n-            this.users.addAll( users );\n-        }\n+      this.role = role;\n+      this.users = new ArrayList<>();\n+      this.users.addAll(users);\n     }\n+  }\n }\n",
            "diff_size": 166
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "column": "93",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1797/AuthProceduresBase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1797/AuthProceduresBase.java\nindex bb23ed6fa05..558b74adce6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1797/AuthProceduresBase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1797/AuthProceduresBase.java\n@@ -64,21 +64,15 @@ public class AuthProceduresBase\n         }\n         catch ( Exception e )\n         {\n-            securityLog.error( securityContext.subject(), \"failed to terminate running transaction and bolt connections for \" +\n-                    \"user `%s` following %s: %s\", username, reason, e.getMessage() );\n-            throw e;\n+            securityLog.error( securityContext.subject(), \"failed to terminate running transaction and bolt connections for \" + \"user `%s` following %s: %s\", username, reason, e.getMessage() );\n+    throw e;\n         }\n     }\n \n     protected void terminateTransactionsForValidUser( String username )\n     {\n         KernelTransaction currentTx = getCurrentTx();\n-        getActiveTransactions()\n-                .stream()\n-                .filter( tx ->\n-                     tx.subject().hasUsername( username ) &&\n-                    !tx.isUnderlyingTransaction( currentTx )\n-                ).forEach( tx -> tx.markForTermination( Status.Transaction.Terminated ) );\n+        getActiveTransactions().stream().filter( tx -> tx.subject().hasUsername( username ) &&!tx.isUnderlyingTransaction( currentTx )).forEach( tx -> tx.markForTermination( Status.Transaction.Terminated ) );\n     }\n \n     protected void terminateConnectionsForValidUser( String username )\n@@ -98,8 +92,7 @@ public class AuthProceduresBase\n \n     private KernelTransaction getCurrentTx()\n     {\n-        return graph.getDependencyResolver().resolveDependency( ThreadToStatementContextBridge.class )\n-                .getKernelTransactionBoundToThisThread( true );\n+        return graph.getDependencyResolver().resolveDependency( ThreadToStatementContextBridge.class ).getKernelTransactionBoundToThisThread( true );\n     }\n \n     public static class StringResult\n@@ -138,8 +131,10 @@ public class AuthProceduresBase\n     public static class UserResult\n     {\n         public final String username;\n-        public final List<String> roles;\n-        public final List<String> flags;\n+\n+public final List<String> roles;\n+\n+public final List<String> flags;\n \n         UserResult( String username, Set<String> roles, Iterable<String> flags )\n         {\n@@ -162,7 +157,8 @@ public class AuthProceduresBase\n     public static class RoleResult\n     {\n         public final String role;\n-        public final List<String> users;\n+\n+public final List<String> users;\n \n         RoleResult( String role, Set<String> users )\n         {\n@@ -171,4 +167,4 @@ public class AuthProceduresBase\n             this.users.addAll( users );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
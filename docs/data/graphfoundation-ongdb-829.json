{
    "project_name": "graphfoundation-ongdb",
    "error_id": "829",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "116",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/829/ChunkedTransactionStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/829/ChunkedTransactionStream.java\nindex cb534d99932..6c41285de7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/829/ChunkedTransactionStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/829/ChunkedTransactionStream.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.tx;\n \n import io.netty.buffer.ByteBufAllocator;\n@@ -37,110 +38,107 @@ import static org.neo4j.causalclustering.catchup.CatchupResult.SUCCESS_END_OF_ST\n  */\n public class ChunkedTransactionStream implements ChunkedInput<Object>\n {\n-    private final StoreId storeId;\n-    private final IOCursor<CommittedTransactionRepresentation> txCursor;\n-    private final CatchupServerProtocol protocol;\n-\n-    private boolean endOfInput;\n-    private boolean noMoreTransactions;\n-    private long expectedTxId;\n-    private long lastTxId;\n-\n-    private Object pending;\n-\n-    ChunkedTransactionStream( StoreId storeId, long firstTxId, IOCursor<CommittedTransactionRepresentation> txCursor, CatchupServerProtocol protocol )\n-    {\n-        this.storeId = storeId;\n-        this.expectedTxId = firstTxId;\n-        this.txCursor = txCursor;\n-        this.protocol = protocol;\n-    }\n-\n-    @Override\n-    public boolean isEndOfInput()\n-    {\n-        return endOfInput;\n-    }\n-\n-    @Override\n-    public void close() throws Exception\n-    {\n-        txCursor.close();\n-    }\n-\n-    @Override\n-    public Object readChunk( ChannelHandlerContext ctx ) throws Exception\n+  private final StoreId storeId;\n+  private final IOCursor<CommittedTransactionRepresentation> txCursor;\n+  private final CatchupServerProtocol protocol;\n+\n+  private boolean endOfInput;\n+  private boolean noMoreTransactions;\n+  private long expectedTxId;\n+  private long lastTxId;\n+\n+  private Object pending;\n+\n+  ChunkedTransactionStream(StoreId storeId, long firstTxId, IOCursor<CommittedTransactionRepresentation> txCursor, CatchupServerProtocol protocol)\n+  {\n+    this.storeId = storeId;\n+    this.expectedTxId = firstTxId;\n+    this.txCursor = txCursor;\n+    this.protocol = protocol;\n+  }\n+\n+  @Override\n+  public boolean isEndOfInput()\n+  {\n+    return endOfInput;\n+  }\n+\n+  @Override\n+  public void close() throws Exception\n+  {\n+    txCursor.close();\n+  }\n+\n+  @Override\n+  public Object readChunk(ChannelHandlerContext ctx) throws Exception\n+  {\n+    return readChunk(ctx.alloc());\n+  }\n+\n+  @Override\n+  public Object readChunk(ByteBufAllocator allocator) throws Exception\n+  {\n+    assert !endOfInput;\n+\n+    if (pending != null)\n     {\n-        return readChunk( ctx.alloc() );\n-    }\n+      if (noMoreTransactions)\n+      {\n+        endOfInput = true;\n+      }\n \n-    @Override\n-    public Object readChunk( ByteBufAllocator allocator ) throws Exception\n+      return consumePending();\n+    } else if (noMoreTransactions)\n     {\n-        assert !endOfInput;\n-\n-        if ( pending != null )\n-        {\n-            if ( noMoreTransactions )\n-            {\n-                endOfInput = true;\n-            }\n-\n-            return consumePending();\n-        }\n-        else if ( noMoreTransactions )\n-        {\n-            /* finalization should always have a last ending message */\n-            throw new IllegalStateException();\n-        }\n-        else if ( txCursor.next() )\n-        {\n-            assert pending == null;\n-\n-            CommittedTransactionRepresentation tx = txCursor.get();\n-            lastTxId = tx.getCommitEntry().getTxId();\n-            if ( lastTxId != expectedTxId )\n-            {\n-                String msg = format( \"Transaction cursor out of order. Expected %d but was %d\", expectedTxId, lastTxId );\n-                throw new IllegalStateException( msg );\n-            }\n-            expectedTxId++;\n-            pending = new TxPullResponse( storeId, tx );\n-            return ResponseMessageType.TX;\n-        }\n-        else\n-        {\n-            assert pending == null;\n-\n-            noMoreTransactions = true;\n-            protocol.expect( CatchupServerProtocol.State.MESSAGE_TYPE );\n-\n-            pending = new TxStreamFinishedResponse( SUCCESS_END_OF_STREAM, lastTxId );\n-            return ResponseMessageType.TX_STREAM_FINISHED;\n-        }\n-    }\n-\n-    private Object consumePending()\n+      /* finalization should always have a last ending message */\n+      throw new IllegalStateException();\n+    } else if (txCursor.next())\n     {\n-        Object prevPending = pending;\n-        pending = null;\n-        return prevPending;\n-    }\n-\n-    @Override\n-    public long length()\n+      assert pending == null;\n+\n+      CommittedTransactionRepresentation tx = txCursor.get();\n+      lastTxId = tx.getCommitEntry().getTxId();\n+      if (lastTxId != expectedTxId)\n+      {\n+        String msg = format(\"Transaction cursor out of order. Expected %d but was %d\", expectedTxId, lastTxId);\n+        throw new IllegalStateException(msg);\n+      }\n+      expectedTxId++;\n+      pending = new TxPullResponse(storeId, tx);\n+      return ResponseMessageType.TX;\n+    } else\n     {\n-        return -1;\n-    }\n+      assert pending == null;\n \n-    @Override\n-    public long progress()\n-    {\n-        return 0;\n-    }\n+      noMoreTransactions = true;\n+      protocol.expect(CatchupServerProtocol.State.MESSAGE_TYPE);\n \n-    public long lastTxId()\n-    {\n-        return lastTxId;\n+      pending = new TxStreamFinishedResponse(SUCCESS_END_OF_STREAM, lastTxId);\n+      return ResponseMessageType.TX_STREAM_FINISHED;\n     }\n+  }\n+\n+  private Object consumePending()\n+  {\n+    Object prevPending = pending;\n+    pending = null;\n+    return prevPending;\n+  }\n+\n+  @Override\n+  public long length()\n+  {\n+    return -1;\n+  }\n+\n+  @Override\n+  public long progress()\n+  {\n+    return 0;\n+  }\n+\n+  public long lastTxId()\n+  {\n+    return lastTxId;\n+  }\n }\n",
            "diff_size": 142
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/829/ChunkedTransactionStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/829/ChunkedTransactionStream.java\nindex cb534d99932..ee55804a3f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/829/ChunkedTransactionStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/829/ChunkedTransactionStream.java\n@@ -114,8 +114,7 @@ public class ChunkedTransactionStream implements ChunkedInput<Object>\n \n             noMoreTransactions = true;\n             protocol.expect( CatchupServerProtocol.State.MESSAGE_TYPE );\n-\n-            pending = new TxStreamFinishedResponse( SUCCESS_END_OF_STREAM, lastTxId );\n+pending = new TxStreamFinishedResponse( SUCCESS_END_OF_STREAM, lastTxId );\n             return ResponseMessageType.TX_STREAM_FINISHED;\n         }\n     }\n@@ -143,4 +142,4 @@ public class ChunkedTransactionStream implements ChunkedInput<Object>\n     {\n         return lastTxId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "eclipse-milo",
    "error_id": "233",
    "information": {
        "errors": [
            {
                "line": "21",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n\npublic class ExclusiveDeviationAlarmTypeNode extends ExclusiveLimitAlarmTypeNode implements ExclusiveDeviationAlarmType {\n    public ExclusiveDeviationAlarmTypeNode(OpcUaClient client, NodeId nodeId) {\n        super(client, nodeId);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/233/ExclusiveDeviationAlarmTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/233/ExclusiveDeviationAlarmTypeNode.java\nindex 5701ca5b412..292e015a172 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/233/ExclusiveDeviationAlarmTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/233/ExclusiveDeviationAlarmTypeNode.java\n@@ -18,7 +18,8 @@ import org.eclipse.milo.opcua.sdk.client.model.types.objects.ExclusiveDeviationA\n import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n \n-public class ExclusiveDeviationAlarmTypeNode extends ExclusiveLimitAlarmTypeNode implements ExclusiveDeviationAlarmType {\n+public class ExclusiveDeviationAlarmTypeNode extends ExclusiveLimitAlarmTypeNode\n+    implements ExclusiveDeviationAlarmType {\n     public ExclusiveDeviationAlarmTypeNode(OpcUaClient client, NodeId nodeId) {\n         super(client, nodeId);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/233/ExclusiveDeviationAlarmTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/233/ExclusiveDeviationAlarmTypeNode.java\nindex 5701ca5b412..edabec3fda1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/233/ExclusiveDeviationAlarmTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/233/ExclusiveDeviationAlarmTypeNode.java\n@@ -34,4 +34,4 @@ public class ExclusiveDeviationAlarmTypeNode extends ExclusiveLimitAlarmTypeNode\n     public CompletableFuture<StatusCode> setSetpointNode(NodeId value) {\n         return setProperty(ExclusiveDeviationAlarmType.SETPOINT_NODE, value);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/233/ExclusiveDeviationAlarmTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/233/ExclusiveDeviationAlarmTypeNode.java\nindex 5701ca5b412..57627e41297 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/233/ExclusiveDeviationAlarmTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/233/ExclusiveDeviationAlarmTypeNode.java\n@@ -11,7 +11,6 @@\n package org.eclipse.milo.opcua.sdk.client.model.nodes.objects;\n \n import java.util.concurrent.CompletableFuture;\n-\n import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n import org.eclipse.milo.opcua.sdk.client.model.nodes.variables.PropertyTypeNode;\n import org.eclipse.milo.opcua.sdk.client.model.types.objects.ExclusiveDeviationAlarmType;\n@@ -34,4 +33,5 @@ public class ExclusiveDeviationAlarmTypeNode extends ExclusiveLimitAlarmTypeNode\n     public CompletableFuture<StatusCode> setSetpointNode(NodeId value) {\n         return setProperty(ExclusiveDeviationAlarmType.SETPOINT_NODE, value);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
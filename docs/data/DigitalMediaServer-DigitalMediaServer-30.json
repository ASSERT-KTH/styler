{
    "project_name": "DigitalMediaServer-DigitalMediaServer",
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "31",
                "column": "33",
                "severity": "warning",
                "message": "'{' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\t\t@Override\n\t\tpublic String[] getSupportedExtensions() {\n\t\t\treturn new String[] { \"dsf\" };\n\t\t}\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "31",
                    "column": "33",
                    "severity": "warning",
                    "message": "'{' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/30/DSF.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/intellij/30/DSF.java\nindex 3b87b621e10..ed61c6e0f02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/30/DSF.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/intellij/30/DSF.java\n@@ -1,33 +1,34 @@\n \t/*\n-\t * Digital Media Server, for streaming digital media to DLNA compatible devices\n-\t * based on www.ps3mediaserver.org and www.universalmediaserver.com.\n-\t * Copyright (C) 2016 Digital Media Server developers.\n-\t *\n-\t * This program is a free software; you can redistribute it and/or\n-\t * modify it under the terms of the GNU General Public License\n-\t * as published by the Free Software Foundation; version 2\n-\t * of the License only.\n-\t *\n-\t * This program is distributed in the hope that it will be useful,\n-\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n-\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-\t * GNU General Public License for more details.\n-\t *\n-\t * You should have received a copy of the GNU General Public License\n-\t * along with this program; if not, write to the Free Software\n-\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n-\t */\n-\tpackage net.pms.formats.audio;\n+     * Digital Media Server, for streaming digital media to DLNA compatible devices\n+     * based on www.ps3mediaserver.org and www.universalmediaserver.com.\n+     * Copyright (C) 2016 Digital Media Server developers.\n+     *\n+     * This program is a free software; you can redistribute it and/or\n+     * modify it under the terms of the GNU General Public License\n+     * as published by the Free Software Foundation; version 2\n+     * of the License only.\n+     *\n+     * This program is distributed in the hope that it will be useful,\n+     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+     * GNU General Public License for more details.\n+     *\n+     * You should have received a copy of the GNU General Public License\n+     * along with this program; if not, write to the Free Software\n+     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+     */\n \n-\tpublic class DSF extends AudioBase {\n+    package net.pms.formats.audio;\n \n-\t\t@Override\n-\t\tpublic Identifier getIdentifier() {\n-\t\t\treturn Identifier.DSF;\n-\t\t}\n+    public class DSF extends AudioBase {\n \n-\t\t@Override\n-\t\tpublic String[] getSupportedExtensions() {\n-\t\t\treturn new String[] { \"dsf\" };\n-\t\t}\n-\t}\n+        @Override\n+        public Identifier getIdentifier() {\n+            return Identifier.DSF;\n+        }\n+\n+        @Override\n+        public String[] getSupportedExtensions() {\n+            return new String[] {\"dsf\"};\n+        }\n+    }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/30/DSF.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/naturalize/30/DSF.java\nindex 3b87b621e10..ba368354ba9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/30/DSF.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/naturalize/30/DSF.java\n@@ -1,4 +1,4 @@\n-\t/*\n+/*\n \t * Digital Media Server, for streaming digital media to DLNA compatible devices\n \t * based on www.ps3mediaserver.org and www.universalmediaserver.com.\n \t * Copyright (C) 2016 Digital Media Server developers.\n@@ -17,7 +17,7 @@\n \t * along with this program; if not, write to the Free Software\n \t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n \t */\n-\tpackage net.pms.formats.audio;\n+package net.pms.formats.audio;\n \n \tpublic class DSF extends AudioBase {\n \n@@ -28,6 +28,6 @@\n \n \t\t@Override\n \t\tpublic String[] getSupportedExtensions() {\n-\t\t\treturn new String[] { \"dsf\" };\n+\t\t\treturn new String[] {\"dsf\" };\n \t\t}\n-\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/30/DSF.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/codebuff/30/DSF.java\nindex 3b87b621e10..e855afdfffd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/errored/1/30/DSF.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DigitalMediaServer-DigitalMediaServer/codebuff/30/DSF.java\n@@ -1,33 +1,33 @@\n-\t/*\n-\t * Digital Media Server, for streaming digital media to DLNA compatible devices\n-\t * based on www.ps3mediaserver.org and www.universalmediaserver.com.\n-\t * Copyright (C) 2016 Digital Media Server developers.\n-\t *\n-\t * This program is a free software; you can redistribute it and/or\n-\t * modify it under the terms of the GNU General Public License\n-\t * as published by the Free Software Foundation; version 2\n-\t * of the License only.\n-\t *\n-\t * This program is distributed in the hope that it will be useful,\n-\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n-\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-\t * GNU General Public License for more details.\n-\t *\n-\t * You should have received a copy of the GNU General Public License\n-\t * along with this program; if not, write to the Free Software\n-\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n-\t */\n-\tpackage net.pms.formats.audio;\n+ /*\n+  * Digital Media Server, for streaming digital media to DLNA compatible devices\n+  * based on www.ps3mediaserver.org and www.universalmediaserver.com.\n+  * Copyright (C) 2016 Digital Media Server developers.\n+  *\n+  * This program is a free software; you can redistribute it and/or\n+  * modify it under the terms of the GNU General Public License\n+  * as published by the Free Software Foundation; version 2\n+  * of the License only.\n+  *\n+  * This program is distributed in the hope that it will be useful,\n+  * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+  * GNU General Public License for more details.\n+  *\n+  * You should have received a copy of the GNU General Public License\n+  * along with this program; if not, write to the Free Software\n+  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+  */\n+ package net.pms.formats.audio;\n \n-\tpublic class DSF extends AudioBase {\n+ public class DSF extends AudioBase {\n \n-\t\t@Override\n-\t\tpublic Identifier getIdentifier() {\n-\t\t\treturn Identifier.DSF;\n-\t\t}\n+  @Override\n+  public Identifier getIdentifier() {\n+   return Identifier.DSF;\n+  }\n \n-\t\t@Override\n-\t\tpublic String[] getSupportedExtensions() {\n-\t\t\treturn new String[] { \"dsf\" };\n-\t\t}\n-\t}\n+  @Override\n+  public String[] getSupportedExtensions() {\n+   return new String[]{\"dsf\"};\n+  }\n+ }\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "column": "33",
                    "severity": "warning",
                    "message": "'{' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "31",
                    "column": "33",
                    "severity": "warning",
                    "message": "'{' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
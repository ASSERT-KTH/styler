{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1962",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1962/LazyCsvInputChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1962/LazyCsvInputChunk.java\nindex 857c4183a23..b20eebead82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1962/LazyCsvInputChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1962/LazyCsvInputChunk.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input.csv;\n \n import java.io.IOException;\n@@ -35,76 +36,76 @@ import static org.neo4j.unsafe.impl.batchimport.input.csv.CsvInputIterator.seeke\n  */\n public class LazyCsvInputChunk implements CsvInputChunk\n {\n-    private final IdType idType;\n-    private final int delimiter;\n-    private final Collector badCollector;\n-    private final Chunk processingChunk;\n-    private final Configuration config;\n-    private final Decorator decorator;\n-    private final Header header;\n-    private final Extractors extractors;\n+  private final IdType idType;\n+  private final int delimiter;\n+  private final Collector badCollector;\n+  private final Chunk processingChunk;\n+  private final Configuration config;\n+  private final Decorator decorator;\n+  private final Header header;\n+  private final Extractors extractors;\n \n-    // Set in #fillFrom\n-    private CsvInputParser parser;\n+  // Set in #fillFrom\n+  private CsvInputParser parser;\n \n-    // Set as #next is called\n-    private InputEntityVisitor previousVisitor;\n-    private InputEntityVisitor visitor;\n+  // Set as #next is called\n+  private InputEntityVisitor previousVisitor;\n+  private InputEntityVisitor visitor;\n \n-    public LazyCsvInputChunk( IdType idType, int delimiter, Collector badCollector, Extractors extractors, Chunk processingChunk, Configuration config,\n-            Decorator decorator, Header header )\n-    {\n-        this.idType = idType;\n-        this.badCollector = badCollector;\n-        this.extractors = extractors;\n-        this.delimiter = delimiter;\n-        this.processingChunk = processingChunk;\n-        this.config = config;\n-        this.decorator = decorator;\n-        this.header = header;\n-    }\n+  public LazyCsvInputChunk(IdType idType, int delimiter, Collector badCollector, Extractors extractors, Chunk processingChunk, Configuration config,\n+                           Decorator decorator, Header header)\n+  {\n+    this.idType = idType;\n+    this.badCollector = badCollector;\n+    this.extractors = extractors;\n+    this.delimiter = delimiter;\n+    this.processingChunk = processingChunk;\n+    this.config = config;\n+    this.decorator = decorator;\n+    this.header = header;\n+  }\n \n-    @Override\n-    public boolean fillFrom( Chunker chunker ) throws IOException\n+  @Override\n+  public boolean fillFrom(Chunker chunker) throws IOException\n+  {\n+    if (chunker.nextChunk(processingChunk))\n     {\n-        if ( chunker.nextChunk( processingChunk ) )\n-        {\n-            closeCurrentParser();\n-            this.visitor = null;\n-            this.parser = new CsvInputParser( seeker( processingChunk, config ), delimiter, idType, header.clone(), badCollector, extractors );\n-            return header.entries().length != 0;\n-        }\n-        return false;\n+      closeCurrentParser();\n+      this.visitor = null;\n+      this.parser = new CsvInputParser(seeker(processingChunk, config), delimiter, idType, header.clone(), badCollector, extractors);\n+      return header.entries().length != 0;\n     }\n+    return false;\n+  }\n \n-    private void closeCurrentParser() throws IOException\n+  private void closeCurrentParser() throws IOException\n+  {\n+    if (parser != null)\n     {\n-        if ( parser != null )\n-        {\n-            parser.close();\n-        }\n+      parser.close();\n     }\n+  }\n \n-    @Override\n-    public boolean next( InputEntityVisitor nakedVisitor ) throws IOException\n+  @Override\n+  public boolean next(InputEntityVisitor nakedVisitor) throws IOException\n+  {\n+    if (visitor == null || nakedVisitor != previousVisitor)\n     {\n-        if ( visitor == null || nakedVisitor != previousVisitor )\n-        {\n-            decorateVisitor( nakedVisitor );\n-        }\n-\n-        return parser.next( visitor );\n+      decorateVisitor(nakedVisitor);\n     }\n \n-    private void decorateVisitor( InputEntityVisitor nakedVisitor )\n-    {\n-        visitor = decorator.apply( nakedVisitor );\n-        previousVisitor = nakedVisitor;\n-    }\n+    return parser.next(visitor);\n+  }\n \n-    @Override\n-    public void close() throws IOException\n-    {\n-        closeCurrentParser();\n-    }\n+  private void decorateVisitor(InputEntityVisitor nakedVisitor)\n+  {\n+    visitor = decorator.apply(nakedVisitor);\n+    previousVisitor = nakedVisitor;\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    closeCurrentParser();\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1962/LazyCsvInputChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1962/LazyCsvInputChunk.java\nindex 857c4183a23..c1a478a94cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1962/LazyCsvInputChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1962/LazyCsvInputChunk.java\n@@ -107,4 +107,4 @@ public class LazyCsvInputChunk implements CsvInputChunk\n     {\n         closeCurrentParser();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1881",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "151",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1881/ScheduledJobHandle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1881/ScheduledJobHandle.java\nindex 74bf18f9e41..49c37cab3b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1881/ScheduledJobHandle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1881/ScheduledJobHandle.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.scheduler;\n \n import java.util.concurrent.CancellationException;\n@@ -49,108 +50,106 @@ import org.neo4j.scheduler.JobScheduler.JobHandle;\n  */\n final class ScheduledJobHandle extends AtomicInteger implements JobHandle\n {\n-    // We extend AtomicInteger to inline our state field.\n-    // These are the possible state values:\n-    private static final int RUNNABLE = 0;\n-    private static final int SUBMITTED = 1;\n-    private static final int FAILED = 2;\n+  // We extend AtomicInteger to inline our state field.\n+  // These are the possible state values:\n+  private static final int RUNNABLE = 0;\n+  private static final int SUBMITTED = 1;\n+  private static final int FAILED = 2;\n \n-    // Access is synchronised via the PriorityBlockingQueue in TimeBasedTaskScheduler:\n-    // - Write to this field happens before the handle is added to the queue.\n-    // - Reads of this field happens after the handle has been read from the queue.\n-    // - Reads of this field for the purpose of ordering the queue are either thread local,\n-    //   or happens after the relevant handles have been added to the queue.\n-    long nextDeadlineNanos;\n+  // Access is synchronised via the PriorityBlockingQueue in TimeBasedTaskScheduler:\n+  // - Write to this field happens before the handle is added to the queue.\n+  // - Reads of this field happens after the handle has been read from the queue.\n+  // - Reads of this field for the purpose of ordering the queue are either thread local,\n+  //   or happens after the relevant handles have been added to the queue.\n+  long nextDeadlineNanos;\n \n-    private final JobScheduler.Group group;\n-    private final CopyOnWriteArrayList<CancelListener> cancelListeners;\n-    private final BinaryLatch handleRelease;\n-    private final Runnable task;\n-    private volatile JobHandle latestHandle;\n-    private volatile Throwable lastException;\n+  private final JobScheduler.Group group;\n+  private final CopyOnWriteArrayList<CancelListener> cancelListeners;\n+  private final BinaryLatch handleRelease;\n+  private final Runnable task;\n+  private volatile JobHandle latestHandle;\n+  private volatile Throwable lastException;\n \n-    ScheduledJobHandle( TimeBasedTaskScheduler scheduler, JobScheduler.Group group, Runnable task,\n-                        long nextDeadlineNanos, long reschedulingDelayNanos )\n+  ScheduledJobHandle(TimeBasedTaskScheduler scheduler, JobScheduler.Group group, Runnable task,\n+                     long nextDeadlineNanos, long reschedulingDelayNanos)\n+  {\n+    this.group = group;\n+    this.nextDeadlineNanos = nextDeadlineNanos;\n+    handleRelease = new BinaryLatch();\n+    cancelListeners = new CopyOnWriteArrayList<>();\n+    this.task = () ->\n     {\n-        this.group = group;\n-        this.nextDeadlineNanos = nextDeadlineNanos;\n-        handleRelease = new BinaryLatch();\n-        cancelListeners = new CopyOnWriteArrayList<>();\n-        this.task = () ->\n+      try\n+      {\n+        task.run();\n+        // Use compareAndSet to avoid overriding any cancellation state.\n+        if (compareAndSet(SUBMITTED, RUNNABLE) && reschedulingDelayNanos > 0)\n         {\n-            try\n-            {\n-                task.run();\n-                // Use compareAndSet to avoid overriding any cancellation state.\n-                if ( compareAndSet( SUBMITTED, RUNNABLE ) && reschedulingDelayNanos > 0 )\n-                {\n-                    // We only reschedule if the rescheduling delay is greater than zero.\n-                    // A rescheduling delay of zero means this is a delayed task.\n-                    // If the rescheduling delay is greater than zero, then this is a recurring task.\n-                    this.nextDeadlineNanos += reschedulingDelayNanos;\n-                    scheduler.enqueueTask( this );\n-                }\n-            }\n-            catch ( Throwable e )\n-            {\n-                lastException = e;\n-                set( FAILED );\n-            }\n-        };\n-    }\n+          // We only reschedule if the rescheduling delay is greater than zero.\n+          // A rescheduling delay of zero means this is a delayed task.\n+          // If the rescheduling delay is greater than zero, then this is a recurring task.\n+          this.nextDeadlineNanos += reschedulingDelayNanos;\n+          scheduler.enqueueTask(this);\n+        }\n+      } catch (Throwable e)\n+      {\n+        lastException = e;\n+        set(FAILED);\n+      }\n+    };\n+  }\n \n-    void submitIfRunnable( ThreadPoolManager pools )\n+  void submitIfRunnable(ThreadPoolManager pools)\n+  {\n+    if (compareAndSet(RUNNABLE, SUBMITTED))\n     {\n-        if ( compareAndSet( RUNNABLE, SUBMITTED ) )\n-        {\n-            latestHandle = pools.submit( group, task );\n-            handleRelease.release();\n-        }\n+      latestHandle = pools.submit(group, task);\n+      handleRelease.release();\n     }\n+  }\n \n-    @Override\n-    public void cancel( boolean mayInterruptIfRunning )\n+  @Override\n+  public void cancel(boolean mayInterruptIfRunning)\n+  {\n+    set(FAILED);\n+    JobHandle handle = latestHandle;\n+    if (handle != null)\n     {\n-        set( FAILED );\n-        JobHandle handle = latestHandle;\n-        if ( handle != null )\n-        {\n-            handle.cancel( mayInterruptIfRunning );\n-        }\n-        for ( CancelListener cancelListener : cancelListeners )\n-        {\n-            cancelListener.cancelled( mayInterruptIfRunning );\n-        }\n-        // Release the handle to allow waitTermination() to observe the cancellation.\n-        handleRelease.release();\n+      handle.cancel(mayInterruptIfRunning);\n     }\n-\n-    @Override\n-    public void waitTermination() throws ExecutionException, InterruptedException\n+    for (CancelListener cancelListener : cancelListeners)\n     {\n-        handleRelease.await();\n-        JobHandle handleDelegate = this.latestHandle;\n-        if ( handleDelegate != null )\n-        {\n-            handleDelegate.waitTermination();\n-        }\n-        if ( get() == FAILED )\n-        {\n-            Throwable exception = this.lastException;\n-            if ( exception != null )\n-            {\n-                throw new ExecutionException( exception );\n-            }\n-            else\n-            {\n-                throw new CancellationException();\n-            }\n-        }\n+      cancelListener.cancelled(mayInterruptIfRunning);\n     }\n+    // Release the handle to allow waitTermination() to observe the cancellation.\n+    handleRelease.release();\n+  }\n \n-    @Override\n-    public void registerCancelListener( CancelListener listener )\n+  @Override\n+  public void waitTermination() throws ExecutionException, InterruptedException\n+  {\n+    handleRelease.await();\n+    JobHandle handleDelegate = this.latestHandle;\n+    if (handleDelegate != null)\n+    {\n+      handleDelegate.waitTermination();\n+    }\n+    if (get() == FAILED)\n     {\n-        cancelListeners.add( listener );\n+      Throwable exception = this.lastException;\n+      if (exception != null)\n+      {\n+        throw new ExecutionException(exception);\n+      } else\n+      {\n+        throw new CancellationException();\n+      }\n     }\n+  }\n+\n+  @Override\n+  public void registerCancelListener(CancelListener listener)\n+  {\n+    cancelListeners.add(listener);\n+  }\n }\n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1881/ScheduledJobHandle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1881/ScheduledJobHandle.java\nindex 74bf18f9e41..277c235de37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1881/ScheduledJobHandle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1881/ScheduledJobHandle.java\n@@ -69,9 +69,8 @@ final class ScheduledJobHandle extends AtomicInteger implements JobHandle\n     private volatile JobHandle latestHandle;\n     private volatile Throwable lastException;\n \n-    ScheduledJobHandle( TimeBasedTaskScheduler scheduler, JobScheduler.Group group, Runnable task,\n-                        long nextDeadlineNanos, long reschedulingDelayNanos )\n-    {\n+    ScheduledJobHandle( TimeBasedTaskScheduler scheduler, JobScheduler.Group group, Runnable task, long nextDeadlineNanos, long reschedulingDelayNanos )\n+{\n         this.group = group;\n         this.nextDeadlineNanos = nextDeadlineNanos;\n         handleRelease = new BinaryLatch();\n@@ -94,7 +93,8 @@ final class ScheduledJobHandle extends AtomicInteger implements JobHandle\n             catch ( Throwable e )\n             {\n                 lastException = e;\n-                set( FAILED );\n+\n+set( FAILED );\n             }\n         };\n     }\n@@ -134,7 +134,8 @@ final class ScheduledJobHandle extends AtomicInteger implements JobHandle\n         {\n             handleDelegate.waitTermination();\n         }\n-        if ( get() == FAILED )\n+\n+if ( get() == FAILED )\n         {\n             Throwable exception = this.lastException;\n             if ( exception != null )\n@@ -153,4 +154,4 @@ final class ScheduledJobHandle extends AtomicInteger implements JobHandle\n     {\n         cancelListeners.add( listener );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
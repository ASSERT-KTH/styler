{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "471",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.google.cloud.bigtable.data.v2.stub.metrics;\n\nimport io.opencensus.stats.Measure;\nimport io.opencensus.stats.Measure.MeasureDouble;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/471/RpcMeasureConstants.java\nindex f5830d05d3f..215c546570d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/471/RpcMeasureConstants.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.metrics;\n \n import io.opencensus.stats.Measure;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/471/RpcMeasureConstants.java\nindex f5830d05d3f..1083553b7bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/471/RpcMeasureConstants.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.metrics;\n \n import io.opencensus.stats.Measure;\n@@ -31,13 +32,19 @@ class RpcMeasureConstants {\n    */\n   public static final TagKey BIGTABLE_OP = TagKey.create(\"bigtable_op\");\n \n-  /** Tag key that represents the final status of the Bigtable operation. */\n+  /**\n+   * Tag key that represents the final status of the Bigtable operation.\n+   */\n   public static final TagKey BIGTABLE_STATUS = TagKey.create(\"bigtable_status\");\n \n-  /** Unit to represent counts. */\n+  /**\n+   * Unit to represent counts.\n+   */\n   private static final String COUNT = \"1\";\n \n-  /** Unit to represent milliseconds. */\n+  /**\n+   * Unit to represent milliseconds.\n+   */\n   private static final String MILLISECOND = \"ms\";\n \n   static final MeasureDouble BIGTABLE_OP_LATENCY =\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/471/RpcMeasureConstants.java\nindex f5830d05d3f..3984ebd95ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/471/RpcMeasureConstants.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.metrics;\n \n import io.opencensus.stats.Measure;\n@@ -21,6 +22,7 @@ import io.opencensus.stats.Measure.MeasureLong;\n import io.opencensus.tags.TagKey;\n \n class RpcMeasureConstants {\n+\n   /**\n    * Tag key that represents a Bigtable operation name.\n    *\n@@ -42,26 +44,18 @@ class RpcMeasureConstants {\n \n   static final MeasureDouble BIGTABLE_OP_LATENCY =\n       Measure.MeasureDouble.create(\n-          \"cloud.google.com/java/bigtable/op_latency\",\n-          \"Time between request being sent to last row received, \"\n-              + \"or terminal error of the last retry attempt.\",\n-          MILLISECOND);\n+          \"cloud.google.com/java/bigtable/op_latency\", \"Time between request being sent to last row received, \"\n+              + \"or terminal error of the last retry attempt.\", MILLISECOND);\n \n-  static final MeasureDouble BIGTABLE_READ_ROWS_FIRST_ROW_LATENCY =\n+static final MeasureDouble BIGTABLE_READ_ROWS_FIRST_ROW_LATENCY =\n       MeasureDouble.create(\n-          \"cloud.google.com/java/bigtable/read_rows_first_row_latency\",\n-          \"Time between request being sent to the first row received\",\n-          MILLISECOND);\n+          \"cloud.google.com/java/bigtable/read_rows_first_row_latency\", \"Time between request being sent to the first row received\", MILLISECOND);\n \n-  static final MeasureLong BIGTABLE_ROWS_READ_PER_OP =\n+static final MeasureLong BIGTABLE_ROWS_READ_PER_OP =\n       Measure.MeasureLong.create(\n-          \"cloud.google.com/java/bigtable/rows_read_per_op\",\n-          \"Number of rows received per ReadRows operation\",\n-          COUNT);\n+          \"cloud.google.com/java/bigtable/rows_read_per_op\", \"Number of rows received per ReadRows operation\", COUNT);\n \n-  static final MeasureLong BIGTABLE_MUTATE_ROWS_ENTRIES_PER_BATCH =\n+static final MeasureLong BIGTABLE_MUTATE_ROWS_ENTRIES_PER_BATCH =\n       Measure.MeasureLong.create(\n-          \"cloud.google.com/java/bigtable/mutations_per_batch\",\n-          \"Number of mutations per MutateRows request\",\n-          COUNT);\n-}\n+          \"cloud.google.com/java/bigtable/mutations_per_batch\", \"Number of mutations per MutateRows request\", COUNT);\n+  }\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 245).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 225).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'\"Number of rows received per ReadRows operation\"' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'\"Number of mutations per MutateRows request\"' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/471/RpcMeasureConstants.java\nindex f5830d05d3f..8b880cdf260 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/471/RpcMeasureConstants.java\n@@ -20,6 +20,7 @@ import io.opencensus.stats.Measure.MeasureDouble;\n import io.opencensus.stats.Measure.MeasureLong;\n import io.opencensus.tags.TagKey;\n \n+\n class RpcMeasureConstants {\n   /**\n    * Tag key that represents a Bigtable operation name.\n@@ -29,9 +30,11 @@ class RpcMeasureConstants {\n    * with {@link RpcMeasureConstants#BIGTABLE_OP}, the end user can get a sense how many attempts an\n    * operation took.\n    */\n+\n   public static final TagKey BIGTABLE_OP = TagKey.create(\"bigtable_op\");\n \n   /** Tag key that represents the final status of the Bigtable operation. */\n+\n   public static final TagKey BIGTABLE_STATUS = TagKey.create(\"bigtable_status\");\n \n   /** Unit to represent counts. */\n@@ -40,28 +43,15 @@ class RpcMeasureConstants {\n   /** Unit to represent milliseconds. */\n   private static final String MILLISECOND = \"ms\";\n \n-  static final MeasureDouble BIGTABLE_OP_LATENCY =\n-      Measure.MeasureDouble.create(\n-          \"cloud.google.com/java/bigtable/op_latency\",\n-          \"Time between request being sent to last row received, \"\n-              + \"or terminal error of the last retry attempt.\",\n-          MILLISECOND);\n+  static final MeasureDouble BIGTABLE_OP_LATENCY = Measure.MeasureDouble.create(\"cloud.google.com/java/bigtable/op_latency\", \"Time between request being sent to last row received, \" + \"or terminal error of the last retry attempt.\", MILLISECOND);\n \n-  static final MeasureDouble BIGTABLE_READ_ROWS_FIRST_ROW_LATENCY =\n-      MeasureDouble.create(\n-          \"cloud.google.com/java/bigtable/read_rows_first_row_latency\",\n-          \"Time between request being sent to the first row received\",\n-          MILLISECOND);\n+  static final MeasureDouble BIGTABLE_READ_ROWS_FIRST_ROW_LATENCY = MeasureDouble.create(\"cloud.google.com/java/bigtable/read_rows_first_row_latency\", \"Time between request being sent to the first row received\", MILLISECOND);\n \n-  static final MeasureLong BIGTABLE_ROWS_READ_PER_OP =\n-      Measure.MeasureLong.create(\n-          \"cloud.google.com/java/bigtable/rows_read_per_op\",\n-          \"Number of rows received per ReadRows operation\",\n-          COUNT);\n+  static final MeasureLong BIGTABLE_ROWS_READ_PER_OP = Measure.MeasureLong.create(\"cloud.google.com/java/bigtable/rows_read_per_op\",\n+    \"Number of rows received per ReadRows operation\",\n+      COUNT);\n \n-  static final MeasureLong BIGTABLE_MUTATE_ROWS_ENTRIES_PER_BATCH =\n-      Measure.MeasureLong.create(\n-          \"cloud.google.com/java/bigtable/mutations_per_batch\",\n-          \"Number of mutations per MutateRows request\",\n-          COUNT);\n-}\n+  static final MeasureLong BIGTABLE_MUTATE_ROWS_ENTRIES_PER_BATCH = Measure.MeasureLong.create(\"cloud.google.com/java/bigtable/mutations_per_batch\",\n+    \"Number of mutations per MutateRows request\",\n+      COUNT);\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/471/RpcMeasureConstants.java\nindex f5830d05d3f..215c546570d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/471/RpcMeasureConstants.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.metrics;\n \n import io.opencensus.stats.Measure;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/471/RpcMeasureConstants.java\nindex f5830d05d3f..215c546570d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/471/RpcMeasureConstants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/471/RpcMeasureConstants.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.metrics;\n \n import io.opencensus.stats.Measure;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
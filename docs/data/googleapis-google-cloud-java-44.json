{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "44",
    "information": {
        "errors": [
            {
                "line": "92",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 118).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /**\n   *  Specifies options relating to allowing the schema of the destination table to be updated as a side effect of the\n   *  load or query job.\n   */\n  public enum SchemaUpdateOption {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/44/JobInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/44/JobInfo.java\nindex 21b46869a36..69af67cdd5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/44/JobInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/44/JobInfo.java\n@@ -89,8 +89,8 @@ public class JobInfo implements Serializable {\n   }\n \n   /**\n-   *  Specifies options relating to allowing the schema of the destination table to be updated as a side effect of the\n-   *  load or query job.\n+   * Specifies options relating to allowing the schema of the destination table to be updated as a side effect of the\n+   * load or query job.\n    */\n   public enum SchemaUpdateOption {\n     /**\n@@ -154,7 +154,8 @@ public class JobInfo implements Serializable {\n     private String userEmail;\n     private JobConfiguration configuration;\n \n-    BuilderImpl() {}\n+    BuilderImpl() {\n+    }\n \n     BuilderImpl(JobInfo jobInfo) {\n       this.etag = jobInfo.etag;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "232",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/44/JobInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/44/JobInfo.java\nindex 21b46869a36..e6e9d80fbc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/44/JobInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/44/JobInfo.java\n@@ -57,7 +57,8 @@ public class JobInfo implements Serializable {\n    * Specifies whether the job is allowed to create new tables.\n    */\n   public enum CreateDisposition {\n-    /**\n+\n+  /**\n      * Configures the job to create the table if it does not exist.\n      */\n     CREATE_IF_NEEDED,\n@@ -72,7 +73,8 @@ public class JobInfo implements Serializable {\n    * Specifies the action that occurs if the destination table already exists.\n    */\n   public enum WriteDisposition {\n-    /**\n+\n+  /**\n      * Configures the job to overwrite the table data if table already exists.\n      */\n     WRITE_TRUNCATE,\n@@ -93,7 +95,8 @@ public class JobInfo implements Serializable {\n    *  load or query job.\n    */\n   public enum SchemaUpdateOption {\n-    /**\n+\n+  /**\n      * Allow adding a nullable field to the schema.\n      */\n     ALLOW_FIELD_ADDITION,\n@@ -196,8 +199,7 @@ public class JobInfo implements Serializable {\n       return this;\n     }\n \n-\n-    @Override\n+@Override\n     public Builder setJobId(JobId jobId) {\n       this.jobId = jobId;\n       return this;\n@@ -227,8 +229,7 @@ public class JobInfo implements Serializable {\n       return this;\n     }\n \n-\n-    @Override\n+@Override\n     public Builder setConfiguration(JobConfiguration configuration) {\n       this.configuration = configuration;\n       return this;\n@@ -347,9 +348,7 @@ public class JobInfo implements Serializable {\n \n   @Override\n   public boolean equals(Object obj) {\n-    return obj == this\n-        || obj != null\n-        && obj.getClass().equals(JobInfo.class)\n+    return obj == this || obj != null && obj.getClass().equals(JobInfo.class)\n         && Objects.equals(toPb(), ((JobInfo) obj).toPb());\n   }\n \n@@ -417,4 +416,4 @@ public class JobInfo implements Serializable {\n   static JobInfo fromPb(Job jobPb) {\n     return new BuilderImpl(jobPb).build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "342",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 265).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "353",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "354",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/44/JobInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/44/JobInfo.java\nindex 21b46869a36..0471fccd13d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/44/JobInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/44/JobInfo.java\n@@ -19,7 +19,6 @@ package com.google.cloud.bigquery;\n import com.google.api.services.bigquery.model.Job;\n import com.google.common.base.Function;\n import com.google.common.base.MoreObjects;\n-\n import java.io.Serializable;\n import java.util.Objects;\n \n@@ -32,18 +31,17 @@ import java.util.Objects;\n  *\n  * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs\">Jobs</a>\n  */\n-public class JobInfo implements Serializable {\n \n-  static final Function<Job, JobInfo> FROM_PB_FUNCTION =\n-      new Function<Job, JobInfo>() {\n-        @Override\n-        public JobInfo apply(Job pb) {\n-          return JobInfo.fromPb(pb);\n-        }\n-      };\n \n-  private static final long serialVersionUID = 2740548743267670124L;\n+public class JobInfo implements Serializable {\n \n+  static final Function<Job, JobInfo> FROM_PB_FUNCTION = new Function<Job, JobInfo>() {\n+@Override\n+public JobInfo apply(Job pb) {\n+  return JobInfo.fromPb(pb);\n+}\n+};\n+  private static final long serialVersionUID = 2740548743267670124L;\n   private final String etag;\n   private final String generatedId;\n   private final JobId jobId;\n@@ -56,57 +54,60 @@ public class JobInfo implements Serializable {\n   /**\n    * Specifies whether the job is allowed to create new tables.\n    */\n+\n   public enum CreateDisposition {\n     /**\n      * Configures the job to create the table if it does not exist.\n      */\n+\n     CREATE_IF_NEEDED,\n \n     /**\n      * Configures the job to fail with a not-found error if the table does not exist.\n-     */\n-    CREATE_NEVER\n+     */ CREATE_NEVER\n   }\n \n   /**\n    * Specifies the action that occurs if the destination table already exists.\n    */\n+\n   public enum WriteDisposition {\n     /**\n      * Configures the job to overwrite the table data if table already exists.\n      */\n+\n     WRITE_TRUNCATE,\n \n     /**\n      * Configures the job to append data to the table if it already exists.\n-     */\n-    WRITE_APPEND,\n+     */ WRITE_APPEND,\n \n     /**\n      * Configures the job to fail with a duplicate error if the table already exists.\n-     */\n-    WRITE_EMPTY\n+     */ WRITE_EMPTY\n   }\n \n   /**\n    *  Specifies options relating to allowing the schema of the destination table to be updated as a side effect of the\n    *  load or query job.\n    */\n+\n   public enum SchemaUpdateOption {\n     /**\n      * Allow adding a nullable field to the schema.\n      */\n+\n     ALLOW_FIELD_ADDITION,\n \n     /**\n      * Allow relaxing a required field in the original schema to nullable.\n-     */\n-    ALLOW_FIELD_RELAXATION\n+     */ ALLOW_FIELD_RELAXATION\n   }\n \n   /**\n    * A builder for {@code JobInfo} objects.\n    */\n+\n   public abstract static class Builder {\n \n     abstract Builder setEtag(String etag);\n@@ -117,6 +118,7 @@ public class JobInfo implements Serializable {\n     /**\n      * Sets the job identity.\n      */\n+\n     public abstract Builder setJobId(JobId jobId);\n \n     abstract Builder setSelfLink(String selfLink);\n@@ -135,11 +137,13 @@ public class JobInfo implements Serializable {\n      * from Google Cloud Storage into a table. Use {@link QueryJobConfiguration} for a job that runs\n      * a query.\n      */\n+\n     public abstract Builder setConfiguration(JobConfiguration configuration);\n \n     /**\n      * Creates a {@code JobInfo} object.\n      */\n+\n     public abstract JobInfo build();\n   }\n \n@@ -196,7 +200,6 @@ public class JobInfo implements Serializable {\n       return this;\n     }\n \n-\n     @Override\n     public Builder setJobId(JobId jobId) {\n       this.jobId = jobId;\n@@ -227,7 +230,6 @@ public class JobInfo implements Serializable {\n       return this;\n     }\n \n-\n     @Override\n     public Builder setConfiguration(JobConfiguration configuration) {\n       this.configuration = configuration;\n@@ -255,6 +257,7 @@ public class JobInfo implements Serializable {\n   /**\n    * Returns the hash of the job resource.\n    */\n+\n   public String getEtag() {\n     return etag;\n   }\n@@ -263,6 +266,7 @@ public class JobInfo implements Serializable {\n   /**\n    * Returns the service-generated id for the job.\n    */\n+\n   public String getGeneratedId() {\n     return generatedId;\n   }\n@@ -271,6 +275,7 @@ public class JobInfo implements Serializable {\n   /**\n    * Returns the job identity.\n    */\n+\n   public JobId getJobId() {\n     return jobId;\n   }\n@@ -280,6 +285,7 @@ public class JobInfo implements Serializable {\n    * Returns an URL that can be used to access the resource again. The returned URL can be used for\n    * GET requests.\n    */\n+\n   public String getSelfLink() {\n     return selfLink;\n   }\n@@ -289,6 +295,7 @@ public class JobInfo implements Serializable {\n    * Returns the status of this job. Examine this value when polling an asynchronous job to see if\n    * the job is complete.\n    */\n+\n   public JobStatus getStatus() {\n     return status;\n   }\n@@ -297,6 +304,7 @@ public class JobInfo implements Serializable {\n   /**\n    * Returns information about the job, including starting time and ending time of the job.\n    */\n+\n   @SuppressWarnings(\"unchecked\")\n   public <S extends JobStatistics> S getStatistics() {\n     return (S) statistics;\n@@ -306,6 +314,7 @@ public class JobInfo implements Serializable {\n   /**\n    * Returns the email address of the user who ran the job.\n    */\n+\n   public String getUserEmail() {\n     return userEmail;\n   }\n@@ -314,6 +323,7 @@ public class JobInfo implements Serializable {\n   /**\n    * Returns the job's configuration.\n    */\n+\n   @SuppressWarnings(\"unchecked\")\n   public <C extends JobConfiguration> C getConfiguration() {\n     return (C) configuration;\n@@ -322,22 +332,14 @@ public class JobInfo implements Serializable {\n   /**\n    * Returns a builder for the job object.\n    */\n+\n   public Builder toBuilder() {\n     return new BuilderImpl(this);\n   }\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n-        .add(\"job\", jobId)\n-        .add(\"status\", status)\n-        .add(\"statistics\", statistics)\n-        .add(\"userEmail\", userEmail)\n-        .add(\"etag\", etag)\n-        .add(\"generatedId\", generatedId)\n-        .add(\"selfLink\", selfLink)\n-        .add(\"configuration\", configuration)\n-        .toString();\n+    return MoreObjects.toStringHelper(this).add(\"job\", jobId).add(\"status\", status).add(\"statistics\", statistics).add(\"userEmail\", userEmail).add(\"etag\", etag).add(\"generatedId\", generatedId).add(\"selfLink\", selfLink).add(\"configuration\", configuration).toString();\n   }\n \n   @Override\n@@ -347,10 +349,9 @@ public class JobInfo implements Serializable {\n \n   @Override\n   public boolean equals(Object obj) {\n-    return obj == this\n-        || obj != null\n-        && obj.getClass().equals(JobInfo.class)\n-        && Objects.equals(toPb(), ((JobInfo) obj).toPb());\n+    return obj == this || obj != null\n+    && obj.getClass().equals(JobInfo.class)\n+    && Objects.equals(toPb(), ((JobInfo) obj).toPb());\n   }\n \n   JobInfo setProjectId(String projectId) {\n@@ -388,6 +389,7 @@ public class JobInfo implements Serializable {\n    * {@link LoadJobConfiguration} for a job that loads data from Google Cloud Storage into a table.\n    * Use {@link QueryJobConfiguration} for a job that runs a query.\n    */\n+\n   public static Builder newBuilder(JobConfiguration configuration) {\n     return new BuilderImpl().setConfiguration(configuration);\n   }\n@@ -399,6 +401,7 @@ public class JobInfo implements Serializable {\n    * data from Google Cloud Storage into a table. Use {@link QueryJobConfiguration} for a job that\n    * runs a query.\n    */\n+\n   public static JobInfo of(JobConfiguration configuration) {\n     return newBuilder(configuration).build();\n   }\n@@ -410,6 +413,7 @@ public class JobInfo implements Serializable {\n    * {@link LoadJobConfiguration} for a job that loads data from Google Cloud Storage into a table.\n    * Use {@link QueryJobConfiguration} for a job that runs a query.\n    */\n+\n   public static JobInfo of(JobId jobId, JobConfiguration configuration) {\n     return newBuilder(configuration).setJobId(jobId).build();\n   }\n@@ -417,4 +421,4 @@ public class JobInfo implements Serializable {\n   static JobInfo fromPb(Job jobPb) {\n     return new BuilderImpl(jobPb).build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 64
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
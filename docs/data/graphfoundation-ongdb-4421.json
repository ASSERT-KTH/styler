{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4421",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4421/ReadableRaftState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4421/ReadableRaftState.java\nindex dc3f84e1b06..1927a478cd0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4421/ReadableRaftState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4421/ReadableRaftState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.state;\n \n import java.util.Set;\n@@ -28,39 +29,39 @@ import org.neo4j.causalclustering.identity.MemberId;\n \n public interface ReadableRaftState\n {\n-    MemberId myself();\n+  MemberId myself();\n \n-    Set<MemberId> votingMembers();\n+  Set<MemberId> votingMembers();\n \n-    Set<MemberId> replicationMembers();\n+  Set<MemberId> replicationMembers();\n \n-    long term();\n+  long term();\n \n-    MemberId leader();\n+  MemberId leader();\n \n-    LeaderInfo leaderInfo();\n+  LeaderInfo leaderInfo();\n \n-    long leaderCommit();\n+  long leaderCommit();\n \n-    MemberId votedFor();\n+  MemberId votedFor();\n \n-    Set<MemberId> votesForMe();\n+  Set<MemberId> votesForMe();\n \n-    Set<MemberId> heartbeatResponses();\n+  Set<MemberId> heartbeatResponses();\n \n-    long lastLogIndexBeforeWeBecameLeader();\n+  long lastLogIndexBeforeWeBecameLeader();\n \n-    FollowerStates<MemberId> followerStates();\n+  FollowerStates<MemberId> followerStates();\n \n-    ReadableRaftLog entryLog();\n+  ReadableRaftLog entryLog();\n \n-    long commitIndex();\n+  long commitIndex();\n \n-    boolean supportPreVoting();\n+  boolean supportPreVoting();\n \n-    boolean isPreElection();\n+  boolean isPreElection();\n \n-    Set<MemberId> preVotesForMe();\n+  Set<MemberId> preVotesForMe();\n \n-    boolean refusesToBeLeader();\n+  boolean refusesToBeLeader();\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4421/ReadableRaftState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4421/ReadableRaftState.java\nindex dc3f84e1b06..3d5e5cc93d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4421/ReadableRaftState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4421/ReadableRaftState.java\n@@ -63,4 +63,4 @@ public interface ReadableRaftState\n     Set<MemberId> preVotesForMe();\n \n     boolean refusesToBeLeader();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
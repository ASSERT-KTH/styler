{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "638",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * Returns the requested blob in this bucket or {@code null} if not found.\n   *\n   * <p>Example of getting a blob in the bucket, only if its metageneration matches a value, otherwise\n   * a {@link StorageException} is thrown.\n   * <pre> {@code\n   * String blobName = \"my_blob_name\";",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "638",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "638",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/27/Bucket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/27/Bucket.java\nindex d342eb92146..a472862ee88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/27/Bucket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/27/Bucket.java\n@@ -106,7 +106,7 @@ public class Bucket extends BucketInfo {\n     }\n \n     static Storage.BucketSourceOption[] toSourceOptions(BucketInfo bucketInfo,\n-         BucketSourceOption... options) {\n+                                                        BucketSourceOption... options) {\n       Storage.BucketSourceOption[] convertedOptions =\n           new Storage.BucketSourceOption[options.length];\n       int index = 0;\n@@ -117,7 +117,7 @@ public class Bucket extends BucketInfo {\n     }\n \n     static Storage.BucketGetOption[] toGetOptions(BucketInfo bucketInfo,\n-        BucketSourceOption... options) {\n+                                                  BucketSourceOption... options) {\n       Storage.BucketGetOption[] convertedOptions = new Storage.BucketGetOption[options.length];\n       int index = 0;\n       for (BucketSourceOption option : options) {\n@@ -227,10 +227,10 @@ public class Bucket extends BucketInfo {\n       Set<StorageRpc.Option> optionSet =\n           Sets.immutableEnumSet(Lists.transform(Arrays.asList(options), TO_ENUM));\n       checkArgument(!(optionSet.contains(StorageRpc.Option.IF_METAGENERATION_NOT_MATCH)\n-          && optionSet.contains(StorageRpc.Option.IF_METAGENERATION_MATCH)),\n+              && optionSet.contains(StorageRpc.Option.IF_METAGENERATION_MATCH)),\n           \"metagenerationMatch and metagenerationNotMatch options can not be both provided\");\n       checkArgument(!(optionSet.contains(StorageRpc.Option.IF_GENERATION_NOT_MATCH)\n-          && optionSet.contains(StorageRpc.Option.IF_GENERATION_MATCH)),\n+              && optionSet.contains(StorageRpc.Option.IF_GENERATION_MATCH)),\n           \"Only one option of generationMatch, doesNotExist or generationNotMatch can be provided\");\n       Storage.BlobTargetOption[] convertedOptions = new Storage.BlobTargetOption[options.length];\n       BlobInfo targetInfo = info;\n@@ -391,10 +391,10 @@ public class Bucket extends BucketInfo {\n       Set<Storage.BlobWriteOption.Option> optionSet =\n           Sets.immutableEnumSet(Lists.transform(Arrays.asList(options), TO_ENUM));\n       checkArgument(!(optionSet.contains(Storage.BlobWriteOption.Option.IF_METAGENERATION_NOT_MATCH)\n-          && optionSet.contains(Storage.BlobWriteOption.Option.IF_METAGENERATION_MATCH)),\n+              && optionSet.contains(Storage.BlobWriteOption.Option.IF_METAGENERATION_MATCH)),\n           \"metagenerationMatch and metagenerationNotMatch options can not be both provided\");\n       checkArgument(!(optionSet.contains(Storage.BlobWriteOption.Option.IF_GENERATION_NOT_MATCH)\n-          && optionSet.contains(Storage.BlobWriteOption.Option.IF_GENERATION_MATCH)),\n+              && optionSet.contains(Storage.BlobWriteOption.Option.IF_GENERATION_MATCH)),\n           \"Only one option of generationMatch, doesNotExist or generationNotMatch can be provided\");\n       Storage.BlobWriteOption[] convertedOptions = new Storage.BlobWriteOption[options.length];\n       BlobInfo writeInfo = info;\n@@ -643,7 +643,7 @@ public class Bucket extends BucketInfo {\n    * Blob blob = bucket.get(blobName, BlobGetOption.generationMatch(generation));\n    * }</pre>\n    *\n-   * @param blob name of the requested blob\n+   * @param blob    name of the requested blob\n    * @param options blob search options\n    * @throws StorageException upon failure\n    */\n@@ -724,10 +724,10 @@ public class Bucket extends BucketInfo {\n    * Blob blob = bucket.create(blobName, \"Hello, World!\".getBytes(UTF_8), \"text/plain\");\n    * }</pre>\n    *\n-   * @param blob a blob name\n-   * @param content the blob content\n+   * @param blob        a blob name\n+   * @param content     the blob content\n    * @param contentType the blob content type\n-   * @param options options for blob creation\n+   * @param options     options for blob creation\n    * @return a complete blob information\n    * @throws StorageException upon failure\n    */\n@@ -750,15 +750,15 @@ public class Bucket extends BucketInfo {\n    * Blob blob = bucket.create(blobName, content, \"text/plain\");\n    * }</pre>\n    *\n-   * @param blob a blob name\n-   * @param content the blob content as a stream\n+   * @param blob        a blob name\n+   * @param content     the blob content as a stream\n    * @param contentType the blob content type\n-   * @param options options for blob creation\n+   * @param options     options for blob creation\n    * @return a complete blob information\n    * @throws StorageException upon failure\n    */\n   public Blob create(String blob, InputStream content, String contentType,\n-      BlobWriteOption... options) {\n+                     BlobWriteOption... options) {\n     BlobInfo blobInfo = BlobInfo.builder(BlobId.of(name(), blob)).contentType(contentType).build();\n     StorageRpc.Tuple<BlobInfo, Storage.BlobWriteOption[]> write =\n         BlobWriteOption.toWriteOptions(blobInfo, options);\n@@ -777,7 +777,7 @@ public class Bucket extends BucketInfo {\n    * Blob blob = bucket.create(blobName, \"Hello, World!\".getBytes(UTF_8));\n    * }</pre>\n    *\n-   * @param blob a blob name\n+   * @param blob    a blob name\n    * @param content the blob content\n    * @param options options for blob creation\n    * @return a complete blob information\n@@ -802,7 +802,7 @@ public class Bucket extends BucketInfo {\n    * Blob blob = bucket.create(blobName, content);\n    * }</pre>\n    *\n-   * @param blob a blob name\n+   * @param blob    a blob name\n    * @param content the blob content as a stream\n    * @param options options for blob creation\n    * @return a complete blob information\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "292",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "348",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "357",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "366",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "412",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "635",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/27/Bucket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/27/Bucket.java\nindex d342eb92146..7328b969ecb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/27/Bucket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/27/Bucket.java\n@@ -75,7 +75,7 @@ public class Bucket extends BucketInfo {\n           return Storage.BucketSourceOption.metagenerationNotMatch(bucketInfo.metageneration());\n         default:\n           throw new AssertionError(\"Unexpected enum value\");\n-      }\n+  }\n     }\n \n     private Storage.BucketGetOption toGetOption(BucketInfo bucketInfo) {\n@@ -86,7 +86,7 @@ public class Bucket extends BucketInfo {\n           return Storage.BucketGetOption.metagenerationNotMatch(bucketInfo.metageneration());\n         default:\n           throw new AssertionError(\"Unexpected enum value\");\n-      }\n+  }\n     }\n \n     /**\n@@ -105,11 +105,10 @@ public class Bucket extends BucketInfo {\n       return new BucketSourceOption(StorageRpc.Option.IF_METAGENERATION_NOT_MATCH);\n     }\n \n-    static Storage.BucketSourceOption[] toSourceOptions(BucketInfo bucketInfo,\n-         BucketSourceOption... options) {\n-      Storage.BucketSourceOption[] convertedOptions =\n+    static Storage.BucketSourceOption[] toSourceOptions(BucketInfo bucketInfo, BucketSourceOption... options) {\n+  Storage.BucketSourceOption[] convertedOptions =\n           new Storage.BucketSourceOption[options.length];\n-      int index = 0;\n+int index = 0;\n       for (BucketSourceOption option : options) {\n         convertedOptions[index++] = option.toSourceOption(bucketInfo);\n       }\n@@ -167,7 +166,7 @@ public class Bucket extends BucketInfo {\n               Storage.BlobTargetOption.metagenerationNotMatch());\n         default:\n           throw new AssertionError(\"Unexpected enum value\");\n-      }\n+  }\n     }\n \n     /**\n@@ -290,7 +289,7 @@ public class Bucket extends BucketInfo {\n               Storage.BlobWriteOption.crc32cMatch());\n         default:\n           throw new AssertionError(\"Unexpected enum value\");\n-      }\n+  }\n     }\n \n     private BlobWriteOption(Storage.BlobWriteOption.Option option, Object value) {\n@@ -346,8 +345,7 @@ public class Bucket extends BucketInfo {\n      * together with {@link #generationMatch(long)} or {@link #doesNotExist()}.\n      */\n     public static BlobWriteOption generationNotMatch(long generation) {\n-      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_GENERATION_NOT_MATCH,\n-          generation);\n+      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_GENERATION_NOT_MATCH, generation);\n     }\n \n     /**\n@@ -356,8 +354,7 @@ public class Bucket extends BucketInfo {\n      * together with {@link #metagenerationNotMatch(long)}.\n      */\n     public static BlobWriteOption metagenerationMatch(long metageneration) {\n-      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_METAGENERATION_MATCH,\n-          metageneration);\n+      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_METAGENERATION_MATCH, metageneration);\n     }\n \n     /**\n@@ -366,8 +363,7 @@ public class Bucket extends BucketInfo {\n      * with {@link #metagenerationMatch(long)}.\n      */\n     public static BlobWriteOption metagenerationNotMatch(long metageneration) {\n-      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_METAGENERATION_NOT_MATCH,\n-          metageneration);\n+      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_METAGENERATION_NOT_MATCH, metageneration);\n     }\n \n     /**\n@@ -412,7 +408,8 @@ public class Bucket extends BucketInfo {\n    * Builder for {@code Bucket}.\n    */\n   public static class Builder extends BucketInfo.Builder {\n-    private final Storage storage;\n+\n+  private final Storage storage;\n     private final BucketInfo.BuilderImpl infoBuilder;\n \n     Builder(Bucket bucket) {\n@@ -853,4 +850,4 @@ public class Bucket extends BucketInfo {\n   static Bucket fromPb(Storage storage, com.google.api.services.storage.model.Bucket bucketPb) {\n     return new Bucket(storage, new BucketInfo.BuilderImpl(BucketInfo.fromPb(bucketPb)));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "72",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 28, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "229",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "231",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "238",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "252",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "253",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "255",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "256",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "257",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "261",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "263",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "265",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "265",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "267",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "270",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "271",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "271",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "273",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "273",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "276",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "276",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "279",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "279",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "281",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "283",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "345",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "355",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "365",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "386",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "387",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "389",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "389",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "391",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "391",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "638",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "740",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "764",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "766",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "791",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "816",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/27/Bucket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/27/Bucket.java\nindex d342eb92146..9c8d6c85b86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/27/Bucket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/27/Bucket.java\n@@ -30,7 +30,6 @@ import com.google.common.base.Function;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Lists;\n import com.google.common.collect.Sets;\n-\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.ObjectInputStream;\n@@ -49,16 +48,18 @@ import java.util.Set;\n  * {@link BucketInfo}.\n  * </p>\n  */\n+\n+\n public class Bucket extends BucketInfo {\n \n   private static final long serialVersionUID = 8574601739542252586L;\n-\n   private final StorageOptions options;\n   private transient Storage storage;\n \n   /**\n    * Class for specifying bucket source options when {@code Bucket} methods are used.\n    */\n+\n   public static class BucketSourceOption extends Option {\n \n     private static final long serialVersionUID = 6928872234155522371L;\n@@ -68,24 +69,24 @@ public class Bucket extends BucketInfo {\n     }\n \n     private Storage.BucketSourceOption toSourceOption(BucketInfo bucketInfo) {\n-      switch (rpcOption()) {\n+      switch(rpcOption()) {\n         case IF_METAGENERATION_MATCH:\n-          return Storage.BucketSourceOption.metagenerationMatch(bucketInfo.metageneration());\n+                            return Storage.BucketSourceOption.metagenerationMatch(bucketInfo.metageneration());\n         case IF_METAGENERATION_NOT_MATCH:\n-          return Storage.BucketSourceOption.metagenerationNotMatch(bucketInfo.metageneration());\n+                            return Storage.BucketSourceOption.metagenerationNotMatch(bucketInfo.metageneration());\n         default:\n-          throw new AssertionError(\"Unexpected enum value\");\n+                            throw new AssertionError(\"Unexpected enum value\");\n       }\n     }\n \n     private Storage.BucketGetOption toGetOption(BucketInfo bucketInfo) {\n-      switch (rpcOption()) {\n+      switch(rpcOption()) {\n         case IF_METAGENERATION_MATCH:\n-          return Storage.BucketGetOption.metagenerationMatch(bucketInfo.metageneration());\n+                            return Storage.BucketGetOption.metagenerationMatch(bucketInfo.metageneration());\n         case IF_METAGENERATION_NOT_MATCH:\n-          return Storage.BucketGetOption.metagenerationNotMatch(bucketInfo.metageneration());\n+                            return Storage.BucketGetOption.metagenerationNotMatch(bucketInfo.metageneration());\n         default:\n-          throw new AssertionError(\"Unexpected enum value\");\n+                            throw new AssertionError(\"Unexpected enum value\");\n       }\n     }\n \n@@ -93,6 +94,7 @@ public class Bucket extends BucketInfo {\n      * Returns an option for bucket's metageneration match. If this option is used the request will\n      * fail if metageneration does not match.\n      */\n+\n     public static BucketSourceOption metagenerationMatch() {\n       return new BucketSourceOption(StorageRpc.Option.IF_METAGENERATION_MATCH);\n     }\n@@ -101,27 +103,25 @@ public class Bucket extends BucketInfo {\n      * Returns an option for bucket's metageneration mismatch. If this option is used the request\n      * will fail if metageneration matches.\n      */\n+\n     public static BucketSourceOption metagenerationNotMatch() {\n       return new BucketSourceOption(StorageRpc.Option.IF_METAGENERATION_NOT_MATCH);\n     }\n \n-    static Storage.BucketSourceOption[] toSourceOptions(BucketInfo bucketInfo,\n-         BucketSourceOption... options) {\n-      Storage.BucketSourceOption[] convertedOptions =\n-          new Storage.BucketSourceOption[options.length];\n+    static Storage.BucketSourceOption[] toSourceOptions(BucketInfo bucketInfo, BucketSourceOption... options) {\n+      Storage.BucketSourceOption[] convertedOptions = new Storage.BucketSourceOption[options.length];\n       int index = 0;\n       for (BucketSourceOption option : options) {\n-        convertedOptions[index++] = option.toSourceOption(bucketInfo);\n+        convertedOptions[index ++] = option.toSourceOption(bucketInfo);\n       }\n       return convertedOptions;\n     }\n \n-    static Storage.BucketGetOption[] toGetOptions(BucketInfo bucketInfo,\n-        BucketSourceOption... options) {\n+    static Storage.BucketGetOption[] toGetOptions(BucketInfo bucketInfo, BucketSourceOption... options) {\n       Storage.BucketGetOption[] convertedOptions = new Storage.BucketGetOption[options.length];\n       int index = 0;\n       for (BucketSourceOption option : options) {\n-        convertedOptions[index++] = option.toGetOption(bucketInfo);\n+        convertedOptions[index ++] = option.toGetOption(bucketInfo);\n       }\n       return convertedOptions;\n     }\n@@ -130,15 +130,15 @@ public class Bucket extends BucketInfo {\n   /**\n    * Class for specifying blob target options when {@code Bucket} methods are used.\n    */\n+\n   public static class BlobTargetOption extends Option {\n \n-    private static final Function<BlobTargetOption, StorageRpc.Option> TO_ENUM =\n-        new Function<BlobTargetOption, StorageRpc.Option>() {\n-          @Override\n-          public StorageRpc.Option apply(BlobTargetOption blobTargetOption) {\n-            return blobTargetOption.rpcOption();\n-          }\n-        };\n+    private static final Function<BlobTargetOption, StorageRpc.Option> TO_ENUM = new Function<BlobTargetOption, StorageRpc.Option>() {\n+@Override\n+public StorageRpc.Option apply(BlobTargetOption blobTargetOption) {\n+  return blobTargetOption.rpcOption();\n+}\n+};\n     private static final long serialVersionUID = 8345296337342509425L;\n \n     private BlobTargetOption(StorageRpc.Option rpcOption, Object value) {\n@@ -147,32 +147,30 @@ public class Bucket extends BucketInfo {\n \n     private StorageRpc.Tuple<BlobInfo, Storage.BlobTargetOption> toTargetOption(BlobInfo blobInfo) {\n       BlobId blobId = blobInfo.blobId();\n-      switch (rpcOption()) {\n+      switch(rpcOption()) {\n         case PREDEFINED_ACL:\n-          return StorageRpc.Tuple.of(blobInfo,\n-              Storage.BlobTargetOption.predefinedAcl((Storage.PredefinedAcl) value()));\n+                            return StorageRpc.Tuple.of(blobInfo, Storage.BlobTargetOption.predefinedAcl((Storage.PredefinedAcl) value()));\n         case IF_GENERATION_MATCH:\n-          blobId = BlobId.of(blobId.bucket(), blobId.name(), (Long) value());\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().blobId(blobId).build(),\n-              Storage.BlobTargetOption.generationMatch());\n+                            blobId = BlobId.of(blobId.bucket(), blobId.name(), (Long) value());\n+                            return StorageRpc.Tuple.of(blobInfo.toBuilder().blobId(blobId).build(), Storage.BlobTargetOption.generationMatch());\n         case IF_GENERATION_NOT_MATCH:\n-          blobId = BlobId.of(blobId.bucket(), blobId.name(), (Long) value());\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().blobId(blobId).build(),\n-              Storage.BlobTargetOption.generationNotMatch());\n+                            blobId = BlobId.of(blobId.bucket(), blobId.name(), (Long) value());\n+                            return StorageRpc.Tuple.of(blobInfo.toBuilder().blobId(blobId).build(), Storage.BlobTargetOption.generationNotMatch());\n         case IF_METAGENERATION_MATCH:\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().metageneration((Long) value()).build(),\n-              Storage.BlobTargetOption.metagenerationMatch());\n+                            return StorageRpc.Tuple.of(blobInfo.toBuilder().metageneration((Long) value()).build(),\n+                              Storage.BlobTargetOption.metagenerationMatch());\n         case IF_METAGENERATION_NOT_MATCH:\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().metageneration((Long) value()).build(),\n-              Storage.BlobTargetOption.metagenerationNotMatch());\n+                            return StorageRpc.Tuple.of(blobInfo.toBuilder().metageneration((Long) value()).build(),\n+                              Storage.BlobTargetOption.metagenerationNotMatch());\n         default:\n-          throw new AssertionError(\"Unexpected enum value\");\n+                            throw new AssertionError(\"Unexpected enum value\");\n       }\n     }\n \n     /**\n      * Returns an option for specifying blob's predefined ACL configuration.\n      */\n+\n     public static BlobTargetOption predefinedAcl(Storage.PredefinedAcl acl) {\n       return new BlobTargetOption(StorageRpc.Option.PREDEFINED_ACL, acl);\n     }\n@@ -182,6 +180,7 @@ public class Bucket extends BucketInfo {\n      * This option can not be provided together with {@link #generationMatch(long)} or\n      * {@link #generationNotMatch(long)}.\n      */\n+\n     public static BlobTargetOption doesNotExist() {\n       return new BlobTargetOption(StorageRpc.Option.IF_GENERATION_MATCH, 0L);\n     }\n@@ -191,6 +190,7 @@ public class Bucket extends BucketInfo {\n      * fail if generation does not match the provided value. This option can not be provided\n      * together with {@link #generationNotMatch(long)} or {@link #doesNotExist()}.\n      */\n+\n     public static BlobTargetOption generationMatch(long generation) {\n       return new BlobTargetOption(StorageRpc.Option.IF_GENERATION_MATCH, generation);\n     }\n@@ -200,6 +200,7 @@ public class Bucket extends BucketInfo {\n      * will fail if blob's generation matches the provided value. This option can not be provided\n      * together with {@link #generationMatch(long)} or {@link #doesNotExist()}.\n      */\n+\n     public static BlobTargetOption generationNotMatch(long generation) {\n       return new BlobTargetOption(StorageRpc.Option.IF_GENERATION_NOT_MATCH, generation);\n     }\n@@ -209,6 +210,7 @@ public class Bucket extends BucketInfo {\n      * fail if metageneration does not match the provided value. This option can not be provided\n      * together with {@link #metagenerationNotMatch(long)}.\n      */\n+\n     public static BlobTargetOption metagenerationMatch(long metageneration) {\n       return new BlobTargetOption(StorageRpc.Option.IF_METAGENERATION_MATCH, metageneration);\n     }\n@@ -218,28 +220,24 @@ public class Bucket extends BucketInfo {\n      * fail if metageneration matches the provided value. This option can not be provided together\n      * with {@link #metagenerationMatch(long)}.\n      */\n+\n     public static BlobTargetOption metagenerationNotMatch(long metageneration) {\n       return new BlobTargetOption(StorageRpc.Option.IF_METAGENERATION_NOT_MATCH, metageneration);\n     }\n \n-    static StorageRpc.Tuple<BlobInfo, Storage.BlobTargetOption[]> toTargetOptions(\n-        BlobInfo info, BlobTargetOption... options) {\n-      Set<StorageRpc.Option> optionSet =\n-          Sets.immutableEnumSet(Lists.transform(Arrays.asList(options), TO_ENUM));\n+    static StorageRpc.Tuple<BlobInfo, Storage.BlobTargetOption[]> toTargetOptions(BlobInfo info, BlobTargetOption... options) {\n+      Set<StorageRpc.Option> optionSet = Sets.immutableEnumSet(Lists.transform(Arrays.asList(options), TO_ENUM));\n       checkArgument(!(optionSet.contains(StorageRpc.Option.IF_METAGENERATION_NOT_MATCH)\n-          && optionSet.contains(StorageRpc.Option.IF_METAGENERATION_MATCH)),\n-          \"metagenerationMatch and metagenerationNotMatch options can not be both provided\");\n+      && optionSet.contains(StorageRpc.Option.IF_METAGENERATION_MATCH)), \"metagenerationMatch and metagenerationNotMatch options can not be both provided\");\n       checkArgument(!(optionSet.contains(StorageRpc.Option.IF_GENERATION_NOT_MATCH)\n-          && optionSet.contains(StorageRpc.Option.IF_GENERATION_MATCH)),\n-          \"Only one option of generationMatch, doesNotExist or generationNotMatch can be provided\");\n+      && optionSet.contains(StorageRpc.Option.IF_GENERATION_MATCH)), \"Only one option of generationMatch, doesNotExist or generationNotMatch can be provided\");\n       Storage.BlobTargetOption[] convertedOptions = new Storage.BlobTargetOption[options.length];\n       BlobInfo targetInfo = info;\n       int index = 0;\n       for (BlobTargetOption option : options) {\n-        StorageRpc.Tuple<BlobInfo, Storage.BlobTargetOption> target =\n-            option.toTargetOption(targetInfo);\n+        StorageRpc.Tuple<BlobInfo, Storage.BlobTargetOption> target = option.toTargetOption(targetInfo);\n         targetInfo = target.x();\n-        convertedOptions[index++] = target.y();\n+        convertedOptions[index ++] = target.y();\n       }\n       return StorageRpc.Tuple.of(targetInfo, convertedOptions);\n     }\n@@ -248,48 +246,41 @@ public class Bucket extends BucketInfo {\n   /**\n    * Class for specifying blob write options when {@code Bucket} methods are used.\n    */\n+\n   public static class BlobWriteOption implements Serializable {\n \n-    private static final Function<BlobWriteOption, Storage.BlobWriteOption.Option> TO_ENUM =\n-        new Function<BlobWriteOption, Storage.BlobWriteOption.Option>() {\n-          @Override\n-          public Storage.BlobWriteOption.Option apply(BlobWriteOption blobWriteOption) {\n-            return blobWriteOption.option;\n-          }\n-        };\n+    private static final Function<BlobWriteOption, Storage.BlobWriteOption.Option> TO_ENUM = new Function<BlobWriteOption, Storage.BlobWriteOption.Option>() {\n+@Override\n+public Storage.BlobWriteOption.Option apply(BlobWriteOption blobWriteOption) {\n+  return blobWriteOption.option;\n+}\n+};\n     private static final long serialVersionUID = 4722190734541993114L;\n-\n     private final Storage.BlobWriteOption.Option option;\n     private final Object value;\n-\n     private StorageRpc.Tuple<BlobInfo, Storage.BlobWriteOption> toWriteOption(BlobInfo blobInfo) {\n       BlobId blobId = blobInfo.blobId();\n-      switch (option) {\n+      switch(option) {\n         case PREDEFINED_ACL:\n-          return StorageRpc.Tuple.of(blobInfo,\n-              Storage.BlobWriteOption.predefinedAcl((Storage.PredefinedAcl) value));\n+                       return StorageRpc.Tuple.of(blobInfo, Storage.BlobWriteOption.predefinedAcl((Storage.PredefinedAcl) value));\n         case IF_GENERATION_MATCH:\n-          blobId = BlobId.of(blobId.bucket(), blobId.name(), (Long) value);\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().blobId(blobId).build(),\n-              Storage.BlobWriteOption.generationMatch());\n+                       blobId = BlobId.of(blobId.bucket(), blobId.name(), (Long) value);\n+                       return StorageRpc.Tuple.of(blobInfo.toBuilder().blobId(blobId).build(), Storage.BlobWriteOption.generationMatch());\n         case IF_GENERATION_NOT_MATCH:\n-          blobId = BlobId.of(blobId.bucket(), blobId.name(), (Long) value);\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().blobId(blobId).build(),\n-              Storage.BlobWriteOption.generationNotMatch());\n+                       blobId = BlobId.of(blobId.bucket(), blobId.name(), (Long) value);\n+                       return StorageRpc.Tuple.of(blobInfo.toBuilder().blobId(blobId).build(), Storage.BlobWriteOption.generationNotMatch());\n         case IF_METAGENERATION_MATCH:\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().metageneration((Long) value).build(),\n-              Storage.BlobWriteOption.metagenerationMatch());\n+                       return StorageRpc.Tuple.of(blobInfo.toBuilder().metageneration((Long) value).build(),\n+                         Storage.BlobWriteOption.metagenerationMatch());\n         case IF_METAGENERATION_NOT_MATCH:\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().metageneration((Long) value).build(),\n-              Storage.BlobWriteOption.metagenerationNotMatch());\n+                       return StorageRpc.Tuple.of(blobInfo.toBuilder().metageneration((Long) value).build(),\n+                         Storage.BlobWriteOption.metagenerationNotMatch());\n         case IF_MD5_MATCH:\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().md5((String) value).build(),\n-              Storage.BlobWriteOption.md5Match());\n+                       return StorageRpc.Tuple.of(blobInfo.toBuilder().md5((String) value).build(), Storage.BlobWriteOption.md5Match());\n         case IF_CRC32C_MATCH:\n-          return StorageRpc.Tuple.of(blobInfo.toBuilder().crc32c((String) value).build(),\n-              Storage.BlobWriteOption.crc32cMatch());\n+                       return StorageRpc.Tuple.of(blobInfo.toBuilder().crc32c((String) value).build(), Storage.BlobWriteOption.crc32cMatch());\n         default:\n-          throw new AssertionError(\"Unexpected enum value\");\n+                       throw new AssertionError(\"Unexpected enum value\");\n       }\n     }\n \n@@ -312,12 +303,14 @@ public class Bucket extends BucketInfo {\n         return false;\n       }\n       final BlobWriteOption other = (BlobWriteOption) obj;\n-      return this.option == other.option && Objects.equals(this.value, other.value);\n+      return this.option == other.option\n+        && Objects.equals(this.value, other.value);\n     }\n \n     /**\n      * Returns an option for specifying blob's predefined ACL configuration.\n      */\n+\n     public static BlobWriteOption predefinedAcl(Storage.PredefinedAcl acl) {\n       return new BlobWriteOption(Storage.BlobWriteOption.Option.PREDEFINED_ACL, acl);\n     }\n@@ -327,6 +320,7 @@ public class Bucket extends BucketInfo {\n      * This option can not be provided together with {@link #generationMatch(long)} or\n      * {@link #generationNotMatch(long)}.\n      */\n+\n     public static BlobWriteOption doesNotExist() {\n       return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_GENERATION_MATCH, 0L);\n     }\n@@ -336,6 +330,7 @@ public class Bucket extends BucketInfo {\n      * fail if generation does not match the provided value. This option can not be provided\n      * together with {@link #generationNotMatch(long)} or {@link #doesNotExist()}.\n      */\n+\n     public static BlobWriteOption generationMatch(long generation) {\n       return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_GENERATION_MATCH, generation);\n     }\n@@ -345,9 +340,9 @@ public class Bucket extends BucketInfo {\n      * will fail if generation matches the provided value. This option can not be provided\n      * together with {@link #generationMatch(long)} or {@link #doesNotExist()}.\n      */\n+\n     public static BlobWriteOption generationNotMatch(long generation) {\n-      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_GENERATION_NOT_MATCH,\n-          generation);\n+      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_GENERATION_NOT_MATCH, generation);\n     }\n \n     /**\n@@ -355,9 +350,9 @@ public class Bucket extends BucketInfo {\n      * fail if metageneration does not match the provided value. This option can not be provided\n      * together with {@link #metagenerationNotMatch(long)}.\n      */\n+\n     public static BlobWriteOption metagenerationMatch(long metageneration) {\n-      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_METAGENERATION_MATCH,\n-          metageneration);\n+      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_METAGENERATION_MATCH, metageneration);\n     }\n \n     /**\n@@ -365,15 +360,16 @@ public class Bucket extends BucketInfo {\n      * fail if metageneration matches the provided value. This option can not be provided together\n      * with {@link #metagenerationMatch(long)}.\n      */\n+\n     public static BlobWriteOption metagenerationNotMatch(long metageneration) {\n-      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_METAGENERATION_NOT_MATCH,\n-          metageneration);\n+      return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_METAGENERATION_NOT_MATCH, metageneration);\n     }\n \n     /**\n      * Returns an option for blob's data MD5 hash match. If this option is used the request will\n      * fail if blobs' data MD5 hash does not match the provided value.\n      */\n+\n     public static BlobWriteOption md5Match(String md5) {\n       return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_MD5_MATCH, md5);\n     }\n@@ -382,27 +378,24 @@ public class Bucket extends BucketInfo {\n      * Returns an option for blob's data CRC32C checksum match. If this option is used the request\n      * will fail if blobs' data CRC32C checksum does not match the provided value.\n      */\n+\n     public static BlobWriteOption crc32cMatch(String crc32c) {\n       return new BlobWriteOption(Storage.BlobWriteOption.Option.IF_CRC32C_MATCH, crc32c);\n     }\n \n-    static StorageRpc.Tuple<BlobInfo, Storage.BlobWriteOption[]> toWriteOptions(\n-        BlobInfo info, BlobWriteOption... options) {\n-      Set<Storage.BlobWriteOption.Option> optionSet =\n-          Sets.immutableEnumSet(Lists.transform(Arrays.asList(options), TO_ENUM));\n+    static StorageRpc.Tuple<BlobInfo, Storage.BlobWriteOption[]> toWriteOptions(BlobInfo info, BlobWriteOption... options) {\n+      Set<Storage.BlobWriteOption.Option> optionSet = Sets.immutableEnumSet(Lists.transform(Arrays.asList(options), TO_ENUM));\n       checkArgument(!(optionSet.contains(Storage.BlobWriteOption.Option.IF_METAGENERATION_NOT_MATCH)\n-          && optionSet.contains(Storage.BlobWriteOption.Option.IF_METAGENERATION_MATCH)),\n-          \"metagenerationMatch and metagenerationNotMatch options can not be both provided\");\n+      && optionSet.contains(Storage.BlobWriteOption.Option.IF_METAGENERATION_MATCH)), \"metagenerationMatch and metagenerationNotMatch options can not be both provided\");\n       checkArgument(!(optionSet.contains(Storage.BlobWriteOption.Option.IF_GENERATION_NOT_MATCH)\n-          && optionSet.contains(Storage.BlobWriteOption.Option.IF_GENERATION_MATCH)),\n-          \"Only one option of generationMatch, doesNotExist or generationNotMatch can be provided\");\n+      && optionSet.contains(Storage.BlobWriteOption.Option.IF_GENERATION_MATCH)), \"Only one option of generationMatch, doesNotExist or generationNotMatch can be provided\");\n       Storage.BlobWriteOption[] convertedOptions = new Storage.BlobWriteOption[options.length];\n       BlobInfo writeInfo = info;\n       int index = 0;\n       for (BlobWriteOption option : options) {\n         StorageRpc.Tuple<BlobInfo, Storage.BlobWriteOption> write = option.toWriteOption(writeInfo);\n         writeInfo = write.x();\n-        convertedOptions[index++] = write.y();\n+        convertedOptions[index ++] = write.y();\n       }\n       return StorageRpc.Tuple.of(writeInfo, convertedOptions);\n     }\n@@ -411,7 +404,9 @@ public class Bucket extends BucketInfo {\n   /**\n    * Builder for {@code Bucket}.\n    */\n+\n   public static class Builder extends BucketInfo.Builder {\n+\n     private final Storage storage;\n     private final BucketInfo.BuilderImpl infoBuilder;\n \n@@ -544,6 +539,7 @@ public class Bucket extends BucketInfo {\n    * @return true if this bucket exists, false otherwise\n    * @throws StorageException upon failure\n    */\n+\n   public boolean exists(BucketSourceOption... options) {\n     int length = options.length;\n     Storage.BucketGetOption[] getOptions = Arrays.copyOf(toGetOptions(this, options), length + 1);\n@@ -567,6 +563,7 @@ public class Bucket extends BucketInfo {\n    * @return a {@code Bucket} object with latest information or {@code null} if not found\n    * @throws StorageException upon failure\n    */\n+\n   public Bucket reload(BucketSourceOption... options) {\n     return storage.get(name(), toGetOptions(this, options));\n   }\n@@ -587,6 +584,7 @@ public class Bucket extends BucketInfo {\n    * @return a {@code Bucket} object with updated information\n    * @throws StorageException upon failure\n    */\n+\n   public Bucket update(BucketTargetOption... options) {\n     return storage.update(this, options);\n   }\n@@ -609,6 +607,7 @@ public class Bucket extends BucketInfo {\n    * @return {@code true} if bucket was deleted, {@code false} if it was not found\n    * @throws StorageException upon failure\n    */\n+\n   public boolean delete(BucketSourceOption... options) {\n     return storage.delete(name(), toSourceOptions(this, options));\n   }\n@@ -628,6 +627,7 @@ public class Bucket extends BucketInfo {\n    * @param options options for listing blobs\n    * @throws StorageException upon failure\n    */\n+\n   public Page<Blob> list(BlobListOption... options) {\n     return storage.list(name(), options);\n   }\n@@ -647,6 +647,7 @@ public class Bucket extends BucketInfo {\n    * @param options blob search options\n    * @throws StorageException upon failure\n    */\n+\n   public Blob get(String blob, BlobGetOption... options) {\n     return storage.get(BlobId.of(name(), blob), options);\n   }\n@@ -672,6 +673,7 @@ public class Bucket extends BucketInfo {\n    * @return an immutable list of {@code Blob} objects\n    * @throws StorageException upon failure\n    */\n+\n   public List<Blob> get(String blobName1, String blobName2, String... blobNames) {\n     List<BlobId> blobIds = Lists.newArrayListWithCapacity(blobNames.length + 2);\n     blobIds.add(BlobId.of(name(), blobName1));\n@@ -704,6 +706,7 @@ public class Bucket extends BucketInfo {\n    * @return an immutable list of {@code Blob} objects\n    * @throws StorageException upon failure\n    */\n+\n   public List<Blob> get(Iterable<String> blobNames) {\n     ImmutableList.Builder<BlobId> builder = ImmutableList.builder();\n     for (String blobName : blobNames) {\n@@ -731,10 +734,10 @@ public class Bucket extends BucketInfo {\n    * @return a complete blob information\n    * @throws StorageException upon failure\n    */\n+\n   public Blob create(String blob, byte[] content, String contentType, BlobTargetOption... options) {\n     BlobInfo blobInfo = BlobInfo.builder(BlobId.of(name(), blob)).contentType(contentType).build();\n-    StorageRpc.Tuple<BlobInfo, Storage.BlobTargetOption[]> target =\n-        BlobTargetOption.toTargetOptions(blobInfo, options);\n+    StorageRpc.Tuple<BlobInfo, Storage.BlobTargetOption[]> target = BlobTargetOption.toTargetOptions(blobInfo, options);\n     return storage.create(target.x(), content, target.y());\n   }\n \n@@ -757,11 +760,10 @@ public class Bucket extends BucketInfo {\n    * @return a complete blob information\n    * @throws StorageException upon failure\n    */\n-  public Blob create(String blob, InputStream content, String contentType,\n-      BlobWriteOption... options) {\n+\n+  public Blob create(String blob, InputStream content, String contentType, BlobWriteOption... options) {\n     BlobInfo blobInfo = BlobInfo.builder(BlobId.of(name(), blob)).contentType(contentType).build();\n-    StorageRpc.Tuple<BlobInfo, Storage.BlobWriteOption[]> write =\n-        BlobWriteOption.toWriteOptions(blobInfo, options);\n+    StorageRpc.Tuple<BlobInfo, Storage.BlobWriteOption[]> write = BlobWriteOption.toWriteOptions(blobInfo, options);\n     return storage.create(write.x(), content, write.y());\n   }\n \n@@ -783,10 +785,10 @@ public class Bucket extends BucketInfo {\n    * @return a complete blob information\n    * @throws StorageException upon failure\n    */\n+\n   public Blob create(String blob, byte[] content, BlobTargetOption... options) {\n     BlobInfo blobInfo = BlobInfo.builder(BlobId.of(name(), blob)).build();\n-    StorageRpc.Tuple<BlobInfo, Storage.BlobTargetOption[]> target =\n-        BlobTargetOption.toTargetOptions(blobInfo, options);\n+    StorageRpc.Tuple<BlobInfo, Storage.BlobTargetOption[]> target = BlobTargetOption.toTargetOptions(blobInfo, options);\n     return storage.create(target.x(), content, target.y());\n   }\n \n@@ -808,16 +810,17 @@ public class Bucket extends BucketInfo {\n    * @return a complete blob information\n    * @throws StorageException upon failure\n    */\n+\n   public Blob create(String blob, InputStream content, BlobWriteOption... options) {\n     BlobInfo blobInfo = BlobInfo.builder(BlobId.of(name(), blob)).build();\n-    StorageRpc.Tuple<BlobInfo, Storage.BlobWriteOption[]> write =\n-        BlobWriteOption.toWriteOptions(blobInfo, options);\n+    StorageRpc.Tuple<BlobInfo, Storage.BlobWriteOption[]> write = BlobWriteOption.toWriteOptions(blobInfo, options);\n     return storage.create(write.x(), content, write.y());\n   }\n \n   /**\n    * Returns the bucket's {@code Storage} object used to issue requests.\n    */\n+\n   public Storage storage() {\n     return storage;\n   }\n@@ -837,7 +840,7 @@ public class Bucket extends BucketInfo {\n     }\n     Bucket other = (Bucket) obj;\n     return Objects.equals(toPb(), other.toPb())\n-        && Objects.equals(options, other.options);\n+      && Objects.equals(options, other.options);\n   }\n \n   @Override\n@@ -853,4 +856,4 @@ public class Bucket extends BucketInfo {\n   static Bucket fromPb(Storage storage, com.google.api.services.storage.model.Bucket bucketPb) {\n     return new Bucket(storage, new BucketInfo.BuilderImpl(BucketInfo.fromPb(bucketPb)));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 141
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "638",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "638",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
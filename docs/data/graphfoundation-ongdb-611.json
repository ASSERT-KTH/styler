{
    "project_name": "graphfoundation-ongdb",
    "error_id": "611",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "94",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/611/BackupStrategyCoordinatorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/611/BackupStrategyCoordinatorFactory.java\nindex 0eaf8fcdce6..36bb52c9ef0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/611/BackupStrategyCoordinatorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/611/BackupStrategyCoordinatorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.util.List;\n@@ -37,56 +38,56 @@ import org.neo4j.logging.LogProvider;\n  */\n class BackupStrategyCoordinatorFactory\n {\n-    private final LogProvider logProvider;\n-    private final ConsistencyCheckService consistencyCheckService;\n-    private final AddressResolver addressResolver;\n-    private final OutsideWorld outsideWorld;\n+  private final LogProvider logProvider;\n+  private final ConsistencyCheckService consistencyCheckService;\n+  private final AddressResolver addressResolver;\n+  private final OutsideWorld outsideWorld;\n \n-    BackupStrategyCoordinatorFactory( BackupModule backupModule )\n-    {\n-        this.logProvider = backupModule.getLogProvider();\n-        this.outsideWorld = backupModule.getOutsideWorld();\n+  BackupStrategyCoordinatorFactory(BackupModule backupModule)\n+  {\n+    this.logProvider = backupModule.getLogProvider();\n+    this.outsideWorld = backupModule.getOutsideWorld();\n \n-        this.consistencyCheckService = new ConsistencyCheckService();\n-        this.addressResolver = new AddressResolver();\n-    }\n+    this.consistencyCheckService = new ConsistencyCheckService();\n+    this.addressResolver = new AddressResolver();\n+  }\n \n-    /**\n-     * Construct a wrapper of supported backup strategies\n-     *\n-     * @param onlineBackupContext the input of the backup tool, such as CLI arguments, config etc.\n-     * @param backupProtocolService the underlying backup implementation for HA and single node instances\n-     * @param backupDelegator the backup implementation used for CC backups\n-     * @param pageCache the page cache used moving files\n-     * @return strategy coordinator that handles the which backup strategies are tried and establishes if a backup was successful or not\n-     */\n-    BackupStrategyCoordinator backupStrategyCoordinator(\n-            OnlineBackupContext onlineBackupContext, BackupProtocolService backupProtocolService,\n-            BackupDelegator backupDelegator, PageCache pageCache )\n-    {\n-        FileSystemAbstraction fs = outsideWorld.fileSystem();\n-        BackupCopyService copyService = new BackupCopyService( fs, pageCache, new FileMoveProvider( pageCache, fs ) );\n-        ProgressMonitorFactory progressMonitorFactory = ProgressMonitorFactory.textual( outsideWorld.errorStream() );\n-        BackupRecoveryService recoveryService = new BackupRecoveryService();\n-        long timeout = onlineBackupContext.getRequiredArguments().getTimeout();\n-        Config config = onlineBackupContext.getConfig();\n+  /**\n+   * Construct a wrapper of supported backup strategies\n+   *\n+   * @param onlineBackupContext   the input of the backup tool, such as CLI arguments, config etc.\n+   * @param backupProtocolService the underlying backup implementation for HA and single node instances\n+   * @param backupDelegator       the backup implementation used for CC backups\n+   * @param pageCache             the page cache used moving files\n+   * @return strategy coordinator that handles the which backup strategies are tried and establishes if a backup was successful or not\n+   */\n+  BackupStrategyCoordinator backupStrategyCoordinator(\n+      OnlineBackupContext onlineBackupContext, BackupProtocolService backupProtocolService,\n+      BackupDelegator backupDelegator, PageCache pageCache)\n+  {\n+    FileSystemAbstraction fs = outsideWorld.fileSystem();\n+    BackupCopyService copyService = new BackupCopyService(fs, pageCache, new FileMoveProvider(pageCache, fs));\n+    ProgressMonitorFactory progressMonitorFactory = ProgressMonitorFactory.textual(outsideWorld.errorStream());\n+    BackupRecoveryService recoveryService = new BackupRecoveryService();\n+    long timeout = onlineBackupContext.getRequiredArguments().getTimeout();\n+    Config config = onlineBackupContext.getConfig();\n \n-        StoreFiles storeFiles = new StoreFiles( fs, pageCache );\n-        BackupStrategy ccStrategy = new CausalClusteringBackupStrategy( backupDelegator, addressResolver, logProvider, storeFiles );\n-        BackupStrategy haStrategy = new HaBackupStrategy( backupProtocolService, addressResolver, logProvider, timeout );\n+    StoreFiles storeFiles = new StoreFiles(fs, pageCache);\n+    BackupStrategy ccStrategy = new CausalClusteringBackupStrategy(backupDelegator, addressResolver, logProvider, storeFiles);\n+    BackupStrategy haStrategy = new HaBackupStrategy(backupProtocolService, addressResolver, logProvider, timeout);\n \n-        BackupStrategyWrapper ccStrategyWrapper = wrap( ccStrategy, copyService, pageCache, config, recoveryService );\n-        BackupStrategyWrapper haStrategyWrapper = wrap( haStrategy, copyService, pageCache, config, recoveryService );\n-        StrategyResolverService strategyResolverService = new StrategyResolverService( haStrategyWrapper, ccStrategyWrapper );\n-        List<BackupStrategyWrapper> strategies =\n-                strategyResolverService.getStrategies( onlineBackupContext.getRequiredArguments().getSelectedBackupProtocol() );\n+    BackupStrategyWrapper ccStrategyWrapper = wrap(ccStrategy, copyService, pageCache, config, recoveryService);\n+    BackupStrategyWrapper haStrategyWrapper = wrap(haStrategy, copyService, pageCache, config, recoveryService);\n+    StrategyResolverService strategyResolverService = new StrategyResolverService(haStrategyWrapper, ccStrategyWrapper);\n+    List<BackupStrategyWrapper> strategies =\n+        strategyResolverService.getStrategies(onlineBackupContext.getRequiredArguments().getSelectedBackupProtocol());\n \n-        return new BackupStrategyCoordinator( consistencyCheckService, outsideWorld, logProvider, progressMonitorFactory, strategies );\n-    }\n+    return new BackupStrategyCoordinator(consistencyCheckService, outsideWorld, logProvider, progressMonitorFactory, strategies);\n+  }\n \n-    private BackupStrategyWrapper wrap( BackupStrategy strategy, BackupCopyService copyService, PageCache pageCache,\n-                                        Config config, BackupRecoveryService recoveryService )\n-    {\n-        return new BackupStrategyWrapper( strategy, copyService, pageCache, config, recoveryService, logProvider ) ;\n-    }\n+  private BackupStrategyWrapper wrap(BackupStrategy strategy, BackupCopyService copyService, PageCache pageCache,\n+                                     Config config, BackupRecoveryService recoveryService)\n+  {\n+    return new BackupStrategyWrapper(strategy, copyService, pageCache, config, recoveryService, logProvider);\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/611/BackupStrategyCoordinatorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/611/BackupStrategyCoordinatorFactory.java\nindex 0eaf8fcdce6..c3ac739d6ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/611/BackupStrategyCoordinatorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/611/BackupStrategyCoordinatorFactory.java\n@@ -46,8 +46,7 @@ class BackupStrategyCoordinatorFactory\n     {\n         this.logProvider = backupModule.getLogProvider();\n         this.outsideWorld = backupModule.getOutsideWorld();\n-\n-        this.consistencyCheckService = new ConsistencyCheckService();\n+this.consistencyCheckService = new ConsistencyCheckService();\n         this.addressResolver = new AddressResolver();\n     }\n \n@@ -60,8 +59,7 @@ class BackupStrategyCoordinatorFactory\n      * @param pageCache the page cache used moving files\n      * @return strategy coordinator that handles the which backup strategies are tried and establishes if a backup was successful or not\n      */\n-    BackupStrategyCoordinator backupStrategyCoordinator(\n-            OnlineBackupContext onlineBackupContext, BackupProtocolService backupProtocolService,\n+    BackupStrategyCoordinator backupStrategyCoordinator( OnlineBackupContext onlineBackupContext, BackupProtocolService backupProtocolService,\n             BackupDelegator backupDelegator, PageCache pageCache )\n     {\n         FileSystemAbstraction fs = outsideWorld.fileSystem();\n@@ -70,23 +68,18 @@ class BackupStrategyCoordinatorFactory\n         BackupRecoveryService recoveryService = new BackupRecoveryService();\n         long timeout = onlineBackupContext.getRequiredArguments().getTimeout();\n         Config config = onlineBackupContext.getConfig();\n-\n-        StoreFiles storeFiles = new StoreFiles( fs, pageCache );\n+StoreFiles storeFiles = new StoreFiles( fs, pageCache );\n         BackupStrategy ccStrategy = new CausalClusteringBackupStrategy( backupDelegator, addressResolver, logProvider, storeFiles );\n         BackupStrategy haStrategy = new HaBackupStrategy( backupProtocolService, addressResolver, logProvider, timeout );\n-\n-        BackupStrategyWrapper ccStrategyWrapper = wrap( ccStrategy, copyService, pageCache, config, recoveryService );\n+BackupStrategyWrapper ccStrategyWrapper = wrap( ccStrategy, copyService, pageCache, config, recoveryService );\n         BackupStrategyWrapper haStrategyWrapper = wrap( haStrategy, copyService, pageCache, config, recoveryService );\n         StrategyResolverService strategyResolverService = new StrategyResolverService( haStrategyWrapper, ccStrategyWrapper );\n-        List<BackupStrategyWrapper> strategies =\n-                strategyResolverService.getStrategies( onlineBackupContext.getRequiredArguments().getSelectedBackupProtocol() );\n-\n-        return new BackupStrategyCoordinator( consistencyCheckService, outsideWorld, logProvider, progressMonitorFactory, strategies );\n+        List<BackupStrategyWrapper> strategies = strategyResolverService.getStrategies( onlineBackupContext.getRequiredArguments().getSelectedBackupProtocol() );\n+return new BackupStrategyCoordinator( consistencyCheckService, outsideWorld, logProvider, progressMonitorFactory, strategies );\n     }\n \n-    private BackupStrategyWrapper wrap( BackupStrategy strategy, BackupCopyService copyService, PageCache pageCache,\n-                                        Config config, BackupRecoveryService recoveryService )\n-    {\n-        return new BackupStrategyWrapper( strategy, copyService, pageCache, config, recoveryService, logProvider ) ;\n+    private BackupStrategyWrapper wrap( BackupStrategy strategy, BackupCopyService copyService, PageCache pageCache, Config config, BackupRecoveryService recoveryService )\n+{\n+        return new BackupStrategyWrapper( strategy, copyService, pageCache, config, recoveryService, logProvider );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
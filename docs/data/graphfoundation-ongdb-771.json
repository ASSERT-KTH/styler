{
    "project_name": "graphfoundation-ongdb",
    "error_id": "771",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/771/StoreMigrationParticipant.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/771/StoreMigrationParticipant.java\nindex b45193ef888..3b2b49071be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/771/StoreMigrationParticipant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/771/StoreMigrationParticipant.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.File;\n@@ -28,51 +29,53 @@ import org.neo4j.kernel.impl.util.monitoring.ProgressReporter;\n \n public interface StoreMigrationParticipant\n {\n-    /**\n-     * Default empty implementation of StoreMigrationParticipant\n-     */\n-    StoreMigrationParticipant NOT_PARTICIPATING = new AbstractStoreMigrationParticipant( \"Nothing\" );\n+  /**\n+   * Default empty implementation of StoreMigrationParticipant\n+   */\n+  StoreMigrationParticipant NOT_PARTICIPATING = new AbstractStoreMigrationParticipant(\"Nothing\");\n \n-    /**\n-     * Performs migration of data this participant is responsible for if necessary.\n-     *\n-     * Data to migrate sits in {@code sourceDirectory} and must not be modified.\n-     * Migrated data should go into {@code targetStoreDir}, where source and target dirs are\n-     * highest level database store dirs.\n-     *\n-     * @param storeDir data to migrate.\n-     * @param migrationDir place to migrate to.\n-     * @param progress migration progress monitor\n-     * @param versionToMigrateFrom the version to migrate from\n-     * @param versionToMigrateTo the version to migrate to\n-     * @throws IOException if there was an error migrating.\n-     * @throws UnsatisfiedDependencyException if one or more dependencies were unsatisfied.\n-     */\n-    void migrate( File storeDir, File migrationDir, ProgressReporter progress,\n-            String versionToMigrateFrom, String versionToMigrateTo ) throws IOException;\n+  /**\n+   * Performs migration of data this participant is responsible for if necessary.\n+   * <p>\n+   * Data to migrate sits in {@code sourceDirectory} and must not be modified.\n+   * Migrated data should go into {@code targetStoreDir}, where source and target dirs are\n+   * highest level database store dirs.\n+   *\n+   * @param storeDir             data to migrate.\n+   * @param migrationDir         place to migrate to.\n+   * @param progress             migration progress monitor\n+   * @param versionToMigrateFrom the version to migrate from\n+   * @param versionToMigrateTo   the version to migrate to\n+   * @throws IOException                    if there was an error migrating.\n+   * @throws UnsatisfiedDependencyException if one or more dependencies were unsatisfied.\n+   */\n+  void migrate(File storeDir, File migrationDir, ProgressReporter progress,\n+               String versionToMigrateFrom, String versionToMigrateTo) throws IOException;\n \n-    /**\n-     * After a successful migration, move all affected files from {@code upgradeDirectory} over to\n-     * the {@code workingDirectory}, effectively activating the migration changes.\n-     * @param migrationDir directory where the\n-     * {@link #migrate(File, File, ProgressReporter, String, String) migration} put its files.\n-     * @param storeDir directory the store directory of the to move the migrated files to.\n-     * @param versionToMigrateFrom the version we have migrated from\n-     * @param versionToMigrateTo the version we want to migrate to\n-     * @throws IOException if unable to move one or more files.\n-     */\n-    void moveMigratedFiles( File migrationDir, File storeDir, String versionToMigrateFrom, String versionToMigrateTo )\n-            throws IOException;\n+  /**\n+   * After a successful migration, move all affected files from {@code upgradeDirectory} over to\n+   * the {@code workingDirectory}, effectively activating the migration changes.\n+   *\n+   * @param migrationDir         directory where the\n+   *                             {@link #migrate(File, File, ProgressReporter, String, String) migration} put its files.\n+   * @param storeDir             directory the store directory of the to move the migrated files to.\n+   * @param versionToMigrateFrom the version we have migrated from\n+   * @param versionToMigrateTo   the version we want to migrate to\n+   * @throws IOException if unable to move one or more files.\n+   */\n+  void moveMigratedFiles(File migrationDir, File storeDir, String versionToMigrateFrom, String versionToMigrateTo)\n+      throws IOException;\n \n-    /**\n-     * Delete any file from {@code migrationDir} produced during migration.\n-     * @param migrationDir the directory where migrated files end up.\n-     * @throws IOException if unable to clean up one or more files.\n-     */\n-    void cleanup( File migrationDir ) throws IOException;\n+  /**\n+   * Delete any file from {@code migrationDir} produced during migration.\n+   *\n+   * @param migrationDir the directory where migrated files end up.\n+   * @throws IOException if unable to clean up one or more files.\n+   */\n+  void cleanup(File migrationDir) throws IOException;\n \n-    /**\n-     * @return descriptive name of this migration participant.\n-     */\n-    String getName();\n+  /**\n+   * @return descriptive name of this migration participant.\n+   */\n+  String getName();\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/771/StoreMigrationParticipant.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/771/StoreMigrationParticipant.java\nindex b45193ef888..8cc298e84cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/771/StoreMigrationParticipant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/771/StoreMigrationParticipant.java\n@@ -51,7 +51,7 @@ public interface StoreMigrationParticipant\n     void migrate( File storeDir, File migrationDir, ProgressReporter progress,\n             String versionToMigrateFrom, String versionToMigrateTo ) throws IOException;\n \n-    /**\n+/**\n      * After a successful migration, move all affected files from {@code upgradeDirectory} over to\n      * the {@code workingDirectory}, effectively activating the migration changes.\n      * @param migrationDir directory where the\n@@ -61,10 +61,9 @@ public interface StoreMigrationParticipant\n      * @param versionToMigrateTo the version we want to migrate to\n      * @throws IOException if unable to move one or more files.\n      */\n-    void moveMigratedFiles( File migrationDir, File storeDir, String versionToMigrateFrom, String versionToMigrateTo )\n-            throws IOException;\n+    void moveMigratedFiles( File migrationDir, File storeDir, String versionToMigrateFrom, String versionToMigrateTo ) throws IOException;\n \n-    /**\n+/**\n      * Delete any file from {@code migrationDir} produced during migration.\n      * @param migrationDir the directory where migrated files end up.\n      * @throws IOException if unable to clean up one or more files.\n@@ -75,4 +74,4 @@ public interface StoreMigrationParticipant\n      * @return descriptive name of this migration participant.\n      */\n     String getName();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
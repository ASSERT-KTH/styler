{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4370",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "113",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4370/CoreStateMachinesModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4370/CoreStateMachinesModule.java\nindex fd8d23c1c99..81aac06b3bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4370/CoreStateMachinesModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4370/CoreStateMachinesModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines;\n \n import java.io.File;\n@@ -95,150 +96,150 @@ import static org.neo4j.causalclustering.core.CausalClusteringSettings.string_bl\n \n public class CoreStateMachinesModule\n {\n-    public static final String ID_ALLOCATION_NAME = \"id-allocation\";\n-    public static final String LOCK_TOKEN_NAME = \"lock-token\";\n-\n-    public final IdGeneratorFactory idGeneratorFactory;\n-    public final IdTypeConfigurationProvider idTypeConfigurationProvider;\n-    public final LabelTokenHolder labelTokenHolder;\n-    public final PropertyKeyTokenHolder propertyKeyTokenHolder;\n-    public final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n-    public final Locks lockManager;\n-    public final CommitProcessFactory commitProcessFactory;\n-\n-    public final CoreStateMachines coreStateMachines;\n-    public final BooleanSupplier freeIdCondition;\n-\n-    public CoreStateMachinesModule( MemberId myself, PlatformModule platformModule, File clusterStateDirectory,\n-            Config config, RaftReplicator replicator, RaftMachine raftMachine, Dependencies dependencies,\n-            LocalDatabase localDatabase )\n-    {\n-        StateStorage<IdAllocationState> idAllocationState;\n-        StateStorage<ReplicatedLockTokenState> lockTokenState;\n-        final LifeSupport life = platformModule.life;\n-        final FileSystemAbstraction fileSystem = platformModule.fileSystem;\n-        LogService logging = platformModule.logging;\n-        LogProvider logProvider = logging.getInternalLogProvider();\n-\n-        lockTokenState = life.add(\n-                new DurableStateStorage<>( fileSystem, clusterStateDirectory, LOCK_TOKEN_NAME,\n-                        new ReplicatedLockTokenState.Marshal( new MemberId.Marshal() ),\n-                        config.get( replicated_lock_token_state_size ), logProvider ) );\n-\n-        idAllocationState = life.add(\n-                new DurableStateStorage<>( fileSystem, clusterStateDirectory, ID_ALLOCATION_NAME,\n-                        new IdAllocationState.Marshal(),\n-                        config.get( id_alloc_state_size ), logProvider ) );\n-\n-        ReplicatedIdAllocationStateMachine idAllocationStateMachine =\n-                new ReplicatedIdAllocationStateMachine( idAllocationState );\n-\n-        Map<IdType,Integer> allocationSizes = getIdTypeAllocationSizeFromConfig( config );\n-\n-        ReplicatedIdRangeAcquirer idRangeAcquirer =\n-                new ReplicatedIdRangeAcquirer( replicator, idAllocationStateMachine, allocationSizes, myself,\n-                        logProvider );\n-\n-        idTypeConfigurationProvider = new EnterpriseIdTypeConfigurationProvider( config );\n-        CommandIndexTracker commandIndexTracker = new CommandIndexTracker();\n-        freeIdCondition = new IdReusabilityCondition( commandIndexTracker, raftMachine, myself );\n-        this.idGeneratorFactory =\n-                createIdGeneratorFactory( fileSystem, idRangeAcquirer, logProvider, idTypeConfigurationProvider );\n-\n-        dependencies.satisfyDependency( new IdBasedStoreEntityCounters( this.idGeneratorFactory ) );\n-\n-        TokenRegistry<RelationshipTypeToken> relationshipTypeTokenRegistry = new TokenRegistry<>( \"RelationshipType\" );\n-        ReplicatedRelationshipTypeTokenHolder relationshipTypeTokenHolder =\n-                new ReplicatedRelationshipTypeTokenHolder( relationshipTypeTokenRegistry, replicator,\n-                        this.idGeneratorFactory, dependencies );\n-\n-        TokenRegistry<Token> propertyKeyTokenRegistry = new TokenRegistry<>( \"PropertyKey\" );\n-        ReplicatedPropertyKeyTokenHolder propertyKeyTokenHolder =\n-                new ReplicatedPropertyKeyTokenHolder( propertyKeyTokenRegistry, replicator, this.idGeneratorFactory,\n-                        dependencies );\n-\n-        TokenRegistry<Token> labelTokenRegistry = new TokenRegistry<>( \"Label\" );\n-        ReplicatedLabelTokenHolder labelTokenHolder =\n-                new ReplicatedLabelTokenHolder( labelTokenRegistry, replicator, this.idGeneratorFactory, dependencies );\n-\n-        ReplicatedLockTokenStateMachine replicatedLockTokenStateMachine =\n-                new ReplicatedLockTokenStateMachine( lockTokenState );\n-\n-        VersionContextSupplier versionContextSupplier = platformModule.versionContextSupplier;\n-        ReplicatedTokenStateMachine<Token> labelTokenStateMachine =\n-                new ReplicatedTokenStateMachine<>( labelTokenRegistry, new Token.Factory(), logProvider,\n-                        versionContextSupplier );\n-\n-        ReplicatedTokenStateMachine<Token> propertyKeyTokenStateMachine =\n-                new ReplicatedTokenStateMachine<>( propertyKeyTokenRegistry, new Token.Factory(), logProvider,\n-                        versionContextSupplier );\n-\n-        ReplicatedTokenStateMachine<RelationshipTypeToken> relationshipTypeTokenStateMachine =\n-                new ReplicatedTokenStateMachine<>( relationshipTypeTokenRegistry, new RelationshipTypeToken.Factory(),\n-                        logProvider, versionContextSupplier );\n-\n-        PageCursorTracerSupplier cursorTracerSupplier = platformModule.tracers.pageCursorTracerSupplier;\n-        ReplicatedTransactionStateMachine replicatedTxStateMachine =\n-                new ReplicatedTransactionStateMachine( commandIndexTracker, replicatedLockTokenStateMachine,\n-                        config.get( state_machine_apply_max_batch_size ), logProvider, cursorTracerSupplier,\n-                        versionContextSupplier );\n-\n-        dependencies.satisfyDependencies( replicatedTxStateMachine );\n-\n-        lockManager = createLockManager( config, platformModule.clock, logging, replicator, myself, raftMachine,\n-                replicatedLockTokenStateMachine );\n-\n-        RecoverConsensusLogIndex consensusLogIndexRecovery = new RecoverConsensusLogIndex( dependencies, logProvider );\n-\n-        coreStateMachines = new CoreStateMachines( replicatedTxStateMachine, labelTokenStateMachine,\n-                relationshipTypeTokenStateMachine, propertyKeyTokenStateMachine, replicatedLockTokenStateMachine,\n-                idAllocationStateMachine, new DummyMachine(), localDatabase, consensusLogIndexRecovery );\n-\n-        commitProcessFactory = ( appender, applier, ignored ) ->\n-        {\n-            localDatabase.registerCommitProcessDependencies( appender, applier );\n-            return new ReplicatedTransactionCommitProcess( replicator );\n-        };\n-\n-        this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n-        this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n-        this.labelTokenHolder = labelTokenHolder;\n-    }\n-\n-    private Map<IdType,Integer> getIdTypeAllocationSizeFromConfig( Config config )\n-    {\n-        Map<IdType,Integer> allocationSizes = new HashMap<>( IdType.values().length );\n-        allocationSizes.put( IdType.NODE, config.get( node_id_allocation_size ) );\n-        allocationSizes.put( IdType.RELATIONSHIP, config.get( relationship_id_allocation_size ) );\n-        allocationSizes.put( IdType.PROPERTY, config.get( property_id_allocation_size ) );\n-        allocationSizes.put( IdType.STRING_BLOCK, config.get( string_block_id_allocation_size ) );\n-        allocationSizes.put( IdType.ARRAY_BLOCK, config.get( array_block_id_allocation_size ) );\n-        allocationSizes.put( IdType.PROPERTY_KEY_TOKEN, config.get( property_key_token_id_allocation_size ) );\n-        allocationSizes.put( IdType.PROPERTY_KEY_TOKEN_NAME, config.get( property_key_token_name_id_allocation_size ) );\n-        allocationSizes.put( IdType.RELATIONSHIP_TYPE_TOKEN, config.get( relationship_type_token_id_allocation_size ) );\n-        allocationSizes.put( IdType.RELATIONSHIP_TYPE_TOKEN_NAME, config.get( relationship_type_token_name_id_allocation_size ) );\n-        allocationSizes.put( IdType.LABEL_TOKEN, config.get( label_token_id_allocation_size ) );\n-        allocationSizes.put( IdType.LABEL_TOKEN_NAME, config.get( label_token_name_id_allocation_size ) );\n-        allocationSizes.put( IdType.NEOSTORE_BLOCK, config.get( neostore_block_id_allocation_size ) );\n-        allocationSizes.put( IdType.SCHEMA, config.get( schema_id_allocation_size ) );\n-        allocationSizes.put( IdType.NODE_LABELS, config.get( node_labels_id_allocation_size ) );\n-        allocationSizes.put( IdType.RELATIONSHIP_GROUP, config.get( relationship_group_id_allocation_size ) );\n-        return allocationSizes;\n-    }\n-\n-    private IdGeneratorFactory createIdGeneratorFactory( FileSystemAbstraction fileSystem,\n-            final ReplicatedIdRangeAcquirer idRangeAcquirer, final LogProvider logProvider,\n-            IdTypeConfigurationProvider idTypeConfigurationProvider )\n-    {\n-        return new ReplicatedIdGeneratorFactory( fileSystem, idRangeAcquirer,\n-                logProvider, idTypeConfigurationProvider );\n-    }\n-\n-    private Locks createLockManager( final Config config, Clock clock, final LogService logging,\n-                                     final Replicator replicator, MemberId myself, LeaderLocator leaderLocator,\n-                                     ReplicatedLockTokenStateMachine lockTokenStateMachine )\n+  public static final String ID_ALLOCATION_NAME = \"id-allocation\";\n+  public static final String LOCK_TOKEN_NAME = \"lock-token\";\n+\n+  public final IdGeneratorFactory idGeneratorFactory;\n+  public final IdTypeConfigurationProvider idTypeConfigurationProvider;\n+  public final LabelTokenHolder labelTokenHolder;\n+  public final PropertyKeyTokenHolder propertyKeyTokenHolder;\n+  public final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n+  public final Locks lockManager;\n+  public final CommitProcessFactory commitProcessFactory;\n+\n+  public final CoreStateMachines coreStateMachines;\n+  public final BooleanSupplier freeIdCondition;\n+\n+  public CoreStateMachinesModule(MemberId myself, PlatformModule platformModule, File clusterStateDirectory,\n+                                 Config config, RaftReplicator replicator, RaftMachine raftMachine, Dependencies dependencies,\n+                                 LocalDatabase localDatabase)\n+  {\n+    StateStorage<IdAllocationState> idAllocationState;\n+    StateStorage<ReplicatedLockTokenState> lockTokenState;\n+    final LifeSupport life = platformModule.life;\n+    final FileSystemAbstraction fileSystem = platformModule.fileSystem;\n+    LogService logging = platformModule.logging;\n+    LogProvider logProvider = logging.getInternalLogProvider();\n+\n+    lockTokenState = life.add(\n+        new DurableStateStorage<>(fileSystem, clusterStateDirectory, LOCK_TOKEN_NAME,\n+            new ReplicatedLockTokenState.Marshal(new MemberId.Marshal()),\n+            config.get(replicated_lock_token_state_size), logProvider));\n+\n+    idAllocationState = life.add(\n+        new DurableStateStorage<>(fileSystem, clusterStateDirectory, ID_ALLOCATION_NAME,\n+            new IdAllocationState.Marshal(),\n+            config.get(id_alloc_state_size), logProvider));\n+\n+    ReplicatedIdAllocationStateMachine idAllocationStateMachine =\n+        new ReplicatedIdAllocationStateMachine(idAllocationState);\n+\n+    Map<IdType, Integer> allocationSizes = getIdTypeAllocationSizeFromConfig(config);\n+\n+    ReplicatedIdRangeAcquirer idRangeAcquirer =\n+        new ReplicatedIdRangeAcquirer(replicator, idAllocationStateMachine, allocationSizes, myself,\n+            logProvider);\n+\n+    idTypeConfigurationProvider = new EnterpriseIdTypeConfigurationProvider(config);\n+    CommandIndexTracker commandIndexTracker = new CommandIndexTracker();\n+    freeIdCondition = new IdReusabilityCondition(commandIndexTracker, raftMachine, myself);\n+    this.idGeneratorFactory =\n+        createIdGeneratorFactory(fileSystem, idRangeAcquirer, logProvider, idTypeConfigurationProvider);\n+\n+    dependencies.satisfyDependency(new IdBasedStoreEntityCounters(this.idGeneratorFactory));\n+\n+    TokenRegistry<RelationshipTypeToken> relationshipTypeTokenRegistry = new TokenRegistry<>(\"RelationshipType\");\n+    ReplicatedRelationshipTypeTokenHolder relationshipTypeTokenHolder =\n+        new ReplicatedRelationshipTypeTokenHolder(relationshipTypeTokenRegistry, replicator,\n+            this.idGeneratorFactory, dependencies);\n+\n+    TokenRegistry<Token> propertyKeyTokenRegistry = new TokenRegistry<>(\"PropertyKey\");\n+    ReplicatedPropertyKeyTokenHolder propertyKeyTokenHolder =\n+        new ReplicatedPropertyKeyTokenHolder(propertyKeyTokenRegistry, replicator, this.idGeneratorFactory,\n+            dependencies);\n+\n+    TokenRegistry<Token> labelTokenRegistry = new TokenRegistry<>(\"Label\");\n+    ReplicatedLabelTokenHolder labelTokenHolder =\n+        new ReplicatedLabelTokenHolder(labelTokenRegistry, replicator, this.idGeneratorFactory, dependencies);\n+\n+    ReplicatedLockTokenStateMachine replicatedLockTokenStateMachine =\n+        new ReplicatedLockTokenStateMachine(lockTokenState);\n+\n+    VersionContextSupplier versionContextSupplier = platformModule.versionContextSupplier;\n+    ReplicatedTokenStateMachine<Token> labelTokenStateMachine =\n+        new ReplicatedTokenStateMachine<>(labelTokenRegistry, new Token.Factory(), logProvider,\n+            versionContextSupplier);\n+\n+    ReplicatedTokenStateMachine<Token> propertyKeyTokenStateMachine =\n+        new ReplicatedTokenStateMachine<>(propertyKeyTokenRegistry, new Token.Factory(), logProvider,\n+            versionContextSupplier);\n+\n+    ReplicatedTokenStateMachine<RelationshipTypeToken> relationshipTypeTokenStateMachine =\n+        new ReplicatedTokenStateMachine<>(relationshipTypeTokenRegistry, new RelationshipTypeToken.Factory(),\n+            logProvider, versionContextSupplier);\n+\n+    PageCursorTracerSupplier cursorTracerSupplier = platformModule.tracers.pageCursorTracerSupplier;\n+    ReplicatedTransactionStateMachine replicatedTxStateMachine =\n+        new ReplicatedTransactionStateMachine(commandIndexTracker, replicatedLockTokenStateMachine,\n+            config.get(state_machine_apply_max_batch_size), logProvider, cursorTracerSupplier,\n+            versionContextSupplier);\n+\n+    dependencies.satisfyDependencies(replicatedTxStateMachine);\n+\n+    lockManager = createLockManager(config, platformModule.clock, logging, replicator, myself, raftMachine,\n+        replicatedLockTokenStateMachine);\n+\n+    RecoverConsensusLogIndex consensusLogIndexRecovery = new RecoverConsensusLogIndex(dependencies, logProvider);\n+\n+    coreStateMachines = new CoreStateMachines(replicatedTxStateMachine, labelTokenStateMachine,\n+        relationshipTypeTokenStateMachine, propertyKeyTokenStateMachine, replicatedLockTokenStateMachine,\n+        idAllocationStateMachine, new DummyMachine(), localDatabase, consensusLogIndexRecovery);\n+\n+    commitProcessFactory = (appender, applier, ignored) ->\n     {\n-        Locks localLocks = CommunityEditionModule.createLockManager( config, clock, logging );\n-        return new LeaderOnlyLockManager( myself, replicator, leaderLocator, localLocks, lockTokenStateMachine );\n-    }\n+      localDatabase.registerCommitProcessDependencies(appender, applier);\n+      return new ReplicatedTransactionCommitProcess(replicator);\n+    };\n+\n+    this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n+    this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n+    this.labelTokenHolder = labelTokenHolder;\n+  }\n+\n+  private Map<IdType, Integer> getIdTypeAllocationSizeFromConfig(Config config)\n+  {\n+    Map<IdType, Integer> allocationSizes = new HashMap<>(IdType.values().length);\n+    allocationSizes.put(IdType.NODE, config.get(node_id_allocation_size));\n+    allocationSizes.put(IdType.RELATIONSHIP, config.get(relationship_id_allocation_size));\n+    allocationSizes.put(IdType.PROPERTY, config.get(property_id_allocation_size));\n+    allocationSizes.put(IdType.STRING_BLOCK, config.get(string_block_id_allocation_size));\n+    allocationSizes.put(IdType.ARRAY_BLOCK, config.get(array_block_id_allocation_size));\n+    allocationSizes.put(IdType.PROPERTY_KEY_TOKEN, config.get(property_key_token_id_allocation_size));\n+    allocationSizes.put(IdType.PROPERTY_KEY_TOKEN_NAME, config.get(property_key_token_name_id_allocation_size));\n+    allocationSizes.put(IdType.RELATIONSHIP_TYPE_TOKEN, config.get(relationship_type_token_id_allocation_size));\n+    allocationSizes.put(IdType.RELATIONSHIP_TYPE_TOKEN_NAME, config.get(relationship_type_token_name_id_allocation_size));\n+    allocationSizes.put(IdType.LABEL_TOKEN, config.get(label_token_id_allocation_size));\n+    allocationSizes.put(IdType.LABEL_TOKEN_NAME, config.get(label_token_name_id_allocation_size));\n+    allocationSizes.put(IdType.NEOSTORE_BLOCK, config.get(neostore_block_id_allocation_size));\n+    allocationSizes.put(IdType.SCHEMA, config.get(schema_id_allocation_size));\n+    allocationSizes.put(IdType.NODE_LABELS, config.get(node_labels_id_allocation_size));\n+    allocationSizes.put(IdType.RELATIONSHIP_GROUP, config.get(relationship_group_id_allocation_size));\n+    return allocationSizes;\n+  }\n+\n+  private IdGeneratorFactory createIdGeneratorFactory(FileSystemAbstraction fileSystem,\n+                                                      final ReplicatedIdRangeAcquirer idRangeAcquirer, final LogProvider logProvider,\n+                                                      IdTypeConfigurationProvider idTypeConfigurationProvider)\n+  {\n+    return new ReplicatedIdGeneratorFactory(fileSystem, idRangeAcquirer,\n+        logProvider, idTypeConfigurationProvider);\n+  }\n+\n+  private Locks createLockManager(final Config config, Clock clock, final LogService logging,\n+                                  final Replicator replicator, MemberId myself, LeaderLocator leaderLocator,\n+                                  ReplicatedLockTokenStateMachine lockTokenStateMachine)\n+  {\n+    Locks localLocks = CommunityEditionModule.createLockManager(config, clock, logging);\n+    return new LeaderOnlyLockManager(myself, replicator, leaderLocator, localLocks, lockTokenStateMachine);\n+  }\n }\n",
            "diff_size": 188
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 242).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4370/CoreStateMachinesModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4370/CoreStateMachinesModule.java\nindex fd8d23c1c99..eee40bbb159 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4370/CoreStateMachinesModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4370/CoreStateMachinesModule.java\n@@ -96,18 +96,26 @@ import static org.neo4j.causalclustering.core.CausalClusteringSettings.string_bl\n public class CoreStateMachinesModule\n {\n     public static final String ID_ALLOCATION_NAME = \"id-allocation\";\n-    public static final String LOCK_TOKEN_NAME = \"lock-token\";\n+\n+public static final String LOCK_TOKEN_NAME = \"lock-token\";\n \n     public final IdGeneratorFactory idGeneratorFactory;\n-    public final IdTypeConfigurationProvider idTypeConfigurationProvider;\n-    public final LabelTokenHolder labelTokenHolder;\n-    public final PropertyKeyTokenHolder propertyKeyTokenHolder;\n-    public final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n-    public final Locks lockManager;\n-    public final CommitProcessFactory commitProcessFactory;\n+\n+public final IdTypeConfigurationProvider idTypeConfigurationProvider;\n+\n+public final LabelTokenHolder labelTokenHolder;\n+\n+public final PropertyKeyTokenHolder propertyKeyTokenHolder;\n+\n+public final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n+\n+public final Locks lockManager;\n+\n+public final CommitProcessFactory commitProcessFactory;\n \n     public final CoreStateMachines coreStateMachines;\n-    public final BooleanSupplier freeIdCondition;\n+\n+public final BooleanSupplier freeIdCondition;\n \n     public CoreStateMachinesModule( MemberId myself, PlatformModule platformModule, File clusterStateDirectory,\n             Config config, RaftReplicator replicator, RaftMachine raftMachine, Dependencies dependencies,\n@@ -120,87 +128,48 @@ public class CoreStateMachinesModule\n         LogService logging = platformModule.logging;\n         LogProvider logProvider = logging.getInternalLogProvider();\n \n-        lockTokenState = life.add(\n-                new DurableStateStorage<>( fileSystem, clusterStateDirectory, LOCK_TOKEN_NAME,\n-                        new ReplicatedLockTokenState.Marshal( new MemberId.Marshal() ),\n-                        config.get( replicated_lock_token_state_size ), logProvider ) );\n-\n-        idAllocationState = life.add(\n-                new DurableStateStorage<>( fileSystem, clusterStateDirectory, ID_ALLOCATION_NAME,\n-                        new IdAllocationState.Marshal(),\n-                        config.get( id_alloc_state_size ), logProvider ) );\n-\n-        ReplicatedIdAllocationStateMachine idAllocationStateMachine =\n-                new ReplicatedIdAllocationStateMachine( idAllocationState );\n-\n-        Map<IdType,Integer> allocationSizes = getIdTypeAllocationSizeFromConfig( config );\n-\n-        ReplicatedIdRangeAcquirer idRangeAcquirer =\n-                new ReplicatedIdRangeAcquirer( replicator, idAllocationStateMachine, allocationSizes, myself,\n+        lockTokenState = life.add( new DurableStateStorage<>( fileSystem, clusterStateDirectory, LOCK_TOKEN_NAME, new ReplicatedLockTokenState.Marshal( new MemberId.Marshal() ), config.get( replicated_lock_token_state_size ), logProvider ) );\n+idAllocationState = life.add( new DurableStateStorage<>( fileSystem, clusterStateDirectory, ID_ALLOCATION_NAME, new IdAllocationState.Marshal(), config.get( id_alloc_state_size ), logProvider ) );\n+ReplicatedIdAllocationStateMachine idAllocationStateMachine = new ReplicatedIdAllocationStateMachine( idAllocationState );\n+Map<IdType,Integer> allocationSizes = getIdTypeAllocationSizeFromConfig( config );\n+ReplicatedIdRangeAcquirer idRangeAcquirer = new ReplicatedIdRangeAcquirer( replicator, idAllocationStateMachine, allocationSizes, myself,\n                         logProvider );\n-\n-        idTypeConfigurationProvider = new EnterpriseIdTypeConfigurationProvider( config );\n+idTypeConfigurationProvider = new EnterpriseIdTypeConfigurationProvider( config );\n         CommandIndexTracker commandIndexTracker = new CommandIndexTracker();\n         freeIdCondition = new IdReusabilityCondition( commandIndexTracker, raftMachine, myself );\n-        this.idGeneratorFactory =\n-                createIdGeneratorFactory( fileSystem, idRangeAcquirer, logProvider, idTypeConfigurationProvider );\n-\n-        dependencies.satisfyDependency( new IdBasedStoreEntityCounters( this.idGeneratorFactory ) );\n+        this.idGeneratorFactory = createIdGeneratorFactory( fileSystem, idRangeAcquirer, logProvider, idTypeConfigurationProvider );\n+dependencies.satisfyDependency( new IdBasedStoreEntityCounters( this.idGeneratorFactory ) );\n \n         TokenRegistry<RelationshipTypeToken> relationshipTypeTokenRegistry = new TokenRegistry<>( \"RelationshipType\" );\n-        ReplicatedRelationshipTypeTokenHolder relationshipTypeTokenHolder =\n-                new ReplicatedRelationshipTypeTokenHolder( relationshipTypeTokenRegistry, replicator,\n-                        this.idGeneratorFactory, dependencies );\n-\n-        TokenRegistry<Token> propertyKeyTokenRegistry = new TokenRegistry<>( \"PropertyKey\" );\n-        ReplicatedPropertyKeyTokenHolder propertyKeyTokenHolder =\n-                new ReplicatedPropertyKeyTokenHolder( propertyKeyTokenRegistry, replicator, this.idGeneratorFactory,\n+        ReplicatedRelationshipTypeTokenHolder relationshipTypeTokenHolder = new ReplicatedRelationshipTypeTokenHolder( relationshipTypeTokenRegistry, replicator, this.idGeneratorFactory, dependencies );\n+TokenRegistry<Token> propertyKeyTokenRegistry = new TokenRegistry<>( \"PropertyKey\" );\n+        ReplicatedPropertyKeyTokenHolder propertyKeyTokenHolder = new ReplicatedPropertyKeyTokenHolder( propertyKeyTokenRegistry, replicator, this.idGeneratorFactory,\n                         dependencies );\n-\n-        TokenRegistry<Token> labelTokenRegistry = new TokenRegistry<>( \"Label\" );\n-        ReplicatedLabelTokenHolder labelTokenHolder =\n-                new ReplicatedLabelTokenHolder( labelTokenRegistry, replicator, this.idGeneratorFactory, dependencies );\n-\n-        ReplicatedLockTokenStateMachine replicatedLockTokenStateMachine =\n-                new ReplicatedLockTokenStateMachine( lockTokenState );\n-\n-        VersionContextSupplier versionContextSupplier = platformModule.versionContextSupplier;\n-        ReplicatedTokenStateMachine<Token> labelTokenStateMachine =\n-                new ReplicatedTokenStateMachine<>( labelTokenRegistry, new Token.Factory(), logProvider,\n+TokenRegistry<Token> labelTokenRegistry = new TokenRegistry<>( \"Label\" );\n+        ReplicatedLabelTokenHolder labelTokenHolder = new ReplicatedLabelTokenHolder( labelTokenRegistry, replicator, this.idGeneratorFactory, dependencies );\n+ReplicatedLockTokenStateMachine replicatedLockTokenStateMachine = new ReplicatedLockTokenStateMachine( lockTokenState );\n+VersionContextSupplier versionContextSupplier = platformModule.versionContextSupplier;\n+        ReplicatedTokenStateMachine<Token> labelTokenStateMachine = new ReplicatedTokenStateMachine<>( labelTokenRegistry, new Token.Factory(), logProvider,\n                         versionContextSupplier );\n-\n-        ReplicatedTokenStateMachine<Token> propertyKeyTokenStateMachine =\n-                new ReplicatedTokenStateMachine<>( propertyKeyTokenRegistry, new Token.Factory(), logProvider,\n+ReplicatedTokenStateMachine<Token> propertyKeyTokenStateMachine = new ReplicatedTokenStateMachine<>( propertyKeyTokenRegistry, new Token.Factory(), logProvider,\n                         versionContextSupplier );\n-\n-        ReplicatedTokenStateMachine<RelationshipTypeToken> relationshipTypeTokenStateMachine =\n-                new ReplicatedTokenStateMachine<>( relationshipTypeTokenRegistry, new RelationshipTypeToken.Factory(),\n+ReplicatedTokenStateMachine<RelationshipTypeToken> relationshipTypeTokenStateMachine = new ReplicatedTokenStateMachine<>( relationshipTypeTokenRegistry, new RelationshipTypeToken.Factory(),\n                         logProvider, versionContextSupplier );\n-\n-        PageCursorTracerSupplier cursorTracerSupplier = platformModule.tracers.pageCursorTracerSupplier;\n-        ReplicatedTransactionStateMachine replicatedTxStateMachine =\n-                new ReplicatedTransactionStateMachine( commandIndexTracker, replicatedLockTokenStateMachine,\n-                        config.get( state_machine_apply_max_batch_size ), logProvider, cursorTracerSupplier,\n-                        versionContextSupplier );\n-\n-        dependencies.satisfyDependencies( replicatedTxStateMachine );\n-\n-        lockManager = createLockManager( config, platformModule.clock, logging, replicator, myself, raftMachine,\n+PageCursorTracerSupplier cursorTracerSupplier = platformModule.tracers.pageCursorTracerSupplier;\n+        ReplicatedTransactionStateMachine replicatedTxStateMachine = new ReplicatedTransactionStateMachine( commandIndexTracker, replicatedLockTokenStateMachine,\n+                        config.get( state_machine_apply_max_batch_size ), logProvider, cursorTracerSupplier, versionContextSupplier );\n+dependencies.satisfyDependencies( replicatedTxStateMachine );\n+lockManager = createLockManager( config, platformModule.clock, logging, replicator, myself, raftMachine,\n                 replicatedLockTokenStateMachine );\n-\n-        RecoverConsensusLogIndex consensusLogIndexRecovery = new RecoverConsensusLogIndex( dependencies, logProvider );\n-\n-        coreStateMachines = new CoreStateMachines( replicatedTxStateMachine, labelTokenStateMachine,\n-                relationshipTypeTokenStateMachine, propertyKeyTokenStateMachine, replicatedLockTokenStateMachine,\n-                idAllocationStateMachine, new DummyMachine(), localDatabase, consensusLogIndexRecovery );\n-\n-        commitProcessFactory = ( appender, applier, ignored ) ->\n+RecoverConsensusLogIndex consensusLogIndexRecovery = new RecoverConsensusLogIndex( dependencies, logProvider );\n+coreStateMachines = new CoreStateMachines( replicatedTxStateMachine, labelTokenStateMachine,\n+                relationshipTypeTokenStateMachine, propertyKeyTokenStateMachine, replicatedLockTokenStateMachine, idAllocationStateMachine, new DummyMachine(), localDatabase, consensusLogIndexRecovery );\n+commitProcessFactory = ( appender, applier, ignored ) ->\n         {\n             localDatabase.registerCommitProcessDependencies( appender, applier );\n             return new ReplicatedTransactionCommitProcess( replicator );\n         };\n-\n-        this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n+this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n         this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n         this.labelTokenHolder = labelTokenHolder;\n     }\n@@ -226,19 +195,17 @@ public class CoreStateMachinesModule\n         return allocationSizes;\n     }\n \n-    private IdGeneratorFactory createIdGeneratorFactory( FileSystemAbstraction fileSystem,\n-            final ReplicatedIdRangeAcquirer idRangeAcquirer, final LogProvider logProvider,\n+    private IdGeneratorFactory createIdGeneratorFactory( FileSystemAbstraction fileSystem, final ReplicatedIdRangeAcquirer idRangeAcquirer, final LogProvider logProvider,\n             IdTypeConfigurationProvider idTypeConfigurationProvider )\n     {\n         return new ReplicatedIdGeneratorFactory( fileSystem, idRangeAcquirer,\n                 logProvider, idTypeConfigurationProvider );\n     }\n \n-    private Locks createLockManager( final Config config, Clock clock, final LogService logging,\n-                                     final Replicator replicator, MemberId myself, LeaderLocator leaderLocator,\n+    private Locks createLockManager( final Config config, Clock clock, final LogService logging, final Replicator replicator, MemberId myself, LeaderLocator leaderLocator,\n                                      ReplicatedLockTokenStateMachine lockTokenStateMachine )\n-    {\n+{\n         Locks localLocks = CommunityEditionModule.createLockManager( config, clock, logging );\n         return new LeaderOnlyLockManager( myself, replicator, leaderLocator, localLocks, lockTokenStateMachine );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 89
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 272).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 288).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 228).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 227).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4370/CoreStateMachinesModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4370/CoreStateMachinesModule.java\nindex fd8d23c1c99..56a2b89a3ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4370/CoreStateMachinesModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4370/CoreStateMachinesModule.java\n@@ -24,7 +24,6 @@ import java.time.Clock;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.function.BooleanSupplier;\n-\n import org.neo4j.causalclustering.catchup.storecopy.LocalDatabase;\n import org.neo4j.causalclustering.core.consensus.LeaderLocator;\n import org.neo4j.causalclustering.core.consensus.RaftMachine;\n@@ -73,45 +72,67 @@ import org.neo4j.kernel.impl.util.Dependencies;\n import org.neo4j.kernel.lifecycle.LifeSupport;\n import org.neo4j.logging.LogProvider;\n import org.neo4j.storageengine.api.Token;\n-\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.array_block_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.id_alloc_state_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.label_token_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.label_token_name_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.neostore_block_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.node_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.node_labels_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.property_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.property_key_token_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.property_key_token_name_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.relationship_group_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.relationship_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.relationship_type_token_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.relationship_type_token_name_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.replicated_lock_token_state_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.schema_id_allocation_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.state_machine_apply_max_batch_size;\n+\n import static org.neo4j.causalclustering.core.CausalClusteringSettings.string_block_id_allocation_size;\n \n public class CoreStateMachinesModule\n {\n     public static final String ID_ALLOCATION_NAME = \"id-allocation\";\n+\n     public static final String LOCK_TOKEN_NAME = \"lock-token\";\n \n     public final IdGeneratorFactory idGeneratorFactory;\n+\n     public final IdTypeConfigurationProvider idTypeConfigurationProvider;\n+\n     public final LabelTokenHolder labelTokenHolder;\n+\n     public final PropertyKeyTokenHolder propertyKeyTokenHolder;\n+\n     public final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n+\n     public final Locks lockManager;\n+\n     public final CommitProcessFactory commitProcessFactory;\n \n     public final CoreStateMachines coreStateMachines;\n+\n     public final BooleanSupplier freeIdCondition;\n \n-    public CoreStateMachinesModule( MemberId myself, PlatformModule platformModule, File clusterStateDirectory,\n-            Config config, RaftReplicator replicator, RaftMachine raftMachine, Dependencies dependencies,\n-            LocalDatabase localDatabase )\n+    public CoreStateMachinesModule( MemberId myself, PlatformModule platformModule, File clusterStateDirectory, Config config, RaftReplicator replicator, RaftMachine raftMachine, Dependencies dependencies, LocalDatabase localDatabase )\n     {\n         StateStorage<IdAllocationState> idAllocationState;\n         StateStorage<ReplicatedLockTokenState> lockTokenState;\n@@ -119,87 +140,38 @@ public class CoreStateMachinesModule\n         final FileSystemAbstraction fileSystem = platformModule.fileSystem;\n         LogService logging = platformModule.logging;\n         LogProvider logProvider = logging.getInternalLogProvider();\n-\n-        lockTokenState = life.add(\n-                new DurableStateStorage<>( fileSystem, clusterStateDirectory, LOCK_TOKEN_NAME,\n-                        new ReplicatedLockTokenState.Marshal( new MemberId.Marshal() ),\n-                        config.get( replicated_lock_token_state_size ), logProvider ) );\n-\n-        idAllocationState = life.add(\n-                new DurableStateStorage<>( fileSystem, clusterStateDirectory, ID_ALLOCATION_NAME,\n-                        new IdAllocationState.Marshal(),\n-                        config.get( id_alloc_state_size ), logProvider ) );\n-\n-        ReplicatedIdAllocationStateMachine idAllocationStateMachine =\n-                new ReplicatedIdAllocationStateMachine( idAllocationState );\n-\n+        lockTokenState = life.add( new DurableStateStorage<>( fileSystem, clusterStateDirectory, LOCK_TOKEN_NAME, new ReplicatedLockTokenState. Marshal( new MemberId. Marshal() ), config.get( replicated_lock_token_state_size ), logProvider ) );\n+        idAllocationState = life.add( new DurableStateStorage<>( fileSystem, clusterStateDirectory, ID_ALLOCATION_NAME, new IdAllocationState. Marshal(), config.get( id_alloc_state_size ), logProvider ) );\n+        ReplicatedIdAllocationStateMachine idAllocationStateMachine = new ReplicatedIdAllocationStateMachine( idAllocationState );\n         Map<IdType,Integer> allocationSizes = getIdTypeAllocationSizeFromConfig( config );\n-\n-        ReplicatedIdRangeAcquirer idRangeAcquirer =\n-                new ReplicatedIdRangeAcquirer( replicator, idAllocationStateMachine, allocationSizes, myself,\n-                        logProvider );\n-\n+        ReplicatedIdRangeAcquirer idRangeAcquirer = new ReplicatedIdRangeAcquirer( replicator, idAllocationStateMachine, allocationSizes, myself, logProvider );\n         idTypeConfigurationProvider = new EnterpriseIdTypeConfigurationProvider( config );\n         CommandIndexTracker commandIndexTracker = new CommandIndexTracker();\n         freeIdCondition = new IdReusabilityCondition( commandIndexTracker, raftMachine, myself );\n-        this.idGeneratorFactory =\n-                createIdGeneratorFactory( fileSystem, idRangeAcquirer, logProvider, idTypeConfigurationProvider );\n-\n+        this.idGeneratorFactory = createIdGeneratorFactory( fileSystem, idRangeAcquirer, logProvider, idTypeConfigurationProvider );\n         dependencies.satisfyDependency( new IdBasedStoreEntityCounters( this.idGeneratorFactory ) );\n-\n         TokenRegistry<RelationshipTypeToken> relationshipTypeTokenRegistry = new TokenRegistry<>( \"RelationshipType\" );\n-        ReplicatedRelationshipTypeTokenHolder relationshipTypeTokenHolder =\n-                new ReplicatedRelationshipTypeTokenHolder( relationshipTypeTokenRegistry, replicator,\n-                        this.idGeneratorFactory, dependencies );\n-\n+        ReplicatedRelationshipTypeTokenHolder relationshipTypeTokenHolder = new ReplicatedRelationshipTypeTokenHolder( relationshipTypeTokenRegistry, replicator, this.idGeneratorFactory, dependencies );\n         TokenRegistry<Token> propertyKeyTokenRegistry = new TokenRegistry<>( \"PropertyKey\" );\n-        ReplicatedPropertyKeyTokenHolder propertyKeyTokenHolder =\n-                new ReplicatedPropertyKeyTokenHolder( propertyKeyTokenRegistry, replicator, this.idGeneratorFactory,\n-                        dependencies );\n-\n+        ReplicatedPropertyKeyTokenHolder propertyKeyTokenHolder = new ReplicatedPropertyKeyTokenHolder( propertyKeyTokenRegistry, replicator, this.idGeneratorFactory, dependencies );\n         TokenRegistry<Token> labelTokenRegistry = new TokenRegistry<>( \"Label\" );\n-        ReplicatedLabelTokenHolder labelTokenHolder =\n-                new ReplicatedLabelTokenHolder( labelTokenRegistry, replicator, this.idGeneratorFactory, dependencies );\n-\n-        ReplicatedLockTokenStateMachine replicatedLockTokenStateMachine =\n-                new ReplicatedLockTokenStateMachine( lockTokenState );\n-\n+        ReplicatedLabelTokenHolder labelTokenHolder = new ReplicatedLabelTokenHolder( labelTokenRegistry, replicator, this.idGeneratorFactory, dependencies );\n+        ReplicatedLockTokenStateMachine replicatedLockTokenStateMachine = new ReplicatedLockTokenStateMachine( lockTokenState );\n         VersionContextSupplier versionContextSupplier = platformModule.versionContextSupplier;\n-        ReplicatedTokenStateMachine<Token> labelTokenStateMachine =\n-                new ReplicatedTokenStateMachine<>( labelTokenRegistry, new Token.Factory(), logProvider,\n-                        versionContextSupplier );\n-\n-        ReplicatedTokenStateMachine<Token> propertyKeyTokenStateMachine =\n-                new ReplicatedTokenStateMachine<>( propertyKeyTokenRegistry, new Token.Factory(), logProvider,\n-                        versionContextSupplier );\n-\n-        ReplicatedTokenStateMachine<RelationshipTypeToken> relationshipTypeTokenStateMachine =\n-                new ReplicatedTokenStateMachine<>( relationshipTypeTokenRegistry, new RelationshipTypeToken.Factory(),\n-                        logProvider, versionContextSupplier );\n-\n+        ReplicatedTokenStateMachine<Token> labelTokenStateMachine = new ReplicatedTokenStateMachine<>( labelTokenRegistry, new Token. Factory(), logProvider, versionContextSupplier );\n+        ReplicatedTokenStateMachine<Token> propertyKeyTokenStateMachine = new ReplicatedTokenStateMachine<>( propertyKeyTokenRegistry, new Token. Factory(), logProvider, versionContextSupplier );\n+        ReplicatedTokenStateMachine<RelationshipTypeToken> relationshipTypeTokenStateMachine = new ReplicatedTokenStateMachine<>( relationshipTypeTokenRegistry, new RelationshipTypeToken. Factory(), logProvider, versionContextSupplier );\n         PageCursorTracerSupplier cursorTracerSupplier = platformModule.tracers.pageCursorTracerSupplier;\n-        ReplicatedTransactionStateMachine replicatedTxStateMachine =\n-                new ReplicatedTransactionStateMachine( commandIndexTracker, replicatedLockTokenStateMachine,\n-                        config.get( state_machine_apply_max_batch_size ), logProvider, cursorTracerSupplier,\n-                        versionContextSupplier );\n-\n+        ReplicatedTransactionStateMachine replicatedTxStateMachine = new ReplicatedTransactionStateMachine( commandIndexTracker, replicatedLockTokenStateMachine, config.get( state_machine_apply_max_batch_size ), logProvider, cursorTracerSupplier, versionContextSupplier );\n         dependencies.satisfyDependencies( replicatedTxStateMachine );\n-\n-        lockManager = createLockManager( config, platformModule.clock, logging, replicator, myself, raftMachine,\n-                replicatedLockTokenStateMachine );\n-\n+        lockManager = createLockManager( config, platformModule.clock, logging, replicator, myself, raftMachine, replicatedLockTokenStateMachine );\n         RecoverConsensusLogIndex consensusLogIndexRecovery = new RecoverConsensusLogIndex( dependencies, logProvider );\n-\n-        coreStateMachines = new CoreStateMachines( replicatedTxStateMachine, labelTokenStateMachine,\n-                relationshipTypeTokenStateMachine, propertyKeyTokenStateMachine, replicatedLockTokenStateMachine,\n-                idAllocationStateMachine, new DummyMachine(), localDatabase, consensusLogIndexRecovery );\n-\n+        coreStateMachines = new CoreStateMachines( replicatedTxStateMachine, labelTokenStateMachine, relationshipTypeTokenStateMachine, propertyKeyTokenStateMachine, replicatedLockTokenStateMachine, idAllocationStateMachine, new DummyMachine(), localDatabase, consensusLogIndexRecovery );\n         commitProcessFactory = ( appender, applier, ignored ) ->\n-        {\n-            localDatabase.registerCommitProcessDependencies( appender, applier );\n-            return new ReplicatedTransactionCommitProcess( replicator );\n-        };\n-\n+                               {\n+                                   localDatabase.registerCommitProcessDependencies( appender, applier );\n+                                   return new ReplicatedTransactionCommitProcess( replicator );\n+                               };\n         this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n         this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n         this.labelTokenHolder = labelTokenHolder;\n@@ -226,19 +198,14 @@ public class CoreStateMachinesModule\n         return allocationSizes;\n     }\n \n-    private IdGeneratorFactory createIdGeneratorFactory( FileSystemAbstraction fileSystem,\n-            final ReplicatedIdRangeAcquirer idRangeAcquirer, final LogProvider logProvider,\n-            IdTypeConfigurationProvider idTypeConfigurationProvider )\n+    private IdGeneratorFactory createIdGeneratorFactory( FileSystemAbstraction fileSystem, final ReplicatedIdRangeAcquirer idRangeAcquirer, final LogProvider logProvider, IdTypeConfigurationProvider idTypeConfigurationProvider )\n     {\n-        return new ReplicatedIdGeneratorFactory( fileSystem, idRangeAcquirer,\n-                logProvider, idTypeConfigurationProvider );\n+        return new ReplicatedIdGeneratorFactory( fileSystem, idRangeAcquirer, logProvider, idTypeConfigurationProvider );\n     }\n \n-    private Locks createLockManager( final Config config, Clock clock, final LogService logging,\n-                                     final Replicator replicator, MemberId myself, LeaderLocator leaderLocator,\n-                                     ReplicatedLockTokenStateMachine lockTokenStateMachine )\n+    private Locks createLockManager( final Config config, Clock clock, final LogService logging, final Replicator replicator, MemberId myself, LeaderLocator leaderLocator, ReplicatedLockTokenStateMachine lockTokenStateMachine )\n     {\n         Locks localLocks = CommunityEditionModule.createLockManager( config, clock, logging );\n         return new LeaderOnlyLockManager( myself, replicator, leaderLocator, localLocks, lockTokenStateMachine );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 107
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "eclipse-milo",
    "error_id": "231",
    "information": {
        "errors": [
            {
                "line": "30",
                "column": "33",
                "severity": "error",
                "message": "'}' at column 33 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class Int32Conversions {\n\n    private Int32Conversions() {}\n\n    @Nonnull\n    static Boolean int32ToBoolean(@Nonnull Integer i) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/231/Int32Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/231/Int32Conversions.java\nindex 7387240bdc3..5c5d8056aed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/231/Int32Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/231/Int32Conversions.java\n@@ -27,7 +27,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class Int32Conversions {\n \n-    private Int32Conversions() {}\n+    private Int32Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean int32ToBoolean(@Nonnull Integer i) {\n@@ -130,15 +131,24 @@ final class Int32Conversions {\n     static Object explicitConversion(@Nonnull Integer i, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:       return int32ToBoolean(i);\n-            case Byte:          return int32ToByte(i);\n-            case Int16:         return int32ToInt16(i);\n-            case SByte:         return int32ToSByte(i);\n-            case StatusCode:    return int32ToStatusCode(i);\n-            case String:        return int32ToString(i);\n-            case UInt16:        return int32ToUInt16(i);\n-            case UInt32:        return int32ToUInt32(i);\n-            default:            return implicitConversion(i, targetType);\n+            case Boolean:\n+                return int32ToBoolean(i);\n+            case Byte:\n+                return int32ToByte(i);\n+            case Int16:\n+                return int32ToInt16(i);\n+            case SByte:\n+                return int32ToSByte(i);\n+            case StatusCode:\n+                return int32ToStatusCode(i);\n+            case String:\n+                return int32ToString(i);\n+            case UInt16:\n+                return int32ToUInt16(i);\n+            case UInt32:\n+                return int32ToUInt32(i);\n+            default:\n+                return implicitConversion(i, targetType);\n         }\n         //@formatter:on\n     }\n@@ -147,11 +157,16 @@ final class Int32Conversions {\n     static Object implicitConversion(@Nonnull Integer i, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return int32ToDouble(i);\n-            case Float:     return int32ToFloat(i);\n-            case Int64:     return int32ToInt64(i);\n-            case UInt64:    return int32ToUInt64(i);\n-            default:        return null;\n+            case Double:\n+                return int32ToDouble(i);\n+            case Float:\n+                return int32ToFloat(i);\n+            case Int64:\n+                return int32ToInt64(i);\n+            case UInt64:\n+                return int32ToUInt64(i);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/231/Int32Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/231/Int32Conversions.java\nindex 7387240bdc3..04cd72d00c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/231/Int32Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/231/Int32Conversions.java\n@@ -132,8 +132,10 @@ final class Int32Conversions {\n         switch (targetType) {\n             case Boolean:       return int32ToBoolean(i);\n             case Byte:          return int32ToByte(i);\n-            case Int16:         return int32ToInt16(i);\n-            case SByte:         return int32ToSByte(i);\n+            case Int16:\n+    return int32ToInt16(i);\n+            case SByte:\n+    return int32ToSByte(i);\n             case StatusCode:    return int32ToStatusCode(i);\n             case String:        return int32ToString(i);\n             case UInt16:        return int32ToUInt16(i);\n@@ -151,9 +153,10 @@ final class Int32Conversions {\n             case Float:     return int32ToFloat(i);\n             case Int64:     return int32ToInt64(i);\n             case UInt64:    return int32ToUInt64(i);\n-            default:        return null;\n+            default:\n+    return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/231/Int32Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/231/Int32Conversions.java\nindex 7387240bdc3..e8cee335284 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/231/Int32Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/231/Int32Conversions.java\n@@ -12,7 +12,6 @@ package org.eclipse.milo.opcua.sdk.server.events.conversions;\n \n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n-\n import org.eclipse.milo.opcua.stack.core.BuiltinDataType;\n import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n@@ -27,7 +26,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class Int32Conversions {\n \n-    private Int32Conversions() {}\n+    private Int32Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean int32ToBoolean(@Nonnull Integer i) {\n@@ -117,10 +117,7 @@ final class Int32Conversions {\n     static Object convert(@Nullable Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof Integer) {\n             Integer i = (Integer) o;\n-\n-            return implicit ?\n-                implicitConversion(i, targetType) :\n-                explicitConversion(i, targetType);\n+            return implicit ? implicitConversion(i, targetType) : explicitConversion(i, targetType);\n         } else {\n             return null;\n         }\n@@ -130,15 +127,31 @@ final class Int32Conversions {\n     static Object explicitConversion(@Nonnull Integer i, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:       return int32ToBoolean(i);\n-            case Byte:          return int32ToByte(i);\n-            case Int16:         return int32ToInt16(i);\n-            case SByte:         return int32ToSByte(i);\n-            case StatusCode:    return int32ToStatusCode(i);\n-            case String:        return int32ToString(i);\n-            case UInt16:        return int32ToUInt16(i);\n-            case UInt32:        return int32ToUInt32(i);\n-            default:            return implicitConversion(i, targetType);\n+            case Boolean:\n+                return int32ToBoolean(i);\n+\n+            case Byte:\n+                return int32ToByte(i);\n+\n+            case Int16:\n+                return int32ToInt16(i);\n+\n+            case SByte:\n+                return int32ToSByte(i);\n+\n+            case StatusCode:\n+                return int32ToStatusCode(i);\n+\n+            case String:\n+                return int32ToString(i);\n+\n+            case UInt16:\n+                return int32ToUInt16(i);\n+\n+            case UInt32:\n+                return int32ToUInt32(i);\n+            default:\n+                return implicitConversion(i, targetType);\n         }\n         //@formatter:on\n     }\n@@ -147,13 +160,21 @@ final class Int32Conversions {\n     static Object implicitConversion(@Nonnull Integer i, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return int32ToDouble(i);\n-            case Float:     return int32ToFloat(i);\n-            case Int64:     return int32ToInt64(i);\n-            case UInt64:    return int32ToUInt64(i);\n-            default:        return null;\n+            case Double:\n+                return int32ToDouble(i);\n+\n+            case Float:\n+                return int32ToFloat(i);\n+\n+            case Int64:\n+                return int32ToInt64(i);\n+\n+            case UInt64:\n+                return int32ToUInt64(i);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "30",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/231/Int32Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/231/Int32Conversions.java\nindex 7387240bdc3..7aa21682167 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/231/Int32Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/231/Int32Conversions.java\n@@ -27,9 +27,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class Int32Conversions {\n \n-    private Int32Conversions() {}\n+    private Int32Conversions() {\n \n-    @Nonnull\n+    } @Nonnull\n     static Boolean int32ToBoolean(@Nonnull Integer i) {\n         return i != 0;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
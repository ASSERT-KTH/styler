{
    "project_name": "java110-MicroCommunity",
    "error_id": "471",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 196).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<AuditMessageDto> auditMessages = BeanConvertUtil.covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil.beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n\n        if (auditMessages == null || auditMessages.size() == 0) {\n            return auditMessages;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/471/AuditMessageInnerServiceSMOImpl.java\nindex a0354be5fbc..64d2450bf0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/471/AuditMessageInnerServiceSMOImpl.java\n@@ -43,8 +43,9 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n         if (page != PageDto.DEFAULT_PAGE) {\n             auditMessageDto.setPage((page - 1) * auditMessageDto.getRow());\n         }\n+    List<AuditMessageDto> auditMessages = BeanConvertUtil.covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil\n \n-        List<AuditMessageDto> auditMessages = BeanConvertUtil.covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil.beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n+        . beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n \n         if (auditMessages == null || auditMessages.size() == 0) {\n             return auditMessages;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/471/AuditMessageInnerServiceSMOImpl.java\nindex a0354be5fbc..27f129c30e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/471/AuditMessageInnerServiceSMOImpl.java\n@@ -34,7 +34,7 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<AuditMessageDto> queryAuditMessages(@RequestBody  AuditMessageDto auditMessageDto) {\n+    public List<AuditMessageDto> queryAuditMessages(@RequestBody AuditMessageDto auditMessageDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n@@ -44,7 +44,8 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n             auditMessageDto.setPage((page - 1) * auditMessageDto.getRow());\n         }\n \n-        List<AuditMessageDto> auditMessages = BeanConvertUtil.covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil.beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n+        List<AuditMessageDto> auditMessages = BeanConvertUtil\n+            .covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil.beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n \n         if (auditMessages == null || auditMessages.size() == 0) {\n             return auditMessages;\n@@ -64,7 +65,7 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n      * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n      *\n      * @param auditMessage \u5c0f\u533a\u5ba1\u6838\u539f\u56e0\u4fe1\u606f\n-     * @param users \u7528\u6237\u5217\u8868\n+     * @param users        \u7528\u6237\u5217\u8868\n      */\n     private void refreshAuditMessage(AuditMessageDto auditMessage, List<UserDto> users) {\n         for (UserDto user : users) {\n@@ -91,7 +92,8 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n \n     @Override\n     public int queryAuditMessagesCount(@RequestBody AuditMessageDto auditMessageDto) {\n-        return auditMessageServiceDaoImpl.queryAuditMessagesCount(BeanConvertUtil.beanCovertMap(auditMessageDto));    }\n+        return auditMessageServiceDaoImpl.queryAuditMessagesCount(BeanConvertUtil.beanCovertMap(auditMessageDto));\n+    }\n \n     public IAuditMessageServiceDao getAuditMessageServiceDaoImpl() {\n         return auditMessageServiceDaoImpl;\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/471/AuditMessageInnerServiceSMOImpl.java\nindex a0354be5fbc..a6bd7884eb2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/471/AuditMessageInnerServiceSMOImpl.java\n@@ -108,4 +108,4 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/471/AuditMessageInnerServiceSMOImpl.java\nindex a0354be5fbc..447294a5a95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/471/AuditMessageInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.common.smo.impl;\n \n-\n import com.java110.common.dao.IAuditMessageServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.core.smo.audit.IAuditMessageInnerServiceSMO;\n@@ -12,7 +11,6 @@ import com.java110.utils.util.BeanConvertUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -24,6 +22,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements IAuditMessageInnerServiceSMO {\n \n@@ -34,18 +34,18 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<AuditMessageDto> queryAuditMessages(@RequestBody  AuditMessageDto auditMessageDto) {\n+    public List<AuditMessageDto> queryAuditMessages(@RequestBody AuditMessageDto auditMessageDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = auditMessageDto.getPage();\n \n+\n+        int page = auditMessageDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             auditMessageDto.setPage((page - 1) * auditMessageDto.getRow());\n         }\n \n         List<AuditMessageDto> auditMessages = BeanConvertUtil.covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil.beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n-\n         if (auditMessages == null || auditMessages.size() == 0) {\n             return auditMessages;\n         }\n@@ -53,7 +53,6 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n         String[] userIds = getUserIds(auditMessages);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (AuditMessageDto auditMessage : auditMessages) {\n             refreshAuditMessage(auditMessage, users);\n         }\n@@ -66,6 +65,8 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n      * @param auditMessage \u5c0f\u533a\u5ba1\u6838\u539f\u56e0\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshAuditMessage(AuditMessageDto auditMessage, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (auditMessage.getUserId().equals(user.getUserId())) {\n@@ -80,18 +81,20 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n      * @param auditMessages \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<AuditMessageDto> auditMessages) {\n         List<String> userIds = new ArrayList<String>();\n         for (AuditMessageDto auditMessage : auditMessages) {\n             userIds.add(auditMessage.getUserId());\n         }\n-\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n     @Override\n     public int queryAuditMessagesCount(@RequestBody AuditMessageDto auditMessageDto) {\n-        return auditMessageServiceDaoImpl.queryAuditMessagesCount(BeanConvertUtil.beanCovertMap(auditMessageDto));    }\n+        return auditMessageServiceDaoImpl.queryAuditMessagesCount(BeanConvertUtil.beanCovertMap(auditMessageDto));\n+    }\n \n     public IAuditMessageServiceDao getAuditMessageServiceDaoImpl() {\n         return auditMessageServiceDaoImpl;\n@@ -108,4 +111,4 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/471/AuditMessageInnerServiceSMOImpl.java\nindex a0354be5fbc..255462d7376 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/471/AuditMessageInnerServiceSMOImpl.java\n@@ -42,9 +42,7 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             auditMessageDto.setPage((page - 1) * auditMessageDto.getRow());\n-        }\n-\n-        List<AuditMessageDto> auditMessages = BeanConvertUtil.covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil.beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n+        }List <AuditMessageDto> auditMessages = BeanConvertUtil.covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil.beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n \n         if (auditMessages == null || auditMessages.size() == 0) {\n             return auditMessages;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/471/AuditMessageInnerServiceSMOImpl.java\nindex a0354be5fbc..64d2450bf0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/471/AuditMessageInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/471/AuditMessageInnerServiceSMOImpl.java\n@@ -43,8 +43,9 @@ public class AuditMessageInnerServiceSMOImpl extends BaseServiceSMO implements I\n         if (page != PageDto.DEFAULT_PAGE) {\n             auditMessageDto.setPage((page - 1) * auditMessageDto.getRow());\n         }\n+    List<AuditMessageDto> auditMessages = BeanConvertUtil.covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil\n \n-        List<AuditMessageDto> auditMessages = BeanConvertUtil.covertBeanList(auditMessageServiceDaoImpl.getAuditMessageInfo(BeanConvertUtil.beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n+        . beanCovertMap(auditMessageDto)), AuditMessageDto.class);\n \n         if (auditMessages == null || auditMessages.size() == 0) {\n             return auditMessages;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
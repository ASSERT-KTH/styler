{
    "project_name": "bakdata-conquery",
    "error_id": "141",
    "information": {
        "errors": [
            {
                "line": "118",
                "column": "9",
                "severity": "warning",
                "message": "'}' at column 3 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n\t\t\treturn  (GroovyPredicate) groovy.parse(filter);\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(\"Failed to compile filter `\" + filter + \"`\", e);\n\t\t}\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/141/TableInputDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/141/TableInputDescriptor.java\nindex f1497d48379..f3b575b3a10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/141/TableInputDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/141/TableInputDescriptor.java\n@@ -26,116 +26,117 @@ import javax.validation.constraints.NotEmpty;\n \n /**\n  * An input describes transformations on a single CSV file to be loaded into the table described in {@link TableImportDescriptor}.\n- *\n+ * <p>\n  * It requires a primary Output and at least one normal output.\n- *\n+ * <p>\n  * Input data can be filter using the field filter, which is evaluated as a groovy script on every row.\n  */\n @Data\n @Slf4j\n public class TableInputDescriptor implements Serializable {\n \n-\tprivate static final long serialVersionUID = 1L;\n-\tprivate static final String[] AUTO_IMPORTS = Stream.of(\n-\t\t\tLocalDate.class,\n-\t\t\tRange.class\n-\t).map(Class::getName).toArray(String[]::new);\n-\n-\t@NotNull\n-\tprivate File sourceFile;\n-\n-\tprivate String filter;\n-\n-\t/**\n-\t * Output producing the primary column. This should be the primary key across all tables.\n-\t * Default is `COPY(\"pid\", STRING)`\n-\t */\n-\t@NotNull\n-\t@Valid\n-\tprivate OutputDescription primary = new CopyOutput(\"pid\", \"id\", MajorTypeId.STRING);\n-\t@Valid @NotEmpty\n-\tprivate OutputDescription[] output;\n-\n-\t/**\n-\t * Empty array to be used only for validation of groovy script.\n-\t */\n-\tpublic static final String[] FAKE_HEADERS = new String[50];\n-\n-\t@JsonIgnore @ValidationMethod(message = \"Groovy script is not valid.\")\n-\tpublic boolean isValidGroovyScript(){\n-\t\ttry{\n-\t\t\tcreateFilter(FAKE_HEADERS);\n-\t\t}\n-\t\tcatch (Exception ex) {\n-\t\t\tlog.error(\"Groovy script is not valid\",ex);\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\treturn true;\n-\t}\n-\n-\n-\t@JsonIgnore\n-\t@ValidationMethod(message = \"Each column requires a unique name\")\n-\tpublic boolean isEachNameUnique() {\n-\t\tObject2IntMap<String> names = new Object2IntArrayMap<>(getWidth());\n-\t\tnames.defaultReturnValue(-1);\n-\n-\t\tfor (int index = 0; index < output.length; index++) {\n-\t\t\tint prev = names.put(output[index].getName(), index);\n-\t\t\tif(prev != -1){\n-\t\t\t\tlog.error(\"Duplicate Output to Column[{}] at indices {} and {}\", output[index].getName(), prev, index);\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn true;\n-\t}\n-\n-\t@JsonIgnore\n-\t@ValidationMethod(message = \"The primary column must be of type STRING\")\n-\tpublic boolean isPrimaryString() {\n-\t\treturn primary.getResultType() == MajorTypeId.STRING;\n-\t}\n-\n-\tpublic GroovyPredicate createFilter(String[] headers){\n-\t\tif(filter == null) {\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\ttry {\n-\t\t\tCompilerConfiguration config = new CompilerConfiguration();\n-\t\t\tconfig.addCompilationCustomizers(new ImportCustomizer().addImports(AUTO_IMPORTS));\n-\t\t\tconfig.setScriptBaseClass(GroovyPredicate.class.getName());\n-\n-\t\t\tGroovyShell groovy = new GroovyShell(config);\n-\n-\t\t\tfor (int col = 0; col < headers.length; col++) {\n-\t\t\t\tgroovy.setVariable(headers[col], col);\n-\t\t\t}\n-\n-\t\t\treturn  (GroovyPredicate) groovy.parse(filter);\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(\"Failed to compile filter `\" + filter + \"`\", e);\n-\t\t}\n-\t}\n-\n-\t@JsonIgnore\n-\tpublic int getWidth() {\n-\t\treturn getOutput().length;\n-\t}\n-\n-\tpublic ColumnDescription getColumnDescription(int i) {\n-\t\treturn output[i].getColumnDescription();\n-\t}\n-\n-\n-\t/**\n-\t * Create a mapping from a header to it's column position.\n-\t */\n-\tpublic static Object2IntArrayMap<String> buildHeaderMap(String[] headers) {\n-\t\tfinal int[] indices = new int[headers.length];\n-\t\tArrays.setAll(indices, i -> i);\n-\t\treturn new Object2IntArrayMap<>(headers, indices);\n-\t}\n+    private static final long serialVersionUID = 1L;\n+    private static final String[] AUTO_IMPORTS = Stream.of(\n+        LocalDate.class,\n+        Range.class\n+    ).map(Class::getName).toArray(String[]::new);\n+\n+    @NotNull\n+    private File sourceFile;\n+\n+    private String filter;\n+\n+    /**\n+     * Output producing the primary column. This should be the primary key across all tables.\n+     * Default is `COPY(\"pid\", STRING)`\n+     */\n+    @NotNull\n+    @Valid\n+    private OutputDescription primary = new CopyOutput(\"pid\", \"id\", MajorTypeId.STRING);\n+    @Valid\n+    @NotEmpty\n+    private OutputDescription[] output;\n+\n+    /**\n+     * Empty array to be used only for validation of groovy script.\n+     */\n+    public static final String[] FAKE_HEADERS = new String[50];\n+\n+    @JsonIgnore\n+    @ValidationMethod(message = \"Groovy script is not valid.\")\n+    public boolean isValidGroovyScript() {\n+        try {\n+            createFilter(FAKE_HEADERS);\n+        } catch (Exception ex) {\n+            log.error(\"Groovy script is not valid\", ex);\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n+\n+    @JsonIgnore\n+    @ValidationMethod(message = \"Each column requires a unique name\")\n+    public boolean isEachNameUnique() {\n+        Object2IntMap<String> names = new Object2IntArrayMap<>(getWidth());\n+        names.defaultReturnValue(-1);\n+\n+        for (int index = 0; index < output.length; index++) {\n+            int prev = names.put(output[index].getName(), index);\n+            if (prev != -1) {\n+                log.error(\"Duplicate Output to Column[{}] at indices {} and {}\", output[index].getName(), prev, index);\n+                return false;\n+            }\n+        }\n+\n+        return true;\n+    }\n+\n+    @JsonIgnore\n+    @ValidationMethod(message = \"The primary column must be of type STRING\")\n+    public boolean isPrimaryString() {\n+        return primary.getResultType() == MajorTypeId.STRING;\n+    }\n+\n+    public GroovyPredicate createFilter(String[] headers) {\n+        if (filter == null) {\n+            return null;\n+        }\n+\n+        try {\n+            CompilerConfiguration config = new CompilerConfiguration();\n+            config.addCompilationCustomizers(new ImportCustomizer().addImports(AUTO_IMPORTS));\n+            config.setScriptBaseClass(GroovyPredicate.class.getName());\n+\n+            GroovyShell groovy = new GroovyShell(config);\n+\n+            for (int col = 0; col < headers.length; col++) {\n+                groovy.setVariable(headers[col], col);\n+            }\n+\n+            return (GroovyPredicate) groovy.parse(filter);\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Failed to compile filter `\" + filter + \"`\", e);\n+        }\n+    }\n+\n+    @JsonIgnore\n+    public int getWidth() {\n+        return getOutput().length;\n+    }\n+\n+    public ColumnDescription getColumnDescription(int i) {\n+        return output[i].getColumnDescription();\n+    }\n+\n+\n+    /**\n+     * Create a mapping from a header to it's column position.\n+     */\n+    public static Object2IntArrayMap<String> buildHeaderMap(String[] headers) {\n+        final int[] indices = new int[headers.length];\n+        Arrays.setAll(indices, i -> i);\n+        return new Object2IntArrayMap<>(headers, indices);\n+    }\n }\n",
            "diff_size": 106
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
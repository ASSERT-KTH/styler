{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1652",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1652/AnnotationTypeVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1652/AnnotationTypeVisitor.java\nindex d3aa049aedc..c0a330a430d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1652/AnnotationTypeVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1652/AnnotationTypeVisitor.java\n@@ -17,25 +17,26 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.visitors;\n \n import java.lang.annotation.Annotation;\n import javax.lang.model.element.TypeElement;\n import javax.lang.model.util.SimpleElementVisitor8;\n \n-public class AnnotationTypeVisitor extends SimpleElementVisitor8<Boolean,Void>\n+public class AnnotationTypeVisitor extends SimpleElementVisitor8<Boolean, Void>\n {\n \n-    private final Class<? extends Annotation> annotationType;\n+  private final Class<? extends Annotation> annotationType;\n \n-    public AnnotationTypeVisitor( Class<? extends Annotation> annotationType )\n-    {\n-        this.annotationType = annotationType;\n-    }\n+  public AnnotationTypeVisitor(Class<? extends Annotation> annotationType)\n+  {\n+    this.annotationType = annotationType;\n+  }\n \n-    @Override\n-    public Boolean visitType( TypeElement element, Void aVoid )\n-    {\n-        return element.getQualifiedName().contentEquals( annotationType.getName() );\n-    }\n+  @Override\n+  public Boolean visitType(TypeElement element, Void aVoid)\n+  {\n+    return element.getQualifiedName().contentEquals(annotationType.getName());\n+  }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1652/AnnotationTypeVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1652/AnnotationTypeVisitor.java\nindex d3aa049aedc..57554535630 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1652/AnnotationTypeVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1652/AnnotationTypeVisitor.java\n@@ -25,7 +25,6 @@ import javax.lang.model.util.SimpleElementVisitor8;\n \n public class AnnotationTypeVisitor extends SimpleElementVisitor8<Boolean,Void>\n {\n-\n     private final Class<? extends Annotation> annotationType;\n \n     public AnnotationTypeVisitor( Class<? extends Annotation> annotationType )\n@@ -38,4 +37,4 @@ public class AnnotationTypeVisitor extends SimpleElementVisitor8<Boolean,Void>\n     {\n         return element.getQualifiedName().contentEquals( annotationType.getName() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
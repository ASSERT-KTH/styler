{
    "project_name": "neo4j-neo4j",
    "error_id": "986",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/986/StandardConstraintSemantics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/986/StandardConstraintSemantics.java\nindex 4f513844ebb..97d93b03671 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/986/StandardConstraintSemantics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/986/StandardConstraintSemantics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.constraints;\n \n import org.neo4j.annotations.service.ServiceProvider;\n@@ -53,12 +54,12 @@ public class StandardConstraintSemantics extends ConstraintSemantics\n \n     public StandardConstraintSemantics()\n     {\n-        this( 1 );\n+        this(1);\n     }\n \n-    protected StandardConstraintSemantics( int priority )\n+    protected StandardConstraintSemantics(int priority)\n     {\n-        super( priority );\n+        super(priority);\n     }\n \n     @Override\n@@ -68,91 +69,94 @@ public class StandardConstraintSemantics extends ConstraintSemantics\n     }\n \n     @Override\n-    public void validateNodeKeyConstraint( NodeLabelIndexCursor allNodes, NodeCursor nodeCursor, PropertyCursor propertyCursor,\n-            LabelSchemaDescriptor descriptor, TokenNameLookup tokenNameLookup ) throws CreateConstraintFailureException\n+    public void validateNodeKeyConstraint(NodeLabelIndexCursor allNodes, NodeCursor nodeCursor, PropertyCursor propertyCursor,\n+                                          LabelSchemaDescriptor descriptor, TokenNameLookup tokenNameLookup) throws CreateConstraintFailureException\n     {\n-        throw nodeKeyConstraintsNotAllowed( descriptor );\n+        throw nodeKeyConstraintsNotAllowed(descriptor);\n     }\n \n     @Override\n-    public void validateNodePropertyExistenceConstraint( NodeLabelIndexCursor allNodes, NodeCursor nodeCursor, PropertyCursor propertyCursor,\n-            LabelSchemaDescriptor descriptor, TokenNameLookup tokenNameLookup ) throws CreateConstraintFailureException\n+    public void validateNodePropertyExistenceConstraint(NodeLabelIndexCursor allNodes, NodeCursor nodeCursor, PropertyCursor propertyCursor,\n+                                                        LabelSchemaDescriptor descriptor, TokenNameLookup tokenNameLookup)\n+      throws CreateConstraintFailureException\n     {\n-        throw propertyExistenceConstraintsNotAllowed( descriptor );\n+        throw propertyExistenceConstraintsNotAllowed(descriptor);\n     }\n \n     @Override\n-    public void validateRelationshipPropertyExistenceConstraint( RelationshipScanCursor relationshipCursor, PropertyCursor propertyCursor,\n-            RelationTypeSchemaDescriptor descriptor, TokenNameLookup tokenNameLookup )  throws CreateConstraintFailureException\n+    public void validateRelationshipPropertyExistenceConstraint(RelationshipScanCursor relationshipCursor, PropertyCursor propertyCursor,\n+                                                                RelationTypeSchemaDescriptor descriptor, TokenNameLookup tokenNameLookup)\n+      throws CreateConstraintFailureException\n     {\n-        throw propertyExistenceConstraintsNotAllowed( descriptor );\n+        throw propertyExistenceConstraintsNotAllowed(descriptor);\n     }\n \n     @Override\n-    public void validateRelationshipPropertyExistenceConstraint( RelationshipTypeIndexCursor allRelationships, RelationshipScanCursor relationshipCursor,\n-            PropertyCursor propertyCursor, RelationTypeSchemaDescriptor descriptor, TokenNameLookup tokenNameLookup ) throws CreateConstraintFailureException\n+    public void validateRelationshipPropertyExistenceConstraint(RelationshipTypeIndexCursor allRelationships, RelationshipScanCursor relationshipCursor,\n+                                                                PropertyCursor propertyCursor, RelationTypeSchemaDescriptor descriptor,\n+                                                                TokenNameLookup tokenNameLookup) throws CreateConstraintFailureException\n     {\n-        throw propertyExistenceConstraintsNotAllowed( descriptor );\n+        throw propertyExistenceConstraintsNotAllowed(descriptor);\n     }\n \n     @Override\n-    public ConstraintDescriptor readConstraint( ConstraintDescriptor constraint )\n+    public ConstraintDescriptor readConstraint(ConstraintDescriptor constraint)\n     {\n-        switch ( constraint.type() )\n+        switch (constraint.type())\n         {\n-        case EXISTS:\n-            return readNonStandardConstraint( constraint, ERROR_MESSAGE_EXISTS );\n-        case UNIQUE_EXISTS:\n-            return readNonStandardConstraint( constraint, ERROR_MESSAGE_NODE_KEY );\n-        default:\n-            return constraint;\n+            case EXISTS:\n+                return readNonStandardConstraint(constraint, ERROR_MESSAGE_EXISTS);\n+            case UNIQUE_EXISTS:\n+                return readNonStandardConstraint(constraint, ERROR_MESSAGE_NODE_KEY);\n+            default:\n+                return constraint;\n         }\n     }\n \n-    protected ConstraintDescriptor readNonStandardConstraint( ConstraintDescriptor constraint, String errorMessage )\n+    protected ConstraintDescriptor readNonStandardConstraint(ConstraintDescriptor constraint, String errorMessage)\n     {\n         // When opening a store in Community Edition that contains a Property Existence Constraint\n-        throw new IllegalStateException( errorMessage );\n+        throw new IllegalStateException(errorMessage);\n     }\n \n-    private CreateConstraintFailureException propertyExistenceConstraintsNotAllowed( SchemaDescriptor descriptor )\n+    private CreateConstraintFailureException propertyExistenceConstraintsNotAllowed(SchemaDescriptor descriptor)\n     {\n         // When creating a Property Existence Constraint in Community Edition\n         return new CreateConstraintFailureException(\n-                ConstraintDescriptorFactory.existsForSchema( descriptor ), ERROR_MESSAGE_EXISTS );\n+          ConstraintDescriptorFactory.existsForSchema(descriptor), ERROR_MESSAGE_EXISTS);\n     }\n \n-    private CreateConstraintFailureException nodeKeyConstraintsNotAllowed( SchemaDescriptor descriptor )\n+    private CreateConstraintFailureException nodeKeyConstraintsNotAllowed(SchemaDescriptor descriptor)\n     {\n         // When creating a Node Key Constraint in Community Edition\n         return new CreateConstraintFailureException(\n-                ConstraintDescriptorFactory.existsForSchema( descriptor ), ERROR_MESSAGE_NODE_KEY );\n+          ConstraintDescriptorFactory.existsForSchema(descriptor), ERROR_MESSAGE_NODE_KEY);\n     }\n \n     @Override\n     public ConstraintDescriptor createUniquenessConstraintRule(\n-            long ruleId, UniquenessConstraintDescriptor descriptor, long indexId )\n+      long ruleId, UniquenessConstraintDescriptor descriptor, long indexId)\n     {\n-        return accessor.createUniquenessConstraintRule( ruleId, descriptor, indexId );\n+        return accessor.createUniquenessConstraintRule(ruleId, descriptor, indexId);\n     }\n \n     @Override\n     public ConstraintDescriptor createNodeKeyConstraintRule(\n-            long ruleId, NodeKeyConstraintDescriptor descriptor, long indexId ) throws CreateConstraintFailureException\n+      long ruleId, NodeKeyConstraintDescriptor descriptor, long indexId) throws CreateConstraintFailureException\n     {\n-        throw nodeKeyConstraintsNotAllowed( descriptor.schema() );\n+        throw nodeKeyConstraintsNotAllowed(descriptor.schema());\n     }\n \n     @Override\n-    public ConstraintDescriptor createExistenceConstraint( long ruleId, ConstraintDescriptor descriptor )\n-            throws CreateConstraintFailureException\n+    public ConstraintDescriptor createExistenceConstraint(long ruleId, ConstraintDescriptor descriptor)\n+      throws CreateConstraintFailureException\n     {\n-        throw propertyExistenceConstraintsNotAllowed( descriptor.schema() );\n+        throw propertyExistenceConstraintsNotAllowed(descriptor.schema());\n     }\n \n     @Override\n-    public TxStateVisitor decorateTxStateVisitor( StorageReader storageReader, Read read, CursorFactory cursorFactory, ReadableTransactionState state,\n-            TxStateVisitor visitor, PageCursorTracer pageCursorTracer, MemoryTracker memoryTracker )\n+    public TxStateVisitor decorateTxStateVisitor(StorageReader storageReader, Read read, CursorFactory cursorFactory, ReadableTransactionState state,\n+                                                 TxStateVisitor visitor, PageCursorTracer pageCursorTracer, MemoryTracker memoryTracker)\n     {\n         return visitor;\n     }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/986/StandardConstraintSemantics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/986/StandardConstraintSemantics.java\nindex 4f513844ebb..d541424ffbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/986/StandardConstraintSemantics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/986/StandardConstraintSemantics.java\n@@ -156,4 +156,4 @@ public class StandardConstraintSemantics extends ConstraintSemantics\n     {\n         return visitor;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
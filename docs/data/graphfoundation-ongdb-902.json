{
    "project_name": "graphfoundation-ongdb",
    "error_id": "902",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/902/PagedTraverser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/902/PagedTraverser.java\nindex df3b2e38261..e4d830ebe91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/902/PagedTraverser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/902/PagedTraverser.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.paging;\n \n import java.util.ArrayList;\n@@ -28,63 +29,63 @@ import org.neo4j.graphdb.traversal.Traverser;\n \n public class PagedTraverser implements Iterator<List<Path>>, Iterable<List<Path>>, Leasable\n {\n-    private final int pageSize;\n-    private final Traverser traverser;\n-    private Iterator<Path> iterator;\n+  private final int pageSize;\n+  private final Traverser traverser;\n+  private Iterator<Path> iterator;\n \n-    public PagedTraverser( Traverser traverser, int pageSize )\n-    {\n-        this.traverser = traverser;\n-        this.pageSize = pageSize;\n-    }\n+  public PagedTraverser(Traverser traverser, int pageSize)\n+  {\n+    this.traverser = traverser;\n+    this.pageSize = pageSize;\n+  }\n \n-    @Override\n-    public List<Path> next()\n+  @Override\n+  public List<Path> next()\n+  {\n+    ensureIteratorStarted();\n+    if (!iterator.hasNext())\n     {\n-        ensureIteratorStarted();\n-        if ( !iterator.hasNext() )\n-        {\n-            return null;\n-        }\n-\n-        List<Path> result = new ArrayList<>();\n-\n-        for ( int i = 0; i < pageSize; i++ )\n-        {\n-            if ( !iterator.hasNext() )\n-            {\n-                break;\n-            }\n-            result.add( iterator.next() );\n-        }\n-\n-        return result;\n+      return null;\n     }\n \n-    private void ensureIteratorStarted()\n-    {\n-        if ( iterator == null )\n-        {\n-            iterator = traverser.iterator();\n-        }\n-    }\n+    List<Path> result = new ArrayList<>();\n \n-    @Override\n-    public boolean hasNext()\n+    for (int i = 0; i < pageSize; i++)\n     {\n-        ensureIteratorStarted();\n-        return iterator.hasNext();\n+      if (!iterator.hasNext())\n+      {\n+        break;\n+      }\n+      result.add(iterator.next());\n     }\n \n-    @Override\n-    public void remove()\n-    {\n-        iterator.remove();\n-    }\n+    return result;\n+  }\n \n-    @Override\n-    public Iterator<List<Path>> iterator()\n+  private void ensureIteratorStarted()\n+  {\n+    if (iterator == null)\n     {\n-        return this;\n+      iterator = traverser.iterator();\n     }\n+  }\n+\n+  @Override\n+  public boolean hasNext()\n+  {\n+    ensureIteratorStarted();\n+    return iterator.hasNext();\n+  }\n+\n+  @Override\n+  public void remove()\n+  {\n+    iterator.remove();\n+  }\n+\n+  @Override\n+  public Iterator<List<Path>> iterator()\n+  {\n+    return this;\n+  }\n }\n",
            "diff_size": 75
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/902/PagedTraverser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/902/PagedTraverser.java\nindex df3b2e38261..c51f497b179 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/902/PagedTraverser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/902/PagedTraverser.java\n@@ -48,8 +48,7 @@ public class PagedTraverser implements Iterator<List<Path>>, Iterable<List<Path>\n         }\n \n         List<Path> result = new ArrayList<>();\n-\n-        for ( int i = 0; i < pageSize; i++ )\n+for ( int i = 0; i < pageSize; i++ )\n         {\n             if ( !iterator.hasNext() )\n             {\n@@ -87,4 +86,4 @@ public class PagedTraverser implements Iterator<List<Path>>, Iterable<List<Path>\n     {\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
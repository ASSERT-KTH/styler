{
    "project_name": "kitodo-kitodo-production",
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "52",
                "column": "5",
                "severity": "warning",
                "message": "'METHOD_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "    private final CommandInterface commandService = new KitodoServiceLoader<CommandInterface>(CommandInterface.class)\n            .loadModule();\n    @Override\n    public URI create(URI parentFolderUri, String name, boolean file) throws IOException {\n        if (file) {\n            return createResource(parentFolderUri, name);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/18/FileManagement.java\nindex b90f5bc2b7f..27349b33bf8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/18/FileManagement.java\n@@ -49,6 +49,7 @@ public class FileManagement implements FileManagementInterface {\n \n     private final CommandInterface commandService = new KitodoServiceLoader<CommandInterface>(CommandInterface.class)\n             .loadModule();\n+\n     @Override\n     public URI create(URI parentFolderUri, String name, boolean file) throws IOException {\n         if (file) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/18/FileManagement.java\nindex b90f5bc2b7f..14e9907d71c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/18/FileManagement.java\n@@ -48,7 +48,8 @@ public class FileManagement implements FileManagementInterface {\n     private static final String IMAGES_DIRECTORY_NAME = \"images\";\n \n     private final CommandInterface commandService = new KitodoServiceLoader<CommandInterface>(CommandInterface.class)\n-            .loadModule();\n+        .loadModule();\n+\n     @Override\n     public URI create(URI parentFolderUri, String name, boolean file) throws IOException {\n         if (file) {\n@@ -208,7 +209,7 @@ public class FileManagement implements FileManagementInterface {\n         if (!success) {\n             logger.error(\"Rename {} failed. This is a permanent error. Giving up.\", fileToRename.getName());\n             throw new IOException(\n-                    \"Renaming of \" + fileToRename.getName() + \" into \" + renamedFile.getName() + \" failed.\");\n+                \"Renaming of \" + fileToRename.getName() + \" into \" + renamedFile.getName() + \" failed.\");\n         }\n \n         if (millisWaited > 0) {\n@@ -266,8 +267,7 @@ public class FileManagement implements FileManagementInterface {\n     /**\n      * Iterate over children directories of directory.\n      *\n-     * @param directory\n-     *            as URI\n+     * @param directory as URI\n      * @return amount of files\n      */\n     private Integer iterateOverDirectories(URI directory) {\n@@ -289,8 +289,7 @@ public class FileManagement implements FileManagementInterface {\n     /**\n      * Iterate over children specific directories of directory.\n      *\n-     * @param directory\n-     *            as URI\n+     * @param directory as URI\n      * @return amount of specific (eg. image) files\n      */\n     private Integer iterateOverSpecificDirectories(FilenameFilter filter, URI directory) {\n@@ -345,8 +344,7 @@ public class FileManagement implements FileManagementInterface {\n     /**\n      * Lists all Files at the given path.\n      *\n-     * @param file\n-     *            the Directory to get the Files from\n+     * @param file the Directory to get the Files from\n      * @return an Array of Files\n      */\n     private File[] listFiles(File file) {\n@@ -357,8 +355,7 @@ public class FileManagement implements FileManagementInterface {\n     /**\n      * Lists all files at the given path and with a given filter.\n      *\n-     * @param file\n-     *            the directory to get the Files from\n+     * @param file the directory to get the Files from\n      * @return an Array of Files\n      */\n     private File[] listFiles(FilenameFilter filter, File file) {\n@@ -384,23 +381,20 @@ public class FileManagement implements FileManagementInterface {\n \n     @Override\n     public URI getProcessSubTypeUri(URI processBaseUri, String processTitle, ProcessSubType subType,\n-            String resourceName) {\n+                                    String resourceName) {\n         return URI.create(getProcessSubType(processBaseUri.toString(), processTitle, subType, resourceName));\n     }\n \n     /**\n      * Get part of URI specific for process and process sub type.\n      *\n-     * @param processTitle\n-     *            tile of process\n-     * @param processSubType\n-     *            object\n-     * @param resourceName\n-     *            as String\n+     * @param processTitle   tile of process\n+     * @param processSubType object\n+     * @param resourceName   as String\n      * @return process specific part of URI\n      */\n     private String getProcessSubType(String processID, String processTitle, ProcessSubType processSubType,\n-            String resourceName) {\n+                                     String resourceName) {\n         processTitle = encodeTitle(processTitle);\n         final String ocr = \"/ocr/\";\n         if (Objects.isNull(resourceName)) {\n@@ -436,8 +430,7 @@ public class FileManagement implements FileManagementInterface {\n     /**\n      * Remove possible white spaces from process titles.\n      *\n-     * @param title\n-     *            process title\n+     * @param title process title\n      * @return encoded process title\n      */\n     private String encodeTitle(String title) {\n@@ -450,8 +443,7 @@ public class FileManagement implements FileManagementInterface {\n     /**\n      * Gets the image source directory.\n      *\n-     * @param processTitle\n-     *            title of the process, to get the source directory for\n+     * @param processTitle title of the process, to get the source directory for\n      * @return the source directory as a string\n      */\n     private URI getSourceDirectory(String processId, String processTitle) {\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/18/FileManagement.java\nindex b90f5bc2b7f..80cc1b7bb26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/18/FileManagement.java\n@@ -49,7 +49,8 @@ public class FileManagement implements FileManagementInterface {\n \n     private final CommandInterface commandService = new KitodoServiceLoader<CommandInterface>(CommandInterface.class)\n             .loadModule();\n-    @Override\n+\n+@Override\n     public URI create(URI parentFolderUri, String name, boolean file) throws IOException {\n         if (file) {\n             return createResource(parentFolderUri, name);\n@@ -546,4 +547,4 @@ public class FileManagement implements FileManagementInterface {\n         uri = fileMapper.mapUriToKitodoDataDirectoryUri(uri);\n         return new File(uri);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "101",
                    "column": "20",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "column": "16",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "column": "20",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "column": "16",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "189",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/18/FileManagement.java\nindex b90f5bc2b7f..278f8d040ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/18/FileManagement.java\n@@ -26,7 +26,6 @@ import java.nio.file.Paths;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Objects;\n-\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.io.FilenameUtils;\n import org.apache.commons.lang.SystemUtils;\n@@ -44,11 +43,9 @@ public class FileManagement implements FileManagementInterface {\n \n     private static final Logger logger = LogManager.getLogger(FileManagement.class);\n     private static final FileMapper fileMapper = new FileMapper();\n-\n     private static final String IMAGES_DIRECTORY_NAME = \"images\";\n+    private final CommandInterface commandService = new KitodoServiceLoader<CommandInterface>(CommandInterface.class).loadModule();\n \n-    private final CommandInterface commandService = new KitodoServiceLoader<CommandInterface>(CommandInterface.class)\n-            .loadModule();\n     @Override\n     public URI create(URI parentFolderUri, String name, boolean file) throws IOException {\n         if (file) {\n@@ -57,6 +54,7 @@ public class FileManagement implements FileManagementInterface {\n         return createDirectory(parentFolderUri, name);\n     }\n \n+\n     private URI createDirectory(URI parentFolderUri, String directoryName) throws IOException {\n         parentFolderUri = fileMapper.mapUriToKitodoDataDirectoryUri(parentFolderUri);\n         File directory = new File(Paths.get(new File(parentFolderUri).getPath(), directoryName).toUri());\n@@ -66,6 +64,7 @@ public class FileManagement implements FileManagementInterface {\n         return fileMapper.unmapUriFromKitodoDataDirectoryUri(Paths.get(directory.getPath()).toUri());\n     }\n \n+\n     private URI createResource(URI targetFolder, String fileName) throws IOException {\n         targetFolder = fileMapper.mapUriToKitodoDataDirectoryUri(targetFolder);\n         File file = new File(Paths.get(new File(targetFolder).getPath(), fileName).toUri());\n@@ -99,12 +98,13 @@ public class FileManagement implements FileManagementInterface {\n         } else if (isFile(sourceUri) && ((targetFile.exists() && !targetFile.isDirectory()) || !isDirectory)) {\n             copyFile(new File(sourceUri), new File(targetUri));\n         } else if (isFile(sourceUri)) {\n-            copyFileToDirectory(new File(sourceUri), new File(targetUri));\n-        } else if (isDirectory(sourceUri)) {\n-            copyDirectory(new File(sourceUri), new File(targetUri));\n-        }\n+                   copyFileToDirectory(new File(sourceUri), new File(targetUri));\n+               } else if (isDirectory(sourceUri)) {\n+                   copyDirectory(new File(sourceUri), new File(targetUri));\n+               }\n     }\n \n+\n     private void copyDirectory(File sourceDirectory, File targetDirectory) throws IOException {\n         if (!targetDirectory.exists()) {\n             targetDirectory.mkdirs();\n@@ -112,10 +112,12 @@ public class FileManagement implements FileManagementInterface {\n         FileUtils.copyDirectory(sourceDirectory, targetDirectory, false);\n     }\n \n+\n     private void copyFile(File sourceFile, File destinationFile) throws IOException {\n         FileUtils.copyFile(sourceFile, destinationFile);\n     }\n \n+\n     private void copyFileToDirectory(File sourceFile, File targetDirectory) throws IOException {\n         FileUtils.copyFileToDirectory(sourceFile, targetDirectory);\n     }\n@@ -155,7 +157,6 @@ public class FileManagement implements FileManagementInterface {\n         if (Objects.isNull(uri) || Objects.isNull(newName)) {\n             return null;\n         }\n-\n         String substring = uri.toString().substring(0, uri.toString().lastIndexOf('/') + 1);\n         if (newName.contains(\"/\")) {\n             newName = newName.substring(newName.lastIndexOf('/') + 1);\n@@ -163,36 +164,29 @@ public class FileManagement implements FileManagementInterface {\n         URI newFileUri = URI.create(substring + newName);\n         URI mappedFileURI = fileMapper.mapUriToKitodoDataDirectoryUri(uri);\n         URI mappedNewFileURI = fileMapper.mapUriToKitodoDataDirectoryUri(newFileUri);\n-\n         if (!fileExist(mappedFileURI)) {\n             logger.debug(\"File {} does not exist for renaming.\", uri.getPath());\n             throw new FileNotFoundException(uri + \" does not exist for renaming.\");\n         }\n-\n         if (fileExist(mappedNewFileURI)) {\n             String message = \"Renaming of \" + uri + \" into \" + newName + \" failed: Destination exists.\";\n             logger.error(message);\n             throw new IOException(message);\n         }\n-\n         return performRename(mappedFileURI, mappedNewFileURI);\n     }\n \n+\n     private URI performRename(URI mappedFileURI, URI mappedNewFileURI) throws IOException {\n         File fileToRename = new File(mappedFileURI);\n         File renamedFile = new File(mappedNewFileURI);\n-\n         final int sleepIntervalMilliseconds = 20;\n         final int maxWaitMilliseconds = KitodoConfig.getIntParameter(ParameterFileManagement.FILE_MAX_WAIT_MILLISECONDS);\n-\n         boolean success;\n         int millisWaited = 0;\n-\n         do {\n             if (SystemUtils.IS_OS_WINDOWS && millisWaited == sleepIntervalMilliseconds) {\n-                logger.warn(\"Renaming {} failed. This is Windows. Running the garbage collector may yield good\"\n-                        + \" results. Forcing immediate garbage collection now!\",\n-                    fileToRename.getName());\n+                logger.warn(\"Renaming {} failed. This is Windows. Running the garbage collector may yield good\" + \" results. Forcing immediate garbage collection now!\", fileToRename.getName());\n                 System.gc();\n             }\n             success = fileToRename.renameTo(renamedFile);\n@@ -204,19 +198,19 @@ public class FileManagement implements FileManagementInterface {\n                 millisWaited += sleepIntervalMilliseconds;\n             }\n         } while (!success && millisWaited < maxWaitMilliseconds);\n-\n         if (!success) {\n-            logger.error(\"Rename {} failed. This is a permanent error. Giving up.\", fileToRename.getName());\n-            throw new IOException(\n-                    \"Renaming of \" + fileToRename.getName() + \" into \" + renamedFile.getName() + \" failed.\");\n+            logger.error(\"Rename {} failed. This is a permanent error. Giving up.\",\n+                fileToRename.getName());\n+            throw new IOException(\"Renaming of \" + fileToRename.getName() + \" into \" + renamedFile.getName() + \" failed.\");\n         }\n-\n         if (millisWaited > 0) {\n-            logger.info(\"Rename finally succeeded after {} milliseconds.\", Integer.toString(millisWaited));\n+            logger.info(\"Rename finally succeeded after {} milliseconds.\",\n+                Integer.toString(millisWaited));\n         }\n         return fileMapper.unmapUriFromKitodoDataDirectoryUri(Paths.get(renamedFile.getPath()).toUri());\n     }\n \n+\n     private void waitForThread(int sleepIntervalMilliseconds) {\n         try {\n             Thread.sleep(sleepIntervalMilliseconds);\n@@ -270,6 +264,8 @@ public class FileManagement implements FileManagementInterface {\n      *            as URI\n      * @return amount of files\n      */\n+\n+\n     private Integer iterateOverDirectories(URI directory) {\n         int count = 0;\n         if (isDirectory(directory)) {\n@@ -293,6 +289,8 @@ public class FileManagement implements FileManagementInterface {\n      *            as URI\n      * @return amount of specific (eg. image) files\n      */\n+\n+\n     private Integer iterateOverSpecificDirectories(FilenameFilter filter, URI directory) {\n         int count = 0;\n         if (isDirectory(directory)) {\n@@ -349,6 +347,8 @@ public class FileManagement implements FileManagementInterface {\n      *            the Directory to get the Files from\n      * @return an Array of Files\n      */\n+\n+\n     private File[] listFiles(File file) {\n         File[] unchecked = file.listFiles();\n         return unchecked != null ? unchecked : new File[0];\n@@ -361,6 +361,8 @@ public class FileManagement implements FileManagementInterface {\n      *            the directory to get the Files from\n      * @return an Array of Files\n      */\n+\n+\n     private File[] listFiles(FilenameFilter filter, File file) {\n         File[] unchecked = file.listFiles(filter);\n         return unchecked != null ? unchecked : new File[0];\n@@ -383,8 +385,7 @@ public class FileManagement implements FileManagementInterface {\n     }\n \n     @Override\n-    public URI getProcessSubTypeUri(URI processBaseUri, String processTitle, ProcessSubType subType,\n-            String resourceName) {\n+    public URI getProcessSubTypeUri(URI processBaseUri, String processTitle, ProcessSubType subType, String resourceName) {\n         return URI.create(getProcessSubType(processBaseUri.toString(), processTitle, subType, resourceName));\n     }\n \n@@ -399,8 +400,9 @@ public class FileManagement implements FileManagementInterface {\n      *            as String\n      * @return process specific part of URI\n      */\n-    private String getProcessSubType(String processID, String processTitle, ProcessSubType processSubType,\n-            String resourceName) {\n+\n+\n+    private String getProcessSubType(String processID, String processTitle, ProcessSubType processSubType, String resourceName) {\n         processTitle = encodeTitle(processTitle);\n         final String ocr = \"/ocr/\";\n         if (Objects.isNull(resourceName)) {\n@@ -440,6 +442,8 @@ public class FileManagement implements FileManagementInterface {\n      *            process title\n      * @return encoded process title\n      */\n+\n+\n     private String encodeTitle(String title) {\n         if (title.contains(\" \")) {\n             title = title.replace(\" \", \"__\");\n@@ -454,6 +458,8 @@ public class FileManagement implements FileManagementInterface {\n      *            title of the process, to get the source directory for\n      * @return the source directory as a string\n      */\n+\n+\n     private URI getSourceDirectory(String processId, String processTitle) {\n         final String suffix = \"_\" + KitodoConfig.getParameter(ParameterFileManagement.DIRECTORY_SUFFIX, \"tif\");\n         URI dir = URI.create(getProcessSubType(processId, processTitle, ProcessSubType.IMAGE, null));\n@@ -475,7 +481,6 @@ public class FileManagement implements FileManagementInterface {\n         } catch (IOException e) {\n             logger.error(e.getMessage(), e);\n         }\n-\n         return sourceFolder;\n     }\n \n@@ -486,19 +491,16 @@ public class FileManagement implements FileManagementInterface {\n         if (userHome.exists()) {\n             return false;\n         }\n-\n         String command = KitodoConfig.getParameter(\"script_createSymLink\");\n         CommandService commandService = new CommandService();\n         List<String> parameters = new ArrayList<>();\n         parameters.add(imagePath.getAbsolutePath());\n         parameters.add(userHome.getAbsolutePath());\n-\n         if (onlyRead) {\n             parameters.add(KitodoConfig.getParameter(\"UserForImageReading\", \"root\"));\n         } else {\n             parameters.add(userLogin);\n         }\n-\n         try {\n             return commandService.runCommand(new File(command), parameters).isSuccessful();\n         } catch (FileNotFoundException e) {\n@@ -513,7 +515,6 @@ public class FileManagement implements FileManagementInterface {\n     @Override\n     public boolean deleteSymLink(URI homeUri) {\n         File homeFile = new File(fileMapper.mapUriToKitodoDataDirectoryUri(homeUri));\n-\n         String command = KitodoConfig.getParameter(\"script_deleteSymLink\");\n         CommandService commandService = new CommandService();\n         List<String> parameters = new ArrayList<>();\n@@ -529,6 +530,7 @@ public class FileManagement implements FileManagementInterface {\n         }\n     }\n \n+\n     private String getDecodedPath(URI uri) {\n         uri = fileMapper.mapUriToKitodoDataDirectoryUri(uri);\n         String uriToDecode = new File(uri).getPath();\n@@ -542,8 +544,9 @@ public class FileManagement implements FileManagementInterface {\n         return decodedPath;\n     }\n \n+\n     public File getFile(URI uri) {\n         uri = fileMapper.mapUriToKitodoDataDirectoryUri(uri);\n         return new File(uri);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/18/FileManagement.java\nindex b90f5bc2b7f..27349b33bf8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/18/FileManagement.java\n@@ -49,6 +49,7 @@ public class FileManagement implements FileManagementInterface {\n \n     private final CommandInterface commandService = new KitodoServiceLoader<CommandInterface>(CommandInterface.class)\n             .loadModule();\n+\n     @Override\n     public URI create(URI parentFolderUri, String name, boolean file) throws IOException {\n         if (file) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "53",
                    "column": "13",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/18/FileManagement.java\nindex b90f5bc2b7f..f0ef7fb933e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/18/FileManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/18/FileManagement.java\n@@ -49,7 +49,8 @@ public class FileManagement implements FileManagementInterface {\n \n     private final CommandInterface commandService = new KitodoServiceLoader<CommandInterface>(CommandInterface.class)\n             .loadModule();\n-    @Override\n+\n+            @Override\n     public URI create(URI parentFolderUri, String name, boolean file) throws IOException {\n         if (file) {\n             return createResource(parentFolderUri, name);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
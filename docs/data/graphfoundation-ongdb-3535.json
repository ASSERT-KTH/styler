{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3535",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3535/UpdatePuller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3535/UpdatePuller.java\nindex 4dcbda45e74..0f082cc5c37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3535/UpdatePuller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3535/UpdatePuller.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha;\n \n /**\n@@ -30,50 +31,50 @@ package org.neo4j.kernel.ha;\n  */\n public interface UpdatePuller\n {\n-    /**\n-     * Pull all available updates.\n-     *\n-     * @throws InterruptedException in case if interrupted while waiting for updates\n-     */\n-    void pullUpdates() throws InterruptedException;\n+  /**\n+   * Pull all available updates.\n+   *\n+   * @throws InterruptedException in case if interrupted while waiting for updates\n+   */\n+  void pullUpdates() throws InterruptedException;\n \n-    /**\n-     * Try to pull all updates\n-     *\n-     * @return true if all updates pulled, false if updater fail on update retrieval\n-     * @throws InterruptedException in case if interrupted while waiting for updates\n-     */\n-    boolean tryPullUpdates() throws InterruptedException;\n+  /**\n+   * Try to pull all updates\n+   *\n+   * @return true if all updates pulled, false if updater fail on update retrieval\n+   * @throws InterruptedException in case if interrupted while waiting for updates\n+   */\n+  boolean tryPullUpdates() throws InterruptedException;\n \n-    /**\n-     * Start update pulling\n-     */\n-    void start();\n+  /**\n+   * Start update pulling\n+   */\n+  void start();\n \n-    /**\n-     * Terminate update pulling\n-     */\n-    void stop();\n+  /**\n+   * Terminate update pulling\n+   */\n+  void stop();\n \n-    /**\n-     * Pull updates and waits for the supplied condition to be\n-     * fulfilled as part of the update pulling happening.\n-     *\n-     * @param condition {@link UpdatePuller.Condition} to wait for.\n-     * @param assertPullerActive if {@code true} then observing an inactive update puller\n-     * will throw an {@link IllegalStateException},\n-     * @throws InterruptedException if we were interrupted while awaiting the condition.\n-     * @throws IllegalStateException if {@code strictlyAssertActive} and the update puller\n-     * became inactive while awaiting the condition.\n-     */\n-    void pullUpdates( Condition condition, boolean assertPullerActive ) throws InterruptedException;\n+  /**\n+   * Pull updates and waits for the supplied condition to be\n+   * fulfilled as part of the update pulling happening.\n+   *\n+   * @param condition          {@link UpdatePuller.Condition} to wait for.\n+   * @param assertPullerActive if {@code true} then observing an inactive update puller\n+   *                           will throw an {@link IllegalStateException},\n+   * @throws InterruptedException  if we were interrupted while awaiting the condition.\n+   * @throws IllegalStateException if {@code strictlyAssertActive} and the update puller\n+   *                               became inactive while awaiting the condition.\n+   */\n+  void pullUpdates(Condition condition, boolean assertPullerActive) throws InterruptedException;\n \n-    /**\n-     * Condition to be meet during update pulling.\n-     */\n-    interface Condition\n-    {\n-        boolean evaluate( int currentTicket, int targetTicket );\n-    }\n+  /**\n+   * Condition to be meet during update pulling.\n+   */\n+  interface Condition\n+  {\n+    boolean evaluate(int currentTicket, int targetTicket);\n+  }\n \n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3535/UpdatePuller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3535/UpdatePuller.java\nindex 4dcbda45e74..47cc933f086 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3535/UpdatePuller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3535/UpdatePuller.java\n@@ -75,5 +75,4 @@ public interface UpdatePuller\n     {\n         boolean evaluate( int currentTicket, int targetTicket );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
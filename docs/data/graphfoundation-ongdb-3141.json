{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3141",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3141/PowerOfTwoQuantizedTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3141/PowerOfTwoQuantizedTable.java\nindex 627c7ac87d8..ba3bbb9017c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3141/PowerOfTwoQuantizedTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3141/PowerOfTwoQuantizedTable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive.hopscotch;\n \n import static java.lang.Integer.highestOneBit;\n@@ -29,105 +30,105 @@ import static java.lang.String.format;\n  */\n public abstract class PowerOfTwoQuantizedTable<VALUE> implements Table<VALUE>\n {\n-    protected final int h;\n-    protected final int capacity;\n-    protected int tableMask;\n-    protected int size;\n-\n-    protected PowerOfTwoQuantizedTable( int capacity, int h )\n-    {\n-        if ( h < 4 || h > 32 )\n-        {\n-            throw new IllegalArgumentException( \"h needs to be 4 <= h <= 32, was \" + h );\n-        }\n-\n-        this.h = h;\n-        this.capacity = quantize( max( capacity, 2 ) );\n-        this.tableMask = highestOneBit( this.capacity ) - 1;\n-    }\n-\n-    public static int baseCapacity( int h )\n-    {\n-        return h << 1;\n-    }\n-\n-    protected static int quantize( int capacity )\n-    {\n-        int candidate = Integer.highestOneBit( capacity );\n-        return candidate == capacity ? candidate : candidate << 1;\n-    }\n-\n-    @Override\n-    public int h()\n+  protected final int h;\n+  protected final int capacity;\n+  protected int tableMask;\n+  protected int size;\n+\n+  protected PowerOfTwoQuantizedTable(int capacity, int h)\n+  {\n+    if (h < 4 || h > 32)\n     {\n-        return h;\n+      throw new IllegalArgumentException(\"h needs to be 4 <= h <= 32, was \" + h);\n     }\n \n-    @Override\n-    public int mask()\n-    {\n-        return tableMask;\n-    }\n-\n-    @Override\n-    public int capacity()\n-    {\n-        return capacity;\n-    }\n-\n-    @Override\n-    public boolean isEmpty()\n-    {\n-        return size == 0;\n-    }\n-\n-    @Override\n-    public int size()\n-    {\n-        return size;\n-    }\n-\n-    @Override\n-    public void clear()\n-    {\n-        size = 0;\n-    }\n-\n-    @Override\n-    public int version()\n-    {   // Versioning not supported by default\n-        return 0;\n-    }\n-\n-    @Override\n-    public int version( int index )\n-    {   // Versioning not supported by default\n-        return 0;\n-    }\n-\n-    @Override\n-    public long nullKey()\n-    {\n-        return -1L;\n-    }\n-\n-    @Override\n-    public Table<VALUE> grow()\n-    {\n-        return newInstance( capacity << 1 );\n-    }\n-\n-    protected abstract Table<VALUE> newInstance( int newCapacity );\n-\n-    @Override\n-    public String toString()\n-    {\n-        return format( \"hopscotch-table[%s|capacity:%d, size:%d, usage:%f]\", getClass().getSimpleName(),\n-                capacity, size, size / ((double) capacity) );\n-    }\n-\n-    @Override\n-    public void close()\n-    {   // Nothing to do by default\n-    }\n+    this.h = h;\n+    this.capacity = quantize(max(capacity, 2));\n+    this.tableMask = highestOneBit(this.capacity) - 1;\n+  }\n+\n+  public static int baseCapacity(int h)\n+  {\n+    return h << 1;\n+  }\n+\n+  protected static int quantize(int capacity)\n+  {\n+    int candidate = Integer.highestOneBit(capacity);\n+    return candidate == capacity ? candidate : candidate << 1;\n+  }\n+\n+  @Override\n+  public int h()\n+  {\n+    return h;\n+  }\n+\n+  @Override\n+  public int mask()\n+  {\n+    return tableMask;\n+  }\n+\n+  @Override\n+  public int capacity()\n+  {\n+    return capacity;\n+  }\n+\n+  @Override\n+  public boolean isEmpty()\n+  {\n+    return size == 0;\n+  }\n+\n+  @Override\n+  public int size()\n+  {\n+    return size;\n+  }\n+\n+  @Override\n+  public void clear()\n+  {\n+    size = 0;\n+  }\n+\n+  @Override\n+  public int version()\n+  {   // Versioning not supported by default\n+    return 0;\n+  }\n+\n+  @Override\n+  public int version(int index)\n+  {   // Versioning not supported by default\n+    return 0;\n+  }\n+\n+  @Override\n+  public long nullKey()\n+  {\n+    return -1L;\n+  }\n+\n+  @Override\n+  public Table<VALUE> grow()\n+  {\n+    return newInstance(capacity << 1);\n+  }\n+\n+  protected abstract Table<VALUE> newInstance(int newCapacity);\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"hopscotch-table[%s|capacity:%d, size:%d, usage:%f]\", getClass().getSimpleName(),\n+        capacity, size, size / ((double) capacity));\n+  }\n+\n+  @Override\n+  public void close()\n+  {   // Nothing to do by default\n+  }\n }\n",
            "diff_size": 121
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3141/PowerOfTwoQuantizedTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3141/PowerOfTwoQuantizedTable.java\nindex 627c7ac87d8..4f18d52c6d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3141/PowerOfTwoQuantizedTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3141/PowerOfTwoQuantizedTable.java\n@@ -95,13 +95,15 @@ public abstract class PowerOfTwoQuantizedTable<VALUE> implements Table<VALUE>\n \n     @Override\n     public int version()\n-    {   // Versioning not supported by default\n+    {\n+    // Versioning not supported by default\n         return 0;\n     }\n \n     @Override\n     public int version( int index )\n-    {   // Versioning not supported by default\n+    {\n+    // Versioning not supported by default\n         return 0;\n     }\n \n@@ -128,6 +130,7 @@ public abstract class PowerOfTwoQuantizedTable<VALUE> implements Table<VALUE>\n \n     @Override\n     public void close()\n-    {   // Nothing to do by default\n+    {\n+    // Nothing to do by default\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4108",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "357",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "387",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "412",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "425",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4108/ValueType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4108/ValueType.java\nindex a6adc1a2e10..f7f77aca014 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4108/ValueType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4108/ValueType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n@@ -56,518 +57,516 @@ import static java.time.temporal.ChronoUnit.SECONDS;\n  */\n public abstract class ValueType\n {\n-    private static final Map<Class<?>,ValueType> byClass = new HashMap<>();\n-    private static final Map<Byte,ValueType> byId = new HashMap<>();\n-    private static ValueType stringType;\n-    private static byte next;\n-    static\n+  private static final Map<Class<?>, ValueType> byClass = new HashMap<>();\n+  private static final Map<Byte, ValueType> byId = new HashMap<>();\n+  private static ValueType stringType;\n+  private static byte next;\n+\n+  static\n+  {\n+    add(new ValueType(Boolean.TYPE, Boolean.class)\n     {\n-        add( new ValueType( Boolean.TYPE, Boolean.class )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return from.get() == 0 ? Boolean.FALSE : Boolean.TRUE;\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Byte.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.put( (Boolean)value ? (byte)1 : (byte)0 );\n-            }\n-        } );\n-        add( new ValueType( Byte.TYPE, Byte.class )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return from.get();\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Byte.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.put( (Byte)value );\n-            }\n-        } );\n-        add( new ValueType( Short.TYPE, Short.class )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return from.getShort();\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Short.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.putShort( (Short)value );\n-            }\n-        } );\n-        add( new ValueType( Character.TYPE, Character.class )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return (char)from.getInt();\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Character.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.putInt( (Character)value );\n-            }\n-        } );\n-        add( new ValueType( Integer.TYPE, Integer.class )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return from.getInt();\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Integer.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.putInt( (Integer) value );\n-            }\n-        } );\n-        add( new ValueType( Long.TYPE, Long.class )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return from.getLong();\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Long.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.putLong( (Long)value );\n-            }\n-        } );\n-        add( new ValueType( Float.TYPE, Float.class )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return from.getFloat();\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Float.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.putFloat( (Float)value );\n-            }\n-        } );\n-        add( stringType = new ValueType( String.class )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                int length = from.getInt();\n-                byte[] bytes = new byte[length]; // TODO wasteful\n-                from.get( bytes, length );\n-                return UTF8.decode( bytes );\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Integer.BYTES + ((String)value).length() * Character.BYTES; // pessimistic\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                byte[] bytes = UTF8.encode( (String)value );\n-                into.putInt( bytes.length ).put( bytes, bytes.length );\n-            }\n-        } );\n-        add( new ValueType( Double.class, Double.TYPE )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return from.getDouble();\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Double.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.putDouble( (Double)value );\n-            }\n-        } );\n-        add( new ValueType( LocalDate.class )\n-        {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return LocalDate.ofEpochDay( from.getLong() );\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Long.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.putLong( ((LocalDate) value).toEpochDay() );\n-            }\n-        } );\n-        add( new ValueType( LocalTime.class )\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return from.get() == 0 ? Boolean.FALSE : Boolean.TRUE;\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Byte.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.put((Boolean) value ? (byte) 1 : (byte) 0);\n+      }\n+    });\n+    add(new ValueType(Byte.TYPE, Byte.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return from.get();\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Byte.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.put((Byte) value);\n+      }\n+    });\n+    add(new ValueType(Short.TYPE, Short.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return from.getShort();\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Short.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.putShort((Short) value);\n+      }\n+    });\n+    add(new ValueType(Character.TYPE, Character.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return (char) from.getInt();\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Character.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.putInt((Character) value);\n+      }\n+    });\n+    add(new ValueType(Integer.TYPE, Integer.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return from.getInt();\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Integer.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.putInt((Integer) value);\n+      }\n+    });\n+    add(new ValueType(Long.TYPE, Long.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return from.getLong();\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Long.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.putLong((Long) value);\n+      }\n+    });\n+    add(new ValueType(Float.TYPE, Float.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return from.getFloat();\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Float.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.putFloat((Float) value);\n+      }\n+    });\n+    add(stringType = new ValueType(String.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        int length = from.getInt();\n+        byte[] bytes = new byte[length]; // TODO wasteful\n+        from.get(bytes, length);\n+        return UTF8.decode(bytes);\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Integer.BYTES + ((String) value).length() * Character.BYTES; // pessimistic\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        byte[] bytes = UTF8.encode((String) value);\n+        into.putInt(bytes.length).put(bytes, bytes.length);\n+      }\n+    });\n+    add(new ValueType(Double.class, Double.TYPE)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return from.getDouble();\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Double.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.putDouble((Double) value);\n+      }\n+    });\n+    add(new ValueType(LocalDate.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return LocalDate.ofEpochDay(from.getLong());\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Long.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.putLong(((LocalDate) value).toEpochDay());\n+      }\n+    });\n+    add(new ValueType(LocalTime.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return LocalTime.ofNanoOfDay(from.getLong());\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Long.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        into.putLong(((LocalTime) value).toNanoOfDay());\n+      }\n+    });\n+    add(new ValueType(LocalDateTime.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return LocalDateTime.ofEpochSecond(from.getLong(), from.getInt(), UTC);\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Long.BYTES + Integer.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        LocalDateTime ldt = (LocalDateTime) value;\n+        into.putLong(ldt.toEpochSecond(UTC));\n+        into.putInt(ldt.getNano());\n+      }\n+    });\n+    add(new ValueType(OffsetTime.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        return OffsetTime.ofInstant(Instant.ofEpochSecond(0, from.getLong()), ZoneOffset.ofTotalSeconds(from.getInt()));\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Long.BYTES + Integer.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        OffsetTime ot = (OffsetTime) value;\n+        into.putLong(TemporalUtil.getNanosOfDayUTC(ot));\n+        into.putInt(ot.getOffset().getTotalSeconds());\n+      }\n+    });\n+    add(new ValueType(ZonedDateTime.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        if (from.get() == (byte) 0)\n         {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return LocalTime.ofNanoOfDay( from.getLong() );\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Long.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                into.putLong( ((LocalTime) value).toNanoOfDay() );\n-            }\n-        } );\n-        add( new ValueType( LocalDateTime.class )\n+          long epochSecondsUTC = from.getLong();\n+          int nanos = from.getInt();\n+          int offsetSeconds = from.getInt();\n+          return ZonedDateTime.ofInstant(Instant.ofEpochSecond(epochSecondsUTC, nanos), ZoneOffset.ofTotalSeconds(offsetSeconds));\n+        } else\n         {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return LocalDateTime.ofEpochSecond( from.getLong(), from.getInt(), UTC );\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Long.BYTES + Integer.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                LocalDateTime ldt = (LocalDateTime) value;\n-                into.putLong( ldt.toEpochSecond( UTC) );\n-                into.putInt( ldt.getNano() );\n-            }\n-        } );\n-        add( new ValueType( OffsetTime.class )\n+          long epochSecondsUTC = from.getLong();\n+          int nanos = from.getInt();\n+          int zoneID = from.getInt();\n+          String zone = TimeZones.map((short) zoneID);\n+          return ZonedDateTime.ofInstant(Instant.ofEpochSecond(epochSecondsUTC, nanos), ZoneId.of(zone));\n+        }\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return 1 + Long.BYTES + Integer.BYTES + Integer.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        ZonedDateTime zonedDateTime = (ZonedDateTime) value;\n+        long epochSecondUTC = zonedDateTime.toEpochSecond();\n+        int nano = zonedDateTime.getNano();\n+\n+        ZoneId zone = zonedDateTime.getZone();\n+        if (zone instanceof ZoneOffset)\n         {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                return OffsetTime.ofInstant( Instant.ofEpochSecond( 0, from.getLong() ), ZoneOffset.ofTotalSeconds( from.getInt() ) );\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Long.BYTES + Integer.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                OffsetTime ot = (OffsetTime) value;\n-                into.putLong( TemporalUtil.getNanosOfDayUTC( ot ) );\n-                into.putInt( ot.getOffset().getTotalSeconds() );\n-            }\n-        } );\n-        add( new ValueType( ZonedDateTime.class )\n+          int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n+          into.put((byte) 0);\n+          into.putLong(epochSecondUTC);\n+          into.putInt(nano);\n+          into.putInt(offsetSeconds);\n+        } else\n         {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                if ( from.get() == (byte) 0 )\n-                {\n-                    long epochSecondsUTC = from.getLong();\n-                    int nanos = from.getInt();\n-                    int offsetSeconds = from.getInt();\n-                    return ZonedDateTime.ofInstant( Instant.ofEpochSecond( epochSecondsUTC, nanos ), ZoneOffset.ofTotalSeconds( offsetSeconds ) );\n-                }\n-                else\n-                {\n-                    long epochSecondsUTC = from.getLong();\n-                    int nanos = from.getInt();\n-                    int zoneID = from.getInt();\n-                    String zone = TimeZones.map( (short) zoneID );\n-                    return ZonedDateTime.ofInstant( Instant.ofEpochSecond( epochSecondsUTC, nanos ), ZoneId.of( zone ) );\n-                }\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return 1 + Long.BYTES + Integer.BYTES + Integer.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                ZonedDateTime zonedDateTime = (ZonedDateTime) value;\n-                long epochSecondUTC = zonedDateTime.toEpochSecond();\n-                int nano = zonedDateTime.getNano();\n-\n-                ZoneId zone = zonedDateTime.getZone();\n-                if ( zone instanceof ZoneOffset )\n-                {\n-                    int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n-                    into.put( (byte) 0 );\n-                    into.putLong( epochSecondUTC );\n-                    into.putInt( nano );\n-                    into.putInt( offsetSeconds );\n-                }\n-                else\n-                {\n-                    String zoneId = zone.getId();\n-                    into.put( (byte) 1 );\n-                    into.putLong( epochSecondUTC );\n-                    into.putInt( nano );\n-                    into.putInt( TimeZones.map( zoneId ) );\n-                }\n-            }\n-        } );\n-        add( new ValueType( DurationValue.class, Duration.class, Period.class )\n+          String zoneId = zone.getId();\n+          into.put((byte) 1);\n+          into.putLong(epochSecondUTC);\n+          into.putInt(nano);\n+          into.putInt(TimeZones.map(zoneId));\n+        }\n+      }\n+    });\n+    add(new ValueType(DurationValue.class, Duration.class, Period.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        int nanos = from.getInt();\n+        long seconds = from.getLong();\n+        long days = from.getLong();\n+        long months = from.getLong();\n+        return DurationValue.duration(months, days, seconds, nanos);\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return Integer.BYTES + 3 * Long.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        DurationValue duration;\n+        if (value instanceof Duration)\n         {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                int nanos = from.getInt();\n-                long seconds = from.getLong();\n-                long days = from.getLong();\n-                long months = from.getLong();\n-                return DurationValue.duration( months, days, seconds, nanos );\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return Integer.BYTES + 3 * Long.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                DurationValue duration;\n-                if ( value instanceof Duration )\n-                {\n-                    duration = DurationValue.duration( (Duration) value );\n-                }\n-                else if ( value instanceof Period )\n-                {\n-                    duration = DurationValue.duration( (Period) value );\n-                }\n-                else\n-                {\n-                    duration = (DurationValue) value;\n-                }\n-                into.putInt( (int) duration.get( NANOS ) );\n-                into.putLong( duration.get( SECONDS ) );\n-                into.putLong( duration.get( DAYS ) );\n-                into.putLong( duration.get( MONTHS ) );\n-            }\n-        } );\n-        add( new ValueType( PointValue.class )\n+          duration = DurationValue.duration((Duration) value);\n+        } else if (value instanceof Period)\n         {\n-            @Override\n-            public Object read( ReadableClosableChannel from ) throws IOException\n-            {\n-                int code = from.getInt();\n-                CoordinateReferenceSystem crs = CoordinateReferenceSystem.get( code );\n-                int length = from.getInt();\n-                double[] coordinate = new double[length];\n-                for ( int i = 0; i < length; i++ )\n-                {\n-                    coordinate[i] = from.getDouble();\n-                }\n-                return Values.pointValue( crs, coordinate );\n-            }\n-\n-            @Override\n-            public int length( Object value )\n-            {\n-                return 2 * Integer.BYTES + ((PointValue) value).coordinate().length * Double.BYTES;\n-            }\n-\n-            @Override\n-            public void write( Object value, FlushableChannel into ) throws IOException\n-            {\n-                PointValue pointValue = (PointValue) value;\n-                // using code is not a future-proof solution like the one we have in the PropertyStore.\n-                // But then again, this is not used from procution code.\n-                into.putInt( pointValue.getCoordinateReferenceSystem().getCode() );\n-                double[] coordinate = pointValue.coordinate();\n-                into.putInt( coordinate.length );\n-                for ( double c : coordinate )\n-                {\n-                    into.putDouble( c );\n-                }\n-            }\n-        } );\n-    }\n-    private static final ValueType arrayType = new ValueType()\n-    {\n-        @Override\n-        public Object read( ReadableClosableChannel from ) throws IOException\n+          duration = DurationValue.duration((Period) value);\n+        } else\n         {\n-            ValueType componentType = typeOf( from.get() );\n-            int length = from.getInt();\n-            Object value = Array.newInstance( componentType.componentClass(), length );\n-            for ( int i = 0; i < length; i++ )\n-            {\n-                Array.set( value, i, componentType.read( from ) );\n-            }\n-            return value;\n+          duration = (DurationValue) value;\n         }\n-\n-        @Override\n-        public int length( Object value )\n+        into.putInt((int) duration.get(NANOS));\n+        into.putLong(duration.get(SECONDS));\n+        into.putLong(duration.get(DAYS));\n+        into.putLong(duration.get(MONTHS));\n+      }\n+    });\n+    add(new ValueType(PointValue.class)\n+    {\n+      @Override\n+      public Object read(ReadableClosableChannel from) throws IOException\n+      {\n+        int code = from.getInt();\n+        CoordinateReferenceSystem crs = CoordinateReferenceSystem.get(code);\n+        int length = from.getInt();\n+        double[] coordinate = new double[length];\n+        for (int i = 0; i < length; i++)\n         {\n-            ValueType componentType = typeOf( value.getClass().getComponentType() );\n-            int arrayLlength = Array.getLength( value );\n-            int length = Integer.BYTES; // array length\n-            for ( int i = 0; i < arrayLlength; i++ )\n-            {\n-                length += componentType.length( Array.get( value, i ) );\n-            }\n-            return length;\n+          coordinate[i] = from.getDouble();\n         }\n-\n-        @Override\n-        public void write( Object value, FlushableChannel into ) throws IOException\n+        return Values.pointValue(crs, coordinate);\n+      }\n+\n+      @Override\n+      public int length(Object value)\n+      {\n+        return 2 * Integer.BYTES + ((PointValue) value).coordinate().length * Double.BYTES;\n+      }\n+\n+      @Override\n+      public void write(Object value, FlushableChannel into) throws IOException\n+      {\n+        PointValue pointValue = (PointValue) value;\n+        // using code is not a future-proof solution like the one we have in the PropertyStore.\n+        // But then again, this is not used from procution code.\n+        into.putInt(pointValue.getCoordinateReferenceSystem().getCode());\n+        double[] coordinate = pointValue.coordinate();\n+        into.putInt(coordinate.length);\n+        for (double c : coordinate)\n         {\n-            ValueType componentType = typeOf( value.getClass().getComponentType() );\n-            into.put( componentType.id() );\n-            int length = Array.getLength( value );\n-            into.putInt( length );\n-            for ( int i = 0; i < length; i++ )\n-            {\n-                componentType.write( Array.get( value, i ), into );\n-            }\n+          into.putDouble(c);\n         }\n-    };\n-\n-    private final Class<?>[] classes;\n-    private final byte id = next++;\n-\n-    private ValueType( Class<?>... classes )\n+      }\n+    });\n+  }\n+\n+  private static final ValueType arrayType = new ValueType()\n+  {\n+    @Override\n+    public Object read(ReadableClosableChannel from) throws IOException\n     {\n-        this.classes = classes;\n+      ValueType componentType = typeOf(from.get());\n+      int length = from.getInt();\n+      Object value = Array.newInstance(componentType.componentClass(), length);\n+      for (int i = 0; i < length; i++)\n+      {\n+        Array.set(value, i, componentType.read(from));\n+      }\n+      return value;\n     }\n \n-    private static void add( ValueType type )\n+    @Override\n+    public int length(Object value)\n     {\n-        for ( Class<?> cls : type.classes )\n-        {\n-            byClass.put( cls, type );\n-        }\n-        byId.put( type.id(), type );\n+      ValueType componentType = typeOf(value.getClass().getComponentType());\n+      int arrayLlength = Array.getLength(value);\n+      int length = Integer.BYTES; // array length\n+      for (int i = 0; i < arrayLlength; i++)\n+      {\n+        length += componentType.length(Array.get(value, i));\n+      }\n+      return length;\n     }\n \n-    public static ValueType typeOf( Object value )\n+    @Override\n+    public void write(Object value, FlushableChannel into) throws IOException\n     {\n-        return typeOf( value.getClass() );\n+      ValueType componentType = typeOf(value.getClass().getComponentType());\n+      into.put(componentType.id());\n+      int length = Array.getLength(value);\n+      into.putInt(length);\n+      for (int i = 0; i < length; i++)\n+      {\n+        componentType.write(Array.get(value, i), into);\n+      }\n     }\n+  };\n \n-    public static ValueType typeOf( Class<?> cls )\n-    {\n-        if ( cls.isArray() )\n-        {\n-            return arrayType;\n-        }\n+  private final Class<?>[] classes;\n+  private final byte id = next++;\n \n-        ValueType type = byClass.get( cls );\n-        assert type != null : \"Unrecognized value type \" + cls;\n-        return type;\n-    }\n+  private ValueType(Class<?>... classes)\n+  {\n+    this.classes = classes;\n+  }\n \n-    public static ValueType typeOf( byte id )\n+  private static void add(ValueType type)\n+  {\n+    for (Class<?> cls : type.classes)\n     {\n-        if ( id == arrayType.id() )\n-        {\n-            return arrayType;\n-        }\n-\n-        ValueType type = byId.get( id );\n-        assert type != null : \"Unrecognized value type id \" + id;\n-        return type;\n+      byClass.put(cls, type);\n     }\n+    byId.put(type.id(), type);\n+  }\n \n-    public static ValueType stringType()\n-    {\n-        return stringType;\n-    }\n+  public static ValueType typeOf(Object value)\n+  {\n+    return typeOf(value.getClass());\n+  }\n \n-    private Class<?> componentClass()\n+  public static ValueType typeOf(Class<?> cls)\n+  {\n+    if (cls.isArray())\n     {\n-        return classes[0];\n+      return arrayType;\n     }\n \n-    public final byte id()\n+    ValueType type = byClass.get(cls);\n+    assert type != null : \"Unrecognized value type \" + cls;\n+    return type;\n+  }\n+\n+  public static ValueType typeOf(byte id)\n+  {\n+    if (id == arrayType.id())\n     {\n-        return id;\n+      return arrayType;\n     }\n \n-    public abstract Object read( ReadableClosableChannel from ) throws IOException;\n+    ValueType type = byId.get(id);\n+    assert type != null : \"Unrecognized value type id \" + id;\n+    return type;\n+  }\n+\n+  public static ValueType stringType()\n+  {\n+    return stringType;\n+  }\n+\n+  private Class<?> componentClass()\n+  {\n+    return classes[0];\n+  }\n+\n+  public final byte id()\n+  {\n+    return id;\n+  }\n+\n+  public abstract Object read(ReadableClosableChannel from) throws IOException;\n \n-    public abstract int length( Object value );\n+  public abstract int length(Object value);\n \n-    public abstract void write( Object value, FlushableChannel into ) throws IOException;\n+  public abstract void write(Object value, FlushableChannel into) throws IOException;\n }\n",
            "diff_size": 635
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "420",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4108/ValueType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4108/ValueType.java\nindex a6adc1a2e10..6525890fb03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4108/ValueType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4108/ValueType.java\n@@ -79,7 +79,7 @@ public abstract class ValueType\n             @Override\n             public void write( Object value, FlushableChannel into ) throws IOException\n             {\n-                into.put( (Boolean)value ? (byte)1 : (byte)0 );\n+                into.put( (Boolean) value ? (byte)1 : (byte)0 );\n             }\n         } );\n         add( new ValueType( Byte.TYPE, Byte.class )\n@@ -99,7 +99,7 @@ public abstract class ValueType\n             @Override\n             public void write( Object value, FlushableChannel into ) throws IOException\n             {\n-                into.put( (Byte)value );\n+                into.put( (Byte) value );\n             }\n         } );\n         add( new ValueType( Short.TYPE, Short.class )\n@@ -119,7 +119,7 @@ public abstract class ValueType\n             @Override\n             public void write( Object value, FlushableChannel into ) throws IOException\n             {\n-                into.putShort( (Short)value );\n+                into.putShort( (Short) value );\n             }\n         } );\n         add( new ValueType( Character.TYPE, Character.class )\n@@ -127,7 +127,7 @@ public abstract class ValueType\n             @Override\n             public Object read( ReadableClosableChannel from ) throws IOException\n             {\n-                return (char)from.getInt();\n+                return (char) from.getInt();\n             }\n \n             @Override\n@@ -139,7 +139,7 @@ public abstract class ValueType\n             @Override\n             public void write( Object value, FlushableChannel into ) throws IOException\n             {\n-                into.putInt( (Character)value );\n+                into.putInt( (Character) value );\n             }\n         } );\n         add( new ValueType( Integer.TYPE, Integer.class )\n@@ -179,7 +179,7 @@ public abstract class ValueType\n             @Override\n             public void write( Object value, FlushableChannel into ) throws IOException\n             {\n-                into.putLong( (Long)value );\n+                into.putLong( (Long) value );\n             }\n         } );\n         add( new ValueType( Float.TYPE, Float.class )\n@@ -199,7 +199,7 @@ public abstract class ValueType\n             @Override\n             public void write( Object value, FlushableChannel into ) throws IOException\n             {\n-                into.putFloat( (Float)value );\n+                into.putFloat( (Float) value );\n             }\n         } );\n         add( stringType = new ValueType( String.class )\n@@ -216,13 +216,13 @@ public abstract class ValueType\n             @Override\n             public int length( Object value )\n             {\n-                return Integer.BYTES + ((String)value).length() * Character.BYTES; // pessimistic\n+                return Integer.BYTES + ((String) value).length() * Character.BYTES; // pessimistic\n             }\n \n             @Override\n             public void write( Object value, FlushableChannel into ) throws IOException\n             {\n-                byte[] bytes = UTF8.encode( (String)value );\n+                byte[] bytes = UTF8.encode( (String) value );\n                 into.putInt( bytes.length ).put( bytes, bytes.length );\n             }\n         } );\n@@ -243,7 +243,7 @@ public abstract class ValueType\n             @Override\n             public void write( Object value, FlushableChannel into ) throws IOException\n             {\n-                into.putDouble( (Double)value );\n+                into.putDouble( (Double) value );\n             }\n         } );\n         add( new ValueType( LocalDate.class )\n@@ -364,8 +364,7 @@ public abstract class ValueType\n                 ZonedDateTime zonedDateTime = (ZonedDateTime) value;\n                 long epochSecondUTC = zonedDateTime.toEpochSecond();\n                 int nano = zonedDateTime.getNano();\n-\n-                ZoneId zone = zonedDateTime.getZone();\n+ZoneId zone = zonedDateTime.getZone();\n                 if ( zone instanceof ZoneOffset )\n                 {\n                     int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n@@ -418,7 +417,7 @@ public abstract class ValueType\n                 {\n                     duration = (DurationValue) value;\n                 }\n-                into.putInt( (int) duration.get( NANOS ) );\n+                into.putInt( ( int) duration.get( NANOS ) );\n                 into.putLong( duration.get( SECONDS ) );\n                 into.putLong( duration.get( DAYS ) );\n                 into.putLong( duration.get( MONTHS ) );\n@@ -437,7 +436,8 @@ public abstract class ValueType\n                 {\n                     coordinate[i] = from.getDouble();\n                 }\n-                return Values.pointValue( crs, coordinate );\n+\n+return Values.pointValue( crs, coordinate );\n             }\n \n             @Override\n@@ -462,7 +462,8 @@ public abstract class ValueType\n             }\n         } );\n     }\n-    private static final ValueType arrayType = new ValueType()\n+\n+private static final ValueType arrayType = new ValueType()\n     {\n         @Override\n         public Object read( ReadableClosableChannel from ) throws IOException\n@@ -474,7 +475,8 @@ public abstract class ValueType\n             {\n                 Array.set( value, i, componentType.read( from ) );\n             }\n-            return value;\n+\n+return value;\n         }\n \n         @Override\n@@ -487,7 +489,8 @@ public abstract class ValueType\n             {\n                 length += componentType.length( Array.get( value, i ) );\n             }\n-            return length;\n+\n+return length;\n         }\n \n         @Override\n@@ -570,4 +573,4 @@ public abstract class ValueType\n     public abstract int length( Object value );\n \n     public abstract void write( Object value, FlushableChannel into ) throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
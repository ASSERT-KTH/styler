{
    "project_name": "DaGeRe-peass",
    "error_id": "105",
    "information": {
        "errors": [
            {
                "line": "30",
                "column": "49",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "   }\n   \n   public List<CallTreeNode> getOnlyChildNodes(){\n      List<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n      childNodes.removeAll(initialNodes);\n      return childNodes;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/105/LevelChildDeterminer.java\nindex fad9196373b..6a7c27c431e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/105/LevelChildDeterminer.java\n@@ -27,8 +27,8 @@ public class LevelChildDeterminer {\n       return selectedNodes;\n    }\n    \n-   public List<CallTreeNode> getOnlyChildNodes(){\n-      List<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n+   public List<CallTreeNode> getOnlyChildNodes() {\n+\t\t\t\tList<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n       childNodes.removeAll(initialNodes);\n       return childNodes;\n    }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/105/LevelChildDeterminer.java\nindex fad9196373b..8350e61375d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/105/LevelChildDeterminer.java\n@@ -6,30 +6,30 @@ import java.util.List;\n import de.dagere.peass.measurement.rca.data.CallTreeNode;\n \n public class LevelChildDeterminer {\n-   public List<CallTreeNode> initialNodes;\n-   public List<CallTreeNode> selectedNodes = new LinkedList<>();\n-   \n-   public LevelChildDeterminer(final List<CallTreeNode> initialNodes, final int levels) {\n-      this.initialNodes = initialNodes;\n-      selectedNodes.addAll(initialNodes);\n-      List<CallTreeNode> iterationNodes = new LinkedList<>(initialNodes);\n-      for (int level = 0; level < levels; level++) {\n-         List<CallTreeNode> childs = new LinkedList<>();\n-         for (CallTreeNode parent : iterationNodes) {\n-            childs.addAll(parent.getChildren());\n-         }\n-         selectedNodes.addAll(childs);\n-         iterationNodes = childs;\n+  public List<CallTreeNode> initialNodes;\n+  public List<CallTreeNode> selectedNodes = new LinkedList<>();\n+\n+  public LevelChildDeterminer(final List<CallTreeNode> initialNodes, final int levels) {\n+    this.initialNodes = initialNodes;\n+    selectedNodes.addAll(initialNodes);\n+    List<CallTreeNode> iterationNodes = new LinkedList<>(initialNodes);\n+    for (int level = 0; level < levels; level++) {\n+      List<CallTreeNode> childs = new LinkedList<>();\n+      for (CallTreeNode parent : iterationNodes) {\n+        childs.addAll(parent.getChildren());\n       }\n-   }\n-   \n-   public List<CallTreeNode> getSelectedIncludingParentNodes() {\n-      return selectedNodes;\n-   }\n-   \n-   public List<CallTreeNode> getOnlyChildNodes(){\n-      List<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n-      childNodes.removeAll(initialNodes);\n-      return childNodes;\n-   }\n+      selectedNodes.addAll(childs);\n+      iterationNodes = childs;\n+    }\n+  }\n+\n+  public List<CallTreeNode> getSelectedIncludingParentNodes() {\n+    return selectedNodes;\n+  }\n+\n+  public List<CallTreeNode> getOnlyChildNodes() {\n+    List<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n+    childNodes.removeAll(initialNodes);\n+    return childNodes;\n+  }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/105/LevelChildDeterminer.java\nindex fad9196373b..a700e542bf5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/105/LevelChildDeterminer.java\n@@ -6,30 +6,31 @@ import java.util.List;\n import de.dagere.peass.measurement.rca.data.CallTreeNode;\n \n public class LevelChildDeterminer {\n-   public List<CallTreeNode> initialNodes;\n+\n+\tpublic List<CallTreeNode> initialNodes;\n    public List<CallTreeNode> selectedNodes = new LinkedList<>();\n-   \n-   public LevelChildDeterminer(final List<CallTreeNode> initialNodes, final int levels) {\n-      this.initialNodes = initialNodes;\n+\n+public LevelChildDeterminer(final List<CallTreeNode> initialNodes, final int levels) {\n+\tthis.initialNodes = initialNodes;\n       selectedNodes.addAll(initialNodes);\n       List<CallTreeNode> iterationNodes = new LinkedList<>(initialNodes);\n       for (int level = 0; level < levels; level++) {\n-         List<CallTreeNode> childs = new LinkedList<>();\n+\tList<CallTreeNode> childs = new LinkedList<>();\n          for (CallTreeNode parent : iterationNodes) {\n-            childs.addAll(parent.getChildren());\n-         }\n+\tchilds.addAll(parent.getChildren());\n+\t}\n          selectedNodes.addAll(childs);\n          iterationNodes = childs;\n-      }\n-   }\n-   \n-   public List<CallTreeNode> getSelectedIncludingParentNodes() {\n-      return selectedNodes;\n-   }\n-   \n-   public List<CallTreeNode> getOnlyChildNodes(){\n+\t}\n+\t}\n+\n+public List<CallTreeNode> getSelectedIncludingParentNodes() {\n+\treturn selectedNodes;\n+\t}\n+\n+public List<CallTreeNode> getOnlyChildNodes() {\n       List<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n       childNodes.removeAll(initialNodes);\n       return childNodes;\n-   }\n-}\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/105/LevelChildDeterminer.java\nindex fad9196373b..381e7aa0e3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/105/LevelChildDeterminer.java\n@@ -2,34 +2,37 @@ package de.dagere.peass.measurement.rca.searcher;\n \n import java.util.LinkedList;\n import java.util.List;\n-\n import de.dagere.peass.measurement.rca.data.CallTreeNode;\n \n+\n public class LevelChildDeterminer {\n-   public List<CallTreeNode> initialNodes;\n-   public List<CallTreeNode> selectedNodes = new LinkedList<>();\n-   \n-   public LevelChildDeterminer(final List<CallTreeNode> initialNodes, final int levels) {\n-      this.initialNodes = initialNodes;\n-      selectedNodes.addAll(initialNodes);\n-      List<CallTreeNode> iterationNodes = new LinkedList<>(initialNodes);\n-      for (int level = 0; level < levels; level++) {\n-         List<CallTreeNode> childs = new LinkedList<>();\n-         for (CallTreeNode parent : iterationNodes) {\n-            childs.addAll(parent.getChildren());\n-         }\n-         selectedNodes.addAll(childs);\n-         iterationNodes = childs;\n-      }\n-   }\n-   \n-   public List<CallTreeNode> getSelectedIncludingParentNodes() {\n-      return selectedNodes;\n-   }\n-   \n-   public List<CallTreeNode> getOnlyChildNodes(){\n-      List<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n-      childNodes.removeAll(initialNodes);\n-      return childNodes;\n+ public List<CallTreeNode> initialNodes;\n+\n+ public List<CallTreeNode> selectedNodes = new LinkedList<>();\n+\n+ public LevelChildDeterminer(final List<CallTreeNode> initialNodes, final int levels) {\n+  this.initialNodes = initialNodes;\n+  selectedNodes.addAll(initialNodes);\n+\n+  List<CallTreeNode> iterationNodes = new LinkedList<>(initialNodes);\n+  for (int level = 0; level < levels; level++) {\n+   List<CallTreeNode> childs = new LinkedList<>();\n+   for (CallTreeNode parent : iterationNodes) {\n+    childs.addAll(parent.getChildren());\n    }\n-}\n+   selectedNodes.addAll(childs);\n+   iterationNodes = childs;\n+  }\n+ }\n+\n+\n+ public List<CallTreeNode> getSelectedIncludingParentNodes() {\n+  return selectedNodes;\n+ }\n+\n+ public List<CallTreeNode> getOnlyChildNodes() {\n+  List<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n+  childNodes.removeAll(initialNodes);\n+  return childNodes;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/105/LevelChildDeterminer.java\nindex fad9196373b..6a7c27c431e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/105/LevelChildDeterminer.java\n@@ -27,8 +27,8 @@ public class LevelChildDeterminer {\n       return selectedNodes;\n    }\n    \n-   public List<CallTreeNode> getOnlyChildNodes(){\n-      List<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n+   public List<CallTreeNode> getOnlyChildNodes() {\n+\t\t\t\tList<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n       childNodes.removeAll(initialNodes);\n       return childNodes;\n    }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/105/LevelChildDeterminer.java\nindex fad9196373b..6a7c27c431e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/105/LevelChildDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/105/LevelChildDeterminer.java\n@@ -27,8 +27,8 @@ public class LevelChildDeterminer {\n       return selectedNodes;\n    }\n    \n-   public List<CallTreeNode> getOnlyChildNodes(){\n-      List<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n+   public List<CallTreeNode> getOnlyChildNodes() {\n+\t\t\t\tList<CallTreeNode> childNodes = new LinkedList<>(selectedNodes);\n       childNodes.removeAll(initialNodes);\n       return childNodes;\n    }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
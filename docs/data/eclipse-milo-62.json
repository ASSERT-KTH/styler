{
    "project_name": "eclipse-milo",
    "error_id": "62",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "35",
                "severity": "error",
                "message": "'}' at column 35 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class BooleanConversions {\n\n    private BooleanConversions() {}\n\n    @NotNull\n    static UByte booleanToByte(@NotNull Boolean b) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "35",
                    "severity": "error",
                    "message": "'}' at column 35 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/62/BooleanConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/62/BooleanConversions.java\nindex 7186df0e731..d5075e299fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/62/BooleanConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/62/BooleanConversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class BooleanConversions {\n \n-    private BooleanConversions() {}\n+    private BooleanConversions() {\n+    }\n \n     @NotNull\n     static UByte booleanToByte(@NotNull Boolean b) {\n@@ -99,8 +100,10 @@ final class BooleanConversions {\n     static Object explicitConversion(@NotNull Boolean b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case String:    return booleanToString(b);\n-            default:        return implicitConversion(b, targetType);\n+            case String:\n+                return booleanToString(b);\n+            default:\n+                return implicitConversion(b, targetType);\n         }\n         //@formatter:on\n     }\n@@ -109,17 +112,28 @@ final class BooleanConversions {\n     static Object implicitConversion(@NotNull Boolean b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Byte:      return booleanToByte(b);\n-            case Double:    return booleanToDouble(b);\n-            case Float:     return booleanToFloat(b);\n-            case Int16:     return booleanToInt16(b);\n-            case Int32:     return booleanToInt32(b);\n-            case Int64:     return booleanToInt64(b);\n-            case SByte:     return booleanToSByte(b);\n-            case UInt16:    return booleanToUInt16(b);\n-            case UInt32:    return booleanToUInt32(b);\n-            case UInt64:    return booleanToUInt64(b);\n-            default:        return null;\n+            case Byte:\n+                return booleanToByte(b);\n+            case Double:\n+                return booleanToDouble(b);\n+            case Float:\n+                return booleanToFloat(b);\n+            case Int16:\n+                return booleanToInt16(b);\n+            case Int32:\n+                return booleanToInt32(b);\n+            case Int64:\n+                return booleanToInt64(b);\n+            case SByte:\n+                return booleanToSByte(b);\n+            case UInt16:\n+                return booleanToUInt16(b);\n+            case UInt32:\n+                return booleanToUInt32(b);\n+            case UInt64:\n+                return booleanToUInt64(b);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "35",
                    "severity": "error",
                    "message": "'}' at column 35 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/62/BooleanConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/62/BooleanConversions.java\nindex 7186df0e731..4c73286c205 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/62/BooleanConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/62/BooleanConversions.java\n@@ -100,7 +100,8 @@ final class BooleanConversions {\n         //@formatter:off\n         switch (targetType) {\n             case String:    return booleanToString(b);\n-            default:        return implicitConversion(b, targetType);\n+            default:\n+    return implicitConversion(b, targetType);\n         }\n         //@formatter:on\n     }\n@@ -119,9 +120,10 @@ final class BooleanConversions {\n             case UInt16:    return booleanToUInt16(b);\n             case UInt32:    return booleanToUInt32(b);\n             case UInt64:    return booleanToUInt64(b);\n-            default:        return null;\n+            default:\n+    return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/62/BooleanConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/62/BooleanConversions.java\nindex 7186df0e731..39cb320db3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/62/BooleanConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/62/BooleanConversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class BooleanConversions {\n \n-    private BooleanConversions() {}\n+    private BooleanConversions() {\n+    }\n \n     @NotNull\n     static UByte booleanToByte(@NotNull Boolean b) {\n@@ -86,10 +87,7 @@ final class BooleanConversions {\n     static Object convert(@NotNull Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof Boolean) {\n             Boolean b = (Boolean) o;\n-\n-            return implicit ?\n-                implicitConversion(b, targetType) :\n-                explicitConversion(b, targetType);\n+            return implicit ? implicitConversion(b, targetType) : explicitConversion(b, targetType);\n         } else {\n             return null;\n         }\n@@ -99,8 +97,10 @@ final class BooleanConversions {\n     static Object explicitConversion(@NotNull Boolean b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case String:    return booleanToString(b);\n-            default:        return implicitConversion(b, targetType);\n+            case String:\n+                return booleanToString(b);\n+            default:\n+                return implicitConversion(b, targetType);\n         }\n         //@formatter:on\n     }\n@@ -109,19 +109,39 @@ final class BooleanConversions {\n     static Object implicitConversion(@NotNull Boolean b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Byte:      return booleanToByte(b);\n-            case Double:    return booleanToDouble(b);\n-            case Float:     return booleanToFloat(b);\n-            case Int16:     return booleanToInt16(b);\n-            case Int32:     return booleanToInt32(b);\n-            case Int64:     return booleanToInt64(b);\n-            case SByte:     return booleanToSByte(b);\n-            case UInt16:    return booleanToUInt16(b);\n-            case UInt32:    return booleanToUInt32(b);\n-            case UInt64:    return booleanToUInt64(b);\n-            default:        return null;\n+            case Byte:\n+                return booleanToByte(b);\n+\n+            case Double:\n+                return booleanToDouble(b);\n+\n+            case Float:\n+                return booleanToFloat(b);\n+\n+            case Int16:\n+                return booleanToInt16(b);\n+\n+            case Int32:\n+                return booleanToInt32(b);\n+\n+            case Int64:\n+                return booleanToInt64(b);\n+\n+            case SByte:\n+                return booleanToSByte(b);\n+\n+            case UInt16:\n+                return booleanToUInt16(b);\n+\n+            case UInt32:\n+                return booleanToUInt32(b);\n+\n+            case UInt64:\n+                return booleanToUInt64(b);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "35",
                    "severity": "error",
                    "message": "'}' at column 35 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/62/BooleanConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/62/BooleanConversions.java\nindex 7186df0e731..b8dd2776fd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/62/BooleanConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/62/BooleanConversions.java\n@@ -25,9 +25,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class BooleanConversions {\n \n-    private BooleanConversions() {}\n+    private BooleanConversions() {\n \n-    @NotNull\n+    } @NotNull\n     static UByte booleanToByte(@NotNull Boolean b) {\n         return ubyte(b ? 1 : 0);\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
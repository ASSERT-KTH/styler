{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "306",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 145).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    producerMetrics = new HashMap<>();\n\n    //TODO:current java chassis unable know invocation type before starting process,totalWaitInQueue = ProducerInvocation + UnknownTypeInvocation\n    long totalWaitInQueue = 0;\n    long producerWaitInQueue = 0;\n    TimerMetric lifeTimeInQueue = new TimerMetric(MetricsConst.INSTANCE_PRODUCER_PREFIX + \".lifeTimeInQueue\");",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/306/RegistryMetric.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/306/RegistryMetric.java\nindex e7e1460a508..a02fe420a1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/306/RegistryMetric.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/306/RegistryMetric.java\n@@ -88,7 +88,7 @@ public class RegistryMetric {\n     instanceMetric = new InstanceMetric(totalWaitInQueue,\n         new ConsumerInvocationMetric(\"instance\", MetricsConst.INSTANCE_CONSUMER_PREFIX,\n             producerWaitInQueue, consumerLatency, consumerCall),\n-        new ProducerInvocationMetric(\"instance\", MetricsConst.INSTANCE_PRODUCER_PREFIX,\n+new ProducerInvocationMetric(\"instance\", MetricsConst.INSTANCE_PRODUCER_PREFIX,\n             totalWaitInQueue, lifeTimeInQueue, executionTime, producerLatency, producerCall));\n   }\n \n@@ -106,4 +106,4 @@ public class RegistryMetric {\n     }\n     return metrics;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/306/RegistryMetric.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/306/RegistryMetric.java\nindex e7e1460a508..670a532c941 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/306/RegistryMetric.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/306/RegistryMetric.java\n@@ -53,7 +53,7 @@ public class RegistryMetric {\n     consumerMetrics = new HashMap<>();\n     producerMetrics = new HashMap<>();\n \n-    //TODO:current java chassis unable know invocation type before starting process,totalWaitInQueue = ProducerInvocation + UnknownTypeInvocation\n+    //TODO:current java chassis unable know invocation type before starting process,totalWaitInQueue = ProducerInvocation + UnknownTypeInvocation long totalWaitInQueue = 0;\n     long totalWaitInQueue = 0;\n     long producerWaitInQueue = 0;\n     TimerMetric lifeTimeInQueue = new TimerMetric(MetricsConst.INSTANCE_PRODUCER_PREFIX + \".lifeTimeInQueue\");\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "SentinelDataHub-dhus-core",
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "52",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 85).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   public Iterator<SynchronizerConf> getAllSynchronizerConfs (String type)\n   {\n      StringBuilder query = new StringBuilder(\"FROM \").append(entityClass.getName());\n      if (type != null && !type.isEmpty())\n      {\n         query.append(\" WHERE Type = \").append('\\'').append(type).append('\\'');",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler/9/SynchronizerDao.java\nindex 544b9ed44be..8dcdce31cc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler/9/SynchronizerDao.java\n@@ -49,7 +49,8 @@ public class SynchronizerDao extends HibernateDao<SynchronizerConf, Long>\n     */\n    public Iterator<SynchronizerConf> getAllSynchronizerConfs (String type)\n    {\n-      StringBuilder query = new StringBuilder(\"FROM \").append(entityClass.getName());\n+      StringBuilder query = new StringBuilder\n+            (\"FROM \").append(entityClass.getName());\n       if (type != null && !type.isEmpty())\n       {\n          query.append(\" WHERE Type = \").append('\\'').append(type).append('\\'');\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/intellij/9/SynchronizerDao.java\nindex 544b9ed44be..728d21010ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/intellij/9/SynchronizerDao.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package fr.gael.dhus.database.dao;\n \n import fr.gael.dhus.database.dao.interfaces.HibernateDao;\n@@ -32,28 +33,32 @@ import java.util.List;\n @Repository\n public class SynchronizerDao extends HibernateDao<SynchronizerConf, Long>\n {\n-   /**\n-    * Returns a list of active synchronizers.\n-    * @return a list of active synchronizers.\n-    */\n-   public List<SynchronizerConf> getActiveSynchronizers ()\n-   {\n-      String hql = \"FROM SynchronizerConf WHERE Active = TRUE\";\n-      return (List<SynchronizerConf>) getHibernateTemplate ().find (hql);\n-   }\n+    /**\n+     * Returns a list of active synchronizers.\n+     *\n+     * @return a list of active synchronizers.\n+     */\n+    public List<SynchronizerConf> getActiveSynchronizers()\n+    {\n+        String hql = \"FROM SynchronizerConf WHERE Active = TRUE\";\n+        return (List<SynchronizerConf>) getHibernateTemplate().find(hql);\n+    }\n \n-   /**\n-    * Returns an iterator on {@link SynchronizerConf}s.\n-    * @param type (optional) see {@link SynchronizerConf#getType()}.\n-    * @return iterator on {@link SynchronizerConf}s.\n-    */\n-   public Iterator<SynchronizerConf> getAllSynchronizerConfs (String type)\n-   {\n-      StringBuilder query = new StringBuilder(\"FROM \").append(entityClass.getName());\n-      if (type != null && !type.isEmpty())\n-      {\n-         query.append(\" WHERE Type = \").append('\\'').append(type).append('\\'');\n-      }\n-      return new PagedIterator<>(this, query.toString());\n-   }\n+    /**\n+     * Returns an iterator on {@link SynchronizerConf}s.\n+     *\n+     * @param type (optional) see {@link SynchronizerConf#getType()}.\n+     * @return iterator on {@link SynchronizerConf}s.\n+     */\n+    public Iterator<SynchronizerConf> getAllSynchronizerConfs(String type)\n+    {\n+        StringBuilder query =\n+            new StringBuilder(\"FROM \").append(entityClass.getName());\n+        if (type != null && !type.isEmpty())\n+        {\n+            query.append(\" WHERE Type = \").append('\\'').append(type)\n+                .append('\\'');\n+        }\n+        return new PagedIterator<>(this, query.toString());\n+    }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/naturalize/9/SynchronizerDao.java\nindex 544b9ed44be..0fdad925c92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/naturalize/9/SynchronizerDao.java\n@@ -56,4 +56,4 @@ public class SynchronizerDao extends HibernateDao<SynchronizerConf, Long>\n       }\n       return new PagedIterator<>(this, query.toString());\n    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/codebuff/9/SynchronizerDao.java\nindex 544b9ed44be..9592258c53f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/codebuff/9/SynchronizerDao.java\n@@ -22,13 +22,13 @@ package fr.gael.dhus.database.dao;\n import fr.gael.dhus.database.dao.interfaces.HibernateDao;\n import fr.gael.dhus.database.object.SynchronizerConf;\n import org.springframework.stereotype.Repository;\n-\n import java.util.Iterator;\n import java.util.List;\n \n /**\n  * Manages {@link SynchronizerConf}.\n  */\n+\n @Repository\n public class SynchronizerDao extends HibernateDao<SynchronizerConf, Long>\n {\n@@ -47,13 +47,15 @@ public class SynchronizerDao extends HibernateDao<SynchronizerConf, Long>\n     * @param type (optional) see {@link SynchronizerConf#getType()}.\n     * @return iterator on {@link SynchronizerConf}s.\n     */\n+\n    public Iterator<SynchronizerConf> getAllSynchronizerConfs (String type)\n    {\n-      StringBuilder query = new StringBuilder(\"FROM \").append(entityClass.getName());\n-      if (type != null && !type.isEmpty())\n+      StringBuilder query = new StringBuilder(\"FROM \").append (entityClass.getName ());\n+      if (type != null && !type.isEmpty ())\n       {\n-         query.append(\" WHERE Type = \").append('\\'').append(type).append('\\'');\n+         query.append (\" WHERE Type = \").append ('\\'')\n+.append (type).append ('\\'');\n       }\n-      return new PagedIterator<>(this, query.toString());\n+      return new PagedIterator<> (this, query.toString ());\n    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler_random/9/SynchronizerDao.java\nindex 544b9ed44be..8f77b654a13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler_random/9/SynchronizerDao.java\n@@ -49,8 +49,8 @@ public class SynchronizerDao extends HibernateDao<SynchronizerConf, Long>\n     */\n    public Iterator<SynchronizerConf> getAllSynchronizerConfs (String type)\n    {\n-      StringBuilder query = new StringBuilder(\"FROM \").append(entityClass.getName());\n-      if (type != null && !type.isEmpty())\n+      StringBuilder query = new StringBuilder(\"FROM \").append(entityClass.getName())\n+   ; if (type != null && !type.isEmpty())\n       {\n          query.append(\" WHERE Type = \").append('\\'').append(type).append('\\'');\n       }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler_three_grams/9/SynchronizerDao.java\nindex 544b9ed44be..8dcdce31cc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/9/SynchronizerDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler_three_grams/9/SynchronizerDao.java\n@@ -49,7 +49,8 @@ public class SynchronizerDao extends HibernateDao<SynchronizerConf, Long>\n     */\n    public Iterator<SynchronizerConf> getAllSynchronizerConfs (String type)\n    {\n-      StringBuilder query = new StringBuilder(\"FROM \").append(entityClass.getName());\n+      StringBuilder query = new StringBuilder\n+            (\"FROM \").append(entityClass.getName());\n       if (type != null && !type.isEmpty())\n       {\n          query.append(\" WHERE Type = \").append('\\'').append(type).append('\\'');\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
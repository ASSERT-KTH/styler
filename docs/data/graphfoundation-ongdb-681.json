{
    "project_name": "graphfoundation-ongdb",
    "error_id": "681",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/681/ShiroAuthenticationInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/681/ShiroAuthenticationInfo.java\nindex 6fd9a6a31bc..971f33adfeb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/681/ShiroAuthenticationInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/681/ShiroAuthenticationInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import org.apache.shiro.authc.AuthenticationInfo;\n@@ -35,80 +36,79 @@ import static org.neo4j.internal.kernel.api.security.AuthenticationResult.TOO_MA\n \n public class ShiroAuthenticationInfo extends SimpleAuthenticationInfo\n {\n-    private AuthenticationResult authenticationResult;\n-    private List<Throwable> throwables;\n-\n-    public ShiroAuthenticationInfo()\n-    {\n-        super();\n-        this.authenticationResult = AuthenticationResult.FAILURE;\n-        this.throwables = new ArrayList<>( 1 );\n-    }\n-\n-    public ShiroAuthenticationInfo( Object principal, String realmName, AuthenticationResult authenticationResult )\n+  private AuthenticationResult authenticationResult;\n+  private List<Throwable> throwables;\n+\n+  public ShiroAuthenticationInfo()\n+  {\n+    super();\n+    this.authenticationResult = AuthenticationResult.FAILURE;\n+    this.throwables = new ArrayList<>(1);\n+  }\n+\n+  public ShiroAuthenticationInfo(Object principal, String realmName, AuthenticationResult authenticationResult)\n+  {\n+    super(principal, null, realmName);\n+    this.authenticationResult = authenticationResult;\n+  }\n+\n+  public ShiroAuthenticationInfo(Object principal, Object hashedCredentials, ByteSource credentialsSalt,\n+                                 String realmName, AuthenticationResult authenticationResult)\n+  {\n+    super(principal, hashedCredentials, credentialsSalt, realmName);\n+    this.authenticationResult = authenticationResult;\n+  }\n+\n+  public AuthenticationResult getAuthenticationResult()\n+  {\n+    return authenticationResult;\n+  }\n+\n+  public void addThrowable(Throwable t)\n+  {\n+    throwables.add(t);\n+  }\n+\n+  public List<Throwable> getThrowables()\n+  {\n+    return throwables;\n+  }\n+\n+  @Override\n+  public void merge(AuthenticationInfo info)\n+  {\n+    if (info == null || info.getPrincipals() == null || info.getPrincipals().isEmpty())\n     {\n-        super( principal, null, realmName );\n-        this.authenticationResult = authenticationResult;\n+      return;\n     }\n \n-    public ShiroAuthenticationInfo( Object principal, Object hashedCredentials, ByteSource credentialsSalt,\n-            String realmName, AuthenticationResult authenticationResult )\n-    {\n-        super( principal, hashedCredentials, credentialsSalt, realmName );\n-        this.authenticationResult = authenticationResult;\n-    }\n-\n-    public AuthenticationResult getAuthenticationResult()\n-    {\n-        return authenticationResult;\n-    }\n+    super.merge(info);\n \n-    public void addThrowable( Throwable t )\n+    if (info instanceof ShiroAuthenticationInfo)\n     {\n-        throwables.add( t );\n-    }\n-\n-    public List<Throwable> getThrowables()\n-    {\n-        return throwables;\n-    }\n-\n-    @Override\n-    public void merge( AuthenticationInfo info )\n-    {\n-        if ( info == null || info.getPrincipals() == null || info.getPrincipals().isEmpty() )\n-        {\n-            return;\n-        }\n-\n-        super.merge( info );\n-\n-        if ( info instanceof ShiroAuthenticationInfo )\n-        {\n-            authenticationResult = mergeAuthenticationResult( authenticationResult,\n-                    ((ShiroAuthenticationInfo) info).getAuthenticationResult() );\n-        }\n-        else\n-        {\n-            // If we get here (which means no AuthenticationException or UnknownAccountException was thrown)\n-            // it means the realm that provided the info was able to authenticate the subject,\n-            // so we claim the result to be an implicit success\n-            authenticationResult = mergeAuthenticationResult( authenticationResult, AuthenticationResult.SUCCESS );\n-        }\n-    }\n-\n-    private static AuthenticationResult[][] mergeMatrix = {\n-        /* v result | new res >   SUCCESS,                  FAILURE,                  TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED */\n-        /* SUCCESS           */ { SUCCESS,                  SUCCESS,                  SUCCESS          ,        PASSWORD_CHANGE_REQUIRED },\n-        /* FAILURE           */ { SUCCESS,                  FAILURE,                  TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED },\n-        /* TOO_MANY_ATTEMPTS */ { SUCCESS,                  TOO_MANY_ATTEMPTS,        TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED },\n-        /* PASSWORD_CHANGE.. */ { PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED }\n-    };\n-\n-    private static AuthenticationResult mergeAuthenticationResult(\n-            AuthenticationResult result, AuthenticationResult newResult )\n+      authenticationResult = mergeAuthenticationResult(authenticationResult,\n+          ((ShiroAuthenticationInfo) info).getAuthenticationResult());\n+    } else\n     {\n-        AuthenticationResult mergedResult = mergeMatrix[result.ordinal()][newResult.ordinal()];\n-        return mergedResult;\n+      // If we get here (which means no AuthenticationException or UnknownAccountException was thrown)\n+      // it means the realm that provided the info was able to authenticate the subject,\n+      // so we claim the result to be an implicit success\n+      authenticationResult = mergeAuthenticationResult(authenticationResult, AuthenticationResult.SUCCESS);\n     }\n+  }\n+\n+  private static AuthenticationResult[][] mergeMatrix = {\n+      /* v result | new res >   SUCCESS,                  FAILURE,                  TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED */\n+      /* SUCCESS           */ {SUCCESS, SUCCESS, SUCCESS, PASSWORD_CHANGE_REQUIRED},\n+      /* FAILURE           */ {SUCCESS, FAILURE, TOO_MANY_ATTEMPTS, PASSWORD_CHANGE_REQUIRED},\n+      /* TOO_MANY_ATTEMPTS */ {SUCCESS, TOO_MANY_ATTEMPTS, TOO_MANY_ATTEMPTS, PASSWORD_CHANGE_REQUIRED},\n+      /* PASSWORD_CHANGE.. */ {PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED}\n+  };\n+\n+  private static AuthenticationResult mergeAuthenticationResult(\n+      AuthenticationResult result, AuthenticationResult newResult)\n+  {\n+    AuthenticationResult mergedResult = mergeMatrix[result.ordinal()][newResult.ordinal()];\n+    return mergedResult;\n+  }\n }\n",
            "diff_size": 119
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/681/ShiroAuthenticationInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/681/ShiroAuthenticationInfo.java\nindex 6fd9a6a31bc..9c1a23dc289 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/681/ShiroAuthenticationInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/681/ShiroAuthenticationInfo.java\n@@ -82,8 +82,7 @@ public class ShiroAuthenticationInfo extends SimpleAuthenticationInfo\n         }\n \n         super.merge( info );\n-\n-        if ( info instanceof ShiroAuthenticationInfo )\n+if ( info instanceof ShiroAuthenticationInfo )\n         {\n             authenticationResult = mergeAuthenticationResult( authenticationResult,\n                     ((ShiroAuthenticationInfo) info).getAuthenticationResult() );\n@@ -99,16 +98,19 @@ public class ShiroAuthenticationInfo extends SimpleAuthenticationInfo\n \n     private static AuthenticationResult[][] mergeMatrix = {\n         /* v result | new res >   SUCCESS,                  FAILURE,                  TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED */\n-        /* SUCCESS           */ { SUCCESS,                  SUCCESS,                  SUCCESS          ,        PASSWORD_CHANGE_REQUIRED },\n-        /* FAILURE           */ { SUCCESS,                  FAILURE,                  TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED },\n-        /* TOO_MANY_ATTEMPTS */ { SUCCESS,                  TOO_MANY_ATTEMPTS,        TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED },\n-        /* PASSWORD_CHANGE.. */ { PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED }\n+        /* SUCCESS           */\n+{ SUCCESS, SUCCESS, SUCCESS, PASSWORD_CHANGE_REQUIRED },\n+        /* FAILURE           */\n+{ SUCCESS, FAILURE, TOO_MANY_ATTEMPTS, PASSWORD_CHANGE_REQUIRED },\n+        /* TOO_MANY_ATTEMPTS */\n+{ SUCCESS, TOO_MANY_ATTEMPTS, TOO_MANY_ATTEMPTS, PASSWORD_CHANGE_REQUIRED },\n+        /* PASSWORD_CHANGE.. */\n+{ PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED }\n     };\n \n-    private static AuthenticationResult mergeAuthenticationResult(\n-            AuthenticationResult result, AuthenticationResult newResult )\n+    private static AuthenticationResult mergeAuthenticationResult( AuthenticationResult result, AuthenticationResult newResult )\n     {\n         AuthenticationResult mergedResult = mergeMatrix[result.ordinal()][newResult.ordinal()];\n         return mergedResult;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
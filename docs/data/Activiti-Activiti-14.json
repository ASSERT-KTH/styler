{
    "project_name": "Activiti-Activiti",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.cmd;\n\nimport java.io.Serializable;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/14/GetExecutionVariableInstanceCmd.java\nindex 0adcab0da1d..0460802cf41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/14/GetExecutionVariableInstanceCmd.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/14/GetExecutionVariableInstanceCmd.java\nindex 0adcab0da1d..0460802cf41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/14/GetExecutionVariableInstanceCmd.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/14/GetExecutionVariableInstanceCmd.java\nindex 0adcab0da1d..358135d0fa4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/14/GetExecutionVariableInstanceCmd.java\n@@ -13,7 +13,6 @@\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n-\n import org.activiti.engine.ActivitiIllegalArgumentException;\n import org.activiti.engine.ActivitiObjectNotFoundException;\n import org.activiti.engine.impl.interceptor.Command;\n@@ -22,45 +21,44 @@ import org.activiti.engine.impl.persistence.entity.ExecutionEntity;\n import org.activiti.engine.impl.persistence.entity.VariableInstance;\n import org.activiti.engine.runtime.Execution;\n \n-public class GetExecutionVariableInstanceCmd implements Command<VariableInstance>, Serializable {\n-\n-    private static final long serialVersionUID = 1L;\n-    protected String executionId;\n-    protected String variableName;\n-    protected boolean isLocal;\n-\n-    public GetExecutionVariableInstanceCmd(String executionId, String variableName, boolean isLocal) {\n-        this.executionId = executionId;\n-        this.variableName = variableName;\n-        this.isLocal = isLocal;\n-    }\n \n-    @Override\n-    public VariableInstance execute(CommandContext commandContext) {\n-        if (executionId == null) {\n-            throw new ActivitiIllegalArgumentException(\"executionId is null\");\n-        }\n-        if (variableName == null) {\n-            throw new ActivitiIllegalArgumentException(\"variableName is null\");\n-        }\n+public class GetExecutionVariableInstanceCmd implements Command<VariableInstance>, Serializable {\n \n-        ExecutionEntity execution = commandContext.getExecutionEntityManager().findById(executionId);\n+  private static final long serialVersionUID = 1L;\n+  protected String executionId;\n+  protected String variableName;\n+  protected boolean isLocal;\n \n-        if (execution == null) {\n-            throw new ActivitiObjectNotFoundException(\"execution \" + executionId + \" doesn't exist\", Execution.class);\n-        }\n+  public GetExecutionVariableInstanceCmd(String executionId, String variableName, boolean isLocal) {\n+    this.executionId = executionId;\n+    this.variableName = variableName;\n+    this.isLocal = isLocal;\n+  }\n \n-        VariableInstance variableEntity = null;\n-        if (isLocal) {\n-            variableEntity = execution.getVariableInstanceLocal(variableName, false);\n-        } else {\n-            variableEntity = execution.getVariableInstance(variableName, false);\n-        }\n+  @Override\n+  public VariableInstance execute(CommandContext commandContext) {\n+    if (executionId == null) {\n+      throw new ActivitiIllegalArgumentException(\"executionId is null\");\n+    }\n+    if (variableName == null) {\n+      throw new ActivitiIllegalArgumentException(\"variableName is null\");\n+    }\n \n-        if (variableEntity != null) {\n-            variableEntity.getValue();\n-        }\n+    ExecutionEntity execution = commandContext.getExecutionEntityManager().findById(executionId);\n+    if (execution == null) {\n+      throw new ActivitiObjectNotFoundException(\"execution \" + executionId + \" doesn't exist\",\n+                                                Execution.class);\n+    }\n \n-        return variableEntity;\n+    VariableInstance variableEntity = null;\n+    if (isLocal) {\n+      variableEntity = execution.getVariableInstanceLocal(variableName, false);\n+    } else {\n+      variableEntity = execution.getVariableInstance(variableName, false);\n+    }\n+    if (variableEntity != null) {\n+      variableEntity.getValue();\n     }\n-}\n+    return variableEntity;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/14/GetExecutionVariableInstanceCmd.java\nindex 0adcab0da1d..0460802cf41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/14/GetExecutionVariableInstanceCmd.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/14/GetExecutionVariableInstanceCmd.java\nindex 0adcab0da1d..0460802cf41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/14/GetExecutionVariableInstanceCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/14/GetExecutionVariableInstanceCmd.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
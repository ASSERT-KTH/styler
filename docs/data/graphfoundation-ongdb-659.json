{
    "project_name": "graphfoundation-ongdb",
    "error_id": "659",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/659/LockUnit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/659/LockUnit.java\nindex fcf6e77b292..c9d7fb85907 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/659/LockUnit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/659/LockUnit.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking;\n \n import org.neo4j.storageengine.api.lock.ResourceType;\n@@ -26,101 +27,100 @@ import org.neo4j.storageengine.api.lock.ResourceType;\n  */\n public class LockUnit implements Comparable<LockUnit>, ActiveLock\n {\n-    private final ResourceType resourceType;\n-    private final long resourceId;\n-    private final boolean exclusive;\n+  private final ResourceType resourceType;\n+  private final long resourceId;\n+  private final boolean exclusive;\n \n-    public LockUnit( ResourceType resourceType, long resourceId, boolean exclusive )\n-    {\n-        this.resourceType = resourceType;\n-        this.resourceId = resourceId;\n-        this.exclusive = exclusive;\n-    }\n+  public LockUnit(ResourceType resourceType, long resourceId, boolean exclusive)\n+  {\n+    this.resourceType = resourceType;\n+    this.resourceId = resourceId;\n+    this.exclusive = exclusive;\n+  }\n \n-    @Override\n-    public String mode()\n-    {\n-        return exclusive ? EXCLUSIVE_MODE : SHARED_MODE;\n-    }\n+  @Override\n+  public String mode()\n+  {\n+    return exclusive ? EXCLUSIVE_MODE : SHARED_MODE;\n+  }\n \n-    @Override\n-    public ResourceType resourceType()\n-    {\n-        return resourceType;\n-    }\n+  @Override\n+  public ResourceType resourceType()\n+  {\n+    return resourceType;\n+  }\n+\n+  @Override\n+  public long resourceId()\n+  {\n+    return resourceId;\n+  }\n+\n+  public boolean isExclusive()\n+  {\n+    return exclusive;\n+  }\n \n-    @Override\n-    public long resourceId()\n+  @Override\n+  public int hashCode()\n+  {\n+    final int prime = 31;\n+    int result = 1;\n+    result = prime * result + (exclusive ? 1231 : 1237);\n+    result = prime * result + (int) (resourceId ^ (resourceId >>> 32));\n+    result = prime * result + resourceType.hashCode();\n+    return result;\n+  }\n+\n+  @Override\n+  public boolean equals(Object obj)\n+  {\n+    if (this == obj)\n     {\n-        return resourceId;\n+      return true;\n     }\n-\n-    public boolean isExclusive()\n+    if (obj == null)\n     {\n-        return exclusive;\n+      return false;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (getClass() != obj.getClass())\n     {\n-        final int prime = 31;\n-        int result = 1;\n-        result = prime * result + (exclusive ? 1231 : 1237);\n-        result = prime * result + (int) (resourceId ^ (resourceId >>> 32));\n-        result = prime * result + resourceType.hashCode();\n-        return result;\n+      return false;\n     }\n-\n-    @Override\n-    public boolean equals( Object obj )\n+    LockUnit other = (LockUnit) obj;\n+    if (exclusive != other.exclusive)\n     {\n-        if ( this == obj )\n-        {\n-            return true;\n-        }\n-        if ( obj == null )\n-        {\n-            return false;\n-        }\n-        if ( getClass() != obj.getClass() )\n-        {\n-            return false;\n-        }\n-        LockUnit other = (LockUnit) obj;\n-        if ( exclusive != other.exclusive )\n-        {\n-            return false;\n-        }\n-        if ( resourceId != other.resourceId )\n-        {\n-            return false;\n-        }\n-        else if ( resourceType.typeId() != other.resourceType.typeId() )\n-        {\n-            return false;\n-        }\n-        return true;\n+      return false;\n     }\n-\n-    @Override\n-    public int compareTo( LockUnit o )\n+    if (resourceId != other.resourceId)\n     {\n-        // Exclusive locks go first to minimize amount of potential deadlocks\n-        int exclusiveCompare = Boolean.compare( exclusive, o.exclusive );\n-        if ( exclusiveCompare != 0 )\n-        {\n-            return -exclusiveCompare;\n-        }\n-\n-        // Then shared/exclusive locks are compared by resourceTypeId and then by resourceId\n-        return resourceType.typeId() == o.resourceType.typeId() ? Long.compare( resourceId, o.resourceId )\n-                                                                : resourceType.typeId() - o.resourceType.typeId();\n+      return false;\n+    } else if (resourceType.typeId() != other.resourceType.typeId())\n+    {\n+      return false;\n     }\n+    return true;\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public int compareTo(LockUnit o)\n+  {\n+    // Exclusive locks go first to minimize amount of potential deadlocks\n+    int exclusiveCompare = Boolean.compare(exclusive, o.exclusive);\n+    if (exclusiveCompare != 0)\n     {\n-        return \"Resource [resourceType=\" + resourceType + \", resourceId=\" + resourceId + \", exclusive=\" + exclusive\n-               + \"]\";\n+      return -exclusiveCompare;\n     }\n+\n+    // Then shared/exclusive locks are compared by resourceTypeId and then by resourceId\n+    return resourceType.typeId() == o.resourceType.typeId() ? Long.compare(resourceId, o.resourceId)\n+        : resourceType.typeId() - o.resourceType.typeId();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"Resource [resourceType=\" + resourceType + \", resourceId=\" + resourceId + \", exclusive=\" + exclusive\n+        + \"]\";\n+  }\n }\n",
            "diff_size": 123
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/659/LockUnit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/659/LockUnit.java\nindex fcf6e77b292..f024582956f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/659/LockUnit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/659/LockUnit.java\n@@ -65,8 +65,8 @@ public class LockUnit implements Comparable<LockUnit>, ActiveLock\n     {\n         final int prime = 31;\n         int result = 1;\n-        result = prime * result + (exclusive ? 1231 : 1237);\n-        result = prime * result + (int) (resourceId ^ (resourceId >>> 32));\n+        result = prime * result + ( exclusive ? 1231 : 1237 );\n+        result = prime * result + ( int) ( resourceId ^ ( resourceId >>> 32 ));\n         result = prime * result + resourceType.hashCode();\n         return result;\n     }\n@@ -78,20 +78,24 @@ public class LockUnit implements Comparable<LockUnit>, ActiveLock\n         {\n             return true;\n         }\n-        if ( obj == null )\n+\n+if ( obj == null )\n         {\n             return false;\n         }\n-        if ( getClass() != obj.getClass() )\n+\n+if ( getClass() != obj.getClass() )\n         {\n             return false;\n         }\n-        LockUnit other = (LockUnit) obj;\n+\n+LockUnit other = (LockUnit) obj;\n         if ( exclusive != other.exclusive )\n         {\n             return false;\n         }\n-        if ( resourceId != other.resourceId )\n+\n+if ( resourceId != other.resourceId )\n         {\n             return false;\n         }\n@@ -113,14 +117,12 @@ public class LockUnit implements Comparable<LockUnit>, ActiveLock\n         }\n \n         // Then shared/exclusive locks are compared by resourceTypeId and then by resourceId\n-        return resourceType.typeId() == o.resourceType.typeId() ? Long.compare( resourceId, o.resourceId )\n-                                                                : resourceType.typeId() - o.resourceType.typeId();\n+        return resourceType.typeId() == o.resourceType.typeId() ? Long.compare( resourceId, o.resourceId ) : resourceType.typeId() - o.resourceType.typeId();\n     }\n \n     @Override\n     public String toString()\n     {\n-        return \"Resource [resourceType=\" + resourceType + \", resourceId=\" + resourceId + \", exclusive=\" + exclusive\n-               + \"]\";\n+        return \"Resource [resourceType=\" + resourceType + \", resourceId=\" + resourceId + \", exclusive=\" + exclusive + \"]\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
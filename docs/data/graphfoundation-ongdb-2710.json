{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2710",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2710/ClusterMembers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2710/ClusterMembers.java\nindex 345cdf61dc5..ed3aa299926 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2710/ClusterMembers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2710/ClusterMembers.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster.member;\n \n import java.util.function.Predicate;\n@@ -37,88 +38,88 @@ import static java.lang.String.format;\n  */\n public class ClusterMembers\n {\n-    public static Predicate<ClusterMember> inRole( final String role )\n-    {\n-        return item -> item.hasRole( role );\n-    }\n+  public static Predicate<ClusterMember> inRole(final String role)\n+  {\n+    return item -> item.hasRole(role);\n+  }\n \n-    public static Predicate<ClusterMember> hasInstanceId( final InstanceId instanceId )\n-    {\n-        return item -> item.getInstanceId().equals( instanceId );\n-    }\n+  public static Predicate<ClusterMember> hasInstanceId(final InstanceId instanceId)\n+  {\n+    return item -> item.getInstanceId().equals(instanceId);\n+  }\n \n-    private final ObservedClusterMembers observedClusterMembers;\n-    private final HighAvailabilityMemberStateMachine stateMachine;\n+  private final ObservedClusterMembers observedClusterMembers;\n+  private final HighAvailabilityMemberStateMachine stateMachine;\n \n-    public ClusterMembers( ObservedClusterMembers observedClusterMembers,\n-            HighAvailabilityMemberStateMachine stateMachine )\n-    {\n-        this.observedClusterMembers = observedClusterMembers;\n-        this.stateMachine = stateMachine;\n-    }\n+  public ClusterMembers(ObservedClusterMembers observedClusterMembers,\n+                        HighAvailabilityMemberStateMachine stateMachine)\n+  {\n+    this.observedClusterMembers = observedClusterMembers;\n+    this.stateMachine = stateMachine;\n+  }\n \n-    public ClusterMember getCurrentMember()\n+  public ClusterMember getCurrentMember()\n+  {\n+    ClusterMember currentMember = observedClusterMembers.getCurrentMember();\n+    if (currentMember == null)\n     {\n-        ClusterMember currentMember = observedClusterMembers.getCurrentMember();\n-        if ( currentMember == null )\n-        {\n-            return null;\n-        }\n-        HighAvailabilityMemberState currentState = stateMachine.getCurrentState();\n-        return updateRole( currentMember, currentState );\n+      return null;\n     }\n+    HighAvailabilityMemberState currentState = stateMachine.getCurrentState();\n+    return updateRole(currentMember, currentState);\n+  }\n \n-    public String getCurrentMemberRole()\n-    {\n-        ClusterMember currentMember = getCurrentMember();\n-        return (currentMember == null) ? HighAvailabilityModeSwitcher.UNKNOWN : currentMember.getHARole();\n-    }\n+  public String getCurrentMemberRole()\n+  {\n+    ClusterMember currentMember = getCurrentMember();\n+    return (currentMember == null) ? HighAvailabilityModeSwitcher.UNKNOWN : currentMember.getHARole();\n+  }\n \n-    public Iterable<ClusterMember> getMembers()\n-    {\n-        return getActualMembers( observedClusterMembers.getMembers() );\n-    }\n+  public Iterable<ClusterMember> getMembers()\n+  {\n+    return getActualMembers(observedClusterMembers.getMembers());\n+  }\n \n-    public Iterable<ClusterMember> getAliveMembers()\n-    {\n-        return getActualMembers( observedClusterMembers.getAliveMembers() );\n-    }\n+  public Iterable<ClusterMember> getAliveMembers()\n+  {\n+    return getActualMembers(observedClusterMembers.getAliveMembers());\n+  }\n \n-    private Iterable<ClusterMember> getActualMembers( Iterable<ClusterMember> members )\n+  private Iterable<ClusterMember> getActualMembers(Iterable<ClusterMember> members)\n+  {\n+    final ClusterMember currentMember = getCurrentMember();\n+    if (currentMember == null)\n     {\n-        final ClusterMember currentMember = getCurrentMember();\n-        if ( currentMember == null )\n-        {\n-            return members;\n-        }\n-        return Iterables.map(\n-                member -> currentMember.getInstanceId().equals( member.getInstanceId() ) ? currentMember : member, members );\n+      return members;\n     }\n+    return Iterables.map(\n+        member -> currentMember.getInstanceId().equals(member.getInstanceId()) ? currentMember : member, members);\n+  }\n \n-    private static ClusterMember updateRole( ClusterMember member, HighAvailabilityMemberState state )\n+  private static ClusterMember updateRole(ClusterMember member, HighAvailabilityMemberState state)\n+  {\n+    switch (state)\n     {\n-        switch ( state )\n-        {\n-        case MASTER:\n-            return member.availableAs( HighAvailabilityModeSwitcher.MASTER, member.getHAUri(), member.getStoreId() );\n-        case SLAVE:\n-            return member.availableAs( HighAvailabilityModeSwitcher.SLAVE, member.getHAUri(), member.getStoreId() );\n-        default:\n-            return member.unavailable();\n-        }\n+      case MASTER:\n+        return member.availableAs(HighAvailabilityModeSwitcher.MASTER, member.getHAUri(), member.getStoreId());\n+      case SLAVE:\n+        return member.availableAs(HighAvailabilityModeSwitcher.SLAVE, member.getHAUri(), member.getStoreId());\n+      default:\n+        return member.unavailable();\n     }\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public String toString()\n+  {\n+    StringBuilder buf = new StringBuilder();\n+    for (ClusterMember clusterMember : getMembers())\n     {\n-        StringBuilder buf = new StringBuilder();\n-        for ( ClusterMember clusterMember : getMembers() )\n-        {\n-            buf.append( \"  \" ).append( clusterMember.getInstanceId() ).append( \":\" )\n-               .append( clusterMember.getHARole() )\n-               .append( \" (is alive = \" ).append( clusterMember.isAlive() ).append( \")\" )\n-               .append( format( \"%n\" ) );\n-        }\n-        return buf.toString();\n+      buf.append(\"  \").append(clusterMember.getInstanceId()).append(\":\")\n+          .append(clusterMember.getHARole())\n+          .append(\" (is alive = \").append(clusterMember.isAlive()).append(\")\")\n+          .append(format(\"%n\"));\n     }\n+    return buf.toString();\n+  }\n }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2710/ClusterMembers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2710/ClusterMembers.java\nindex 345cdf61dc5..a225ba2eb79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2710/ClusterMembers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2710/ClusterMembers.java\n@@ -64,14 +64,15 @@ public class ClusterMembers\n         {\n             return null;\n         }\n-        HighAvailabilityMemberState currentState = stateMachine.getCurrentState();\n+\n+HighAvailabilityMemberState currentState = stateMachine.getCurrentState();\n         return updateRole( currentMember, currentState );\n     }\n \n     public String getCurrentMemberRole()\n     {\n         ClusterMember currentMember = getCurrentMember();\n-        return (currentMember == null) ? HighAvailabilityModeSwitcher.UNKNOWN : currentMember.getHARole();\n+        return ( currentMember == null ) ? HighAvailabilityModeSwitcher.UNKNOWN : currentMember.getHARole();\n     }\n \n     public Iterable<ClusterMember> getMembers()\n@@ -91,8 +92,8 @@ public class ClusterMembers\n         {\n             return members;\n         }\n-        return Iterables.map(\n-                member -> currentMember.getInstanceId().equals( member.getInstanceId() ) ? currentMember : member, members );\n+\n+return Iterables.map( member -> currentMember.getInstanceId().equals( member.getInstanceId() ) ? currentMember : member, members );\n     }\n \n     private static ClusterMember updateRole( ClusterMember member, HighAvailabilityMemberState state )\n@@ -114,11 +115,8 @@ public class ClusterMembers\n         StringBuilder buf = new StringBuilder();\n         for ( ClusterMember clusterMember : getMembers() )\n         {\n-            buf.append( \"  \" ).append( clusterMember.getInstanceId() ).append( \":\" )\n-               .append( clusterMember.getHARole() )\n-               .append( \" (is alive = \" ).append( clusterMember.isAlive() ).append( \")\" )\n-               .append( format( \"%n\" ) );\n-        }\n+            buf.append( \"  \" ).append( clusterMember.getInstanceId() ).append( \":\" ).append( clusterMember.getHARole() ).append( \" (is alive = \" ).append( clusterMember.isAlive() ).append( \")\" ).append( format( \"%n\" ) );\n+    }\n         return buf.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
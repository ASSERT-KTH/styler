{
    "project_name": "neo4j-neo4j",
    "error_id": "2231",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2231/DefaultRelationshipTraversalCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2231/DefaultRelationshipTraversalCursor.java\nindex a7b39e4b22d..8359ba3beef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2231/DefaultRelationshipTraversalCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2231/DefaultRelationshipTraversalCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -33,8 +34,8 @@ import org.neo4j.storageengine.api.txstate.NodeState;\n import static java.lang.String.format;\n import static org.neo4j.kernel.impl.newapi.Read.NO_ID;\n \n-class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<StorageRelationshipTraversalCursor,DefaultRelationshipTraversalCursor>\n-        implements RelationshipTraversalCursor\n+class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<StorageRelationshipTraversalCursor, DefaultRelationshipTraversalCursor>\n+  implements RelationshipTraversalCursor\n {\n     private final DefaultNodeCursor nodeCursor;\n     private LongIterator addedRelationships;\n@@ -42,10 +43,10 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n     private RelationshipSelection selection;\n     private AccessMode mode;\n \n-    DefaultRelationshipTraversalCursor( CursorPool<DefaultRelationshipTraversalCursor> pool, StorageRelationshipTraversalCursor storeCursor,\n-            DefaultNodeCursor nodeCursor )\n+    DefaultRelationshipTraversalCursor(CursorPool<DefaultRelationshipTraversalCursor> pool, StorageRelationshipTraversalCursor storeCursor,\n+                                       DefaultNodeCursor nodeCursor)\n     {\n-        super( storeCursor, pool );\n+        super(storeCursor, pool);\n         this.nodeCursor = nodeCursor;\n     }\n \n@@ -53,15 +54,15 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n      * Initializes this cursor to traverse over relationships, with a reference that was earlier retrieved from {@link NodeCursor#relationshipsReference()}.\n      *\n      * @param nodeReference reference to the origin node.\n-     * @param reference reference to the place to start traversing these relationships.\n-     * @param read reference to {@link Read}.\n+     * @param reference     reference to the place to start traversing these relationships.\n+     * @param read          reference to {@link Read}.\n      */\n-    void init( long nodeReference, long reference, RelationshipSelection selection, Read read )\n+    void init(long nodeReference, long reference, RelationshipSelection selection, Read read)\n     {\n         this.originNodeReference = nodeReference;\n         this.selection = selection;\n-        this.storeCursor.init( nodeReference, reference, selection );\n-        init( read );\n+        this.storeCursor.init(nodeReference, reference, selection);\n+        init(read);\n         this.addedRelationships = ImmutableEmptyLongIterator.INSTANCE;\n     }\n \n@@ -69,43 +70,41 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n      * Initializes this cursor to traverse over relationships, directly from the {@link NodeCursor}.\n      *\n      * @param nodeCursor {@link NodeCursor} at the origin node.\n-     * @param read reference to {@link Read}.\n+     * @param read       reference to {@link Read}.\n      */\n-    void init( DefaultNodeCursor nodeCursor, RelationshipSelection selection, Read read )\n+    void init(DefaultNodeCursor nodeCursor, RelationshipSelection selection, Read read)\n     {\n         this.originNodeReference = nodeCursor.nodeReference();\n         this.selection = selection;\n-        nodeCursor.storeCursor.relationships( storeCursor, selection );\n-        init( read );\n+        nodeCursor.storeCursor.relationships(storeCursor, selection);\n+        init(read);\n         this.addedRelationships = ImmutableEmptyLongIterator.INSTANCE;\n     }\n \n     @Override\n-    public void otherNode( NodeCursor cursor )\n+    public void otherNode(NodeCursor cursor)\n     {\n-        read.singleNode( otherNodeReference(), cursor );\n+        read.singleNode(otherNodeReference(), cursor);\n     }\n \n     @Override\n     public long otherNodeReference()\n     {\n-        if ( currentAddedInTx != NO_ID )\n+        if (currentAddedInTx != NO_ID)\n         {\n             // Here we compare the source/target nodes from tx-state to the origin node and decide the neighbour node from it\n             long originNodeReference = originNodeReference();\n-            if ( txStateSourceNodeReference == originNodeReference )\n+            if (txStateSourceNodeReference == originNodeReference)\n             {\n                 return txStateTargetNodeReference;\n-            }\n-            else if ( txStateTargetNodeReference == originNodeReference )\n+            } else if (txStateTargetNodeReference == originNodeReference)\n             {\n                 return txStateSourceNodeReference;\n-            }\n-            else\n+            } else\n             {\n-                throw new IllegalStateException( format(\n-                        \"Relationship[%d] which was added in tx has an origin node [%d] which is neither source [%d] nor target [%d]\",\n-                        currentAddedInTx, originNodeReference, txStateSourceNodeReference, txStateTargetNodeReference ) );\n+                throw new IllegalStateException(format(\n+                  \"Relationship[%d] which was added in tx has an origin node [%d] which is neither source [%d] nor target [%d]\",\n+                  currentAddedInTx, originNodeReference, txStateSourceNodeReference, txStateTargetNodeReference));\n             }\n         }\n         return storeCursor.neighbourNodeReference();\n@@ -123,27 +122,26 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n         boolean hasChanges = hasChanges();\n \n         // tx-state relationships\n-        if ( hasChanges )\n+        if (hasChanges)\n         {\n-            if ( addedRelationships.hasNext() )\n+            if (addedRelationships.hasNext())\n             {\n-                read.txState().relationshipVisit( addedRelationships.next(), relationshipTxStateDataVisitor );\n-                if ( tracer != null )\n+                read.txState().relationshipVisit(addedRelationships.next(), relationshipTxStateDataVisitor);\n+                if (tracer != null)\n                 {\n-                    tracer.onRelationship( relationshipReference() );\n+                    tracer.onRelationship(relationshipReference());\n                 }\n                 return true;\n-            }\n-            else\n+            } else\n             {\n                 currentAddedInTx = NO_ID;\n             }\n         }\n \n-        while ( storeCursor.next() )\n+        while (storeCursor.next())\n         {\n-            boolean skip = hasChanges && read.txState().relationshipIsDeletedInThisTx( storeCursor.entityReference() );\n-            if ( !skip && allowed() )\n+            boolean skip = hasChanges && read.txState().relationshipIsDeletedInThisTx(storeCursor.entityReference());\n+            if (!skip && allowed())\n             {\n                 return true;\n             }\n@@ -152,10 +150,10 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n     }\n \n     @Override\n-    public void setTracer( KernelReadTracer tracer )\n+    public void setTracer(KernelReadTracer tracer)\n     {\n-        super.setTracer( tracer );\n-        storeCursor.setTracer( tracer );\n+        super.setTracer(tracer);\n+        storeCursor.setTracer(tracer);\n     }\n \n     @Override\n@@ -167,27 +165,27 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n \n     boolean allowed()\n     {\n-        if ( mode == null )\n+        if (mode == null)\n         {\n             mode = read.ktx.securityContext().mode();\n         }\n-        return mode.allowsTraverseRelType( storeCursor.type() ) && allowedToSeeEndNode( mode );\n+        return mode.allowsTraverseRelType(storeCursor.type()) && allowedToSeeEndNode(mode);\n     }\n \n-    private boolean allowedToSeeEndNode( AccessMode mode )\n+    private boolean allowedToSeeEndNode(AccessMode mode)\n     {\n-        if ( mode.allowsTraverseAllLabels() )\n+        if (mode.allowsTraverseAllLabels())\n         {\n             return true;\n         }\n-        read.singleNode( storeCursor.neighbourNodeReference(), nodeCursor );\n+        read.singleNode(storeCursor.neighbourNodeReference(), nodeCursor);\n         return nodeCursor.next();\n     }\n \n     @Override\n     public void closeInternal()\n     {\n-        if ( !isClosed() )\n+        if (!isClosed())\n         {\n             read = null;\n             selection = null;\n@@ -200,8 +198,8 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n     @Override\n     protected void collectAddedTxStateSnapshot()\n     {\n-        NodeState nodeState = read.txState().getNodeState( originNodeReference );\n-        addedRelationships = selection.addedRelationship( nodeState );\n+        NodeState nodeState = read.txState().getNodeState(originNodeReference);\n+        addedRelationships = selection.addedRelationship(nodeState);\n     }\n \n     @Override\n@@ -212,11 +210,11 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n \n     public void release()\n     {\n-        if ( storeCursor != null )\n+        if (storeCursor != null)\n         {\n             storeCursor.close();\n         }\n-        if ( nodeCursor != null )\n+        if (nodeCursor != null)\n         {\n             nodeCursor.close();\n             nodeCursor.release();\n@@ -226,14 +224,13 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n     @Override\n     public String toString()\n     {\n-        if ( isClosed() )\n+        if (isClosed())\n         {\n             return \"RelationshipTraversalCursor[closed state]\";\n-        }\n-        else\n+        } else\n         {\n             return \"RelationshipTraversalCursor[id=\" + storeCursor.entityReference() +\n-                    \", \" + storeCursor + \"]\";\n+              \", \" + storeCursor + \"]\";\n         }\n     }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2231/DefaultRelationshipTraversalCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2231/DefaultRelationshipTraversalCursor.java\nindex a7b39e4b22d..4d9ef1717c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2231/DefaultRelationshipTraversalCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2231/DefaultRelationshipTraversalCursor.java\n@@ -236,4 +236,4 @@ class DefaultRelationshipTraversalCursor extends DefaultRelationshipCursor<Stora\n                     \", \" + storeCursor + \"]\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
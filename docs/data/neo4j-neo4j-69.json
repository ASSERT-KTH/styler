{
    "project_name": "neo4j-neo4j",
    "error_id": "69",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/69/Neo4jRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/69/Neo4jRule.java\nindex 088f160973a..d04b45264dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/69/Neo4jRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/69/Neo4jRule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.harness.junit.rule;\n \n import org.junit.rules.TestRule;\n@@ -59,49 +60,48 @@ public class Neo4jRule implements TestRule\n     private Neo4j neo4j;\n     private Supplier<PrintStream> dumpLogsOnFailureTarget;\n \n-    protected Neo4jRule( Neo4jBuilder builder )\n+    protected Neo4jRule(Neo4jBuilder builder)\n     {\n         this.builder = builder;\n     }\n \n     public Neo4jRule()\n     {\n-        this( Neo4jBuilders.newInProcessBuilder() );\n+        this(Neo4jBuilders.newInProcessBuilder());\n     }\n \n     /**\n      * @deprecated Use {@link #Neo4jRule(Path)}.\n      */\n-    @Deprecated( forRemoval = true )\n-    public Neo4jRule( File workingDirectory )\n+    @Deprecated(forRemoval = true)\n+    public Neo4jRule(File workingDirectory)\n     {\n-        this( workingDirectory.toPath() );\n+        this(workingDirectory.toPath());\n     }\n \n-    public Neo4jRule( Path workingDirectory )\n+    public Neo4jRule(Path workingDirectory)\n     {\n-        this( Neo4jBuilders.newInProcessBuilder( workingDirectory ) );\n+        this(Neo4jBuilders.newInProcessBuilder(workingDirectory));\n     }\n \n     @Override\n-    public Statement apply( final Statement base, Description description )\n+    public Statement apply(final Statement base, Description description)\n     {\n         return new Statement()\n         {\n             @Override\n             public void evaluate() throws Throwable\n             {\n-                try ( Neo4j sc = neo4j = builder.build() )\n+                try (Neo4j sc = neo4j = builder.build())\n                 {\n                     try\n                     {\n                         base.evaluate();\n-                    }\n-                    catch ( Throwable t )\n+                    } catch (Throwable t)\n                     {\n-                        if ( dumpLogsOnFailureTarget != null )\n+                        if (dumpLogsOnFailureTarget != null)\n                         {\n-                            sc.printLogs( dumpLogsOnFailureTarget.get() );\n+                            sc.printLogs(dumpLogsOnFailureTarget.get());\n                         }\n \n                         throw t;\n@@ -115,14 +115,14 @@ public class Neo4jRule implements TestRule\n      * Configure the Neo4j instance. Configuration here can be both configuration aimed at the server as well as the\n      * database tuning options. Please refer to the Neo4j Manual for details on available configuration options.\n      *\n-     * @param key the config key\n+     * @param key   the config key\n      * @param value the config value\n-     * @param <T> the type of the setting\n+     * @param <T>   the type of the setting\n      * @return this configurator instance\n      */\n-    public <T> Neo4jRule withConfig( Setting<T> key, T value )\n+    public <T> Neo4jRule withConfig(Setting<T> key, T value)\n     {\n-        builder = builder.withConfig( key, value );\n+        builder = builder.withConfig(key, value);\n         return this;\n     }\n \n@@ -134,40 +134,43 @@ public class Neo4jRule implements TestRule\n      * @param extension the unmanaged extension class.\n      * @return this configurator instance\n      */\n-    public Neo4jRule withUnmanagedExtension( String mountPath, Class<?> extension )\n+    public Neo4jRule withUnmanagedExtension(String mountPath, Class<?> extension)\n     {\n-        builder = builder.withUnmanagedExtension( mountPath, extension );\n+        builder = builder.withUnmanagedExtension(mountPath, extension);\n         return this;\n     }\n \n     /**\n      * Shortcut for configuring the server to find and mount all unmanaged extensions in the given package.\n-     * @see #withUnmanagedExtension(String, Class)\n-     * @param mountPath the http path, relative to the server base URI, that this extension should be mounted at.\n+     *\n+     * @param mountPath   the http path, relative to the server base URI, that this extension should be mounted at.\n      * @param packageName a java package with extension classes.\n      * @return this configurator instance\n+     * @see #withUnmanagedExtension(String, Class)\n      */\n-    public Neo4jRule withUnmanagedExtension( String mountPath, String packageName )\n+    public Neo4jRule withUnmanagedExtension(String mountPath, String packageName)\n     {\n-        builder = builder.withUnmanagedExtension( mountPath, packageName );\n+        builder = builder.withUnmanagedExtension(mountPath, packageName);\n         return this;\n     }\n \n     /**\n      * Enhance Neo4j instance with provided extensions.\n      * Please refer to the Neo4j Manual for details on extensions, how to write and use them.\n+     *\n      * @param extensionFactories extension factories\n      * @return this configurator instance\n      */\n-    public Neo4jRule withExtensionFactories( Iterable<ExtensionFactory<?>> extensionFactories )\n+    public Neo4jRule withExtensionFactories(Iterable<ExtensionFactory<?>> extensionFactories)\n     {\n-        builder = builder.withExtensionFactories( extensionFactories );\n+        builder = builder.withExtensionFactories(extensionFactories);\n         return this;\n     }\n \n     /**\n      * Disable web server on configured Neo4j instance.\n      * For cases where web server is not required to test specific functionality it can be fully disabled using this tuning option.\n+     *\n      * @return this configurator instance.\n      */\n     public Neo4jRule withDisabledServer()\n@@ -179,74 +182,80 @@ public class Neo4jRule implements TestRule\n     /**\n      * Data fixtures to inject upon server build. This can be either a file with a plain-text cypher query\n      * (for example, myFixture.cyp), or a directory containing such files with the suffix \".cyp\".\n+     *\n      * @param cypherFileOrDirectory file with cypher statement, or directory containing \".cyp\"-suffixed files.\n      * @return this configurator instance\n      * @deprecated Use {@link #withFixture(Path)}.\n      */\n-    @Deprecated( forRemoval = true )\n-    public Neo4jRule withFixture( File cypherFileOrDirectory )\n+    @Deprecated(forRemoval = true)\n+    public Neo4jRule withFixture(File cypherFileOrDirectory)\n     {\n-        return withFixture( cypherFileOrDirectory.toPath() );\n+        return withFixture(cypherFileOrDirectory.toPath());\n     }\n \n     /**\n      * Data fixtures to inject upon server build. This can be either a file with a plain-text cypher query\n      * (for example, myFixture.cyp), or a directory containing such files with the suffix \".cyp\".\n+     *\n      * @param cypherFileOrDirectory file with cypher statement, or directory containing \".cyp\"-suffixed files.\n      * @return this configurator instance\n      */\n-    public Neo4jRule withFixture( Path cypherFileOrDirectory )\n+    public Neo4jRule withFixture(Path cypherFileOrDirectory)\n     {\n-        builder = builder.withFixture( cypherFileOrDirectory );\n+        builder = builder.withFixture(cypherFileOrDirectory);\n         return this;\n     }\n \n     /**\n      * Data fixture to inject upon server build. This should be a valid Cypher statement.\n+     *\n      * @param fixtureStatement a cypher statement\n      * @return this configurator instance\n      */\n-    public Neo4jRule withFixture( String fixtureStatement )\n+    public Neo4jRule withFixture(String fixtureStatement)\n     {\n-        builder = builder.withFixture( fixtureStatement );\n+        builder = builder.withFixture(fixtureStatement);\n         return this;\n     }\n \n     /**\n      * Data fixture to inject upon server build. This should be a user implemented fixture function\n      * operating on a {@link GraphDatabaseService} instance\n+     *\n      * @param fixtureFunction a fixture function\n      * @return this configurator instance\n      */\n-    public Neo4jRule withFixture( Function<GraphDatabaseService,Void> fixtureFunction )\n+    public Neo4jRule withFixture(Function<GraphDatabaseService, Void> fixtureFunction)\n     {\n-        builder = builder.withFixture( fixtureFunction );\n+        builder = builder.withFixture(fixtureFunction);\n         return this;\n     }\n \n     /**\n      * Pre-populate the server with databases copied from the specified source directory.\n      * The source directory needs to have sub-folders `databases/neo4j` in which the source store files are located.\n+     *\n      * @param sourceDirectory the directory to copy from\n      * @return this configurator instance\n      * @deprecated Use {@link #copyFrom(Path)}.\n      */\n-    @Deprecated( forRemoval = true )\n-    public Neo4jRule copyFrom( File sourceDirectory )\n+    @Deprecated(forRemoval = true)\n+    public Neo4jRule copyFrom(File sourceDirectory)\n     {\n-        builder = builder.copyFrom( sourceDirectory.toPath() );\n+        builder = builder.copyFrom(sourceDirectory.toPath());\n         return this;\n     }\n \n     /**\n      * Pre-populate the server with databases copied from the specified source directory.\n      * The source directory needs to have sub-folders `databases/neo4j` in which the source store files are located.\n+     *\n      * @param sourceDirectory the directory to copy from\n      * @return this configurator instance\n      */\n-    public Neo4jRule copyFrom( Path sourceDirectory )\n+    public Neo4jRule copyFrom(Path sourceDirectory)\n     {\n-        builder = builder.copyFrom( sourceDirectory );\n+        builder = builder.copyFrom(sourceDirectory);\n         return this;\n     }\n \n@@ -258,9 +267,9 @@ public class Neo4jRule implements TestRule\n      * @param procedureClass a class containing one or more procedure definitions\n      * @return this configurator instance\n      */\n-    public Neo4jRule withProcedure( Class<?> procedureClass )\n+    public Neo4jRule withProcedure(Class<?> procedureClass)\n     {\n-        builder = builder.withProcedure( procedureClass );\n+        builder = builder.withProcedure(procedureClass);\n         return this;\n     }\n \n@@ -272,9 +281,9 @@ public class Neo4jRule implements TestRule\n      * @param functionClass a class containing one or more function definitions\n      * @return this configurator instance\n      */\n-    public Neo4jRule withFunction( Class<?> functionClass )\n+    public Neo4jRule withFunction(Class<?> functionClass)\n     {\n-        builder = builder.withFunction( functionClass );\n+        builder = builder.withFunction(functionClass);\n         return this;\n     }\n \n@@ -286,18 +295,19 @@ public class Neo4jRule implements TestRule\n      * @param functionClass a class containing one or more function definitions\n      * @return this configurator instance\n      */\n-    public Neo4jRule withAggregationFunction( Class<?> functionClass )\n+    public Neo4jRule withAggregationFunction(Class<?> functionClass)\n     {\n-        builder = builder.withAggregationFunction( functionClass );\n+        builder = builder.withAggregationFunction(functionClass);\n         return this;\n     }\n \n     /**\n      * Dump available logs on failure.\n+     *\n      * @param out stream used to dump logs into.\n      * @return this configurator instance\n      */\n-    public Neo4jRule dumpLogsOnFailure( PrintStream out )\n+    public Neo4jRule dumpLogsOnFailure(PrintStream out)\n     {\n         dumpLogsOnFailureTarget = () -> out;\n         return this;\n@@ -311,7 +321,7 @@ public class Neo4jRule implements TestRule\n      * @param out the supplier of the stream that will be used to dump logs info.\n      * @return this configurator instance.\n      */\n-    public Neo4jRule dumpLogsOnFailure( Supplier<PrintStream> out )\n+    public Neo4jRule dumpLogsOnFailure(Supplier<PrintStream> out)\n     {\n         dumpLogsOnFailureTarget = out;\n         return this;\n@@ -319,6 +329,7 @@ public class Neo4jRule implements TestRule\n \n     /**\n      * Returns the URI to the Bolt Protocol connector of the instance.\n+     *\n      * @return the bolt address.\n      */\n     public URI boltURI()\n@@ -329,6 +340,7 @@ public class Neo4jRule implements TestRule\n \n     /**\n      * Returns the URI to the root resource of the instance. For example, http://localhost:7474/\n+     *\n      * @return the http address to the root resource.\n      */\n     public URI httpURI()\n@@ -340,6 +352,7 @@ public class Neo4jRule implements TestRule\n     /**\n      * Returns ths URI to the root resource of the instance using the https protocol.\n      * For example, https://localhost:7475/.\n+     *\n      * @return the https address to the root resource.\n      */\n     public URI httpsURI()\n@@ -350,6 +363,7 @@ public class Neo4jRule implements TestRule\n \n     /**\n      * Access the {@link DatabaseManagementService} used by the server.\n+     *\n      * @return the database management service backing this instance.\n      */\n     public DatabaseManagementService databaseManagementService()\n@@ -360,6 +374,7 @@ public class Neo4jRule implements TestRule\n \n     /**\n      * Access default database service.\n+     *\n      * @return default database service.\n      */\n     public GraphDatabaseService defaultDatabaseService()\n@@ -370,6 +385,7 @@ public class Neo4jRule implements TestRule\n \n     /**\n      * Returns the server's configuration.\n+     *\n      * @return the current configuration of the instance.\n      */\n     public Configuration config()\n@@ -380,9 +396,9 @@ public class Neo4jRule implements TestRule\n \n     private void assertInitialised()\n     {\n-        if ( neo4j == null )\n+        if (neo4j == null)\n         {\n-            throw new IllegalStateException( \"Cannot access Neo4j before or after the test runs.\" );\n+            throw new IllegalStateException(\"Cannot access Neo4j before or after the test runs.\");\n         }\n     }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/69/Neo4jRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/69/Neo4jRule.java\nindex 088f160973a..0cdc0ae0326 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/69/Neo4jRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/69/Neo4jRule.java\n@@ -385,4 +385,4 @@ public class Neo4jRule implements TestRule\n             throw new IllegalStateException( \"Cannot access Neo4j before or after the test runs.\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "674",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/674/DefaultTopTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/674/DefaultTopTable.java\nindex 390b405a7d9..16918d8b289 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/674/DefaultTopTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/674/DefaultTopTable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.codegen;\n \n import java.util.Collections;\n@@ -26,107 +27,105 @@ import java.util.PriorityQueue;\n \n /**\n  * The default implementation of a Top N table used by the generated code\n- *\n+ * <p>\n  * It accepts tuples as boxed objects that implements Comparable\n- *\n+ * <p>\n  * Implements the following interface:\n  * (since the code is generated it does not actually need to declare it with implements)\n- *\n+ * <p>\n  * public interface SortTable<T extends Comparable<?>>\n  * {\n- *     boolean add( T e );\n- *\n- *     void sort();\n- *\n- *     Iterator<T> iterator();\n+ * boolean add( T e );\n+ * <p>\n+ * void sort();\n+ * <p>\n+ * Iterator<T> iterator();\n  * }\n- *\n+ * <p>\n  * Uses a max heap (Java's standard PriorityQueue) to collect a maximum of totalCount tuples in reverse order.\n  * When sort() is called it collects them in reverse sorted order into an array.\n  * The iterator() then traverses this array backwards.\n  */\n public class DefaultTopTable<T extends Comparable<Object>> implements Iterable<T> // implements SortTable<T>\n {\n-    private int totalCount;\n-    private int count = -1;\n-    private PriorityQueue<Object> heap;\n-    private Object[] array; // TODO: Use Guava's MinMaxPriorityQueue to avoid having this array\n+  private int totalCount;\n+  private int count = -1;\n+  private PriorityQueue<Object> heap;\n+  private Object[] array; // TODO: Use Guava's MinMaxPriorityQueue to avoid having this array\n \n-    public DefaultTopTable( int totalCount )\n+  public DefaultTopTable(int totalCount)\n+  {\n+    if (totalCount <= 0)\n     {\n-        if ( totalCount <= 0 )\n-        {\n-            throw new IllegalArgumentException( \"Top table size must be greater than 0\" );\n-        }\n-        this.totalCount = totalCount;\n-\n-        heap = new PriorityQueue<>( totalCount, Collections.reverseOrder() );\n-        array = new Object[ totalCount ];\n+      throw new IllegalArgumentException(\"Top table size must be greater than 0\");\n     }\n+    this.totalCount = totalCount;\n+\n+    heap = new PriorityQueue<>(totalCount, Collections.reverseOrder());\n+    array = new Object[totalCount];\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    // Because of an issue with getting the same runtime-types with generics and byte code generation we use Object for now\n-    public boolean add( Object e )\n+  @SuppressWarnings(\"unchecked\")\n+  // Because of an issue with getting the same runtime-types with generics and byte code generation we use Object for now\n+  public boolean add(Object e)\n+  {\n+    if (heap.size() < totalCount)\n     {\n-        if ( heap.size() < totalCount )\n-        {\n-            return heap.offer( e );\n-        }\n-        else\n-        {\n-            T head = (T) heap.peek();\n-            if ( head.compareTo( e ) > 0 )\n-            {\n-                heap.poll();\n-                return heap.offer( e );\n-            }\n-            else\n-            {\n-                return false;\n-            }\n-        }\n+      return heap.offer(e);\n+    } else\n+    {\n+      T head = (T) heap.peek();\n+      if (head.compareTo(e) > 0)\n+      {\n+        heap.poll();\n+        return heap.offer(e);\n+      } else\n+      {\n+        return false;\n+      }\n     }\n+  }\n \n-    public void sort()\n-    {\n-        count = heap.size();\n+  public void sort()\n+  {\n+    count = heap.size();\n \n-        // We keep the values in reverse order so that we can write from start to end\n-        for ( int i = 0; i < count; i++ )\n-        {\n-            array[i] = heap.poll();\n-        }\n+    // We keep the values in reverse order so that we can write from start to end\n+    for (int i = 0; i < count; i++)\n+    {\n+      array[i] = heap.poll();\n     }\n+  }\n \n-    @Override\n-    public Iterator<T> iterator()\n+  @Override\n+  public Iterator<T> iterator()\n+  {\n+    if (count == -1)\n     {\n-        if ( count == -1 )\n-        {\n-            // This should never happen in generated code but is here to simplify debugging if used incorrectly\n-            throw new IllegalStateException( \"sort() needs to be called before requesting an iterator\" );\n-        }\n-        return new Iterator<T>()\n-        {\n-            private int cursor = count;\n+      // This should never happen in generated code but is here to simplify debugging if used incorrectly\n+      throw new IllegalStateException(\"sort() needs to be called before requesting an iterator\");\n+    }\n+    return new Iterator<T>()\n+    {\n+      private int cursor = count;\n \n-            @Override\n-            public boolean hasNext()\n-            {\n-                return cursor > 0;\n-            }\n+      @Override\n+      public boolean hasNext()\n+      {\n+        return cursor > 0;\n+      }\n \n-            @Override\n-            @SuppressWarnings( \"unchecked\" )\n-            public T next()\n-            {\n-                if ( !hasNext() )\n-                {\n-                    throw new NoSuchElementException();\n-                }\n-                --cursor;\n-                return (T) array[cursor];\n-            }\n-        };\n-    }\n+      @Override\n+      @SuppressWarnings(\"unchecked\")\n+      public T next()\n+      {\n+        if (!hasNext())\n+        {\n+          throw new NoSuchElementException();\n+        }\n+        --cursor;\n+        return (T) array[cursor];\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 92
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
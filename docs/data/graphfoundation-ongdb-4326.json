{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4326",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4326/HttpConnectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4326/HttpConnectorFactory.java\nindex d675c21972c..174a460d578 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4326/HttpConnectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4326/HttpConnectorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import org.eclipse.jetty.server.ConnectionFactory;\n@@ -33,50 +34,50 @@ import org.neo4j.server.configuration.ServerSettings;\n \n public class HttpConnectorFactory\n {\n-    private Config configuration;\n+  private Config configuration;\n \n-    public HttpConnectorFactory( Config config )\n-    {\n-        this.configuration = config;\n-    }\n+  public HttpConnectorFactory(Config config)\n+  {\n+    this.configuration = config;\n+  }\n \n-    public ConnectionFactory createHttpConnectionFactory()\n-    {\n-        return new HttpConnectionFactory( createHttpConfig() );\n-    }\n+  public ConnectionFactory createHttpConnectionFactory()\n+  {\n+    return new HttpConnectionFactory(createHttpConfig());\n+  }\n \n-    protected HttpConfiguration createHttpConfig()\n-    {\n-        HttpConfiguration httpConfig = new HttpConfiguration();\n-        httpConfig.setRequestHeaderSize( configuration.get( ServerSettings.maximum_request_header_size) );\n-        httpConfig.setResponseHeaderSize( configuration.get( ServerSettings.maximum_response_header_size) );\n-        httpConfig.setSendServerVersion( false );\n-        return httpConfig;\n-    }\n+  protected HttpConfiguration createHttpConfig()\n+  {\n+    HttpConfiguration httpConfig = new HttpConfiguration();\n+    httpConfig.setRequestHeaderSize(configuration.get(ServerSettings.maximum_request_header_size));\n+    httpConfig.setResponseHeaderSize(configuration.get(ServerSettings.maximum_response_header_size));\n+    httpConfig.setSendServerVersion(false);\n+    return httpConfig;\n+  }\n \n-    public ServerConnector createConnector( Server server, ListenSocketAddress address, JettyThreadCalculator jettyThreadCalculator )\n-    {\n-        ConnectionFactory httpFactory = createHttpConnectionFactory();\n-        return createConnector(server, address, jettyThreadCalculator, httpFactory );\n-    }\n+  public ServerConnector createConnector(Server server, ListenSocketAddress address, JettyThreadCalculator jettyThreadCalculator)\n+  {\n+    ConnectionFactory httpFactory = createHttpConnectionFactory();\n+    return createConnector(server, address, jettyThreadCalculator, httpFactory);\n+  }\n \n-    public ServerConnector createConnector( Server server, ListenSocketAddress address,\n-            JettyThreadCalculator jettyThreadCalculator, ConnectionFactory... httpFactories )\n-    {\n-        int acceptors = jettyThreadCalculator.getAcceptors();\n-        int selectors = jettyThreadCalculator.getSelectors();\n+  public ServerConnector createConnector(Server server, ListenSocketAddress address,\n+                                         JettyThreadCalculator jettyThreadCalculator, ConnectionFactory... httpFactories)\n+  {\n+    int acceptors = jettyThreadCalculator.getAcceptors();\n+    int selectors = jettyThreadCalculator.getSelectors();\n \n-        ServerConnector connector =\n-                new ServerConnector( server, null, null, null, acceptors, selectors, httpFactories );\n+    ServerConnector connector =\n+        new ServerConnector(server, null, null, null, acceptors, selectors, httpFactories);\n \n-        connector.setConnectionFactories( Arrays.asList( httpFactories ) );\n+    connector.setConnectionFactories(Arrays.asList(httpFactories));\n \n-        // TCP backlog, per socket, 50 is the default, consider adapting if needed\n-        connector.setAcceptQueueSize( 50 );\n+    // TCP backlog, per socket, 50 is the default, consider adapting if needed\n+    connector.setAcceptQueueSize(50);\n \n-        connector.setHost( address.getHostname() );\n-        connector.setPort( address.getPort() );\n+    connector.setHost(address.getHostname());\n+    connector.setPort(address.getPort());\n \n-        return connector;\n-    }\n+    return connector;\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4326/HttpConnectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4326/HttpConnectorFactory.java\nindex d675c21972c..87dc4d1b752 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4326/HttpConnectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4326/HttpConnectorFactory.java\n@@ -57,7 +57,7 @@ public class HttpConnectorFactory\n     public ServerConnector createConnector( Server server, ListenSocketAddress address, JettyThreadCalculator jettyThreadCalculator )\n     {\n         ConnectionFactory httpFactory = createHttpConnectionFactory();\n-        return createConnector(server, address, jettyThreadCalculator, httpFactory );\n+        return createConnector( server, address, jettyThreadCalculator, httpFactory );\n     }\n \n     public ServerConnector createConnector( Server server, ListenSocketAddress address,\n@@ -65,18 +65,13 @@ public class HttpConnectorFactory\n     {\n         int acceptors = jettyThreadCalculator.getAcceptors();\n         int selectors = jettyThreadCalculator.getSelectors();\n-\n-        ServerConnector connector =\n-                new ServerConnector( server, null, null, null, acceptors, selectors, httpFactories );\n-\n-        connector.setConnectionFactories( Arrays.asList( httpFactories ) );\n+ServerConnector connector = new ServerConnector( server, null, null, null, acceptors, selectors, httpFactories );\n+connector.setConnectionFactories( Arrays.asList( httpFactories ) );\n \n         // TCP backlog, per socket, 50 is the default, consider adapting if needed\n         connector.setAcceptQueueSize( 50 );\n-\n-        connector.setHost( address.getHostname() );\n+connector.setHost( address.getHostname() );\n         connector.setPort( address.getPort() );\n-\n-        return connector;\n+return connector;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
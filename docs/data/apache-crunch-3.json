{
    "project_name": "apache-crunch",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "62",
                "severity": "warning",
                "message": "'method call' child has incorrect indentation level 4, expected level should be 6.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "    .groupByKey()\n    .mapValues(new ReduceFn(), Avros.strings())\n    .write(To.textFile(output));\n    p.done();\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler/3/SingleUseIterableExceptionIT.java\nindex 8d070cdcef6..30d35b77ae7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler/3/SingleUseIterableExceptionIT.java\n@@ -59,7 +59,7 @@ public class SingleUseIterableExceptionIT {\n     }, Avros.tableOf(Avros.strings(), Avros.strings()))\n     .groupByKey()\n     .mapValues(new ReduceFn(), Avros.strings())\n-    .write(To.textFile(output));\n+        .write(To.textFile(output));\n     p.done();\n   }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/intellij/3/SingleUseIterableExceptionIT.java\nindex 8d070cdcef6..60f951df1dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/intellij/3/SingleUseIterableExceptionIT.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.crunch;\n \n import org.apache.crunch.impl.mr.MRPipeline;\n@@ -37,14 +38,14 @@ public class SingleUseIterableExceptionIT {\n       throw new CrunchRuntimeException(\"Exception\");\n     }\n   }\n-  \n+\n   @Test\n   public void testException() throws Exception {\n     run(new MRPipeline(SingleUseIterableExceptionIT.class),\n         tmpDir.copyResourceFileName(\"shakes.txt\"),\n         tmpDir.getFileName(\"out\"));\n   }\n-  \n+\n   public static void run(MRPipeline p, String input, String output) {\n     PCollection<String> shakes = p.readTextFile(input);\n     shakes.parallelDo(new MapFn<String, Pair<String, String>>() {\n@@ -55,11 +56,11 @@ public class SingleUseIterableExceptionIT {\n         } else {\n           return Pair.of(\"__SHORT__\", input);\n         }\n-      } \n+      }\n     }, Avros.tableOf(Avros.strings(), Avros.strings()))\n-    .groupByKey()\n-    .mapValues(new ReduceFn(), Avros.strings())\n-    .write(To.textFile(output));\n+        .groupByKey()\n+        .mapValues(new ReduceFn(), Avros.strings())\n+        .write(To.textFile(output));\n     p.done();\n   }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 2, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/naturalize/3/SingleUseIterableExceptionIT.java\nindex 8d070cdcef6..58d6d5cb213 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/naturalize/3/SingleUseIterableExceptionIT.java\n@@ -55,11 +55,10 @@ public class SingleUseIterableExceptionIT {\n         } else {\n           return Pair.of(\"__SHORT__\", input);\n         }\n-      } \n-    }, Avros.tableOf(Avros.strings(), Avros.strings()))\n-    .groupByKey()\n+      }\n+  }, Avros.tableOf(Avros.strings(), Avros.strings())).groupByKey()\n     .mapValues(new ReduceFn(), Avros.strings())\n     .write(To.textFile(output));\n     p.done();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 4, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/codebuff/3/SingleUseIterableExceptionIT.java\nindex 8d070cdcef6..63ff13b10d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/codebuff/3/SingleUseIterableExceptionIT.java\n@@ -26,7 +26,6 @@ import org.junit.Rule;\n import org.junit.Test;\n \n public class SingleUseIterableExceptionIT {\n-\n   @Rule\n   public TemporaryPath tmpDir = TemporaryPaths.create();\n \n@@ -37,29 +36,24 @@ public class SingleUseIterableExceptionIT {\n       throw new CrunchRuntimeException(\"Exception\");\n     }\n   }\n-  \n+\n   @Test\n   public void testException() throws Exception {\n-    run(new MRPipeline(SingleUseIterableExceptionIT.class),\n-        tmpDir.copyResourceFileName(\"shakes.txt\"),\n-        tmpDir.getFileName(\"out\"));\n+    run(new MRPipeline(SingleUseIterableExceptionIT.class), tmpDir.copyResourceFileName(\"shakes.txt\"), tmpDir.getFileName(\"out\"));\n   }\n-  \n+\n   public static void run(MRPipeline p, String input, String output) {\n     PCollection<String> shakes = p.readTextFile(input);\n     shakes.parallelDo(new MapFn<String, Pair<String, String>>() {\n-      @Override\n-      public Pair<String, String> map(String input) {\n-        if (input.length() > 5) {\n-          return Pair.of(input.substring(0, 5), input);\n-        } else {\n-          return Pair.of(\"__SHORT__\", input);\n-        }\n-      } \n-    }, Avros.tableOf(Avros.strings(), Avros.strings()))\n-    .groupByKey()\n-    .mapValues(new ReduceFn(), Avros.strings())\n-    .write(To.textFile(output));\n-    p.done();\n+@Override\n+public Pair<String, String> map(String input) {\n+  if (input.length() > 5) {\n+    return Pair.of(input.substring(0, 5), input);\n+  } else {\n+    return Pair.of(\"__SHORT__\", input);\n   }\n }\n+}, Avros.tableOf(Avros.strings(), Avros.strings())).groupByKey().mapValues(new ReduceFn(), Avros.strings()).write(To.textFile(output));\n+    p.done();\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler_random/3/SingleUseIterableExceptionIT.java\nindex 8d070cdcef6..30d35b77ae7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler_random/3/SingleUseIterableExceptionIT.java\n@@ -59,7 +59,7 @@ public class SingleUseIterableExceptionIT {\n     }, Avros.tableOf(Avros.strings(), Avros.strings()))\n     .groupByKey()\n     .mapValues(new ReduceFn(), Avros.strings())\n-    .write(To.textFile(output));\n+        .write(To.textFile(output));\n     p.done();\n   }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler_three_grams/3/SingleUseIterableExceptionIT.java\nindex 8d070cdcef6..b6785acee33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/3/SingleUseIterableExceptionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler_three_grams/3/SingleUseIterableExceptionIT.java\n@@ -58,8 +58,7 @@ public class SingleUseIterableExceptionIT {\n       } \n     }, Avros.tableOf(Avros.strings(), Avros.strings()))\n     .groupByKey()\n-    .mapValues(new ReduceFn(), Avros.strings())\n-    .write(To.textFile(output));\n+    .mapValues(new ReduceFn(), Avros.strings()).write(To.textFile(output));\n     p.done();\n   }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
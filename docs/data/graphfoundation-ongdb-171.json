{
    "project_name": "graphfoundation-ongdb",
    "error_id": "171",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/171/CachingInputIterable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/171/CachingInputIterable.java\nindex 8503ca84b04..d7ce24a4e31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/171/CachingInputIterable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/171/CachingInputIterable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n@@ -27,46 +28,45 @@ import org.neo4j.unsafe.impl.batchimport.InputIterator;\n \n class CachingInputIterable implements InputIterable\n {\n-    private final InputIterable actual;\n-    private final InputCache cache;\n-    private boolean firstTime = true;\n+  private final InputIterable actual;\n+  private final InputCache cache;\n+  private boolean firstTime = true;\n \n-    CachingInputIterable( InputIterable actual, InputCache cache )\n-    {\n-        this.cache = cache;\n-        this.actual = actual;\n-    }\n+  CachingInputIterable(InputIterable actual, InputCache cache)\n+  {\n+    this.cache = cache;\n+    this.actual = actual;\n+  }\n \n-    @Override\n-    public boolean supportsMultiplePasses()\n+  @Override\n+  public boolean supportsMultiplePasses()\n+  {\n+    return true;\n+  }\n+\n+  @Override\n+  public InputIterator iterator()\n+  {\n+    if (actual.supportsMultiplePasses())\n     {\n-        return true;\n+      // best-case, we don't need to wrap this since it already supports multiple passes\n+      return actual.iterator();\n     }\n \n-    @Override\n-    public InputIterator iterator()\n+    try\n     {\n-        if ( actual.supportsMultiplePasses() )\n-        {\n-            // best-case, we don't need to wrap this since it already supports multiple passes\n-            return actual.iterator();\n-        }\n-\n-        try\n-        {\n-            if ( firstTime )\n-            {\n-                // wrap in an iterator which caches the data as it goes over it\n-                firstTime = false;\n-                InputCacher cacher = cache.cacheNodes();\n-                return new CachingInputIterator( actual.iterator(), cacher );\n-            }\n-            // for consecutive iterations just returned the cached data\n-            return cache.nodes().iterator();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      if (firstTime)\n+      {\n+        // wrap in an iterator which caches the data as it goes over it\n+        firstTime = false;\n+        InputCacher cacher = cache.cacheNodes();\n+        return new CachingInputIterator(actual.iterator(), cacher);\n+      }\n+      // for consecutive iterations just returned the cached data\n+      return cache.nodes().iterator();\n+    } catch (IOException e)\n+    {\n+      throw new UncheckedIOException(e);\n     }\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/171/CachingInputIterable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/171/CachingInputIterable.java\nindex 8503ca84b04..6b1b1636624 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/171/CachingInputIterable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/171/CachingInputIterable.java\n@@ -69,4 +69,4 @@ class CachingInputIterable implements InputIterable\n             throw new UncheckedIOException( e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/171/CachingInputIterable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/171/CachingInputIterable.java\nindex 8503ca84b04..fa364f5a139 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/171/CachingInputIterable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/171/CachingInputIterable.java\n@@ -21,7 +21,6 @@ package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n import java.io.UncheckedIOException;\n-\n import org.neo4j.unsafe.impl.batchimport.InputIterable;\n import org.neo4j.unsafe.impl.batchimport.InputIterator;\n \n@@ -62,6 +61,7 @@ class CachingInputIterable implements InputIterable\n                 return new CachingInputIterator( actual.iterator(), cacher );\n             }\n             // for consecutive iterations just returned the cached data\n+\n             return cache.nodes().iterator();\n         }\n         catch ( IOException e )\n@@ -69,4 +69,4 @@ class CachingInputIterable implements InputIterable\n             throw new UncheckedIOException( e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
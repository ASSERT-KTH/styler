{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4560",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4560/TimingCompilationTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4560/TimingCompilationTracer.java\nindex c0a94f136aa..5c92dfd860b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4560/TimingCompilationTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4560/TimingCompilationTracer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.tracing;\n \n import java.util.ArrayList;\n@@ -27,165 +28,165 @@ import org.neo4j.cypher.internal.frontend.v3_4.phases.CompilationPhaseTracer;\n \n public class TimingCompilationTracer implements CompilationTracer\n {\n-    public interface EventListener\n+  public interface EventListener\n+  {\n+    void queryCompiled(QueryEvent event);\n+  }\n+\n+  public interface QueryEvent\n+  {\n+    String query();\n+\n+    long nanoTime();\n+\n+    List<PhaseEvent> phases();\n+  }\n+\n+  public interface PhaseEvent\n+  {\n+    CompilationPhaseTracer.CompilationPhase phase();\n+\n+    long nanoTime();\n+  }\n+\n+  interface Clock\n+  {\n+    long nanoTime();\n+\n+    Clock SYSTEM = System::nanoTime;\n+  }\n+\n+  private final Clock clock;\n+  private final EventListener listener;\n+\n+  public TimingCompilationTracer(EventListener listener)\n+  {\n+    this(Clock.SYSTEM, listener);\n+  }\n+\n+  TimingCompilationTracer(Clock clock, EventListener listener)\n+  {\n+    this.clock = clock;\n+    this.listener = listener;\n+  }\n+\n+  @Override\n+  public QueryCompilationEvent compileQuery(String query)\n+  {\n+    return new Query(clock, query, listener);\n+  }\n+\n+  private abstract static class Event implements AutoCloseable\n+  {\n+    private Clock clock;\n+    private long time;\n+\n+    Event(Clock clock)\n     {\n-        void queryCompiled( QueryEvent event );\n+      this.clock = clock;\n+      this.time = clock.nanoTime();\n     }\n \n-    public interface QueryEvent\n+    @Override\n+    public final void close()\n     {\n-        String query();\n-\n-        long nanoTime();\n-\n-        List<PhaseEvent> phases();\n+      if (clock != null)\n+      {\n+        time = clock.nanoTime() - time;\n+        clock = null;\n+        done();\n+      }\n     }\n \n-    public interface PhaseEvent\n+    @SuppressWarnings(\"UnusedDeclaration\"/*used through inheritance*/)\n+    public final long nanoTime()\n     {\n-        CompilationPhaseTracer.CompilationPhase phase();\n+      return time;\n+    }\n+\n+    abstract void done();\n \n-        long nanoTime();\n+    final Clock clock()\n+    {\n+      if (clock == null)\n+      {\n+        throw new IllegalStateException(this + \" has been closed\");\n+      }\n+      return clock;\n     }\n+  }\n+\n+  private static class Query extends Event implements QueryEvent, QueryCompilationEvent\n+  {\n+    private final String queryString;\n+    private final EventListener listener;\n+    private final List<Phase> phases = new ArrayList<>();\n \n-    interface Clock\n+    Query(Clock clock, String query, EventListener listener)\n     {\n-        long nanoTime();\n+      super(clock);\n+      this.queryString = query;\n+      this.listener = listener;\n+    }\n \n-        Clock SYSTEM = System::nanoTime;\n+    @Override\n+    public String toString()\n+    {\n+      return getClass().getSimpleName() + \"[\" + queryString + \"]\";\n     }\n \n-    private final Clock clock;\n-    private final EventListener listener;\n+    @Override\n+    public CompilationPhaseEvent beginPhase(CompilationPhase phase)\n+    {\n+      Phase event = new Phase(super.clock(), phase);\n+      phases.add(event);\n+      return event;\n+    }\n \n-    public TimingCompilationTracer( EventListener listener )\n+    @Override\n+    void done()\n     {\n-        this( Clock.SYSTEM, listener );\n+      listener.queryCompiled(this);\n     }\n \n-    TimingCompilationTracer( Clock clock, EventListener listener )\n+    @Override\n+    public String query()\n     {\n-        this.clock = clock;\n-        this.listener = listener;\n+      return queryString;\n     }\n \n     @Override\n-    public QueryCompilationEvent compileQuery( String query )\n+    public List<PhaseEvent> phases()\n     {\n-        return new Query( clock, query, listener );\n+      return Collections.unmodifiableList(phases);\n     }\n+  }\n+\n+  private static class Phase extends Event implements PhaseEvent, CompilationPhaseTracer.CompilationPhaseEvent\n+  {\n+    private final CompilationPhaseTracer.CompilationPhase compilationPhase;\n \n-    private abstract static class Event implements AutoCloseable\n+    Phase(Clock clock, CompilationPhaseTracer.CompilationPhase phase)\n     {\n-        private Clock clock;\n-        private long time;\n-\n-        Event( Clock clock )\n-        {\n-            this.clock = clock;\n-            this.time = clock.nanoTime();\n-        }\n-\n-        @Override\n-        public final void close()\n-        {\n-            if ( clock != null )\n-            {\n-                time = clock.nanoTime() - time;\n-                clock = null;\n-                done();\n-            }\n-        }\n-\n-        @SuppressWarnings( \"UnusedDeclaration\"/*used through inheritance*/ )\n-        public final long nanoTime()\n-        {\n-            return time;\n-        }\n-\n-        abstract void done();\n-\n-        final Clock clock()\n-        {\n-            if ( clock == null )\n-            {\n-                throw new IllegalStateException( this + \" has been closed\" );\n-            }\n-            return clock;\n-        }\n+      super(clock);\n+      this.compilationPhase = phase;\n     }\n \n-    private static class Query extends Event implements QueryEvent, QueryCompilationEvent\n+    @Override\n+    public String toString()\n     {\n-        private final String queryString;\n-        private final EventListener listener;\n-        private final List<Phase> phases = new ArrayList<>();\n-\n-        Query( Clock clock, String query, EventListener listener )\n-        {\n-            super( clock );\n-            this.queryString = query;\n-            this.listener = listener;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return getClass().getSimpleName() + \"[\" + queryString + \"]\";\n-        }\n-\n-        @Override\n-        public CompilationPhaseEvent beginPhase( CompilationPhase phase )\n-        {\n-            Phase event = new Phase( super.clock(), phase );\n-            phases.add( event );\n-            return event;\n-        }\n-\n-        @Override\n-        void done()\n-        {\n-            listener.queryCompiled( this );\n-        }\n-\n-        @Override\n-        public String query()\n-        {\n-            return queryString;\n-        }\n-\n-        @Override\n-        public List<PhaseEvent> phases()\n-        {\n-            return Collections.unmodifiableList( phases );\n-        }\n+      return getClass().getSimpleName() + \"[\" + compilationPhase + \"]\";\n     }\n \n-    private static class Phase extends Event implements PhaseEvent, CompilationPhaseTracer.CompilationPhaseEvent\n+    @Override\n+    public CompilationPhaseTracer.CompilationPhase phase()\n+    {\n+      return compilationPhase;\n+    }\n+\n+    @Override\n+    void done()\n     {\n-        private final CompilationPhaseTracer.CompilationPhase compilationPhase;\n-\n-        Phase( Clock clock, CompilationPhaseTracer.CompilationPhase phase )\n-        {\n-            super( clock );\n-            this.compilationPhase = phase;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return getClass().getSimpleName() + \"[\" + compilationPhase + \"]\";\n-        }\n-\n-        @Override\n-        public CompilationPhaseTracer.CompilationPhase phase()\n-        {\n-            return compilationPhase;\n-        }\n-\n-        @Override\n-        void done()\n-        {\n-        }\n     }\n+  }\n }\n",
            "diff_size": 229
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4560/TimingCompilationTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4560/TimingCompilationTracer.java\nindex c0a94f136aa..2f9f48d35f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4560/TimingCompilationTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4560/TimingCompilationTracer.java\n@@ -51,8 +51,7 @@ public class TimingCompilationTracer implements CompilationTracer\n     interface Clock\n     {\n         long nanoTime();\n-\n-        Clock SYSTEM = System::nanoTime;\n+Clock SYSTEM = System::nanoTime;\n     }\n \n     private final Clock clock;\n@@ -111,7 +110,8 @@ public class TimingCompilationTracer implements CompilationTracer\n             {\n                 throw new IllegalStateException( this + \" has been closed\" );\n             }\n-            return clock;\n+\n+return clock;\n         }\n     }\n \n@@ -188,4 +188,4 @@ public class TimingCompilationTracer implements CompilationTracer\n         {\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
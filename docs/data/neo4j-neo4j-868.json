{
    "project_name": "neo4j-neo4j",
    "error_id": "868",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "146",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "187",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "187",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "230",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "230",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "233",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "263",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "312",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "414",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "439",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "459",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "491",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "12",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/868/ProcedureCompiler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/868/ProcedureCompiler.java\nindex 589b265df62..367ce922487 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/868/ProcedureCompiler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/868/ProcedureCompiler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.impl;\n \n import java.lang.reflect.Constructor;\n@@ -72,29 +73,29 @@ class ProcedureCompiler\n     private final ProcedureConfig config;\n     private final NamingRestrictions restrictions;\n \n-    ProcedureCompiler( TypeCheckers typeCheckers, ComponentRegistry safeComponents,\n-            ComponentRegistry allComponents, Log log, ProcedureConfig config )\n+    ProcedureCompiler(TypeCheckers typeCheckers, ComponentRegistry safeComponents,\n+                      ComponentRegistry allComponents, Log log, ProcedureConfig config)\n     {\n         this(\n-                new MethodSignatureCompiler( typeCheckers ),\n-                new ProcedureOutputSignatureCompiler( typeCheckers ),\n-                new FieldInjections( safeComponents ),\n-                new FieldInjections( allComponents ),\n-                log,\n-                typeCheckers,\n-                config,\n-                ProcedureCompiler::rejectEmptyNamespace );\n+          new MethodSignatureCompiler(typeCheckers),\n+          new ProcedureOutputSignatureCompiler(typeCheckers),\n+          new FieldInjections(safeComponents),\n+          new FieldInjections(allComponents),\n+          log,\n+          typeCheckers,\n+          config,\n+          ProcedureCompiler::rejectEmptyNamespace);\n     }\n \n     private ProcedureCompiler(\n-            MethodSignatureCompiler inputSignatureCompiler,\n-            ProcedureOutputSignatureCompiler outputSignatureCompiler,\n-            FieldInjections safeFieldInjections,\n-            FieldInjections allFieldInjections,\n-            Log log,\n-            TypeCheckers typeCheckers,\n-            ProcedureConfig config,\n-            NamingRestrictions restrictions )\n+      MethodSignatureCompiler inputSignatureCompiler,\n+      ProcedureOutputSignatureCompiler outputSignatureCompiler,\n+      FieldInjections safeFieldInjections,\n+      FieldInjections allFieldInjections,\n+      Log log,\n+      TypeCheckers typeCheckers,\n+      ProcedureConfig config,\n+      NamingRestrictions restrictions)\n     {\n         this.inputSignatureDeterminer = inputSignatureCompiler;\n         this.outputSignatureCompiler = outputSignatureCompiler;\n@@ -106,435 +107,420 @@ class ProcedureCompiler\n         this.restrictions = restrictions;\n     }\n \n-    List<CallableUserFunction> compileFunction( Class<?> fcnDefinition, boolean isBuiltin ) throws KernelException\n+    List<CallableUserFunction> compileFunction(Class<?> fcnDefinition, boolean isBuiltin) throws KernelException\n     {\n         try\n         {\n-            List<Method> functionMethods = Arrays.stream( fcnDefinition.getDeclaredMethods() )\n-                    .filter( m -> m.isAnnotationPresent( UserFunction.class ) )\n-                    .collect( Collectors.toList() );\n+            List<Method> functionMethods = Arrays.stream(fcnDefinition.getDeclaredMethods())\n+              .filter(m -> m.isAnnotationPresent(UserFunction.class))\n+              .collect(Collectors.toList());\n \n-            if ( functionMethods.isEmpty() )\n+            if (functionMethods.isEmpty())\n             {\n                 return emptyList();\n             }\n \n             //used for proper error handling\n-            assertValidConstructor( fcnDefinition );\n+            assertValidConstructor(fcnDefinition);\n \n-            List<CallableUserFunction> out = new ArrayList<>( functionMethods.size() );\n-            for ( Method method : functionMethods )\n+            List<CallableUserFunction> out = new ArrayList<>(functionMethods.size());\n+            for (Method method : functionMethods)\n             {\n-                String valueName = method.getAnnotation( UserFunction.class ).value();\n-                String definedName = method.getAnnotation( UserFunction.class ).name();\n-                QualifiedName funcName = extractName( fcnDefinition, method, valueName, definedName );\n-                if ( isBuiltin || config.isWhitelisted( funcName.toString() ) )\n+                String valueName = method.getAnnotation(UserFunction.class).value();\n+                String definedName = method.getAnnotation(UserFunction.class).name();\n+                QualifiedName funcName = extractName(fcnDefinition, method, valueName, definedName);\n+                if (isBuiltin || config.isWhitelisted(funcName.toString()))\n                 {\n-                    out.add( compileFunction( fcnDefinition, method, funcName ) );\n-                }\n-                else\n+                    out.add(compileFunction(fcnDefinition, method, funcName));\n+                } else\n                 {\n-                    log.warn( String.format( \"The function '%s' is not on the allowlist and won't be loaded.\",\n-                            funcName.toString() ) );\n+                    log.warn(String.format(\"The function '%s' is not on the allowlist and won't be loaded.\",\n+                      funcName.toString()));\n                 }\n             }\n-            out.sort( Comparator.comparing( a -> a.signature().name().toString() ) );\n+            out.sort(Comparator.comparing(a -> a.signature().name().toString()));\n             return out;\n-        }\n-        catch ( KernelException e )\n+        } catch (KernelException e)\n         {\n             throw e;\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, e,\n-                    \"Failed to compile function defined in `%s`: %s\", fcnDefinition.getSimpleName(), e.getMessage() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed, e,\n+              \"Failed to compile function defined in `%s`: %s\", fcnDefinition.getSimpleName(), e.getMessage());\n         }\n     }\n \n-    List<CallableUserAggregationFunction> compileAggregationFunction( Class<?> fcnDefinition ) throws KernelException\n+    List<CallableUserAggregationFunction> compileAggregationFunction(Class<?> fcnDefinition) throws KernelException\n     {\n         try\n         {\n-            List<Method> methods = Arrays.stream( fcnDefinition.getDeclaredMethods() )\n-                    .filter( m -> m.isAnnotationPresent( UserAggregationFunction.class ) )\n-                    .collect( Collectors.toList() );\n+            List<Method> methods = Arrays.stream(fcnDefinition.getDeclaredMethods())\n+              .filter(m -> m.isAnnotationPresent(UserAggregationFunction.class))\n+              .collect(Collectors.toList());\n \n-            if ( methods.isEmpty() )\n+            if (methods.isEmpty())\n             {\n                 return emptyList();\n             }\n \n-            assertValidConstructor( fcnDefinition );\n+            assertValidConstructor(fcnDefinition);\n \n-            List<CallableUserAggregationFunction> out = new ArrayList<>( methods.size() );\n-            for ( Method method : methods )\n+            List<CallableUserAggregationFunction> out = new ArrayList<>(methods.size());\n+            for (Method method : methods)\n             {\n-                String valueName = method.getAnnotation( UserAggregationFunction.class ).value();\n-                String definedName = method.getAnnotation( UserAggregationFunction.class ).name();\n-                QualifiedName funcName = extractName( fcnDefinition, method, valueName, definedName );\n+                String valueName = method.getAnnotation(UserAggregationFunction.class).value();\n+                String definedName = method.getAnnotation(UserAggregationFunction.class).name();\n+                QualifiedName funcName = extractName(fcnDefinition, method, valueName, definedName);\n \n-                if ( config.isWhitelisted( funcName.toString() ) )\n+                if (config.isWhitelisted(funcName.toString()))\n                 {\n-                    out.add( compileAggregationFunction( fcnDefinition, method, funcName ) );\n-                }\n-                else\n+                    out.add(compileAggregationFunction(fcnDefinition, method, funcName));\n+                } else\n                 {\n-                    log.warn( String.format( \"The function '%s' is not on the allowlist and won't be loaded.\",\n-                            funcName.toString() ) );\n+                    log.warn(String.format(\"The function '%s' is not on the allowlist and won't be loaded.\",\n+                      funcName.toString()));\n                 }\n \n             }\n-            out.sort( Comparator.comparing( a -> a.signature().name().toString() ) );\n+            out.sort(Comparator.comparing(a -> a.signature().name().toString()));\n             return out;\n-        }\n-        catch ( KernelException e )\n+        } catch (KernelException e)\n         {\n             throw e;\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, e,\n-                    \"Failed to compile function defined in `%s`: %s\", fcnDefinition.getSimpleName(), e.getMessage() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed, e,\n+              \"Failed to compile function defined in `%s`: %s\", fcnDefinition.getSimpleName(), e.getMessage());\n         }\n     }\n \n-    List<CallableProcedure> compileProcedure( Class<?> procDefinition, String warning, boolean fullAccess )\n-            throws KernelException\n+    List<CallableProcedure> compileProcedure(Class<?> procDefinition, String warning, boolean fullAccess)\n+      throws KernelException\n     {\n         try\n         {\n-            List<Method> procedureMethods = Arrays.stream( procDefinition.getDeclaredMethods() )\n-                    .filter( m -> m.isAnnotationPresent( Procedure.class ) )\n-                    .collect( Collectors.toList() );\n+            List<Method> procedureMethods = Arrays.stream(procDefinition.getDeclaredMethods())\n+              .filter(m -> m.isAnnotationPresent(Procedure.class))\n+              .collect(Collectors.toList());\n \n-            if ( procedureMethods.isEmpty() )\n+            if (procedureMethods.isEmpty())\n             {\n                 return emptyList();\n             }\n \n-            assertValidConstructor( procDefinition );\n-            List<CallableProcedure> out = new ArrayList<>( procedureMethods.size() );\n-            for ( Method method : procedureMethods )\n+            assertValidConstructor(procDefinition);\n+            List<CallableProcedure> out = new ArrayList<>(procedureMethods.size());\n+            for (Method method : procedureMethods)\n             {\n-                String valueName = method.getAnnotation( Procedure.class ).value();\n-                String definedName = method.getAnnotation( Procedure.class ).name();\n-                QualifiedName procName = extractName( procDefinition, method, valueName, definedName );\n+                String valueName = method.getAnnotation(Procedure.class).value();\n+                String definedName = method.getAnnotation(Procedure.class).name();\n+                QualifiedName procName = extractName(procDefinition, method, valueName, definedName);\n \n-                if ( fullAccess || config.isWhitelisted( procName.toString() ) )\n+                if (fullAccess || config.isWhitelisted(procName.toString()))\n                 {\n-                    out.add( compileProcedure( procDefinition, method, warning, fullAccess, procName ) );\n-                }\n-                else\n+                    out.add(compileProcedure(procDefinition, method, warning, fullAccess, procName));\n+                } else\n                 {\n-                    log.warn( String.format( \"The procedure '%s' is not on the allowlist and won't be loaded.\",\n-                            procName.toString() ) );\n+                    log.warn(String.format(\"The procedure '%s' is not on the allowlist and won't be loaded.\",\n+                      procName.toString()));\n                 }\n             }\n-            out.sort( Comparator.comparing( a -> a.signature().name().toString() ) );\n+            out.sort(Comparator.comparing(a -> a.signature().name().toString()));\n             return out;\n-        }\n-        catch ( KernelException e )\n+        } catch (KernelException e)\n         {\n             throw e;\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, e,\n-                    \"Failed to compile procedure defined in `%s`: %s\", procDefinition.getSimpleName(), e.getMessage() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed, e,\n+              \"Failed to compile procedure defined in `%s`: %s\", procDefinition.getSimpleName(), e.getMessage());\n         }\n     }\n \n-    private CallableProcedure compileProcedure( Class<?> procDefinition, Method method,\n-            String warning, boolean fullAccess, QualifiedName procName )\n-            throws ProcedureException\n+    private CallableProcedure compileProcedure(Class<?> procDefinition, Method method,\n+                                               String warning, boolean fullAccess, QualifiedName procName)\n+      throws ProcedureException\n     {\n-        List<FieldSignature> inputSignature = inputSignatureDeterminer.signatureFor( method );\n-        List<FieldSignature> outputSignature = outputSignatureCompiler.fieldSignatures( method );\n+        List<FieldSignature> inputSignature = inputSignatureDeterminer.signatureFor(method);\n+        List<FieldSignature> outputSignature = outputSignatureCompiler.fieldSignatures(method);\n \n-        String description = description( method );\n-        Procedure procedure = method.getAnnotation( Procedure.class );\n+        String description = description(method);\n+        Procedure procedure = method.getAnnotation(Procedure.class);\n         Mode mode = procedure.mode();\n-        boolean admin = method.isAnnotationPresent( Admin.class );\n-        boolean systemProcedure = method.isAnnotationPresent( SystemProcedure.class );\n-        boolean allowExpiredCredentials = systemProcedure ? method.getAnnotation( SystemProcedure.class ).allowExpiredCredentials() : false;\n-        boolean internal = method.isAnnotationPresent( Internal.class );\n-        String deprecated = deprecated( method, procedure::deprecatedBy,\n-                \"Use of @Procedure(deprecatedBy) without @Deprecated in \" + procName );\n-\n-        List<FieldSetter> setters = allFieldInjections.setters( procDefinition );\n-        if ( !fullAccess && !config.fullAccessFor( procName.toString() ) )\n+        boolean admin = method.isAnnotationPresent(Admin.class);\n+        boolean systemProcedure = method.isAnnotationPresent(SystemProcedure.class);\n+        boolean allowExpiredCredentials = systemProcedure ? method.getAnnotation(SystemProcedure.class).allowExpiredCredentials() : false;\n+        boolean internal = method.isAnnotationPresent(Internal.class);\n+        String deprecated = deprecated(method, procedure::deprecatedBy,\n+          \"Use of @Procedure(deprecatedBy) without @Deprecated in \" + procName);\n+\n+        List<FieldSetter> setters = allFieldInjections.setters(procDefinition);\n+        if (!fullAccess && !config.fullAccessFor(procName.toString()))\n         {\n             try\n             {\n-                setters = safeFieldInjections.setters( procDefinition );\n-            }\n-            catch ( ComponentInjectionException e )\n+                setters = safeFieldInjections.setters(procDefinition);\n+            } catch (ComponentInjectionException e)\n             {\n-                description = describeAndLogLoadFailure( procName );\n+                description = describeAndLogLoadFailure(procName);\n                 ProcedureSignature signature =\n-                        new ProcedureSignature( procName, inputSignature, outputSignature, Mode.DEFAULT,\n-                                                admin, null, new String[0], description, warning, procedure.eager(), false, systemProcedure, internal,\n-                                                allowExpiredCredentials );\n-                return new FailedLoadProcedure( signature );\n+                  new ProcedureSignature(procName, inputSignature, outputSignature, Mode.DEFAULT,\n+                    admin, null, new String[0], description, warning, procedure.eager(), false, systemProcedure, internal,\n+                    allowExpiredCredentials);\n+                return new FailedLoadProcedure(signature);\n             }\n         }\n \n         ProcedureSignature signature =\n-                new ProcedureSignature( procName, inputSignature, outputSignature, mode, admin, deprecated,\n-                                        config.rolesFor( procName.toString() ), description, warning, procedure.eager(), false, systemProcedure, internal,\n-                                        allowExpiredCredentials );\n+          new ProcedureSignature(procName, inputSignature, outputSignature, mode, admin, deprecated,\n+            config.rolesFor(procName.toString()), description, warning, procedure.eager(), false, systemProcedure, internal,\n+            allowExpiredCredentials);\n \n-        return ProcedureCompilation.compileProcedure( signature, setters, method );\n+        return ProcedureCompilation.compileProcedure(signature, setters, method);\n     }\n \n-    private String describeAndLogLoadFailure( QualifiedName name )\n+    private String describeAndLogLoadFailure(QualifiedName name)\n     {\n         String nameStr = name.toString();\n         String description =\n-                nameStr + \" is unavailable because it is sandboxed and has dependencies outside of the sandbox. \" +\n-                \"Sandboxing is controlled by the \" + procedure_unrestricted.name() + \" setting. \" +\n-                \"Only unrestrict procedures you can trust with access to database internals.\";\n-        log.warn( description );\n+          nameStr + \" is unavailable because it is sandboxed and has dependencies outside of the sandbox. \" +\n+            \"Sandboxing is controlled by the \" + procedure_unrestricted.name() + \" setting. \" +\n+            \"Only unrestrict procedures you can trust with access to database internals.\";\n+        log.warn(description);\n         return description;\n     }\n \n-    private CallableUserFunction compileFunction( Class<?> procDefinition, Method method, QualifiedName procName )\n-            throws ProcedureException\n+    private CallableUserFunction compileFunction(Class<?> procDefinition, Method method, QualifiedName procName)\n+      throws ProcedureException\n     {\n-        restrictions.verify( procName );\n+        restrictions.verify(procName);\n \n-        List<FieldSignature> inputSignature = inputSignatureDeterminer.signatureFor( method );\n+        List<FieldSignature> inputSignature = inputSignatureDeterminer.signatureFor(method);\n         Class<?> returnType = method.getReturnType();\n-        TypeCheckers.TypeChecker typeChecker = typeCheckers.checkerFor( returnType );\n-        String description = description( method );\n-        UserFunction function = method.getAnnotation( UserFunction.class );\n-        String deprecated = deprecated( method, function::deprecatedBy,\n-                \"Use of @UserFunction(deprecatedBy) without @Deprecated in \" + procName );\n-\n-        List<FieldSetter> setters = allFieldInjections.setters( procDefinition );\n-        if ( !config.fullAccessFor( procName.toString() ) )\n+        TypeCheckers.TypeChecker typeChecker = typeCheckers.checkerFor(returnType);\n+        String description = description(method);\n+        UserFunction function = method.getAnnotation(UserFunction.class);\n+        String deprecated = deprecated(method, function::deprecatedBy,\n+          \"Use of @UserFunction(deprecatedBy) without @Deprecated in \" + procName);\n+\n+        List<FieldSetter> setters = allFieldInjections.setters(procDefinition);\n+        if (!config.fullAccessFor(procName.toString()))\n         {\n             try\n             {\n-                setters = safeFieldInjections.setters( procDefinition );\n-            }\n-            catch ( ComponentInjectionException e )\n+                setters = safeFieldInjections.setters(procDefinition);\n+            } catch (ComponentInjectionException e)\n             {\n-                description = describeAndLogLoadFailure( procName );\n+                description = describeAndLogLoadFailure(procName);\n                 UserFunctionSignature signature =\n-                        new UserFunctionSignature( procName, inputSignature, typeChecker.type(), deprecated,\n-                                                   config.rolesFor( procName.toString() ), description, null, false );\n-                return new FailedLoadFunction( signature );\n+                  new UserFunctionSignature(procName, inputSignature, typeChecker.type(), deprecated,\n+                    config.rolesFor(procName.toString()), description, null, false);\n+                return new FailedLoadFunction(signature);\n             }\n         }\n \n         UserFunctionSignature signature =\n-                new UserFunctionSignature( procName, inputSignature, typeChecker.type(), deprecated,\n-                                           config.rolesFor( procName.toString() ), description, null, false );\n+          new UserFunctionSignature(procName, inputSignature, typeChecker.type(), deprecated,\n+            config.rolesFor(procName.toString()), description, null, false);\n \n-        return ProcedureCompilation.compileFunction( signature, setters, method );\n+        return ProcedureCompilation.compileFunction(signature, setters, method);\n     }\n \n-    private CallableUserAggregationFunction compileAggregationFunction( Class<?> definition, Method create,\n-            QualifiedName funcName ) throws ProcedureException\n+    private CallableUserAggregationFunction compileAggregationFunction(Class<?> definition, Method create,\n+                                                                       QualifiedName funcName) throws ProcedureException\n     {\n-        restrictions.verify( funcName );\n+        restrictions.verify(funcName);\n \n         //find update and result method\n         Method update = null;\n         Method result = null;\n         Class<?> aggregator = create.getReturnType();\n-        for ( Method m : aggregator.getDeclaredMethods() )\n+        for (Method m : aggregator.getDeclaredMethods())\n         {\n-            if ( m.isAnnotationPresent( UserAggregationUpdate.class ) )\n+            if (m.isAnnotationPresent(UserAggregationUpdate.class))\n             {\n-                if ( update != null )\n+                if (update != null)\n                 {\n-                    throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                            \"Class '%s' contains multiple methods annotated with '@%s'.\", aggregator.getSimpleName(),\n-                            UserAggregationUpdate.class.getSimpleName() );\n+                    throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+                      \"Class '%s' contains multiple methods annotated with '@%s'.\", aggregator.getSimpleName(),\n+                      UserAggregationUpdate.class.getSimpleName());\n                 }\n                 update = m;\n \n             }\n-            if ( m.isAnnotationPresent( UserAggregationResult.class ) )\n+            if (m.isAnnotationPresent(UserAggregationResult.class))\n             {\n-                if ( result != null )\n+                if (result != null)\n                 {\n-                    throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                            \"Class '%s' contains multiple methods annotated with '@%s'.\", aggregator.getSimpleName(),\n-                            UserAggregationResult.class.getSimpleName() );\n+                    throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+                      \"Class '%s' contains multiple methods annotated with '@%s'.\", aggregator.getSimpleName(),\n+                      UserAggregationResult.class.getSimpleName());\n                 }\n                 result = m;\n             }\n         }\n-        if ( result == null || update == null )\n+        if (result == null || update == null)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                    \"Class '%s' must contain methods annotated with both '@%s' as well as '@%s'.\",\n-                    aggregator.getSimpleName(), UserAggregationResult.class.getSimpleName(),\n-                    UserAggregationUpdate.class.getSimpleName() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+              \"Class '%s' must contain methods annotated with both '@%s' as well as '@%s'.\",\n+              aggregator.getSimpleName(), UserAggregationResult.class.getSimpleName(),\n+              UserAggregationUpdate.class.getSimpleName());\n         }\n-        if ( update.getReturnType() != void.class )\n+        if (update.getReturnType() != void.class)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                    \"Update method '%s' in %s has type '%s' but must have return type 'void'.\", update.getName(),\n-                    aggregator.getSimpleName(), update.getReturnType().getSimpleName() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+              \"Update method '%s' in %s has type '%s' but must have return type 'void'.\", update.getName(),\n+              aggregator.getSimpleName(), update.getReturnType().getSimpleName());\n \n         }\n-        if ( !isPublic( create.getModifiers() ) )\n+        if (!isPublic(create.getModifiers()))\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                    \"Aggregation method '%s' in %s must be public.\", create.getName(), definition.getSimpleName() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+              \"Aggregation method '%s' in %s must be public.\", create.getName(), definition.getSimpleName());\n         }\n-        if ( !isPublic( aggregator.getModifiers() ) )\n+        if (!isPublic(aggregator.getModifiers()))\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                    \"Aggregation class '%s' must be public.\", aggregator.getSimpleName() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+              \"Aggregation class '%s' must be public.\", aggregator.getSimpleName());\n         }\n-        if ( !isPublic( update.getModifiers() ) )\n+        if (!isPublic(update.getModifiers()))\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                    \"Aggregation update method '%s' in %s must be public.\", update.getName(),\n-                    aggregator.getSimpleName() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+              \"Aggregation update method '%s' in %s must be public.\", update.getName(),\n+              aggregator.getSimpleName());\n         }\n-        if ( !isPublic( result.getModifiers() ) )\n+        if (!isPublic(result.getModifiers()))\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                                          \"Aggregation result method '%s' in %s must be public.\", result.getName(),\n-                                          aggregator.getSimpleName() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+              \"Aggregation result method '%s' in %s must be public.\", result.getName(),\n+              aggregator.getSimpleName());\n         }\n \n-        List<FieldSignature> inputSignature = inputSignatureDeterminer.signatureFor( update );\n+        List<FieldSignature> inputSignature = inputSignatureDeterminer.signatureFor(update);\n         Class<?> returnType = result.getReturnType();\n-        TypeCheckers.TypeChecker valueConverter = typeCheckers.checkerFor( returnType );\n-        String description = description( create );\n-        UserAggregationFunction function = create.getAnnotation( UserAggregationFunction.class );\n+        TypeCheckers.TypeChecker valueConverter = typeCheckers.checkerFor(returnType);\n+        String description = description(create);\n+        UserAggregationFunction function = create.getAnnotation(UserAggregationFunction.class);\n \n-        String deprecated = deprecated( create, function::deprecatedBy,\n-                                        \"Use of @UserAggregationFunction(deprecatedBy) without @Deprecated in \" + funcName );\n+        String deprecated = deprecated(create, function::deprecatedBy,\n+          \"Use of @UserAggregationFunction(deprecatedBy) without @Deprecated in \" + funcName);\n \n-        List<FieldSetter> setters = allFieldInjections.setters( definition );\n-        if ( !config.fullAccessFor( funcName.toString() ) )\n+        List<FieldSetter> setters = allFieldInjections.setters(definition);\n+        if (!config.fullAccessFor(funcName.toString()))\n         {\n             try\n             {\n-                setters = safeFieldInjections.setters( definition );\n-            }\n-            catch ( ComponentInjectionException e )\n+                setters = safeFieldInjections.setters(definition);\n+            } catch (ComponentInjectionException e)\n             {\n-                description = describeAndLogLoadFailure( funcName );\n+                description = describeAndLogLoadFailure(funcName);\n                 UserFunctionSignature signature =\n-                        new UserFunctionSignature( funcName, inputSignature, valueConverter.type(), deprecated,\n-                                                   config.rolesFor( funcName.toString() ), description, null, false );\n+                  new UserFunctionSignature(funcName, inputSignature, valueConverter.type(), deprecated,\n+                    config.rolesFor(funcName.toString()), description, null, false);\n \n-                return new FailedLoadAggregatedFunction( signature );\n+                return new FailedLoadAggregatedFunction(signature);\n             }\n         }\n \n         UserFunctionSignature signature =\n-                new UserFunctionSignature( funcName, inputSignature, valueConverter.type(), deprecated,\n-                                           config.rolesFor( funcName.toString() ), description, null, false );\n+          new UserFunctionSignature(funcName, inputSignature, valueConverter.type(), deprecated,\n+            config.rolesFor(funcName.toString()), description, null, false);\n \n-        return ProcedureCompilation.compileAggregation( signature, setters, create, update, result );\n+        return ProcedureCompilation.compileAggregation(signature, setters, create, update, result);\n     }\n \n-    private String deprecated( Method method, Supplier<String> supplier, String warning )\n+    private String deprecated(Method method, Supplier<String> supplier, String warning)\n     {\n         String deprecatedBy = supplier.get();\n         String deprecated = null;\n-        if ( method.isAnnotationPresent( Deprecated.class ) )\n+        if (method.isAnnotationPresent(Deprecated.class))\n         {\n-            deprecated = deprecatedBy ;\n-        }\n-        else if ( !deprecatedBy.isEmpty() )\n+            deprecated = deprecatedBy;\n+        } else if (!deprecatedBy.isEmpty())\n         {\n-            log.warn( warning );\n+            log.warn(warning);\n             deprecated = deprecatedBy;\n         }\n \n         return deprecated;\n     }\n \n-    private String description( Method method )\n+    private String description(Method method)\n     {\n-        if ( method.isAnnotationPresent( Description.class ) )\n+        if (method.isAnnotationPresent(Description.class))\n         {\n-           return method.getAnnotation( Description.class ).value();\n-        }\n-        else\n+            return method.getAnnotation(Description.class).value();\n+        } else\n         {\n             return null;\n         }\n     }\n \n-    private void assertValidConstructor( Class<?> procDefinition ) throws ProcedureException\n+    private void assertValidConstructor(Class<?> procDefinition) throws ProcedureException\n     {\n         boolean hasValidConstructor = false;\n-        for ( Constructor<?> constructor : procDefinition.getConstructors() )\n+        for (Constructor<?> constructor : procDefinition.getConstructors())\n         {\n-            if ( isPublic( constructor.getModifiers() ) && constructor.getParameterCount() == 0 )\n+            if (isPublic(constructor.getModifiers()) && constructor.getParameterCount() == 0)\n             {\n                 hasValidConstructor = true;\n                 break;\n             }\n         }\n-        if ( !hasValidConstructor )\n+        if (!hasValidConstructor)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                    \"Unable to find a usable public no-argument constructor in the class `%s`. \" +\n-                    \"Please add a valid, public constructor, recompile the class and try again.\",\n-                    procDefinition.getSimpleName() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+              \"Unable to find a usable public no-argument constructor in the class `%s`. \" +\n+                \"Please add a valid, public constructor, recompile the class and try again.\",\n+              procDefinition.getSimpleName());\n         }\n     }\n \n-    private QualifiedName extractName( Class<?> procDefinition, Method m, String valueName, String definedName )\n+    private QualifiedName extractName(Class<?> procDefinition, Method m, String valueName, String definedName)\n     {\n         String procName = definedName.isBlank() ? valueName : definedName;\n-        if ( !procName.isBlank() )\n+        if (!procName.isBlank())\n         {\n-            String[] split = procName.split( \"\\\\.\" );\n-            if ( split.length == 1 )\n+            String[] split = procName.split(\"\\\\.\");\n+            if (split.length == 1)\n             {\n-                return new QualifiedName( new String[0], split[0] );\n-            }\n-            else\n+                return new QualifiedName(new String[0], split[0]);\n+            } else\n             {\n                 int lastElement = split.length - 1;\n-                return new QualifiedName( Arrays.copyOf( split, lastElement ), split[lastElement] );\n+                return new QualifiedName(Arrays.copyOf(split, lastElement), split[lastElement]);\n             }\n         }\n         Package pkg = procDefinition.getPackage();\n         // Package is null if class is in root package\n-        String[] namespace = pkg == null ? new String[0] : pkg.getName().split( \"\\\\.\" );\n+        String[] namespace = pkg == null ? new String[0] : pkg.getName().split(\"\\\\.\");\n         String name = m.getName();\n-        return new QualifiedName( namespace, name );\n+        return new QualifiedName(namespace, name);\n     }\n \n     ProcedureCompiler withoutNamingRestrictions()\n     {\n         return new ProcedureCompiler(\n-                inputSignatureDeterminer,\n-                outputSignatureCompiler,\n-                safeFieldInjections,\n-                allFieldInjections,\n-                log,\n-                typeCheckers,\n-                config,\n-                name ->\n-                {\n-                    // all ok\n-                } );\n+          inputSignatureDeterminer,\n+          outputSignatureCompiler,\n+          safeFieldInjections,\n+          allFieldInjections,\n+          log,\n+          typeCheckers,\n+          config,\n+          name ->\n+          {\n+              // all ok\n+          });\n     }\n \n-    private static void rejectEmptyNamespace( QualifiedName name ) throws ProcedureException\n+    private static void rejectEmptyNamespace(QualifiedName name) throws ProcedureException\n     {\n-        if ( name.namespace() == null || name.namespace().length == 0 )\n+        if (name.namespace() == null || name.namespace().length == 0)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                    \"It is not allowed to define functions in the root namespace please use a namespace, \" +\n-                    \"e.g. `@UserFunction(\\\"org.example.com.%s\\\")\", name.name() );\n+            throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+              \"It is not allowed to define functions in the root namespace please use a namespace, \" +\n+                \"e.g. `@UserFunction(\\\"org.example.com.%s\\\")\", name.name());\n         }\n     }\n }\n",
            "diff_size": 247
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2841",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2841/KernelData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2841/KernelData.java\nindex 66d0935d484..1bbfacb504d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2841/KernelData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2841/KernelData.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.internal;\n \n import java.io.File;\n@@ -31,98 +32,98 @@ import org.neo4j.kernel.configuration.Config;\n \n public abstract class KernelData\n {\n-    public static final Setting<String> forced_id = GraphDatabaseSettings.forced_kernel_id;\n-    private static final Map<String, KernelData> instances = new ConcurrentHashMap<>();\n+  public static final Setting<String> forced_id = GraphDatabaseSettings.forced_kernel_id;\n+  private static final Map<String, KernelData> instances = new ConcurrentHashMap<>();\n \n-    private static synchronized String newInstance( KernelData instance )\n+  private static synchronized String newInstance(KernelData instance)\n+  {\n+    String instanceId = instance.configuration.get(forced_id);\n+    if (instanceId == null || instanceId.equals(\"\"))\n     {\n-        String instanceId = instance.configuration.get( forced_id );\n-        if ( instanceId == null || instanceId.equals( \"\" ) )\n-        {\n-            for ( int i = 0; i < instances.size() + 1; i++ )\n-            {\n-                instanceId = Integer.toString( i );\n-                if ( !instances.containsKey( instanceId ) )\n-                {\n-                    break;\n-                }\n-            }\n-        }\n-        if ( instances.containsKey( instanceId ) )\n+      for (int i = 0; i < instances.size() + 1; i++)\n+      {\n+        instanceId = Integer.toString(i);\n+        if (!instances.containsKey(instanceId))\n         {\n-            throw new IllegalStateException(\n-                    \"There is already a kernel started with \" + forced_id.name() + \"='\" + instanceId + \"'.\" );\n+          break;\n         }\n-        instances.put( instanceId, instance );\n-        return instanceId;\n+      }\n     }\n-\n-    private static synchronized void removeInstance( String instanceId )\n+    if (instances.containsKey(instanceId))\n     {\n-        if ( instances.remove( instanceId ) == null )\n-        {\n-            throw new IllegalArgumentException( \"No kernel found with instance id \" + instanceId );\n-        }\n+      throw new IllegalStateException(\n+          \"There is already a kernel started with \" + forced_id.name() + \"='\" + instanceId + \"'.\");\n     }\n+    instances.put(instanceId, instance);\n+    return instanceId;\n+  }\n \n-    private final String instanceId;\n-    private final PageCache pageCache;\n-    private final FileSystemAbstraction fs;\n-    private final File storeDir;\n-    private final Config configuration;\n-\n-    protected KernelData( FileSystemAbstraction fs, PageCache pageCache, File storeDir, Config configuration )\n-    {\n-        this.pageCache = pageCache;\n-        this.fs = fs;\n-        this.storeDir = storeDir;\n-        this.configuration = configuration;\n-        this.instanceId = newInstance( this );\n-    }\n-\n-    public final String instanceId()\n-    {\n-        return instanceId;\n-    }\n-\n-    @Override\n-    public final int hashCode()\n-    {\n-        return instanceId.hashCode();\n-    }\n-\n-    @Override\n-    public final boolean equals( Object obj )\n-    {\n-        return obj instanceof KernelData && instanceId.equals( ((KernelData) obj).instanceId );\n-    }\n-\n-    public abstract Version version();\n-\n-    public File getStoreDir()\n-    {\n-        return storeDir;\n-    }\n-\n-    public Config getConfig()\n-    {\n-        return configuration;\n-    }\n-\n-    public PageCache getPageCache()\n-    {\n-        return pageCache;\n-    }\n-\n-    public FileSystemAbstraction getFilesystemAbstraction()\n-    {\n-        return fs;\n-    }\n-\n-    public abstract GraphDatabaseAPI graphDatabase();\n-\n-    public void shutdown()\n+  private static synchronized void removeInstance(String instanceId)\n+  {\n+    if (instances.remove(instanceId) == null)\n     {\n-        removeInstance( instanceId );\n+      throw new IllegalArgumentException(\"No kernel found with instance id \" + instanceId);\n     }\n+  }\n+\n+  private final String instanceId;\n+  private final PageCache pageCache;\n+  private final FileSystemAbstraction fs;\n+  private final File storeDir;\n+  private final Config configuration;\n+\n+  protected KernelData(FileSystemAbstraction fs, PageCache pageCache, File storeDir, Config configuration)\n+  {\n+    this.pageCache = pageCache;\n+    this.fs = fs;\n+    this.storeDir = storeDir;\n+    this.configuration = configuration;\n+    this.instanceId = newInstance(this);\n+  }\n+\n+  public final String instanceId()\n+  {\n+    return instanceId;\n+  }\n+\n+  @Override\n+  public final int hashCode()\n+  {\n+    return instanceId.hashCode();\n+  }\n+\n+  @Override\n+  public final boolean equals(Object obj)\n+  {\n+    return obj instanceof KernelData && instanceId.equals(((KernelData) obj).instanceId);\n+  }\n+\n+  public abstract Version version();\n+\n+  public File getStoreDir()\n+  {\n+    return storeDir;\n+  }\n+\n+  public Config getConfig()\n+  {\n+    return configuration;\n+  }\n+\n+  public PageCache getPageCache()\n+  {\n+    return pageCache;\n+  }\n+\n+  public FileSystemAbstraction getFilesystemAbstraction()\n+  {\n+    return fs;\n+  }\n+\n+  public abstract GraphDatabaseAPI graphDatabase();\n+\n+  public void shutdown()\n+  {\n+    removeInstance(instanceId);\n+  }\n }\n",
            "diff_size": 153
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2841/KernelData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2841/KernelData.java\nindex 66d0935d484..62494034e40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2841/KernelData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2841/KernelData.java\n@@ -32,7 +32,7 @@ import org.neo4j.kernel.configuration.Config;\n public abstract class KernelData\n {\n     public static final Setting<String> forced_id = GraphDatabaseSettings.forced_kernel_id;\n-    private static final Map<String, KernelData> instances = new ConcurrentHashMap<>();\n+    private static final Map<String,KernelData> instances = new ConcurrentHashMap<>();\n \n     private static synchronized String newInstance( KernelData instance )\n     {\n@@ -50,8 +50,7 @@ public abstract class KernelData\n         }\n         if ( instances.containsKey( instanceId ) )\n         {\n-            throw new IllegalStateException(\n-                    \"There is already a kernel started with \" + forced_id.name() + \"='\" + instanceId + \"'.\" );\n+            throw new IllegalStateException( \"There is already a kernel started with \" + forced_id.name() + \"='\" + instanceId + \"'.\" );\n         }\n         instances.put( instanceId, instance );\n         return instanceId;\n@@ -125,4 +124,4 @@ public abstract class KernelData\n     {\n         removeInstance( instanceId );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
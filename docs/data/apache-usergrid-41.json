{
    "project_name": "apache-usergrid",
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * Parser for reading and writing secondary index composites\n *\n * @author tnine\n */\npublic class SecondaryIndexSliceParser implements SliceParser {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "42",
                    "severity": "warning",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "46",
                    "severity": "warning",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/41/SecondaryIndexSliceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/41/SecondaryIndexSliceParser.java\nindex ea093e612d4..f6f1414fb69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/41/SecondaryIndexSliceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/41/SecondaryIndexSliceParser.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.query.ir.result;\n \n \n@@ -35,10 +36,10 @@ public class SecondaryIndexSliceParser implements SliceParser {\n      * @see org.apache.usergrid.persistence.query.ir.result.SliceParser#parse(java.nio.ByteBuffer)\n      */\n     @Override\n-    public ScanColumn parse( ByteBuffer buff ) {\n-        DynamicComposite composite = DynamicComposite.fromByteBuffer( buff.duplicate() );\n+    public ScanColumn parse(ByteBuffer buff) {\n+        DynamicComposite composite = DynamicComposite.fromByteBuffer(buff.duplicate());\n \n-        return new SecondaryIndexColumn( ( UUID ) composite.get( 2 ), composite.get( 1 ), buff );\n+        return new SecondaryIndexColumn((UUID) composite.get(2), composite.get(1), buff);\n     }\n \n \n@@ -47,13 +48,15 @@ public class SecondaryIndexSliceParser implements SliceParser {\n         private final Object value;\n \n \n-        public SecondaryIndexColumn( UUID uuid, Object value, ByteBuffer buff ) {\n-            super( uuid, buff );\n+        public SecondaryIndexColumn(UUID uuid, Object value, ByteBuffer buff) {\n+            super(uuid, buff);\n             this.value = value;\n         }\n \n \n-        /** Get the value from the node */\n+        /**\n+         * Get the value from the node\n+         */\n         public Object getValue() {\n             return this.value;\n         }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/41/SecondaryIndexSliceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/41/SecondaryIndexSliceParser.java\nindex ea093e612d4..328be7f51c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/41/SecondaryIndexSliceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/41/SecondaryIndexSliceParser.java\n@@ -29,8 +29,6 @@ import me.prettyprint.hector.api.beans.DynamicComposite;\n  * @author tnine\n  */\n public class SecondaryIndexSliceParser implements SliceParser {\n-\n-\n     /* (non-Javadoc)\n      * @see org.apache.usergrid.persistence.query.ir.result.SliceParser#parse(java.nio.ByteBuffer)\n      */\n@@ -58,4 +56,4 @@ public class SecondaryIndexSliceParser implements SliceParser {\n             return this.value;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/41/SecondaryIndexSliceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/41/SecondaryIndexSliceParser.java\nindex ea093e612d4..7155d034b3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/41/SecondaryIndexSliceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/41/SecondaryIndexSliceParser.java\n@@ -19,7 +19,6 @@ package org.apache.usergrid.persistence.query.ir.result;\n \n import java.nio.ByteBuffer;\n import java.util.UUID;\n-\n import me.prettyprint.hector.api.beans.DynamicComposite;\n \n \n@@ -28,16 +27,18 @@ import me.prettyprint.hector.api.beans.DynamicComposite;\n  *\n  * @author tnine\n  */\n+\n+\n public class SecondaryIndexSliceParser implements SliceParser {\n \n \n     /* (non-Javadoc)\n      * @see org.apache.usergrid.persistence.query.ir.result.SliceParser#parse(java.nio.ByteBuffer)\n      */\n+\n     @Override\n     public ScanColumn parse( ByteBuffer buff ) {\n         DynamicComposite composite = DynamicComposite.fromByteBuffer( buff.duplicate() );\n-\n         return new SecondaryIndexColumn( ( UUID ) composite.get( 2 ), composite.get( 1 ), buff );\n     }\n \n@@ -54,8 +55,10 @@ public class SecondaryIndexSliceParser implements SliceParser {\n \n \n         /** Get the value from the node */\n+\n+\n         public Object getValue() {\n             return this.value;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/41/SecondaryIndexSliceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/41/SecondaryIndexSliceParser.java\nindex ea093e612d4..4344195307d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/41/SecondaryIndexSliceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/41/SecondaryIndexSliceParser.java\n@@ -21,8 +21,6 @@ import java.nio.ByteBuffer;\n import java.util.UUID;\n \n import me.prettyprint.hector.api.beans.DynamicComposite;\n-\n-\n /**\n  * Parser for reading and writing secondary index composites\n  *\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
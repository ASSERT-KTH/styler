{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "611",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.exchangemanagement;\n\nimport gov.hhs.fha.nhinc.common.exchangemanagement.DeleteExchangeRequestMessageType;\nimport gov.hhs.fha.nhinc.common.exchangemanagement.GetExchangeInfoViewRequestMessageType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/611/ExchangeManagement.java\nindex 4b591be21d3..de4bd5bf95b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/611/ExchangeManagement.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.exchangemanagement;\n \n import gov.hhs.fha.nhinc.common.exchangemanagement.DeleteExchangeRequestMessageType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/611/ExchangeManagement.java\nindex 4b591be21d3..d730ce01b90 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/611/ExchangeManagement.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.exchangemanagement;\n \n import gov.hhs.fha.nhinc.common.exchangemanagement.DeleteExchangeRequestMessageType;\n@@ -48,105 +49,104 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author ttang\n  */\n public class ExchangeManagement implements EntityExchangeManagementPortType {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ExchangeManagement.class);\n-    private final ExchangeManager exchangeManager = ExchangeManager.getInstance();\n-    private static final String ACT_SUCCESSFUL = \"successful\";\n-    private static final String ACT_FAIL = \"fail\";\n-    private static final String ACT_BUSY = \"refresh locked\";\n-\n-    @Override\n-    public SimpleExchangeManagementResponseMessageType deleteExchange(DeleteExchangeRequestMessageType arg0) {\n-        SimpleExchangeManagementResponseMessageType response = newSimpleResponse();\n-        String exchangeName = arg0.getExchangeName();\n-\n-        if (StringUtils.isBlank(exchangeName)) {\n-            response.setMessage(\"exchange-name cannot be blank\");\n-            return response;\n-        }\n-\n-        if (exchangeManager.isRefreshLocked()) {\n-            response.setMessage(ACT_BUSY);\n-            return response;\n-        }\n-\n-        try {\n-            response.setStatus(exchangeManager.deleteExchange(exchangeName));\n-            response.setMessage(ACT_SUCCESSFUL);\n-        } catch (ExchangeManagerException e) {\n-            response.setMessage(ACT_FAIL);\n-            LOG.error(\"error during delete-exchange: {}\", e.getLocalizedMessage(), e);\n-        }\n-        return response;\n-    }\n-\n-    @Override\n-    public SimpleExchangeManagementResponseMessageType saveExchange(SaveExchangeRequestMessageType arg0) {\n-        SimpleExchangeManagementResponseMessageType response = newSimpleResponse();\n-\n-        if (exchangeManager.isRefreshLocked()) {\n-            response.setMessage(ACT_BUSY);\n-            return response;\n-        }\n+  private static final Logger LOG = LoggerFactory.getLogger(ExchangeManagement.class);\n+  private final ExchangeManager exchangeManager = ExchangeManager.getInstance();\n+  private static final String ACT_SUCCESSFUL = \"successful\";\n+  private static final String ACT_FAIL = \"fail\";\n+  private static final String ACT_BUSY = \"refresh locked\";\n \n-        try {\n-            response.setStatus(exchangeManager.saveExchange(arg0.getExchange()));\n-            response.setMessage(ACT_SUCCESSFUL);\n-        } catch (ExchangeManagerException e) {\n-            response.setMessage(ACT_FAIL);\n-            LOG.error(\"error during save-exchange: {}\", e.getLocalizedMessage(), e);\n-        }\n+  @Override\n+  public SimpleExchangeManagementResponseMessageType deleteExchange(DeleteExchangeRequestMessageType arg0) {\n+    SimpleExchangeManagementResponseMessageType response = newSimpleResponse();\n+    String exchangeName = arg0.getExchangeName();\n \n-        return response;\n+    if (StringUtils.isBlank(exchangeName)) {\n+      response.setMessage(\"exchange-name cannot be blank\");\n+      return response;\n     }\n \n-    @Override\n-    public RefreshExchangeManagerResponseMessageType refreshExchangeManager(\n-        RefreshExchangeManagerRequestMessageType arg0) {\n-        RefreshExchangeManagerResponseMessageType response = new RefreshExchangeManagerResponseMessageType();\n-\n-        if (exchangeManager.isRefreshLocked()) {\n-            LOG.info(\"exchange-manager is busy: {}\", ACT_BUSY);\n-        } else {\n-            response.getExchangeDownloadStatusList().addAll(ExchangeManagerUtil.forceExchangesRefresh());\n-        }\n-        return response;\n+    if (exchangeManager.isRefreshLocked()) {\n+      response.setMessage(ACT_BUSY);\n+      return response;\n     }\n \n-    @Override\n-    public GetExchangeInfoViewResponseMessageType getExchangeInfoView(GetExchangeInfoViewRequestMessageType arg0) {\n-        return null;\n-    }\n-\n-    @Override\n-    public ListEndpointsResponseMessageType listEndpoints(ListEndpointsRequestMessageType arg0) {\n-        return null;\n+    try {\n+      response.setStatus(exchangeManager.deleteExchange(exchangeName));\n+      response.setMessage(ACT_SUCCESSFUL);\n+    } catch (ExchangeManagerException e) {\n+      response.setMessage(ACT_FAIL);\n+      LOG.error(\"error during delete-exchange: {}\", e.getLocalizedMessage(), e);\n     }\n+    return response;\n+  }\n \n+  @Override\n+  public SimpleExchangeManagementResponseMessageType saveExchange(SaveExchangeRequestMessageType arg0) {\n+    SimpleExchangeManagementResponseMessageType response = newSimpleResponse();\n \n-    @Override\n-    public ListExchangesResponseMessageType listExchanges(ListExchangesRequestMessageType arg0) {\n-        return null;\n+    if (exchangeManager.isRefreshLocked()) {\n+      response.setMessage(ACT_BUSY);\n+      return response;\n     }\n \n-    @Override\n-    public ListOrganizationsResponseMessageType listOrganizations(ListOrganizationsRequestMessageType arg0) {\n-        return null;\n+    try {\n+      response.setStatus(exchangeManager.saveExchange(arg0.getExchange()));\n+      response.setMessage(ACT_SUCCESSFUL);\n+    } catch (ExchangeManagerException e) {\n+      response.setMessage(ACT_FAIL);\n+      LOG.error(\"error during save-exchange: {}\", e.getLocalizedMessage(), e);\n     }\n \n-    @Override\n-    public SimpleExchangeManagementResponseMessageType saveExchangeConfig(SaveExchangeConfigRequestMessageType arg0) {\n-        return null;\n-    }\n+    return response;\n+  }\n+\n+  @Override\n+  public RefreshExchangeManagerResponseMessageType refreshExchangeManager(\n+      RefreshExchangeManagerRequestMessageType arg0) {\n+    RefreshExchangeManagerResponseMessageType response = new RefreshExchangeManagerResponseMessageType();\n \n-    private static SimpleExchangeManagementResponseMessageType newSimpleResponse() {\n-        SimpleExchangeManagementResponseMessageType retMsg = new SimpleExchangeManagementResponseMessageType();\n-        retMsg.setStatus(false);\n-        return retMsg;\n+    if (exchangeManager.isRefreshLocked()) {\n+      LOG.info(\"exchange-manager is busy: {}\", ACT_BUSY);\n+    } else {\n+      response.getExchangeDownloadStatusList().addAll(ExchangeManagerUtil.forceExchangesRefresh());\n     }\n+    return response;\n+  }\n+\n+  @Override\n+  public GetExchangeInfoViewResponseMessageType getExchangeInfoView(GetExchangeInfoViewRequestMessageType arg0) {\n+    return null;\n+  }\n+\n+  @Override\n+  public ListEndpointsResponseMessageType listEndpoints(ListEndpointsRequestMessageType arg0) {\n+    return null;\n+  }\n+\n+\n+  @Override\n+  public ListExchangesResponseMessageType listExchanges(ListExchangesRequestMessageType arg0) {\n+    return null;\n+  }\n+\n+  @Override\n+  public ListOrganizationsResponseMessageType listOrganizations(ListOrganizationsRequestMessageType arg0) {\n+    return null;\n+  }\n+\n+  @Override\n+  public SimpleExchangeManagementResponseMessageType saveExchangeConfig(SaveExchangeConfigRequestMessageType arg0) {\n+    return null;\n+  }\n+\n+  private static SimpleExchangeManagementResponseMessageType newSimpleResponse() {\n+    SimpleExchangeManagementResponseMessageType retMsg = new SimpleExchangeManagementResponseMessageType();\n+    retMsg.setStatus(false);\n+    return retMsg;\n+  }\n \n }\n",
            "diff_size": 129
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/611/ExchangeManagement.java\nindex 4b591be21d3..7f5c408aa52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/611/ExchangeManagement.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.exchangemanagement;\n \n import gov.hhs.fha.nhinc.common.exchangemanagement.DeleteExchangeRequestMessageType;\n@@ -63,15 +64,16 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n     public SimpleExchangeManagementResponseMessageType deleteExchange(DeleteExchangeRequestMessageType arg0) {\n         SimpleExchangeManagementResponseMessageType response = newSimpleResponse();\n         String exchangeName = arg0.getExchangeName();\n-\n-        if (StringUtils.isBlank(exchangeName)) {\n+if (StringUtils.isBlank(exchangeName)) {\n             response.setMessage(\"exchange-name cannot be blank\");\n-            return response;\n+\n+return response;\n         }\n \n         if (exchangeManager.isRefreshLocked()) {\n             response.setMessage(ACT_BUSY);\n-            return response;\n+\n+return response;\n         }\n \n         try {\n@@ -80,17 +82,18 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n         } catch (ExchangeManagerException e) {\n             response.setMessage(ACT_FAIL);\n             LOG.error(\"error during delete-exchange: {}\", e.getLocalizedMessage(), e);\n-        }\n+\n+    }\n         return response;\n     }\n \n     @Override\n     public SimpleExchangeManagementResponseMessageType saveExchange(SaveExchangeRequestMessageType arg0) {\n         SimpleExchangeManagementResponseMessageType response = newSimpleResponse();\n-\n-        if (exchangeManager.isRefreshLocked()) {\n+if (exchangeManager.isRefreshLocked()) {\n             response.setMessage(ACT_BUSY);\n-            return response;\n+\n+return response;\n         }\n \n         try {\n@@ -105,15 +108,14 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n     }\n \n     @Override\n-    public RefreshExchangeManagerResponseMessageType refreshExchangeManager(\n-        RefreshExchangeManagerRequestMessageType arg0) {\n-        RefreshExchangeManagerResponseMessageType response = new RefreshExchangeManagerResponseMessageType();\n-\n-        if (exchangeManager.isRefreshLocked()) {\n+    public RefreshExchangeManagerResponseMessageType refreshExchangeManager(RefreshExchangeManagerRequestMessageType arg0) {\n+    RefreshExchangeManagerResponseMessageType response = new RefreshExchangeManagerResponseMessageType();\n+if (exchangeManager.isRefreshLocked()) {\n             LOG.info(\"exchange-manager is busy: {}\", ACT_BUSY);\n         } else {\n             response.getExchangeDownloadStatusList().addAll(ExchangeManagerUtil.forceExchangesRefresh());\n-        }\n+\n+    }\n         return response;\n     }\n \n@@ -127,8 +129,7 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n         return null;\n     }\n \n-\n-    @Override\n+@Override\n     public ListExchangesResponseMessageType listExchanges(ListExchangesRequestMessageType arg0) {\n         return null;\n     }\n@@ -146,7 +147,8 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n     private static SimpleExchangeManagementResponseMessageType newSimpleResponse() {\n         SimpleExchangeManagementResponseMessageType retMsg = new SimpleExchangeManagementResponseMessageType();\n         retMsg.setStatus(false);\n-        return retMsg;\n+\n+return retMsg;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "111",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/611/ExchangeManagement.java\nindex 4b591be21d3..34beb775a25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/611/ExchangeManagement.java\n@@ -51,6 +51,8 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author ttang\n  */\n+\n+\n public class ExchangeManagement implements EntityExchangeManagementPortType {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ExchangeManagement.class);\n@@ -59,21 +61,19 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n     private static final String ACT_FAIL = \"fail\";\n     private static final String ACT_BUSY = \"refresh locked\";\n \n+\n     @Override\n     public SimpleExchangeManagementResponseMessageType deleteExchange(DeleteExchangeRequestMessageType arg0) {\n         SimpleExchangeManagementResponseMessageType response = newSimpleResponse();\n         String exchangeName = arg0.getExchangeName();\n-\n         if (StringUtils.isBlank(exchangeName)) {\n             response.setMessage(\"exchange-name cannot be blank\");\n             return response;\n         }\n-\n         if (exchangeManager.isRefreshLocked()) {\n             response.setMessage(ACT_BUSY);\n             return response;\n         }\n-\n         try {\n             response.setStatus(exchangeManager.deleteExchange(exchangeName));\n             response.setMessage(ACT_SUCCESSFUL);\n@@ -84,15 +84,14 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n         return response;\n     }\n \n+\n     @Override\n     public SimpleExchangeManagementResponseMessageType saveExchange(SaveExchangeRequestMessageType arg0) {\n         SimpleExchangeManagementResponseMessageType response = newSimpleResponse();\n-\n         if (exchangeManager.isRefreshLocked()) {\n             response.setMessage(ACT_BUSY);\n             return response;\n         }\n-\n         try {\n             response.setStatus(exchangeManager.saveExchange(arg0.getExchange()));\n             response.setMessage(ACT_SUCCESSFUL);\n@@ -100,28 +99,31 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n             response.setMessage(ACT_FAIL);\n             LOG.error(\"error during save-exchange: {}\", e.getLocalizedMessage(), e);\n         }\n-\n         return response;\n     }\n \n+\n     @Override\n-    public RefreshExchangeManagerResponseMessageType refreshExchangeManager(\n-        RefreshExchangeManagerRequestMessageType arg0) {\n+    public RefreshExchangeManagerResponseMessageType refreshExchangeManager(RefreshExchangeManagerRequestMessageType arg0) {\n         RefreshExchangeManagerResponseMessageType response = new RefreshExchangeManagerResponseMessageType();\n-\n-        if (exchangeManager.isRefreshLocked()) {\n+        if(exchangeManager.isRefreshLocked()) {\n             LOG.info(\"exchange-manager is busy: {}\", ACT_BUSY);\n-        } else {\n+        }\n+\n+\n+else {\n             response.getExchangeDownloadStatusList().addAll(ExchangeManagerUtil.forceExchangesRefresh());\n         }\n         return response;\n     }\n \n+\n     @Override\n     public GetExchangeInfoViewResponseMessageType getExchangeInfoView(GetExchangeInfoViewRequestMessageType arg0) {\n         return null;\n     }\n \n+\n     @Override\n     public ListEndpointsResponseMessageType listEndpoints(ListEndpointsRequestMessageType arg0) {\n         return null;\n@@ -133,11 +135,13 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n         return null;\n     }\n \n+\n     @Override\n     public ListOrganizationsResponseMessageType listOrganizations(ListOrganizationsRequestMessageType arg0) {\n         return null;\n     }\n \n+\n     @Override\n     public SimpleExchangeManagementResponseMessageType saveExchangeConfig(SaveExchangeConfigRequestMessageType arg0) {\n         return null;\n@@ -149,4 +153,4 @@ public class ExchangeManagement implements EntityExchangeManagementPortType {\n         return retMsg;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/611/ExchangeManagement.java\nindex 4b591be21d3..de4bd5bf95b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/611/ExchangeManagement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/611/ExchangeManagement.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.exchangemanagement;\n \n import gov.hhs.fha.nhinc.common.exchangemanagement.DeleteExchangeRequestMessageType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
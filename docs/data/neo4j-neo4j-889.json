{
    "project_name": "neo4j-neo4j",
    "error_id": "889",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/889/IndexDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/889/IndexDescriptor.java\nindex 4b498825856..b3d8771c114 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/889/IndexDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/889/IndexDescriptor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.schema;\n \n import java.util.ArrayList;\n@@ -47,26 +48,26 @@ public final class IndexDescriptor implements IndexRef<IndexDescriptor>, SchemaR\n     private final IndexType indexType;\n     private final IndexConfig indexConfig;\n \n-    IndexDescriptor( long id, IndexPrototype prototype )\n+    IndexDescriptor(long id, IndexPrototype prototype)\n     {\n-        this( id, SchemaRule.sanitiseName( prototype.getName() ), prototype.schema(), prototype.isUnique(),\n-                prototype.getIndexProvider(), null,\n-                IndexCapability.NO_CAPABILITY, prototype.getIndexType(), prototype.getIndexConfig() );\n+        this(id, SchemaRule.sanitiseName(prototype.getName()), prototype.schema(), prototype.isUnique(),\n+          prototype.getIndexProvider(), null,\n+          IndexCapability.NO_CAPABILITY, prototype.getIndexType(), prototype.getIndexConfig());\n     }\n \n-    private IndexDescriptor( long id, String name, SchemaDescriptor schema, boolean isUnique, IndexProviderDescriptor indexProvider, Long owningConstraintId,\n-            IndexCapability capability, IndexType indexType, IndexConfig indexConfig )\n+    private IndexDescriptor(long id, String name, SchemaDescriptor schema, boolean isUnique, IndexProviderDescriptor indexProvider, Long owningConstraintId,\n+                            IndexCapability capability, IndexType indexType, IndexConfig indexConfig)\n     {\n-        if ( id < 0 )\n+        if (id < 0)\n         {\n-            throw new IllegalArgumentException( \"The id of an index must not be negative, but it was attempted to assign \" + id + \".\" );\n+            throw new IllegalArgumentException(\"The id of an index must not be negative, but it was attempted to assign \" + id + \".\");\n         }\n-        name = SchemaRule.sanitiseName( name );\n-        requireNonNull( schema, \"The schema of an index cannot be null.\" );\n-        requireNonNull( indexProvider, \"The index provider cannot be null.\" );\n+        name = SchemaRule.sanitiseName(name);\n+        requireNonNull(schema, \"The schema of an index cannot be null.\");\n+        requireNonNull(indexProvider, \"The index provider cannot be null.\");\n         // The 'owningConstraintId' is allowed to be null, which is the case when an index descriptor is initially created.\n-        requireNonNull( capability, \"The index capability cannot be null.\" );\n-        requireNonNull( indexConfig, \"The index configuration cannot be null.\" );\n+        requireNonNull(capability, \"The index capability cannot be null.\");\n+        requireNonNull(indexConfig, \"The index configuration cannot be null.\");\n \n         this.id = id;\n         this.name = name;\n@@ -123,14 +124,14 @@ public final class IndexDescriptor implements IndexRef<IndexDescriptor>, SchemaR\n     }\n \n     @Override\n-    public IndexDescriptor withName( String name )\n+    public IndexDescriptor withName(String name)\n     {\n-        if ( name == null )\n+        if (name == null)\n         {\n             return this;\n         }\n-        name = SchemaRule.sanitiseName( name );\n-        return new IndexDescriptor( id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig );\n+        name = SchemaRule.sanitiseName(name);\n+        return new IndexDescriptor(id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig);\n     }\n \n     /**\n@@ -144,13 +145,14 @@ public final class IndexDescriptor implements IndexRef<IndexDescriptor>, SchemaR\n \n     /**\n      * Produce a new index descriptor that is the same as this index descriptor in every way, except it has the given index config.\n+     *\n      * @param indexConfig The index config of the new index descriptor.\n      * @return A new index descriptor with the given index config.\n      */\n     @Override\n-    public IndexDescriptor withIndexConfig( IndexConfig indexConfig )\n+    public IndexDescriptor withIndexConfig(IndexConfig indexConfig)\n     {\n-        return new IndexDescriptor( id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig );\n+        return new IndexDescriptor(id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig);\n     }\n \n     /**\n@@ -158,13 +160,13 @@ public final class IndexDescriptor implements IndexRef<IndexDescriptor>, SchemaR\n      */\n     public OptionalLong getOwningConstraintId()\n     {\n-        return owningConstraintId == null ? OptionalLong.empty() : OptionalLong.of( owningConstraintId );\n+        return owningConstraintId == null ? OptionalLong.empty() : OptionalLong.of(owningConstraintId);\n     }\n \n     @Override\n-    public String userDescription( TokenNameLookup tokenNameLookup )\n+    public String userDescription(TokenNameLookup tokenNameLookup)\n     {\n-        return SchemaUserDescription.forIndex( tokenNameLookup, id, name, isUnique, indexType, schema(), getIndexProvider() );\n+        return SchemaUserDescription.forIndex(tokenNameLookup, id, name, isUnique, indexType, schema(), getIndexProvider());\n     }\n \n     @Override\n@@ -188,15 +190,15 @@ public final class IndexDescriptor implements IndexRef<IndexDescriptor>, SchemaR\n     }\n \n     @Override\n-    public IndexDescriptor withIndexProvider( IndexProviderDescriptor indexProvider )\n+    public IndexDescriptor withIndexProvider(IndexProviderDescriptor indexProvider)\n     {\n-        return new IndexDescriptor( id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig );\n+        return new IndexDescriptor(id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig);\n     }\n \n     @Override\n-    public IndexDescriptor withSchemaDescriptor( SchemaDescriptor schema )\n+    public IndexDescriptor withSchemaDescriptor(SchemaDescriptor schema)\n     {\n-        return new IndexDescriptor( id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig );\n+        return new IndexDescriptor(id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig);\n     }\n \n     /**\n@@ -205,19 +207,19 @@ public final class IndexDescriptor implements IndexRef<IndexDescriptor>, SchemaR\n      * @param owningConstraintId The id of the constraint that owns the index represented by this index descriptor.\n      * @return A new index descriptor with the given owning constraint id.\n      */\n-    public IndexDescriptor withOwningConstraintId( long owningConstraintId )\n+    public IndexDescriptor withOwningConstraintId(long owningConstraintId)\n     {\n-        if ( !isUnique() )\n+        if (!isUnique())\n         {\n             throw new IllegalStateException(\n-                    \"Cannot assign an owning constraint id (in this case \" + owningConstraintId + \") to a non-unique index: \" + this + \".\" );\n+              \"Cannot assign an owning constraint id (in this case \" + owningConstraintId + \") to a non-unique index: \" + this + \".\");\n         }\n-        if ( owningConstraintId < 0 )\n+        if (owningConstraintId < 0)\n         {\n             throw new IllegalArgumentException(\n-                    \"The owning constraint id of an index must not be negative, but it was attempted to assign \" + owningConstraintId + \".\" );\n+              \"The owning constraint id of an index must not be negative, but it was attempted to assign \" + owningConstraintId + \".\");\n         }\n-        return new IndexDescriptor( id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig );\n+        return new IndexDescriptor(id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig);\n     }\n \n     /**\n@@ -226,52 +228,52 @@ public final class IndexDescriptor implements IndexRef<IndexDescriptor>, SchemaR\n      * @param capability The capabilities of the new index descriptor.\n      * @return A new index descriptor with the given capabilities.\n      */\n-    public IndexDescriptor withIndexCapability( IndexCapability capability )\n+    public IndexDescriptor withIndexCapability(IndexCapability capability)\n     {\n-        return new IndexDescriptor( id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig );\n+        return new IndexDescriptor(id, name, schema, isUnique, indexProvider, owningConstraintId, capability, indexType, indexConfig);\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n \n         IndexDescriptor that = (IndexDescriptor) o;\n \n-        if ( id != that.id )\n+        if (id != that.id)\n         {\n             return false;\n         }\n-        if ( isUnique != that.isUnique )\n+        if (isUnique != that.isUnique)\n         {\n             return false;\n         }\n-        if ( indexType != that.indexType )\n+        if (indexType != that.indexType)\n         {\n             return false;\n         }\n-        if ( !name.equals( that.name ) )\n+        if (!name.equals(that.name))\n         {\n             return false;\n         }\n-        if ( !schema.equals( that.schema ) )\n+        if (!schema.equals(that.schema))\n         {\n             return false;\n         }\n-        return indexProvider.equals( that.indexProvider );\n+        return indexProvider.equals(that.indexProvider);\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Long.hashCode( id );\n+        return Long.hashCode(id);\n     }\n \n     /**\n@@ -280,11 +282,11 @@ public final class IndexDescriptor implements IndexRef<IndexDescriptor>, SchemaR\n      * @param indexes Indexes to sort\n      * @return sorted indexes\n      */\n-    public static Iterator<IndexDescriptor> sortByType( Iterator<IndexDescriptor> indexes )\n+    public static Iterator<IndexDescriptor> sortByType(Iterator<IndexDescriptor> indexes)\n     {\n         List<IndexDescriptor> nonUnique = new ArrayList<>();\n         List<IndexDescriptor> unique = new ArrayList<>();\n-        indexes.forEachRemaining( index -> (index.isUnique() ? unique : nonUnique).add( index ) );\n-        return Stream.concat( nonUnique.stream(), unique.stream() ).iterator();\n+        indexes.forEachRemaining(index -> (index.isUnique() ? unique : nonUnique).add(index));\n+        return Stream.concat(nonUnique.stream(), unique.stream()).iterator();\n     }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
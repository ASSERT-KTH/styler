{
    "project_name": "eclipse-milo",
    "error_id": "237",
    "information": {
        "errors": [
            {
                "line": "37",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 208).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                                    UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                                    double minimumSamplingInterval, boolean historizing) {\n        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n    }\n\n    @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "column": "209",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "37",
                    "column": "210",
                    "severity": "error",
                    "message": "'}' at column 210 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "37",
                    "column": "210",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler/237/TwoStateDiscreteTypeNode.java\nindex a0852801830..7b014874806 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler/237/TwoStateDiscreteTypeNode.java\n@@ -34,10 +34,7 @@ public class TwoStateDiscreteTypeNode extends DiscreteItemTypeNode implements Tw\n                                     UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                                     UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                                     double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n-    }\n-\n-    @Override\n+        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing) ;} @Override\n     public PropertyTypeNode getFalseStateNode() {\n         Optional<VariableNode> propertyNode = getPropertyNode(TwoStateDiscreteType.FALSE_STATE);\n         return (PropertyTypeNode) propertyNode.orElse(null);\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/237/TwoStateDiscreteTypeNode.java\nindex a0852801830..d44bc007b5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/237/TwoStateDiscreteTypeNode.java\n@@ -34,7 +34,8 @@ public class TwoStateDiscreteTypeNode extends DiscreteItemTypeNode implements Tw\n                                     UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                                     UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                                     double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType,\n+            valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/237/TwoStateDiscreteTypeNode.java\nindex a0852801830..3e00d9562f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/237/TwoStateDiscreteTypeNode.java\n@@ -70,4 +70,4 @@ public class TwoStateDiscreteTypeNode extends DiscreteItemTypeNode implements Tw\n     public void setTrueState(LocalizedText value) {\n         setProperty(TwoStateDiscreteType.TRUE_STATE, value);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/237/TwoStateDiscreteTypeNode.java\nindex a0852801830..05976a9e11e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/237/TwoStateDiscreteTypeNode.java\n@@ -11,7 +11,6 @@\n package org.eclipse.milo.opcua.sdk.server.model.nodes.variables;\n \n import java.util.Optional;\n-\n import org.eclipse.milo.opcua.sdk.server.api.nodes.VariableNode;\n import org.eclipse.milo.opcua.sdk.server.model.types.variables.TwoStateDiscreteType;\n import org.eclipse.milo.opcua.sdk.server.nodes.UaNodeContext;\n@@ -23,18 +22,46 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n \n public class TwoStateDiscreteTypeNode extends DiscreteItemTypeNode implements TwoStateDiscreteType {\n-    public TwoStateDiscreteTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                                    LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                                    UInteger userWriteMask) {\n+    public TwoStateDiscreteTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask, UInteger userWriteMask) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask);\n     }\n \n-    public TwoStateDiscreteTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                                    LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                                    UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n-                                    UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n-                                    double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+    public TwoStateDiscreteTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask,\n+        UInteger userWriteMask,\n+        DataValue value,\n+        NodeId dataType,\n+        Integer valueRank,\n+        UInteger[] arrayDimensions,\n+        UByte accessLevel,\n+        UByte userAccessLevel,\n+        double minimumSamplingInterval, boolean historizing) {\n+        super(context,\n+            nodeId,\n+            browseName,\n+            displayName,\n+            description,\n+            writeMask,\n+            userWriteMask,\n+            value,\n+            dataType,\n+            valueRank,\n+            arrayDimensions,\n+            accessLevel,\n+            userAccessLevel,\n+            minimumSamplingInterval,\n+            historizing);\n     }\n \n     @Override\n@@ -70,4 +97,5 @@ public class TwoStateDiscreteTypeNode extends DiscreteItemTypeNode implements Tw\n     public void setTrueState(LocalizedText value) {\n         setProperty(TwoStateDiscreteType.TRUE_STATE, value);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "column": "209",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "37",
                    "column": "210",
                    "severity": "error",
                    "message": "'}' at column 210 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "37",
                    "column": "210",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_random/237/TwoStateDiscreteTypeNode.java\nindex a0852801830..7b014874806 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_random/237/TwoStateDiscreteTypeNode.java\n@@ -34,10 +34,7 @@ public class TwoStateDiscreteTypeNode extends DiscreteItemTypeNode implements Tw\n                                     UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                                     UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                                     double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n-    }\n-\n-    @Override\n+        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing) ;} @Override\n     public PropertyTypeNode getFalseStateNode() {\n         Optional<VariableNode> propertyNode = getPropertyNode(TwoStateDiscreteType.FALSE_STATE);\n         return (PropertyTypeNode) propertyNode.orElse(null);\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 292).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "column": "90",
                    "severity": "error",
                    "message": "'{' at column 90 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "36",
                    "column": "98",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 32, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 32, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/237/TwoStateDiscreteTypeNode.java\nindex a0852801830..2958e648384 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/237/TwoStateDiscreteTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/237/TwoStateDiscreteTypeNode.java\n@@ -33,11 +33,10 @@ public class TwoStateDiscreteTypeNode extends DiscreteItemTypeNode implements Tw\n                                     LocalizedText displayName, LocalizedText description, UInteger writeMask,\n                                     UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                                     UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n-                                    double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n-    }\n+                                    double minimumSamplingInterval, boolean historizing) { super (context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+                                }\n \n-    @Override\n+                                @Override\n     public PropertyTypeNode getFalseStateNode() {\n         Optional<VariableNode> propertyNode = getPropertyNode(TwoStateDiscreteType.FALSE_STATE);\n         return (PropertyTypeNode) propertyNode.orElse(null);\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
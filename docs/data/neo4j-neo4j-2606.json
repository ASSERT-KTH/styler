{
    "project_name": "neo4j-neo4j",
    "error_id": "2606",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2606/RelationshipChangesForNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2606/RelationshipChangesForNode.java\nindex 837a36caa57..87005c40e9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2606/RelationshipChangesForNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2606/RelationshipChangesForNode.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.state;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -49,7 +50,7 @@ import static org.neo4j.internal.helpers.collection.Iterators.iterator;\n  */\n public class RelationshipChangesForNode\n {\n-    private static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance( RelationshipChangesForNode.class );\n+    private static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance(RelationshipChangesForNode.class);\n \n     /**\n      * Allows this data structure to work both for tracking removals and additions.\n@@ -57,23 +58,23 @@ public class RelationshipChangesForNode\n     public enum DiffStrategy\n     {\n         REMOVE\n-                {\n-                    @Override\n-                    int augmentDegree( int degree, int diff )\n-                    {\n-                        return degree - diff;\n-                    }\n-                },\n+          {\n+              @Override\n+              int augmentDegree(int degree, int diff)\n+              {\n+                  return degree - diff;\n+              }\n+          },\n         ADD\n-                {\n-                    @Override\n-                    int augmentDegree( int degree, int diff )\n-                    {\n-                        return degree + diff;\n-                    }\n-                };\n+          {\n+              @Override\n+              int augmentDegree(int degree, int diff)\n+              {\n+                  return degree + diff;\n+              }\n+          };\n \n-        abstract int augmentDegree( int degree, int diff );\n+        abstract int augmentDegree(int degree, int diff);\n \n     }\n \n@@ -84,62 +85,62 @@ public class RelationshipChangesForNode\n     private MutableIntObjectMap<MutableLongSet> incoming;\n     private MutableIntObjectMap<MutableLongSet> loops;\n \n-    static RelationshipChangesForNode createRelationshipChangesForNode( DiffStrategy diffStrategy, MemoryTracker memoryTracker )\n+    static RelationshipChangesForNode createRelationshipChangesForNode(DiffStrategy diffStrategy, MemoryTracker memoryTracker)\n     {\n-        memoryTracker.allocateHeap( SHALLOW_SIZE );\n-        return new RelationshipChangesForNode( diffStrategy, memoryTracker );\n+        memoryTracker.allocateHeap(SHALLOW_SIZE);\n+        return new RelationshipChangesForNode(diffStrategy, memoryTracker);\n     }\n \n-    private RelationshipChangesForNode( DiffStrategy diffStrategy, MemoryTracker memoryTracker )\n+    private RelationshipChangesForNode(DiffStrategy diffStrategy, MemoryTracker memoryTracker)\n     {\n         this.diffStrategy = diffStrategy;\n         this.memoryTracker = memoryTracker;\n     }\n \n-    public void addRelationship( long relId, int typeId, RelationshipDirection direction )\n+    public void addRelationship(long relId, int typeId, RelationshipDirection direction)\n     {\n-        final MutableIntObjectMap<MutableLongSet> relTypeToRelsMap = getTypeToRelMapForDirection( direction );\n-        final MutableLongSet rels = relTypeToRelsMap.getIfAbsentPut( typeId, () -> HeapTrackingCollections.newLongSet( memoryTracker ) );\n+        final MutableIntObjectMap<MutableLongSet> relTypeToRelsMap = getTypeToRelMapForDirection(direction);\n+        final MutableLongSet rels = relTypeToRelsMap.getIfAbsentPut(typeId, () -> HeapTrackingCollections.newLongSet(memoryTracker));\n \n-        rels.add( relId );\n+        rels.add(relId);\n     }\n \n-    public boolean removeRelationship( long relId, int typeId, RelationshipDirection direction )\n+    public boolean removeRelationship(long relId, int typeId, RelationshipDirection direction)\n     {\n-        final MutableIntObjectMap<MutableLongSet> relTypeToRelsMap = getTypeToRelMapForDirection( direction );\n-        final MutableLongSet rels = relTypeToRelsMap.get( typeId );\n-        if ( rels != null && rels.remove( relId ) )\n+        final MutableIntObjectMap<MutableLongSet> relTypeToRelsMap = getTypeToRelMapForDirection(direction);\n+        final MutableLongSet rels = relTypeToRelsMap.get(typeId);\n+        if (rels != null && rels.remove(relId))\n         {\n-            if ( rels.isEmpty() )\n+            if (rels.isEmpty())\n             {\n-                relTypeToRelsMap.remove( typeId );\n+                relTypeToRelsMap.remove(typeId);\n             }\n             return true;\n         }\n         return false;\n     }\n \n-    public int augmentDegree( RelationshipDirection direction, int degree, int typeId )\n+    public int augmentDegree(RelationshipDirection direction, int degree, int typeId)\n     {\n-        switch ( direction )\n+        switch (direction)\n         {\n-        case INCOMING:\n-            return diffStrategy.augmentDegree( degree, degreeDiff( typeId, incoming ) );\n-        case OUTGOING:\n-            return diffStrategy.augmentDegree( degree, degreeDiff( typeId, outgoing ) );\n-        case LOOP:\n-            return diffStrategy.augmentDegree( degree, degreeDiff( typeId, loops ) );\n-        default:\n-            throw new IllegalArgumentException( \"Unknown direction: \" + direction );\n+            case INCOMING:\n+                return diffStrategy.augmentDegree(degree, degreeDiff(typeId, incoming));\n+            case OUTGOING:\n+                return diffStrategy.augmentDegree(degree, degreeDiff(typeId, outgoing));\n+            case LOOP:\n+                return diffStrategy.augmentDegree(degree, degreeDiff(typeId, loops));\n+            default:\n+                throw new IllegalArgumentException(\"Unknown direction: \" + direction);\n         }\n     }\n \n-    private int degreeDiff( int type, MutableIntObjectMap<MutableLongSet> map )\n+    private int degreeDiff(int type, MutableIntObjectMap<MutableLongSet> map)\n     {\n-        if ( map != null )\n+        if (map != null)\n         {\n-            MutableLongSet set = map.get( type );\n-            if ( set != null )\n+            MutableLongSet set = map.get(type);\n+            if (set != null)\n             {\n                 return set.size();\n             }\n@@ -149,11 +150,11 @@ public class RelationshipChangesForNode\n \n     public void clear()\n     {\n-        if ( outgoing != null )\n+        if (outgoing != null)\n         {\n             outgoing.clear();\n         }\n-        if ( incoming != null )\n+        if (incoming != null)\n         {\n             incoming.clear();\n         }\n@@ -161,35 +162,35 @@ public class RelationshipChangesForNode\n \n     private MutableIntObjectMap<MutableLongSet> outgoing()\n     {\n-        if ( outgoing == null )\n+        if (outgoing == null)\n         {\n-            outgoing = HeapTrackingCollections.newIntObjectHashMap( memoryTracker );\n+            outgoing = HeapTrackingCollections.newIntObjectHashMap(memoryTracker);\n         }\n         return outgoing;\n     }\n \n     private MutableIntObjectMap<MutableLongSet> incoming()\n     {\n-        if ( incoming == null )\n+        if (incoming == null)\n         {\n-            incoming = HeapTrackingCollections.newIntObjectHashMap( memoryTracker );\n+            incoming = HeapTrackingCollections.newIntObjectHashMap(memoryTracker);\n         }\n         return incoming;\n     }\n \n     private MutableIntObjectMap<MutableLongSet> loops()\n     {\n-        if ( loops == null )\n+        if (loops == null)\n         {\n-            loops = HeapTrackingCollections.newIntObjectHashMap( memoryTracker );\n+            loops = HeapTrackingCollections.newIntObjectHashMap(memoryTracker);\n         }\n         return loops;\n     }\n \n-    private MutableIntObjectMap<MutableLongSet> getTypeToRelMapForDirection( RelationshipDirection direction )\n+    private MutableIntObjectMap<MutableLongSet> getTypeToRelMapForDirection(RelationshipDirection direction)\n     {\n         final MutableIntObjectMap<MutableLongSet> relTypeToRelsMap;\n-        switch ( direction )\n+        switch (direction)\n         {\n             case INCOMING:\n                 relTypeToRelsMap = incoming();\n@@ -201,7 +202,7 @@ public class RelationshipChangesForNode\n                 relTypeToRelsMap = loops();\n                 break;\n             default:\n-                throw new IllegalArgumentException( \"Unknown direction: \" + direction );\n+                throw new IllegalArgumentException(\"Unknown direction: \" + direction);\n         }\n         return relTypeToRelsMap;\n     }\n@@ -209,85 +210,85 @@ public class RelationshipChangesForNode\n     public LongIterator getRelationships()\n     {\n         return nonEmptyConcat(\n-                primitiveIds( incoming ),\n-                primitiveIds( outgoing ),\n-                primitiveIds( loops ) );\n+          primitiveIds(incoming),\n+          primitiveIds(outgoing),\n+          primitiveIds(loops));\n     }\n \n-    private LongIterator nonEmptyConcat( LongIterator... primitiveIds )\n+    private LongIterator nonEmptyConcat(LongIterator... primitiveIds)\n     {\n-        return concat( filter( ids -> ids != ImmutableEmptyLongIterator.INSTANCE, iterator( primitiveIds ) ) );\n+        return concat(filter(ids -> ids != ImmutableEmptyLongIterator.INSTANCE, iterator(primitiveIds)));\n     }\n \n-    public LongIterator getRelationships( Direction direction )\n+    public LongIterator getRelationships(Direction direction)\n     {\n-        switch ( direction )\n+        switch (direction)\n         {\n-        case INCOMING:\n-            return incoming == null && loops == null ? ImmutableEmptyLongIterator.INSTANCE : nonEmptyConcat( primitiveIds( incoming ), primitiveIds( loops ) );\n-        case OUTGOING:\n-            return outgoing == null && loops == null ? ImmutableEmptyLongIterator.INSTANCE : nonEmptyConcat( primitiveIds( outgoing ), primitiveIds( loops ) );\n-        case BOTH:\n-            return getRelationships();\n-        default:\n-            throw new IllegalArgumentException( \"Unknown direction: \" + direction );\n+            case INCOMING:\n+                return incoming == null && loops == null ? ImmutableEmptyLongIterator.INSTANCE : nonEmptyConcat(primitiveIds(incoming), primitiveIds(loops));\n+            case OUTGOING:\n+                return outgoing == null && loops == null ? ImmutableEmptyLongIterator.INSTANCE : nonEmptyConcat(primitiveIds(outgoing), primitiveIds(loops));\n+            case BOTH:\n+                return getRelationships();\n+            default:\n+                throw new IllegalArgumentException(\"Unknown direction: \" + direction);\n         }\n     }\n \n-    public LongIterator getRelationships( Direction direction, int type )\n+    public LongIterator getRelationships(Direction direction, int type)\n     {\n-        switch ( direction )\n+        switch (direction)\n         {\n-        case INCOMING:\n-            return incoming == null && loops == null ? ImmutableEmptyLongIterator.INSTANCE :\n-                   nonEmptyConcat( primitiveIdsByType( incoming, type ), primitiveIdsByType( loops, type ) );\n-        case OUTGOING:\n-            return outgoing == null && loops == null ? ImmutableEmptyLongIterator.INSTANCE :\n-                   nonEmptyConcat( primitiveIdsByType( outgoing, type ), primitiveIdsByType( loops, type ) );\n-        case BOTH:\n-            return nonEmptyConcat( primitiveIdsByType( outgoing, type ), primitiveIdsByType( incoming, type ), primitiveIdsByType( loops, type ) );\n-        default:\n-            throw new IllegalArgumentException( \"Unknown direction: \" + direction );\n+            case INCOMING:\n+                return incoming == null && loops == null ? ImmutableEmptyLongIterator.INSTANCE :\n+                  nonEmptyConcat(primitiveIdsByType(incoming, type), primitiveIdsByType(loops, type));\n+            case OUTGOING:\n+                return outgoing == null && loops == null ? ImmutableEmptyLongIterator.INSTANCE :\n+                  nonEmptyConcat(primitiveIdsByType(outgoing, type), primitiveIdsByType(loops, type));\n+            case BOTH:\n+                return nonEmptyConcat(primitiveIdsByType(outgoing, type), primitiveIdsByType(incoming, type), primitiveIdsByType(loops, type));\n+            default:\n+                throw new IllegalArgumentException(\"Unknown direction: \" + direction);\n         }\n     }\n \n     public IntSet relationshipTypes()\n     {\n         MutableIntSet types = IntSets.mutable.empty();\n-        addRelationshipTypes( types, outgoing );\n-        addRelationshipTypes( types, incoming );\n-        addRelationshipTypes( types, loops );\n+        addRelationshipTypes(types, outgoing);\n+        addRelationshipTypes(types, incoming);\n+        addRelationshipTypes(types, loops);\n         return types;\n     }\n \n-    private void addRelationshipTypes( MutableIntSet types, MutableIntObjectMap<MutableLongSet> relationships )\n+    private void addRelationshipTypes(MutableIntSet types, MutableIntObjectMap<MutableLongSet> relationships)\n     {\n-        if ( relationships != null )\n+        if (relationships != null)\n         {\n-            types.addAll( relationships.keySet() );\n+            types.addAll(relationships.keySet());\n         }\n     }\n \n-    private static LongIterator primitiveIds( IntObjectMap<MutableLongSet> map )\n+    private static LongIterator primitiveIds(IntObjectMap<MutableLongSet> map)\n     {\n-        if ( map == null )\n+        if (map == null)\n         {\n             return ImmutableEmptyLongIterator.INSTANCE;\n         }\n \n-        final int size = toIntExact( map.sumOfInt( LongSet::size ) );\n-        final MutableLongSet ids = new LongHashSet( size );\n-        map.values().forEach( ids::addAll );\n+        final int size = toIntExact(map.sumOfInt(LongSet::size));\n+        final MutableLongSet ids = new LongHashSet(size);\n+        map.values().forEach(ids::addAll);\n         return ids.longIterator();\n     }\n \n-    private static LongIterator primitiveIdsByType( IntObjectMap<MutableLongSet> map, int type )\n+    private static LongIterator primitiveIdsByType(IntObjectMap<MutableLongSet> map, int type)\n     {\n-        if ( map == null )\n+        if (map == null)\n         {\n             return ImmutableEmptyLongIterator.INSTANCE;\n         }\n-        final LongSet relationships = map.get( type );\n+        final LongSet relationships = map.get(type);\n         return relationships == null ? ImmutableEmptyLongIterator.INSTANCE : relationships.freeze().longIterator();\n     }\n }\n",
            "diff_size": 97
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2606/RelationshipChangesForNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2606/RelationshipChangesForNode.java\nindex 837a36caa57..6c2fe6015d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2606/RelationshipChangesForNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2606/RelationshipChangesForNode.java\n@@ -74,7 +74,6 @@ public class RelationshipChangesForNode\n                 };\n \n         abstract int augmentDegree( int degree, int diff );\n-\n     }\n \n     private final DiffStrategy diffStrategy;\n@@ -202,7 +201,7 @@ public class RelationshipChangesForNode\n                 break;\n             default:\n                 throw new IllegalArgumentException( \"Unknown direction: \" + direction );\n-        }\n+    }\n         return relTypeToRelsMap;\n     }\n \n@@ -290,4 +289,4 @@ public class RelationshipChangesForNode\n         final LongSet relationships = map.get( type );\n         return relationships == null ? ImmutableEmptyLongIterator.INSTANCE : relationships.freeze().longIterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1127",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1127/RelationshipTypeViewRelationshipStoreScan.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1127/RelationshipTypeViewRelationshipStoreScan.java\nindex 9d0283d1aa3..0bb5ef1eab0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1127/RelationshipTypeViewRelationshipStoreScan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1127/RelationshipTypeViewRelationshipStoreScan.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state.storeview;\n \n import java.util.function.IntPredicate;\n@@ -36,14 +37,15 @@ public class RelationshipTypeViewRelationshipStoreScan<FAILURE extends Exception\n     private final RelationshipTypeScanStore relationshipTypeScanStore;\n     private final PageCursorTracer cursorTracer;\n \n-    public RelationshipTypeViewRelationshipStoreScan( StorageReader storageReader, LockService locks,\n-            RelationshipTypeScanStore relationshipTypeScanStore,\n-            @Nullable Visitor<EntityTokenUpdate,FAILURE> relationshipTypeUpdateVisitor,\n-            @Nullable Visitor<EntityUpdates,FAILURE> propertyUpdatesVisitor,\n-            int[] relationshipTypeIds, IntPredicate propertyKeyIdFilter, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    public RelationshipTypeViewRelationshipStoreScan(StorageReader storageReader, LockService locks,\n+                                                     RelationshipTypeScanStore relationshipTypeScanStore,\n+                                                     @Nullable Visitor<EntityTokenUpdate, FAILURE> relationshipTypeUpdateVisitor,\n+                                                     @Nullable Visitor<EntityUpdates, FAILURE> propertyUpdatesVisitor,\n+                                                     int[] relationshipTypeIds, IntPredicate propertyKeyIdFilter, PageCursorTracer cursorTracer,\n+                                                     MemoryTracker memoryTracker)\n     {\n-        super( storageReader, locks, relationshipTypeUpdateVisitor, propertyUpdatesVisitor, relationshipTypeIds, propertyKeyIdFilter, cursorTracer,\n-                memoryTracker );\n+        super(storageReader, locks, relationshipTypeUpdateVisitor, propertyUpdatesVisitor, relationshipTypeIds, propertyKeyIdFilter, cursorTracer,\n+          memoryTracker);\n         this.relationshipTypeScanStore = relationshipTypeScanStore;\n         this.cursorTracer = cursorTracer;\n     }\n@@ -51,6 +53,6 @@ public class RelationshipTypeViewRelationshipStoreScan<FAILURE extends Exception\n     @Override\n     protected EntityIdIterator getEntityIdIterator()\n     {\n-        return new TokenScanViewIdIterator<>( relationshipTypeScanStore.newReader(), relationshipTypeIds, entityCursor, cursorTracer );\n+        return new TokenScanViewIdIterator<>(relationshipTypeScanStore.newReader(), relationshipTypeIds, entityCursor, cursorTracer);\n     }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
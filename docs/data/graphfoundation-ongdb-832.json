{
    "project_name": "graphfoundation-ongdb",
    "error_id": "832",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/832/ConsistencyFlags.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/832/ConsistencyFlags.java\nindex ffaa3328382..3723749383d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/832/ConsistencyFlags.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/832/ConsistencyFlags.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import org.apache.commons.lang3.builder.EqualsBuilder;\n@@ -27,59 +28,59 @@ import org.neo4j.kernel.configuration.Config;\n \n public class ConsistencyFlags\n {\n-    private final boolean checkGraph;\n-    private final boolean checkIndexes;\n-    private final boolean checkLabelScanStore;\n-    private final boolean checkPropertyOwners;\n+  private final boolean checkGraph;\n+  private final boolean checkIndexes;\n+  private final boolean checkLabelScanStore;\n+  private final boolean checkPropertyOwners;\n \n-    public ConsistencyFlags( Config tuningConfiguration )\n-    {\n-        this( tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_graph ),\n-                tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_indexes ),\n-                tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_label_scan_store ),\n-                tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_property_owners ) );\n-    }\n+  public ConsistencyFlags(Config tuningConfiguration)\n+  {\n+    this(tuningConfiguration.get(ConsistencyCheckSettings.consistency_check_graph),\n+        tuningConfiguration.get(ConsistencyCheckSettings.consistency_check_indexes),\n+        tuningConfiguration.get(ConsistencyCheckSettings.consistency_check_label_scan_store),\n+        tuningConfiguration.get(ConsistencyCheckSettings.consistency_check_property_owners));\n+  }\n \n-    public ConsistencyFlags( boolean checkGraph,\n-                             boolean checkIndexes,\n-                             boolean checkLabelScanStore,\n-                             boolean checkPropertyOwners )\n-    {\n-        this.checkGraph = checkGraph;\n-        this.checkIndexes = checkIndexes;\n-        this.checkLabelScanStore = checkLabelScanStore;\n-        this.checkPropertyOwners = checkPropertyOwners;\n-    }\n+  public ConsistencyFlags(boolean checkGraph,\n+                          boolean checkIndexes,\n+                          boolean checkLabelScanStore,\n+                          boolean checkPropertyOwners)\n+  {\n+    this.checkGraph = checkGraph;\n+    this.checkIndexes = checkIndexes;\n+    this.checkLabelScanStore = checkLabelScanStore;\n+    this.checkPropertyOwners = checkPropertyOwners;\n+  }\n \n-    public boolean isCheckGraph()\n-    {\n-        return checkGraph;\n-    }\n+  public boolean isCheckGraph()\n+  {\n+    return checkGraph;\n+  }\n \n-    public boolean isCheckIndexes()\n-    {\n-        return checkIndexes;\n-    }\n+  public boolean isCheckIndexes()\n+  {\n+    return checkIndexes;\n+  }\n \n-    public boolean isCheckLabelScanStore()\n-    {\n-        return checkLabelScanStore;\n-    }\n+  public boolean isCheckLabelScanStore()\n+  {\n+    return checkLabelScanStore;\n+  }\n \n-    public boolean isCheckPropertyOwners()\n-    {\n-        return checkPropertyOwners;\n-    }\n+  public boolean isCheckPropertyOwners()\n+  {\n+    return checkPropertyOwners;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        return EqualsBuilder.reflectionEquals( this, o );\n-    }\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    return EqualsBuilder.reflectionEquals(this, o);\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return HashCodeBuilder.reflectionHashCode( this );\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return HashCodeBuilder.reflectionHashCode(this);\n+  }\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 346).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/832/ConsistencyFlags.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/832/ConsistencyFlags.java\nindex ffaa3328382..40c00c60205 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/832/ConsistencyFlags.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/832/ConsistencyFlags.java\n@@ -34,17 +34,13 @@ public class ConsistencyFlags\n \n     public ConsistencyFlags( Config tuningConfiguration )\n     {\n-        this( tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_graph ),\n-                tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_indexes ),\n-                tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_label_scan_store ),\n-                tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_property_owners ) );\n+        this( tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_graph ), tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_indexes ), tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_label_scan_store ), tuningConfiguration.get( ConsistencyCheckSettings.consistency_check_property_owners ) );\n     }\n \n-    public ConsistencyFlags( boolean checkGraph,\n-                             boolean checkIndexes,\n+    public ConsistencyFlags( boolean checkGraph, boolean checkIndexes,\n                              boolean checkLabelScanStore,\n                              boolean checkPropertyOwners )\n-    {\n+{\n         this.checkGraph = checkGraph;\n         this.checkIndexes = checkIndexes;\n         this.checkLabelScanStore = checkLabelScanStore;\n@@ -82,4 +78,4 @@ public class ConsistencyFlags\n     {\n         return HashCodeBuilder.reflectionHashCode( this );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2979",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2979/TransactionMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2979/TransactionMetrics.java\nindex 330090b9f66..b01e5631b0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2979/TransactionMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2979/TransactionMetrics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.source.db;\n \n import com.codahale.metrics.Gauge;\n@@ -31,118 +32,118 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n \n import static com.codahale.metrics.MetricRegistry.name;\n \n-@Documented( \".Database Transaction Metrics\" )\n+@Documented(\".Database Transaction Metrics\")\n public class TransactionMetrics extends LifecycleAdapter\n {\n-    private static final String TRANSACTION_PREFIX = \"neo4j.transaction\";\n-\n-    @Documented( \"The total number of started transactions\" )\n-    public static final String TX_STARTED = name( TRANSACTION_PREFIX, \"started\" );\n-    @Documented( \"The highest peak of concurrent transactions ever seen on this machine\" )\n-    public static final String TX_PEAK_CONCURRENT = name( TRANSACTION_PREFIX, \"peak_concurrent\" );\n-\n-    @Documented( \"The number of currently active transactions\" )\n-    public static final String TX_ACTIVE = name( TRANSACTION_PREFIX, \"active\" );\n-    @Documented( \"The number of currently active read transactions\" )\n-    public static final String READ_TX_ACTIVE = name( TRANSACTION_PREFIX, \"active_read\" );\n-    @Documented( \"The number of currently active write transactions\" )\n-    public static final String WRITE_TX_ACTIVE = name( TRANSACTION_PREFIX, \"active_write\" );\n-\n-    @Documented( \"The total number of committed transactions\" )\n-    public static final String TX_COMMITTED = name( TRANSACTION_PREFIX, \"committed\" );\n-    @Documented( \"The total number of committed read transactions\" )\n-    public static final String READ_TX_COMMITTED = name( TRANSACTION_PREFIX, \"committed_read\" );\n-    @Documented( \"The total number of committed write transactions\" )\n-    public static final String WRITE_TX_COMMITTED = name( TRANSACTION_PREFIX, \"committed_write\" );\n-\n-    @Documented( \"The total number of rolled back transactions\" )\n-    public static final String TX_ROLLBACKS = name( TRANSACTION_PREFIX, \"rollbacks\" );\n-    @Documented( \"The total number of rolled back read transactions\" )\n-    public static final String READ_TX_ROLLBACKS = name( TRANSACTION_PREFIX, \"rollbacks_read\" );\n-    @Documented( \"The total number of rolled back write transactions\" )\n-    public static final String WRITE_TX_ROLLBACKS = name( TRANSACTION_PREFIX, \"rollbacks_write\" );\n-\n-    @Documented( \"The total number of terminated transactions\" )\n-    public static final String TX_TERMINATED = name( TRANSACTION_PREFIX, \"terminated\" );\n-    @Documented( \"The total number of terminated read transactions\" )\n-    public static final String READ_TX_TERMINATED = name( TRANSACTION_PREFIX, \"terminated_read\" );\n-    @Documented( \"The total number of terminated write transactions\" )\n-    public static final String WRITE_TX_TERMINATED = name( TRANSACTION_PREFIX, \"terminated_write\" );\n-\n-    @Documented( \"The ID of the last committed transaction\" )\n-    public static final String LAST_COMMITTED_TX_ID = name( TRANSACTION_PREFIX, \"last_committed_tx_id\" );\n-    @Documented( \"The ID of the last closed transaction\" )\n-    public static final String LAST_CLOSED_TX_ID = name( TRANSACTION_PREFIX, \"last_closed_tx_id\" );\n-\n-    private final MetricRegistry registry;\n-    private final TransactionCounters transactionCounters;\n-    private final Supplier<TransactionIdStore> transactionIdStore;\n-\n-    public TransactionMetrics( MetricRegistry registry,\n-            Supplier<TransactionIdStore> transactionIdStore, TransactionCounters transactionCounters )\n-    {\n-        this.registry = registry;\n-        this.transactionIdStore = transactionIdStore;\n-        this.transactionCounters = transactionCounters;\n-    }\n-\n-    @Override\n-    public void start()\n-    {\n-        registry.register( TX_STARTED, (Gauge<Long>) transactionCounters::getNumberOfStartedTransactions );\n-        registry.register( TX_PEAK_CONCURRENT,\n-                (Gauge<Long>) transactionCounters::getPeakConcurrentNumberOfTransactions );\n-\n-        registry.register( TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveTransactions );\n-        registry.register( READ_TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveReadTransactions );\n-        registry.register( WRITE_TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveWriteTransactions );\n-\n-        registry.register( TX_COMMITTED, (Gauge<Long>) transactionCounters::getNumberOfCommittedTransactions );\n-        registry.register( READ_TX_COMMITTED, (Gauge<Long>) transactionCounters::getNumberOfCommittedReadTransactions );\n-        registry.register( WRITE_TX_COMMITTED,\n-                (Gauge<Long>) transactionCounters::getNumberOfCommittedWriteTransactions );\n-\n-        registry.register( TX_ROLLBACKS, (Gauge<Long>) transactionCounters::getNumberOfRolledBackTransactions );\n-        registry.register( READ_TX_ROLLBACKS,\n-                (Gauge<Long>) transactionCounters::getNumberOfRolledBackReadTransactions );\n-        registry.register( WRITE_TX_ROLLBACKS,\n-                (Gauge<Long>) transactionCounters::getNumberOfRolledBackWriteTransactions );\n-\n-        registry.register( TX_TERMINATED, (Gauge<Long>) transactionCounters::getNumberOfTerminatedTransactions );\n-        registry.register( READ_TX_TERMINATED,\n-                (Gauge<Long>) transactionCounters::getNumberOfTerminatedReadTransactions );\n-        registry.register( WRITE_TX_TERMINATED,\n-                (Gauge<Long>) transactionCounters::getNumberOfTerminatedWriteTransactions );\n-\n-        registry.register( LAST_COMMITTED_TX_ID, (Gauge<Long>) () ->\n-                transactionIdStore.get().getLastCommittedTransactionId() );\n-        registry.register( LAST_CLOSED_TX_ID, (Gauge<Long>) () ->\n-                transactionIdStore.get().getLastClosedTransactionId() );\n-    }\n-\n-    @Override\n-    public void stop()\n-    {\n-        registry.remove( TX_STARTED );\n-        registry.remove( TX_PEAK_CONCURRENT );\n-\n-        registry.remove( TX_ACTIVE );\n-        registry.remove( READ_TX_ACTIVE );\n-        registry.remove( WRITE_TX_ACTIVE );\n-\n-        registry.remove( TX_COMMITTED );\n-        registry.remove( READ_TX_COMMITTED );\n-        registry.remove( WRITE_TX_COMMITTED );\n-\n-        registry.remove( TX_ROLLBACKS );\n-        registry.remove( READ_TX_ROLLBACKS );\n-        registry.remove( WRITE_TX_ROLLBACKS );\n-\n-        registry.remove( TX_TERMINATED );\n-        registry.remove( READ_TX_TERMINATED );\n-        registry.remove( WRITE_TX_TERMINATED );\n-\n-        registry.remove( LAST_COMMITTED_TX_ID );\n-        registry.remove( LAST_CLOSED_TX_ID );\n-    }\n+  private static final String TRANSACTION_PREFIX = \"neo4j.transaction\";\n+\n+  @Documented(\"The total number of started transactions\")\n+  public static final String TX_STARTED = name(TRANSACTION_PREFIX, \"started\");\n+  @Documented(\"The highest peak of concurrent transactions ever seen on this machine\")\n+  public static final String TX_PEAK_CONCURRENT = name(TRANSACTION_PREFIX, \"peak_concurrent\");\n+\n+  @Documented(\"The number of currently active transactions\")\n+  public static final String TX_ACTIVE = name(TRANSACTION_PREFIX, \"active\");\n+  @Documented(\"The number of currently active read transactions\")\n+  public static final String READ_TX_ACTIVE = name(TRANSACTION_PREFIX, \"active_read\");\n+  @Documented(\"The number of currently active write transactions\")\n+  public static final String WRITE_TX_ACTIVE = name(TRANSACTION_PREFIX, \"active_write\");\n+\n+  @Documented(\"The total number of committed transactions\")\n+  public static final String TX_COMMITTED = name(TRANSACTION_PREFIX, \"committed\");\n+  @Documented(\"The total number of committed read transactions\")\n+  public static final String READ_TX_COMMITTED = name(TRANSACTION_PREFIX, \"committed_read\");\n+  @Documented(\"The total number of committed write transactions\")\n+  public static final String WRITE_TX_COMMITTED = name(TRANSACTION_PREFIX, \"committed_write\");\n+\n+  @Documented(\"The total number of rolled back transactions\")\n+  public static final String TX_ROLLBACKS = name(TRANSACTION_PREFIX, \"rollbacks\");\n+  @Documented(\"The total number of rolled back read transactions\")\n+  public static final String READ_TX_ROLLBACKS = name(TRANSACTION_PREFIX, \"rollbacks_read\");\n+  @Documented(\"The total number of rolled back write transactions\")\n+  public static final String WRITE_TX_ROLLBACKS = name(TRANSACTION_PREFIX, \"rollbacks_write\");\n+\n+  @Documented(\"The total number of terminated transactions\")\n+  public static final String TX_TERMINATED = name(TRANSACTION_PREFIX, \"terminated\");\n+  @Documented(\"The total number of terminated read transactions\")\n+  public static final String READ_TX_TERMINATED = name(TRANSACTION_PREFIX, \"terminated_read\");\n+  @Documented(\"The total number of terminated write transactions\")\n+  public static final String WRITE_TX_TERMINATED = name(TRANSACTION_PREFIX, \"terminated_write\");\n+\n+  @Documented(\"The ID of the last committed transaction\")\n+  public static final String LAST_COMMITTED_TX_ID = name(TRANSACTION_PREFIX, \"last_committed_tx_id\");\n+  @Documented(\"The ID of the last closed transaction\")\n+  public static final String LAST_CLOSED_TX_ID = name(TRANSACTION_PREFIX, \"last_closed_tx_id\");\n+\n+  private final MetricRegistry registry;\n+  private final TransactionCounters transactionCounters;\n+  private final Supplier<TransactionIdStore> transactionIdStore;\n+\n+  public TransactionMetrics(MetricRegistry registry,\n+                            Supplier<TransactionIdStore> transactionIdStore, TransactionCounters transactionCounters)\n+  {\n+    this.registry = registry;\n+    this.transactionIdStore = transactionIdStore;\n+    this.transactionCounters = transactionCounters;\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    registry.register(TX_STARTED, (Gauge<Long>) transactionCounters::getNumberOfStartedTransactions);\n+    registry.register(TX_PEAK_CONCURRENT,\n+        (Gauge<Long>) transactionCounters::getPeakConcurrentNumberOfTransactions);\n+\n+    registry.register(TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveTransactions);\n+    registry.register(READ_TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveReadTransactions);\n+    registry.register(WRITE_TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveWriteTransactions);\n+\n+    registry.register(TX_COMMITTED, (Gauge<Long>) transactionCounters::getNumberOfCommittedTransactions);\n+    registry.register(READ_TX_COMMITTED, (Gauge<Long>) transactionCounters::getNumberOfCommittedReadTransactions);\n+    registry.register(WRITE_TX_COMMITTED,\n+        (Gauge<Long>) transactionCounters::getNumberOfCommittedWriteTransactions);\n+\n+    registry.register(TX_ROLLBACKS, (Gauge<Long>) transactionCounters::getNumberOfRolledBackTransactions);\n+    registry.register(READ_TX_ROLLBACKS,\n+        (Gauge<Long>) transactionCounters::getNumberOfRolledBackReadTransactions);\n+    registry.register(WRITE_TX_ROLLBACKS,\n+        (Gauge<Long>) transactionCounters::getNumberOfRolledBackWriteTransactions);\n+\n+    registry.register(TX_TERMINATED, (Gauge<Long>) transactionCounters::getNumberOfTerminatedTransactions);\n+    registry.register(READ_TX_TERMINATED,\n+        (Gauge<Long>) transactionCounters::getNumberOfTerminatedReadTransactions);\n+    registry.register(WRITE_TX_TERMINATED,\n+        (Gauge<Long>) transactionCounters::getNumberOfTerminatedWriteTransactions);\n+\n+    registry.register(LAST_COMMITTED_TX_ID, (Gauge<Long>) () ->\n+        transactionIdStore.get().getLastCommittedTransactionId());\n+    registry.register(LAST_CLOSED_TX_ID, (Gauge<Long>) () ->\n+        transactionIdStore.get().getLastClosedTransactionId());\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    registry.remove(TX_STARTED);\n+    registry.remove(TX_PEAK_CONCURRENT);\n+\n+    registry.remove(TX_ACTIVE);\n+    registry.remove(READ_TX_ACTIVE);\n+    registry.remove(WRITE_TX_ACTIVE);\n+\n+    registry.remove(TX_COMMITTED);\n+    registry.remove(READ_TX_COMMITTED);\n+    registry.remove(WRITE_TX_COMMITTED);\n+\n+    registry.remove(TX_ROLLBACKS);\n+    registry.remove(READ_TX_ROLLBACKS);\n+    registry.remove(WRITE_TX_ROLLBACKS);\n+\n+    registry.remove(TX_TERMINATED);\n+    registry.remove(READ_TX_TERMINATED);\n+    registry.remove(WRITE_TX_TERMINATED);\n+\n+    registry.remove(LAST_COMMITTED_TX_ID);\n+    registry.remove(LAST_CLOSED_TX_ID);\n+  }\n }\n",
            "diff_size": 113
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2979/TransactionMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2979/TransactionMetrics.java\nindex 330090b9f66..96c6f340adc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2979/TransactionMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2979/TransactionMetrics.java\n@@ -78,8 +78,7 @@ public class TransactionMetrics extends LifecycleAdapter\n     private final TransactionCounters transactionCounters;\n     private final Supplier<TransactionIdStore> transactionIdStore;\n \n-    public TransactionMetrics( MetricRegistry registry,\n-            Supplier<TransactionIdStore> transactionIdStore, TransactionCounters transactionCounters )\n+    public TransactionMetrics( MetricRegistry registry, Supplier<TransactionIdStore> transactionIdStore, TransactionCounters transactionCounters )\n     {\n         this.registry = registry;\n         this.transactionIdStore = transactionIdStore;\n@@ -90,34 +89,21 @@ public class TransactionMetrics extends LifecycleAdapter\n     public void start()\n     {\n         registry.register( TX_STARTED, (Gauge<Long>) transactionCounters::getNumberOfStartedTransactions );\n-        registry.register( TX_PEAK_CONCURRENT,\n-                (Gauge<Long>) transactionCounters::getPeakConcurrentNumberOfTransactions );\n-\n-        registry.register( TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveTransactions );\n+        registry.register( TX_PEAK_CONCURRENT, (Gauge<Long>) transactionCounters::getPeakConcurrentNumberOfTransactions );\n+registry.register( TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveTransactions );\n         registry.register( READ_TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveReadTransactions );\n         registry.register( WRITE_TX_ACTIVE, (Gauge<Long>) transactionCounters::getNumberOfActiveWriteTransactions );\n-\n-        registry.register( TX_COMMITTED, (Gauge<Long>) transactionCounters::getNumberOfCommittedTransactions );\n+registry.register( TX_COMMITTED, (Gauge<Long>) transactionCounters::getNumberOfCommittedTransactions );\n         registry.register( READ_TX_COMMITTED, (Gauge<Long>) transactionCounters::getNumberOfCommittedReadTransactions );\n-        registry.register( WRITE_TX_COMMITTED,\n-                (Gauge<Long>) transactionCounters::getNumberOfCommittedWriteTransactions );\n-\n-        registry.register( TX_ROLLBACKS, (Gauge<Long>) transactionCounters::getNumberOfRolledBackTransactions );\n-        registry.register( READ_TX_ROLLBACKS,\n-                (Gauge<Long>) transactionCounters::getNumberOfRolledBackReadTransactions );\n-        registry.register( WRITE_TX_ROLLBACKS,\n-                (Gauge<Long>) transactionCounters::getNumberOfRolledBackWriteTransactions );\n-\n-        registry.register( TX_TERMINATED, (Gauge<Long>) transactionCounters::getNumberOfTerminatedTransactions );\n-        registry.register( READ_TX_TERMINATED,\n-                (Gauge<Long>) transactionCounters::getNumberOfTerminatedReadTransactions );\n-        registry.register( WRITE_TX_TERMINATED,\n-                (Gauge<Long>) transactionCounters::getNumberOfTerminatedWriteTransactions );\n-\n-        registry.register( LAST_COMMITTED_TX_ID, (Gauge<Long>) () ->\n-                transactionIdStore.get().getLastCommittedTransactionId() );\n-        registry.register( LAST_CLOSED_TX_ID, (Gauge<Long>) () ->\n-                transactionIdStore.get().getLastClosedTransactionId() );\n+        registry.register( WRITE_TX_COMMITTED, (Gauge<Long>) transactionCounters::getNumberOfCommittedWriteTransactions );\n+registry.register( TX_ROLLBACKS, (Gauge<Long>) transactionCounters::getNumberOfRolledBackTransactions );\n+        registry.register( READ_TX_ROLLBACKS, (Gauge<Long>) transactionCounters::getNumberOfRolledBackReadTransactions );\n+registry.register( WRITE_TX_ROLLBACKS, (Gauge<Long>) transactionCounters::getNumberOfRolledBackWriteTransactions );\n+registry.register( TX_TERMINATED, (Gauge<Long>) transactionCounters::getNumberOfTerminatedTransactions );\n+        registry.register( READ_TX_TERMINATED, (Gauge<Long>) transactionCounters::getNumberOfTerminatedReadTransactions );\n+registry.register( WRITE_TX_TERMINATED, (Gauge<Long>) transactionCounters::getNumberOfTerminatedWriteTransactions );\n+registry.register( LAST_COMMITTED_TX_ID, (Gauge<Long>) () -> transactionIdStore.get().getLastCommittedTransactionId() );\n+registry.register( LAST_CLOSED_TX_ID, (Gauge<Long>) () -> transactionIdStore.get().getLastClosedTransactionId() );\n     }\n \n     @Override\n@@ -125,24 +111,19 @@ public class TransactionMetrics extends LifecycleAdapter\n     {\n         registry.remove( TX_STARTED );\n         registry.remove( TX_PEAK_CONCURRENT );\n-\n-        registry.remove( TX_ACTIVE );\n+registry.remove( TX_ACTIVE );\n         registry.remove( READ_TX_ACTIVE );\n         registry.remove( WRITE_TX_ACTIVE );\n-\n-        registry.remove( TX_COMMITTED );\n+registry.remove( TX_COMMITTED );\n         registry.remove( READ_TX_COMMITTED );\n         registry.remove( WRITE_TX_COMMITTED );\n-\n-        registry.remove( TX_ROLLBACKS );\n+registry.remove( TX_ROLLBACKS );\n         registry.remove( READ_TX_ROLLBACKS );\n         registry.remove( WRITE_TX_ROLLBACKS );\n-\n-        registry.remove( TX_TERMINATED );\n+registry.remove( TX_TERMINATED );\n         registry.remove( READ_TX_TERMINATED );\n         registry.remove( WRITE_TX_TERMINATED );\n-\n-        registry.remove( LAST_COMMITTED_TX_ID );\n+registry.remove( LAST_COMMITTED_TX_ID );\n         registry.remove( LAST_CLOSED_TX_ID );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3120",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3120/AsyncLogging.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3120/AsyncLogging.java\nindex ef58807fd8b..d15aa92653b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3120/AsyncLogging.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3120/AsyncLogging.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.logging;\n \n import java.util.concurrent.ExecutorService;\n@@ -38,74 +39,73 @@ import static org.neo4j.util.FeatureToggles.flag;\n \n public class AsyncLogging extends LifecycleAdapter implements Consumer<AsyncLogEvent>, AsyncEvents.Monitor\n {\n-    private static final boolean ENABLED = flag( AsyncLogging.class, \"ENABLED\", true );\n+  private static final boolean ENABLED = flag(AsyncLogging.class, \"ENABLED\", true);\n \n-    public static LogProvider provider( LifeSupport life, LogProvider provider )\n+  public static LogProvider provider(LifeSupport life, LogProvider provider)\n+  {\n+    if (ENABLED)\n+    {\n+      if (provider instanceof NullLogProvider)\n+      {\n+        return provider;\n+      }\n+      return new AsyncLogProvider(life.add(\n+          new AsyncLogging(provider.getLog(AsyncLogging.class))).eventSender(), provider);\n+    } else\n     {\n-        if ( ENABLED )\n-        {\n-            if ( provider instanceof NullLogProvider )\n-            {\n-                return provider;\n-            }\n-            return new AsyncLogProvider( life.add(\n-                    new AsyncLogging( provider.getLog( AsyncLogging.class ) ) ).eventSender(), provider );\n-        }\n-        else\n-        {\n-            return provider;\n-        }\n+      return provider;\n     }\n+  }\n \n-    private final Log metaLog;\n-    private final AsyncEvents<AsyncLogEvent> events;\n-    private long highCount;\n-    private ExecutorService executor;\n+  private final Log metaLog;\n+  private final AsyncEvents<AsyncLogEvent> events;\n+  private long highCount;\n+  private ExecutorService executor;\n \n-    AsyncLogging( Log metaLog )\n-    {\n-        this.metaLog = metaLog;\n-        this.events = new AsyncEvents<>( this, this );\n-    }\n+  AsyncLogging(Log metaLog)\n+  {\n+    this.metaLog = metaLog;\n+    this.events = new AsyncEvents<>(this, this);\n+  }\n \n-    @Override\n-    public void accept( AsyncLogEvent event )\n-    {\n-        event.process();\n-    }\n+  @Override\n+  public void accept(AsyncLogEvent event)\n+  {\n+    event.process();\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        highCount = 0;\n-        executor = Executors.newSingleThreadExecutor( new NamedThreadFactory( getClass().getSimpleName() ) );\n-        executor.submit( events );\n-        events.awaitStartup();\n-    }\n+  @Override\n+  public void start()\n+  {\n+    highCount = 0;\n+    executor = Executors.newSingleThreadExecutor(new NamedThreadFactory(getClass().getSimpleName()));\n+    executor.submit(events);\n+    events.awaitStartup();\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        events.shutdown();\n-        executor.shutdown();\n-        events.awaitTermination();\n-    }\n+  @Override\n+  public void stop()\n+  {\n+    events.shutdown();\n+    executor.shutdown();\n+    events.awaitTermination();\n+  }\n \n-    @Override\n-    public void eventCount( long count )\n+  @Override\n+  public void eventCount(long count)\n+  {\n+    if (metaLog.isDebugEnabled())\n     {\n-        if ( metaLog.isDebugEnabled() )\n-        {\n-            if ( count > highCount )\n-            {\n-                metaLog.debug( \"High mark increasing from %d to %d events\", highCount, count );\n-                highCount = count;\n-            }\n-        }\n+      if (count > highCount)\n+      {\n+        metaLog.debug(\"High mark increasing from %d to %d events\", highCount, count);\n+        highCount = count;\n+      }\n     }\n+  }\n \n-    AsyncEventSender<AsyncLogEvent> eventSender()\n-    {\n-        return events;\n-    }\n+  AsyncEventSender<AsyncLogEvent> eventSender()\n+  {\n+    return events;\n+  }\n }\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "98",
                    "column": "23",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3120/AsyncLogging.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3120/AsyncLogging.java\nindex ef58807fd8b..e24e6db6180 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3120/AsyncLogging.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3120/AsyncLogging.java\n@@ -48,8 +48,7 @@ public class AsyncLogging extends LifecycleAdapter implements Consumer<AsyncLogE\n             {\n                 return provider;\n             }\n-            return new AsyncLogProvider( life.add(\n-                    new AsyncLogging( provider.getLog( AsyncLogging.class ) ) ).eventSender(), provider );\n+            return new AsyncLogProvider( life.add( new AsyncLogging( provider.getLog( AsyncLogging.class ) ) ).eventSender(), provider );\n         }\n         else\n         {\n@@ -96,7 +95,7 @@ public class AsyncLogging extends LifecycleAdapter implements Consumer<AsyncLogE\n     {\n         if ( metaLog.isDebugEnabled() )\n         {\n-            if ( count > highCount )\n+            if ( count> highCount )\n             {\n                 metaLog.debug( \"High mark increasing from %d to %d events\", highCount, count );\n                 highCount = count;\n@@ -108,4 +107,4 @@ public class AsyncLogging extends LifecycleAdapter implements Consumer<AsyncLogE\n     {\n         return events;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "ibinti-bugvm",
    "error_id": "33",
    "information": {
        "errors": [
            {
                "line": "36",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * This annotation defines behavioral contract enforced at runtime by instances of annotated classes.\n */\n@Documented\n@Target(ElementType.TYPE)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/33/Contract.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/33/Contract.java\nindex 206994a8aae..c75dafa51a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/33/Contract.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/33/Contract.java\n@@ -24,6 +24,7 @@\n  * <http://www.apache.org/>.\r\n  *\r\n  */\r\n+\r\n package org.apache.http.annotation;\r\n \r\n import java.lang.annotation.Documented;\r\n@@ -40,6 +41,6 @@ import java.lang.annotation.Target;\n @Retention(RetentionPolicy.CLASS)\r\n public @interface Contract {\r\n \r\n-    ThreadingBehavior threading() default ThreadingBehavior.UNSAFE;\r\n+  ThreadingBehavior threading() default ThreadingBehavior.UNSAFE;\r\n \r\n }\r\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/33/Contract.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/33/Contract.java\nindex 206994a8aae..cb4d42ca664 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/33/Contract.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/33/Contract.java\n@@ -42,4 +42,4 @@ public @interface Contract {\n \r\n     ThreadingBehavior threading() default ThreadingBehavior.UNSAFE;\r\n \r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/33/Contract.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/33/Contract.java\nindex 206994a8aae..24a001e4ef0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/33/Contract.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/33/Contract.java\n@@ -24,22 +24,22 @@\n  * <http://www.apache.org/>.\r\n  *\r\n  */\r\n-package org.apache.http.annotation;\r\n-\r\n-import java.lang.annotation.Documented;\r\n-import java.lang.annotation.ElementType;\r\n-import java.lang.annotation.Retention;\r\n-import java.lang.annotation.RetentionPolicy;\r\n+package org.apache.http.annotation;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n import java.lang.annotation.Target;\r\n \r\n /**\r\n  * This annotation defines behavioral contract enforced at runtime by instances of annotated classes.\r\n- */\r\n-@Documented\r\n-@Target(ElementType.TYPE)\r\n-@Retention(RetentionPolicy.CLASS)\r\n-public @interface Contract {\r\n-\r\n-    ThreadingBehavior threading() default ThreadingBehavior.UNSAFE;\r\n-\r\n-}\r\n+ */\n+\n+\n+@Documented\n+@Target(ElementType.TYPE)\n+@Retention(RetentionPolicy.CLASS)\n+public @interface Contract {\n+    ThreadingBehavior threading() default ThreadingBehavior.UNSAFE;\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "361",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/361/ReplicatedLockTokenStateMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/361/ReplicatedLockTokenStateMachine.java\nindex b7a58708588..52d759de005 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/361/ReplicatedLockTokenStateMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/361/ReplicatedLockTokenStateMachine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.locks;\n \n import java.io.IOException;\n@@ -32,68 +33,68 @@ import org.neo4j.causalclustering.core.state.storage.StateStorage;\n  */\n public class ReplicatedLockTokenStateMachine implements StateMachine<ReplicatedLockTokenRequest>\n {\n-    private final StateStorage<ReplicatedLockTokenState> storage;\n-    private ReplicatedLockTokenState state;\n+  private final StateStorage<ReplicatedLockTokenState> storage;\n+  private ReplicatedLockTokenState state;\n \n-    public ReplicatedLockTokenStateMachine( StateStorage<ReplicatedLockTokenState> storage )\n-    {\n-        this.storage = storage;\n-    }\n+  public ReplicatedLockTokenStateMachine(StateStorage<ReplicatedLockTokenState> storage)\n+  {\n+    this.storage = storage;\n+  }\n \n-    @Override\n-    public synchronized void applyCommand( ReplicatedLockTokenRequest tokenRequest, long commandIndex,\n-            Consumer<Result> callback )\n+  @Override\n+  public synchronized void applyCommand(ReplicatedLockTokenRequest tokenRequest, long commandIndex,\n+                                        Consumer<Result> callback)\n+  {\n+    if (commandIndex <= state().ordinal())\n     {\n-        if ( commandIndex <= state().ordinal() )\n-        {\n-            return;\n-        }\n-\n-        boolean requestAccepted = tokenRequest.id() == LockToken.nextCandidateId( currentToken().id() );\n-        if ( requestAccepted )\n-        {\n-            state().set( tokenRequest, commandIndex );\n-        }\n-\n-        callback.accept( Result.of( requestAccepted ) );\n+      return;\n     }\n \n-    @Override\n-    public synchronized void flush() throws IOException\n+    boolean requestAccepted = tokenRequest.id() == LockToken.nextCandidateId(currentToken().id());\n+    if (requestAccepted)\n     {\n-        storage.persistStoreData( state() );\n+      state().set(tokenRequest, commandIndex);\n     }\n \n-    @Override\n-    public long lastAppliedIndex()\n-    {\n-        return state().ordinal();\n-    }\n+    callback.accept(Result.of(requestAccepted));\n+  }\n \n-    private ReplicatedLockTokenState state()\n-    {\n-        if ( state == null )\n-        {\n-            state = storage.getInitialState();\n-        }\n-        return state;\n-    }\n+  @Override\n+  public synchronized void flush() throws IOException\n+  {\n+    storage.persistStoreData(state());\n+  }\n \n-    public synchronized ReplicatedLockTokenState snapshot()\n-    {\n-        return state().newInstance();\n-    }\n+  @Override\n+  public long lastAppliedIndex()\n+  {\n+    return state().ordinal();\n+  }\n \n-    public synchronized void installSnapshot( ReplicatedLockTokenState snapshot )\n+  private ReplicatedLockTokenState state()\n+  {\n+    if (state == null)\n     {\n-        state = snapshot;\n+      state = storage.getInitialState();\n     }\n+    return state;\n+  }\n \n-    /**\n-     * @return The currently valid token.\n-     */\n-    public synchronized ReplicatedLockTokenRequest currentToken()\n-    {\n-        return state().get();\n-    }\n+  public synchronized ReplicatedLockTokenState snapshot()\n+  {\n+    return state().newInstance();\n+  }\n+\n+  public synchronized void installSnapshot(ReplicatedLockTokenState snapshot)\n+  {\n+    state = snapshot;\n+  }\n+\n+  /**\n+   * @return The currently valid token.\n+   */\n+  public synchronized ReplicatedLockTokenRequest currentToken()\n+  {\n+    return state().get();\n+  }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/361/ReplicatedLockTokenStateMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/361/ReplicatedLockTokenStateMachine.java\nindex b7a58708588..e25e226dd29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/361/ReplicatedLockTokenStateMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/361/ReplicatedLockTokenStateMachine.java\n@@ -41,8 +41,7 @@ public class ReplicatedLockTokenStateMachine implements StateMachine<ReplicatedL\n     }\n \n     @Override\n-    public synchronized void applyCommand( ReplicatedLockTokenRequest tokenRequest, long commandIndex,\n-            Consumer<Result> callback )\n+    public synchronized void applyCommand( ReplicatedLockTokenRequest tokenRequest, long commandIndex, Consumer<Result> callback )\n     {\n         if ( commandIndex <= state().ordinal() )\n         {\n@@ -76,7 +75,8 @@ public class ReplicatedLockTokenStateMachine implements StateMachine<ReplicatedL\n         {\n             state = storage.getInitialState();\n         }\n-        return state;\n+\n+return state;\n     }\n \n     public synchronized ReplicatedLockTokenState snapshot()\n@@ -96,4 +96,4 @@ public class ReplicatedLockTokenStateMachine implements StateMachine<ReplicatedL\n     {\n         return state().get();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1124",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "199",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "202",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "205",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "208",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "211",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "214",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "217",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "228",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "258",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "268",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "332",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1124/ByteCodeVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1124/ByteCodeVisitor.java\nindex 3818819ec5f..71db631e9b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1124/ByteCodeVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1124/ByteCodeVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import org.objectweb.asm.ClassReader;\n@@ -39,66 +40,66 @@ public interface ByteCodeVisitor\n {\n     interface Configurable\n     {\n-        void addByteCodeVisitor( ByteCodeVisitor visitor );\n+        void addByteCodeVisitor(ByteCodeVisitor visitor);\n     }\n \n-    ByteCodeVisitor DO_NOTHING = ( name, bytes ) ->\n+    ByteCodeVisitor DO_NOTHING = (name, bytes) ->\n     {\n     };\n \n-    void visitByteCode( String name, ByteBuffer bytes );\n+    void visitByteCode(String name, ByteBuffer bytes);\n \n     class Multiplex implements ByteCodeVisitor\n     {\n         private final ByteCodeVisitor[] visitors;\n \n-        Multiplex( ByteCodeVisitor[] visitors )\n+        Multiplex(ByteCodeVisitor[] visitors)\n         {\n             this.visitors = visitors;\n         }\n \n         @Override\n-        public void visitByteCode( String name, ByteBuffer bytes )\n+        public void visitByteCode(String name, ByteBuffer bytes)\n         {\n-            for ( ByteCodeVisitor visitor : visitors )\n+            for (ByteCodeVisitor visitor : visitors)\n             {\n-                visitor.visitByteCode( name, bytes.duplicate() );\n+                visitor.visitByteCode(name, bytes.duplicate());\n             }\n         }\n     }\n \n-    static Printer printer( PrintWriter out )\n+    static Printer printer(PrintWriter out)\n     {\n         return new Printer()\n         {\n             @Override\n-            void printf( String format, Object... args )\n+            void printf(String format, Object... args)\n             {\n-                out.format( format, args );\n+                out.format(format, args);\n             }\n \n             @Override\n-            void println( CharSequence line )\n+            void println(CharSequence line)\n             {\n-                out.println( line );\n+                out.println(line);\n             }\n         };\n     }\n \n-    static Printer printer( PrintStream out )\n+    static Printer printer(PrintStream out)\n     {\n         return new Printer()\n         {\n             @Override\n-            void printf( String format, Object... args )\n+            void printf(String format, Object... args)\n             {\n-                out.format( format, args );\n+                out.format(format, args);\n             }\n \n             @Override\n-            void println( CharSequence line )\n+            void println(CharSequence line)\n             {\n-                out.println( line );\n+                out.println(line);\n             }\n         };\n     }\n@@ -107,296 +108,285 @@ public interface ByteCodeVisitor\n     {\n         private Printer()\n         {\n-            super( Opcodes.ASM4 );\n+            super(Opcodes.ASM4);\n         }\n \n         @Override\n-        public void applyTo( Object target )\n+        public void applyTo(Object target)\n         {\n-            if ( target instanceof Configurable )\n+            if (target instanceof Configurable)\n             {\n-                ((Configurable) target).addByteCodeVisitor( this );\n+                ((Configurable) target).addByteCodeVisitor(this);\n             }\n         }\n \n-        abstract void printf( String format, Object... args );\n+        abstract void printf(String format, Object... args);\n \n-        abstract void println( CharSequence line );\n+        abstract void println(CharSequence line);\n \n         @Override\n-        public void visitByteCode( String name, ByteBuffer bytes )\n+        public void visitByteCode(String name, ByteBuffer bytes)\n         {\n-            new ClassReader( bytes.array() ).accept( this, 0 );\n+            new ClassReader(bytes.array()).accept(this, 0);\n         }\n \n         @Override\n         public void visit(\n-                int version, int access, String name, String signature, String superName,\n-                String[] interfaces )\n+          int version, int access, String name, String signature, String superName,\n+          String[] interfaces)\n         {\n             StringBuilder iFaces = new StringBuilder();\n             String prefix = \" implements \";\n-            for ( String iFace : interfaces )\n+            for (String iFace : interfaces)\n             {\n-                iFaces.append( prefix ).append( iFace );\n+                iFaces.append(prefix).append(iFace);\n                 prefix = \", \";\n             }\n-            printf( \"%s class %s extends %s%s%n{%n\", Modifier.toString( access ), name, superName, iFaces );\n+            printf(\"%s class %s extends %s%s%n{%n\", Modifier.toString(access), name, superName, iFaces);\n         }\n \n         @Override\n-        public FieldVisitor visitField( int access, String name, String desc, String signature, Object value )\n+        public FieldVisitor visitField(int access, String name, String desc, String signature, Object value)\n         {\n-            printf( \"  %s %s %s%s;%n\", Modifier.toString( access ), getType( desc ).getClassName(), name,\n-                    value == null ? \"\" : (\" = \" + value) );\n-            return super.visitField( access, name, desc, signature, value );\n+            printf(\"  %s %s %s%s;%n\", Modifier.toString(access), getType(desc).getClassName(), name,\n+              value == null ? \"\" : (\" = \" + value));\n+            return super.visitField(access, name, desc, signature, value);\n         }\n \n         @Override\n-        public MethodVisitor visitMethod( int access, String name, String desc, String signature, String[] exceptions )\n+        public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions)\n         {\n-            printf( \"  %s %s%s%n  {%n\", Modifier.toString( access ), name, desc );\n-            return new MethodVisitor( api )\n+            printf(\"  %s %s%s%n  {%n\", Modifier.toString(access), name, desc);\n+            return new MethodVisitor(api)\n             {\n                 int offset;\n \n                 @Override\n-                public void visitFrame( int type, int nLocal, Object[] local, int nStack, Object[] stack )\n+                public void visitFrame(int type, int nLocal, Object[] local, int nStack, Object[] stack)\n                 {\n-                    StringBuilder frame = new StringBuilder().append( \"    [FRAME:\" );\n-                    switch ( type )\n+                    StringBuilder frame = new StringBuilder().append(\"    [FRAME:\");\n+                    switch (type)\n                     {\n-                    case Opcodes.F_NEW:\n-                        frame.append( \"NEW\" );\n-                        break;\n-                    case Opcodes.F_FULL:\n-                        frame.append( \"FULL\" );\n-                        break;\n-                    case Opcodes.F_APPEND:\n-                        frame.append( \"APPEND\" );\n-                        break;\n-                    case Opcodes.F_CHOP:\n-                        frame.append( \"CHOP\" );\n-                        break;\n-                    case Opcodes.F_SAME:\n-                        frame.append( \"SAME\" );\n-                        break;\n-                    case Opcodes.F_SAME1:\n-                        frame.append( \"SAME1\" );\n-                        break;\n-                    default:\n-                        frame.append( type );\n+                        case Opcodes.F_NEW:\n+                            frame.append(\"NEW\");\n+                            break;\n+                        case Opcodes.F_FULL:\n+                            frame.append(\"FULL\");\n+                            break;\n+                        case Opcodes.F_APPEND:\n+                            frame.append(\"APPEND\");\n+                            break;\n+                        case Opcodes.F_CHOP:\n+                            frame.append(\"CHOP\");\n+                            break;\n+                        case Opcodes.F_SAME:\n+                            frame.append(\"SAME\");\n+                            break;\n+                        case Opcodes.F_SAME1:\n+                            frame.append(\"SAME1\");\n+                            break;\n+                        default:\n+                            frame.append(type);\n                     }\n-                    frame.append( \", \" ).append( nLocal ).append( \" locals: [\" );\n+                    frame.append(\", \").append(nLocal).append(\" locals: [\");\n                     String prefix = \"\";\n-                    for ( int i = 0; i < nLocal; i++ )\n+                    for (int i = 0; i < nLocal; i++)\n                     {\n-                        frame.append( prefix );\n-                        if ( local[i] instanceof String )\n+                        frame.append(prefix);\n+                        if (local[i] instanceof String)\n                         {\n-                            frame.append( local[i] );\n-                        }\n-                        else if ( local[i] == Opcodes.TOP )\n+                            frame.append(local[i]);\n+                        } else if (local[i] == Opcodes.TOP)\n                         {\n-                            frame.append( \"TOP\" );\n-                        }\n-                        else if ( local[i] == Opcodes.INTEGER )\n+                            frame.append(\"TOP\");\n+                        } else if (local[i] == Opcodes.INTEGER)\n                         {\n-                            frame.append( \"INTEGER\" );\n-                        }\n-                        else if ( local[i] == Opcodes.FLOAT )\n+                            frame.append(\"INTEGER\");\n+                        } else if (local[i] == Opcodes.FLOAT)\n                         {\n-                            frame.append( \"FLOAT\" );\n-                        }\n-                        else if ( local[i] == Opcodes.DOUBLE )\n+                            frame.append(\"FLOAT\");\n+                        } else if (local[i] == Opcodes.DOUBLE)\n                         {\n-                            frame.append( \"DOUBLE\" );\n-                        }\n-                        else if ( local[i] == Opcodes.LONG )\n+                            frame.append(\"DOUBLE\");\n+                        } else if (local[i] == Opcodes.LONG)\n                         {\n-                            frame.append( \"LONG\" );\n-                        }\n-                        else if ( local[i] == Opcodes.NULL )\n+                            frame.append(\"LONG\");\n+                        } else if (local[i] == Opcodes.NULL)\n                         {\n-                            frame.append( \"NULL\" );\n-                        }\n-                        else if ( local[i] == Opcodes.UNINITIALIZED_THIS )\n+                            frame.append(\"NULL\");\n+                        } else if (local[i] == Opcodes.UNINITIALIZED_THIS)\n                         {\n-                            frame.append( \"UNINITIALIZED_THIS\" );\n-                        }\n-                        else\n+                            frame.append(\"UNINITIALIZED_THIS\");\n+                        } else\n                         {\n-                            frame.append( local[i] );\n+                            frame.append(local[i]);\n                         }\n                         prefix = \", \";\n                     }\n-                    frame.append( \"], \" ).append( nStack ).append( \" items on stack: [\" );\n+                    frame.append(\"], \").append(nStack).append(\" items on stack: [\");\n                     prefix = \"\";\n-                    for ( int i = 0; i < nStack; i++ )\n+                    for (int i = 0; i < nStack; i++)\n                     {\n-                        frame.append( prefix ).append( stack[i] );\n+                        frame.append(prefix).append(stack[i]);\n                         prefix = \", \";\n                     }\n-                    println( frame.append( ']' ) );\n+                    println(frame.append(']'));\n                 }\n \n                 @Override\n-                public void visitInsn( int opcode )\n+                public void visitInsn(int opcode)\n                 {\n-                    printf( \"    @%03d: %s%n\", offset, opcode( opcode ) );\n+                    printf(\"    @%03d: %s%n\", offset, opcode(opcode));\n                     offset += 1;\n                 }\n \n                 @Override\n-                public void visitIntInsn( int opcode, int operand )\n+                public void visitIntInsn(int opcode, int operand)\n                 {\n-                    printf( \"    @%03d: %s %d%n\", offset, opcode( opcode ), operand );\n+                    printf(\"    @%03d: %s %d%n\", offset, opcode(opcode), operand);\n                     offset += opcode == Opcodes.SIPUSH ? 3 : 2;\n                 }\n \n                 @Override\n-                public void visitVarInsn( int opcode, int var )\n+                public void visitVarInsn(int opcode, int var)\n                 {\n-                    printf( \"    @%03d: %s var:%d%n\", offset, opcode( opcode ), var );\n+                    printf(\"    @%03d: %s var:%d%n\", offset, opcode(opcode), var);\n                     // guessing the most efficient encoding was used:\n-                    if ( var <= 0x3 )\n+                    if (var <= 0x3)\n                     {\n                         offset += 1;\n-                    }\n-                    else if ( var <= 0xFF )\n+                    } else if (var <= 0xFF)\n                     {\n                         offset += 2;\n-                    }\n-                    else\n+                    } else\n                     {\n                         offset += 4;\n                     }\n                 }\n \n                 @Override\n-                public void visitTypeInsn( int opcode, String type )\n+                public void visitTypeInsn(int opcode, String type)\n                 {\n-                    printf( \"    @%03d: %s %s%n\", offset, opcode( opcode ), type );\n+                    printf(\"    @%03d: %s %s%n\", offset, opcode(opcode), type);\n                     offset += 3;\n                 }\n \n                 @Override\n-                public void visitFieldInsn( int opcode, String owner, String name, String desc )\n+                public void visitFieldInsn(int opcode, String owner, String name, String desc)\n                 {\n-                    printf( \"    @%03d: %s %s.%s:%s%n\", offset, opcode( opcode ), owner, name, desc );\n+                    printf(\"    @%03d: %s %s.%s:%s%n\", offset, opcode(opcode), owner, name, desc);\n                     offset += 3;\n                 }\n \n                 @Override\n-                public void visitMethodInsn( int opcode, String owner, String name, String desc, boolean itf )\n+                public void visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf)\n                 {\n-                    printf( \"    @%03d: %s %s.%s%s%n\", offset, opcode( opcode ), owner, name, desc );\n+                    printf(\"    @%03d: %s %s.%s%s%n\", offset, opcode(opcode), owner, name, desc);\n                     offset += opcode == Opcodes.INVOKEINTERFACE ? 5 : 3;\n                 }\n \n                 @Override\n-                public void visitInvokeDynamicInsn( String name, String desc, Handle bsm, Object... bsmArgs )\n+                public void visitInvokeDynamicInsn(String name, String desc, Handle bsm, Object... bsmArgs)\n                 {\n-                    printf( \"    @%03d: InvokeDynamic %s%s / bsm:%s%s%n\", offset, name, desc, bsm, Arrays.toString( bsmArgs ) );\n+                    printf(\"    @%03d: InvokeDynamic %s%s / bsm:%s%s%n\", offset, name, desc, bsm, Arrays.toString(bsmArgs));\n                     offset += 5;\n                 }\n \n                 @Override\n-                public void visitJumpInsn( int opcode, Label label )\n+                public void visitJumpInsn(int opcode, Label label)\n                 {\n-                    printf( \"    @%03d: %s %s%n\", offset, opcode( opcode ), label );\n+                    printf(\"    @%03d: %s %s%n\", offset, opcode(opcode), label);\n                     offset += 3; // TODO: how do we tell if a wide (+=5) instruction (GOTO_W=200, JSR_W=201) was used?\n                     // wide instructions get simplified to their basic counterpart, but are used for long jumps\n                 }\n \n                 @Override\n-                public void visitLabel( Label label )\n+                public void visitLabel(Label label)\n                 {\n-                    printf( \"   %s:%n\", label );\n+                    printf(\"   %s:%n\", label);\n                 }\n \n                 @Override\n-                public void visitLdcInsn( Object cst )\n+                public void visitLdcInsn(Object cst)\n                 {\n-                    printf( \"    @%03d: LDC %s%n\", offset, cst );\n+                    printf(\"    @%03d: LDC %s%n\", offset, cst);\n                     offset += 2; // TODO: how do we tell if the WIDE instruction prefix (+=3) was used?\n                     // we don't know index of the constant in the pool, wide instructions are used for high indexes\n                 }\n \n                 @Override\n-                public void visitIincInsn( int var, int increment )\n+                public void visitIincInsn(int var, int increment)\n                 {\n-                    printf( \"    @%03d: IINC %d += %d%n\", offset, var, increment );\n+                    printf(\"    @%03d: IINC %d += %d%n\", offset, var, increment);\n                     // guessing the most efficient encoding was used:\n-                    if ( var <= 0xFF && increment <= 0xFF )\n+                    if (var <= 0xFF && increment <= 0xFF)\n                     {\n                         offset += 3;\n-                    }\n-                    else\n+                    } else\n                     {\n                         offset += 6;\n                     }\n                 }\n \n                 @Override\n-                public void visitTableSwitchInsn( int min, int max, Label dflt, Label... labels )\n+                public void visitTableSwitchInsn(int min, int max, Label dflt, Label... labels)\n                 {\n-                    printf( \"    @%03d: TABLE_SWITCH(min=%d, max=%d)%n    {%n\", offset, min, max );\n-                    for ( int i = 0, val = min; i < labels.length; i++, val++ )\n+                    printf(\"    @%03d: TABLE_SWITCH(min=%d, max=%d)%n    {%n\", offset, min, max);\n+                    for (int i = 0, val = min; i < labels.length; i++, val++)\n                     {\n-                        printf( \"      case %d goto %s%n\", val, labels[i] );\n+                        printf(\"      case %d goto %s%n\", val, labels[i]);\n                     }\n-                    printf( \"      default goto %s%n    }%n\", dflt );\n+                    printf(\"      default goto %s%n    }%n\", dflt);\n                     offset += 4 - (offset & 3); // padding bytes, table starts at aligned offset\n                     offset += 12; // default, min, max\n                     offset += 4 * labels.length; // table of offsets\n                 }\n \n                 @Override\n-                public void visitLookupSwitchInsn( Label dflt, int[] keys, Label[] labels )\n+                public void visitLookupSwitchInsn(Label dflt, int[] keys, Label[] labels)\n                 {\n-                    printf( \"    @%03d: LOOKUP_SWITCH%n    {%n\", offset );\n-                    for ( int i = 0; i < labels.length; i++ )\n+                    printf(\"    @%03d: LOOKUP_SWITCH%n    {%n\", offset);\n+                    for (int i = 0; i < labels.length; i++)\n                     {\n-                        printf( \"      case %d goto %s%n\", keys[i], labels[i] );\n+                        printf(\"      case %d goto %s%n\", keys[i], labels[i]);\n                     }\n-                    printf( \"      default goto %s%n    }%n\", dflt );\n+                    printf(\"      default goto %s%n    }%n\", dflt);\n                     offset += 4 - (offset & 3); // padding bytes, table starts at aligned offset\n                     offset += 8; // default, length\n                     offset += 8 * labels.length; // table of key+offset\n                 }\n \n                 @Override\n-                public void visitMultiANewArrayInsn( String desc, int dims )\n+                public void visitMultiANewArrayInsn(String desc, int dims)\n                 {\n-                    printf( \"    @%03d: MULTI_ANEW_ARRAY %s, dims:%d%n\", offset, desc, dims );\n+                    printf(\"    @%03d: MULTI_ANEW_ARRAY %s, dims:%d%n\", offset, desc, dims);\n                     offset += 4;\n                 }\n \n                 @Override\n-                public void visitTryCatchBlock( Label start, Label end, Label handler, String type )\n+                public void visitTryCatchBlock(Label start, Label end, Label handler, String type)\n                 {\n-                    printf( \"    [try/catch %s start@%s, end@%s, handler@%s]%n\", type, start, end, handler );\n+                    printf(\"    [try/catch %s start@%s, end@%s, handler@%s]%n\", type, start, end, handler);\n                 }\n \n                 @Override\n                 public void visitLocalVariable(\n-                        String name, String desc, String signature, Label start, Label end,\n-                        int index )\n+                  String name, String desc, String signature, Label start, Label end,\n+                  int index)\n                 {\n-                    printf( \"    [local %s:%s, from %s to %s @offset=%d]%n\", name, desc, start, end, index );\n+                    printf(\"    [local %s:%s, from %s to %s @offset=%d]%n\", name, desc, start, end, index);\n                 }\n \n                 @Override\n-                public void visitLineNumber( int line, Label start )\n+                public void visitLineNumber(int line, Label start)\n                 {\n-                    printf( \"    [line %d @ %s]%n\", line, start );\n+                    printf(\"    [line %d @ %s]%n\", line, start);\n                 }\n \n                 @Override\n                 public void visitEnd()\n                 {\n-                    println( \"  }\" );\n+                    println(\"  }\");\n                 }\n             };\n         }\n@@ -404,324 +394,324 @@ public interface ByteCodeVisitor\n         @Override\n         public void visitEnd()\n         {\n-            println( \"}\" );\n+            println(\"}\");\n         }\n \n-        private static String opcode( int opcode )\n+        private static String opcode(int opcode)\n         {\n-            switch ( opcode )\n+            switch (opcode)\n             {\n-            // visitInsn\n-            case Opcodes.NOP:\n-                return \"NOP\";\n-            case Opcodes.ACONST_NULL:\n-                return \"ACONST_NULL\";\n-            case Opcodes.ICONST_M1:\n-                return \"ICONST_M1\";\n-            case Opcodes.ICONST_0:\n-                return \"ICONST_0\";\n-            case Opcodes.ICONST_1:\n-                return \"ICONST_1\";\n-            case Opcodes.ICONST_2:\n-                return \"ICONST_2\";\n-            case Opcodes.ICONST_3:\n-                return \"ICONST_3\";\n-            case Opcodes.ICONST_4:\n-                return \"ICONST_4\";\n-            case Opcodes.ICONST_5:\n-                return \"ICONST_5\";\n-            case Opcodes.LCONST_0:\n-                return \"LCONST_0\";\n-            case Opcodes.LCONST_1:\n-                return \"LCONST_1\";\n-            case Opcodes.FCONST_0:\n-                return \"FCONST_0\";\n-            case Opcodes.FCONST_1:\n-                return \"FCONST_1\";\n-            case Opcodes.FCONST_2:\n-                return \"FCONST_2\";\n-            case Opcodes.DCONST_0:\n-                return \"DCONST_0\";\n-            case Opcodes.DCONST_1:\n-                return \"DCONST_1\";\n-            case Opcodes.IALOAD:\n-                return \"IALOAD\";\n-            case Opcodes.LALOAD:\n-                return \"LALOAD\";\n-            case Opcodes.FALOAD:\n-                return \"FALOAD\";\n-            case Opcodes.DALOAD:\n-                return \"DALOAD\";\n-            case Opcodes.AALOAD:\n-                return \"AALOAD\";\n-            case Opcodes.BALOAD:\n-                return \"BALOAD\";\n-            case Opcodes.CALOAD:\n-                return \"CALOAD\";\n-            case Opcodes.SALOAD:\n-                return \"SALOAD\";\n-            case Opcodes.IASTORE:\n-                return \"IASTORE\";\n-            case Opcodes.LASTORE:\n-                return \"LASTORE\";\n-            case Opcodes.FASTORE:\n-                return \"FASTORE\";\n-            case Opcodes.DASTORE:\n-                return \"DASTORE\";\n-            case Opcodes.AASTORE:\n-                return \"AASTORE\";\n-            case Opcodes.BASTORE:\n-                return \"BASTORE\";\n-            case Opcodes.CASTORE:\n-                return \"CASTORE\";\n-            case Opcodes.SASTORE:\n-                return \"SASTORE\";\n-            case Opcodes.POP:\n-                return \"POP\";\n-            case Opcodes.POP2:\n-                return \"POP2\";\n-            case Opcodes.DUP:\n-                return \"DUP\";\n-            case Opcodes.DUP_X1:\n-                return \"DUP_X1\";\n-            case Opcodes.DUP_X2:\n-                return \"DUP_X2\";\n-            case Opcodes.DUP2:\n-                return \"DUP2\";\n-            case Opcodes.DUP2_X1:\n-                return \"DUP2_X1\";\n-            case Opcodes.DUP2_X2:\n-                return \"DUP2_X2\";\n-            case Opcodes.SWAP:\n-                return \"SWAP\";\n-            case Opcodes.IADD:\n-                return \"IADD\";\n-            case Opcodes.LADD:\n-                return \"LADD\";\n-            case Opcodes.FADD:\n-                return \"FADD\";\n-            case Opcodes.DADD:\n-                return \"DADD\";\n-            case Opcodes.ISUB:\n-                return \"ISUB\";\n-            case Opcodes.LSUB:\n-                return \"LSUB\";\n-            case Opcodes.FSUB:\n-                return \"FSUB\";\n-            case Opcodes.DSUB:\n-                return \"DSUB\";\n-            case Opcodes.IMUL:\n-                return \"IMUL\";\n-            case Opcodes.LMUL:\n-                return \"LMUL\";\n-            case Opcodes.FMUL:\n-                return \"FMUL\";\n-            case Opcodes.DMUL:\n-                return \"DMUL\";\n-            case Opcodes.IDIV:\n-                return \"IDIV\";\n-            case Opcodes.LDIV:\n-                return \"LDIV\";\n-            case Opcodes.FDIV:\n-                return \"FDIV\";\n-            case Opcodes.DDIV:\n-                return \"DDIV\";\n-            case Opcodes.IREM:\n-                return \"IREM\";\n-            case Opcodes.LREM:\n-                return \"LREM\";\n-            case Opcodes.FREM:\n-                return \"FREM\";\n-            case Opcodes.DREM:\n-                return \"DREM\";\n-            case Opcodes.INEG:\n-                return \"INEG\";\n-            case Opcodes.LNEG:\n-                return \"LNEG\";\n-            case Opcodes.FNEG:\n-                return \"FNEG\";\n-            case Opcodes.DNEG:\n-                return \"DNEG\";\n-            case Opcodes.ISHL:\n-                return \"ISHL\";\n-            case Opcodes.LSHL:\n-                return \"LSHL\";\n-            case Opcodes.ISHR:\n-                return \"ISHR\";\n-            case Opcodes.LSHR:\n-                return \"LSHR\";\n-            case Opcodes.IUSHR:\n-                return \"IUSHR\";\n-            case Opcodes.LUSHR:\n-                return \"LUSHR\";\n-            case Opcodes.IAND:\n-                return \"IAND\";\n-            case Opcodes.LAND:\n-                return \"LAND\";\n-            case Opcodes.IOR:\n-                return \"IOR\";\n-            case Opcodes.LOR:\n-                return \"LOR\";\n-            case Opcodes.IXOR:\n-                return \"IXOR\";\n-            case Opcodes.LXOR:\n-                return \"LXOR\";\n-            case Opcodes.I2L:\n-                return \"I2L\";\n-            case Opcodes.I2F:\n-                return \"I2F\";\n-            case Opcodes.I2D:\n-                return \"I2D\";\n-            case Opcodes.L2I:\n-                return \"L2I\";\n-            case Opcodes.L2F:\n-                return \"L2F\";\n-            case Opcodes.L2D:\n-                return \"L2D\";\n-            case Opcodes.F2I:\n-                return \"F2I\";\n-            case Opcodes.F2L:\n-                return \"F2L\";\n-            case Opcodes.F2D:\n-                return \"F2D\";\n-            case Opcodes.D2I:\n-                return \"D2I\";\n-            case Opcodes.D2L:\n-                return \"D2L\";\n-            case Opcodes.D2F:\n-                return \"D2F\";\n-            case Opcodes.I2B:\n-                return \"I2B\";\n-            case Opcodes.I2C:\n-                return \"I2C\";\n-            case Opcodes.I2S:\n-                return \"I2S\";\n-            case Opcodes.LCMP:\n-                return \"LCMP\";\n-            case Opcodes.FCMPL:\n-                return \"FCMPL\";\n-            case Opcodes.FCMPG:\n-                return \"FCMPG\";\n-            case Opcodes.DCMPL:\n-                return \"DCMPL\";\n-            case Opcodes.DCMPG:\n-                return \"DCMPG\";\n-            case Opcodes.IRETURN:\n-                return \"IRETURN\";\n-            case Opcodes.LRETURN:\n-                return \"LRETURN\";\n-            case Opcodes.FRETURN:\n-                return \"FRETURN\";\n-            case Opcodes.DRETURN:\n-                return \"DRETURN\";\n-            case Opcodes.ARETURN:\n-                return \"ARETURN\";\n-            case Opcodes.RETURN:\n-                return \"RETURN\";\n-            case Opcodes.ARRAYLENGTH:\n-                return \"ARRAYLENGTH\";\n-            case Opcodes.ATHROW:\n-                return \"ATHROW\";\n-            case Opcodes.MONITORENTER:\n-                return \"MONITORENTER\";\n-            case Opcodes.MONITOREXIT:\n-                return \"MONITOREXIT\";\n-            // visitIntInsn\n-            case Opcodes.BIPUSH:\n-                return \"BIPUSH\";\n-            case Opcodes.SIPUSH:\n-                return \"SIPUSH\";\n-            case Opcodes.NEWARRAY:\n-                return \"NEWARRAY\";\n-            // visitVarInsn\n-            case Opcodes.ILOAD:\n-                return \"ILOAD\";\n-            case Opcodes.LLOAD:\n-                return \"LLOAD\";\n-            case Opcodes.FLOAD:\n-                return \"FLOAD\";\n-            case Opcodes.DLOAD:\n-                return \"DLOAD\";\n-            case Opcodes.ALOAD:\n-                return \"ALOAD\";\n-            case Opcodes.ISTORE:\n-                return \"ISTORE\";\n-            case Opcodes.LSTORE:\n-                return \"LSTORE\";\n-            case Opcodes.FSTORE:\n-                return \"FSTORE\";\n-            case Opcodes.DSTORE:\n-                return \"DSTORE\";\n-            case Opcodes.ASTORE:\n-                return \"ASTORE\";\n-            case Opcodes.RET:\n-                return \"RET\";\n-            // visitTypeInsn\n-            case Opcodes.NEW:\n-                return \"NEW\";\n-            case Opcodes.ANEWARRAY:\n-                return \"ANEWARRAY\";\n-            case Opcodes.CHECKCAST:\n-                return \"CHECKCAST\";\n-            case Opcodes.INSTANCEOF:\n-                return \"INSTANCEOF\";\n-            // visitFieldInsn\n-            case Opcodes.GETSTATIC:\n-                return \"GETSTATIC\";\n-            case Opcodes.PUTSTATIC:\n-                return \"PUTSTATIC\";\n-            case Opcodes.GETFIELD:\n-                return \"GETFIELD\";\n-            case Opcodes.PUTFIELD:\n-                return \"PUTFIELD\";\n-            // visitMethodInsn\n-            case Opcodes.INVOKEVIRTUAL:\n-                return \"INVOKEVIRTUAL\";\n-            case Opcodes.INVOKESPECIAL:\n-                return \"INVOKESPECIAL\";\n-            case Opcodes.INVOKESTATIC:\n-                return \"INVOKESTATIC\";\n-            case Opcodes.INVOKEINTERFACE:\n-                return \"INVOKEINTERFACE\";\n-            // visitJumpInsn\n-            case Opcodes.IFEQ:\n-                return \"IFEQ\";\n-            case Opcodes.IFNE:\n-                return \"IFNE\";\n-            case Opcodes.IFLT:\n-                return \"IFLT\";\n-            case Opcodes.IFGE:\n-                return \"IFGE\";\n-            case Opcodes.IFGT:\n-                return \"IFGT\";\n-            case Opcodes.IFLE:\n-                return \"IFLE\";\n-            case Opcodes.IF_ICMPEQ:\n-                return \"IF_ICMPEQ\";\n-            case Opcodes.IF_ICMPNE:\n-                return \"IF_ICMPNE\";\n-            case Opcodes.IF_ICMPLT:\n-                return \"IF_ICMPLT\";\n-            case Opcodes.IF_ICMPGE:\n-                return \"IF_ICMPGE\";\n-            case Opcodes.IF_ICMPGT:\n-                return \"IF_ICMPGT\";\n-            case Opcodes.IF_ICMPLE:\n-                return \"IF_ICMPLE\";\n-            case Opcodes.IF_ACMPEQ:\n-                return \"IF_ACMPEQ\";\n-            case Opcodes.IF_ACMPNE:\n-                return \"IF_ACMPNE\";\n-            case Opcodes.GOTO:\n-                return \"GOTO\";\n-            case Opcodes.JSR:\n-                return \"JSR\";\n-            case Opcodes.IFNULL:\n-                return \"IFNULL\";\n-            case Opcodes.IFNONNULL:\n-                return \"IFNONNULL\";\n-            default:\n-                throw new IllegalArgumentException( \"unknown opcode: \" + opcode );\n+                // visitInsn\n+                case Opcodes.NOP:\n+                    return \"NOP\";\n+                case Opcodes.ACONST_NULL:\n+                    return \"ACONST_NULL\";\n+                case Opcodes.ICONST_M1:\n+                    return \"ICONST_M1\";\n+                case Opcodes.ICONST_0:\n+                    return \"ICONST_0\";\n+                case Opcodes.ICONST_1:\n+                    return \"ICONST_1\";\n+                case Opcodes.ICONST_2:\n+                    return \"ICONST_2\";\n+                case Opcodes.ICONST_3:\n+                    return \"ICONST_3\";\n+                case Opcodes.ICONST_4:\n+                    return \"ICONST_4\";\n+                case Opcodes.ICONST_5:\n+                    return \"ICONST_5\";\n+                case Opcodes.LCONST_0:\n+                    return \"LCONST_0\";\n+                case Opcodes.LCONST_1:\n+                    return \"LCONST_1\";\n+                case Opcodes.FCONST_0:\n+                    return \"FCONST_0\";\n+                case Opcodes.FCONST_1:\n+                    return \"FCONST_1\";\n+                case Opcodes.FCONST_2:\n+                    return \"FCONST_2\";\n+                case Opcodes.DCONST_0:\n+                    return \"DCONST_0\";\n+                case Opcodes.DCONST_1:\n+                    return \"DCONST_1\";\n+                case Opcodes.IALOAD:\n+                    return \"IALOAD\";\n+                case Opcodes.LALOAD:\n+                    return \"LALOAD\";\n+                case Opcodes.FALOAD:\n+                    return \"FALOAD\";\n+                case Opcodes.DALOAD:\n+                    return \"DALOAD\";\n+                case Opcodes.AALOAD:\n+                    return \"AALOAD\";\n+                case Opcodes.BALOAD:\n+                    return \"BALOAD\";\n+                case Opcodes.CALOAD:\n+                    return \"CALOAD\";\n+                case Opcodes.SALOAD:\n+                    return \"SALOAD\";\n+                case Opcodes.IASTORE:\n+                    return \"IASTORE\";\n+                case Opcodes.LASTORE:\n+                    return \"LASTORE\";\n+                case Opcodes.FASTORE:\n+                    return \"FASTORE\";\n+                case Opcodes.DASTORE:\n+                    return \"DASTORE\";\n+                case Opcodes.AASTORE:\n+                    return \"AASTORE\";\n+                case Opcodes.BASTORE:\n+                    return \"BASTORE\";\n+                case Opcodes.CASTORE:\n+                    return \"CASTORE\";\n+                case Opcodes.SASTORE:\n+                    return \"SASTORE\";\n+                case Opcodes.POP:\n+                    return \"POP\";\n+                case Opcodes.POP2:\n+                    return \"POP2\";\n+                case Opcodes.DUP:\n+                    return \"DUP\";\n+                case Opcodes.DUP_X1:\n+                    return \"DUP_X1\";\n+                case Opcodes.DUP_X2:\n+                    return \"DUP_X2\";\n+                case Opcodes.DUP2:\n+                    return \"DUP2\";\n+                case Opcodes.DUP2_X1:\n+                    return \"DUP2_X1\";\n+                case Opcodes.DUP2_X2:\n+                    return \"DUP2_X2\";\n+                case Opcodes.SWAP:\n+                    return \"SWAP\";\n+                case Opcodes.IADD:\n+                    return \"IADD\";\n+                case Opcodes.LADD:\n+                    return \"LADD\";\n+                case Opcodes.FADD:\n+                    return \"FADD\";\n+                case Opcodes.DADD:\n+                    return \"DADD\";\n+                case Opcodes.ISUB:\n+                    return \"ISUB\";\n+                case Opcodes.LSUB:\n+                    return \"LSUB\";\n+                case Opcodes.FSUB:\n+                    return \"FSUB\";\n+                case Opcodes.DSUB:\n+                    return \"DSUB\";\n+                case Opcodes.IMUL:\n+                    return \"IMUL\";\n+                case Opcodes.LMUL:\n+                    return \"LMUL\";\n+                case Opcodes.FMUL:\n+                    return \"FMUL\";\n+                case Opcodes.DMUL:\n+                    return \"DMUL\";\n+                case Opcodes.IDIV:\n+                    return \"IDIV\";\n+                case Opcodes.LDIV:\n+                    return \"LDIV\";\n+                case Opcodes.FDIV:\n+                    return \"FDIV\";\n+                case Opcodes.DDIV:\n+                    return \"DDIV\";\n+                case Opcodes.IREM:\n+                    return \"IREM\";\n+                case Opcodes.LREM:\n+                    return \"LREM\";\n+                case Opcodes.FREM:\n+                    return \"FREM\";\n+                case Opcodes.DREM:\n+                    return \"DREM\";\n+                case Opcodes.INEG:\n+                    return \"INEG\";\n+                case Opcodes.LNEG:\n+                    return \"LNEG\";\n+                case Opcodes.FNEG:\n+                    return \"FNEG\";\n+                case Opcodes.DNEG:\n+                    return \"DNEG\";\n+                case Opcodes.ISHL:\n+                    return \"ISHL\";\n+                case Opcodes.LSHL:\n+                    return \"LSHL\";\n+                case Opcodes.ISHR:\n+                    return \"ISHR\";\n+                case Opcodes.LSHR:\n+                    return \"LSHR\";\n+                case Opcodes.IUSHR:\n+                    return \"IUSHR\";\n+                case Opcodes.LUSHR:\n+                    return \"LUSHR\";\n+                case Opcodes.IAND:\n+                    return \"IAND\";\n+                case Opcodes.LAND:\n+                    return \"LAND\";\n+                case Opcodes.IOR:\n+                    return \"IOR\";\n+                case Opcodes.LOR:\n+                    return \"LOR\";\n+                case Opcodes.IXOR:\n+                    return \"IXOR\";\n+                case Opcodes.LXOR:\n+                    return \"LXOR\";\n+                case Opcodes.I2L:\n+                    return \"I2L\";\n+                case Opcodes.I2F:\n+                    return \"I2F\";\n+                case Opcodes.I2D:\n+                    return \"I2D\";\n+                case Opcodes.L2I:\n+                    return \"L2I\";\n+                case Opcodes.L2F:\n+                    return \"L2F\";\n+                case Opcodes.L2D:\n+                    return \"L2D\";\n+                case Opcodes.F2I:\n+                    return \"F2I\";\n+                case Opcodes.F2L:\n+                    return \"F2L\";\n+                case Opcodes.F2D:\n+                    return \"F2D\";\n+                case Opcodes.D2I:\n+                    return \"D2I\";\n+                case Opcodes.D2L:\n+                    return \"D2L\";\n+                case Opcodes.D2F:\n+                    return \"D2F\";\n+                case Opcodes.I2B:\n+                    return \"I2B\";\n+                case Opcodes.I2C:\n+                    return \"I2C\";\n+                case Opcodes.I2S:\n+                    return \"I2S\";\n+                case Opcodes.LCMP:\n+                    return \"LCMP\";\n+                case Opcodes.FCMPL:\n+                    return \"FCMPL\";\n+                case Opcodes.FCMPG:\n+                    return \"FCMPG\";\n+                case Opcodes.DCMPL:\n+                    return \"DCMPL\";\n+                case Opcodes.DCMPG:\n+                    return \"DCMPG\";\n+                case Opcodes.IRETURN:\n+                    return \"IRETURN\";\n+                case Opcodes.LRETURN:\n+                    return \"LRETURN\";\n+                case Opcodes.FRETURN:\n+                    return \"FRETURN\";\n+                case Opcodes.DRETURN:\n+                    return \"DRETURN\";\n+                case Opcodes.ARETURN:\n+                    return \"ARETURN\";\n+                case Opcodes.RETURN:\n+                    return \"RETURN\";\n+                case Opcodes.ARRAYLENGTH:\n+                    return \"ARRAYLENGTH\";\n+                case Opcodes.ATHROW:\n+                    return \"ATHROW\";\n+                case Opcodes.MONITORENTER:\n+                    return \"MONITORENTER\";\n+                case Opcodes.MONITOREXIT:\n+                    return \"MONITOREXIT\";\n+                // visitIntInsn\n+                case Opcodes.BIPUSH:\n+                    return \"BIPUSH\";\n+                case Opcodes.SIPUSH:\n+                    return \"SIPUSH\";\n+                case Opcodes.NEWARRAY:\n+                    return \"NEWARRAY\";\n+                // visitVarInsn\n+                case Opcodes.ILOAD:\n+                    return \"ILOAD\";\n+                case Opcodes.LLOAD:\n+                    return \"LLOAD\";\n+                case Opcodes.FLOAD:\n+                    return \"FLOAD\";\n+                case Opcodes.DLOAD:\n+                    return \"DLOAD\";\n+                case Opcodes.ALOAD:\n+                    return \"ALOAD\";\n+                case Opcodes.ISTORE:\n+                    return \"ISTORE\";\n+                case Opcodes.LSTORE:\n+                    return \"LSTORE\";\n+                case Opcodes.FSTORE:\n+                    return \"FSTORE\";\n+                case Opcodes.DSTORE:\n+                    return \"DSTORE\";\n+                case Opcodes.ASTORE:\n+                    return \"ASTORE\";\n+                case Opcodes.RET:\n+                    return \"RET\";\n+                // visitTypeInsn\n+                case Opcodes.NEW:\n+                    return \"NEW\";\n+                case Opcodes.ANEWARRAY:\n+                    return \"ANEWARRAY\";\n+                case Opcodes.CHECKCAST:\n+                    return \"CHECKCAST\";\n+                case Opcodes.INSTANCEOF:\n+                    return \"INSTANCEOF\";\n+                // visitFieldInsn\n+                case Opcodes.GETSTATIC:\n+                    return \"GETSTATIC\";\n+                case Opcodes.PUTSTATIC:\n+                    return \"PUTSTATIC\";\n+                case Opcodes.GETFIELD:\n+                    return \"GETFIELD\";\n+                case Opcodes.PUTFIELD:\n+                    return \"PUTFIELD\";\n+                // visitMethodInsn\n+                case Opcodes.INVOKEVIRTUAL:\n+                    return \"INVOKEVIRTUAL\";\n+                case Opcodes.INVOKESPECIAL:\n+                    return \"INVOKESPECIAL\";\n+                case Opcodes.INVOKESTATIC:\n+                    return \"INVOKESTATIC\";\n+                case Opcodes.INVOKEINTERFACE:\n+                    return \"INVOKEINTERFACE\";\n+                // visitJumpInsn\n+                case Opcodes.IFEQ:\n+                    return \"IFEQ\";\n+                case Opcodes.IFNE:\n+                    return \"IFNE\";\n+                case Opcodes.IFLT:\n+                    return \"IFLT\";\n+                case Opcodes.IFGE:\n+                    return \"IFGE\";\n+                case Opcodes.IFGT:\n+                    return \"IFGT\";\n+                case Opcodes.IFLE:\n+                    return \"IFLE\";\n+                case Opcodes.IF_ICMPEQ:\n+                    return \"IF_ICMPEQ\";\n+                case Opcodes.IF_ICMPNE:\n+                    return \"IF_ICMPNE\";\n+                case Opcodes.IF_ICMPLT:\n+                    return \"IF_ICMPLT\";\n+                case Opcodes.IF_ICMPGE:\n+                    return \"IF_ICMPGE\";\n+                case Opcodes.IF_ICMPGT:\n+                    return \"IF_ICMPGT\";\n+                case Opcodes.IF_ICMPLE:\n+                    return \"IF_ICMPLE\";\n+                case Opcodes.IF_ACMPEQ:\n+                    return \"IF_ACMPEQ\";\n+                case Opcodes.IF_ACMPNE:\n+                    return \"IF_ACMPNE\";\n+                case Opcodes.GOTO:\n+                    return \"GOTO\";\n+                case Opcodes.JSR:\n+                    return \"JSR\";\n+                case Opcodes.IFNULL:\n+                    return \"IFNULL\";\n+                case Opcodes.IFNONNULL:\n+                    return \"IFNONNULL\";\n+                default:\n+                    throw new IllegalArgumentException(\"unknown opcode: \" + opcode);\n             }\n         }\n     }\n",
            "diff_size": 458
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1124/ByteCodeVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1124/ByteCodeVisitor.java\nindex 3818819ec5f..e34b368f11f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1124/ByteCodeVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1124/ByteCodeVisitor.java\n@@ -725,4 +725,4 @@ public interface ByteCodeVisitor\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
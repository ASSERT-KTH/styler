{
    "project_name": "graphfoundation-ongdb",
    "error_id": "584",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/584/CompositeSuspendable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/584/CompositeSuspendable.java\nindex b318580b166..92d345c2ad1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/584/CompositeSuspendable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/584/CompositeSuspendable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.helper;\n \n import java.util.ArrayList;\n@@ -27,29 +28,29 @@ import org.neo4j.function.ThrowingConsumer;\n \n public class CompositeSuspendable implements Suspendable\n {\n-    private final List<Suspendable> suspendables = new ArrayList<>();\n-\n-    public void add( Suspendable suspendable )\n-    {\n-        suspendables.add( suspendable );\n-    }\n-\n-    @Override\n-    public void enable()\n-    {\n-        doOperation( Suspendable::enable, \"Enable\" );\n-    }\n-\n-    @Override\n-    public void disable()\n-    {\n-        doOperation( Suspendable::disable, \"Disable\" );\n-    }\n-\n-    private void doOperation( ThrowingConsumer<Suspendable,Throwable> operation, String description )\n-    {\n-        ErrorHandler.runAll( description, suspendables.stream()\n-                .map( (Function<Suspendable,ErrorHandler.ThrowingRunnable>) suspendable -> () -> operation.accept( suspendable ) )\n-                .toArray( ErrorHandler.ThrowingRunnable[]::new ) );\n-    }\n+  private final List<Suspendable> suspendables = new ArrayList<>();\n+\n+  public void add(Suspendable suspendable)\n+  {\n+    suspendables.add(suspendable);\n+  }\n+\n+  @Override\n+  public void enable()\n+  {\n+    doOperation(Suspendable::enable, \"Enable\");\n+  }\n+\n+  @Override\n+  public void disable()\n+  {\n+    doOperation(Suspendable::disable, \"Disable\");\n+  }\n+\n+  private void doOperation(ThrowingConsumer<Suspendable, Throwable> operation, String description)\n+  {\n+    ErrorHandler.runAll(description, suspendables.stream()\n+        .map((Function<Suspendable, ErrorHandler.ThrowingRunnable>) suspendable -> () -> operation.accept(suspendable))\n+        .toArray(ErrorHandler.ThrowingRunnable[]::new));\n+  }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
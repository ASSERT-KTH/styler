{
    "project_name": "neo4j-neo4j",
    "error_id": "279",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "174",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "215",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/279/Readables.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/279/Readables.java\nindex 66c766ffc0a..e7b4d5fee43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/279/Readables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/279/Readables.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import java.io.IOException;\n@@ -45,7 +46,7 @@ import static org.neo4j.csv.reader.CharReadable.EMPTY;\n \n /**\n  * Means of instantiating common {@link CharReadable} instances.\n- *\n+ * <p>\n  * There are support for compressed files as well for those methods accepting a {@link Path} argument.\n  * <ol>\n  * <li>ZIP: is both an archive and a compression format. In many cases the order of files\n@@ -59,63 +60,63 @@ public class Readables\n {\n     private Readables()\n     {\n-        throw new AssertionError( \"No instances allowed\" );\n+        throw new AssertionError(\"No instances allowed\");\n     }\n \n-    public static CharReadable wrap( final InputStream stream, final String sourceName, Charset charset )\n-            throws IOException\n+    public static CharReadable wrap(final InputStream stream, final String sourceName, Charset charset)\n+      throws IOException\n     {\n-        return wrap( stream, sourceName, charset, 0 );\n+        return wrap(stream, sourceName, charset, 0);\n     }\n \n     /**\n      * Wraps a {@link InputStream} in a {@link CharReadable}.\n      *\n-     * @param stream {@link Reader} to wrap.\n+     * @param stream     {@link Reader} to wrap.\n      * @param sourceName name or description of the source of the stream.\n-     * @param charset {@link Charset} to use for reading.\n-     * @param length total number of bytes provided by the reader.\n+     * @param charset    {@link Charset} to use for reading.\n+     * @param length     total number of bytes provided by the reader.\n      * @return a {@link CharReadable} for the {@link Reader}.\n      * @throws IOException on I/O error.\n      */\n-    public static CharReadable wrap( final InputStream stream, final String sourceName, Charset charset, long length )\n-            throws IOException\n+    public static CharReadable wrap(final InputStream stream, final String sourceName, Charset charset, long length)\n+      throws IOException\n     {\n         byte[] bytes = new byte[Magic.longest()];\n-        PushbackInputStream pushbackStream = new PushbackInputStream( stream, bytes.length );\n+        PushbackInputStream pushbackStream = new PushbackInputStream(stream, bytes.length);\n         Charset usedCharset = charset;\n-        int read = stream.read( bytes );\n-        if ( read >= 0 )\n+        int read = stream.read(bytes);\n+        if (read >= 0)\n         {\n-            bytes = read < bytes.length ? Arrays.copyOf( bytes, read ) : bytes;\n-            Magic magic = Magic.of( bytes );\n+            bytes = read < bytes.length ? Arrays.copyOf(bytes, read) : bytes;\n+            Magic magic = Magic.of(bytes);\n             int excessiveBytes = read;\n-            if ( magic.impliesEncoding() )\n+            if (magic.impliesEncoding())\n             {\n                 // Unread the diff between the BOM and the longest magic we gathered bytes for\n                 excessiveBytes -= magic.length();\n                 usedCharset = magic.encoding();\n             }\n-            pushbackStream.unread( bytes, read - excessiveBytes, excessiveBytes );\n+            pushbackStream.unread(bytes, read - excessiveBytes, excessiveBytes);\n         }\n-        return wrap( new InputStreamReader( pushbackStream, usedCharset )\n+        return wrap(new InputStreamReader(pushbackStream, usedCharset)\n         {\n             @Override\n             public String toString()\n             {\n                 return sourceName;\n             }\n-        }, length );\n+        }, length);\n     }\n \n-    public static CharReadable wrap( String sourceDescription, String data )\n+    public static CharReadable wrap(String sourceDescription, String data)\n     {\n-        return wrap( sourceDescription, new StringReader( data ), data.length() );\n+        return wrap(sourceDescription, new StringReader(data), data.length());\n     }\n \n-    public static CharReadable wrap( String data )\n+    public static CharReadable wrap(String data)\n     {\n-        return wrap( new StringReader( data ), data.length() );\n+        return wrap(new StringReader(data), data.length());\n     }\n \n     /**\n@@ -127,9 +128,9 @@ public class Readables\n      * @param length total number of bytes provided by the reader.\n      * @return a {@link CharReadable} for the {@link Reader}.\n      */\n-    public static CharReadable wrap( Reader reader, long length )\n+    public static CharReadable wrap(Reader reader, long length)\n     {\n-        return wrap( reader.toString(), reader, length );\n+        return wrap(reader.toString(), reader, length);\n     }\n \n     /**\n@@ -140,45 +141,44 @@ public class Readables\n      * @param length total number of bytes provided by the reader.\n      * @return a {@link CharReadable} for the {@link Reader}.\n      */\n-    public static CharReadable wrap( String sourceDescription, Reader reader, long length )\n+    public static CharReadable wrap(String sourceDescription, Reader reader, long length)\n     {\n-        return new WrappedCharReadable( length, reader, sourceDescription );\n+        return new WrappedCharReadable(length, reader, sourceDescription);\n     }\n \n-    private static class FromFile implements IOFunction<Path,CharReadable>\n+    private static class FromFile implements IOFunction<Path, CharReadable>\n     {\n         private final Charset charset;\n \n-        FromFile( Charset charset )\n+        FromFile(Charset charset)\n         {\n             this.charset = charset;\n         }\n \n         @Override\n-        public CharReadable apply( final Path path ) throws IOException\n+        public CharReadable apply(final Path path) throws IOException\n         {\n-            Magic magic = Magic.of( path );\n-            if ( magic == Magic.ZIP )\n+            Magic magic = Magic.of(path);\n+            if (magic == Magic.ZIP)\n             {   // ZIP file\n-                ZipFile zipFile = new ZipFile( path.toFile() );\n-                ZipEntry entry = getSingleSuitableEntry( zipFile );\n-                return wrap( new InputStreamReader( zipFile.getInputStream( entry ), charset )\n+                ZipFile zipFile = new ZipFile(path.toFile());\n+                ZipEntry entry = getSingleSuitableEntry(zipFile);\n+                return wrap(new InputStreamReader(zipFile.getInputStream(entry), charset)\n                 {\n                     @Override\n                     public String toString()\n                     {\n                         return path.toAbsolutePath().toString();\n                     }\n-                }, entry.getSize() );\n-            }\n-            else if ( magic == Magic.GZIP )\n+                }, entry.getSize());\n+            } else if (magic == Magic.GZIP)\n             {   // GZIP file. GZIP isn't an archive like ZIP, so this is purely data that is compressed.\n                 // Although a very common way of compressing with GZIP is to use TAR which can combine many\n                 // files into one blob, which is then compressed. If that's the case then\n                 // the data will look like garbage and the reader will fail for whatever it will be used for.\n                 // TODO add tar support\n                 LongSupplier[] bytesReadFromCompressedSource = new LongSupplier[1];\n-                GZIPInputStream zipStream = new GZIPInputStream( Files.newInputStream( path ) )\n+                GZIPInputStream zipStream = new GZIPInputStream(Files.newInputStream(path))\n                 {\n                     {\n                         // Access GZIPInputStream's internal Inflater instance and make number of bytes read available\n@@ -186,7 +186,7 @@ public class Readables\n                         bytesReadFromCompressedSource[0] = inf::getBytesRead;\n                     }\n                 };\n-                InputStreamReader reader = new InputStreamReader( zipStream, charset )\n+                InputStreamReader reader = new InputStreamReader(zipStream, charset)\n                 {\n                     @Override\n                     public String toString()\n@@ -197,8 +197,8 @@ public class Readables\n                 // For GZIP there's no reliable way of getting the decompressed file size w/o decompressing the whole file,\n                 // therefore this compression ratio estimation mechanic is put in place such that at any given time the reader\n                 // can be queried about its observed compression ratio and the longer the reader goes the more accurate it gets.\n-                long compressedFileLength = Files.size( path );\n-                return new WrappedCharReadable( compressedFileLength, reader, path.toAbsolutePath().toString() )\n+                long compressedFileLength = Files.size(path);\n+                return new WrappedCharReadable(compressedFileLength, reader, path.toAbsolutePath().toString())\n                 {\n                     @Override\n                     public float compressionRatio()\n@@ -208,94 +208,96 @@ public class Readables\n                         return (float) ((double) compressedPosition / decompressedPosition);\n                     }\n                 };\n-            }\n-            else\n+            } else\n             {\n-                InputStream in = Files.newInputStream( path );\n+                InputStream in = Files.newInputStream(path);\n                 Charset usedCharset = this.charset;\n-                if ( magic.impliesEncoding() )\n+                if (magic.impliesEncoding())\n                 {\n                     // Read (and skip) the magic (BOM in this case) from the file we're returning out\n-                    long skip = in.skip( magic.length() );\n-                    if ( skip != magic.length() )\n+                    long skip = in.skip(magic.length());\n+                    if (skip != magic.length())\n                     {\n-                        throw new IOException( \"Unable to skip \" + magic.length() + \" bytes, only able to skip \" + skip + \" bytes.\" );\n+                        throw new IOException(\"Unable to skip \" + magic.length() + \" bytes, only able to skip \" + skip + \" bytes.\");\n                     }\n                     usedCharset = magic.encoding();\n                 }\n-                return wrap( new InputStreamReader( in, usedCharset )\n+                return wrap(new InputStreamReader(in, usedCharset)\n                 {\n                     @Override\n                     public String toString()\n                     {\n                         return path.toAbsolutePath().toString();\n                     }\n-                }, Files.size( path ) );\n+                }, Files.size(path));\n             }\n         }\n \n-        private static ZipEntry getSingleSuitableEntry( ZipFile zipFile ) throws IOException\n+        private static ZipEntry getSingleSuitableEntry(ZipFile zipFile) throws IOException\n         {\n             List<String> unsuitableEntries = new ArrayList<>();\n             Enumeration<? extends ZipEntry> enumeration = zipFile.entries();\n             ZipEntry found = null;\n-            while ( enumeration.hasMoreElements() )\n+            while (enumeration.hasMoreElements())\n             {\n                 ZipEntry entry = enumeration.nextElement();\n-                if ( entry.isDirectory() || invalidZipEntry( entry.getName() ) )\n+                if (entry.isDirectory() || invalidZipEntry(entry.getName()))\n                 {\n-                    unsuitableEntries.add( entry.getName() );\n+                    unsuitableEntries.add(entry.getName());\n                     continue;\n                 }\n \n-                if ( found != null )\n+                if (found != null)\n                 {\n-                    throw new IOException( \"Multiple suitable files found in zip file \" + zipFile.getName() +\n-                            \", at least \" + found.getName() + \" and \" + entry.getName() +\n-                            \". Only a single file per zip file is supported\" );\n+                    throw new IOException(\"Multiple suitable files found in zip file \" + zipFile.getName() +\n+                      \", at least \" + found.getName() + \" and \" + entry.getName() +\n+                      \". Only a single file per zip file is supported\");\n                 }\n                 found = entry;\n             }\n \n-            if ( found == null )\n+            if (found == null)\n             {\n-                throw new IOException( \"No suitable file found in zip file \" + zipFile.getName() + \".\" +\n-                        (!unsuitableEntries.isEmpty() ?\n-                                \" Although found these unsuitable entries \" + unsuitableEntries : \"\" ) );\n+                throw new IOException(\"No suitable file found in zip file \" + zipFile.getName() + \".\" +\n+                  (!unsuitableEntries.isEmpty() ?\n+                    \" Although found these unsuitable entries \" + unsuitableEntries : \"\"));\n             }\n             return found;\n         }\n     }\n \n-    private static boolean invalidZipEntry( String name )\n+    private static boolean invalidZipEntry(String name)\n     {\n-        return name.contains( \"__MACOSX\" ) ||\n-               name.startsWith( \".\" ) ||\n-               name.contains( \"/.\" );\n+        return name.contains(\"__MACOSX\") ||\n+          name.startsWith(\".\") ||\n+          name.contains(\"/.\");\n     }\n \n-    public static RawIterator<CharReadable,IOException> individualFiles( Charset charset, Path... files )\n+    public static RawIterator<CharReadable, IOException> individualFiles(Charset charset, Path... files)\n     {\n-        return iterator( new FromFile( charset ), files );\n+        return iterator(new FromFile(charset), files);\n     }\n \n-    public static CharReadable files( Charset charset, Path... files ) throws IOException\n+    public static CharReadable files(Charset charset, Path... files) throws IOException\n     {\n-        IOFunction<Path,CharReadable> opener = new FromFile( charset );\n-        switch ( files.length )\n+        IOFunction<Path, CharReadable> opener = new FromFile(charset);\n+        switch (files.length)\n         {\n-        case 0:  return EMPTY;\n-        case 1:  return opener.apply( files[0] );\n-        default: return new MultiReadable( iterator( opener, files ) );\n+            case 0:\n+                return EMPTY;\n+            case 1:\n+                return opener.apply(files[0]);\n+            default:\n+                return new MultiReadable(iterator(opener, files));\n         }\n     }\n \n     @SafeVarargs\n-    public static <IN,OUT> RawIterator<OUT,IOException> iterator( ThrowingFunction<IN,OUT,IOException> converter, IN... items )\n+    public static <IN, OUT> RawIterator<OUT, IOException> iterator(ThrowingFunction<IN, OUT, IOException> converter, IN... items)\n     {\n-        if ( items.length == 0 )\n+        if (items.length == 0)\n         {\n-            throw new IllegalStateException( \"No source items specified\" );\n+            throw new IllegalStateException(\"No source items specified\");\n         }\n \n         return new RawIterator<>()\n@@ -311,11 +313,11 @@ public class Readables\n             @Override\n             public OUT next() throws IOException\n             {\n-                if ( !hasNext() )\n+                if (!hasNext())\n                 {\n                     throw new IllegalStateException();\n                 }\n-                return converter.apply( items[cursor++] );\n+                return converter.apply(items[cursor++]);\n             }\n \n             @Override\n@@ -335,7 +337,7 @@ public class Readables\n      * @return char[] containing characters until the first newline character or end of stream.\n      * @throws IOException on I/O reading error.\n      */\n-    public static char[] extractFirstLineFrom( CharReadable source ) throws IOException\n+    public static char[] extractFirstLineFrom(CharReadable source) throws IOException\n     {\n         char[] result = new char[100];\n         int cursor = 0;\n@@ -344,23 +346,23 @@ public class Readables\n         do\n         {\n             // Grow on demand\n-            if ( cursor >= result.length )\n+            if (cursor >= result.length)\n             {\n-                result = Arrays.copyOf( result, cursor * 2 );\n+                result = Arrays.copyOf(result, cursor * 2);\n             }\n \n             // Read one character\n-            read = source.read( result, cursor, 1 );\n-            if ( read > 0 )\n+            read = source.read(result, cursor, 1);\n+            if (read > 0)\n             {\n-                foundEol = BufferedCharSeeker.isEolChar( result[cursor] );\n-                if ( !foundEol )\n+                foundEol = BufferedCharSeeker.isEolChar(result[cursor]);\n+                if (!foundEol)\n                 {\n                     cursor++;\n                 }\n             }\n         }\n-        while ( read > 0 && !foundEol );\n-        return Arrays.copyOf( result, cursor );\n+        while (read > 0 && !foundEol);\n+        return Arrays.copyOf(result, cursor);\n     }\n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/279/Readables.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/279/Readables.java\nindex 66c766ffc0a..64026f2a851 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/279/Readables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/279/Readables.java\n@@ -363,4 +363,4 @@ public class Readables\n         while ( read > 0 && !foundEol );\n         return Arrays.copyOf( result, cursor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
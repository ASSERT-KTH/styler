{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1627",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "160",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "160",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "186",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "272",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "297",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1627/GraphDatabaseShellServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1627/GraphDatabaseShellServer.java\nindex 775f801ea32..ca30b3addc9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1627/GraphDatabaseShellServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1627/GraphDatabaseShellServer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel;\n \n import java.io.File;\n@@ -52,256 +53,250 @@ import static org.neo4j.shell.Variables.PROMPT_KEY;\n  */\n public class GraphDatabaseShellServer extends AbstractAppServer\n {\n-    private final GraphDatabaseAPI graphDb;\n-    private boolean graphDbCreatedHere;\n-    protected final Map<Serializable, KernelTransaction> clients = new ConcurrentHashMap<>();\n+  private final GraphDatabaseAPI graphDb;\n+  private boolean graphDbCreatedHere;\n+  protected final Map<Serializable, KernelTransaction> clients = new ConcurrentHashMap<>();\n \n-    /**\n-     * @param path the path to the directory where the database should be created\n-     * @param readOnly make the instance read-only\n-     * @param configFileOrNull path to a configuration file or <code>null</code>\n-     * @throws RemoteException if an RMI error occurs.\n-     */\n-    public GraphDatabaseShellServer( File path, boolean readOnly, String configFileOrNull )\n-            throws RemoteException\n-    {\n-        this( instantiateGraphDb( new GraphDatabaseFactory(), path, readOnly, configFileOrNull ), readOnly );\n-        this.graphDbCreatedHere = true;\n-    }\n+  /**\n+   * @param path             the path to the directory where the database should be created\n+   * @param readOnly         make the instance read-only\n+   * @param configFileOrNull path to a configuration file or <code>null</code>\n+   * @throws RemoteException if an RMI error occurs.\n+   */\n+  public GraphDatabaseShellServer(File path, boolean readOnly, String configFileOrNull)\n+      throws RemoteException\n+  {\n+    this(instantiateGraphDb(new GraphDatabaseFactory(), path, readOnly, configFileOrNull), readOnly);\n+    this.graphDbCreatedHere = true;\n+  }\n \n-    public GraphDatabaseShellServer( GraphDatabaseFactory factory, File path, boolean readOnly, String configFileOrNull )\n-            throws RemoteException\n-    {\n-        this( instantiateGraphDb(  factory, path, readOnly, configFileOrNull ), readOnly );\n-        this.graphDbCreatedHere = true;\n-    }\n+  public GraphDatabaseShellServer(GraphDatabaseFactory factory, File path, boolean readOnly, String configFileOrNull)\n+      throws RemoteException\n+  {\n+    this(instantiateGraphDb(factory, path, readOnly, configFileOrNull), readOnly);\n+    this.graphDbCreatedHere = true;\n+  }\n \n-    public GraphDatabaseShellServer( GraphDatabaseAPI graphDb )\n-            throws RemoteException\n-    {\n-        this( graphDb, false );\n-    }\n+  public GraphDatabaseShellServer(GraphDatabaseAPI graphDb)\n+      throws RemoteException\n+  {\n+    this(graphDb, false);\n+  }\n \n-    public GraphDatabaseShellServer( GraphDatabaseAPI graphDb, boolean readOnly )\n-            throws RemoteException\n-    {\n-        super();\n-        this.graphDb = readOnly ? new ReadOnlyGraphDatabaseProxy( graphDb ) : graphDb;\n-        this.bashInterpreter.addReplacer( \"W\", new WorkingDirReplacer() );\n-        this.graphDbCreatedHere = false;\n-    }\n+  public GraphDatabaseShellServer(GraphDatabaseAPI graphDb, boolean readOnly)\n+      throws RemoteException\n+  {\n+    super();\n+    this.graphDb = readOnly ? new ReadOnlyGraphDatabaseProxy(graphDb) : graphDb;\n+    this.bashInterpreter.addReplacer(\"W\", new WorkingDirReplacer());\n+    this.graphDbCreatedHere = false;\n+  }\n \n-    /*\n-    * Since we don't know which thread we might happen to run on, we can't trust transactions\n-    * to be stored in threads. Instead, we keep them around here, and suspend/resume in\n-    * transactions before apps get to run.\n-    */\n-    @Override\n-    public Response interpretLine( Serializable clientId, String line, Output out ) throws ShellException\n+  /*\n+   * Since we don't know which thread we might happen to run on, we can't trust transactions\n+   * to be stored in threads. Instead, we keep them around here, and suspend/resume in\n+   * transactions before apps get to run.\n+   */\n+  @Override\n+  public Response interpretLine(Serializable clientId, String line, Output out) throws ShellException\n+  {\n+    boolean alreadyBound = bindTransaction(clientId);\n+    try\n     {\n-        boolean alreadyBound = bindTransaction( clientId );\n-        try\n-        {\n-            return super.interpretLine( clientId, line, out );\n-        }\n-        finally\n-        {\n-            if ( !alreadyBound )\n-            {\n-                unbindAndRegisterTransaction( clientId );\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void terminate( Serializable clientId )\n+      return super.interpretLine(clientId, line, out);\n+    } finally\n     {\n-        KernelTransaction tx = clients.get( clientId );\n-        if ( tx != null )\n-        {\n-            tx.markForTermination( Status.Transaction.Terminated );\n-        }\n+      if (!alreadyBound)\n+      {\n+        unbindAndRegisterTransaction(clientId);\n+      }\n     }\n+  }\n \n-    public void registerTopLevelTransactionInProgress( Serializable clientId )\n+  @Override\n+  public void terminate(Serializable clientId)\n+  {\n+    KernelTransaction tx = clients.get(clientId);\n+    if (tx != null)\n     {\n-        if ( !clients.containsKey( clientId ) )\n-        {\n-            ThreadToStatementContextBridge threadToStatementContextBridge = getThreadToStatementContextBridge();\n-            KernelTransaction tx = threadToStatementContextBridge.getTopLevelTransactionBoundToThisThread( false );\n-            clients.put( clientId, tx );\n-        }\n+      tx.markForTermination(Status.Transaction.Terminated);\n     }\n+  }\n \n-    public TokenRead getTokenRead()\n+  public void registerTopLevelTransactionInProgress(Serializable clientId)\n+  {\n+    if (!clients.containsKey(clientId))\n     {\n-        return getThreadToStatementContextBridge().getKernelTransactionBoundToThisThread( true ).tokenRead();\n+      ThreadToStatementContextBridge threadToStatementContextBridge = getThreadToStatementContextBridge();\n+      KernelTransaction tx = threadToStatementContextBridge.getTopLevelTransactionBoundToThisThread(false);\n+      clients.put(clientId, tx);\n     }\n+  }\n \n-    private ThreadToStatementContextBridge getThreadToStatementContextBridge()\n-    {\n-        return getDb().getDependencyResolver().resolveDependency( ThreadToStatementContextBridge.class );\n-    }\n+  public TokenRead getTokenRead()\n+  {\n+    return getThreadToStatementContextBridge().getKernelTransactionBoundToThisThread(true).tokenRead();\n+  }\n \n-    public void unbindAndRegisterTransaction( Serializable clientId ) throws ShellException\n-    {\n-        try\n-        {\n-            ThreadToStatementContextBridge threadToStatementContextBridge = getThreadToStatementContextBridge();\n-            KernelTransaction tx = threadToStatementContextBridge.getTopLevelTransactionBoundToThisThread( false );\n-            threadToStatementContextBridge.unbindTransactionFromCurrentThread();\n-            if ( tx == null )\n-            {\n-                clients.remove( clientId );\n-            }\n-            else\n-            {\n-                clients.put( clientId, tx );\n-            }\n-        }\n-        catch ( Exception e )\n-        {\n-            throw wrapException( e );\n-        }\n-    }\n+  private ThreadToStatementContextBridge getThreadToStatementContextBridge()\n+  {\n+    return getDb().getDependencyResolver().resolveDependency(ThreadToStatementContextBridge.class);\n+  }\n \n-    public boolean bindTransaction( Serializable clientId ) throws ShellException\n+  public void unbindAndRegisterTransaction(Serializable clientId) throws ShellException\n+  {\n+    try\n     {\n-        KernelTransaction tx = clients.get( clientId );\n-        if ( tx != null )\n-        {\n-            try\n-            {\n-                ThreadToStatementContextBridge bridge = getThreadToStatementContextBridge();\n-                if ( bridge.getKernelTransactionBoundToThisThread( false ) == tx )\n-                {\n-                    // This thread is already bound to this transaction. This can happen if a shell command\n-                    // in turn calls out to other shell commands. In those cases the sub-commands should just\n-                    // participate in the existing transaction. Neo4j already has support for nested\n-                    // transactions, but in the shell server, we are managing the transaction context bridge\n-                    // in this laborious and manual way, so it is easier for us to just avoid re-binding the\n-                    // existing transaction. We return 'true' here to indicate that our transaction context\n-                    // is nested, and that we therefor have to avoid unbinding this transaction later.\n-                    return true;\n-                }\n-                bridge.bindTransactionToCurrentThread( tx );\n-            }\n-            catch ( Exception e )\n-            {\n-                throw wrapException( e );\n-            }\n-        }\n-        return false;\n-    }\n-\n-    @Override\n-    protected void initialPopulateSession( Session session ) throws ShellException\n+      ThreadToStatementContextBridge threadToStatementContextBridge = getThreadToStatementContextBridge();\n+      KernelTransaction tx = threadToStatementContextBridge.getTopLevelTransactionBoundToThisThread(false);\n+      threadToStatementContextBridge.unbindTransactionFromCurrentThread();\n+      if (tx == null)\n+      {\n+        clients.remove(clientId);\n+      } else\n+      {\n+        clients.put(clientId, tx);\n+      }\n+    } catch (Exception e)\n     {\n-        session.set( Variables.TITLE_KEYS_KEY, \".*name.*,.*title.*\" );\n-        session.set( Variables.TITLE_MAX_LENGTH, \"40\" );\n+      throw wrapException(e);\n     }\n+  }\n \n-    @Override\n-    protected String getPrompt( Session session ) throws ShellException\n+  public boolean bindTransaction(Serializable clientId) throws ShellException\n+  {\n+    KernelTransaction tx = clients.get(clientId);\n+    if (tx != null)\n     {\n-        try ( org.neo4j.graphdb.Transaction transaction = this.getDb().beginTx() )\n+      try\n+      {\n+        ThreadToStatementContextBridge bridge = getThreadToStatementContextBridge();\n+        if (bridge.getKernelTransactionBoundToThisThread(false) == tx)\n         {\n-            Object rawCustomPrompt = session.get( PROMPT_KEY );\n-            String customPrompt = rawCustomPrompt != null ? rawCustomPrompt.toString() : getDefaultPrompt();\n-            String output = bashInterpreter.interpret( customPrompt, this, session );\n-            transaction.success();\n-            return output;\n+          // This thread is already bound to this transaction. This can happen if a shell command\n+          // in turn calls out to other shell commands. In those cases the sub-commands should just\n+          // participate in the existing transaction. Neo4j already has support for nested\n+          // transactions, but in the shell server, we are managing the transaction context bridge\n+          // in this laborious and manual way, so it is easier for us to just avoid re-binding the\n+          // existing transaction. We return 'true' here to indicate that our transaction context\n+          // is nested, and that we therefor have to avoid unbinding this transaction later.\n+          return true;\n         }\n+        bridge.bindTransactionToCurrentThread(tx);\n+      } catch (Exception e)\n+      {\n+        throw wrapException(e);\n+      }\n     }\n+    return false;\n+  }\n \n-    private static GraphDatabaseAPI instantiateGraphDb( GraphDatabaseFactory factory, File path, boolean readOnly,\n-            String configFileOrNull )\n-    {\n-        GraphDatabaseBuilder builder = factory.\n-                newEmbeddedDatabaseBuilder( path ).\n-                setConfig( GraphDatabaseSettings.disconnected, Boolean.toString( true ) ).\n-                setConfig( GraphDatabaseSettings.read_only, Boolean.toString( readOnly ) );\n-        if ( configFileOrNull != null )\n-        {\n-            builder.loadPropertiesFromFile( configFileOrNull );\n-        }\n-        return (GraphDatabaseAPI) builder.newGraphDatabase();\n-    }\n+  @Override\n+  protected void initialPopulateSession(Session session) throws ShellException\n+  {\n+    session.set(Variables.TITLE_KEYS_KEY, \".*name.*,.*title.*\");\n+    session.set(Variables.TITLE_MAX_LENGTH, \"40\");\n+  }\n \n-    @Override\n-    protected String getDefaultPrompt()\n+  @Override\n+  protected String getPrompt(Session session) throws ShellException\n+  {\n+    try (org.neo4j.graphdb.Transaction transaction = this.getDb().beginTx())\n     {\n-        String name = \"neo4j-sh\";\n-        if ( this.graphDb instanceof ReadOnlyGraphDatabaseProxy )\n-        {\n-            name += \"[readonly]\";\n-        }\n-        name += \" \\\\W$ \";\n-        return name;\n+      Object rawCustomPrompt = session.get(PROMPT_KEY);\n+      String customPrompt = rawCustomPrompt != null ? rawCustomPrompt.toString() : getDefaultPrompt();\n+      String output = bashInterpreter.interpret(customPrompt, this, session);\n+      transaction.success();\n+      return output;\n     }\n+  }\n \n-    @Override\n-    protected String getWelcomeMessage()\n+  private static GraphDatabaseAPI instantiateGraphDb(GraphDatabaseFactory factory, File path, boolean readOnly,\n+                                                     String configFileOrNull)\n+  {\n+    GraphDatabaseBuilder builder = factory.\n+        newEmbeddedDatabaseBuilder(path).\n+        setConfig(GraphDatabaseSettings.disconnected, Boolean.toString(true)).\n+        setConfig(GraphDatabaseSettings.read_only, Boolean.toString(readOnly));\n+    if (configFileOrNull != null)\n     {\n-        return \"Welcome to the Neo4j Shell! Enter 'help' for a list of commands. \" +\n-                \"Please note that neo4j-shell is deprecated and to be replaced by cypher-shell.\";\n+      builder.loadPropertiesFromFile(configFileOrNull);\n     }\n+    return (GraphDatabaseAPI) builder.newGraphDatabase();\n+  }\n \n-    /**\n-     * @return the {@link GraphDatabaseAPI} instance given in the\n-     * constructor.\n-     */\n-    public GraphDatabaseAPI getDb()\n+  @Override\n+  protected String getDefaultPrompt()\n+  {\n+    String name = \"neo4j-sh\";\n+    if (this.graphDb instanceof ReadOnlyGraphDatabaseProxy)\n     {\n-        return this.graphDb;\n+      name += \"[readonly]\";\n     }\n+    name += \" \\\\W$ \";\n+    return name;\n+  }\n \n-    /**\n-     * A {@link Replacer} for the variable \"w\"/\"W\" which returns the current\n-     * working directory (Bash), i.e. the current node.\n-     */\n-    public static class WorkingDirReplacer implements Replacer\n+  @Override\n+  protected String getWelcomeMessage()\n+  {\n+    return \"Welcome to the Neo4j Shell! Enter 'help' for a list of commands. \" +\n+        \"Please note that neo4j-shell is deprecated and to be replaced by cypher-shell.\";\n+  }\n+\n+  /**\n+   * @return the {@link GraphDatabaseAPI} instance given in the\n+   * constructor.\n+   */\n+  public GraphDatabaseAPI getDb()\n+  {\n+    return this.graphDb;\n+  }\n+\n+  /**\n+   * A {@link Replacer} for the variable \"w\"/\"W\" which returns the current\n+   * working directory (Bash), i.e. the current node.\n+   */\n+  public static class WorkingDirReplacer implements Replacer\n+  {\n+    @Override\n+    public String getReplacement(ShellServer server, Session session)\n     {\n-        @Override\n-        public String getReplacement( ShellServer server, Session session )\n-        {\n-            try\n-            {\n-                return TransactionProvidingApp.getDisplayName(\n-                        (GraphDatabaseShellServer) server, session,\n-                        TransactionProvidingApp.getCurrent(\n-                                (GraphDatabaseShellServer) server, session ),\n-                        false );\n-            }\n-            catch ( ShellException e )\n-            {\n-                return TransactionProvidingApp.getDisplayNameForNonExistent();\n-            }\n-        }\n+      try\n+      {\n+        return TransactionProvidingApp.getDisplayName(\n+            (GraphDatabaseShellServer) server, session,\n+            TransactionProvidingApp.getCurrent(\n+                (GraphDatabaseShellServer) server, session),\n+            false);\n+      } catch (ShellException e)\n+      {\n+        return TransactionProvidingApp.getDisplayNameForNonExistent();\n+      }\n     }\n+  }\n \n-    @Override\n-    public void shutdown() throws RemoteException\n+  @Override\n+  public void shutdown() throws RemoteException\n+  {\n+    if (graphDbCreatedHere)\n     {\n-        if ( graphDbCreatedHere )\n-        {\n-            this.graphDb.shutdown();\n-        }\n-        super.shutdown();\n+      this.graphDb.shutdown();\n     }\n+    super.shutdown();\n+  }\n \n-    @Override\n-    public Welcome welcome( Map<String, Serializable> initialSession ) throws RemoteException, ShellException\n+  @Override\n+  public Welcome welcome(Map<String, Serializable> initialSession) throws RemoteException, ShellException\n+  {\n+    try (org.neo4j.graphdb.Transaction transaction = graphDb.beginTx())\n     {\n-        try ( org.neo4j.graphdb.Transaction transaction = graphDb.beginTx() )\n-        {\n-            Welcome welcome = super.welcome( initialSession );\n-            transaction.success();\n-            return welcome;\n-        }\n-        catch ( RuntimeException e )\n-        {\n-            throw new RemoteException( e.getMessage(), e );\n-        }\n+      Welcome welcome = super.welcome(initialSession);\n+      transaction.success();\n+      return welcome;\n+    } catch (RuntimeException e)\n+    {\n+      throw new RemoteException(e.getMessage(), e);\n     }\n+  }\n }\n",
            "diff_size": 282
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 231).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1627/GraphDatabaseShellServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1627/GraphDatabaseShellServer.java\nindex 775f801ea32..758319a985a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1627/GraphDatabaseShellServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1627/GraphDatabaseShellServer.java\n@@ -54,7 +54,7 @@ public class GraphDatabaseShellServer extends AbstractAppServer\n {\n     private final GraphDatabaseAPI graphDb;\n     private boolean graphDbCreatedHere;\n-    protected final Map<Serializable, KernelTransaction> clients = new ConcurrentHashMap<>();\n+    protected final Map<Serializable,KernelTransaction> clients = new ConcurrentHashMap<>();\n \n     /**\n      * @param path the path to the directory where the database should be created\n@@ -62,29 +62,25 @@ public class GraphDatabaseShellServer extends AbstractAppServer\n      * @param configFileOrNull path to a configuration file or <code>null</code>\n      * @throws RemoteException if an RMI error occurs.\n      */\n-    public GraphDatabaseShellServer( File path, boolean readOnly, String configFileOrNull )\n-            throws RemoteException\n-    {\n+    public GraphDatabaseShellServer( File path, boolean readOnly, String configFileOrNull ) throws RemoteException\n+{\n         this( instantiateGraphDb( new GraphDatabaseFactory(), path, readOnly, configFileOrNull ), readOnly );\n         this.graphDbCreatedHere = true;\n     }\n \n-    public GraphDatabaseShellServer( GraphDatabaseFactory factory, File path, boolean readOnly, String configFileOrNull )\n-            throws RemoteException\n-    {\n-        this( instantiateGraphDb(  factory, path, readOnly, configFileOrNull ), readOnly );\n+    public GraphDatabaseShellServer( GraphDatabaseFactory factory, File path, boolean readOnly, String configFileOrNull ) throws RemoteException\n+{\n+        this( instantiateGraphDb( factory, path, readOnly, configFileOrNull ), readOnly );\n         this.graphDbCreatedHere = true;\n     }\n \n-    public GraphDatabaseShellServer( GraphDatabaseAPI graphDb )\n-            throws RemoteException\n-    {\n+    public GraphDatabaseShellServer( GraphDatabaseAPI graphDb ) throws RemoteException\n+{\n         this( graphDb, false );\n     }\n \n-    public GraphDatabaseShellServer( GraphDatabaseAPI graphDb, boolean readOnly )\n-            throws RemoteException\n-    {\n+    public GraphDatabaseShellServer( GraphDatabaseAPI graphDb, boolean readOnly ) throws RemoteException\n+{\n         super();\n         this.graphDb = readOnly ? new ReadOnlyGraphDatabaseProxy( graphDb ) : graphDb;\n         this.bashInterpreter.addReplacer( \"W\", new WorkingDirReplacer() );\n@@ -217,11 +213,8 @@ public class GraphDatabaseShellServer extends AbstractAppServer\n     private static GraphDatabaseAPI instantiateGraphDb( GraphDatabaseFactory factory, File path, boolean readOnly,\n             String configFileOrNull )\n     {\n-        GraphDatabaseBuilder builder = factory.\n-                newEmbeddedDatabaseBuilder( path ).\n-                setConfig( GraphDatabaseSettings.disconnected, Boolean.toString( true ) ).\n-                setConfig( GraphDatabaseSettings.read_only, Boolean.toString( readOnly ) );\n-        if ( configFileOrNull != null )\n+        GraphDatabaseBuilder builder = factory.newEmbeddedDatabaseBuilder( path ).setConfig( GraphDatabaseSettings.disconnected, Boolean.toString( true ) ).setConfig( GraphDatabaseSettings.read_only, Boolean.toString( readOnly ) );\n+if ( configFileOrNull != null )\n         {\n             builder.loadPropertiesFromFile( configFileOrNull );\n         }\n@@ -236,15 +229,15 @@ public class GraphDatabaseShellServer extends AbstractAppServer\n         {\n             name += \"[readonly]\";\n         }\n-        name += \" \\\\W$ \";\n+\n+name += \" \\\\W$ \";\n         return name;\n     }\n \n     @Override\n     protected String getWelcomeMessage()\n     {\n-        return \"Welcome to the Neo4j Shell! Enter 'help' for a list of commands. \" +\n-                \"Please note that neo4j-shell is deprecated and to be replaced by cypher-shell.\";\n+        return \"Welcome to the Neo4j Shell! Enter 'help' for a list of commands. \" + \"Please note that neo4j-shell is deprecated and to be replaced by cypher-shell.\";\n     }\n \n     /**\n@@ -267,12 +260,9 @@ public class GraphDatabaseShellServer extends AbstractAppServer\n         {\n             try\n             {\n-                return TransactionProvidingApp.getDisplayName(\n-                        (GraphDatabaseShellServer) server, session,\n-                        TransactionProvidingApp.getCurrent(\n-                                (GraphDatabaseShellServer) server, session ),\n-                        false );\n-            }\n+                return TransactionProvidingApp.getDisplayName((GraphDatabaseShellServer) server, session,\n+                        TransactionProvidingApp.getCurrent((GraphDatabaseShellServer) server, session ), false );\n+    }\n             catch ( ShellException e )\n             {\n                 return TransactionProvidingApp.getDisplayNameForNonExistent();\n@@ -291,7 +281,7 @@ public class GraphDatabaseShellServer extends AbstractAppServer\n     }\n \n     @Override\n-    public Welcome welcome( Map<String, Serializable> initialSession ) throws RemoteException, ShellException\n+    public Welcome welcome( Map<String,Serializable> initialSession ) throws RemoteException, ShellException\n     {\n         try ( org.neo4j.graphdb.Transaction transaction = graphDb.beginTx() )\n         {\n@@ -304,4 +294,4 @@ public class GraphDatabaseShellServer extends AbstractAppServer\n             throw new RemoteException( e.getMessage(), e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
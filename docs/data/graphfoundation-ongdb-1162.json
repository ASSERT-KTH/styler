{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1162",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1162/Configuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1162/Configuration.java\nindex 36c789dfd61..56bbd0ffeea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1162/Configuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1162/Configuration.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.source;\n \n import java.io.Writer;\n@@ -36,111 +37,111 @@ import org.neo4j.codegen.TypeReference;\n \n class Configuration\n {\n-    private List<Processor> processors = new ArrayList<>();\n-    private Set<SourceCode> flags = EnumSet.noneOf( SourceCode.class );\n-    private List<String> options = new ArrayList<>();\n-    private List<SourceVisitor> sourceVisitors = new ArrayList<>();\n-    private List<WarningsHandler> warningsHandlers = new ArrayList<>();\n-    SourceCompiler.Factory compiler = JdkCompiler.FACTORY;\n-\n-    public Configuration withAnnotationProcessor( Processor processor )\n-    {\n-        processors.add( processor );\n-        return this;\n-    }\n-\n-    public Configuration withFlag( SourceCode flag )\n-    {\n-        flags.add( flag );\n-        return this;\n-    }\n-\n-    public Configuration withOptions( String... opts )\n-    {\n-        if ( opts != null )\n-        {\n-            Collections.addAll( options, opts );\n-        }\n-        return this;\n-    }\n-\n-    public Configuration withSourceVisitor( SourceVisitor visitor )\n-    {\n-        sourceVisitors.add( visitor );\n-        return this;\n-    }\n-\n-    public Configuration withWarningsHandler( WarningsHandler handler )\n-    {\n-        warningsHandlers.add( handler );\n-        return this;\n-    }\n-\n-    public Iterable<String> options()\n-    {\n-        return options;\n-    }\n-\n-    public void processors( JavaCompiler.CompilationTask task )\n-    {\n-        task.setProcessors( processors );\n-    }\n-\n-    public Locale locale()\n-    {\n-        return null;\n-    }\n-\n-    public Charset charset()\n-    {\n-        return null;\n-    }\n-\n-    public Writer errorWriter()\n-    {\n-        return null;\n-    }\n-\n-    public BaseUri sourceBase()\n-    {\n-        return BaseUri.DEFAULT_SOURCE_BASE;\n-    }\n-\n-    public boolean isSet( SourceCode flag )\n-    {\n-        return flags != null && flags.contains( flag );\n-    }\n-\n-    public void visit( TypeReference reference, StringBuilder source )\n-    {\n-        for ( SourceVisitor visitor : sourceVisitors )\n-        {\n-            visitor.visitSource( reference, source );\n-        }\n-    }\n-\n-    public WarningsHandler warningsHandler()\n-    {\n-        if ( warningsHandlers.isEmpty() )\n-        {\n-            return WarningsHandler.NO_WARNINGS_HANDLER;\n-        }\n-        if ( warningsHandlers.size() == 1 )\n-        {\n-            return warningsHandlers.get( 0 );\n-        }\n-        return new WarningsHandler.Multiplex(\n-                warningsHandlers.toArray( new WarningsHandler[warningsHandlers.size()] ) );\n-    }\n-\n-    public SourceCompiler sourceCompilerFor( CodeGenerationStrategy<?> strategy )\n-            throws CodeGenerationStrategyNotSupportedException\n-    {\n-        return compiler.sourceCompilerFor( this, strategy );\n-    }\n-\n-    public void useJdkJavaCompiler()\n-    {\n-        compiler = null;\n-    }\n+  private List<Processor> processors = new ArrayList<>();\n+  private Set<SourceCode> flags = EnumSet.noneOf(SourceCode.class);\n+  private List<String> options = new ArrayList<>();\n+  private List<SourceVisitor> sourceVisitors = new ArrayList<>();\n+  private List<WarningsHandler> warningsHandlers = new ArrayList<>();\n+  SourceCompiler.Factory compiler = JdkCompiler.FACTORY;\n+\n+  public Configuration withAnnotationProcessor(Processor processor)\n+  {\n+    processors.add(processor);\n+    return this;\n+  }\n+\n+  public Configuration withFlag(SourceCode flag)\n+  {\n+    flags.add(flag);\n+    return this;\n+  }\n+\n+  public Configuration withOptions(String... opts)\n+  {\n+    if (opts != null)\n+    {\n+      Collections.addAll(options, opts);\n+    }\n+    return this;\n+  }\n+\n+  public Configuration withSourceVisitor(SourceVisitor visitor)\n+  {\n+    sourceVisitors.add(visitor);\n+    return this;\n+  }\n+\n+  public Configuration withWarningsHandler(WarningsHandler handler)\n+  {\n+    warningsHandlers.add(handler);\n+    return this;\n+  }\n+\n+  public Iterable<String> options()\n+  {\n+    return options;\n+  }\n+\n+  public void processors(JavaCompiler.CompilationTask task)\n+  {\n+    task.setProcessors(processors);\n+  }\n+\n+  public Locale locale()\n+  {\n+    return null;\n+  }\n+\n+  public Charset charset()\n+  {\n+    return null;\n+  }\n+\n+  public Writer errorWriter()\n+  {\n+    return null;\n+  }\n+\n+  public BaseUri sourceBase()\n+  {\n+    return BaseUri.DEFAULT_SOURCE_BASE;\n+  }\n+\n+  public boolean isSet(SourceCode flag)\n+  {\n+    return flags != null && flags.contains(flag);\n+  }\n+\n+  public void visit(TypeReference reference, StringBuilder source)\n+  {\n+    for (SourceVisitor visitor : sourceVisitors)\n+    {\n+      visitor.visitSource(reference, source);\n+    }\n+  }\n+\n+  public WarningsHandler warningsHandler()\n+  {\n+    if (warningsHandlers.isEmpty())\n+    {\n+      return WarningsHandler.NO_WARNINGS_HANDLER;\n+    }\n+    if (warningsHandlers.size() == 1)\n+    {\n+      return warningsHandlers.get(0);\n+    }\n+    return new WarningsHandler.Multiplex(\n+        warningsHandlers.toArray(new WarningsHandler[warningsHandlers.size()]));\n+  }\n+\n+  public SourceCompiler sourceCompilerFor(CodeGenerationStrategy<?> strategy)\n+      throws CodeGenerationStrategyNotSupportedException\n+  {\n+    return compiler.sourceCompilerFor(this, strategy);\n+  }\n+\n+  public void useJdkJavaCompiler()\n+  {\n+    compiler = null;\n+  }\n }\n",
            "diff_size": 108
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1162/Configuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1162/Configuration.java\nindex 36c789dfd61..181abc5aadd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1162/Configuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1162/Configuration.java\n@@ -125,17 +125,16 @@ class Configuration\n         {\n             return WarningsHandler.NO_WARNINGS_HANDLER;\n         }\n-        if ( warningsHandlers.size() == 1 )\n+\n+if ( warningsHandlers.size() == 1 )\n         {\n             return warningsHandlers.get( 0 );\n         }\n-        return new WarningsHandler.Multiplex(\n-                warningsHandlers.toArray( new WarningsHandler[warningsHandlers.size()] ) );\n+        return new WarningsHandler.Multiplex( warningsHandlers.toArray( new WarningsHandler[warningsHandlers.size()] ) );\n     }\n \n-    public SourceCompiler sourceCompilerFor( CodeGenerationStrategy<?> strategy )\n-            throws CodeGenerationStrategyNotSupportedException\n-    {\n+    public SourceCompiler sourceCompilerFor( CodeGenerationStrategy<?> strategy ) throws CodeGenerationStrategyNotSupportedException\n+{\n         return compiler.sourceCompilerFor( this, strategy );\n     }\n \n@@ -143,4 +142,4 @@ class Configuration\n     {\n         compiler = null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
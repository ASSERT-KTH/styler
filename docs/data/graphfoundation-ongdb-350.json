{
    "project_name": "graphfoundation-ongdb",
    "error_id": "350",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/350/DiagnosticsOfflineReportProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/350/DiagnosticsOfflineReportProvider.java\nindex 590bb053f04..3cda7fafe50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/350/DiagnosticsOfflineReportProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/350/DiagnosticsOfflineReportProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.diagnostics;\n \n \n@@ -38,54 +39,53 @@ import org.neo4j.kernel.configuration.Config;\n  */\n public abstract class DiagnosticsOfflineReportProvider extends Service\n {\n-    private final Set<String> filterClassifiers;\n+  private final Set<String> filterClassifiers;\n \n-    /**\n-     * A provider needs to know all the available classifiers in advance. A classifier is a group in the context of\n-     * diagnostics reporting, e.g. 'logs', 'config' or 'threaddump'.\n-     *\n-     * @param identifier a unique identifier for tagging during service loading, used for useful debug information.\n-     * @param classifier one\n-     * @param classifiers or more classifiers have to be provided.\n-     */\n-    protected DiagnosticsOfflineReportProvider( String identifier, String classifier, String... classifiers )\n-    {\n-        super( identifier );\n-        filterClassifiers = new HashSet<>( Arrays.asList( classifiers ) );\n-        filterClassifiers.add( classifier );\n-    }\n+  /**\n+   * A provider needs to know all the available classifiers in advance. A classifier is a group in the context of\n+   * diagnostics reporting, e.g. 'logs', 'config' or 'threaddump'.\n+   *\n+   * @param identifier  a unique identifier for tagging during service loading, used for useful debug information.\n+   * @param classifier  one\n+   * @param classifiers or more classifiers have to be provided.\n+   */\n+  protected DiagnosticsOfflineReportProvider(String identifier, String classifier, String... classifiers)\n+  {\n+    super(identifier);\n+    filterClassifiers = new HashSet<>(Arrays.asList(classifiers));\n+    filterClassifiers.add(classifier);\n+  }\n \n-    /**\n-     * Called after service loading to initialize the class.\n-     *\n-     * @param fs filesystem to use for file access.\n-     * @param config configuration file in use.\n-     * @param storeDirectory directory of the database files.\n-     */\n-    public abstract void init( FileSystemAbstraction fs, Config config, File storeDirectory );\n+  /**\n+   * Called after service loading to initialize the class.\n+   *\n+   * @param fs             filesystem to use for file access.\n+   * @param config         configuration file in use.\n+   * @param storeDirectory directory of the database files.\n+   */\n+  public abstract void init(FileSystemAbstraction fs, Config config, File storeDirectory);\n \n-    /**\n-     * Returns a list of source that matches the given classifiers.\n-     *\n-     * @param classifiers a set of classifiers to filter on.\n-     * @return a list of sources, empty if nothing matches.\n-     */\n-    protected abstract List<DiagnosticsReportSource> provideSources( Set<String> classifiers );\n+  /**\n+   * Returns a list of source that matches the given classifiers.\n+   *\n+   * @param classifiers a set of classifiers to filter on.\n+   * @return a list of sources, empty if nothing matches.\n+   */\n+  protected abstract List<DiagnosticsReportSource> provideSources(Set<String> classifiers);\n \n-    final Set<String> getFilterClassifiers()\n-    {\n-        return filterClassifiers;\n-    }\n+  final Set<String> getFilterClassifiers()\n+  {\n+    return filterClassifiers;\n+  }\n \n-    final List<DiagnosticsReportSource> getDiagnosticsSources( Set<String> classifiers )\n+  final List<DiagnosticsReportSource> getDiagnosticsSources(Set<String> classifiers)\n+  {\n+    if (classifiers.contains(\"all\"))\n+    {\n+      return provideSources(filterClassifiers);\n+    } else\n     {\n-        if ( classifiers.contains( \"all\" ) )\n-        {\n-            return provideSources( filterClassifiers );\n-        }\n-        else\n-        {\n-            return provideSources( classifiers );\n-        }\n+      return provideSources(classifiers);\n     }\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/350/DiagnosticsOfflineReportProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/350/DiagnosticsOfflineReportProvider.java\nindex 590bb053f04..bf38160424a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/350/DiagnosticsOfflineReportProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/350/DiagnosticsOfflineReportProvider.java\n@@ -18,8 +18,6 @@\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n package org.neo4j.diagnostics;\n-\n-\n import java.io.File;\n import java.util.Arrays;\n import java.util.HashSet;\n@@ -88,4 +86,4 @@ public abstract class DiagnosticsOfflineReportProvider extends Service\n             return provideSources( classifiers );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
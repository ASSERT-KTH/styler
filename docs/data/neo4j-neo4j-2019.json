{
    "project_name": "neo4j-neo4j",
    "error_id": "2019",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "88",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2019/RuntimeInternals.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2019/RuntimeInternals.java\nindex 03ee853ae3d..27020bea844 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2019/RuntimeInternals.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2019/RuntimeInternals.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.memory;\n \n import java.lang.invoke.MethodHandles;\n@@ -36,7 +37,7 @@ import static com.sun.jna.Platform.is64Bit;\n  */\n final class RuntimeInternals\n {\n-    static final boolean DEBUG_ESTIMATIONS = FeatureToggles.flag( HeapEstimator.class, \"DEBUG\", false );\n+    static final boolean DEBUG_ESTIMATIONS = FeatureToggles.flag(HeapEstimator.class, \"DEBUG\", false);\n \n     static final long LONG_CACHE_MIN_VALUE;\n     static final long LONG_CACHE_MAX_VALUE;\n@@ -53,21 +54,20 @@ final class RuntimeInternals\n         HEADER_SIZE = guessHeaderSize();\n \n         // Compressed oops and object alignment\n-        if ( is64Bit() )\n+        if (is64Bit())\n         {\n             boolean compressedOops;\n             int objectAlignment;\n             try\n             {\n-                compressedOops = Boolean.parseBoolean( getVmOptionString( \"UseCompressedOops\" ) );\n-                objectAlignment = Integer.parseInt( getVmOptionString(\"ObjectAlignmentInBytes\"));\n-            }\n-            catch ( Exception e )\n+                compressedOops = Boolean.parseBoolean(getVmOptionString(\"UseCompressedOops\"));\n+                objectAlignment = Integer.parseInt(getVmOptionString(\"ObjectAlignmentInBytes\"));\n+            } catch (Exception e)\n             {\n-                if ( DEBUG_ESTIMATIONS )\n+                if (DEBUG_ESTIMATIONS)\n                 {\n-                    System.err.println( \"HotSpotDiagnostic not available, falling back to guessing. Exception:\");\n-                    e.printStackTrace( System.err );\n+                    System.err.println(\"HotSpotDiagnostic not available, falling back to guessing. Exception:\");\n+                    e.printStackTrace(System.err);\n                 }\n \n                 // Fallback to guessing\n@@ -76,8 +76,7 @@ final class RuntimeInternals\n             }\n             COMPRESSED_OOPS = compressedOops;\n             OBJECT_ALIGNMENT = objectAlignment;\n-        }\n-        else\n+        } else\n         {\n             // Values are fixed for 32 bit JVM\n             COMPRESSED_OOPS = true;\n@@ -86,12 +85,12 @@ final class RuntimeInternals\n \n         // get min/max value of cached Long class instances:\n         long longCacheMinValue = 0;\n-        while ( longCacheMinValue > Long.MIN_VALUE && Long.valueOf( longCacheMinValue - 1 ) == Long.valueOf( longCacheMinValue - 1 ) )\n+        while (longCacheMinValue > Long.MIN_VALUE && Long.valueOf(longCacheMinValue - 1) == Long.valueOf(longCacheMinValue - 1))\n         {\n             longCacheMinValue -= 1;\n         }\n         long longCacheMaxValue = -1;\n-        while ( longCacheMaxValue < Long.MAX_VALUE && Long.valueOf( longCacheMaxValue + 1 ) == Long.valueOf( longCacheMaxValue + 1 ) )\n+        while (longCacheMaxValue < Long.MAX_VALUE && Long.valueOf(longCacheMaxValue + 1) == Long.valueOf(longCacheMaxValue + 1))\n         {\n             longCacheMaxValue += 1;\n         }\n@@ -102,9 +101,8 @@ final class RuntimeInternals\n         VarHandle stringValueArray;\n         try\n         {\n-            stringValueArray = MethodHandles.privateLookupIn( String.class, MethodHandles.lookup() ).findVarHandle( String.class, \"value\", byte[].class );\n-        }\n-        catch ( NoSuchFieldException | IllegalAccessException e )\n+            stringValueArray = MethodHandles.privateLookupIn(String.class, MethodHandles.lookup()).findVarHandle(String.class, \"value\", byte[].class);\n+        } catch (NoSuchFieldException | IllegalAccessException e)\n         {\n             stringValueArray = null;\n         }\n@@ -115,32 +113,32 @@ final class RuntimeInternals\n     {\n     }\n \n-    static int stringBackingArraySize( String s )\n+    static int stringBackingArraySize(String s)\n     {\n-        if ( STRING_VALUE_ARRAY != null )\n+        if (STRING_VALUE_ARRAY != null)\n         {\n-            byte[] value = (byte[]) STRING_VALUE_ARRAY.get( s );\n+            byte[] value = (byte[]) STRING_VALUE_ARRAY.get(s);\n             return value.length;\n         }\n         return s.length() << 1; // Assume UTF16\n     }\n \n-    private static String getVmOptionString( String key ) throws Exception\n+    private static String getVmOptionString(String key) throws Exception\n     {\n         MBeanServer server = ManagementFactory.getPlatformMBeanServer();\n-        ObjectName mbean = new ObjectName( \"com.sun.management:type=HotSpotDiagnostic\" );\n-        CompositeDataSupport val = (CompositeDataSupport) server.invoke( mbean, \"getVMOption\", new Object[]{key}, new String[]{\"java.lang.String\"} );\n-        return val.get( \"value\" ).toString();\n+        ObjectName mbean = new ObjectName(\"com.sun.management:type=HotSpotDiagnostic\");\n+        CompositeDataSupport val = (CompositeDataSupport) server.invoke(mbean, \"getVMOption\", new Object[] {key}, new String[] {\"java.lang.String\"});\n+        return val.get(\"value\").toString();\n     }\n \n-    @SuppressWarnings( \"unused\" )\n+    @SuppressWarnings(\"unused\")\n     public static class CompressedOopsClass\n     {\n         public Object obj1;\n         public Object obj2;\n     }\n \n-    @SuppressWarnings( \"unused\" )\n+    @SuppressWarnings(\"unused\")\n     public static class HeaderClass\n     {\n         public boolean b1;\n@@ -148,14 +146,14 @@ final class RuntimeInternals\n \n     private static boolean guessCompressedOops()\n     {\n-        long off1 = UnsafeUtil.getFieldOffset( CompressedOopsClass.class, \"obj1\" );\n-        long off2 = UnsafeUtil.getFieldOffset( CompressedOopsClass.class, \"obj2\" );\n-        return Math.abs( off2 - off1 ) == 4;\n+        long off1 = UnsafeUtil.getFieldOffset(CompressedOopsClass.class, \"obj1\");\n+        long off2 = UnsafeUtil.getFieldOffset(CompressedOopsClass.class, \"obj2\");\n+        return Math.abs(off2 - off1) == 4;\n     }\n \n     private static int guessHeaderSize()\n     {\n-        long off1 = UnsafeUtil.getFieldOffset( HeaderClass.class, \"b1\" );\n+        long off1 = UnsafeUtil.getFieldOffset(HeaderClass.class, \"b1\");\n         return (int) off1;\n     }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
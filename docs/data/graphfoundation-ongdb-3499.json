{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3499",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3499/UdcTimerTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3499/UdcTimerTask.java\nindex 21f09d33551..28bdf22e257 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3499/UdcTimerTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3499/UdcTimerTask.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.ext.udc.impl;\n \n import java.io.IOException;\n@@ -28,48 +29,47 @@ import org.neo4j.helpers.HostnamePort;\n \n public class UdcTimerTask extends TimerTask\n {\n-    // ABKTODO: make this thread safe\n-    public static final Map<String, Integer> successCounts = new HashMap<>();\n-    public static final Map<String, Integer> failureCounts = new HashMap<>();\n+  // ABKTODO: make this thread safe\n+  public static final Map<String, Integer> successCounts = new HashMap<>();\n+  public static final Map<String, Integer> failureCounts = new HashMap<>();\n \n-    private final String storeId;\n-    private final Pinger pinger;\n+  private final String storeId;\n+  private final Pinger pinger;\n \n-    public UdcTimerTask( HostnamePort hostAddress, UdcInformationCollector collector )\n-    {\n-        this.storeId = collector.getStoreId();\n+  public UdcTimerTask(HostnamePort hostAddress, UdcInformationCollector collector)\n+  {\n+    this.storeId = collector.getStoreId();\n \n-        successCounts.put( storeId, 0 );\n-        failureCounts.put( storeId, 0 );\n+    successCounts.put(storeId, 0);\n+    failureCounts.put(storeId, 0);\n \n-        pinger = new Pinger( hostAddress, collector );\n-    }\n+    pinger = new Pinger(hostAddress, collector);\n+  }\n \n-    @Override\n-    public void run()\n+  @Override\n+  public void run()\n+  {\n+    try\n     {\n-        try\n-        {\n-            pinger.ping();\n-            incrementSuccessCount( storeId );\n-        }\n-        catch ( IOException e )\n-        {\n-            incrementFailureCount( storeId );\n-        }\n-    }\n-\n-    private void incrementSuccessCount( String storeId )\n+      pinger.ping();\n+      incrementSuccessCount(storeId);\n+    } catch (IOException e)\n     {\n-        Integer currentCount = successCounts.get( storeId );\n-        currentCount++;\n-        successCounts.put( storeId, currentCount );\n+      incrementFailureCount(storeId);\n     }\n+  }\n \n-    private void incrementFailureCount( String storeId )\n-    {\n-        Integer currentCount = failureCounts.get( storeId );\n-        currentCount++;\n-        failureCounts.put( storeId, currentCount );\n-    }\n+  private void incrementSuccessCount(String storeId)\n+  {\n+    Integer currentCount = successCounts.get(storeId);\n+    currentCount++;\n+    successCounts.put(storeId, currentCount);\n+  }\n+\n+  private void incrementFailureCount(String storeId)\n+  {\n+    Integer currentCount = failureCounts.get(storeId);\n+    currentCount++;\n+    failureCounts.put(storeId, currentCount);\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3499/UdcTimerTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3499/UdcTimerTask.java\nindex 21f09d33551..4ef7bdd5866 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3499/UdcTimerTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3499/UdcTimerTask.java\n@@ -29,8 +29,8 @@ import org.neo4j.helpers.HostnamePort;\n public class UdcTimerTask extends TimerTask\n {\n     // ABKTODO: make this thread safe\n-    public static final Map<String, Integer> successCounts = new HashMap<>();\n-    public static final Map<String, Integer> failureCounts = new HashMap<>();\n+    public static final Map<String,Integer> successCounts = new HashMap<>();\n+    public static final Map<String,Integer> failureCounts = new HashMap<>();\n \n     private final String storeId;\n     private final Pinger pinger;\n@@ -38,11 +38,9 @@ public class UdcTimerTask extends TimerTask\n     public UdcTimerTask( HostnamePort hostAddress, UdcInformationCollector collector )\n     {\n         this.storeId = collector.getStoreId();\n-\n-        successCounts.put( storeId, 0 );\n+successCounts.put( storeId, 0 );\n         failureCounts.put( storeId, 0 );\n-\n-        pinger = new Pinger( hostAddress, collector );\n+pinger = new Pinger( hostAddress, collector );\n     }\n \n     @Override\n@@ -72,4 +70,4 @@ public class UdcTimerTask extends TimerTask\n         currentCount++;\n         failureCounts.put( storeId, currentCount );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
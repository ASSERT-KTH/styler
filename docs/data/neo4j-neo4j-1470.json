{
    "project_name": "neo4j-neo4j",
    "error_id": "1470",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1470/BufferingIdGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1470/BufferingIdGeneratorFactory.java\nindex 862a68efbfc..e1c66a4209c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1470/BufferingIdGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1470/BufferingIdGeneratorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.id;\n \n import org.eclipse.collections.api.set.ImmutableSet;\n@@ -41,57 +42,57 @@ import org.neo4j.io.pagecache.tracing.cursor.PageCursorTracer;\n public class BufferingIdGeneratorFactory implements IdGeneratorFactory\n {\n     private final BufferingIdGenerator[/*IdType#ordinal as key*/] overriddenIdGenerators =\n-            new BufferingIdGenerator[IdType.values().length];\n+      new BufferingIdGenerator[IdType.values().length];\n     private Supplier<IdController.ConditionSnapshot> boundaries;\n     private final Predicate<IdController.ConditionSnapshot> safeThreshold;\n     private final IdGeneratorFactory delegate;\n \n-    public BufferingIdGeneratorFactory( IdGeneratorFactory delegate )\n+    public BufferingIdGeneratorFactory(IdGeneratorFactory delegate)\n     {\n         this.delegate = delegate;\n         this.safeThreshold = IdController.ConditionSnapshot::conditionMet;\n     }\n \n-    public void initialize( Supplier<IdController.ConditionSnapshot> conditionSnapshotSupplier )\n+    public void initialize(Supplier<IdController.ConditionSnapshot> conditionSnapshotSupplier)\n     {\n         boundaries = conditionSnapshotSupplier;\n     }\n \n     @Override\n-    public IdGenerator open( PageCache pageCache, Path filename, IdType idType, LongSupplier highIdScanner, long maxId, boolean readOnly, Config config,\n-            PageCursorTracer cursorTracer, ImmutableSet<OpenOption> openOptions )\n+    public IdGenerator open(PageCache pageCache, Path filename, IdType idType, LongSupplier highIdScanner, long maxId, boolean readOnly, Config config,\n+                            PageCursorTracer cursorTracer, ImmutableSet<OpenOption> openOptions)\n     {\n         assert boundaries != null : \"Factory needs to be initialized before usage\";\n \n-        IdGenerator generator = delegate.open( pageCache, filename, idType, highIdScanner, maxId, readOnly, config, cursorTracer, openOptions );\n-        return wrapAndKeep( idType, generator );\n+        IdGenerator generator = delegate.open(pageCache, filename, idType, highIdScanner, maxId, readOnly, config, cursorTracer, openOptions);\n+        return wrapAndKeep(idType, generator);\n     }\n \n     @Override\n-    public IdGenerator create( PageCache pageCache, Path filename, IdType idType, long highId, boolean throwIfFileExists, long maxId, boolean readOnly,\n-            Config config, PageCursorTracer cursorTracer, ImmutableSet<OpenOption> openOptions )\n+    public IdGenerator create(PageCache pageCache, Path filename, IdType idType, long highId, boolean throwIfFileExists, long maxId, boolean readOnly,\n+                              Config config, PageCursorTracer cursorTracer, ImmutableSet<OpenOption> openOptions)\n     {\n-        IdGenerator idGenerator = delegate.create( pageCache, filename, idType, highId, throwIfFileExists, maxId, readOnly, config, cursorTracer, openOptions );\n-        return wrapAndKeep( idType, idGenerator );\n+        IdGenerator idGenerator = delegate.create(pageCache, filename, idType, highId, throwIfFileExists, maxId, readOnly, config, cursorTracer, openOptions);\n+        return wrapAndKeep(idType, idGenerator);\n     }\n \n     @Override\n-    public IdGenerator get( IdType idType )\n+    public IdGenerator get(IdType idType)\n     {\n         IdGenerator generator = overriddenIdGenerators[idType.ordinal()];\n-        return generator != null ? generator : delegate.get( idType );\n+        return generator != null ? generator : delegate.get(idType);\n     }\n \n     @Override\n-    public void visit( Consumer<IdGenerator> visitor )\n+    public void visit(Consumer<IdGenerator> visitor)\n     {\n-        Stream.of( overriddenIdGenerators ).forEach( visitor );\n+        Stream.of(overriddenIdGenerators).forEach(visitor);\n     }\n \n     @Override\n-    public void clearCache( PageCursorTracer cursorTracer )\n+    public void clearCache(PageCursorTracer cursorTracer)\n     {\n-        delegate.clearCache( cursorTracer );\n+        delegate.clearCache(cursorTracer);\n     }\n \n     @Override\n@@ -100,30 +101,30 @@ public class BufferingIdGeneratorFactory implements IdGeneratorFactory\n         return delegate.listIdFiles();\n     }\n \n-    private IdGenerator wrapAndKeep( IdType idType, IdGenerator generator )\n+    private IdGenerator wrapAndKeep(IdType idType, IdGenerator generator)\n     {\n-        BufferingIdGenerator bufferingGenerator = new BufferingIdGenerator( generator );\n-        bufferingGenerator.initialize( boundaries, safeThreshold );\n+        BufferingIdGenerator bufferingGenerator = new BufferingIdGenerator(generator);\n+        bufferingGenerator.initialize(boundaries, safeThreshold);\n         overriddenIdGenerators[idType.ordinal()] = bufferingGenerator;\n         return bufferingGenerator;\n     }\n \n-    public void maintenance( boolean awaitOngoing, PageCursorTracer pageCursorTracer )\n+    public void maintenance(boolean awaitOngoing, PageCursorTracer pageCursorTracer)\n     {\n-        for ( BufferingIdGenerator generator : overriddenIdGenerators )\n+        for (BufferingIdGenerator generator : overriddenIdGenerators)\n         {\n-            if ( generator != null )\n+            if (generator != null)\n             {\n-                generator.maintenance( awaitOngoing, pageCursorTracer );\n+                generator.maintenance(awaitOngoing, pageCursorTracer);\n             }\n         }\n     }\n \n     public void clear()\n     {\n-        for ( BufferingIdGenerator generator : overriddenIdGenerators )\n+        for (BufferingIdGenerator generator : overriddenIdGenerators)\n         {\n-            if ( generator != null )\n+            if (generator != null)\n             {\n                 generator.clear();\n             }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
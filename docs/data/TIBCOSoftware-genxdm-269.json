{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "269",
    "information": {
        "errors": [
            {
                "line": "32",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public final class CloneableNodeIteratorImpl<N> implements CloneableNodeIterator<N>\n{\n\tprivate final NodeList<N> list;\n\tprivate int i;\n\n\t@Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/269/CloneableNodeIteratorImpl.java\nindex 134227d930a..4c2b088cec7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/269/CloneableNodeIteratorImpl.java\n@@ -29,7 +29,7 @@ import org.genxdm.xpath.v10.NodeIterator;\n \r\n public final class CloneableNodeIteratorImpl<N> implements CloneableNodeIterator<N>\r\n {\r\n-\tprivate final NodeList<N> list;\r\n+private final NodeList<N> list;\r\n \tprivate int i;\r\n \r\n \t@Override\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/269/CloneableNodeIteratorImpl.java\nindex 134227d930a..fb100043a33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/269/CloneableNodeIteratorImpl.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.iterators;\r\n \r\n import java.util.ArrayList;\r\n@@ -27,75 +28,70 @@ import org.genxdm.Model;\n import org.genxdm.xpath.v10.ExprException;\r\n import org.genxdm.xpath.v10.NodeIterator;\r\n \r\n-public final class CloneableNodeIteratorImpl<N> implements CloneableNodeIterator<N>\r\n-{\r\n-\tprivate final NodeList<N> list;\r\n-\tprivate int i;\r\n-\r\n-\t@Override\r\n-\tpublic Object clone()\r\n-\t{\r\n-\t\treturn new CloneableNodeIteratorImpl<N>(list, i);\r\n-\t}\r\n-\r\n-\tpublic CloneableNodeIteratorImpl(NodeIterator<N> iter, final Model<N> model)\r\n-\t{\r\n-\t\tlist = new NodeList<N>(iter, model);\r\n-\t\ti = 0;\r\n-\t}\r\n-\r\n-\tprivate CloneableNodeIteratorImpl(NodeList<N> list, int i)\r\n-\t{\r\n-\t\tthis.list = list;\r\n-\t\tthis.i = i;\r\n-\t}\r\n-\r\n-\tpublic N next() throws ExprException\r\n-\t{\r\n-\t\tN tem = list.nodeAt(i);\r\n-\t\tif (tem != null)\r\n-\t\t\ti++;\r\n-\t\treturn tem;\r\n-\t}\r\n-\r\n-\tpublic void bind() throws ExprException\r\n-\t{\r\n-\t\tfor (int i = 0; list.nodeAt(i) != null; i++)\r\n-\t\t\t;\r\n-\t}\r\n-\r\n-\tstatic class NodeList<N>\r\n-\t{\r\n-\t\tfinal NodeIterator<N> iter;\r\n-\t\tfinal Model<N> model;\r\n-\t\tList<N> nodes = null;\r\n-\t\tint len = 0;\r\n-\r\n-\t\tNodeList(final NodeIterator<N> iter, final Model<N> model)\r\n-\t\t{\r\n-\t\t\tthis.iter = iter;\r\n-\t\t\tthis.model = model;\r\n-\t\t}\r\n-\r\n-\t\tN nodeAt(int i) throws ExprException\r\n-\t\t{\r\n-\t\t\tif (i >= len)\r\n-\t\t\t{\r\n-\t\t\t\tif (nodes == null)\r\n-\t\t\t\t{\r\n-\t\t\t\t\tnodes = new ArrayList<N>(i + 4);\r\n-\t\t\t\t}\r\n-\t\t\t\t// Have i < nodes.length\r\n-\t\t\t\tfor (; len <= i; len++)\r\n-\t\t\t\t{\r\n-\t\t\t\t    N node = iter.next();\r\n-\t\t\t\t    if (node == null)\r\n-\t\t\t\t        return null;\r\n-\t\t\t\t    nodes.add(node);\r\n-\t\t\t\t}\r\n-\t\t\t\t// Have i < length\r\n-\t\t\t}\r\n-\t\t\treturn nodes.get(i);\r\n-\t\t}\r\n-\t}\r\n+public final class CloneableNodeIteratorImpl<N> implements CloneableNodeIterator<N> {\r\n+    private final NodeList<N> list;\r\n+\r\n+    private int i;\r\n+\r\n+    @Override\r\n+    public Object clone() {\r\n+        return new CloneableNodeIteratorImpl<N>(list, i);\r\n+    }\r\n+\r\n+    public CloneableNodeIteratorImpl(NodeIterator<N> iter, final Model<N> model) {\r\n+        list = new NodeList<N>(iter, model);\r\n+        i = 0;\r\n+    }\r\n+\r\n+    private CloneableNodeIteratorImpl(NodeList<N> list, int i) {\r\n+        this.list = list;\r\n+        this.i = i;\r\n+    }\r\n+\r\n+    public N next() throws ExprException {\r\n+        N tem = list.nodeAt(i);\r\n+        if (tem != null) {\r\n+            i++;\r\n+        }\r\n+        return tem;\r\n+    }\r\n+\r\n+    public void bind() throws ExprException {\r\n+        for (int i = 0; list.nodeAt(i) != null; i++) {\r\n+            ;\r\n+        }\r\n+    }\r\n+\r\n+    static class NodeList<N> {\r\n+        final NodeIterator<N> iter;\r\n+\r\n+        final Model<N> model;\r\n+\r\n+        List<N> nodes = null;\r\n+\r\n+        int len = 0;\r\n+\r\n+        NodeList(final NodeIterator<N> iter, final Model<N> model) {\r\n+            this.iter = iter;\r\n+            this.model = model;\r\n+        }\r\n+\r\n+        N nodeAt(int i) throws ExprException {\r\n+            if (i >= len) {\r\n+                if (nodes == null) {\r\n+                    nodes = new ArrayList<N>(i + 4);\r\n+                }\r\n+                // Have i < nodes.length\r\n+                for (; len <= i; len++) {\r\n+                    N node = iter.next();\r\n+                    if (node == null) {\r\n+                        return null;\r\n+                    }\r\n+                    nodes.add(node);\r\n+                }\r\n+                // Have i < length\r\n+            }\r\n+            return nodes.get(i);\r\n+        }\r\n+    }\r\n }\r\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/269/CloneableNodeIteratorImpl.java\nindex 134227d930a..1a504bf282c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/269/CloneableNodeIteratorImpl.java\n@@ -18,84 +18,87 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.iterators;\r\n-\r\n-import java.util.ArrayList;\r\n-import java.util.List;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.xpath.v10.ExprException;\r\n-import org.genxdm.xpath.v10.NodeIterator;\r\n-\r\n-public final class CloneableNodeIteratorImpl<N> implements CloneableNodeIterator<N>\r\n-{\r\n-\tprivate final NodeList<N> list;\r\n-\tprivate int i;\r\n-\r\n-\t@Override\r\n-\tpublic Object clone()\r\n-\t{\r\n-\t\treturn new CloneableNodeIteratorImpl<N>(list, i);\r\n-\t}\r\n-\r\n-\tpublic CloneableNodeIteratorImpl(NodeIterator<N> iter, final Model<N> model)\r\n-\t{\r\n-\t\tlist = new NodeList<N>(iter, model);\r\n-\t\ti = 0;\r\n-\t}\r\n-\r\n-\tprivate CloneableNodeIteratorImpl(NodeList<N> list, int i)\r\n-\t{\r\n-\t\tthis.list = list;\r\n-\t\tthis.i = i;\r\n-\t}\r\n-\r\n-\tpublic N next() throws ExprException\r\n-\t{\r\n-\t\tN tem = list.nodeAt(i);\r\n-\t\tif (tem != null)\r\n-\t\t\ti++;\r\n-\t\treturn tem;\r\n-\t}\r\n-\r\n-\tpublic void bind() throws ExprException\r\n-\t{\r\n-\t\tfor (int i = 0; list.nodeAt(i) != null; i++)\r\n-\t\t\t;\r\n-\t}\r\n-\r\n-\tstatic class NodeList<N>\r\n-\t{\r\n-\t\tfinal NodeIterator<N> iter;\r\n-\t\tfinal Model<N> model;\r\n-\t\tList<N> nodes = null;\r\n-\t\tint len = 0;\r\n-\r\n-\t\tNodeList(final NodeIterator<N> iter, final Model<N> model)\r\n-\t\t{\r\n-\t\t\tthis.iter = iter;\r\n-\t\t\tthis.model = model;\r\n-\t\t}\r\n-\r\n-\t\tN nodeAt(int i) throws ExprException\r\n-\t\t{\r\n-\t\t\tif (i >= len)\r\n-\t\t\t{\r\n-\t\t\t\tif (nodes == null)\r\n-\t\t\t\t{\r\n-\t\t\t\t\tnodes = new ArrayList<N>(i + 4);\r\n-\t\t\t\t}\r\n-\t\t\t\t// Have i < nodes.length\r\n-\t\t\t\tfor (; len <= i; len++)\r\n-\t\t\t\t{\r\n-\t\t\t\t    N node = iter.next();\r\n-\t\t\t\t    if (node == null)\r\n-\t\t\t\t        return null;\r\n-\t\t\t\t    nodes.add(node);\r\n-\t\t\t\t}\r\n-\t\t\t\t// Have i < length\r\n-\t\t\t}\r\n-\t\t\treturn nodes.get(i);\r\n-\t\t}\r\n-\t}\r\n-}\r\n+package org.genxdm.processor.xpath.v10.iterators;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.genxdm.Model;\n+import org.genxdm.xpath.v10.ExprException;\n+import org.genxdm.xpath.v10.NodeIterator;\n+\n+public final class CloneableNodeIteratorImpl<N> implements CloneableNodeIterator<N>\n+{\n+    private final NodeList<N> list;\n+    private int i;\n+\n+    @Override\n+    public Object clone()\n+    {\n+        return new CloneableNodeIteratorImpl<N>(list, i);\n+    }\n+\n+    public CloneableNodeIteratorImpl(NodeIterator<N> iter, final Model<N> model)\n+    {\n+        list = new NodeList<N>(iter, model);\n+        i = 0;\n+    }\n+\n+    private CloneableNodeIteratorImpl(NodeList<N> list, int i)\n+    {\n+        this.list = list;\n+        this.i = i;\n+    }\n+\n+    public N next()\n+        throws ExprException\n+    {\n+        N tem = list.nodeAt(i);\n+        if (tem != null)\n+            i++;\n+        return tem;\n+    }\n+\n+    public void bind()\n+        throws ExprException\n+    {\n+        for (int i = 0; list.nodeAt(i) != null; i++)\n+        ;\n+    }\n+\n+    static class NodeList<N>\n+    {\n+        final NodeIterator<N> iter;\n+\n+        final Model<N> model;\n+        List<N> nodes = null;\n+        int len = 0;\n+\n+        NodeList(final NodeIterator<N> iter, final Model<N> model)\n+        {\n+            this.iter = iter;\n+            this.model = model;\n+        }\n+\n+        N nodeAt(int i)\n+            throws ExprException\n+        {\n+            if (i >= len)\n+            {\n+                if (nodes == null)\n+                {\n+                    nodes = new ArrayList<N>(i + 4);\n+                }\r\n+                // Have i < nodes.length\n+                for (; len <= i; len++)\n+                {\n+                    N node = iter.next();\n+                    if (node == null)\n+                        return null;\n+                    nodes.add(node);\n+                }\r\n+                // Have i < length\n+            }\n+            return nodes.get(i);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 84
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/269/CloneableNodeIteratorImpl.java\nindex 134227d930a..4c2b088cec7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/269/CloneableNodeIteratorImpl.java\n@@ -29,7 +29,7 @@ import org.genxdm.xpath.v10.NodeIterator;\n \r\n public final class CloneableNodeIteratorImpl<N> implements CloneableNodeIterator<N>\r\n {\r\n-\tprivate final NodeList<N> list;\r\n+private final NodeList<N> list;\r\n \tprivate int i;\r\n \r\n \t@Override\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/269/CloneableNodeIteratorImpl.java\nindex 134227d930a..9a11b049c83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/269/CloneableNodeIteratorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/269/CloneableNodeIteratorImpl.java\n@@ -29,7 +29,7 @@ import org.genxdm.xpath.v10.NodeIterator;\n \r\n public final class CloneableNodeIteratorImpl<N> implements CloneableNodeIterator<N>\r\n {\r\n-\tprivate final NodeList<N> list;\r\n+    private final NodeList<N> list;\r\n \tprivate int i;\r\n \r\n \t@Override\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3660",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "174",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "189",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "447",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "560",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "569",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3660/DefaultPropertyCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3660/DefaultPropertyCursor.java\nindex cb13d288ef2..58a7a59c9d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3660/DefaultPropertyCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3660/DefaultPropertyCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import java.nio.ByteBuffer;\n@@ -52,537 +53,533 @@ import org.neo4j.values.storable.Values;\n \n public class DefaultPropertyCursor extends PropertyRecord implements PropertyCursor\n {\n-    private static final int MAX_BYTES_IN_SHORT_STRING_OR_SHORT_ARRAY = 32;\n-    private static final int INITIAL_POSITION = -1;\n-    private Read read;\n-    private long next;\n-    private int block;\n-    ByteBuffer buffer;\n-    private PageCursor page;\n-    private PageCursor stringPage;\n-    private PageCursor arrayPage;\n-    private PropertyContainerState propertiesState;\n-    private Iterator<StorageProperty> txStateChangedProperties;\n-    private StorageProperty txStateValue;\n-    private AssertOpen assertOpen;\n-    private final DefaultCursors pool;\n-\n-    DefaultPropertyCursor( DefaultCursors pool )\n-    {\n-        super( NO_ID );\n-        this.pool = pool;\n-    }\n+  private static final int MAX_BYTES_IN_SHORT_STRING_OR_SHORT_ARRAY = 32;\n+  private static final int INITIAL_POSITION = -1;\n+  private Read read;\n+  private long next;\n+  private int block;\n+  ByteBuffer buffer;\n+  private PageCursor page;\n+  private PageCursor stringPage;\n+  private PageCursor arrayPage;\n+  private PropertyContainerState propertiesState;\n+  private Iterator<StorageProperty> txStateChangedProperties;\n+  private StorageProperty txStateValue;\n+  private AssertOpen assertOpen;\n+  private final DefaultCursors pool;\n+\n+  DefaultPropertyCursor(DefaultCursors pool)\n+  {\n+    super(NO_ID);\n+    this.pool = pool;\n+  }\n \n-    void initNode( long nodeReference, long reference, Read read, AssertOpen assertOpen )\n+  void initNode(long nodeReference, long reference, Read read, AssertOpen assertOpen)\n+  {\n+    assert nodeReference != NO_ID;\n+\n+    init(reference, read, assertOpen);\n+\n+    // Transaction state\n+    if (read.hasTxStateWithChanges())\n+    {\n+      this.propertiesState = read.txState().getNodeState(nodeReference);\n+      this.txStateChangedProperties = this.propertiesState.addedAndChangedProperties();\n+    }\n+  }\n+\n+  void initRelationship(long relationshipReference, long reference, Read read, AssertOpen assertOpen)\n+  {\n+    assert relationshipReference != NO_ID;\n+\n+    init(reference, read, assertOpen);\n+\n+    // Transaction state\n+    if (read.hasTxStateWithChanges())\n+    {\n+      this.propertiesState = read.txState().getRelationshipState(relationshipReference);\n+      this.txStateChangedProperties = this.propertiesState.addedAndChangedProperties();\n+    }\n+  }\n+\n+  void initGraph(long reference, Read read, AssertOpen assertOpen)\n+  {\n+    init(reference, read, assertOpen);\n+\n+    // Transaction state\n+    if (read.hasTxStateWithChanges())\n+    {\n+      this.propertiesState = read.txState().getGraphState();\n+      if (this.propertiesState != null)\n+      {\n+        this.txStateChangedProperties = this.propertiesState.addedAndChangedProperties();\n+      }\n+    }\n+  }\n+\n+  private void init(long reference, Read read, AssertOpen assertOpen)\n+  {\n+    if (getId() != NO_ID)\n+    {\n+      clear();\n+    }\n+\n+    this.assertOpen = assertOpen;\n+    //Set to high value to force a read\n+    this.block = Integer.MAX_VALUE;\n+    this.read = read;\n+    if (reference != NO_ID)\n+    {\n+      if (page == null)\n+      {\n+        page = read.propertyPage(reference);\n+      }\n+    }\n+\n+    // Store state\n+    this.next = reference;\n+  }\n+\n+  @Override\n+  public boolean next()\n+  {\n+    boolean hasNext;\n+    do\n+    {\n+      hasNext = innerNext();\n+    } while (hasNext && !allowed(propertyKey()));\n+    return hasNext;\n+  }\n+\n+  private boolean allowed(int propertyKey)\n+  {\n+    return read.ktx.securityContext().mode().allowsPropertyReads(propertyKey);\n+  }\n+\n+  private boolean innerNext()\n+  {\n+    if (txStateChangedProperties != null)\n     {\n-        assert nodeReference != NO_ID;\n-\n-        init( reference, read, assertOpen );\n-\n-        // Transaction state\n-        if ( read.hasTxStateWithChanges() )\n-        {\n-            this.propertiesState = read.txState().getNodeState( nodeReference );\n-            this.txStateChangedProperties = this.propertiesState.addedAndChangedProperties();\n-        }\n+      if (txStateChangedProperties.hasNext())\n+      {\n+        txStateValue = txStateChangedProperties.next();\n+        return true;\n+      } else\n+      {\n+        txStateChangedProperties = null;\n+        txStateValue = null;\n+      }\n     }\n \n-    void initRelationship( long relationshipReference, long reference, Read read, AssertOpen assertOpen )\n+    while (true)\n     {\n-        assert relationshipReference != NO_ID;\n-\n-        init( reference, read, assertOpen );\n-\n-        // Transaction state\n-        if ( read.hasTxStateWithChanges() )\n+      //Figure out number of blocks of record\n+      int numberOfBlocks = getNumberOfBlocks();\n+      while (block < numberOfBlocks)\n+      {\n+        //We have just read a record, so we are at the beginning\n+        if (block == INITIAL_POSITION)\n         {\n-            this.propertiesState = read.txState().getRelationshipState( relationshipReference );\n-            this.txStateChangedProperties = this.propertiesState.addedAndChangedProperties();\n-        }\n-    }\n-\n-    void initGraph( long reference, Read read, AssertOpen assertOpen )\n-    {\n-        init( reference, read, assertOpen );\n-\n-        // Transaction state\n-        if ( read.hasTxStateWithChanges() )\n-        {\n-            this.propertiesState = read.txState().getGraphState( );\n-            if ( this.propertiesState != null )\n-            {\n-                this.txStateChangedProperties = this.propertiesState.addedAndChangedProperties();\n-            }\n-        }\n-    }\n-\n-    private void init( long reference, Read read, AssertOpen assertOpen )\n-    {\n-        if ( getId() != NO_ID )\n-        {\n-            clear();\n-        }\n-\n-        this.assertOpen = assertOpen;\n-        //Set to high value to force a read\n-        this.block = Integer.MAX_VALUE;\n-        this.read = read;\n-        if ( reference != NO_ID )\n-        {\n-            if ( page == null )\n-            {\n-                page = read.propertyPage( reference );\n-            }\n-        }\n-\n-        // Store state\n-        this.next = reference;\n-    }\n-\n-    @Override\n-    public boolean next()\n-    {\n-        boolean hasNext;\n-        do\n-        {\n-            hasNext = innerNext();\n-        } while ( hasNext && !allowed( propertyKey() ) );\n-        return hasNext;\n-    }\n-\n-    private boolean allowed( int propertyKey )\n-    {\n-        return read.ktx.securityContext().mode().allowsPropertyReads( propertyKey );\n-    }\n-\n-    private boolean innerNext()\n-    {\n-        if ( txStateChangedProperties != null )\n-        {\n-            if ( txStateChangedProperties.hasNext() )\n-            {\n-                txStateValue = txStateChangedProperties.next();\n-                return true;\n-            }\n-            else\n-            {\n-                txStateChangedProperties = null;\n-                txStateValue = null;\n-            }\n-        }\n-\n-        while ( true )\n-        {\n-            //Figure out number of blocks of record\n-            int numberOfBlocks = getNumberOfBlocks();\n-            while ( block < numberOfBlocks )\n-            {\n-                //We have just read a record, so we are at the beginning\n-                if ( block == INITIAL_POSITION )\n-                {\n-                    block = 0;\n-                }\n-                else\n-                {\n-                    //Figure out the type and how many blocks that are used\n-                    long current = currentBlock();\n-                    PropertyType type = PropertyType.getPropertyTypeOrNull( current );\n-                    if ( type == null )\n-                    {\n-                        break;\n-                    }\n-                    block += type.calculateNumberOfBlocksUsed( current );\n-                }\n-                //nothing left, need to read a new record\n-                if ( block >= numberOfBlocks || type() == null )\n-                {\n-                    break;\n-                }\n-\n-                if ( !isPropertyChangedOrRemoved() )\n-                {\n-                    return true;\n-                }\n-            }\n-\n-            if ( next == NO_ID )\n-            {\n-                return false;\n-            }\n-\n-            read.property( this, next, page );\n-            next = getNextProp();\n-            block = INITIAL_POSITION;\n-        }\n-    }\n-\n-    private boolean isPropertyChangedOrRemoved()\n-    {\n-        return propertiesState != null && propertiesState.isPropertyChangedOrRemoved( propertyKey() );\n-    }\n-\n-    private long currentBlock()\n-    {\n-        return getBlocks()[block];\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        if ( !isClosed() )\n-        {\n-            propertiesState = null;\n-            txStateChangedProperties = null;\n-            txStateValue = null;\n-            read = null;\n-            clear();\n-\n-            pool.accept( this );\n-        }\n-    }\n-\n-    @Override\n-    public int propertyKey()\n-    {\n-        if ( txStateValue != null )\n-        {\n-            return txStateValue.propertyKeyId();\n-        }\n-        return PropertyBlock.keyIndexId( currentBlock() );\n-    }\n-\n-    @Override\n-    public ValueGroup propertyType()\n-    {\n-        if ( txStateValue != null )\n-        {\n-            return txStateValue.value().valueGroup();\n-        }\n-\n-        PropertyType type = type();\n-        if ( type == null )\n-        {\n-            return ValueGroup.NO_VALUE;\n-        }\n-        switch ( type )\n-        {\n-        case BOOL:\n-            return ValueGroup.BOOLEAN;\n-        case BYTE:\n-        case SHORT:\n-        case INT:\n-        case LONG:\n-        case FLOAT:\n-        case DOUBLE:\n-            return ValueGroup.NUMBER;\n-        case STRING:\n-        case CHAR:\n-        case SHORT_STRING:\n-            return ValueGroup.TEXT;\n-        case TEMPORAL:\n-        case GEOMETRY:\n-        case SHORT_ARRAY:\n-        case ARRAY:\n-            // value read is needed to get correct value group since type is not fine grained enough to match all ValueGroups\n-            return propertyValue().valueGroup();\n-        default:\n-            throw new UnsupportedOperationException( type.name() + \" not implemented\" );\n-        }\n-    }\n-\n-    private PropertyType type()\n-    {\n-        return PropertyType.getPropertyTypeOrNull( currentBlock() );\n-    }\n-\n-    @Override\n-    public Value propertyValue()\n-    {\n-        if ( txStateValue != null )\n-        {\n-            return txStateValue.value();\n-        }\n-\n-        Value value = readValue();\n-\n-        assertOpen.assertOpen();\n-        return value;\n-    }\n-\n-    private Value readValue()\n-    {\n-        PropertyType type = type();\n-        if ( type == null )\n-        {\n-            return Values.NO_VALUE;\n-        }\n-        switch ( type )\n-        {\n-        case BOOL:\n-            return readBoolean();\n-        case BYTE:\n-            return readByte();\n-        case SHORT:\n-            return readShort();\n-        case INT:\n-            return readInt();\n-        case LONG:\n-            return readLong();\n-        case FLOAT:\n-            return readFloat();\n-        case DOUBLE:\n-            return readDouble();\n-        case CHAR:\n-            return readChar();\n-        case SHORT_STRING:\n-            return readShortString();\n-        case SHORT_ARRAY:\n-            return readShortArray();\n-        case STRING:\n-            return readLongString();\n-        case ARRAY:\n-            return readLongArray();\n-        case GEOMETRY:\n-            return geometryValue();\n-        case TEMPORAL:\n-            return temporalValue();\n-        default:\n-            throw new IllegalStateException( \"Unsupported PropertyType: \" + type.name() );\n-        }\n-    }\n-\n-    Value geometryValue()\n-    {\n-        return GeometryType.decode( getBlocks(), block );\n-    }\n-\n-    Value temporalValue()\n-    {\n-        return TemporalType.decode( getBlocks(), block );\n-    }\n-\n-    private ArrayValue readLongArray()\n-    {\n-        long reference = PropertyBlock.fetchLong( currentBlock() );\n-        if ( arrayPage == null )\n-        {\n-            arrayPage = read.arrayPage( reference );\n-        }\n-        return read.array( this, reference, arrayPage );\n-    }\n-\n-    private TextValue readLongString()\n-    {\n-        long reference = PropertyBlock.fetchLong( currentBlock() );\n-        if ( stringPage == null )\n+          block = 0;\n+        } else\n         {\n-            stringPage = read.stringPage( reference );\n+          //Figure out the type and how many blocks that are used\n+          long current = currentBlock();\n+          PropertyType type = PropertyType.getPropertyTypeOrNull(current);\n+          if (type == null)\n+          {\n+            break;\n+          }\n+          block += type.calculateNumberOfBlocksUsed(current);\n         }\n-        return read.string( this, reference, stringPage );\n-    }\n-\n-    private Value readShortArray()\n-    {\n-        Bits bits = Bits.bits( MAX_BYTES_IN_SHORT_STRING_OR_SHORT_ARRAY );\n-        int blocksUsed = ShortArray.calculateNumberOfBlocksUsed( currentBlock() );\n-        for ( int i = 0; i < blocksUsed; i++ )\n+        //nothing left, need to read a new record\n+        if (block >= numberOfBlocks || type() == null)\n         {\n-            bits.put( getBlocks()[block + i] );\n+          break;\n         }\n-        return ShortArray.decode( bits );\n-    }\n \n-    private TextValue readShortString()\n-    {\n-        return LongerShortString\n-                .decode( getBlocks(), block, LongerShortString.calculateNumberOfBlocksUsed( currentBlock() ) );\n-    }\n-\n-    private TextValue readChar()\n-    {\n-        return Values.charValue( (char) PropertyBlock.fetchShort( currentBlock() ) );\n-    }\n-\n-    private DoubleValue readDouble()\n-    {\n-        return Values.doubleValue( Double.longBitsToDouble( getBlocks()[block + 1] ) );\n-    }\n-\n-    private FloatValue readFloat()\n-    {\n-        return Values.floatValue( Float.intBitsToFloat( PropertyBlock.fetchInt( currentBlock() ) ) );\n-    }\n-\n-    private LongValue readLong()\n-    {\n-        if ( PropertyBlock.valueIsInlined( currentBlock() ) )\n-        {\n-            return Values.longValue( PropertyBlock.fetchLong( currentBlock() ) >>> 1 );\n-        }\n-        else\n+        if (!isPropertyChangedOrRemoved())\n         {\n-            return Values.longValue( getBlocks()[block + 1] );\n+          return true;\n         }\n-    }\n+      }\n \n-    private IntValue readInt()\n-    {\n-        return Values.intValue( PropertyBlock.fetchInt( currentBlock() ) );\n-    }\n+      if (next == NO_ID)\n+      {\n+        return false;\n+      }\n \n-    private ShortValue readShort()\n-    {\n-        return Values.shortValue( PropertyBlock.fetchShort( currentBlock() ) );\n+      read.property(this, next, page);\n+      next = getNextProp();\n+      block = INITIAL_POSITION;\n     }\n+  }\n \n-    private ByteValue readByte()\n-    {\n-        return Values.byteValue( PropertyBlock.fetchByte( currentBlock() ) );\n-    }\n-\n-    private BooleanValue readBoolean()\n-    {\n-        return Values.booleanValue( PropertyBlock.fetchByte( currentBlock() ) == 1 );\n-    }\n-\n-    @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> target )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean booleanValue()\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public String stringValue()\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public long longValue()\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public double doubleValue()\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueEqualTo( long value )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n+  private boolean isPropertyChangedOrRemoved()\n+  {\n+    return propertiesState != null && propertiesState.isPropertyChangedOrRemoved(propertyKey());\n+  }\n \n-    @Override\n-    public boolean valueEqualTo( double value )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n+  private long currentBlock()\n+  {\n+    return getBlocks()[block];\n+  }\n \n-    @Override\n-    public boolean valueEqualTo( String value )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueMatches( Pattern regex )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueGreaterThan( long number )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueGreaterThan( double number )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueLessThan( long number )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueLessThan( double number )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueGreaterThanOrEqualTo( long number )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueGreaterThanOrEqualTo( double number )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueLessThanOrEqualTo( long number )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean valueLessThanOrEqualTo( double number )\n-    {\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public boolean isClosed()\n-    {\n-        return read == null;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        if ( isClosed() )\n-        {\n-            return \"PropertyCursor[closed state]\";\n-        }\n-        else\n-        {\n-            return \"PropertyCursor[id=\" + getId() + \", open state with: block=\" + block + \", next=\" + next +\n-                   \", underlying record=\" + super.toString() + \" ]\";\n-        }\n-    }\n-\n-    public void release()\n-    {\n-        if ( stringPage != null )\n-        {\n-            stringPage.close();\n-            stringPage = null;\n-        }\n-        if ( arrayPage != null )\n-        {\n-            arrayPage.close();\n-            arrayPage = null;\n-        }\n-        if ( page != null )\n-        {\n-            page.close();\n-            page = null;\n-        }\n-    }\n+  @Override\n+  public void close()\n+  {\n+    if (!isClosed())\n+    {\n+      propertiesState = null;\n+      txStateChangedProperties = null;\n+      txStateValue = null;\n+      read = null;\n+      clear();\n+\n+      pool.accept(this);\n+    }\n+  }\n+\n+  @Override\n+  public int propertyKey()\n+  {\n+    if (txStateValue != null)\n+    {\n+      return txStateValue.propertyKeyId();\n+    }\n+    return PropertyBlock.keyIndexId(currentBlock());\n+  }\n+\n+  @Override\n+  public ValueGroup propertyType()\n+  {\n+    if (txStateValue != null)\n+    {\n+      return txStateValue.value().valueGroup();\n+    }\n+\n+    PropertyType type = type();\n+    if (type == null)\n+    {\n+      return ValueGroup.NO_VALUE;\n+    }\n+    switch (type)\n+    {\n+      case BOOL:\n+        return ValueGroup.BOOLEAN;\n+      case BYTE:\n+      case SHORT:\n+      case INT:\n+      case LONG:\n+      case FLOAT:\n+      case DOUBLE:\n+        return ValueGroup.NUMBER;\n+      case STRING:\n+      case CHAR:\n+      case SHORT_STRING:\n+        return ValueGroup.TEXT;\n+      case TEMPORAL:\n+      case GEOMETRY:\n+      case SHORT_ARRAY:\n+      case ARRAY:\n+        // value read is needed to get correct value group since type is not fine grained enough to match all ValueGroups\n+        return propertyValue().valueGroup();\n+      default:\n+        throw new UnsupportedOperationException(type.name() + \" not implemented\");\n+    }\n+  }\n+\n+  private PropertyType type()\n+  {\n+    return PropertyType.getPropertyTypeOrNull(currentBlock());\n+  }\n+\n+  @Override\n+  public Value propertyValue()\n+  {\n+    if (txStateValue != null)\n+    {\n+      return txStateValue.value();\n+    }\n+\n+    Value value = readValue();\n+\n+    assertOpen.assertOpen();\n+    return value;\n+  }\n+\n+  private Value readValue()\n+  {\n+    PropertyType type = type();\n+    if (type == null)\n+    {\n+      return Values.NO_VALUE;\n+    }\n+    switch (type)\n+    {\n+      case BOOL:\n+        return readBoolean();\n+      case BYTE:\n+        return readByte();\n+      case SHORT:\n+        return readShort();\n+      case INT:\n+        return readInt();\n+      case LONG:\n+        return readLong();\n+      case FLOAT:\n+        return readFloat();\n+      case DOUBLE:\n+        return readDouble();\n+      case CHAR:\n+        return readChar();\n+      case SHORT_STRING:\n+        return readShortString();\n+      case SHORT_ARRAY:\n+        return readShortArray();\n+      case STRING:\n+        return readLongString();\n+      case ARRAY:\n+        return readLongArray();\n+      case GEOMETRY:\n+        return geometryValue();\n+      case TEMPORAL:\n+        return temporalValue();\n+      default:\n+        throw new IllegalStateException(\"Unsupported PropertyType: \" + type.name());\n+    }\n+  }\n+\n+  Value geometryValue()\n+  {\n+    return GeometryType.decode(getBlocks(), block);\n+  }\n+\n+  Value temporalValue()\n+  {\n+    return TemporalType.decode(getBlocks(), block);\n+  }\n+\n+  private ArrayValue readLongArray()\n+  {\n+    long reference = PropertyBlock.fetchLong(currentBlock());\n+    if (arrayPage == null)\n+    {\n+      arrayPage = read.arrayPage(reference);\n+    }\n+    return read.array(this, reference, arrayPage);\n+  }\n+\n+  private TextValue readLongString()\n+  {\n+    long reference = PropertyBlock.fetchLong(currentBlock());\n+    if (stringPage == null)\n+    {\n+      stringPage = read.stringPage(reference);\n+    }\n+    return read.string(this, reference, stringPage);\n+  }\n+\n+  private Value readShortArray()\n+  {\n+    Bits bits = Bits.bits(MAX_BYTES_IN_SHORT_STRING_OR_SHORT_ARRAY);\n+    int blocksUsed = ShortArray.calculateNumberOfBlocksUsed(currentBlock());\n+    for (int i = 0; i < blocksUsed; i++)\n+    {\n+      bits.put(getBlocks()[block + i]);\n+    }\n+    return ShortArray.decode(bits);\n+  }\n+\n+  private TextValue readShortString()\n+  {\n+    return LongerShortString\n+        .decode(getBlocks(), block, LongerShortString.calculateNumberOfBlocksUsed(currentBlock()));\n+  }\n+\n+  private TextValue readChar()\n+  {\n+    return Values.charValue((char) PropertyBlock.fetchShort(currentBlock()));\n+  }\n+\n+  private DoubleValue readDouble()\n+  {\n+    return Values.doubleValue(Double.longBitsToDouble(getBlocks()[block + 1]));\n+  }\n+\n+  private FloatValue readFloat()\n+  {\n+    return Values.floatValue(Float.intBitsToFloat(PropertyBlock.fetchInt(currentBlock())));\n+  }\n+\n+  private LongValue readLong()\n+  {\n+    if (PropertyBlock.valueIsInlined(currentBlock()))\n+    {\n+      return Values.longValue(PropertyBlock.fetchLong(currentBlock()) >>> 1);\n+    } else\n+    {\n+      return Values.longValue(getBlocks()[block + 1]);\n+    }\n+  }\n+\n+  private IntValue readInt()\n+  {\n+    return Values.intValue(PropertyBlock.fetchInt(currentBlock()));\n+  }\n+\n+  private ShortValue readShort()\n+  {\n+    return Values.shortValue(PropertyBlock.fetchShort(currentBlock()));\n+  }\n+\n+  private ByteValue readByte()\n+  {\n+    return Values.byteValue(PropertyBlock.fetchByte(currentBlock()));\n+  }\n+\n+  private BooleanValue readBoolean()\n+  {\n+    return Values.booleanValue(PropertyBlock.fetchByte(currentBlock()) == 1);\n+  }\n+\n+  @Override\n+  public <E extends Exception> void writeTo(ValueWriter<E> target)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean booleanValue()\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public String stringValue()\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public long longValue()\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public double doubleValue()\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueEqualTo(long value)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueEqualTo(double value)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueEqualTo(String value)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueMatches(Pattern regex)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueGreaterThan(long number)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueGreaterThan(double number)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueLessThan(long number)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueLessThan(double number)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueGreaterThanOrEqualTo(long number)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueGreaterThanOrEqualTo(double number)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueLessThanOrEqualTo(long number)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean valueLessThanOrEqualTo(double number)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public boolean isClosed()\n+  {\n+    return read == null;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    if (isClosed())\n+    {\n+      return \"PropertyCursor[closed state]\";\n+    } else\n+    {\n+      return \"PropertyCursor[id=\" + getId() + \", open state with: block=\" + block + \", next=\" + next +\n+          \", underlying record=\" + super.toString() + \" ]\";\n+    }\n+  }\n+\n+  public void release()\n+  {\n+    if (stringPage != null)\n+    {\n+      stringPage.close();\n+      stringPage = null;\n+    }\n+    if (arrayPage != null)\n+    {\n+      arrayPage.close();\n+      arrayPage = null;\n+    }\n+    if (page != null)\n+    {\n+      page.close();\n+      page = null;\n+    }\n+  }\n }\n",
            "diff_size": 866
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3660/DefaultPropertyCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3660/DefaultPropertyCursor.java\nindex cb13d288ef2..8f9f5d37c3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3660/DefaultPropertyCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3660/DefaultPropertyCursor.java\n@@ -191,7 +191,8 @@ public class DefaultPropertyCursor extends PropertyRecord implements PropertyCur\n                     {\n                         break;\n                     }\n-                    block += type.calculateNumberOfBlocksUsed( current );\n+\n+block += type.calculateNumberOfBlocksUsed( current );\n                 }\n                 //nothing left, need to read a new record\n                 if ( block >= numberOfBlocks || type() == null )\n@@ -236,8 +237,7 @@ public class DefaultPropertyCursor extends PropertyRecord implements PropertyCur\n             txStateValue = null;\n             read = null;\n             clear();\n-\n-            pool.accept( this );\n+pool.accept( this );\n         }\n     }\n \n@@ -248,7 +248,8 @@ public class DefaultPropertyCursor extends PropertyRecord implements PropertyCur\n         {\n             return txStateValue.propertyKeyId();\n         }\n-        return PropertyBlock.keyIndexId( currentBlock() );\n+\n+return PropertyBlock.keyIndexId( currentBlock() );\n     }\n \n     @Override\n@@ -304,8 +305,7 @@ public class DefaultPropertyCursor extends PropertyRecord implements PropertyCur\n         }\n \n         Value value = readValue();\n-\n-        assertOpen.assertOpen();\n+assertOpen.assertOpen();\n         return value;\n     }\n \n@@ -368,7 +368,8 @@ public class DefaultPropertyCursor extends PropertyRecord implements PropertyCur\n         {\n             arrayPage = read.arrayPage( reference );\n         }\n-        return read.array( this, reference, arrayPage );\n+\n+return read.array( this, reference, arrayPage );\n     }\n \n     private TextValue readLongString()\n@@ -378,7 +379,8 @@ public class DefaultPropertyCursor extends PropertyRecord implements PropertyCur\n         {\n             stringPage = read.stringPage( reference );\n         }\n-        return read.string( this, reference, stringPage );\n+\n+return read.string( this, reference, stringPage );\n     }\n \n     private Value readShortArray()\n@@ -389,13 +391,13 @@ public class DefaultPropertyCursor extends PropertyRecord implements PropertyCur\n         {\n             bits.put( getBlocks()[block + i] );\n         }\n-        return ShortArray.decode( bits );\n+\n+return ShortArray.decode( bits );\n     }\n \n     private TextValue readShortString()\n     {\n-        return LongerShortString\n-                .decode( getBlocks(), block, LongerShortString.calculateNumberOfBlocksUsed( currentBlock() ) );\n+        return LongerShortString.decode( getBlocks(), block, LongerShortString.calculateNumberOfBlocksUsed( currentBlock() ) );\n     }\n \n     private TextValue readChar()\n@@ -562,9 +564,8 @@ public class DefaultPropertyCursor extends PropertyRecord implements PropertyCur\n         }\n         else\n         {\n-            return \"PropertyCursor[id=\" + getId() + \", open state with: block=\" + block + \", next=\" + next +\n-                   \", underlying record=\" + super.toString() + \" ]\";\n-        }\n+            return \"PropertyCursor[id=\" + getId() + \", open state with: block=\" + block + \", next=\" + next + \", underlying record=\" + super.toString() + \" ]\";\n+    }\n     }\n \n     public void release()\n@@ -574,15 +575,17 @@ public class DefaultPropertyCursor extends PropertyRecord implements PropertyCur\n             stringPage.close();\n             stringPage = null;\n         }\n-        if ( arrayPage != null )\n+\n+if ( arrayPage != null )\n         {\n             arrayPage.close();\n             arrayPage = null;\n         }\n-        if ( page != null )\n+\n+if ( page != null )\n         {\n             page.close();\n             page = null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
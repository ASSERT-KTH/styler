{
    "project_name": "graphfoundation-ongdb",
    "error_id": "149",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/149/JavaSourceFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/149/JavaSourceFile.java\nindex 13eecb37ffd..38dc8a2096c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/149/JavaSourceFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/149/JavaSourceFile.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.source;\n \n import java.io.IOException;\n@@ -27,40 +28,40 @@ import static javax.tools.JavaFileObject.Kind.SOURCE;\n \n class JavaSourceFile extends SimpleJavaFileObject\n {\n-    private final StringBuilder content;\n+  private final StringBuilder content;\n \n-    JavaSourceFile( URI uri, StringBuilder content )\n-    {\n-        super( uri, SOURCE );\n-        this.content = content;\n-    }\n+  JavaSourceFile(URI uri, StringBuilder content)\n+  {\n+    super(uri, SOURCE);\n+    this.content = content;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return getClass().getSimpleName() + \"[\" + toUri() + \"]\";\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return getClass().getSimpleName() + \"[\" + toUri() + \"]\";\n+  }\n \n-    @Override\n-    public CharSequence getCharContent( boolean ignoreEncodingErrors )\n-    {\n-        return content;\n-    }\n+  @Override\n+  public CharSequence getCharContent(boolean ignoreEncodingErrors)\n+  {\n+    return content;\n+  }\n \n-    /**\n-     * Reads characters into an array.\n-     *\n-     * @param pos The position of this file to start reading from\n-     * @param cbuf Destination buffer\n-     * @param off Offset at which to start storing characters\n-     * @param len Maximum number of characters to read (> 0)\n-     * @return The number of characters read (0 if no characters remain)\n-     * @see java.io.Reader#read(char[], int, int)\n-     */\n-    public int read( int pos, char[] cbuf, int off, int len )\n-    {\n-        len = Math.min( content.length() - pos, len );\n-        content.getChars( pos, pos + len, cbuf, off );\n-        return len;\n-    }\n+  /**\n+   * Reads characters into an array.\n+   *\n+   * @param pos  The position of this file to start reading from\n+   * @param cbuf Destination buffer\n+   * @param off  Offset at which to start storing characters\n+   * @param len  Maximum number of characters to read (> 0)\n+   * @return The number of characters read (0 if no characters remain)\n+   * @see java.io.Reader#read(char[], int, int)\n+   */\n+  public int read(int pos, char[] cbuf, int off, int len)\n+  {\n+    len = Math.min(content.length() - pos, len);\n+    content.getChars(pos, pos + len, cbuf, off);\n+    return len;\n+  }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/149/JavaSourceFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/149/JavaSourceFile.java\nindex 13eecb37ffd..cd643dcc86e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/149/JavaSourceFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/149/JavaSourceFile.java\n@@ -63,4 +63,4 @@ class JavaSourceFile extends SimpleJavaFileObject\n         content.getChars( pos, pos + len, cbuf, off );\n         return len;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
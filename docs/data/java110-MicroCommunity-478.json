{
    "project_name": "java110-MicroCommunity",
    "error_id": "478",
    "information": {
        "errors": [
            {
                "line": "104",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 156).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            repairPoolPo.setCommunityId(paramObj.getString(\"communityId\"));\n            repairPoolPo.setState(RepairDto.STATE_APPRAISE);\n            business.getJSONObject(CommonConstant.HTTP_BUSINESS_DATAS).put(RepairPoolPo.class.getSimpleName(), BeanConvertUtil.beanCovertMap(repairPoolPo));\n            businesses.add(business);\n            feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "104",
                    "column": "50",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "105",
                    "column": "34",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/478/PayFeeConfirmListener.java\nindex 98a6e3fa1c7..1b6fe51a288 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/478/PayFeeConfirmListener.java\n@@ -101,7 +101,8 @@ public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n             repairPoolPo.setRepairId(feeAttrDtos.get(0).getValue());\n             repairPoolPo.setCommunityId(paramObj.getString(\"communityId\"));\n             repairPoolPo.setState(RepairDto.STATE_APPRAISE);\n-            business.getJSONObject(CommonConstant.HTTP_BUSINESS_DATAS).put(RepairPoolPo.class.getSimpleName(), BeanConvertUtil.beanCovertMap(repairPoolPo));\n+            business.getJSONObject(CommonConstant. HTTP_BUSINESS_DATAS).put(RepairPoolPo.\n+            class.getSimpleName(),BeanConvertUtil .beanCovertMap(repairPoolPo));\n             businesses.add(business);\n             feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/478/PayFeeConfirmListener.java\nindex 98a6e3fa1c7..f41db163471 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/478/PayFeeConfirmListener.java\n@@ -101,7 +101,8 @@ public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n             repairPoolPo.setRepairId(feeAttrDtos.get(0).getValue());\n             repairPoolPo.setCommunityId(paramObj.getString(\"communityId\"));\n             repairPoolPo.setState(RepairDto.STATE_APPRAISE);\n-            business.getJSONObject(CommonConstant.HTTP_BUSINESS_DATAS).put(RepairPoolPo.class.getSimpleName(), BeanConvertUtil.beanCovertMap(repairPoolPo));\n+            business.getJSONObject(CommonConstant.HTTP_BUSINESS_DATAS)\n+                .put(RepairPoolPo.class.getSimpleName(), BeanConvertUtil.beanCovertMap(repairPoolPo));\n             businesses.add(business);\n             feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/478/PayFeeConfirmListener.java\nindex 98a6e3fa1c7..4515fe78cb7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/478/PayFeeConfirmListener.java\n@@ -142,4 +142,4 @@ public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n         return DEFAULT_ORDER;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/478/PayFeeConfirmListener.java\nindex 98a6e3fa1c7..a13a8f97df7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/478/PayFeeConfirmListener.java\n@@ -25,7 +25,6 @@ import org.springframework.http.HttpHeaders;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n-\n import java.util.List;\n import java.util.Map;\n \n@@ -37,6 +36,8 @@ import java.util.Map;\n  * @Version 1.0\n  * add by wuxw 2019/6/3\n  **/\n+\n+\n @Java110Listener(\"PayFeeConfirmListener\")\n public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n \n@@ -60,25 +61,20 @@ public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n \n     @Override\n     public void soService(ServiceDataFlowEvent event) {\n-\n         logger.debug(\"ServiceDataFlowEvent : {}\", event);\n-\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         AppService service = event.getAppService();\n-\n         String paramIn = dataFlowContext.getReqData();\n \n         //\u6821\u9a8c\u6570\u636e\n         validate(paramIn);\n         JSONObject paramObj = JSONObject.parseObject(paramIn);\n-\n         HttpHeaders header = new HttpHeaders();\n         dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.HTTP_ORDER_TYPE_CD, \"D\");\n         JSONArray businesses = new JSONArray();\n         dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.O_ID, paramObj.getString(\"oId\"));\n         dataFlowContext.getRequestCurrentHeaders().put(CommonConstant.ORDER_PROCESS, Orders.ORDER_PROCESS_ORDER_CONFIRM_SUBMIT);\n         ResponseEntity<String> responseEntity = feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n-\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             dataFlowContext.setResponseEntity(responseEntity);\n             return;\n@@ -107,8 +103,6 @@ public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n         }\n \n         dataFlowContext.setResponseEntity(responseEntity);\n-\n-\n     }\n \n     /**\n@@ -117,6 +111,9 @@ public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n      * @param orders  \u8ba2\u5355\u4fe1\u606f\n      * @param headers \u5934\u90e8\u4fe1\u606f\n      */\n+\n+\n+\n     protected void freshOrderProtocol(JSONObject orders, Map<String, String> headers) {\n         feeBMOImpl.freshOrderProtocol(orders, headers);\n         orders.put(\"orderProcess\", Orders.ORDER_PROCESS_ORDER_CONFIRM_SUBMIT);\n@@ -130,16 +127,16 @@ public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n      *                \"memberId\": \"3456789\",\n      *                \"memberTypeCd\": \"390001200001\"\n      */\n+\n+\n     private void validate(String paramIn) {\n         Assert.jsonObjectHaveKey(paramIn, \"oId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u8ba2\u5355\u4fe1\u606f\");\n         JSONObject paramInObj = JSONObject.parseObject(paramIn);\n         Assert.hasLength(paramInObj.getString(\"oId\"), \"\u8ba2\u5355\u4fe1\u606f\u4e0d\u80fd\u4e3a\u7a7a\");\n-\n     }\n \n     @Override\n     public int getOrder() {\n         return DEFAULT_ORDER;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "104",
                    "column": "50",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "105",
                    "column": "34",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/478/PayFeeConfirmListener.java\nindex 98a6e3fa1c7..1b6fe51a288 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/478/PayFeeConfirmListener.java\n@@ -101,7 +101,8 @@ public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n             repairPoolPo.setRepairId(feeAttrDtos.get(0).getValue());\n             repairPoolPo.setCommunityId(paramObj.getString(\"communityId\"));\n             repairPoolPo.setState(RepairDto.STATE_APPRAISE);\n-            business.getJSONObject(CommonConstant.HTTP_BUSINESS_DATAS).put(RepairPoolPo.class.getSimpleName(), BeanConvertUtil.beanCovertMap(repairPoolPo));\n+            business.getJSONObject(CommonConstant. HTTP_BUSINESS_DATAS).put(RepairPoolPo.\n+            class.getSimpleName(),BeanConvertUtil .beanCovertMap(repairPoolPo));\n             businesses.add(business);\n             feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "105",
                    "column": "34",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "105",
                    "column": "79",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/478/PayFeeConfirmListener.java\nindex 98a6e3fa1c7..bfd3bcef3b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/478/PayFeeConfirmListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/478/PayFeeConfirmListener.java\n@@ -101,8 +101,8 @@ public class PayFeeConfirmListener extends AbstractServiceApiDataFlowListener {\n             repairPoolPo.setRepairId(feeAttrDtos.get(0).getValue());\n             repairPoolPo.setCommunityId(paramObj.getString(\"communityId\"));\n             repairPoolPo.setState(RepairDto.STATE_APPRAISE);\n-            business.getJSONObject(CommonConstant.HTTP_BUSINESS_DATAS).put(RepairPoolPo.class.getSimpleName(), BeanConvertUtil.beanCovertMap(repairPoolPo));\n-            businesses.add(business);\n+            business.getJSONObject(CommonConstant.HTTP_BUSINESS_DATAS) .put(RepairPoolPo.\n+            class.getSimpleName(),BeanConvertUtil.beanCovertMap(repairPoolPo));businesses.add(business);\n             feeBMOImpl.callService(dataFlowContext, service.getServiceCode(), businesses);\n         }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1813",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1813/AtomicBroadcastContextImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1813/AtomicBroadcastContextImpl.java\nindex 4300bd2a3ab..31aedbb5495 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1813/AtomicBroadcastContextImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1813/AtomicBroadcastContextImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context;\n \n import java.util.concurrent.Executor;\n@@ -41,60 +42,60 @@ class AtomicBroadcastContextImpl\n     extends AbstractContextImpl\n     implements AtomicBroadcastContext\n {\n-    private final Listeners<AtomicBroadcastListener> listeners = new Listeners<>();\n-    private final Executor executor;\n-    private final HeartbeatContext heartbeatContext;\n+  private final Listeners<AtomicBroadcastListener> listeners = new Listeners<>();\n+  private final Executor executor;\n+  private final HeartbeatContext heartbeatContext;\n \n-    AtomicBroadcastContextImpl( org.neo4j.cluster.InstanceId me, CommonContextState commonState,\n-                                LogProvider logging,\n-                                Timeouts timeouts, Executor executor, HeartbeatContext heartbeatContext  )\n-    {\n-        super( me, commonState, logging, timeouts );\n-        this.executor = executor;\n-        this.heartbeatContext = heartbeatContext;\n-    }\n+  AtomicBroadcastContextImpl(org.neo4j.cluster.InstanceId me, CommonContextState commonState,\n+                             LogProvider logging,\n+                             Timeouts timeouts, Executor executor, HeartbeatContext heartbeatContext)\n+  {\n+    super(me, commonState, logging, timeouts);\n+    this.executor = executor;\n+    this.heartbeatContext = heartbeatContext;\n+  }\n \n-    @Override\n-    public void addAtomicBroadcastListener( AtomicBroadcastListener listener )\n-    {\n-        listeners.add( listener );\n-    }\n+  @Override\n+  public void addAtomicBroadcastListener(AtomicBroadcastListener listener)\n+  {\n+    listeners.add(listener);\n+  }\n \n-    @Override\n-    public void removeAtomicBroadcastListener( AtomicBroadcastListener listener )\n-    {\n-        listeners.remove( listener );\n-    }\n+  @Override\n+  public void removeAtomicBroadcastListener(AtomicBroadcastListener listener)\n+  {\n+    listeners.remove(listener);\n+  }\n \n-    @Override\n-    public void receive( Payload value )\n-    {\n-        listeners.notify( executor, listener -> listener.receive( value ) );\n-    }\n+  @Override\n+  public void receive(Payload value)\n+  {\n+    listeners.notify(executor, listener -> listener.receive(value));\n+  }\n \n-    public AtomicBroadcastContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging,\n-                                                Timeouts timeouts, Executor executor, HeartbeatContext heartbeatContext )\n-    {\n-        return new AtomicBroadcastContextImpl( me, commonStateSnapshot, logging, timeouts, executor, heartbeatContext );\n-    }\n+  public AtomicBroadcastContextImpl snapshot(CommonContextState commonStateSnapshot, LogProvider logging,\n+                                             Timeouts timeouts, Executor executor, HeartbeatContext heartbeatContext)\n+  {\n+    return new AtomicBroadcastContextImpl(me, commonStateSnapshot, logging, timeouts, executor, heartbeatContext);\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        return this == o || !(o == null || getClass() != o.getClass());\n-    }\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    return this == o || !(o == null || getClass() != o.getClass());\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return 0;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return 0;\n+  }\n \n-    @Override\n-    public boolean hasQuorum()\n-    {\n-        int availableMembers = (int) Iterables.count( heartbeatContext.getAlive() );\n-        int totalMembers = commonState.configuration().getMembers().size();\n-        return Quorums.isQuorum( availableMembers, totalMembers );\n-    }\n+  @Override\n+  public boolean hasQuorum()\n+  {\n+    int availableMembers = (int) Iterables.count(heartbeatContext.getAlive());\n+    int totalMembers = commonState.configuration().getMembers().size();\n+    return Quorums.isQuorum(availableMembers, totalMembers);\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1813/AtomicBroadcastContextImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1813/AtomicBroadcastContextImpl.java\nindex 4300bd2a3ab..41505370c0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1813/AtomicBroadcastContextImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1813/AtomicBroadcastContextImpl.java\n@@ -37,18 +37,15 @@ import org.neo4j.logging.LogProvider;\n  * <p/>\n  * This holds the set of listeners for atomic broadcasts, and allows distribution of received values to those listeners.\n  */\n-class AtomicBroadcastContextImpl\n-    extends AbstractContextImpl\n-    implements AtomicBroadcastContext\n+class AtomicBroadcastContextImpl extends AbstractContextImpl implements AtomicBroadcastContext\n {\n     private final Listeners<AtomicBroadcastListener> listeners = new Listeners<>();\n     private final Executor executor;\n     private final HeartbeatContext heartbeatContext;\n \n-    AtomicBroadcastContextImpl( org.neo4j.cluster.InstanceId me, CommonContextState commonState,\n-                                LogProvider logging,\n-                                Timeouts timeouts, Executor executor, HeartbeatContext heartbeatContext  )\n-    {\n+    AtomicBroadcastContextImpl( org.neo4j.cluster.InstanceId me, CommonContextState commonState, LogProvider logging,\n+                                Timeouts timeouts, Executor executor, HeartbeatContext heartbeatContext )\n+{\n         super( me, commonState, logging, timeouts );\n         this.executor = executor;\n         this.heartbeatContext = heartbeatContext;\n@@ -72,16 +69,15 @@ class AtomicBroadcastContextImpl\n         listeners.notify( executor, listener -> listener.receive( value ) );\n     }\n \n-    public AtomicBroadcastContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging,\n-                                                Timeouts timeouts, Executor executor, HeartbeatContext heartbeatContext )\n-    {\n+    public AtomicBroadcastContextImpl snapshot( CommonContextState commonStateSnapshot, LogProvider logging, Timeouts timeouts, Executor executor, HeartbeatContext heartbeatContext )\n+{\n         return new AtomicBroadcastContextImpl( me, commonStateSnapshot, logging, timeouts, executor, heartbeatContext );\n     }\n \n     @Override\n     public boolean equals( Object o )\n     {\n-        return this == o || !(o == null || getClass() != o.getClass());\n+        return this == o || !( o == null || getClass() != o.getClass() );\n     }\n \n     @Override\n@@ -93,8 +89,8 @@ class AtomicBroadcastContextImpl\n     @Override\n     public boolean hasQuorum()\n     {\n-        int availableMembers = (int) Iterables.count( heartbeatContext.getAlive() );\n+        int availableMembers = ( int) Iterables.count( heartbeatContext.getAlive() );\n         int totalMembers = commonState.configuration().getMembers().size();\n         return Quorums.isQuorum( availableMembers, totalMembers );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
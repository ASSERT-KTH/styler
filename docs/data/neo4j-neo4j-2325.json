{
    "project_name": "neo4j-neo4j",
    "error_id": "2325",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "161",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "473",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "570",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "650",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "652",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "667",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "667",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "675",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "675",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "700",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "700",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "713",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "715",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "751",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "751",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "757",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "757",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "768",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "768",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "774",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "774",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "776",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "776",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "812",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "812",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "858",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "858",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "865",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "865",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "882",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "882",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "888",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "888",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "894",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "894",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "902",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "902",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "918",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "918",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "920",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "920",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "926",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "926",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "935",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "936",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "949",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "949",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "956",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "956",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "958",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "958",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "961",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "961",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "964",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "974",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "974",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "976",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "976",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "978",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "978",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "983",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "983",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "985",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "985",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "987",
                    "column": "96",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "987",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "988",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "988",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "994",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "994",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "999",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "999",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "999",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1001",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1001",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1006",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1006",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1013",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1013",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1016",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1016",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1028",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1028",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1032",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1032",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1034",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1034",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1038",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1038",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1040",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1040",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1042",
                    "column": "96",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1042",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1050",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1050",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1061",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1061",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1065",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1071",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1071",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1071",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1082",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1082",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1087",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1087",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1089",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1089",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1096",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1096",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1099",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1099",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1110",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1110",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1113",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1113",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1115",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1115",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1120",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1120",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1122",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1122",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1126",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1126",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1131",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1133",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1133",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1138",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1138",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1140",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1141",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1143",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1143",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1151",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1151",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1155",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1155",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1157",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1157",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1161",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1161",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1164",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1164",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1167",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1167",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1172",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1172",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1176",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1176",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1178",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1178",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1181",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1181",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1183",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1183",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1188",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1188",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1201",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1201",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1205",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1212",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1212",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1212",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1219",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1219",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1231",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1231",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1236",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1236",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1248",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1248",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1253",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1253",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1255",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1255",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1260",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1271",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1271",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1286",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1286",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1286",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1294",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1294",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1299",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1299",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1302",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1302",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1305",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1309",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1311",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1311",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1313",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1315",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1315",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1315",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1315",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1320",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1320",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1324",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1324",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1326",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1326",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1326",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1326",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1332",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1332",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1344",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1344",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1344",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1346",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1346",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1352",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1352",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1355",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1355",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1362",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1362",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1367",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1367",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1369",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1369",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1375",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1375",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1377",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1377",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1384",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1384",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1389",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1389",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1395",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1395",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1401",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1401",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1407",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1407",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1411",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1411",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1417",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1417",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1425",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1425",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1427",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1427",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1429",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1429",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1438",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1438",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1441",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1441",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1443",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1443",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1447",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1447",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1453",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1453",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1455",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1455",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1457",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1457",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1459",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1459",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1461",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1461",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1462",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1464",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1464",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1469",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1469",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1470",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1470",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1475",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1475",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1477",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1477",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1479",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1479",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1482",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1484",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1484",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1486",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1487",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1489",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1489",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1491",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1492",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1494",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1494",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1496",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1497",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1501",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1501",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1511",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1516",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1516",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1516",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1518",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1518",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1522",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1522",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1523",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1523",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1525",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1525",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1531",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1531",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1540",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1541",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1552",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1552",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1555",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1555",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1562",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1562",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1565",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1565",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1572",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1572",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1575",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1575",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1582",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1582",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1585",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1585",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1593",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1593",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1596",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1596",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1603",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1603",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1606",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1606",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1613",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1613",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1616",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1616",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1623",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1623",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1626",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1626",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1633",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1633",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1639",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1639",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1639",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2325/Operations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2325/Operations.java\nindex cc8fb670746..37c0a4d402c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2325/Operations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2325/Operations.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -130,7 +131,7 @@ import static org.neo4j.values.storable.Values.NO_VALUE;\n \n /**\n  * Collects all Kernel API operations and guards them from being used outside of transaction.\n- *\n+ * <p>\n  * Many methods assume cursors to be initialized before use in private methods, even if they're not passed in explicitly.\n  * Keep that in mind: e.g. nodeCursor, propertyCursor and relationshipCursor\n  */\n@@ -157,10 +158,10 @@ public class Operations implements Write, SchemaWrite\n     private DefaultPropertyCursor restrictedPropertyCursor;\n     private DefaultRelationshipScanCursor relationshipCursor;\n \n-    public Operations( AllStoreHolder allStoreHolder, StorageReader storageReader, IndexTxStateUpdater updater, CommandCreationContext commandCreationContext,\n-            KernelTransactionImplementation ktx, KernelToken token, DefaultPooledCursors cursors, ConstraintIndexCreator constraintIndexCreator,\n-            ConstraintSemantics constraintSemantics, IndexingProvidersService indexProviders, Config config, PageCursorTracer cursorTracer,\n-            MemoryTracker memoryTracker )\n+    public Operations(AllStoreHolder allStoreHolder, StorageReader storageReader, IndexTxStateUpdater updater, CommandCreationContext commandCreationContext,\n+                      KernelTransactionImplementation ktx, KernelToken token, DefaultPooledCursors cursors, ConstraintIndexCreator constraintIndexCreator,\n+                      ConstraintSemantics constraintSemantics, IndexingProvidersService indexProviders, Config config, PageCursorTracer cursorTracer,\n+                      MemoryTracker memoryTracker)\n     {\n         this.storageReader = storageReader;\n         this.commandCreationContext = commandCreationContext;\n@@ -179,32 +180,32 @@ public class Operations implements Write, SchemaWrite\n \n     public void initialize()\n     {\n-        this.nodeCursor = cursors.allocateFullAccessNodeCursor( cursorTracer );\n-        this.propertyCursor = cursors.allocateFullAccessPropertyCursor( cursorTracer, memoryTracker );\n-        this.relationshipCursor = cursors.allocateRelationshipScanCursor( cursorTracer );\n-        this.restrictedNodeCursor = cursors.allocateNodeCursor( cursorTracer );\n-        this.restrictedPropertyCursor = cursors.allocatePropertyCursor( cursorTracer, memoryTracker );\n+        this.nodeCursor = cursors.allocateFullAccessNodeCursor(cursorTracer);\n+        this.propertyCursor = cursors.allocateFullAccessPropertyCursor(cursorTracer, memoryTracker);\n+        this.relationshipCursor = cursors.allocateRelationshipScanCursor(cursorTracer);\n+        this.restrictedNodeCursor = cursors.allocateNodeCursor(cursorTracer);\n+        this.restrictedPropertyCursor = cursors.allocatePropertyCursor(cursorTracer, memoryTracker);\n     }\n \n     @Override\n     public long nodeCreate()\n     {\n-        assertAllowsCreateNode( null );\n+        assertAllowsCreateNode(null);\n         ktx.assertOpen();\n         TransactionState txState = ktx.txState();\n         long nodeId = commandCreationContext.reserveNode();\n-        txState.nodeDoCreate( nodeId );\n+        txState.nodeDoCreate(nodeId);\n         return nodeId;\n     }\n \n     @Override\n-    public long nodeCreateWithLabels( int[] labels ) throws ConstraintValidationException\n+    public long nodeCreateWithLabels(int[] labels) throws ConstraintValidationException\n     {\n-        if ( labels == null || labels.length == 0 )\n+        if (labels == null || labels.length == 0)\n         {\n             return nodeCreate();\n         }\n-        assertAllowsCreateNode( labels );\n+        assertAllowsCreateNode(labels);\n \n         // We don't need to check the node for existence, like we do in nodeAddLabel, because we just created it.\n         // We also don't need to check if the node already has some of the labels, because we know it has none.\n@@ -213,25 +214,25 @@ public class Operations implements Write, SchemaWrite\n         ktx.assertOpen();\n         int labelCount = labels.length;\n         long[] lockingIds = new long[labelCount];\n-        for ( int i = 0; i < labelCount; i++ )\n+        for (int i = 0; i < labelCount; i++)\n         {\n             lockingIds[i] = labels[i];\n         }\n-        Arrays.sort( lockingIds ); // Sort to ensure labels are locked and assigned in order.\n-        ktx.statementLocks().optimistic().acquireShared( ktx.lockTracer(), ResourceTypes.LABEL, lockingIds );\n+        Arrays.sort(lockingIds); // Sort to ensure labels are locked and assigned in order.\n+        ktx.statementLocks().optimistic().acquireShared(ktx.lockTracer(), ResourceTypes.LABEL, lockingIds);\n         TransactionState txState = ktx.txState();\n         long nodeId = commandCreationContext.reserveNode();\n-        txState.nodeDoCreate( nodeId );\n-        nodeCursor.single( nodeId, allStoreHolder );\n+        txState.nodeDoCreate(nodeId);\n+        nodeCursor.single(nodeId, allStoreHolder);\n         nodeCursor.next();\n \n         int prevLabel = NO_SUCH_LABEL;\n-        for ( long lockingId : lockingIds )\n+        for (long lockingId : lockingIds)\n         {\n             int label = (int) lockingId;\n-            if ( label != prevLabel ) // Filter out duplicates.\n+            if (label != prevLabel) // Filter out duplicates.\n             {\n-                checkConstraintsAndAddLabelToNode( nodeId, label );\n+                checkConstraintsAndAddLabelToNode(nodeId, label);\n                 prevLabel = label;\n             }\n         }\n@@ -239,76 +240,76 @@ public class Operations implements Write, SchemaWrite\n     }\n \n     @Override\n-    public boolean nodeDelete( long node )\n+    public boolean nodeDelete(long node)\n     {\n         ktx.assertOpen();\n-        return nodeDelete( node, true );\n+        return nodeDelete(node, true);\n     }\n \n     @Override\n-    public int nodeDetachDelete( final long nodeId )\n+    public int nodeDetachDelete(final long nodeId)\n     {\n         ktx.assertOpen();\n-        var deleter = new DetachingRelationshipDeleter( relId -> relationshipDelete( relId, false ) );\n+        var deleter = new DetachingRelationshipDeleter(relId -> relationshipDelete(relId, false));\n \n-        int deletedRelationships = deleter.lockNodesAndDeleteRelationships( nodeId, ktx );\n+        int deletedRelationships = deleter.lockNodesAndDeleteRelationships(nodeId, ktx);\n \n         //we are already holding the lock\n-        nodeDelete( nodeId, false );\n+        nodeDelete(nodeId, false);\n         return deletedRelationships;\n     }\n \n     @Override\n-    public long relationshipCreate( long sourceNode, int relationshipType, long targetNode ) throws EntityNotFoundException\n+    public long relationshipCreate(long sourceNode, int relationshipType, long targetNode) throws EntityNotFoundException\n     {\n-        assertAllowsCreateRelationship( relationshipType );\n+        assertAllowsCreateRelationship(relationshipType);\n         ktx.assertOpen();\n \n-        sharedSchemaLock( ResourceTypes.RELATIONSHIP_TYPE, relationshipType );\n-        lockRelationshipNodes( sourceNode, targetNode );\n+        sharedSchemaLock(ResourceTypes.RELATIONSHIP_TYPE, relationshipType);\n+        lockRelationshipNodes(sourceNode, targetNode);\n \n-        assertNodeExists( sourceNode );\n-        assertNodeExists( targetNode );\n+        assertNodeExists(sourceNode);\n+        assertNodeExists(targetNode);\n \n         TransactionState txState = ktx.txState();\n         long id = commandCreationContext.reserveRelationship();\n-        txState.relationshipDoCreate( id, relationshipType, sourceNode, targetNode );\n+        txState.relationshipDoCreate(id, relationshipType, sourceNode, targetNode);\n         return id;\n     }\n \n     @Override\n-    public boolean relationshipDelete( long relationship )\n+    public boolean relationshipDelete(long relationship)\n     {\n         ktx.assertOpen();\n-        return relationshipDelete( relationship, true );\n+        return relationshipDelete(relationship, true);\n     }\n \n     @Override\n-    public boolean nodeAddLabel( long node, int nodeLabel )\n-            throws EntityNotFoundException, ConstraintValidationException\n+    public boolean nodeAddLabel(long node, int nodeLabel)\n+      throws EntityNotFoundException, ConstraintValidationException\n     {\n-        sharedSchemaLock( ResourceTypes.LABEL, nodeLabel );\n-        acquireExclusiveNodeLock( node );\n+        sharedSchemaLock(ResourceTypes.LABEL, nodeLabel);\n+        acquireExclusiveNodeLock(node);\n \n-        singleNode( node );\n+        singleNode(node);\n \n-        if ( nodeCursor.hasLabel( nodeLabel ) )\n+        if (nodeCursor.hasLabel(nodeLabel))\n         {\n             //label already there, nothing to do\n             return false;\n         }\n-        LongSet removed = ktx.txState().nodeStateLabelDiffSets( node ).getRemoved();\n-        if ( !removed.contains( nodeLabel ) )\n+        LongSet removed = ktx.txState().nodeStateLabelDiffSets(node).getRemoved();\n+        if (!removed.contains(nodeLabel))\n         {\n             assertAllowsSetLabel(nodeLabel);\n         }\n \n-        checkConstraintsAndAddLabelToNode( node, nodeLabel );\n+        checkConstraintsAndAddLabelToNode(node, nodeLabel);\n         return true;\n     }\n \n-    private void checkConstraintsAndAddLabelToNode( long node, int nodeLabel )\n-            throws UniquePropertyValueValidationException, UnableToValidateConstraintException\n+    private void checkConstraintsAndAddLabelToNode(long node, int nodeLabel)\n+      throws UniquePropertyValueValidationException, UnableToValidateConstraintException\n     {\n         // Load the property key id list for this node. We may need it for constraint validation if there are any related constraints,\n         // but regardless we need it for tx state updating\n@@ -317,40 +318,40 @@ public class Operations implements Write, SchemaWrite\n         //Check so that we are not breaking uniqueness constraints\n         //We do this by checking if there is an existing node in the index that\n         //with the same label and property combination.\n-        if ( existingPropertyKeyIds.length > 0 )\n+        if (existingPropertyKeyIds.length > 0)\n         {\n-            for ( IndexBackedConstraintDescriptor uniquenessConstraint : storageReader.uniquenessConstraintsGetRelated( new long[]{nodeLabel},\n-                    existingPropertyKeyIds, NODE ) )\n+            for (IndexBackedConstraintDescriptor uniquenessConstraint : storageReader.uniquenessConstraintsGetRelated(new long[] {nodeLabel},\n+              existingPropertyKeyIds, NODE))\n             {\n-                IndexQuery.ExactPredicate[] propertyValues = getAllPropertyValues( uniquenessConstraint.schema(),\n-                        StatementConstants.NO_SUCH_PROPERTY_KEY, Values.NO_VALUE );\n-                if ( propertyValues != null )\n+                IndexQuery.ExactPredicate[] propertyValues = getAllPropertyValues(uniquenessConstraint.schema(),\n+                  StatementConstants.NO_SUCH_PROPERTY_KEY, Values.NO_VALUE);\n+                if (propertyValues != null)\n                 {\n-                    validateNoExistingNodeWithExactValues( uniquenessConstraint, propertyValues, node );\n+                    validateNoExistingNodeWithExactValues(uniquenessConstraint, propertyValues, node);\n                 }\n             }\n         }\n \n         //node is there and doesn't already have the label, let's add\n-        ktx.txState().nodeDoAddLabel( nodeLabel, node );\n-        updater.onLabelChange( nodeLabel, existingPropertyKeyIds, nodeCursor, propertyCursor, ADDED_LABEL );\n+        ktx.txState().nodeDoAddLabel(nodeLabel, node);\n+        updater.onLabelChange(nodeLabel, existingPropertyKeyIds, nodeCursor, propertyCursor, ADDED_LABEL);\n     }\n \n     private int[] loadSortedNodePropertyKeyList()\n     {\n-        nodeCursor.properties( propertyCursor );\n+        nodeCursor.properties(propertyCursor);\n         return doLoadSortedPropertyKeyList();\n     }\n \n     private int[] loadSortedRelationshipPropertyKeyList()\n     {\n-        relationshipCursor.properties( propertyCursor );\n+        relationshipCursor.properties(propertyCursor);\n         return doLoadSortedPropertyKeyList();\n     }\n \n     private int[] doLoadSortedPropertyKeyList()\n     {\n-        if ( !propertyCursor.next() )\n+        if (!propertyCursor.next())\n         {\n             return EMPTY_INT_ARRAY;\n         }\n@@ -359,52 +360,52 @@ public class Operations implements Write, SchemaWrite\n         int cursor = 0;\n         do\n         {\n-            if ( cursor == propertyKeyIds.length )\n+            if (cursor == propertyKeyIds.length)\n             {\n-                propertyKeyIds = Arrays.copyOf( propertyKeyIds, cursor * 2 );\n+                propertyKeyIds = Arrays.copyOf(propertyKeyIds, cursor * 2);\n             }\n             propertyKeyIds[cursor++] = propertyCursor.propertyKey();\n         }\n-        while ( propertyCursor.next() );\n-        if ( cursor != propertyKeyIds.length )\n+        while (propertyCursor.next());\n+        if (cursor != propertyKeyIds.length)\n         {\n-            propertyKeyIds = Arrays.copyOf( propertyKeyIds, cursor );\n+            propertyKeyIds = Arrays.copyOf(propertyKeyIds, cursor);\n         }\n-        Arrays.sort( propertyKeyIds );\n+        Arrays.sort(propertyKeyIds);\n         return propertyKeyIds;\n     }\n \n-    private boolean nodeDelete( long node, boolean lock )\n+    private boolean nodeDelete(long node, boolean lock)\n     {\n         ktx.assertOpen();\n \n-        if ( ktx.hasTxStateWithChanges() )\n+        if (ktx.hasTxStateWithChanges())\n         {\n             TransactionState state = ktx.txState();\n-            if ( state.nodeIsAddedInThisTx( node ) )\n+            if (state.nodeIsAddedInThisTx(node))\n             {\n-                state.nodeDoDelete( node );\n+                state.nodeDoDelete(node);\n                 return true;\n             }\n-            if ( state.nodeIsDeletedInThisTx( node ) )\n+            if (state.nodeIsDeletedInThisTx(node))\n             {\n                 // already deleted\n                 return false;\n             }\n         }\n \n-        if ( lock )\n+        if (lock)\n         {\n-            ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), ResourceTypes.NODE, node );\n+            ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), ResourceTypes.NODE, node);\n         }\n \n-        allStoreHolder.singleNode( node, nodeCursor );\n-        if ( nodeCursor.next() )\n+        allStoreHolder.singleNode(node, nodeCursor);\n+        if (nodeCursor.next())\n         {\n             acquireSharedNodeLabelLocks();\n \n-            assertAllowsDeleteNode( nodeCursor::labels );\n-            ktx.txState().nodeDoDelete( node );\n+            assertAllowsDeleteNode(nodeCursor::labels);\n+            ktx.txState().nodeDoDelete(node);\n             return true;\n         }\n \n@@ -418,7 +419,7 @@ public class Operations implements Write, SchemaWrite\n     private long[] acquireSharedNodeLabelLocks()\n     {\n         long[] labels = nodeCursor.labels().all();\n-        ktx.statementLocks().optimistic().acquireShared( ktx.lockTracer(), ResourceTypes.LABEL, labels );\n+        ktx.statementLocks().optimistic().acquireShared(ktx.lockTracer(), ResourceTypes.LABEL, labels);\n         return labels;\n     }\n \n@@ -428,23 +429,23 @@ public class Operations implements Write, SchemaWrite\n     private int acquireSharedRelationshipTypeLock()\n     {\n         int relType = relationshipCursor.type();\n-        ktx.statementLocks().optimistic().acquireShared( ktx.lockTracer(), ResourceTypes.RELATIONSHIP_TYPE, relType );\n+        ktx.statementLocks().optimistic().acquireShared(ktx.lockTracer(), ResourceTypes.RELATIONSHIP_TYPE, relType);\n         return relType;\n     }\n \n-    private boolean relationshipDelete( long relationship, boolean lock )\n+    private boolean relationshipDelete(long relationship, boolean lock)\n     {\n-        allStoreHolder.singleRelationship( relationship, relationshipCursor ); // tx-state aware\n+        allStoreHolder.singleRelationship(relationship, relationshipCursor); // tx-state aware\n \n-        if ( relationshipCursor.next() )\n+        if (relationshipCursor.next())\n         {\n-            if ( lock )\n+            if (lock)\n             {\n-                lockRelationshipNodes( relationshipCursor.sourceNodeReference(),\n-                        relationshipCursor.targetNodeReference() );\n-                acquireExclusiveRelationshipLock( relationship );\n+                lockRelationshipNodes(relationshipCursor.sourceNodeReference(),\n+                  relationshipCursor.targetNodeReference());\n+                acquireExclusiveRelationshipLock(relationship);\n             }\n-            if ( !allStoreHolder.relationshipExists( relationship ) )\n+            if (!allStoreHolder.relationshipExists(relationship))\n             {\n                 return false;\n             }\n@@ -454,14 +455,13 @@ public class Operations implements Write, SchemaWrite\n             int type = acquireSharedRelationshipTypeLock();\n \n             TransactionState txState = ktx.txState();\n-            if ( txState.relationshipIsAddedInThisTx( relationship ) )\n+            if (txState.relationshipIsAddedInThisTx(relationship))\n             {\n-                txState.relationshipDoDeleteAddedInThisTx( relationship );\n-            }\n-            else\n+                txState.relationshipDoDeleteAddedInThisTx(relationship);\n+            } else\n             {\n-                assertAllowsDeleteRelationship( type );\n-                txState.relationshipDoDelete( relationship, type, relationshipCursor.sourceNodeReference(), relationshipCursor.targetNodeReference() );\n+                assertAllowsDeleteRelationship(type);\n+                txState.relationshipDoDelete(relationship, type, relationshipCursor.sourceNodeReference(), relationshipCursor.targetNodeReference());\n             }\n             return true;\n         }\n@@ -470,21 +470,21 @@ public class Operations implements Write, SchemaWrite\n         return false;\n     }\n \n-    private void singleNode( long node ) throws EntityNotFoundException\n+    private void singleNode(long node) throws EntityNotFoundException\n     {\n-        allStoreHolder.singleNode( node, nodeCursor );\n-        if ( !nodeCursor.next() )\n+        allStoreHolder.singleNode(node, nodeCursor);\n+        if (!nodeCursor.next())\n         {\n-            throw new EntityNotFoundException( NODE, node );\n+            throw new EntityNotFoundException(NODE, node);\n         }\n     }\n \n-    private void singleRelationship( long relationship ) throws EntityNotFoundException\n+    private void singleRelationship(long relationship) throws EntityNotFoundException\n     {\n-        allStoreHolder.singleRelationship( relationship, relationshipCursor );\n-        if ( !relationshipCursor.next() )\n+        allStoreHolder.singleRelationship(relationship, relationshipCursor);\n+        if (!relationshipCursor.next())\n         {\n-            throw new EntityNotFoundException( RELATIONSHIP, relationship );\n+            throw new EntityNotFoundException(RELATIONSHIP, relationship);\n         }\n     }\n \n@@ -492,40 +492,40 @@ public class Operations implements Write, SchemaWrite\n      * Fetch the property values for all properties in schema for a given node. Return these as an exact predicate\n      * array. This is run with no security check.\n      */\n-    private IndexQuery.ExactPredicate[] getAllPropertyValues( SchemaDescriptor schema, int changedPropertyKeyId,\n-            Value changedValue )\n+    private IndexQuery.ExactPredicate[] getAllPropertyValues(SchemaDescriptor schema, int changedPropertyKeyId,\n+                                                             Value changedValue)\n     {\n         int[] schemaPropertyIds = schema.getPropertyIds();\n         IndexQuery.ExactPredicate[] values = new IndexQuery.ExactPredicate[schemaPropertyIds.length];\n \n         int nMatched = 0;\n-        nodeCursor.properties( propertyCursor );\n-        while ( propertyCursor.next() )\n+        nodeCursor.properties(propertyCursor);\n+        while (propertyCursor.next())\n         {\n             int nodePropertyId = propertyCursor.propertyKey();\n-            int k = ArrayUtils.indexOf( schemaPropertyIds, nodePropertyId );\n-            if ( k >= 0 )\n+            int k = ArrayUtils.indexOf(schemaPropertyIds, nodePropertyId);\n+            if (k >= 0)\n             {\n-                if ( nodePropertyId != StatementConstants.NO_SUCH_PROPERTY_KEY )\n+                if (nodePropertyId != StatementConstants.NO_SUCH_PROPERTY_KEY)\n                 {\n-                    values[k] = IndexQuery.exact( nodePropertyId, propertyCursor.propertyValue() );\n+                    values[k] = IndexQuery.exact(nodePropertyId, propertyCursor.propertyValue());\n                 }\n                 nMatched++;\n             }\n         }\n \n         //This is true if we are adding a property\n-        if ( changedPropertyKeyId != NO_SUCH_PROPERTY_KEY )\n+        if (changedPropertyKeyId != NO_SUCH_PROPERTY_KEY)\n         {\n-            int k = ArrayUtils.indexOf( schemaPropertyIds, changedPropertyKeyId );\n-            if ( k >= 0 )\n+            int k = ArrayUtils.indexOf(schemaPropertyIds, changedPropertyKeyId);\n+            if (k >= 0)\n             {\n-                values[k] = IndexQuery.exact( changedPropertyKeyId, changedValue );\n+                values[k] = IndexQuery.exact(changedPropertyKeyId, changedValue);\n                 nMatched++;\n             }\n         }\n \n-        if ( nMatched < values.length )\n+        if (nMatched < values.length)\n         {\n             return null;\n         }\n@@ -535,130 +535,128 @@ public class Operations implements Write, SchemaWrite\n     /**\n      * Check so that there is not an existing node with the exact match of label and property\n      */\n-    private void validateNoExistingNodeWithExactValues( IndexBackedConstraintDescriptor constraint,\n-            IndexQuery.ExactPredicate[] propertyValues, long modifiedNode )\n-            throws UniquePropertyValueValidationException, UnableToValidateConstraintException\n+    private void validateNoExistingNodeWithExactValues(IndexBackedConstraintDescriptor constraint,\n+                                                       IndexQuery.ExactPredicate[] propertyValues, long modifiedNode)\n+      throws UniquePropertyValueValidationException, UnableToValidateConstraintException\n     {\n-        IndexDescriptor index = allStoreHolder.indexGetForName( constraint.getName() );\n-        try ( FullAccessNodeValueIndexCursor valueCursor = cursors.allocateFullAccessNodeValueIndexCursor( cursorTracer, memoryTracker );\n-              IndexReaders indexReaders = new IndexReaders( index, allStoreHolder ) )\n+        IndexDescriptor index = allStoreHolder.indexGetForName(constraint.getName());\n+        try (FullAccessNodeValueIndexCursor valueCursor = cursors.allocateFullAccessNodeValueIndexCursor(cursorTracer, memoryTracker);\n+             IndexReaders indexReaders = new IndexReaders(index, allStoreHolder))\n         {\n-            assertIndexOnline( index );\n+            assertIndexOnline(index);\n             SchemaDescriptor schema = index.schema();\n             long[] labelIds = schema.lockingKeys();\n-            if ( labelIds.length != 1 )\n+            if (labelIds.length != 1)\n             {\n-                throw new UnableToValidateConstraintException( constraint, new AssertionError(\n-                        format( \"Constraint indexes are not expected to be multi-token indexes, \" +\n-                                        \"but the constraint %s was referencing an index with the following schema: %s.\",\n-                                constraint.userDescription( token ), schema.userDescription( token ) ) ), token );\n+                throw new UnableToValidateConstraintException(constraint, new AssertionError(\n+                  format(\"Constraint indexes are not expected to be multi-token indexes, \" +\n+                      \"but the constraint %s was referencing an index with the following schema: %s.\",\n+                    constraint.userDescription(token), schema.userDescription(token))), token);\n             }\n \n             //Take a big fat lock, and check for existing node in index\n             ktx.statementLocks().optimistic().acquireExclusive(\n-                    ktx.lockTracer(), INDEX_ENTRY,\n-                    indexEntryResourceId( labelIds[0], propertyValues )\n+              ktx.lockTracer(), INDEX_ENTRY,\n+              indexEntryResourceId(labelIds[0], propertyValues)\n             );\n \n-            allStoreHolder.nodeIndexSeekWithFreshIndexReader( valueCursor, indexReaders.createReader(), propertyValues );\n-            if ( valueCursor.next() && valueCursor.nodeReference() != modifiedNode )\n+            allStoreHolder.nodeIndexSeekWithFreshIndexReader(valueCursor, indexReaders.createReader(), propertyValues);\n+            if (valueCursor.next() && valueCursor.nodeReference() != modifiedNode)\n             {\n-                throw new UniquePropertyValueValidationException( constraint, VALIDATION,\n-                        new IndexEntryConflictException( valueCursor.nodeReference(), NO_SUCH_NODE,\n-                                IndexQuery.asValueTuple( propertyValues ) ), token );\n+                throw new UniquePropertyValueValidationException(constraint, VALIDATION,\n+                  new IndexEntryConflictException(valueCursor.nodeReference(), NO_SUCH_NODE,\n+                    IndexQuery.asValueTuple(propertyValues)), token);\n             }\n-        }\n-        catch ( IndexNotFoundKernelException | IndexBrokenKernelException | IndexNotApplicableKernelException e )\n+        } catch (IndexNotFoundKernelException | IndexBrokenKernelException | IndexNotApplicableKernelException e)\n         {\n-            throw new UnableToValidateConstraintException( constraint, e, token );\n+            throw new UnableToValidateConstraintException(constraint, e, token);\n         }\n     }\n \n-    private void assertIndexOnline( IndexDescriptor descriptor )\n-            throws IndexNotFoundKernelException, IndexBrokenKernelException\n+    private void assertIndexOnline(IndexDescriptor descriptor)\n+      throws IndexNotFoundKernelException, IndexBrokenKernelException\n     {\n-        if ( allStoreHolder.indexGetState( descriptor ) != InternalIndexState.ONLINE )\n+        if (allStoreHolder.indexGetState(descriptor) != InternalIndexState.ONLINE)\n         {\n-            throw new IndexBrokenKernelException( allStoreHolder.indexGetFailure( descriptor ) );\n+            throw new IndexBrokenKernelException(allStoreHolder.indexGetFailure(descriptor));\n         }\n     }\n \n     @Override\n-    public boolean nodeRemoveLabel( long node, int labelId ) throws EntityNotFoundException\n+    public boolean nodeRemoveLabel(long node, int labelId) throws EntityNotFoundException\n     {\n-        acquireExclusiveNodeLock( node );\n+        acquireExclusiveNodeLock(node);\n         ktx.assertOpen();\n \n-        singleNode( node );\n+        singleNode(node);\n \n-        if ( !nodeCursor.hasLabel( labelId ) )\n+        if (!nodeCursor.hasLabel(labelId))\n         {\n             //the label wasn't there, nothing to do\n             return false;\n         }\n \n-        LongSet added = ktx.txState().nodeStateLabelDiffSets( node ).getAdded();\n-        if ( !added.contains( labelId ) )\n+        LongSet added = ktx.txState().nodeStateLabelDiffSets(node).getAdded();\n+        if (!added.contains(labelId))\n         {\n             assertAllowsRemoveLabel(labelId);\n         }\n \n-        sharedSchemaLock( ResourceTypes.LABEL, labelId );\n-        ktx.txState().nodeDoRemoveLabel( labelId, node );\n-        if ( storageReader.hasRelatedSchema( labelId, NODE ) )\n+        sharedSchemaLock(ResourceTypes.LABEL, labelId);\n+        ktx.txState().nodeDoRemoveLabel(labelId, node);\n+        if (storageReader.hasRelatedSchema(labelId, NODE))\n         {\n-            updater.onLabelChange( labelId, loadSortedNodePropertyKeyList(), nodeCursor, propertyCursor, REMOVED_LABEL );\n+            updater.onLabelChange(labelId, loadSortedNodePropertyKeyList(), nodeCursor, propertyCursor, REMOVED_LABEL);\n         }\n         return true;\n     }\n \n     @Override\n-    public Value nodeSetProperty( long node, int propertyKey, Value value )\n-            throws EntityNotFoundException, ConstraintValidationException\n+    public Value nodeSetProperty(long node, int propertyKey, Value value)\n+      throws EntityNotFoundException, ConstraintValidationException\n     {\n-        acquireExclusiveNodeLock( node );\n+        acquireExclusiveNodeLock(node);\n         ktx.assertOpen();\n \n-        singleNode( node );\n+        singleNode(node);\n         long[] labels = acquireSharedNodeLabelLocks();\n-        Value existingValue = readNodeProperty( propertyKey );\n+        Value existingValue = readNodeProperty(propertyKey);\n         int[] existingPropertyKeyIds = null;\n-        boolean hasRelatedSchema = storageReader.hasRelatedSchema( labels, propertyKey, NODE );\n-        if ( hasRelatedSchema )\n+        boolean hasRelatedSchema = storageReader.hasRelatedSchema(labels, propertyKey, NODE);\n+        if (hasRelatedSchema)\n         {\n             existingPropertyKeyIds = loadSortedNodePropertyKeyList();\n         }\n \n-        if ( !existingValue.equals( value ) )\n+        if (!existingValue.equals(value))\n         {\n-            assertAllowsSetProperty( labels, propertyKey );\n+            assertAllowsSetProperty(labels, propertyKey);\n             // The value changed and there may be relevant constraints to check so let's check those now.\n-            Collection<IndexBackedConstraintDescriptor> uniquenessConstraints = storageReader.uniquenessConstraintsGetRelated( labels, propertyKey, NODE );\n-            SchemaMatcher.onMatchingSchema( uniquenessConstraints.iterator(), propertyKey, existingPropertyKeyIds, constraint ->\n-                    validateNoExistingNodeWithExactValues( constraint, getAllPropertyValues( constraint.schema(), propertyKey, value ), node ) );\n+            Collection<IndexBackedConstraintDescriptor> uniquenessConstraints = storageReader.uniquenessConstraintsGetRelated(labels, propertyKey, NODE);\n+            SchemaMatcher.onMatchingSchema(uniquenessConstraints.iterator(), propertyKey, existingPropertyKeyIds, constraint ->\n+              validateNoExistingNodeWithExactValues(constraint, getAllPropertyValues(constraint.schema(), propertyKey, value), node));\n         }\n \n-        if ( existingValue == NO_VALUE )\n+        if (existingValue == NO_VALUE)\n         {\n             //no existing value, we just add it\n-            assertAllowsSetProperty( labels, propertyKey );\n-            ktx.txState().nodeDoAddProperty( node, propertyKey, value );\n-            if ( hasRelatedSchema )\n+            assertAllowsSetProperty(labels, propertyKey);\n+            ktx.txState().nodeDoAddProperty(node, propertyKey, value);\n+            if (hasRelatedSchema)\n             {\n-                updater.onPropertyAdd( nodeCursor, propertyCursor, labels, propertyKey, existingPropertyKeyIds, value );\n+                updater.onPropertyAdd(nodeCursor, propertyCursor, labels, propertyKey, existingPropertyKeyIds, value);\n             }\n             return NO_VALUE;\n-        }\n-        else\n+        } else\n         {\n-            if ( propertyHasChanged( value, existingValue ) )\n+            if (propertyHasChanged(value, existingValue))\n             {\n-                assertAllowsSetProperty( labels, propertyKey );\n+                assertAllowsSetProperty(labels, propertyKey);\n                 //the value has changed to a new value\n-                ktx.txState().nodeDoChangeProperty( node, propertyKey, value );\n-                if ( hasRelatedSchema )\n+                ktx.txState().nodeDoChangeProperty(node, propertyKey, value);\n+                if (hasRelatedSchema)\n                 {\n-                    updater.onPropertyChange( nodeCursor, propertyCursor, labels, propertyKey, existingPropertyKeyIds, existingValue, value );\n+                    updater.onPropertyChange(nodeCursor, propertyCursor, labels, propertyKey, existingPropertyKeyIds, existingValue, value);\n                 }\n             }\n             return existingValue;\n@@ -666,22 +664,22 @@ public class Operations implements Write, SchemaWrite\n     }\n \n     @Override\n-    public Value nodeRemoveProperty( long node, int propertyKey )\n-            throws EntityNotFoundException\n+    public Value nodeRemoveProperty(long node, int propertyKey)\n+      throws EntityNotFoundException\n     {\n-        acquireExclusiveNodeLock( node );\n+        acquireExclusiveNodeLock(node);\n         ktx.assertOpen();\n-        singleNode( node );\n-        Value existingValue = readNodeProperty( propertyKey );\n+        singleNode(node);\n+        Value existingValue = readNodeProperty(propertyKey);\n \n-        if ( existingValue != NO_VALUE )\n+        if (existingValue != NO_VALUE)\n         {\n             long[] labels = acquireSharedNodeLabelLocks();\n-            assertAllowsSetProperty( labels, propertyKey );\n-            ktx.txState().nodeDoRemoveProperty( node, propertyKey );\n-            if ( storageReader.hasRelatedSchema( labels, propertyKey, NODE ) )\n+            assertAllowsSetProperty(labels, propertyKey);\n+            ktx.txState().nodeDoRemoveProperty(node, propertyKey);\n+            if (storageReader.hasRelatedSchema(labels, propertyKey, NODE))\n             {\n-                updater.onPropertyRemove( nodeCursor, propertyCursor, labels, propertyKey, loadSortedNodePropertyKeyList(), existingValue );\n+                updater.onPropertyRemove(nodeCursor, propertyCursor, labels, propertyKey, loadSortedNodePropertyKeyList(), existingValue);\n             }\n         }\n \n@@ -689,39 +687,38 @@ public class Operations implements Write, SchemaWrite\n     }\n \n     @Override\n-    public Value relationshipSetProperty( long relationship, int propertyKey, Value value )\n-            throws EntityNotFoundException\n+    public Value relationshipSetProperty(long relationship, int propertyKey, Value value)\n+      throws EntityNotFoundException\n     {\n-        acquireExclusiveRelationshipLock( relationship );\n+        acquireExclusiveRelationshipLock(relationship);\n         ktx.assertOpen();\n-        singleRelationship( relationship );\n+        singleRelationship(relationship);\n         int type = acquireSharedRelationshipTypeLock();\n-        Value existingValue = readRelationshipProperty( propertyKey );\n+        Value existingValue = readRelationshipProperty(propertyKey);\n         int[] existingPropertyKeyIds = null;\n-        boolean hasRelatedSchema = storageReader.hasRelatedSchema( new long[]{type}, propertyKey, RELATIONSHIP );\n-        if ( hasRelatedSchema )\n+        boolean hasRelatedSchema = storageReader.hasRelatedSchema(new long[] {type}, propertyKey, RELATIONSHIP);\n+        if (hasRelatedSchema)\n         {\n             existingPropertyKeyIds = loadSortedRelationshipPropertyKeyList();\n         }\n-        if ( existingValue == NO_VALUE )\n+        if (existingValue == NO_VALUE)\n         {\n-            assertAllowsSetProperty( type, propertyKey );\n-            ktx.txState().relationshipDoReplaceProperty( relationship, propertyKey, NO_VALUE, value );\n-            if ( hasRelatedSchema )\n+            assertAllowsSetProperty(type, propertyKey);\n+            ktx.txState().relationshipDoReplaceProperty(relationship, propertyKey, NO_VALUE, value);\n+            if (hasRelatedSchema)\n             {\n-                updater.onPropertyAdd( relationshipCursor, propertyCursor, type, propertyKey, existingPropertyKeyIds, value );\n+                updater.onPropertyAdd(relationshipCursor, propertyCursor, type, propertyKey, existingPropertyKeyIds, value);\n             }\n             return NO_VALUE;\n-        }\n-        else\n+        } else\n         {\n-            if ( propertyHasChanged( existingValue, value ) )\n+            if (propertyHasChanged(existingValue, value))\n             {\n-                assertAllowsSetProperty( type, propertyKey );\n-                ktx.txState().relationshipDoReplaceProperty( relationship, propertyKey, existingValue, value );\n-                if ( hasRelatedSchema )\n+                assertAllowsSetProperty(type, propertyKey);\n+                ktx.txState().relationshipDoReplaceProperty(relationship, propertyKey, existingValue, value);\n+                if (hasRelatedSchema)\n                 {\n-                    updater.onPropertyChange( relationshipCursor, propertyCursor, type, propertyKey, existingPropertyKeyIds, existingValue, value );\n+                    updater.onPropertyChange(relationshipCursor, propertyCursor, type, propertyKey, existingPropertyKeyIds, existingValue, value);\n                 }\n             }\n \n@@ -730,36 +727,36 @@ public class Operations implements Write, SchemaWrite\n     }\n \n     @Override\n-    public Value relationshipRemoveProperty( long relationship, int propertyKey ) throws EntityNotFoundException\n+    public Value relationshipRemoveProperty(long relationship, int propertyKey) throws EntityNotFoundException\n     {\n-        acquireExclusiveRelationshipLock( relationship );\n+        acquireExclusiveRelationshipLock(relationship);\n         ktx.assertOpen();\n-        singleRelationship( relationship );\n-        Value existingValue = readRelationshipProperty( propertyKey );\n+        singleRelationship(relationship);\n+        Value existingValue = readRelationshipProperty(propertyKey);\n \n-        if ( existingValue != NO_VALUE )\n+        if (existingValue != NO_VALUE)\n         {\n             int type = acquireSharedRelationshipTypeLock();\n-            assertAllowsSetProperty( type, propertyKey );\n-            ktx.txState().relationshipDoRemoveProperty( relationship, propertyKey );\n-            if ( storageReader.hasRelatedSchema( new long[]{type}, propertyKey, RELATIONSHIP ) )\n+            assertAllowsSetProperty(type, propertyKey);\n+            ktx.txState().relationshipDoRemoveProperty(relationship, propertyKey);\n+            if (storageReader.hasRelatedSchema(new long[] {type}, propertyKey, RELATIONSHIP))\n             {\n-                updater.onPropertyRemove( relationshipCursor, propertyCursor, type, propertyKey, loadSortedRelationshipPropertyKeyList(), existingValue );\n+                updater.onPropertyRemove(relationshipCursor, propertyCursor, type, propertyKey, loadSortedRelationshipPropertyKeyList(), existingValue);\n             }\n         }\n \n         return existingValue;\n     }\n \n-    private Value readNodeProperty( int propertyKey )\n+    private Value readNodeProperty(int propertyKey)\n     {\n-        nodeCursor.properties( propertyCursor );\n+        nodeCursor.properties(propertyCursor);\n \n         //Find out if the property had a value\n         Value existingValue = NO_VALUE;\n-        while ( propertyCursor.next() )\n+        while (propertyCursor.next())\n         {\n-            if ( propertyCursor.propertyKey() == propertyKey )\n+            if (propertyCursor.propertyKey() == propertyKey)\n             {\n                 existingValue = propertyCursor.propertyValue();\n                 break;\n@@ -768,15 +765,15 @@ public class Operations implements Write, SchemaWrite\n         return existingValue;\n     }\n \n-    private Value readRelationshipProperty( int propertyKey )\n+    private Value readRelationshipProperty(int propertyKey)\n     {\n-        relationshipCursor.properties( propertyCursor );\n+        relationshipCursor.properties(propertyCursor);\n \n         //Find out if the property had a value\n         Value existingValue = NO_VALUE;\n-        while ( propertyCursor.next() )\n+        while (propertyCursor.next())\n         {\n-            if ( propertyCursor.propertyKey() == propertyKey )\n+            if (propertyCursor.propertyKey() == propertyKey)\n             {\n                 existingValue = propertyCursor.propertyValue();\n                 break;\n@@ -797,27 +794,27 @@ public class Operations implements Write, SchemaWrite\n \n     public void release()\n     {\n-        if ( nodeCursor != null )\n+        if (nodeCursor != null)\n         {\n             nodeCursor.close();\n             nodeCursor = null;\n         }\n-        if ( restrictedNodeCursor != null )\n+        if (restrictedNodeCursor != null)\n         {\n             restrictedNodeCursor.close();\n             restrictedNodeCursor = null;\n         }\n-        if ( propertyCursor != null )\n+        if (propertyCursor != null)\n         {\n             propertyCursor.close();\n             propertyCursor = null;\n         }\n-        if ( relationshipCursor != null )\n+        if (relationshipCursor != null)\n         {\n             relationshipCursor.close();\n             relationshipCursor = null;\n         }\n-        if ( restrictedPropertyCursor != null )\n+        if (restrictedPropertyCursor != null)\n         {\n             restrictedPropertyCursor.close();\n             restrictedPropertyCursor = null;\n@@ -858,589 +855,578 @@ public class Operations implements Write, SchemaWrite\n     }\n \n     @Override\n-    public IndexProviderDescriptor indexProviderByName( String providerName )\n+    public IndexProviderDescriptor indexProviderByName(String providerName)\n     {\n         ktx.assertOpen();\n-        return indexProviders.indexProviderByName( providerName );\n+        return indexProviders.indexProviderByName(providerName);\n     }\n \n     @Override\n-    public IndexDescriptor indexCreate( IndexPrototype prototype ) throws KernelException\n+    public IndexDescriptor indexCreate(IndexPrototype prototype) throws KernelException\n     {\n-        exclusiveSchemaLock( prototype.schema() );\n+        exclusiveSchemaLock(prototype.schema());\n         ktx.assertOpen();\n-        assertValidDescriptor( prototype.schema(), INDEX_CREATION );\n-        prototype = ensureIndexPrototypeHasName( prototype );\n-        prototype = ensureIndexPrototypeHasIndexProvider( prototype );\n+        assertValidDescriptor(prototype.schema(), INDEX_CREATION);\n+        prototype = ensureIndexPrototypeHasName(prototype);\n+        prototype = ensureIndexPrototypeHasIndexProvider(prototype);\n         Optional<String> nameOptional = prototype.getName();\n         assert nameOptional.isPresent();\n         String name = nameOptional.get();\n-        exclusiveSchemaNameLock( name );\n-        assertNoBlockingSchemaRulesExists( prototype );\n+        exclusiveSchemaNameLock(name);\n+        assertNoBlockingSchemaRulesExists(prototype);\n \n-        return indexDoCreate( prototype );\n+        return indexDoCreate(prototype);\n     }\n \n     @Override\n-    public IndexDescriptor indexCreate( SchemaDescriptor schema, String indexName ) throws KernelException\n+    public IndexDescriptor indexCreate(SchemaDescriptor schema, String indexName) throws KernelException\n     {\n-        return indexCreate( schema, config.get( GraphDatabaseSettings.default_schema_provider ), IndexConfig.empty(), indexName );\n+        return indexCreate(schema, config.get(GraphDatabaseSettings.default_schema_provider), IndexConfig.empty(), indexName);\n     }\n \n     @Override\n-    public IndexDescriptor indexCreate( SchemaDescriptor schema, IndexConfig indexConfig, String indexName ) throws KernelException\n+    public IndexDescriptor indexCreate(SchemaDescriptor schema, IndexConfig indexConfig, String indexName) throws KernelException\n     {\n-        return indexCreate( schema, config.get( GraphDatabaseSettings.default_schema_provider ), indexConfig, indexName );\n+        return indexCreate(schema, config.get(GraphDatabaseSettings.default_schema_provider), indexConfig, indexName);\n     }\n \n     @Override\n-    public IndexDescriptor indexCreate( SchemaDescriptor schema, String provider, IndexConfig indexConfig, String name ) throws KernelException\n+    public IndexDescriptor indexCreate(SchemaDescriptor schema, String provider, IndexConfig indexConfig, String name) throws KernelException\n     {\n-        IndexProviderDescriptor providerDescriptor = indexProviders.indexProviderByName( provider );\n-        IndexPrototype prototype = IndexPrototype.forSchema( schema, providerDescriptor ).withName( name ).withIndexConfig( indexConfig );\n-        return indexCreate( prototype );\n+        IndexProviderDescriptor providerDescriptor = indexProviders.indexProviderByName(provider);\n+        IndexPrototype prototype = IndexPrototype.forSchema(schema, providerDescriptor).withName(name).withIndexConfig(indexConfig);\n+        return indexCreate(prototype);\n     }\n \n     // Note: this will be sneakily executed by an internal transaction, so no additional locking is required.\n-    public IndexDescriptor indexUniqueCreate( IndexPrototype prototype )\n+    public IndexDescriptor indexUniqueCreate(IndexPrototype prototype)\n     {\n-        return indexDoCreate( prototype );\n+        return indexDoCreate(prototype);\n     }\n \n-    private IndexDescriptor indexDoCreate( IndexPrototype prototype )\n+    private IndexDescriptor indexDoCreate(IndexPrototype prototype)\n     {\n-        indexProviders.validateIndexPrototype( prototype );\n+        indexProviders.validateIndexPrototype(prototype);\n         TransactionState transactionState = ktx.txState();\n         long schemaRecordId = commandCreationContext.reserveSchema();\n-        IndexDescriptor index = prototype.materialise( schemaRecordId );\n-        index = indexProviders.completeConfiguration( index );\n-        transactionState.indexDoAdd( index );\n+        IndexDescriptor index = prototype.materialise(schemaRecordId);\n+        index = indexProviders.completeConfiguration(index);\n+        transactionState.indexDoAdd(index);\n         return index;\n     }\n \n-    private IndexPrototype ensureIndexPrototypeHasName( IndexPrototype prototype ) throws KernelException\n+    private IndexPrototype ensureIndexPrototypeHasName(IndexPrototype prototype) throws KernelException\n     {\n-        if ( prototype.getName().isEmpty() )\n+        if (prototype.getName().isEmpty())\n         {\n             SchemaDescriptor schema = prototype.schema();\n \n             int[] entityTokenIds = schema.getEntityTokenIds();\n             String[] entityTokenNames;\n-            switch ( schema.entityType() )\n+            switch (schema.entityType())\n             {\n-            case NODE:\n-                entityTokenNames = resolveTokenNames( token::nodeLabelName, entityTokenIds );\n-                break;\n-            case RELATIONSHIP:\n-                entityTokenNames = resolveTokenNames( token::relationshipTypeName, entityTokenIds );\n-                break;\n-            default:\n-                throw new UnspecifiedKernelException( Status.General.UnknownError, \"Cannot create index for entity type %s in the schema %s.\",\n-                        schema.entityType(), schema );\n+                case NODE:\n+                    entityTokenNames = resolveTokenNames(token::nodeLabelName, entityTokenIds);\n+                    break;\n+                case RELATIONSHIP:\n+                    entityTokenNames = resolveTokenNames(token::relationshipTypeName, entityTokenIds);\n+                    break;\n+                default:\n+                    throw new UnspecifiedKernelException(Status.General.UnknownError, \"Cannot create index for entity type %s in the schema %s.\",\n+                      schema.entityType(), schema);\n             }\n             int[] propertyIds = schema.getPropertyIds();\n-            String[] propertyNames = resolveTokenNames( token::propertyKeyName, propertyIds );\n+            String[] propertyNames = resolveTokenNames(token::propertyKeyName, propertyIds);\n \n-            prototype = prototype.withName( SchemaRule.generateName( prototype, entityTokenNames, propertyNames ) );\n+            prototype = prototype.withName(SchemaRule.generateName(prototype, entityTokenNames, propertyNames));\n         }\n         return prototype;\n     }\n \n-    private <E extends Exception> String[] resolveTokenNames( ThrowingIntFunction<String, E> resolver, int[] tokenIds ) throws E\n+    private <E extends Exception> String[] resolveTokenNames(ThrowingIntFunction<String, E> resolver, int[] tokenIds) throws E\n     {\n         String[] names = new String[tokenIds.length];\n-        for ( int i = 0; i < tokenIds.length; i++ )\n+        for (int i = 0; i < tokenIds.length; i++)\n         {\n-            names[i] = resolver.apply( tokenIds[i] );\n+            names[i] = resolver.apply(tokenIds[i]);\n         }\n         return names;\n     }\n \n-    private IndexPrototype ensureIndexPrototypeHasIndexProvider( IndexPrototype prototype )\n+    private IndexPrototype ensureIndexPrototypeHasIndexProvider(IndexPrototype prototype)\n     {\n-        if ( prototype.getIndexProvider() == IndexProviderDescriptor.UNDECIDED )\n+        if (prototype.getIndexProvider() == IndexProviderDescriptor.UNDECIDED)\n         {\n             IndexProviderDescriptor provider;\n-            if ( prototype.getIndexType() == IndexType.FULLTEXT )\n+            if (prototype.getIndexType() == IndexType.FULLTEXT)\n             {\n                 provider = indexProviders.getFulltextProvider();\n-            }\n-            else\n+            } else\n             {\n                 provider = indexProviders.getDefaultProvider();\n             }\n-            prototype = prototype.withIndexProvider( provider );\n+            prototype = prototype.withIndexProvider(provider);\n         }\n         return prototype;\n     }\n \n     @Override\n-    public void indexDrop( IndexDescriptor index ) throws SchemaKernelException\n+    public void indexDrop(IndexDescriptor index) throws SchemaKernelException\n     {\n-        if ( index == IndexDescriptor.NO_INDEX )\n+        if (index == IndexDescriptor.NO_INDEX)\n         {\n-            throw new DropIndexFailureException( \"No index was specified.\" );\n+            throw new DropIndexFailureException(\"No index was specified.\");\n         }\n-        exclusiveSchemaLock( index.schema() );\n-        exclusiveSchemaNameLock( index.getName() );\n-        assertIndexExistsForDrop( index );\n-        if ( index.isUnique() )\n+        exclusiveSchemaLock(index.schema());\n+        exclusiveSchemaNameLock(index.getName());\n+        assertIndexExistsForDrop(index);\n+        if (index.isUnique())\n         {\n-            if ( allStoreHolder.indexGetOwningUniquenessConstraintId( index ) != null )\n+            if (allStoreHolder.indexGetOwningUniquenessConstraintId(index) != null)\n             {\n-                IndexBelongsToConstraintException cause = new IndexBelongsToConstraintException( index.schema() );\n-                throw new DropIndexFailureException( \"Unable to drop index: \" + cause.getUserMessage( token ), cause );\n+                IndexBelongsToConstraintException cause = new IndexBelongsToConstraintException(index.schema());\n+                throw new DropIndexFailureException(\"Unable to drop index: \" + cause.getUserMessage(token), cause);\n             }\n         }\n-        ktx.txState().indexDoDrop( index );\n+        ktx.txState().indexDoDrop(index);\n     }\n \n-    private void assertIndexExistsForDrop( IndexDescriptor index ) throws DropIndexFailureException\n+    private void assertIndexExistsForDrop(IndexDescriptor index) throws DropIndexFailureException\n     {\n         try\n         {\n-            allStoreHolder.assertIndexExists( index );\n-        }\n-        catch ( IndexNotFoundKernelException e )\n+            allStoreHolder.assertIndexExists(index);\n+        } catch (IndexNotFoundKernelException e)\n         {\n-            throw new DropIndexFailureException( \"Unable to drop index: \" + e.getUserMessage( token ), e );\n+            throw new DropIndexFailureException(\"Unable to drop index: \" + e.getUserMessage(token), e);\n         }\n     }\n \n     @Override\n-    public void indexDrop( SchemaDescriptor schema ) throws SchemaKernelException\n+    public void indexDrop(SchemaDescriptor schema) throws SchemaKernelException\n     {\n-        exclusiveSchemaLock( schema );\n+        exclusiveSchemaLock(schema);\n         Iterator<IndexDescriptor> iterator = Iterators.filter(\n-                index -> index.getIndexType() == IndexType.BTREE,\n-                allStoreHolder.index( schema ) );\n+          index -> index.getIndexType() == IndexType.BTREE,\n+          allStoreHolder.index(schema));\n \n-        if ( !iterator.hasNext() )\n+        if (!iterator.hasNext())\n         {\n-            String description = schema.userDescription( token );\n-            throw new DropIndexFailureException( \"Unable to drop index on \" + description + \". There is no such index.\" );\n+            String description = schema.userDescription(token);\n+            throw new DropIndexFailureException(\"Unable to drop index on \" + description + \". There is no such index.\");\n         }\n \n         do\n         {\n             IndexDescriptor existingIndex = iterator.next();\n-            indexDrop( existingIndex );\n+            indexDrop(existingIndex);\n         }\n-        while ( iterator.hasNext() );\n+        while (iterator.hasNext());\n     }\n \n     @Override\n-    public void indexDrop( String indexName ) throws SchemaKernelException\n+    public void indexDrop(String indexName) throws SchemaKernelException\n     {\n-        exclusiveSchemaNameLock( indexName );\n-        IndexDescriptor index = allStoreHolder.indexGetForName( indexName );\n-        if ( index == IndexDescriptor.NO_INDEX )\n+        exclusiveSchemaNameLock(indexName);\n+        IndexDescriptor index = allStoreHolder.indexGetForName(indexName);\n+        if (index == IndexDescriptor.NO_INDEX)\n         {\n-            throw new DropIndexFailureException( \"Unable to drop index called `\" + indexName + \"`. There is no such index.\" );\n+            throw new DropIndexFailureException(\"Unable to drop index called `\" + indexName + \"`. There is no such index.\");\n         }\n-        exclusiveSchemaLock( index.schema() );\n-        assertIndexExistsForDrop( index );\n-        if ( index.isUnique() )\n+        exclusiveSchemaLock(index.schema());\n+        assertIndexExistsForDrop(index);\n+        if (index.isUnique())\n         {\n-            if ( allStoreHolder.indexGetOwningUniquenessConstraintId( index ) != null )\n+            if (allStoreHolder.indexGetOwningUniquenessConstraintId(index) != null)\n             {\n-                IndexBelongsToConstraintException cause = new IndexBelongsToConstraintException( indexName, index.schema() );\n-                throw new DropIndexFailureException( \"Unable to drop index: \" + cause.getUserMessage( token ), cause );\n+                IndexBelongsToConstraintException cause = new IndexBelongsToConstraintException(indexName, index.schema());\n+                throw new DropIndexFailureException(\"Unable to drop index: \" + cause.getUserMessage(token), cause);\n             }\n         }\n-        ktx.txState().indexDoDrop( index );\n+        ktx.txState().indexDoDrop(index);\n     }\n \n     @Override\n-    public ConstraintDescriptor uniquePropertyConstraintCreate( IndexPrototype prototype ) throws KernelException\n+    public ConstraintDescriptor uniquePropertyConstraintCreate(IndexPrototype prototype) throws KernelException\n     {\n         SchemaDescriptor schema = prototype.schema();\n-        exclusiveSchemaLock( schema );\n+        exclusiveSchemaLock(schema);\n         ktx.assertOpen();\n-        prototype = ensureIndexPrototypeHasIndexProvider( prototype );\n+        prototype = ensureIndexPrototypeHasIndexProvider(prototype);\n \n-        UniquenessConstraintDescriptor constraint = ConstraintDescriptorFactory.uniqueForSchema( schema );\n+        UniquenessConstraintDescriptor constraint = ConstraintDescriptorFactory.uniqueForSchema(schema);\n         try\n         {\n-            assertValidDescriptor( schema, SchemaKernelException.OperationContext.CONSTRAINT_CREATION );\n-            if ( prototype.getName().isEmpty() )\n+            assertValidDescriptor(schema, SchemaKernelException.OperationContext.CONSTRAINT_CREATION);\n+            if (prototype.getName().isEmpty())\n             {\n-                constraint = ensureConstraintHasName( constraint );\n-                prototype = prototype.withName( constraint.getName() );\n-            }\n-            else\n+                constraint = ensureConstraintHasName(constraint);\n+                prototype = prototype.withName(constraint.getName());\n+            } else\n             {\n-                constraint = constraint.withName( prototype.getName().get() );\n+                constraint = constraint.withName(prototype.getName().get());\n             }\n-            exclusiveSchemaNameLock( constraint.getName() );\n-            assertNoBlockingSchemaRulesExists( constraint );\n-        }\n-        catch ( KernelException e )\n+            exclusiveSchemaNameLock(constraint.getName());\n+            assertNoBlockingSchemaRulesExists(constraint);\n+        } catch (KernelException e)\n         {\n-            exclusiveSchemaUnlock( schema ); // Try not to hold on to exclusive schema locks when we don't strictly need them.\n+            exclusiveSchemaUnlock(schema); // Try not to hold on to exclusive schema locks when we don't strictly need them.\n             throw e;\n         }\n \n         // Create constraints\n-        constraint = indexBackedConstraintCreate( constraint, prototype );\n+        constraint = indexBackedConstraintCreate(constraint, prototype);\n         return constraint;\n     }\n \n-    private void assertNoBlockingSchemaRulesExists( IndexPrototype prototype )\n-            throws EquivalentSchemaRuleAlreadyExistsException, IndexWithNameAlreadyExistsException, ConstraintWithNameAlreadyExistsException,\n-            AlreadyIndexedException, AlreadyConstrainedException\n+    private void assertNoBlockingSchemaRulesExists(IndexPrototype prototype)\n+      throws EquivalentSchemaRuleAlreadyExistsException, IndexWithNameAlreadyExistsException, ConstraintWithNameAlreadyExistsException,\n+      AlreadyIndexedException, AlreadyConstrainedException\n     {\n         Optional<String> prototypeName = prototype.getName();\n-        if ( prototypeName.isEmpty() )\n+        if (prototypeName.isEmpty())\n         {\n-            throw new IllegalStateException( \"Expected index to always have a name by this point\" );\n+            throw new IllegalStateException(\"Expected index to always have a name by this point\");\n         }\n         String name = prototypeName.get();\n \n         // Equivalent index\n         IndexDescriptor indexWithSameSchema = IndexDescriptor.NO_INDEX;\n-        Iterator<IndexDescriptor> indexesWithSameSchema = allStoreHolder.index( prototype.schema() );\n-        while ( indexesWithSameSchema.hasNext() )\n+        Iterator<IndexDescriptor> indexesWithSameSchema = allStoreHolder.index(prototype.schema());\n+        while (indexesWithSameSchema.hasNext())\n         {\n             indexWithSameSchema = indexesWithSameSchema.next();\n-            if ( indexWithSameSchema.getName().equals( name ) && indexWithSameSchema.isUnique() == prototype.isUnique() )\n+            if (indexWithSameSchema.getName().equals(name) && indexWithSameSchema.isUnique() == prototype.isUnique())\n             {\n-                throw new EquivalentSchemaRuleAlreadyExistsException( indexWithSameSchema, INDEX_CREATION, token );\n+                throw new EquivalentSchemaRuleAlreadyExistsException(indexWithSameSchema, INDEX_CREATION, token);\n             }\n         }\n \n         // Name conflict with other schema rule\n-        assertSchemaRuleWithNameDoesNotExist( name );\n+        assertSchemaRuleWithNameDoesNotExist(name);\n \n         // Already constrained\n-        final Iterator<ConstraintDescriptor> constraintWithSameSchema = allStoreHolder.constraintsGetForSchema( prototype.schema() );\n-        while ( constraintWithSameSchema.hasNext() )\n+        final Iterator<ConstraintDescriptor> constraintWithSameSchema = allStoreHolder.constraintsGetForSchema(prototype.schema());\n+        while (constraintWithSameSchema.hasNext())\n         {\n             final ConstraintDescriptor constraint = constraintWithSameSchema.next();\n-            if ( constraint.type() != ConstraintType.EXISTS )\n+            if (constraint.type() != ConstraintType.EXISTS)\n             {\n-                throw new AlreadyConstrainedException( constraint, INDEX_CREATION, token );\n+                throw new AlreadyConstrainedException(constraint, INDEX_CREATION, token);\n             }\n         }\n \n         // Already indexed\n-        if ( indexWithSameSchema != IndexDescriptor.NO_INDEX )\n+        if (indexWithSameSchema != IndexDescriptor.NO_INDEX)\n         {\n-            throw new AlreadyIndexedException( prototype.schema(), INDEX_CREATION, token );\n+            throw new AlreadyIndexedException(prototype.schema(), INDEX_CREATION, token);\n         }\n     }\n \n-    private void assertNoBlockingSchemaRulesExists( ConstraintDescriptor constraint )\n-            throws EquivalentSchemaRuleAlreadyExistsException, IndexWithNameAlreadyExistsException, ConstraintWithNameAlreadyExistsException,\n-            AlreadyConstrainedException, AlreadyIndexedException\n+    private void assertNoBlockingSchemaRulesExists(ConstraintDescriptor constraint)\n+      throws EquivalentSchemaRuleAlreadyExistsException, IndexWithNameAlreadyExistsException, ConstraintWithNameAlreadyExistsException,\n+      AlreadyConstrainedException, AlreadyIndexedException\n     {\n         final String name = constraint.getName();\n-        if ( name == null )\n+        if (name == null)\n         {\n-            throw new IllegalStateException( \"Expected constraint to always have a name by this point\" );\n+            throw new IllegalStateException(\"Expected constraint to always have a name by this point\");\n         }\n \n         // Equivalent constraint\n-        final List<ConstraintDescriptor> constraintsWithSameSchema = Iterators.asList( allStoreHolder.constraintsGetForSchema( constraint.schema() ) );\n-        for ( ConstraintDescriptor constraintWithSameSchema : constraintsWithSameSchema )\n+        final List<ConstraintDescriptor> constraintsWithSameSchema = Iterators.asList(allStoreHolder.constraintsGetForSchema(constraint.schema()));\n+        for (ConstraintDescriptor constraintWithSameSchema : constraintsWithSameSchema)\n         {\n-            if ( constraint.equals( constraintWithSameSchema ) &&\n-                 constraint.getName().equals( constraintWithSameSchema.getName() ) )\n+            if (constraint.equals(constraintWithSameSchema) &&\n+              constraint.getName().equals(constraintWithSameSchema.getName()))\n             {\n-                throw new EquivalentSchemaRuleAlreadyExistsException( constraintWithSameSchema, CONSTRAINT_CREATION, token );\n+                throw new EquivalentSchemaRuleAlreadyExistsException(constraintWithSameSchema, CONSTRAINT_CREATION, token);\n             }\n         }\n \n         // Name conflict with other schema rule\n-        assertSchemaRuleWithNameDoesNotExist( name );\n+        assertSchemaRuleWithNameDoesNotExist(name);\n \n         // Already constrained\n-        for ( ConstraintDescriptor constraintWithSameSchema : constraintsWithSameSchema )\n+        for (ConstraintDescriptor constraintWithSameSchema : constraintsWithSameSchema)\n         {\n             final boolean creatingExistenceConstraint = constraint.type() == ConstraintType.EXISTS;\n             final boolean existingIsExistenceConstraint = constraintWithSameSchema.type() == ConstraintType.EXISTS;\n-            if ( creatingExistenceConstraint == existingIsExistenceConstraint )\n+            if (creatingExistenceConstraint == existingIsExistenceConstraint)\n             {\n-                throw new AlreadyConstrainedException( constraintWithSameSchema, CONSTRAINT_CREATION, token );\n+                throw new AlreadyConstrainedException(constraintWithSameSchema, CONSTRAINT_CREATION, token);\n             }\n         }\n         // Already indexed\n-        if ( constraint.type() != ConstraintType.EXISTS )\n+        if (constraint.type() != ConstraintType.EXISTS)\n         {\n-            Iterator<IndexDescriptor> existingIndexes = allStoreHolder.index( constraint.schema() );\n-            if ( existingIndexes.hasNext() )\n+            Iterator<IndexDescriptor> existingIndexes = allStoreHolder.index(constraint.schema());\n+            if (existingIndexes.hasNext())\n             {\n                 IndexDescriptor existingIndex = existingIndexes.next();\n-                throw new AlreadyIndexedException( existingIndex.schema(), CONSTRAINT_CREATION, token );\n+                throw new AlreadyIndexedException(existingIndex.schema(), CONSTRAINT_CREATION, token);\n             }\n         }\n     }\n \n-    private void assertSchemaRuleWithNameDoesNotExist( String name ) throws IndexWithNameAlreadyExistsException, ConstraintWithNameAlreadyExistsException\n+    private void assertSchemaRuleWithNameDoesNotExist(String name) throws IndexWithNameAlreadyExistsException, ConstraintWithNameAlreadyExistsException\n     {\n         // Check constraints first because some of them will also be backed by indexes\n-        final ConstraintDescriptor constraintWithSameName = allStoreHolder.constraintGetForName( name );\n-        if ( constraintWithSameName != null )\n+        final ConstraintDescriptor constraintWithSameName = allStoreHolder.constraintGetForName(name);\n+        if (constraintWithSameName != null)\n         {\n-            throw new ConstraintWithNameAlreadyExistsException( name );\n+            throw new ConstraintWithNameAlreadyExistsException(name);\n         }\n-        final IndexDescriptor indexWithSameName = allStoreHolder.indexGetForName( name );\n-        if ( indexWithSameName != IndexDescriptor.NO_INDEX )\n+        final IndexDescriptor indexWithSameName = allStoreHolder.indexGetForName(name);\n+        if (indexWithSameName != IndexDescriptor.NO_INDEX)\n         {\n-            throw new IndexWithNameAlreadyExistsException( name );\n+            throw new IndexWithNameAlreadyExistsException(name);\n         }\n     }\n \n     @Override\n-    public ConstraintDescriptor nodeKeyConstraintCreate( IndexPrototype prototype ) throws KernelException\n+    public ConstraintDescriptor nodeKeyConstraintCreate(IndexPrototype prototype) throws KernelException\n     {\n         SchemaDescriptor schema = prototype.schema();\n-        exclusiveSchemaLock( schema );\n+        exclusiveSchemaLock(schema);\n         ktx.assertOpen();\n-        prototype = ensureIndexPrototypeHasIndexProvider( prototype );\n-        NodeKeyConstraintDescriptor constraint = ConstraintDescriptorFactory.nodeKeyForSchema( schema );\n+        prototype = ensureIndexPrototypeHasIndexProvider(prototype);\n+        NodeKeyConstraintDescriptor constraint = ConstraintDescriptorFactory.nodeKeyForSchema(schema);\n \n         try\n         {\n             //Check data integrity\n-            assertValidDescriptor( schema, SchemaKernelException.OperationContext.CONSTRAINT_CREATION );\n+            assertValidDescriptor(schema, SchemaKernelException.OperationContext.CONSTRAINT_CREATION);\n \n-            if ( prototype.getName().isEmpty() )\n+            if (prototype.getName().isEmpty())\n             {\n-                constraint = ensureConstraintHasName( constraint );\n-                prototype = prototype.withName( constraint.getName() );\n-            }\n-            else\n+                constraint = ensureConstraintHasName(constraint);\n+                prototype = prototype.withName(constraint.getName());\n+            } else\n             {\n-                constraint = constraint.withName( prototype.getName().get() );\n+                constraint = constraint.withName(prototype.getName().get());\n             }\n \n-            exclusiveSchemaNameLock( constraint.getName() );\n-            assertNoBlockingSchemaRulesExists( constraint );\n-        }\n-        catch ( SchemaKernelException e )\n+            exclusiveSchemaNameLock(constraint.getName());\n+            assertNoBlockingSchemaRulesExists(constraint);\n+        } catch (SchemaKernelException e)\n         {\n-            exclusiveSchemaUnlock( schema );\n+            exclusiveSchemaUnlock(schema);\n             throw e;\n         }\n \n         //enforce constraints\n-        try ( NodeLabelIndexCursor nodes = cursors.allocateFullAccessNodeLabelIndexCursor( cursorTracer ) )\n+        try (NodeLabelIndexCursor nodes = cursors.allocateFullAccessNodeLabelIndexCursor(cursorTracer))\n         {\n-            allStoreHolder.nodeLabelScan( schema.getLabelId(), nodes, IndexOrder.NONE );\n-            constraintSemantics.validateNodeKeyConstraint( nodes, nodeCursor, propertyCursor, schema.asLabelSchemaDescriptor(), token );\n+            allStoreHolder.nodeLabelScan(schema.getLabelId(), nodes, IndexOrder.NONE);\n+            constraintSemantics.validateNodeKeyConstraint(nodes, nodeCursor, propertyCursor, schema.asLabelSchemaDescriptor(), token);\n         }\n \n         //create constraint\n-        indexBackedConstraintCreate( constraint, prototype );\n+        indexBackedConstraintCreate(constraint, prototype);\n         return constraint;\n     }\n \n     @Override\n-    public ConstraintDescriptor nodePropertyExistenceConstraintCreate( LabelSchemaDescriptor schema, String name ) throws KernelException\n+    public ConstraintDescriptor nodePropertyExistenceConstraintCreate(LabelSchemaDescriptor schema, String name) throws KernelException\n     {\n-        ConstraintDescriptor constraint = lockAndValidatePropertyExistenceConstraint( schema, name );\n+        ConstraintDescriptor constraint = lockAndValidatePropertyExistenceConstraint(schema, name);\n \n         //enforce constraints\n-        try ( NodeLabelIndexCursor nodes = cursors.allocateFullAccessNodeLabelIndexCursor( cursorTracer ) )\n+        try (NodeLabelIndexCursor nodes = cursors.allocateFullAccessNodeLabelIndexCursor(cursorTracer))\n         {\n-            allStoreHolder.nodeLabelScan( schema.getLabelId(), nodes, IndexOrder.NONE );\n-            constraintSemantics.validateNodePropertyExistenceConstraint( nodes, nodeCursor, propertyCursor, schema, token );\n+            allStoreHolder.nodeLabelScan(schema.getLabelId(), nodes, IndexOrder.NONE);\n+            constraintSemantics.validateNodePropertyExistenceConstraint(nodes, nodeCursor, propertyCursor, schema, token);\n         }\n \n         //create constraint\n-        ktx.txState().constraintDoAdd( constraint );\n+        ktx.txState().constraintDoAdd(constraint);\n         return constraint;\n     }\n \n     @Override\n-    public ConstraintDescriptor relationshipPropertyExistenceConstraintCreate( RelationTypeSchemaDescriptor schema, String name ) throws KernelException\n+    public ConstraintDescriptor relationshipPropertyExistenceConstraintCreate(RelationTypeSchemaDescriptor schema, String name) throws KernelException\n     {\n-        ConstraintDescriptor constraint = lockAndValidatePropertyExistenceConstraint( schema, name );\n+        ConstraintDescriptor constraint = lockAndValidatePropertyExistenceConstraint(schema, name);\n \n         //enforce constraints\n-        if ( config.get( RelationshipTypeScanStoreSettings.enable_relationship_type_scan_store ) )\n+        if (config.get(RelationshipTypeScanStoreSettings.enable_relationship_type_scan_store))\n         {\n-            try ( RelationshipTypeIndexCursor relationshipsWithType = cursors.allocateRelationshipTypeIndexCursor() )\n+            try (RelationshipTypeIndexCursor relationshipsWithType = cursors.allocateRelationshipTypeIndexCursor())\n             {\n-                allStoreHolder.relationshipTypeScan( schema.getRelTypeId(), relationshipsWithType, IndexOrder.NONE );\n-                constraintSemantics.validateRelationshipPropertyExistenceConstraint( relationshipsWithType, relationshipCursor, propertyCursor, schema, token );\n+                allStoreHolder.relationshipTypeScan(schema.getRelTypeId(), relationshipsWithType, IndexOrder.NONE);\n+                constraintSemantics.validateRelationshipPropertyExistenceConstraint(relationshipsWithType, relationshipCursor, propertyCursor, schema, token);\n             }\n-        }\n-        else\n+        } else\n         {\n-            allStoreHolder.relationshipTypeScan( schema.getRelTypeId(), relationshipCursor );\n-            constraintSemantics.validateRelationshipPropertyExistenceConstraint( relationshipCursor, propertyCursor, schema, token );\n+            allStoreHolder.relationshipTypeScan(schema.getRelTypeId(), relationshipCursor);\n+            constraintSemantics.validateRelationshipPropertyExistenceConstraint(relationshipCursor, propertyCursor, schema, token);\n         }\n \n         //Create\n-        ktx.txState().constraintDoAdd( constraint );\n+        ktx.txState().constraintDoAdd(constraint);\n         return constraint;\n     }\n \n-    private ConstraintDescriptor lockAndValidatePropertyExistenceConstraint( SchemaDescriptor descriptor, String name ) throws KernelException\n+    private ConstraintDescriptor lockAndValidatePropertyExistenceConstraint(SchemaDescriptor descriptor, String name) throws KernelException\n     {\n         // Lock constraint schema.\n-        exclusiveSchemaLock( descriptor );\n+        exclusiveSchemaLock(descriptor);\n         ktx.assertOpen();\n \n         try\n         {\n             // Verify data integrity.\n-            assertValidDescriptor( descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION );\n-            ConstraintDescriptor constraint = ConstraintDescriptorFactory.existsForSchema( descriptor ).withName( name );\n-            constraint = ensureConstraintHasName( constraint );\n-            exclusiveSchemaNameLock( constraint.getName() );\n-            assertNoBlockingSchemaRulesExists( constraint );\n+            assertValidDescriptor(descriptor, SchemaKernelException.OperationContext.CONSTRAINT_CREATION);\n+            ConstraintDescriptor constraint = ConstraintDescriptorFactory.existsForSchema(descriptor).withName(name);\n+            constraint = ensureConstraintHasName(constraint);\n+            exclusiveSchemaNameLock(constraint.getName());\n+            assertNoBlockingSchemaRulesExists(constraint);\n             return constraint;\n-        }\n-        catch ( SchemaKernelException e )\n+        } catch (SchemaKernelException e)\n         {\n-            exclusiveSchemaUnlock( descriptor );\n+            exclusiveSchemaUnlock(descriptor);\n             throw e;\n         }\n     }\n \n     @Override\n-    public void constraintDrop( SchemaDescriptor schema, ConstraintType type ) throws SchemaKernelException\n+    public void constraintDrop(SchemaDescriptor schema, ConstraintType type) throws SchemaKernelException\n     {\n         ktx.assertOpen();\n-        Iterator<ConstraintDescriptor> constraints = ktx.schemaRead().constraintsGetForSchema( schema );\n-        constraints = Iterators.filter( constraint -> constraint.type() == type, constraints );\n-        if ( constraints.hasNext() )\n+        Iterator<ConstraintDescriptor> constraints = ktx.schemaRead().constraintsGetForSchema(schema);\n+        constraints = Iterators.filter(constraint -> constraint.type() == type, constraints);\n+        if (constraints.hasNext())\n         {\n             ConstraintDescriptor constraint = constraints.next();\n-            if ( !constraints.hasNext() )\n+            if (!constraints.hasNext())\n             {\n-                constraintDrop( constraint );\n-            }\n-            else\n+                constraintDrop(constraint);\n+            } else\n             {\n-                String schemaDescription = schema.userDescription( token );\n-                String constraintDescription = constraints.next().userDescription( token );\n-                throw new DropConstraintFailureException( constraint, new IllegalArgumentException(\n-                        \"More than one \" + type + \" constraint was found with the '\" + schemaDescription + \"' schema: \" + constraintDescription +\n-                                \", please drop constraint by name instead.\" ) );\n+                String schemaDescription = schema.userDescription(token);\n+                String constraintDescription = constraints.next().userDescription(token);\n+                throw new DropConstraintFailureException(constraint, new IllegalArgumentException(\n+                  \"More than one \" + type + \" constraint was found with the '\" + schemaDescription + \"' schema: \" + constraintDescription +\n+                    \", please drop constraint by name instead.\"));\n             }\n-        }\n-        else\n+        } else\n         {\n-            throw new DropConstraintFailureException( schema, new NoSuchConstraintException( schema, token ) );\n+            throw new DropConstraintFailureException(schema, new NoSuchConstraintException(schema, token));\n         }\n     }\n \n     @Override\n-    public void constraintDrop( String name ) throws SchemaKernelException\n+    public void constraintDrop(String name) throws SchemaKernelException\n     {\n-        exclusiveSchemaNameLock( name );\n-        ConstraintDescriptor constraint = allStoreHolder.constraintGetForName( name );\n-        if ( constraint == null )\n+        exclusiveSchemaNameLock(name);\n+        ConstraintDescriptor constraint = allStoreHolder.constraintGetForName(name);\n+        if (constraint == null)\n         {\n-            throw new DropConstraintFailureException( name, new NoSuchConstraintException( name ) );\n+            throw new DropConstraintFailureException(name, new NoSuchConstraintException(name));\n         }\n-        constraintDrop( constraint );\n+        constraintDrop(constraint);\n     }\n \n     @Override\n-    public void constraintDrop( ConstraintDescriptor constraint ) throws SchemaKernelException\n+    public void constraintDrop(ConstraintDescriptor constraint) throws SchemaKernelException\n     {\n         //Lock\n         SchemaDescriptor schema = constraint.schema();\n-        exclusiveOptimisticLock( schema.keyType(), schema.lockingKeys() );\n-        exclusiveSchemaNameLock( constraint.getName() );\n+        exclusiveOptimisticLock(schema.keyType(), schema.lockingKeys());\n+        exclusiveSchemaNameLock(constraint.getName());\n         ktx.assertOpen();\n \n         //verify data integrity\n         try\n         {\n-            assertConstraintExists( constraint );\n-        }\n-        catch ( NoSuchConstraintException e )\n+            assertConstraintExists(constraint);\n+        } catch (NoSuchConstraintException e)\n         {\n-            throw new DropConstraintFailureException( constraint, e );\n+            throw new DropConstraintFailureException(constraint, e);\n         }\n \n         //Drop it like it's hot\n         TransactionState txState = ktx.txState();\n-        txState.constraintDoDrop( constraint );\n-        if ( constraint.enforcesUniqueness() )\n+        txState.constraintDoDrop(constraint);\n+        if (constraint.enforcesUniqueness())\n         {\n-            IndexDescriptor index = allStoreHolder.indexGetForName( constraint.getName() );\n-            if ( index != IndexDescriptor.NO_INDEX )\n+            IndexDescriptor index = allStoreHolder.indexGetForName(constraint.getName());\n+            if (index != IndexDescriptor.NO_INDEX)\n             {\n-                txState.indexDoDrop( index );\n+                txState.indexDoDrop(index);\n             }\n         }\n     }\n \n-    private void exclusiveOptimisticLock( ResourceType resource, long[] resourceIds )\n+    private void exclusiveOptimisticLock(ResourceType resource, long[] resourceIds)\n     {\n-        ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), resource, resourceIds );\n+        ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), resource, resourceIds);\n     }\n \n-    private void acquireExclusiveNodeLock( long node )\n+    private void acquireExclusiveNodeLock(long node)\n     {\n-        if ( !ktx.hasTxStateWithChanges() || !ktx.txState().nodeIsAddedInThisTx( node ) )\n+        if (!ktx.hasTxStateWithChanges() || !ktx.txState().nodeIsAddedInThisTx(node))\n         {\n-            ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), ResourceTypes.NODE, node );\n+            ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), ResourceTypes.NODE, node);\n         }\n     }\n \n-    private void acquireExclusiveRelationshipLock( long relationshipId )\n+    private void acquireExclusiveRelationshipLock(long relationshipId)\n     {\n-        if ( !ktx.hasTxStateWithChanges() || !ktx.txState().relationshipIsAddedInThisTx( relationshipId ) )\n+        if (!ktx.hasTxStateWithChanges() || !ktx.txState().relationshipIsAddedInThisTx(relationshipId))\n         {\n             ktx.statementLocks().optimistic()\n-                    .acquireExclusive( ktx.lockTracer(), ResourceTypes.RELATIONSHIP, relationshipId );\n+              .acquireExclusive(ktx.lockTracer(), ResourceTypes.RELATIONSHIP, relationshipId);\n         }\n     }\n \n-    private void sharedSchemaLock( ResourceType type, int tokenId )\n+    private void sharedSchemaLock(ResourceType type, int tokenId)\n     {\n-        ktx.statementLocks().optimistic().acquireShared( ktx.lockTracer(), type, tokenId );\n+        ktx.statementLocks().optimistic().acquireShared(ktx.lockTracer(), type, tokenId);\n     }\n \n-    private void exclusiveSchemaLock( SchemaDescriptor schema )\n+    private void exclusiveSchemaLock(SchemaDescriptor schema)\n     {\n         long[] lockingIds = schema.lockingKeys();\n-        ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), schema.keyType(), lockingIds );\n+        ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), schema.keyType(), lockingIds);\n     }\n \n-    private void exclusiveSchemaUnlock( SchemaDescriptor schema )\n+    private void exclusiveSchemaUnlock(SchemaDescriptor schema)\n     {\n         long[] lockingIds = schema.lockingKeys();\n-        ktx.statementLocks().optimistic().releaseExclusive( schema.keyType(), lockingIds );\n+        ktx.statementLocks().optimistic().releaseExclusive(schema.keyType(), lockingIds);\n     }\n \n-    private void exclusiveSchemaNameLock( String schemaName )\n+    private void exclusiveSchemaNameLock(String schemaName)\n     {\n-        long lockingId = ResourceIds.schemaNameResourceId( schemaName );\n-        ktx.statementLocks().optimistic().acquireExclusive( ktx.lockTracer(), SCHEMA_NAME, lockingId );\n+        long lockingId = ResourceIds.schemaNameResourceId(schemaName);\n+        ktx.statementLocks().optimistic().acquireExclusive(ktx.lockTracer(), SCHEMA_NAME, lockingId);\n     }\n \n-    private void lockRelationshipNodes( long startNodeId, long endNodeId )\n+    private void lockRelationshipNodes(long startNodeId, long endNodeId)\n     {\n         // Order the locks to lower the risk of deadlocks with other threads creating/deleting rels concurrently\n-        acquireExclusiveNodeLock( min( startNodeId, endNodeId ) );\n-        if ( startNodeId != endNodeId )\n+        acquireExclusiveNodeLock(min(startNodeId, endNodeId));\n+        if (startNodeId != endNodeId)\n         {\n-            acquireExclusiveNodeLock( max( startNodeId, endNodeId ) );\n+            acquireExclusiveNodeLock(max(startNodeId, endNodeId));\n         }\n     }\n \n-    private static boolean propertyHasChanged( Value lhs, Value rhs )\n+    private static boolean propertyHasChanged(Value lhs, Value rhs)\n     {\n         //It is not enough to check equality here since by our equality semantics `int == toFloat(int)` is `true`\n         //so by only checking for equality users cannot change type of property without also \"changing\" the value.\n         //Hence the extra type check here.\n-        return !lhs.isSameValueTypeAs( rhs ) || !lhs.equals( rhs );\n+        return !lhs.isSameValueTypeAs(rhs) || !lhs.equals(rhs);\n     }\n \n-    private void assertNodeExists( long sourceNode ) throws EntityNotFoundException\n+    private void assertNodeExists(long sourceNode) throws EntityNotFoundException\n     {\n-        if ( !allStoreHolder.nodeExists( sourceNode ) )\n+        if (!allStoreHolder.nodeExists(sourceNode))\n         {\n-            throw new EntityNotFoundException( NODE, sourceNode );\n+            throw new EntityNotFoundException(NODE, sourceNode);\n         }\n     }\n \n@@ -1449,71 +1435,70 @@ public class Operations implements Write, SchemaWrite\n         return allStoreHolder;\n     }\n \n-    private void assertConstraintExists( ConstraintDescriptor constraint )\n-            throws NoSuchConstraintException\n+    private void assertConstraintExists(ConstraintDescriptor constraint)\n+      throws NoSuchConstraintException\n     {\n-        if ( !allStoreHolder.constraintExists( constraint ) )\n+        if (!allStoreHolder.constraintExists(constraint))\n         {\n-            throw new NoSuchConstraintException( constraint, token );\n+            throw new NoSuchConstraintException(constraint, token);\n         }\n     }\n \n-    private void assertValidDescriptor( SchemaDescriptor descriptor, SchemaKernelException.OperationContext context )\n-            throws RepeatedSchemaComponentException\n+    private void assertValidDescriptor(SchemaDescriptor descriptor, SchemaKernelException.OperationContext context)\n+      throws RepeatedSchemaComponentException\n     {\n-        long numUniqueProp = Arrays.stream( descriptor.getPropertyIds() ).distinct().count();\n-        long numUniqueEntityTokens = Arrays.stream( descriptor.getEntityTokenIds() ).distinct().count();\n+        long numUniqueProp = Arrays.stream(descriptor.getPropertyIds()).distinct().count();\n+        long numUniqueEntityTokens = Arrays.stream(descriptor.getEntityTokenIds()).distinct().count();\n \n-        if ( numUniqueProp != descriptor.getPropertyIds().length )\n+        if (numUniqueProp != descriptor.getPropertyIds().length)\n         {\n-            throw new RepeatedPropertyInSchemaException( descriptor, context, token );\n+            throw new RepeatedPropertyInSchemaException(descriptor, context, token);\n         }\n-        if ( numUniqueEntityTokens != descriptor.getEntityTokenIds().length )\n+        if (numUniqueEntityTokens != descriptor.getEntityTokenIds().length)\n         {\n-            if ( descriptor.entityType() == NODE )\n+            if (descriptor.entityType() == NODE)\n             {\n-                throw new RepeatedLabelInSchemaException( descriptor, context, token );\n-            }\n-            else\n+                throw new RepeatedLabelInSchemaException(descriptor, context, token);\n+            } else\n             {\n-                throw new RepeatedRelationshipTypeInSchemaException( descriptor, context, token );\n+                throw new RepeatedRelationshipTypeInSchemaException(descriptor, context, token);\n             }\n         }\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    private <T extends IndexBackedConstraintDescriptor> T indexBackedConstraintCreate( T constraint, IndexPrototype prototype )\n-            throws KernelException\n+    @SuppressWarnings(\"unchecked\")\n+    private <T extends IndexBackedConstraintDescriptor> T indexBackedConstraintCreate(T constraint, IndexPrototype prototype)\n+      throws KernelException\n     {\n         try\n         {\n-            if ( allStoreHolder.constraintExists( constraint ) )\n+            if (allStoreHolder.constraintExists(constraint))\n             {\n-                throw new AlreadyConstrainedException( constraint, CONSTRAINT_CREATION, token );\n+                throw new AlreadyConstrainedException(constraint, CONSTRAINT_CREATION, token);\n             }\n-            if ( prototype.getIndexType() != IndexType.BTREE )\n+            if (prototype.getIndexType() != IndexType.BTREE)\n             {\n                 throw new CreateConstraintFailureException(\n-                        constraint, \"Cannot create backing constraint index with index type \" + prototype.getIndexType() + \".\" );\n+                  constraint, \"Cannot create backing constraint index with index type \" + prototype.getIndexType() + \".\");\n             }\n-            if ( prototype.schema().isFulltextSchemaDescriptor() )\n+            if (prototype.schema().isFulltextSchemaDescriptor())\n             {\n-                throw new CreateConstraintFailureException( constraint, \"Cannot create backing constraint index using a full-text schema: \" +\n-                        prototype.schema().userDescription( token ) );\n+                throw new CreateConstraintFailureException(constraint, \"Cannot create backing constraint index using a full-text schema: \" +\n+                  prototype.schema().userDescription(token));\n             }\n-            if ( prototype.schema().isRelationshipTypeSchemaDescriptor() )\n+            if (prototype.schema().isRelationshipTypeSchemaDescriptor())\n             {\n-                throw new CreateConstraintFailureException( constraint, \"Cannot create backing constraint index using a relationship type schema: \" +\n-                        prototype.schema().userDescription( token ) );\n+                throw new CreateConstraintFailureException(constraint, \"Cannot create backing constraint index using a relationship type schema: \" +\n+                  prototype.schema().userDescription(token));\n             }\n-            if ( !prototype.isUnique() )\n+            if (!prototype.isUnique())\n             {\n-                throw new CreateConstraintFailureException( constraint,\n-                        \"Cannot create index backed constraint using an index prototype that is not unique: \" + prototype.userDescription( token ) );\n+                throw new CreateConstraintFailureException(constraint,\n+                  \"Cannot create index backed constraint using an index prototype that is not unique: \" + prototype.userDescription(token));\n             }\n \n-            IndexDescriptor index = constraintIndexCreator.createUniquenessConstraintIndex( ktx, constraint, prototype );\n-            if ( !allStoreHolder.constraintExists( constraint ) )\n+            IndexDescriptor index = constraintIndexCreator.createUniquenessConstraintIndex(ktx, constraint, prototype);\n+            if (!allStoreHolder.constraintExists(constraint))\n             {\n                 // This looks weird, but since we release the label lock while awaiting population of the index\n                 // backing this constraint there can be someone else getting ahead of us, creating this exact\n@@ -1521,140 +1506,137 @@ public class Operations implements Write, SchemaWrite\n                 // before we do, so now getting out here under the lock we must check again and if it exists\n                 // we must at this point consider this an idempotent operation because we verified earlier\n                 // that it didn't exist and went on to create it.\n-                constraint = (T) constraint.withOwnedIndexId( index.getId() );\n-                ktx.txState().constraintDoAdd( constraint, index );\n-            }\n-            else\n+                constraint = (T) constraint.withOwnedIndexId(index.getId());\n+                ktx.txState().constraintDoAdd(constraint, index);\n+            } else\n             {\n-                constraint = (T) allStoreHolder.constraintsGetForSchema( constraint.schema() );\n+                constraint = (T) allStoreHolder.constraintsGetForSchema(constraint.schema());\n             }\n             return constraint;\n-        }\n-        catch ( UniquePropertyValueValidationException | TransactionFailureException | AlreadyConstrainedException e )\n+        } catch (UniquePropertyValueValidationException | TransactionFailureException | AlreadyConstrainedException e)\n         {\n-            throw new CreateConstraintFailureException( constraint, e );\n+            throw new CreateConstraintFailureException(constraint, e);\n         }\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    private <T extends ConstraintDescriptor> T ensureConstraintHasName( T constraint ) throws KernelException\n+    @SuppressWarnings(\"unchecked\")\n+    private <T extends ConstraintDescriptor> T ensureConstraintHasName(T constraint) throws KernelException\n     {\n-        if ( constraint.getName() == null )\n+        if (constraint.getName() == null)\n         {\n             SchemaDescriptor schema = constraint.schema();\n \n             int[] entityTokenIds = schema.getEntityTokenIds();\n             String[] entityTokenNames;\n-            switch ( schema.entityType() )\n+            switch (schema.entityType())\n             {\n-            case NODE:\n-                entityTokenNames = resolveTokenNames( token::nodeLabelName, entityTokenIds );\n-                break;\n-            case RELATIONSHIP:\n-                entityTokenNames = resolveTokenNames( token::relationshipTypeName, entityTokenIds );\n-                break;\n-            default:\n-                throw new UnspecifiedKernelException( Status.General.UnknownError, \"Cannot create constraint for entity type %s in the schema %s.\",\n-                        schema.entityType(), schema );\n+                case NODE:\n+                    entityTokenNames = resolveTokenNames(token::nodeLabelName, entityTokenIds);\n+                    break;\n+                case RELATIONSHIP:\n+                    entityTokenNames = resolveTokenNames(token::relationshipTypeName, entityTokenIds);\n+                    break;\n+                default:\n+                    throw new UnspecifiedKernelException(Status.General.UnknownError, \"Cannot create constraint for entity type %s in the schema %s.\",\n+                      schema.entityType(), schema);\n             }\n             int[] propertyIds = schema.getPropertyIds();\n-            String[] propertyNames = resolveTokenNames( token::propertyKeyName, propertyIds );\n+            String[] propertyNames = resolveTokenNames(token::propertyKeyName, propertyIds);\n \n-            constraint = (T) constraint.withName( SchemaRule.generateName( constraint, entityTokenNames, propertyNames ) );\n+            constraint = (T) constraint.withName(SchemaRule.generateName(constraint, entityTokenNames, propertyNames));\n         }\n \n         return constraint;\n     }\n \n-    private void assertAllowsCreateNode( int[] labelIds )\n+    private void assertAllowsCreateNode(int[] labelIds)\n     {\n         AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsCreateNode( labelIds ) )\n+        if (!accessMode.allowsCreateNode(labelIds))\n         {\n-            String labels = null == labelIds ? \"\" : Arrays.stream( labelIds ).mapToObj( token::labelGetName ).collect( Collectors.joining( \",\" ) );\n-            throw accessMode.onViolation( format( \"Create node with labels '%s' is not allowed for %s.\", labels, ktx.securityContext().description() ) );\n+            String labels = null == labelIds ? \"\" : Arrays.stream(labelIds).mapToObj(token::labelGetName).collect(Collectors.joining(\",\"));\n+            throw accessMode.onViolation(format(\"Create node with labels '%s' is not allowed for %s.\", labels, ktx.securityContext().description()));\n         }\n     }\n \n-    private void assertAllowsDeleteNode( Supplier<TokenSet> labelSupplier )\n+    private void assertAllowsDeleteNode(Supplier<TokenSet> labelSupplier)\n     {\n         AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsDeleteNode( labelSupplier ) )\n+        if (!accessMode.allowsDeleteNode(labelSupplier))\n         {\n-            String labels = Arrays.stream( labelSupplier.get().all() ).mapToObj( id -> token.labelGetName( (int) id ) ).collect( Collectors.joining( \",\" ) );\n-            throw accessMode.onViolation( format( \"Delete node with labels '%s' is not allowed for %s.\", labels, ktx.securityContext().description() ) );\n+            String labels = Arrays.stream(labelSupplier.get().all()).mapToObj(id -> token.labelGetName((int) id)).collect(Collectors.joining(\",\"));\n+            throw accessMode.onViolation(format(\"Delete node with labels '%s' is not allowed for %s.\", labels, ktx.securityContext().description()));\n         }\n     }\n \n-    private void assertAllowsCreateRelationship( int relType )\n+    private void assertAllowsCreateRelationship(int relType)\n     {\n         AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsCreateRelationship( relType ) )\n+        if (!accessMode.allowsCreateRelationship(relType))\n         {\n-            throw accessMode.onViolation( format( \"Create relationship with type '%s' is not allowed for %s.\", token.relationshipTypeGetName( relType ),\n-                            ktx.securityContext().description() ) );\n+            throw accessMode.onViolation(format(\"Create relationship with type '%s' is not allowed for %s.\", token.relationshipTypeGetName(relType),\n+              ktx.securityContext().description()));\n         }\n     }\n \n-    private void assertAllowsDeleteRelationship( int relType )\n+    private void assertAllowsDeleteRelationship(int relType)\n     {\n         AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsDeleteRelationship( relType ) )\n+        if (!accessMode.allowsDeleteRelationship(relType))\n         {\n             throw accessMode\n-                    .onViolation( format( \"Delete relationship with type '%s' is not allowed for %s.\", token.relationshipTypeGetName( relType ),\n-                    ktx.securityContext().description() ) );\n+              .onViolation(format(\"Delete relationship with type '%s' is not allowed for %s.\", token.relationshipTypeGetName(relType),\n+                ktx.securityContext().description()));\n         }\n     }\n \n-    private void assertAllowsSetLabel( long labelId )\n+    private void assertAllowsSetLabel(long labelId)\n     {\n         AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsSetLabel( labelId ) )\n+        if (!accessMode.allowsSetLabel(labelId))\n         {\n-            throw accessMode.onViolation( format( \"Set label for label '%s' is not allowed for %s.\", token.labelGetName( (int) labelId),\n-                                                  ktx.securityContext().description() ) );\n+            throw accessMode.onViolation(format(\"Set label for label '%s' is not allowed for %s.\", token.labelGetName((int) labelId),\n+              ktx.securityContext().description()));\n         }\n     }\n \n-    private void assertAllowsRemoveLabel( long labelId )\n+    private void assertAllowsRemoveLabel(long labelId)\n     {\n         AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsRemoveLabel( labelId ) )\n+        if (!accessMode.allowsRemoveLabel(labelId))\n         {\n-            throw accessMode.onViolation( format( \"Remove label for label '%s' is not allowed for %s.\", token.labelGetName( (int) labelId),\n-                                                  ktx.securityContext().description() ) );\n+            throw accessMode.onViolation(format(\"Remove label for label '%s' is not allowed for %s.\", token.labelGetName((int) labelId),\n+              ktx.securityContext().description()));\n         }\n     }\n \n-    private void assertAllowsSetProperty( long[] labelIds, long propertyKey )\n+    private void assertAllowsSetProperty(long[] labelIds, long propertyKey)\n     {\n         AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsSetProperty( () -> Labels.from( labelIds ), (int) propertyKey ) )\n+        if (!accessMode.allowsSetProperty(() -> Labels.from(labelIds), (int) propertyKey))\n         {\n-            throw accessMode.onViolation( format( \"Set property for property '%s' is not allowed for %s.\", resolvePropertyKey(propertyKey),\n-                                                  ktx.securityContext().description() ) );\n+            throw accessMode.onViolation(format(\"Set property for property '%s' is not allowed for %s.\", resolvePropertyKey(propertyKey),\n+              ktx.securityContext().description()));\n         }\n     }\n \n-    private void assertAllowsSetProperty( long relType, long propertyKey )\n+    private void assertAllowsSetProperty(long relType, long propertyKey)\n     {\n         AccessMode accessMode = ktx.securityContext().mode();\n-        if ( !accessMode.allowsSetProperty( () -> (int) relType, (int) propertyKey ) )\n+        if (!accessMode.allowsSetProperty(() -> (int) relType, (int) propertyKey))\n         {\n-            throw accessMode.onViolation( format( \"Set property for property '%s' is not allowed for %s.\", resolvePropertyKey( propertyKey ),\n-                                                  ktx.securityContext().description() ) );\n+            throw accessMode.onViolation(format(\"Set property for property '%s' is not allowed for %s.\", resolvePropertyKey(propertyKey),\n+              ktx.securityContext().description()));\n         }\n     }\n \n-    private String resolvePropertyKey( long propertyKey )\n+    private String resolvePropertyKey(long propertyKey)\n     {\n         String propKeyName;\n         try\n         {\n-            propKeyName = token.propertyKeyName( (int) propertyKey );\n-        }\n-        catch ( PropertyKeyIdNotFoundKernelException e )\n+            propKeyName = token.propertyKeyName((int) propertyKey);\n+        } catch (PropertyKeyIdNotFoundKernelException e)\n         {\n             propKeyName = \"<unknown>\";\n         }\n",
            "diff_size": 570
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "griddynamics-jagger",
    "error_id": "167",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 156).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        JTestDefinition jTestDefinition = JTestDefinition.builder(Id.of(\"td_example\"), new ExampleEndpointsProvider()).build();\n\n        JLoadProfile jLoadProfileRps = JLoadProfileRps.builder(RequestsPerSecond.of(10)).withMaxLoadThreads(10).withWarmUpTimeInMilliseconds(10000).build();\n        \n        JTerminationCriteria jTerminationCriteria = JTerminationCriteriaIterations.of(IterationsNumber.of(500), MaxDurationInSeconds.of(30));\n        ",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/167/ExampleSimpleJLoadScenarioProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/167/ExampleSimpleJLoadScenarioProvider.java\nindex d9f179e04f6..b62d1db70d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/167/ExampleSimpleJLoadScenarioProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/167/ExampleSimpleJLoadScenarioProvider.java\n@@ -1,4 +1,6 @@\n-package ${package};\n+package $\n+\n+{package};\n \n import com.griddynamics.jagger.user.test.configurations.JLoadScenario;\n import com.griddynamics.jagger.user.test.configurations.JLoadTest;\n@@ -24,14 +26,15 @@ public class ExampleSimpleJLoadScenarioProvider {\n \n         JTestDefinition jTestDefinition = JTestDefinition.builder(Id.of(\"td_example\"), new ExampleEndpointsProvider()).build();\n \n-        JLoadProfile jLoadProfileRps = JLoadProfileRps.builder(RequestsPerSecond.of(10)).withMaxLoadThreads(10).withWarmUpTimeInMilliseconds(10000).build();\n-        \n+        JLoadProfile jLoadProfileRps =\n+                JLoadProfileRps.builder(RequestsPerSecond.of(10)).withMaxLoadThreads(10).withWarmUpTimeInMilliseconds(10000).build();\n+\n         JTerminationCriteria jTerminationCriteria = JTerminationCriteriaIterations.of(IterationsNumber.of(500), MaxDurationInSeconds.of(30));\n-        \n+\n         JLoadTest jLoadTest = JLoadTest.builder(Id.of(\"lt_example\"), jTestDefinition, jLoadProfileRps, jTerminationCriteria).build();\n-        \n+\n         JParallelTestsGroup jParallelTestsGroup = JParallelTestsGroup.builder(Id.of(\"ptg_example\"), jLoadTest).build();\n-        \n+\n         // To launch your load scenario, set 'jagger.load.scenario.id.to.execute' property's value equal to the load scenario id\n         // You can do it via system properties or in the 'environment.properties' file\n         return JLoadScenario.builder(Id.of(\"ls_example\"), jParallelTestsGroup).build();\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
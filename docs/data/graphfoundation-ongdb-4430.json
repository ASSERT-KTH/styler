{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4430",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4430/NodeConstraintDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4430/NodeConstraintDefinition.java\nindex 098335fb027..b0d8d22de98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4430/NodeConstraintDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4430/NodeConstraintDefinition.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi.schema;\n \n import java.util.Arrays;\n@@ -30,66 +31,65 @@ import static java.util.Objects.requireNonNull;\n \n abstract class NodeConstraintDefinition extends MultiPropertyConstraintDefinition\n {\n-    protected final Label label;\n+  protected final Label label;\n \n-    protected NodeConstraintDefinition( InternalSchemaActions actions, Label label, String[] propertyKeys )\n-    {\n-        super( actions, propertyKeys );\n-        this.label = requireNonNull( label );\n-    }\n+  protected NodeConstraintDefinition(InternalSchemaActions actions, Label label, String[] propertyKeys)\n+  {\n+    super(actions, propertyKeys);\n+    this.label = requireNonNull(label);\n+  }\n \n-    protected NodeConstraintDefinition( InternalSchemaActions actions, IndexDefinition indexDefinition )\n-    {\n-        super( actions, indexDefinition );\n-        this.label = requireNonNull( indexDefinition.getLabel() );\n-    }\n+  protected NodeConstraintDefinition(InternalSchemaActions actions, IndexDefinition indexDefinition)\n+  {\n+    super(actions, indexDefinition);\n+    this.label = requireNonNull(indexDefinition.getLabel());\n+  }\n \n-    @Override\n-    public Label getLabel()\n-    {\n-        assertInUnterminatedTransaction();\n-        return label;\n-    }\n+  @Override\n+  public Label getLabel()\n+  {\n+    assertInUnterminatedTransaction();\n+    return label;\n+  }\n \n-    @Override\n-    public RelationshipType getRelationshipType()\n-    {\n-        assertInUnterminatedTransaction();\n-        throw new IllegalStateException( \"Constraint is associated with nodes\" );\n-    }\n+  @Override\n+  public RelationshipType getRelationshipType()\n+  {\n+    assertInUnterminatedTransaction();\n+    throw new IllegalStateException(\"Constraint is associated with nodes\");\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        NodeConstraintDefinition that = (NodeConstraintDefinition) o;\n-        return label.name().equals( that.label.name() ) && Arrays.equals( propertyKeys, that.propertyKeys );\n+      return true;\n     }\n-\n-    protected String propertyText()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        String nodeVariable = label.name().toLowerCase();\n-        if ( propertyKeys.length == 1 )\n-        {\n-            return nodeVariable + \".\" + propertyKeys[0];\n-        }\n-        else\n-        {\n-            return \"(\" + Arrays.stream( propertyKeys ).map( p -> nodeVariable + \".\" + p )\n-                    .collect( Collectors.joining( \",\" ) ) + \")\";\n-        }\n+      return false;\n     }\n+    NodeConstraintDefinition that = (NodeConstraintDefinition) o;\n+    return label.name().equals(that.label.name()) && Arrays.equals(propertyKeys, that.propertyKeys);\n+  }\n \n-    @Override\n-    public int hashCode()\n+  protected String propertyText()\n+  {\n+    String nodeVariable = label.name().toLowerCase();\n+    if (propertyKeys.length == 1)\n+    {\n+      return nodeVariable + \".\" + propertyKeys[0];\n+    } else\n     {\n-        return 31 * label.name().hashCode() + Arrays.hashCode( propertyKeys );\n+      return \"(\" + Arrays.stream(propertyKeys).map(p -> nodeVariable + \".\" + p)\n+          .collect(Collectors.joining(\",\")) + \")\";\n     }\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return 31 * label.name().hashCode() + Arrays.hashCode(propertyKeys);\n+  }\n }\n",
            "diff_size": 69
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4430/NodeConstraintDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4430/NodeConstraintDefinition.java\nindex 098335fb027..7359f59b8a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4430/NodeConstraintDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4430/NodeConstraintDefinition.java\n@@ -65,11 +65,13 @@ abstract class NodeConstraintDefinition extends MultiPropertyConstraintDefinitio\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        NodeConstraintDefinition that = (NodeConstraintDefinition) o;\n+\n+NodeConstraintDefinition that = (NodeConstraintDefinition) o;\n         return label.name().equals( that.label.name() ) && Arrays.equals( propertyKeys, that.propertyKeys );\n     }\n \n@@ -82,9 +84,8 @@ abstract class NodeConstraintDefinition extends MultiPropertyConstraintDefinitio\n         }\n         else\n         {\n-            return \"(\" + Arrays.stream( propertyKeys ).map( p -> nodeVariable + \".\" + p )\n-                    .collect( Collectors.joining( \",\" ) ) + \")\";\n-        }\n+            return \"(\" + Arrays.stream( propertyKeys ).map( p -> nodeVariable + \".\" + p ).collect( Collectors.joining( \",\" ) ) + \")\";\n+    }\n     }\n \n     @Override\n@@ -92,4 +93,4 @@ abstract class NodeConstraintDefinition extends MultiPropertyConstraintDefinitio\n     {\n         return 31 * label.name().hashCode() + Arrays.hashCode( propertyKeys );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1964",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1964/UnionIndexCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1964/UnionIndexCapability.java\nindex 0aaaeb050aa..2dc43bf75fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1964/UnionIndexCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1964/UnionIndexCapability.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import java.util.Arrays;\n@@ -35,54 +36,54 @@ import org.neo4j.values.storable.ValueCategory;\n  */\n public class UnionIndexCapability implements IndexCapability\n {\n-    private final IndexCapability[] capabilities;\n-    private final IndexLimitation[] limitationsUnion;\n+  private final IndexCapability[] capabilities;\n+  private final IndexLimitation[] limitationsUnion;\n \n-    public UnionIndexCapability( IndexCapability... capabilities )\n-    {\n-        this.capabilities = capabilities;\n-        this.limitationsUnion = limitationsUnion( capabilities );\n-    }\n+  public UnionIndexCapability(IndexCapability... capabilities)\n+  {\n+    this.capabilities = capabilities;\n+    this.limitationsUnion = limitationsUnion(capabilities);\n+  }\n \n-    @Override\n-    public IndexOrder[] orderCapability( ValueCategory... valueCategories )\n+  @Override\n+  public IndexOrder[] orderCapability(ValueCategory... valueCategories)\n+  {\n+    Set<IndexOrder> orderCapability = new HashSet<>();\n+    for (IndexCapability capability : capabilities)\n     {\n-        Set<IndexOrder> orderCapability = new HashSet<>();\n-        for ( IndexCapability capability : capabilities )\n-        {\n-            orderCapability.addAll( Arrays.asList( capability.orderCapability( valueCategories ) ) );\n-        }\n-        return orderCapability.toArray( new IndexOrder[orderCapability.size()] );\n+      orderCapability.addAll(Arrays.asList(capability.orderCapability(valueCategories)));\n     }\n+    return orderCapability.toArray(new IndexOrder[orderCapability.size()]);\n+  }\n \n-    @Override\n-    public IndexValueCapability valueCapability( ValueCategory... valueCategories )\n+  @Override\n+  public IndexValueCapability valueCapability(ValueCategory... valueCategories)\n+  {\n+    IndexValueCapability currentBest = IndexValueCapability.NO;\n+    for (IndexCapability capability : capabilities)\n     {\n-        IndexValueCapability currentBest = IndexValueCapability.NO;\n-        for ( IndexCapability capability : capabilities )\n-        {\n-            IndexValueCapability next = capability.valueCapability( valueCategories );\n-            if ( next.compare( currentBest ) > 0 )\n-            {\n-                currentBest = next;\n-            }\n-        }\n-        return currentBest;\n+      IndexValueCapability next = capability.valueCapability(valueCategories);\n+      if (next.compare(currentBest) > 0)\n+      {\n+        currentBest = next;\n+      }\n     }\n+    return currentBest;\n+  }\n \n-    @Override\n-    public IndexLimitation[] limitations()\n-    {\n-        return limitationsUnion;\n-    }\n+  @Override\n+  public IndexLimitation[] limitations()\n+  {\n+    return limitationsUnion;\n+  }\n \n-    private IndexLimitation[] limitationsUnion( IndexCapability[] capabilities )\n+  private IndexLimitation[] limitationsUnion(IndexCapability[] capabilities)\n+  {\n+    HashSet<IndexLimitation> union = new HashSet<>();\n+    for (IndexCapability capability : capabilities)\n     {\n-        HashSet<IndexLimitation> union = new HashSet<>();\n-        for ( IndexCapability capability : capabilities )\n-        {\n-            union.addAll( Arrays.asList( capability.limitations() ) );\n-        }\n-        return union.toArray( new IndexLimitation[union.size()] );\n+      union.addAll(Arrays.asList(capability.limitations()));\n     }\n+    return union.toArray(new IndexLimitation[union.size()]);\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1964/UnionIndexCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1964/UnionIndexCapability.java\nindex 0aaaeb050aa..4f36e373aab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1964/UnionIndexCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1964/UnionIndexCapability.java\n@@ -52,7 +52,8 @@ public class UnionIndexCapability implements IndexCapability\n         {\n             orderCapability.addAll( Arrays.asList( capability.orderCapability( valueCategories ) ) );\n         }\n-        return orderCapability.toArray( new IndexOrder[orderCapability.size()] );\n+\n+return orderCapability.toArray( new IndexOrder[orderCapability.size()] );\n     }\n \n     @Override\n@@ -83,6 +84,7 @@ public class UnionIndexCapability implements IndexCapability\n         {\n             union.addAll( Arrays.asList( capability.limitations() ) );\n         }\n-        return union.toArray( new IndexLimitation[union.size()] );\n+\n+return union.toArray( new IndexLimitation[union.size()] );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
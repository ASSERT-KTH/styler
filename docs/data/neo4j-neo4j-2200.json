{
    "project_name": "neo4j-neo4j",
    "error_id": "2200",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2200/AdversarialFileChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2200/AdversarialFileChannel.java\nindex 4da8f80e7e3..9b57792b53e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2200/AdversarialFileChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2200/AdversarialFileChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.adversaries.fs;\n \n import java.io.IOException;\n@@ -27,147 +28,147 @@ import org.neo4j.adversaries.Adversary;\n import org.neo4j.io.fs.StoreChannel;\n import org.neo4j.io.fs.StoreFileChannel;\n \n-@SuppressWarnings( \"unchecked\" )\n+@SuppressWarnings(\"unchecked\")\n public class AdversarialFileChannel extends StoreFileChannel\n {\n     private final StoreChannel delegate;\n     private final Adversary adversary;\n \n-    public static StoreFileChannel wrap( StoreFileChannel channel, Adversary adversary )\n+    public static StoreFileChannel wrap(StoreFileChannel channel, Adversary adversary)\n     {\n-        return new AdversarialFileChannel( channel, adversary );\n+        return new AdversarialFileChannel(channel, adversary);\n     }\n \n-    private AdversarialFileChannel( StoreFileChannel channel, Adversary adversary )\n+    private AdversarialFileChannel(StoreFileChannel channel, Adversary adversary)\n     {\n-        super( channel );\n+        super(channel);\n         this.delegate = channel;\n         this.adversary = adversary;\n     }\n \n     @Override\n-    public long write( ByteBuffer[] srcs ) throws IOException\n+    public long write(ByteBuffer[] srcs) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class))\n         {\n             ByteBuffer mischievousBuffer = srcs[srcs.length - 1];\n-            int oldLimit = mischiefLimit( mischievousBuffer );\n-            long written = delegate.write( srcs );\n-            mischievousBuffer.limit( oldLimit );\n+            int oldLimit = mischiefLimit(mischievousBuffer);\n+            long written = delegate.write(srcs);\n+            mischievousBuffer.limit(oldLimit);\n             return written;\n         }\n-        return delegate.write( srcs );\n+        return delegate.write(srcs);\n     }\n \n     @Override\n-    public void writeAll( ByteBuffer src, long position ) throws IOException\n+    public void writeAll(ByteBuffer src, long position) throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n-        delegate.writeAll( src, position );\n+        adversary.injectFailure(IOException.class);\n+        delegate.writeAll(src, position);\n     }\n \n     @Override\n-    public void writeAll( ByteBuffer src ) throws IOException\n+    public void writeAll(ByteBuffer src) throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n-        delegate.writeAll( src );\n+        adversary.injectFailure(IOException.class);\n+        delegate.writeAll(src);\n     }\n \n     @Override\n-    public long write( ByteBuffer[] srcs, int offset, int length ) throws IOException\n+    public long write(ByteBuffer[] srcs, int offset, int length) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class))\n         {\n             length = length == 1 ? 1 : length / 2;\n             ByteBuffer mischievousBuffer = srcs[offset + length - 1];\n-            int oldLimit = mischiefLimit( mischievousBuffer );\n-            long written = delegate.write( srcs, offset, length );\n-            mischievousBuffer.limit( oldLimit );\n+            int oldLimit = mischiefLimit(mischievousBuffer);\n+            long written = delegate.write(srcs, offset, length);\n+            mischievousBuffer.limit(oldLimit);\n             return written;\n         }\n-        return delegate.write( srcs, offset, length );\n+        return delegate.write(srcs, offset, length);\n     }\n \n     @Override\n-    public StoreFileChannel truncate( long size ) throws IOException\n+    public StoreFileChannel truncate(long size) throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n-        return (StoreFileChannel) delegate.truncate( size );\n+        adversary.injectFailure(IOException.class);\n+        return (StoreFileChannel) delegate.truncate(size);\n     }\n \n     @Override\n-    public StoreFileChannel position( long newPosition ) throws IOException\n+    public StoreFileChannel position(long newPosition) throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n-        return (StoreFileChannel) delegate.position( newPosition );\n+        adversary.injectFailure(IOException.class);\n+        return (StoreFileChannel) delegate.position(newPosition);\n     }\n \n     @Override\n-    public int read( ByteBuffer dst, long position ) throws IOException\n+    public int read(ByteBuffer dst, long position) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class))\n         {\n-            int oldLimit = mischiefLimit( dst );\n-            int read = delegate.read( dst, position );\n-            dst.limit( oldLimit );\n+            int oldLimit = mischiefLimit(dst);\n+            int read = delegate.read(dst, position);\n+            dst.limit(oldLimit);\n             return read;\n         }\n-        return delegate.read( dst, position );\n+        return delegate.read(dst, position);\n     }\n \n-    private static int mischiefLimit( ByteBuffer buf )\n+    private static int mischiefLimit(ByteBuffer buf)\n     {\n         int oldLimit = buf.limit();\n         int newLimit = oldLimit - buf.remaining() / 2;\n-        buf.limit( newLimit );\n+        buf.limit(newLimit);\n         return oldLimit;\n     }\n \n     @Override\n-    public void force( boolean metaData ) throws IOException\n+    public void force(boolean metaData) throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n-        delegate.force( metaData );\n+        adversary.injectFailure(IOException.class);\n+        delegate.force(metaData);\n     }\n \n     @Override\n-    public int read( ByteBuffer dst ) throws IOException\n+    public int read(ByteBuffer dst) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class))\n         {\n-            int oldLimit = mischiefLimit( dst );\n-            int read = delegate.read( dst );\n-            dst.limit( oldLimit );\n+            int oldLimit = mischiefLimit(dst);\n+            int read = delegate.read(dst);\n+            dst.limit(oldLimit);\n             return read;\n         }\n-        return delegate.read( dst );\n+        return delegate.read(dst);\n     }\n \n     @Override\n-    public long read( ByteBuffer[] dsts, int offset, int length ) throws IOException\n+    public long read(ByteBuffer[] dsts, int offset, int length) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class))\n         {\n             ByteBuffer lastBuf = dsts[dsts.length - 1];\n-            int oldLimit = mischiefLimit( lastBuf );\n-            long read = delegate.read( dsts, offset, length );\n-            lastBuf.limit( oldLimit );\n+            int oldLimit = mischiefLimit(lastBuf);\n+            long read = delegate.read(dsts, offset, length);\n+            lastBuf.limit(oldLimit);\n             return read;\n         }\n-        return delegate.read( dsts, offset, length );\n+        return delegate.read(dsts, offset, length);\n     }\n \n     @Override\n     public long position() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         return delegate.position();\n     }\n \n     @Override\n     public FileLock tryLock() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         return delegate.tryLock();\n     }\n \n@@ -179,49 +180,49 @@ public class AdversarialFileChannel extends StoreFileChannel\n     }\n \n     @Override\n-    public long read( ByteBuffer[] dsts ) throws IOException\n+    public long read(ByteBuffer[] dsts) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class))\n         {\n             ByteBuffer lastBuf = dsts[dsts.length - 1];\n-            int oldLimit = mischiefLimit( lastBuf );\n-            long read = delegate.read( dsts );\n-            lastBuf.limit( oldLimit );\n+            int oldLimit = mischiefLimit(lastBuf);\n+            long read = delegate.read(dsts);\n+            lastBuf.limit(oldLimit);\n             return read;\n         }\n-        return delegate.read( dsts );\n+        return delegate.read(dsts);\n     }\n \n     @Override\n-    public int write( ByteBuffer src ) throws IOException\n+    public int write(ByteBuffer src) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class))\n         {\n-            int oldLimit = mischiefLimit( src );\n-            int written = delegate.write( src );\n-            src.limit( oldLimit );\n+            int oldLimit = mischiefLimit(src);\n+            int written = delegate.write(src);\n+            src.limit(oldLimit);\n             return written;\n         }\n-        return delegate.write( src );\n+        return delegate.write(src);\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         delegate.close();\n     }\n \n     @Override\n     public long size() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         return delegate.size();\n     }\n \n     @Override\n     public void flush() throws IOException\n     {\n-        force( false );\n+        force(false);\n     }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
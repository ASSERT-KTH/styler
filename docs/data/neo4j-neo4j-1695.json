{
    "project_name": "neo4j-neo4j",
    "error_id": "1695",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "117",
                    "column": "92",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "103",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "281",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "151",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "433",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "455",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "491",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "502",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "513",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "536",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "536",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "552",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "552",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1695/SchemaStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1695/SchemaStore.java\nindex 7de908cc317..9004e2f3b87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1695/SchemaStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1695/SchemaStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import org.eclipse.collections.api.RichIterable;\n@@ -109,39 +110,39 @@ import static org.neo4j.kernel.impl.store.record.Record.NO_NEXT_PROPERTY;\n  *     </ul>\n  * </ul>\n  */\n-public class SchemaStore extends CommonAbstractStore<SchemaRecord,IntStoreHeader>\n+public class SchemaStore extends CommonAbstractStore<SchemaRecord, IntStoreHeader>\n {\n     // We technically don't need a store header, but we reserve record id 0 anyway, both to stay compatible with the old schema store,\n     // and to have it in reserve, just in case we might need it in the future.\n-    private static final IntStoreHeaderFormat VALID_STORE_HEADER = new IntStoreHeaderFormat( 0 );\n+    private static final IntStoreHeaderFormat VALID_STORE_HEADER = new IntStoreHeaderFormat(0);\n \n     // When the store format does not support the flexible schema store feature, then we won't even pretend to have a header,\n     // since that can run afoul of the id generators, which will be initialised with a max id of zero.\n-    private static final IntStoreHeaderFormat DISABLED_STORE_HEADER = new ConstantIntStoreHeaderFormat( 0 );\n+    private static final IntStoreHeaderFormat DISABLED_STORE_HEADER = new ConstantIntStoreHeaderFormat(0);\n \n     public static final String TYPE_DESCRIPTOR = \"SchemaStore\";\n     private final PropertyStore propertyStore;\n \n     public SchemaStore(\n-            Path path,\n-            Path idFile,\n-            Config conf,\n-            IdType idType,\n-            IdGeneratorFactory idGeneratorFactory,\n-            PageCache pageCache,\n-            LogProvider logProvider,\n-            PropertyStore propertyStore,\n-            RecordFormats recordFormats,\n-            ImmutableSet<OpenOption> openOptions )\n+      Path path,\n+      Path idFile,\n+      Config conf,\n+      IdType idType,\n+      IdGeneratorFactory idGeneratorFactory,\n+      PageCache pageCache,\n+      LogProvider logProvider,\n+      PropertyStore propertyStore,\n+      RecordFormats recordFormats,\n+      ImmutableSet<OpenOption> openOptions)\n     {\n-        super( path, idFile, conf, idType, idGeneratorFactory, pageCache, logProvider, TYPE_DESCRIPTOR, recordFormats.schema(),\n-                getStoreHeaderFormat( recordFormats ), recordFormats.storeVersion(), openOptions );\n+        super(path, idFile, conf, idType, idGeneratorFactory, pageCache, logProvider, TYPE_DESCRIPTOR, recordFormats.schema(),\n+          getStoreHeaderFormat(recordFormats), recordFormats.storeVersion(), openOptions);\n         this.propertyStore = propertyStore;\n     }\n \n-    private static IntStoreHeaderFormat getStoreHeaderFormat( RecordFormats recordFormats )\n+    private static IntStoreHeaderFormat getStoreHeaderFormat(RecordFormats recordFormats)\n     {\n-        return recordFormats.hasCapability( RecordStorageCapability.FLEXIBLE_SCHEMA_STORE ) ? VALID_STORE_HEADER : DISABLED_STORE_HEADER;\n+        return recordFormats.hasCapability(RecordStorageCapability.FLEXIBLE_SCHEMA_STORE) ? VALID_STORE_HEADER : DISABLED_STORE_HEADER;\n     }\n \n     public PropertyStore propertyStore()\n@@ -166,417 +167,412 @@ public class SchemaStore extends CommonAbstractStore<SchemaRecord,IntStoreHeader\n     private static final String PROP_INDEX_TYPE = PROP_SCHEMA_RULE_PREFIX + \"indexType\";\n     private static final String PROP_INDEX_CONFIG_PREFIX = PROP_SCHEMA_RULE_PREFIX + \"IndexConfig.\";\n \n-    public static int getOwningConstraintPropertyKeyId( TokenHolders tokenHolders ) throws KernelException\n+    public static int getOwningConstraintPropertyKeyId(TokenHolders tokenHolders) throws KernelException\n     {\n         int[] ids = new int[1];\n-        tokenHolders.propertyKeyTokens().getOrCreateInternalIds( new String[]{PROP_OWNING_CONSTRAINT}, ids );\n+        tokenHolders.propertyKeyTokens().getOrCreateInternalIds(new String[] {PROP_OWNING_CONSTRAINT}, ids);\n         return ids[0];\n     }\n \n     /**\n      * Turn a {@link SchemaRule} into a map-of-string-to-value representation.\n+     *\n      * @param rule the schema rule to convert.\n      * @return a map representation of the given schema rule.\n      * @see #unmapifySchemaRule(long, Map)\n      */\n-    public static Map<String,Value> mapifySchemaRule( SchemaRule rule )\n+    public static Map<String, Value> mapifySchemaRule(SchemaRule rule)\n     {\n-        Map<String,Value> map = new HashMap<>();\n-        putStringProperty( map, PROP_SCHEMA_RULE_NAME, rule.getName() );\n+        Map<String, Value> map = new HashMap<>();\n+        putStringProperty(map, PROP_SCHEMA_RULE_NAME, rule.getName());\n \n         // Schema\n-        schemaDescriptorToMap( rule.schema(), map );\n+        schemaDescriptorToMap(rule.schema(), map);\n \n         // Rule\n-        if ( rule instanceof IndexDescriptor )\n+        if (rule instanceof IndexDescriptor)\n         {\n-            schemaIndexToMap( (IndexDescriptor) rule, map );\n-        }\n-        else if ( rule instanceof ConstraintDescriptor )\n+            schemaIndexToMap((IndexDescriptor) rule, map);\n+        } else if (rule instanceof ConstraintDescriptor)\n         {\n-            schemaConstraintToMap( (ConstraintDescriptor) rule, map );\n+            schemaConstraintToMap((ConstraintDescriptor) rule, map);\n         }\n         return map;\n     }\n \n-    public static IntObjectMap<Value> convertSchemaRuleToMap( SchemaRule rule, TokenHolders tokenHolders ) throws KernelException\n+    public static IntObjectMap<Value> convertSchemaRuleToMap(SchemaRule rule, TokenHolders tokenHolders) throws KernelException\n     {\n         // The dance we do in here with map to arrays to another map, allows us to resolve (and allocate) all of the tokens in a single batch operation.\n-        Map<String,Value> stringlyMap = mapifySchemaRule( rule );\n+        Map<String, Value> stringlyMap = mapifySchemaRule(rule);\n \n         int size = stringlyMap.size();\n         String[] keys = new String[size];\n         int[] keyIds = new int[size];\n         Value[] values = new Value[size];\n \n-        Iterator<Map.Entry<String,Value>> itr = stringlyMap.entrySet().iterator();\n-        for ( int i = 0; i < size; i++ )\n+        Iterator<Map.Entry<String, Value>> itr = stringlyMap.entrySet().iterator();\n+        for (int i = 0; i < size; i++)\n         {\n-            Map.Entry<String,Value> entry = itr.next();\n+            Map.Entry<String, Value> entry = itr.next();\n             keys[i] = entry.getKey();\n             values[i] = entry.getValue();\n         }\n \n-        tokenHolders.propertyKeyTokens().getOrCreateInternalIds( keys, keyIds );\n+        tokenHolders.propertyKeyTokens().getOrCreateInternalIds(keys, keyIds);\n \n         MutableIntObjectMap<Value> tokenisedMap = new IntObjectHashMap<>();\n-        for ( int i = 0; i < size; i++ )\n+        for (int i = 0; i < size; i++)\n         {\n-            tokenisedMap.put( keyIds[i], values[i] );\n+            tokenisedMap.put(keyIds[i], values[i]);\n         }\n \n         return tokenisedMap;\n     }\n \n-    private static void schemaDescriptorToMap( SchemaDescriptor schemaDescriptor, Map<String,Value> map )\n+    private static void schemaDescriptorToMap(SchemaDescriptor schemaDescriptor, Map<String, Value> map)\n     {\n         EntityType entityType = schemaDescriptor.entityType();\n         PropertySchemaType propertySchemaType = schemaDescriptor.propertySchemaType();\n         int[] entityTokenIds = schemaDescriptor.getEntityTokenIds();\n         int[] propertyIds = schemaDescriptor.getPropertyIds();\n-        putStringProperty( map, PROP_SCHEMA_DESCRIPTOR_ENTITY_TYPE, entityType.name() );\n-        putStringProperty( map, PROP_SCHEMA_DESCRIPTOR_PROPERTY_SCHEMA_TYPE, propertySchemaType.name() );\n-        putIntArrayProperty( map, PROP_SCHEMA_DESCRIPTOR_ENTITY_IDS, entityTokenIds );\n-        putIntArrayProperty( map, PROP_SCHEMA_DESCRIPTOR_PROPERTY_IDS, propertyIds );\n+        putStringProperty(map, PROP_SCHEMA_DESCRIPTOR_ENTITY_TYPE, entityType.name());\n+        putStringProperty(map, PROP_SCHEMA_DESCRIPTOR_PROPERTY_SCHEMA_TYPE, propertySchemaType.name());\n+        putIntArrayProperty(map, PROP_SCHEMA_DESCRIPTOR_ENTITY_IDS, entityTokenIds);\n+        putIntArrayProperty(map, PROP_SCHEMA_DESCRIPTOR_PROPERTY_IDS, propertyIds);\n     }\n \n-    private static void indexConfigToMap( IndexConfig indexConfig, Map<String,Value> map )\n+    private static void indexConfigToMap(IndexConfig indexConfig, Map<String, Value> map)\n     {\n-        RichIterable<Pair<String,Value>> entries = indexConfig.entries();\n-        for ( Pair<String,Value> entry : entries )\n+        RichIterable<Pair<String, Value>> entries = indexConfig.entries();\n+        for (Pair<String, Value> entry : entries)\n         {\n-            putIndexConfigProperty( map, entry.getOne(), entry.getTwo() );\n+            putIndexConfigProperty(map, entry.getOne(), entry.getTwo());\n         }\n     }\n \n-    private static void schemaIndexToMap( IndexDescriptor rule, Map<String,Value> map )\n+    private static void schemaIndexToMap(IndexDescriptor rule, Map<String, Value> map)\n     {\n         // Rule\n-        putStringProperty( map, PROP_SCHEMA_RULE_TYPE, \"INDEX\" );\n+        putStringProperty(map, PROP_SCHEMA_RULE_TYPE, \"INDEX\");\n \n         IndexType indexType = rule.getIndexType();\n-        putStringProperty( map, PROP_INDEX_TYPE, indexType.name() );\n+        putStringProperty(map, PROP_INDEX_TYPE, indexType.name());\n \n-        if ( rule.isUnique() )\n+        if (rule.isUnique())\n         {\n-            putStringProperty( map, PROP_INDEX_RULE_TYPE, \"UNIQUE\" );\n-            if ( rule.getOwningConstraintId().isPresent() )\n+            putStringProperty(map, PROP_INDEX_RULE_TYPE, \"UNIQUE\");\n+            if (rule.getOwningConstraintId().isPresent())\n             {\n-                map.put( PROP_OWNING_CONSTRAINT, Values.longValue( rule.getOwningConstraintId().getAsLong() ) );\n+                map.put(PROP_OWNING_CONSTRAINT, Values.longValue(rule.getOwningConstraintId().getAsLong()));\n             }\n-        }\n-        else\n+        } else\n         {\n-            putStringProperty( map, PROP_INDEX_RULE_TYPE, \"NON_UNIQUE\" );\n+            putStringProperty(map, PROP_INDEX_RULE_TYPE, \"NON_UNIQUE\");\n         }\n \n         // Provider\n-        indexProviderToMap( rule, map );\n+        indexProviderToMap(rule, map);\n \n         // Index config\n         IndexConfig indexConfig = rule.getIndexConfig();\n-        indexConfigToMap( indexConfig, map );\n+        indexConfigToMap(indexConfig, map);\n     }\n \n-    private static void indexProviderToMap( IndexDescriptor rule, Map<String,Value> map )\n+    private static void indexProviderToMap(IndexDescriptor rule, Map<String, Value> map)\n     {\n         IndexProviderDescriptor provider = rule.getIndexProvider();\n         String name = provider.getKey();\n         String version = provider.getVersion();\n-        putStringProperty( map, PROP_INDEX_PROVIDER_NAME, name );\n-        putStringProperty( map, PROP_INDEX_PROVIDER_VERSION, version );\n+        putStringProperty(map, PROP_INDEX_PROVIDER_NAME, name);\n+        putStringProperty(map, PROP_INDEX_PROVIDER_VERSION, version);\n     }\n \n-    private static void schemaConstraintToMap( ConstraintDescriptor rule, Map<String,Value> map )\n+    private static void schemaConstraintToMap(ConstraintDescriptor rule, Map<String, Value> map)\n     {\n         // Rule\n-        putStringProperty( map, PROP_SCHEMA_RULE_TYPE, \"CONSTRAINT\" );\n+        putStringProperty(map, PROP_SCHEMA_RULE_TYPE, \"CONSTRAINT\");\n         ConstraintType type = rule.type();\n-        switch ( type )\n+        switch (type)\n         {\n-        case UNIQUE:\n-            putStringProperty( map, PROP_CONSTRAINT_RULE_TYPE, \"UNIQUE\" );\n-            if ( rule.asIndexBackedConstraint().hasOwnedIndexId() )\n-            {\n-                putLongProperty( map, PROP_OWNED_INDEX, rule.asIndexBackedConstraint().ownedIndexId() );\n-            }\n-            break;\n-        case EXISTS:\n-            putStringProperty( map, PROP_CONSTRAINT_RULE_TYPE, \"EXISTS\" );\n-            break;\n-        case UNIQUE_EXISTS:\n-            putStringProperty( map, PROP_CONSTRAINT_RULE_TYPE, \"UNIQUE_EXISTS\" );\n-            if ( rule.asIndexBackedConstraint().hasOwnedIndexId() )\n-            {\n-                putLongProperty( map, PROP_OWNED_INDEX, rule.asIndexBackedConstraint().ownedIndexId() );\n-            }\n-            break;\n-        default:\n-            throw new UnsupportedOperationException( \"Unrecognized constraint type: \" + type );\n+            case UNIQUE:\n+                putStringProperty(map, PROP_CONSTRAINT_RULE_TYPE, \"UNIQUE\");\n+                if (rule.asIndexBackedConstraint().hasOwnedIndexId())\n+                {\n+                    putLongProperty(map, PROP_OWNED_INDEX, rule.asIndexBackedConstraint().ownedIndexId());\n+                }\n+                break;\n+            case EXISTS:\n+                putStringProperty(map, PROP_CONSTRAINT_RULE_TYPE, \"EXISTS\");\n+                break;\n+            case UNIQUE_EXISTS:\n+                putStringProperty(map, PROP_CONSTRAINT_RULE_TYPE, \"UNIQUE_EXISTS\");\n+                if (rule.asIndexBackedConstraint().hasOwnedIndexId())\n+                {\n+                    putLongProperty(map, PROP_OWNED_INDEX, rule.asIndexBackedConstraint().ownedIndexId());\n+                }\n+                break;\n+            default:\n+                throw new UnsupportedOperationException(\"Unrecognized constraint type: \" + type);\n         }\n     }\n \n-    public static SchemaRule readSchemaRule( SchemaRecord record, PropertyStore propertyStore, TokenHolders tokenHolders, PageCursorTracer cursorTracer )\n-            throws MalformedSchemaRuleException\n+    public static SchemaRule readSchemaRule(SchemaRecord record, PropertyStore propertyStore, TokenHolders tokenHolders, PageCursorTracer cursorTracer)\n+      throws MalformedSchemaRuleException\n     {\n-        Map<String,Value> map = schemaRecordToMap( record, propertyStore, tokenHolders, cursorTracer );\n-        return unmapifySchemaRule( record.getId(), map );\n+        Map<String, Value> map = schemaRecordToMap(record, propertyStore, tokenHolders, cursorTracer);\n+        return unmapifySchemaRule(record.getId(), map);\n     }\n \n     /**\n      * Turn a map-of-string-to-value representation of a schema rule, into an actual {@link SchemaRule} object.\n+     *\n      * @param ruleId the id of the rule.\n-     * @param map the map representation of the schema rule.\n+     * @param map    the map representation of the schema rule.\n      * @return the schema rule object represented by the given map.\n      * @throws MalformedSchemaRuleException if the map cannot be cleanly converted to a schema rule.\n      * @see #mapifySchemaRule(SchemaRule)\n      */\n-    public static SchemaRule unmapifySchemaRule( long ruleId, Map<String,Value> map ) throws MalformedSchemaRuleException\n+    public static SchemaRule unmapifySchemaRule(long ruleId, Map<String, Value> map) throws MalformedSchemaRuleException\n     {\n-        String schemaRuleType = getString( PROP_SCHEMA_RULE_TYPE, map );\n-        switch ( schemaRuleType )\n+        String schemaRuleType = getString(PROP_SCHEMA_RULE_TYPE, map);\n+        switch (schemaRuleType)\n         {\n-        case \"INDEX\":\n-            return buildIndexRule( ruleId, map );\n-        case \"CONSTRAINT\":\n-            return buildConstraintRule( ruleId, map );\n-        default:\n-            throw new MalformedSchemaRuleException( \"Can not create a schema rule of type: \" + schemaRuleType );\n+            case \"INDEX\":\n+                return buildIndexRule(ruleId, map);\n+            case \"CONSTRAINT\":\n+                return buildConstraintRule(ruleId, map);\n+            default:\n+                throw new MalformedSchemaRuleException(\"Can not create a schema rule of type: \" + schemaRuleType);\n         }\n     }\n \n-    private static SchemaRule buildIndexRule( long schemaRuleId, Map<String,Value> props ) throws MalformedSchemaRuleException\n+    private static SchemaRule buildIndexRule(long schemaRuleId, Map<String, Value> props) throws MalformedSchemaRuleException\n     {\n-        SchemaDescriptor schema = buildSchemaDescriptor( props );\n-        String indexRuleType = getString( PROP_INDEX_RULE_TYPE, props );\n-        boolean unique = parseIndexType( indexRuleType );\n+        SchemaDescriptor schema = buildSchemaDescriptor(props);\n+        String indexRuleType = getString(PROP_INDEX_RULE_TYPE, props);\n+        boolean unique = parseIndexType(indexRuleType);\n \n-        IndexPrototype prototype = unique ? IndexPrototype.uniqueForSchema( schema ) : IndexPrototype.forSchema( schema );\n+        IndexPrototype prototype = unique ? IndexPrototype.uniqueForSchema(schema) : IndexPrototype.forSchema(schema);\n \n-        prototype = prototype.withName( getString( PROP_SCHEMA_RULE_NAME, props ) );\n-        prototype = prototype.withIndexType( getIndexType( getString( PROP_INDEX_TYPE, props ) ) );\n+        prototype = prototype.withName(getString(PROP_SCHEMA_RULE_NAME, props));\n+        prototype = prototype.withIndexType(getIndexType(getString(PROP_INDEX_TYPE, props)));\n \n-        String providerKey = getString( PROP_INDEX_PROVIDER_NAME, props );\n-        String providerVersion = getString( PROP_INDEX_PROVIDER_VERSION, props );\n-        IndexProviderDescriptor providerDescriptor = new IndexProviderDescriptor( providerKey, providerVersion );\n-        prototype = prototype.withIndexProvider( providerDescriptor );\n+        String providerKey = getString(PROP_INDEX_PROVIDER_NAME, props);\n+        String providerVersion = getString(PROP_INDEX_PROVIDER_VERSION, props);\n+        IndexProviderDescriptor providerDescriptor = new IndexProviderDescriptor(providerKey, providerVersion);\n+        prototype = prototype.withIndexProvider(providerDescriptor);\n \n-        IndexDescriptor index = prototype.materialise( schemaRuleId );\n+        IndexDescriptor index = prototype.materialise(schemaRuleId);\n \n-        IndexConfig indexConfig = extractIndexConfig( props );\n-        index = index.withIndexConfig( indexConfig );\n+        IndexConfig indexConfig = extractIndexConfig(props);\n+        index = index.withIndexConfig(indexConfig);\n \n-        if ( props.containsKey( PROP_OWNING_CONSTRAINT ) )\n+        if (props.containsKey(PROP_OWNING_CONSTRAINT))\n         {\n-            index = index.withOwningConstraintId( getLong( PROP_OWNING_CONSTRAINT, props ) );\n+            index = index.withOwningConstraintId(getLong(PROP_OWNING_CONSTRAINT, props));\n         }\n \n         return index;\n     }\n \n-    private static boolean parseIndexType( String indexRuleType ) throws MalformedSchemaRuleException\n+    private static boolean parseIndexType(String indexRuleType) throws MalformedSchemaRuleException\n     {\n-        switch ( indexRuleType )\n+        switch (indexRuleType)\n         {\n-        case \"NON_UNIQUE\":\n-            return false;\n-        case \"UNIQUE\":\n-            return true;\n-        default:\n-            throw new MalformedSchemaRuleException( \"Did not recognize index rule type: \" + indexRuleType );\n+            case \"NON_UNIQUE\":\n+                return false;\n+            case \"UNIQUE\":\n+                return true;\n+            default:\n+                throw new MalformedSchemaRuleException(\"Did not recognize index rule type: \" + indexRuleType);\n         }\n     }\n \n-    private static SchemaRule buildConstraintRule( long id, Map<String,Value> props ) throws MalformedSchemaRuleException\n+    private static SchemaRule buildConstraintRule(long id, Map<String, Value> props) throws MalformedSchemaRuleException\n     {\n-        SchemaDescriptor schema = buildSchemaDescriptor( props );\n-        String constraintRuleType = getString( PROP_CONSTRAINT_RULE_TYPE, props );\n-        String name = getString( PROP_SCHEMA_RULE_NAME, props );\n-        OptionalLong ownedIndex = getOptionalLong( PROP_OWNED_INDEX, props );\n+        SchemaDescriptor schema = buildSchemaDescriptor(props);\n+        String constraintRuleType = getString(PROP_CONSTRAINT_RULE_TYPE, props);\n+        String name = getString(PROP_SCHEMA_RULE_NAME, props);\n+        OptionalLong ownedIndex = getOptionalLong(PROP_OWNED_INDEX, props);\n         ConstraintDescriptor constraint;\n-        switch ( constraintRuleType )\n+        switch (constraintRuleType)\n         {\n-        case \"UNIQUE\":\n-            constraint = ConstraintDescriptorFactory.uniqueForSchema( schema );\n-            if ( ownedIndex.isPresent() )\n-            {\n-                constraint = constraint.withOwnedIndexId( ownedIndex.getAsLong() );\n-            }\n-            return constraint.withId( id ).withName( name );\n-        case \"EXISTS\":\n-            constraint = ConstraintDescriptorFactory.existsForSchema( schema );\n-            return constraint.withId( id ).withName( name );\n-        case \"UNIQUE_EXISTS\":\n-            constraint = ConstraintDescriptorFactory.nodeKeyForSchema( schema );\n-            if ( ownedIndex.isPresent() )\n-            {\n-                constraint = constraint.withOwnedIndexId( ownedIndex.getAsLong() );\n-            }\n-            return constraint.withId( id ).withName( name );\n-        default:\n-            throw new MalformedSchemaRuleException( \"Did not recognize constraint rule type: \" + constraintRuleType );\n+            case \"UNIQUE\":\n+                constraint = ConstraintDescriptorFactory.uniqueForSchema(schema);\n+                if (ownedIndex.isPresent())\n+                {\n+                    constraint = constraint.withOwnedIndexId(ownedIndex.getAsLong());\n+                }\n+                return constraint.withId(id).withName(name);\n+            case \"EXISTS\":\n+                constraint = ConstraintDescriptorFactory.existsForSchema(schema);\n+                return constraint.withId(id).withName(name);\n+            case \"UNIQUE_EXISTS\":\n+                constraint = ConstraintDescriptorFactory.nodeKeyForSchema(schema);\n+                if (ownedIndex.isPresent())\n+                {\n+                    constraint = constraint.withOwnedIndexId(ownedIndex.getAsLong());\n+                }\n+                return constraint.withId(id).withName(name);\n+            default:\n+                throw new MalformedSchemaRuleException(\"Did not recognize constraint rule type: \" + constraintRuleType);\n         }\n     }\n \n-    private static Map<String,Value> schemaRecordToMap( SchemaRecord record, PropertyStore propertyStore, TokenHolders tokenHolders,\n-            PageCursorTracer cursorTracer ) throws MalformedSchemaRuleException\n+    private static Map<String, Value> schemaRecordToMap(SchemaRecord record, PropertyStore propertyStore, TokenHolders tokenHolders,\n+                                                        PageCursorTracer cursorTracer) throws MalformedSchemaRuleException\n     {\n-        Map<String,Value> props = new HashMap<>();\n+        Map<String, Value> props = new HashMap<>();\n         PropertyRecord propRecord = propertyStore.newRecord();\n         long nextProp = record.getNextProp();\n-        while ( nextProp != NO_NEXT_PROPERTY.longValue() )\n+        while (nextProp != NO_NEXT_PROPERTY.longValue())\n         {\n             try\n             {\n-                propertyStore.getRecord( nextProp, propRecord, RecordLoad.NORMAL, cursorTracer );\n-            }\n-            catch ( InvalidRecordException e )\n+                propertyStore.getRecord(nextProp, propRecord, RecordLoad.NORMAL, cursorTracer);\n+            } catch (InvalidRecordException e)\n             {\n                 throw new MalformedSchemaRuleException(\n-                        \"Cannot read schema rule because it is referencing a property record (id \" + nextProp + \") that is invalid: \" + propRecord, e );\n+                  \"Cannot read schema rule because it is referencing a property record (id \" + nextProp + \") that is invalid: \" + propRecord, e);\n             }\n-            for ( PropertyBlock propertyBlock : propRecord )\n+            for (PropertyBlock propertyBlock : propRecord)\n             {\n-                PropertyKeyValue propertyKeyValue = propertyBlock.newPropertyKeyValue( propertyStore, cursorTracer );\n-                insertPropertyIntoMap( propertyKeyValue, props, tokenHolders );\n+                PropertyKeyValue propertyKeyValue = propertyBlock.newPropertyKeyValue(propertyStore, cursorTracer);\n+                insertPropertyIntoMap(propertyKeyValue, props, tokenHolders);\n             }\n             nextProp = propRecord.getNextProp();\n         }\n         return props;\n     }\n \n-    private static void insertPropertyIntoMap( PropertyKeyValue propertyKeyValue, Map<String,Value> props, TokenHolders tokenHolders )\n-            throws MalformedSchemaRuleException\n+    private static void insertPropertyIntoMap(PropertyKeyValue propertyKeyValue, Map<String, Value> props, TokenHolders tokenHolders)\n+      throws MalformedSchemaRuleException\n     {\n         try\n         {\n-            NamedToken propertyKeyTokenName = tokenHolders.propertyKeyTokens().getInternalTokenById( propertyKeyValue.propertyKeyId() );\n-            props.put( propertyKeyTokenName.name(), propertyKeyValue.value() );\n-        }\n-        catch ( TokenNotFoundException | InvalidRecordException e )\n+            NamedToken propertyKeyTokenName = tokenHolders.propertyKeyTokens().getInternalTokenById(propertyKeyValue.propertyKeyId());\n+            props.put(propertyKeyTokenName.name(), propertyKeyValue.value());\n+        } catch (TokenNotFoundException | InvalidRecordException e)\n         {\n             int id = propertyKeyValue.propertyKeyId();\n             throw new MalformedSchemaRuleException(\n-                    \"Cannot read schema rule because it is referring to a property key token (id \" + id + \") that does not exist.\", e );\n+              \"Cannot read schema rule because it is referring to a property key token (id \" + id + \") that does not exist.\", e);\n         }\n     }\n \n-    private static SchemaDescriptor buildSchemaDescriptor( Map<String,Value> props ) throws MalformedSchemaRuleException\n+    private static SchemaDescriptor buildSchemaDescriptor(Map<String, Value> props) throws MalformedSchemaRuleException\n     {\n-        EntityType entityType = getEntityType( getString( PROP_SCHEMA_DESCRIPTOR_ENTITY_TYPE, props ) );\n-        PropertySchemaType propertySchemaType = getPropertySchemaType( getString( PROP_SCHEMA_DESCRIPTOR_PROPERTY_SCHEMA_TYPE, props ) );\n-        int[] entityIds = getIntArray( PROP_SCHEMA_DESCRIPTOR_ENTITY_IDS, props );\n-        int[] propertyIds = getIntArray( PROP_SCHEMA_DESCRIPTOR_PROPERTY_IDS, props );\n+        EntityType entityType = getEntityType(getString(PROP_SCHEMA_DESCRIPTOR_ENTITY_TYPE, props));\n+        PropertySchemaType propertySchemaType = getPropertySchemaType(getString(PROP_SCHEMA_DESCRIPTOR_PROPERTY_SCHEMA_TYPE, props));\n+        int[] entityIds = getIntArray(PROP_SCHEMA_DESCRIPTOR_ENTITY_IDS, props);\n+        int[] propertyIds = getIntArray(PROP_SCHEMA_DESCRIPTOR_PROPERTY_IDS, props);\n \n-        return new SchemaDescriptorImplementation( entityType, propertySchemaType, entityIds, propertyIds );\n+        return new SchemaDescriptorImplementation(entityType, propertySchemaType, entityIds, propertyIds);\n     }\n \n-    private static IndexConfig extractIndexConfig( Map<String,Value> props )\n+    private static IndexConfig extractIndexConfig(Map<String, Value> props)\n     {\n-        Map<String,Value> configMap = new HashMap<>();\n-        for ( Map.Entry<String,Value> entry : props.entrySet() )\n+        Map<String, Value> configMap = new HashMap<>();\n+        for (Map.Entry<String, Value> entry : props.entrySet())\n         {\n-            if ( entry.getKey().startsWith( PROP_INDEX_CONFIG_PREFIX ) )\n+            if (entry.getKey().startsWith(PROP_INDEX_CONFIG_PREFIX))\n             {\n-                configMap.put( entry.getKey().substring( PROP_INDEX_CONFIG_PREFIX.length() ), entry.getValue() );\n+                configMap.put(entry.getKey().substring(PROP_INDEX_CONFIG_PREFIX.length()), entry.getValue());\n             }\n         }\n-        return IndexConfig.with( configMap );\n+        return IndexConfig.with(configMap);\n     }\n \n-    private static IndexType getIndexType( String indexType ) throws MalformedSchemaRuleException\n+    private static IndexType getIndexType(String indexType) throws MalformedSchemaRuleException\n     {\n         try\n         {\n-            return IndexType.valueOf( indexType );\n-        }\n-        catch ( Exception e )\n+            return IndexType.valueOf(indexType);\n+        } catch (Exception e)\n         {\n-            throw new MalformedSchemaRuleException( \"Did not recognize index type: \" + indexType, e );\n+            throw new MalformedSchemaRuleException(\"Did not recognize index type: \" + indexType, e);\n         }\n     }\n \n-    private static PropertySchemaType getPropertySchemaType( String propertySchemaType ) throws MalformedSchemaRuleException\n+    private static PropertySchemaType getPropertySchemaType(String propertySchemaType) throws MalformedSchemaRuleException\n     {\n         try\n         {\n-            return PropertySchemaType.valueOf( propertySchemaType );\n-        }\n-        catch ( Exception e )\n+            return PropertySchemaType.valueOf(propertySchemaType);\n+        } catch (Exception e)\n         {\n-            throw new MalformedSchemaRuleException( \"Did not recognize property schema type: \" + propertySchemaType, e );\n+            throw new MalformedSchemaRuleException(\"Did not recognize property schema type: \" + propertySchemaType, e);\n         }\n     }\n \n-    private static EntityType getEntityType( String entityType ) throws MalformedSchemaRuleException\n+    private static EntityType getEntityType(String entityType) throws MalformedSchemaRuleException\n     {\n         try\n         {\n-            return EntityType.valueOf( entityType );\n-        }\n-        catch ( Exception e )\n+            return EntityType.valueOf(entityType);\n+        } catch (Exception e)\n         {\n-            throw new MalformedSchemaRuleException( \"Did not recognize entity type: \" + entityType, e );\n+            throw new MalformedSchemaRuleException(\"Did not recognize entity type: \" + entityType, e);\n         }\n     }\n \n-    private static int[] getIntArray( String property, Map<String,Value> props ) throws MalformedSchemaRuleException\n+    private static int[] getIntArray(String property, Map<String, Value> props) throws MalformedSchemaRuleException\n     {\n-        Value value = props.get( property );\n-        if ( value instanceof IntArray )\n+        Value value = props.get(property);\n+        if (value instanceof IntArray)\n         {\n             return (int[]) value.asObject();\n         }\n-        throw new MalformedSchemaRuleException( \"Expected property \" + property + \" to be a IntArray but was \" + value );\n+        throw new MalformedSchemaRuleException(\"Expected property \" + property + \" to be a IntArray but was \" + value);\n     }\n \n-    private static long getLong( String property, Map<String,Value> props ) throws MalformedSchemaRuleException\n+    private static long getLong(String property, Map<String, Value> props) throws MalformedSchemaRuleException\n     {\n-        Value value = props.get( property );\n-        if ( value instanceof LongValue )\n+        Value value = props.get(property);\n+        if (value instanceof LongValue)\n         {\n             return ((LongValue) value).value();\n         }\n-        throw new MalformedSchemaRuleException( \"Expected property \" + property + \" to be a LongValue but was \" + value );\n+        throw new MalformedSchemaRuleException(\"Expected property \" + property + \" to be a LongValue but was \" + value);\n     }\n \n-    private static OptionalLong getOptionalLong( String property, Map<String,Value> props )\n+    private static OptionalLong getOptionalLong(String property, Map<String, Value> props)\n     {\n-        Value value = props.get( property );\n-        if ( value instanceof LongValue )\n+        Value value = props.get(property);\n+        if (value instanceof LongValue)\n         {\n-            return OptionalLong.of( ((LongValue) value).value() );\n+            return OptionalLong.of(((LongValue) value).value());\n         }\n         return OptionalLong.empty();\n     }\n \n-    private static String getString( String property, Map<String,Value> map ) throws MalformedSchemaRuleException\n+    private static String getString(String property, Map<String, Value> map) throws MalformedSchemaRuleException\n     {\n-        Value value = map.get( property );\n-        if ( value instanceof TextValue )\n+        Value value = map.get(property);\n+        if (value instanceof TextValue)\n         {\n             return ((TextValue) value).stringValue();\n         }\n-        throw new MalformedSchemaRuleException( \"Expected property \" + property + \" to be a TextValue but was \" + value );\n+        throw new MalformedSchemaRuleException(\"Expected property \" + property + \" to be a TextValue but was \" + value);\n     }\n \n-    private static void putLongProperty( Map<String,Value> map, String property, long value )\n+    private static void putLongProperty(Map<String, Value> map, String property, long value)\n     {\n-        map.put( property, Values.longValue( value ) );\n+        map.put(property, Values.longValue(value));\n     }\n \n-    private static void putIntArrayProperty( Map<String,Value> map, String property, int[] value )\n+    private static void putIntArrayProperty(Map<String, Value> map, String property, int[] value)\n     {\n-        map.put( property, Values.intArray( value ) );\n+        map.put(property, Values.intArray(value));\n     }\n \n-    private static void putStringProperty( Map<String,Value> map, String property, String value )\n+    private static void putStringProperty(Map<String, Value> map, String property, String value)\n     {\n-        map.put( property, Values.utf8Value( value ) );\n+        map.put(property, Values.utf8Value(value));\n     }\n \n-    private static void putIndexConfigProperty( Map<String,Value> map, String key, Value value )\n+    private static void putIndexConfigProperty(Map<String, Value> map, String key, Value value)\n     {\n-        map.put( PROP_INDEX_CONFIG_PREFIX + key, value );\n+        map.put(PROP_INDEX_CONFIG_PREFIX + key, value);\n     }\n }\n",
            "diff_size": 217
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
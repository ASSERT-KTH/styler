{
    "project_name": "neo4j-neo4j",
    "error_id": "2150",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "63",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "115",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2150/GenericConfigExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2150/GenericConfigExtractor.java\nindex 9fc5b5908b7..02498281562 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2150/GenericConfigExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2150/GenericConfigExtractor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.IOException;\n@@ -47,28 +48,27 @@ import static org.neo4j.kernel.impl.storemigration.IndexConfigExtractorUtil.logE\n final class GenericConfigExtractor\n {\n     private GenericConfigExtractor()\n-    {}\n+    {\n+    }\n \n-    static IndexConfig indexConfigFromGenericFile( FileSystemAbstraction fs, PageCache pageCache, Path genericFile,\n-            PageCursorTracer cursorTracer, Log log ) throws IOException\n+    static IndexConfig indexConfigFromGenericFile(FileSystemAbstraction fs, PageCache pageCache, Path genericFile,\n+                                                  PageCursorTracer cursorTracer, Log log) throws IOException\n     {\n-        Map<String,Value> indexConfig = new HashMap<>();\n-        if ( fs.fileExists( genericFile ) )\n+        Map<String, Value> indexConfig = new HashMap<>();\n+        if (fs.fileExists(genericFile))\n         {\n             try\n             {\n-                GBPTree.readHeader( pageCache, genericFile, new GenericConfig( indexConfig, genericFile, log ), cursorTracer );\n-            }\n-            catch ( MetadataMismatchException e )\n+                GBPTree.readHeader(pageCache, genericFile, new GenericConfig(indexConfig, genericFile, log), cursorTracer);\n+            } catch (MetadataMismatchException e)\n             {\n-                logExtractionFailure( \"Index meta data is corrupt and can not be parsed.\", log, genericFile );\n+                logExtractionFailure(\"Index meta data is corrupt and can not be parsed.\", log, genericFile);\n             }\n-        }\n-        else\n+        } else\n         {\n-            logExtractionFailure( \"Index file does not exists.\", log, genericFile );\n+            logExtractionFailure(\"Index file does not exists.\", log, genericFile);\n         }\n-        return IndexConfig.with( indexConfig );\n+        return IndexConfig.with(indexConfig);\n     }\n \n     // Copy of SpaceFillingCurveSettingsReader\n@@ -76,11 +76,11 @@ final class GenericConfigExtractor\n     {\n         private static final byte VERSION = 0;\n         private static final byte BYTE_FAILED = 0;\n-        private final Map<String,Value> indexConfig;\n+        private final Map<String, Value> indexConfig;\n         private final Path indexFile;\n         private final Log log;\n \n-        GenericConfig( Map<String,Value> indexConfig, Path indexFile, Log log )\n+        GenericConfig(Map<String, Value> indexConfig, Path indexFile, Log log)\n         {\n             this.indexConfig = indexConfig;\n             this.indexFile = indexFile;\n@@ -88,32 +88,31 @@ final class GenericConfigExtractor\n         }\n \n         @Override\n-        public void read( ByteBuffer headerBytes )\n+        public void read(ByteBuffer headerBytes)\n         {\n             byte state = headerBytes.get();\n-            if ( state != BYTE_FAILED )\n+            if (state != BYTE_FAILED)\n             {\n                 byte version = headerBytes.get();\n-                if ( version != VERSION )\n+                if (version != VERSION)\n                 {\n-                    throw new UnsupportedOperationException( \"Invalid crs settings header version \" + version + \", was expecting \" + VERSION );\n+                    throw new UnsupportedOperationException(\"Invalid crs settings header version \" + version + \", was expecting \" + VERSION);\n                 }\n \n                 int count = headerBytes.getInt();\n-                for ( int i = 0; i < count; i++ )\n+                for (int i = 0; i < count; i++)\n                 {\n-                    readNext( headerBytes );\n+                    readNext(headerBytes);\n                 }\n-            }\n-            else\n+            } else\n             {\n                 // We can't extract index configuration from broken index.\n                 // Warn about this and let index provider add default settings to index later on in migration.\n-                logExtractionFailure( \"Index is in FAILED state.\", log, indexFile );\n+                logExtractionFailure(\"Index is in FAILED state.\", log, indexFile);\n             }\n         }\n \n-        private void readNext( ByteBuffer headerBytes )\n+        private void readNext(ByteBuffer headerBytes)\n         {\n             int tableId = headerBytes.get() & 0xFF;\n             int code = headerBytes.getInt();\n@@ -122,13 +121,13 @@ final class GenericConfigExtractor\n             int dimensions = headerBytes.getShort() & 0xFFFF;\n             double[] min = new double[dimensions];\n             double[] max = new double[dimensions];\n-            for ( int i = 0; i < dimensions; i++ )\n+            for (int i = 0; i < dimensions; i++)\n             {\n-                min[i] = Double.longBitsToDouble( headerBytes.getLong() );\n-                max[i] = Double.longBitsToDouble( headerBytes.getLong() );\n+                min[i] = Double.longBitsToDouble(headerBytes.getLong());\n+                max[i] = Double.longBitsToDouble(headerBytes.getLong());\n             }\n-            CoordinateReferenceSystem crs = CoordinateReferenceSystem.get( tableId, code );\n-            SpatialIndexConfig.addSpatialConfig( indexConfig, crs, min, max );\n+            CoordinateReferenceSystem crs = CoordinateReferenceSystem.get(tableId, code);\n+            SpatialIndexConfig.addSpatialConfig(indexConfig, crs, min, max);\n         }\n     }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
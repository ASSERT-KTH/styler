{
    "project_name": "neo4j-neo4j",
    "error_id": "435",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/435/AbstractArrayType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/435/AbstractArrayType.java\nindex 7dcf5db92f1..d86977c53c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/435/AbstractArrayType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/435/AbstractArrayType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.time.LocalDate;\n@@ -38,6 +39,7 @@ import static org.neo4j.kernel.impl.index.schema.GenericKey.toNonNegativeShortEx\n /**\n  * Common ancestor of all array-types. Many of the methods are implemented by doing array looping and delegating array item operations\n  * to the non-array versions of the specific array type.\n+ *\n  * @param <T> type of raw array items for this array type, e.g. {@link LocalDate} for {@link DateArrayType}.\n  */\n abstract class AbstractArrayType<T> extends Type\n@@ -49,17 +51,17 @@ abstract class AbstractArrayType<T> extends Type\n     private final IntFunction<T[]> arrayCreator;\n     private final ValueWriter.ArrayType arrayType;\n \n-    AbstractArrayType( ValueGroup valueGroup, byte typeId,\n-            ArrayElementComparator arrayElementComparator,\n-            ArrayElementValueFactory<T> valueFactory,\n-            ArrayElementWriter arrayElementWriter,\n-            ArrayElementReader arrayElementReader,\n-            IntFunction<T[]> arrayCreator,\n-            ValueWriter.ArrayType arrayType )\n-    {\n-        super( valueGroup, typeId,\n-                // null intentionally as we're overriding how min/max gets applied for all array types\n-                null, null );\n+    AbstractArrayType(ValueGroup valueGroup, byte typeId,\n+                      ArrayElementComparator arrayElementComparator,\n+                      ArrayElementValueFactory<T> valueFactory,\n+                      ArrayElementWriter arrayElementWriter,\n+                      ArrayElementReader arrayElementReader,\n+                      IntFunction<T[]> arrayCreator,\n+                      ValueWriter.ArrayType arrayType)\n+    {\n+        super(valueGroup, typeId,\n+          // null intentionally as we're overriding how min/max gets applied for all array types\n+          null, null);\n         this.arrayElementComparator = arrayElementComparator;\n         this.valueFactory = valueFactory;\n         this.arrayElementWriter = arrayElementWriter;\n@@ -69,25 +71,25 @@ abstract class AbstractArrayType<T> extends Type\n     }\n \n     @Override\n-    final void copyValue( GenericKey to, GenericKey from )\n+    final void copyValue(GenericKey to, GenericKey from)\n     {\n-        copyValue( to, from, from.arrayLength );\n+        copyValue(to, from, from.arrayLength);\n     }\n \n-    abstract void copyValue( GenericKey to, GenericKey from, int arrayLength );\n+    abstract void copyValue(GenericKey to, GenericKey from, int arrayLength);\n \n-    abstract void initializeArray( GenericKey key, int length, ValueWriter.ArrayType arrayType );\n+    abstract void initializeArray(GenericKey key, int length, ValueWriter.ArrayType arrayType);\n \n     @Override\n-    void minimalSplitter( GenericKey left, GenericKey right, GenericKey into )\n+    void minimalSplitter(GenericKey left, GenericKey right, GenericKey into)\n     {\n         int lastEqualIndex = -1;\n-        if ( left.type == right.type )\n+        if (left.type == right.type)\n         {\n-            int maxLength = min( left.arrayLength, right.arrayLength );\n-            for ( int index = 0; index < maxLength; index++ )\n+            int maxLength = min(left.arrayLength, right.arrayLength);\n+            for (int index = 0; index < maxLength; index++)\n             {\n-                if ( arrayElementComparator.compare( left, right, index ) != 0 )\n+                if (arrayElementComparator.compare(left, right, index) != 0)\n                 {\n                     break;\n                 }\n@@ -97,108 +99,109 @@ abstract class AbstractArrayType<T> extends Type\n         // Convert from last equal index to first index to differ +1\n         // Convert from index to length +1\n         // Total +2\n-        int length = Math.min( right.arrayLength, lastEqualIndex + 2 );\n-        copyValue( into, right, length );\n+        int length = Math.min(right.arrayLength, lastEqualIndex + 2);\n+        copyValue(into, right, length);\n         into.arrayLength = length;\n     }\n \n     @Override\n-    int compareValue( GenericKey left, GenericKey right )\n+    int compareValue(GenericKey left, GenericKey right)\n     {\n-        if ( left.isHighestArray || right.isHighestArray )\n+        if (left.isHighestArray || right.isHighestArray)\n         {\n-            return Boolean.compare( left.isHighestArray, right.isHighestArray );\n+            return Boolean.compare(left.isHighestArray, right.isHighestArray);\n         }\n \n         int index = 0;\n         int compare = 0;\n-        int length = min( left.arrayLength, right.arrayLength );\n+        int length = min(left.arrayLength, right.arrayLength);\n \n-        for ( ; compare == 0 && index < length; index++ )\n+        for (; compare == 0 && index < length; index++)\n         {\n-            compare = arrayElementComparator.compare( left, right, index );\n+            compare = arrayElementComparator.compare(left, right, index);\n         }\n \n-        return compare == 0 ? Integer.compare( left.arrayLength, right.arrayLength ) : compare;\n+        return compare == 0 ? Integer.compare(left.arrayLength, right.arrayLength) : compare;\n     }\n \n     @Override\n-    Value asValue( GenericKey state )\n+    Value asValue(GenericKey state)\n     {\n-        T[] array = arrayCreator.apply( state.arrayLength );\n-        for ( int i = 0; i < state.arrayLength; i++ )\n+        T[] array = arrayCreator.apply(state.arrayLength);\n+        for (int i = 0; i < state.arrayLength; i++)\n         {\n-            array[i] = valueFactory.from( state, i );\n+            array[i] = valueFactory.from(state, i);\n         }\n-        return Values.of( array );\n+        return Values.of(array);\n     }\n \n     @Override\n-    void putValue( PageCursor cursor, GenericKey state )\n+    void putValue(PageCursor cursor, GenericKey state)\n     {\n-        putArray( cursor, state, arrayElementWriter );\n+        putArray(cursor, state, arrayElementWriter);\n     }\n \n     @Override\n-    boolean readValue( PageCursor cursor, int size, GenericKey into )\n+    boolean readValue(PageCursor cursor, int size, GenericKey into)\n     {\n-        return readArray( cursor, arrayType, arrayElementReader, into );\n+        return readArray(cursor, arrayType, arrayElementReader, into);\n     }\n \n     /**\n      * In the array case there's nothing lower than a zero-length array, so simply make sure that the key state is initialized\n      * with state reflecting that. No specific value required.\n+     *\n      * @param state key state to initialize as lowest of this type.\n      */\n     @Override\n-    void initializeAsLowest( GenericKey state )\n+    void initializeAsLowest(GenericKey state)\n     {\n-        state.initializeArrayMeta( 0 );\n-        initializeArray( state, 0, arrayType );\n+        state.initializeArrayMeta(0);\n+        initializeArray(state, 0, arrayType);\n     }\n \n     @Override\n-    void initializeAsHighest( GenericKey state )\n+    void initializeAsHighest(GenericKey state)\n     {\n-        state.initializeArrayMeta( 0 );\n-        initializeArray( state, 0, arrayType );\n+        state.initializeArrayMeta(0);\n+        initializeArray(state, 0, arrayType);\n         state.isHighestArray = true;\n     }\n \n-    int arrayKeySize( GenericKey key, int elementSize )\n+    int arrayKeySize(GenericKey key, int elementSize)\n     {\n         return SIZE_ARRAY_LENGTH + key.arrayLength * elementSize;\n     }\n \n-    static void putArrayHeader( PageCursor cursor, short arrayLength )\n+    static void putArrayHeader(PageCursor cursor, short arrayLength)\n     {\n-        cursor.putShort( arrayLength );\n+        cursor.putShort(arrayLength);\n     }\n \n-    static void putArrayItems( PageCursor cursor, GenericKey key, ArrayElementWriter itemWriter )\n+    static void putArrayItems(PageCursor cursor, GenericKey key, ArrayElementWriter itemWriter)\n     {\n-        for ( int i = 0; i < key.arrayLength; i++ )\n+        for (int i = 0; i < key.arrayLength; i++)\n         {\n-            itemWriter.write( cursor, key, i );\n+            itemWriter.write(cursor, key, i);\n         }\n     }\n \n-    static void putArray( PageCursor cursor, GenericKey key, ArrayElementWriter writer )\n+    static void putArray(PageCursor cursor, GenericKey key, ArrayElementWriter writer)\n     {\n-        putArrayHeader( cursor, toNonNegativeShortExact( key.arrayLength ) );\n-        putArrayItems( cursor, key, writer );\n+        putArrayHeader(cursor, toNonNegativeShortExact(key.arrayLength));\n+        putArrayItems(cursor, key, writer);\n     }\n \n-    static boolean readArray( PageCursor cursor, ValueWriter.ArrayType type, ArrayElementReader reader, GenericKey into )\n+    static boolean readArray(PageCursor cursor, ValueWriter.ArrayType type, ArrayElementReader reader, GenericKey into)\n     {\n-        if ( !setArrayLengthWhenReading( into, cursor, cursor.getShort() ) )\n+        if (!setArrayLengthWhenReading(into, cursor, cursor.getShort()))\n         {\n             return false;\n         }\n-        into.beginArray( into.arrayLength, type );\n-        for ( int i = 0; i < into.arrayLength; i++ )\n+        into.beginArray(into.arrayLength, type);\n+        for (int i = 0; i < into.arrayLength; i++)\n         {\n-            if ( !reader.readFrom( cursor, into ) )\n+            if (!reader.readFrom(cursor, into))\n             {\n                 return false;\n             }\n@@ -207,12 +210,12 @@ abstract class AbstractArrayType<T> extends Type\n         return true;\n     }\n \n-    static boolean setArrayLengthWhenReading( GenericKey state, PageCursor cursor, short arrayLength )\n+    static boolean setArrayLengthWhenReading(GenericKey state, PageCursor cursor, short arrayLength)\n     {\n         state.arrayLength = arrayLength;\n-        if ( state.arrayLength < 0 || state.arrayLength > BIGGEST_REASONABLE_ARRAY_LENGTH )\n+        if (state.arrayLength < 0 || state.arrayLength > BIGGEST_REASONABLE_ARRAY_LENGTH)\n         {\n-            setCursorException( cursor, \"non-valid array length, \" + state.arrayLength );\n+            setCursorException(cursor, \"non-valid array length, \" + state.arrayLength);\n             state.arrayLength = 0;\n             return false;\n         }\n@@ -220,34 +223,34 @@ abstract class AbstractArrayType<T> extends Type\n     }\n \n     @Override\n-    protected void addTypeSpecificDetails( StringJoiner joiner, GenericKey state )\n+    protected void addTypeSpecificDetails(StringJoiner joiner, GenericKey state)\n     {\n-        joiner.add( \"isHighestArray=\" + state.isHighestArray );\n-        joiner.add( \"arrayLength=\" + state.arrayLength );\n-        joiner.add( \"currentArrayOffset=\" + state.currentArrayOffset );\n+        joiner.add(\"isHighestArray=\" + state.isHighestArray);\n+        joiner.add(\"arrayLength=\" + state.arrayLength);\n+        joiner.add(\"currentArrayOffset=\" + state.currentArrayOffset);\n     }\n \n     @FunctionalInterface\n     interface ArrayElementComparator\n     {\n-        int compare( GenericKey o1, GenericKey o2, int i );\n+        int compare(GenericKey o1, GenericKey o2, int i);\n     }\n \n     @FunctionalInterface\n     interface ArrayElementReader\n     {\n-        boolean readFrom( PageCursor cursor, GenericKey into );\n+        boolean readFrom(PageCursor cursor, GenericKey into);\n     }\n \n     @FunctionalInterface\n     interface ArrayElementWriter\n     {\n-        void write( PageCursor cursor, GenericKey key, int i );\n+        void write(PageCursor cursor, GenericKey key, int i);\n     }\n \n     @FunctionalInterface\n     interface ArrayElementValueFactory<T>\n     {\n-        T from( GenericKey key, int i );\n+        T from(GenericKey key, int i);\n     }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
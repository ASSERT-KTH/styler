{
    "project_name": "bakdata-conquery",
    "error_id": "756",
    "information": {
        "errors": [
            {
                "line": "54",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\t\n\t\tif(cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {\n\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\t\t\t\n\t\t}\n\t\t\n\t\t// Get the token from the cookie and put it into the header",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/756/AuthCookieFilter.java\nindex a2751cea23a..e5b384589ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/756/AuthCookieFilter.java\n@@ -51,9 +51,10 @@ public class AuthCookieFilter implements ContainerRequestFilter, ContainerRespon\n \t\t}\n \t\t\n \t\tif(cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {\n-\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\t\t\t\n+\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\n+\n \t\t}\n-\t\t\n+\n \t\t// Get the token from the cookie and put it into the header\n \t\trequestContext.getHeaders().add(HttpHeaders.AUTHORIZATION, String.join(\" \", PREFIX, cookie.getValue()));\n \t\t// Remove the cookie for the rest of this processing\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/756/AuthCookieFilter.java\nindex a2751cea23a..f98c8b10fca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/756/AuthCookieFilter.java\n@@ -24,63 +24,62 @@ import org.eclipse.jetty.http.HttpHeader;\n  * authorization header from static sites and adding the token to all links and\n  * fetches on these sites, we use a cookie that is automatically send from the\n  * browser with every request.\n- *\n  */\n @Slf4j\n @PreMatching\n // Chain this filter before the Authentication filter\n-@Priority(Priorities.AUTHENTICATION-100)\n+@Priority(Priorities.AUTHENTICATION - 100)\n public class AuthCookieFilter implements ContainerRequestFilter, ContainerResponseFilter {\n \n-\tprivate static final String ACCESS_TOKEN = \"access_token\";\n-\tprivate static final String PREFIX = \"bearer\";\n-\t// Define a maximum age since most browsers use session restoring making session cookies virtual permanent (see https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\n-\tprivate static final int COOKIE_MAX_AGE_HOURS = (int) TimeUnit.HOURS.toSeconds(12);\n+    private static final String ACCESS_TOKEN = \"access_token\";\n+    private static final String PREFIX = \"bearer\";\n+    // Define a maximum age since most browsers use session restoring making session cookies virtual permanent (see https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\n+    private static final int COOKIE_MAX_AGE_HOURS = (int) TimeUnit.HOURS.toSeconds(12);\n \n-\t/**\n-\t * The filter tries to extract a token from a cookie and puts it into the\n-\t * authorization header of the request. This simplifies the token retrival\n-\t * process for the realms.\n-\t */\n-\t@Override\n-\tpublic void filter(ContainerRequestContext requestContext) throws IOException {\n-\t\tCookie cookie = requestContext.getCookies().get(ACCESS_TOKEN);\n-\t\tString queryToken = requestContext.getUriInfo().getQueryParameters().getFirst(ACCESS_TOKEN);\n-\t\tif (cookie == null) {\n-\t\t\treturn;\n-\t\t}\n-\t\t\n-\t\tif(cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {\n-\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\t\t\t\n-\t\t}\n-\t\t\n-\t\t// Get the token from the cookie and put it into the header\n-\t\trequestContext.getHeaders().add(HttpHeaders.AUTHORIZATION, String.join(\" \", PREFIX, cookie.getValue()));\n-\t\t// Remove the cookie for the rest of this processing\n-\t\trequestContext.getCookies().remove(ACCESS_TOKEN);\n-\t\t// Remove the query parameter\n-\t\tUriBuilder uriBuilder = requestContext.getUriInfo().getRequestUriBuilder().replaceQueryParam(ACCESS_TOKEN, new Object[] {});\n-\t\trequestContext.setRequestUri(uriBuilder.build());\n+    /**\n+     * The filter tries to extract a token from a cookie and puts it into the\n+     * authorization header of the request. This simplifies the token retrival\n+     * process for the realms.\n+     */\n+    @Override\n+    public void filter(ContainerRequestContext requestContext) throws IOException {\n+        Cookie cookie = requestContext.getCookies().get(ACCESS_TOKEN);\n+        String queryToken = requestContext.getUriInfo().getQueryParameters().getFirst(ACCESS_TOKEN);\n+        if (cookie == null) {\n+            return;\n+        }\n \n-\t}\n+        if (cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {\n+            throw new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\n+        }\n \n-\t/**\n-\t * Sets a cookie with the access_token from the requests query string.\n-\t */\n-\t@Override\n-\tpublic void filter(ContainerRequestContext request, ContainerResponseContext response) throws IOException {\n-\t\tCookie cookie = request.getCookies().get(ACCESS_TOKEN);\n-\t\tString token = request.getUriInfo().getQueryParameters().getFirst(ACCESS_TOKEN);\n+        // Get the token from the cookie and put it into the header\n+        requestContext.getHeaders().add(HttpHeaders.AUTHORIZATION, String.join(\" \", PREFIX, cookie.getValue()));\n+        // Remove the cookie for the rest of this processing\n+        requestContext.getCookies().remove(ACCESS_TOKEN);\n+        // Remove the query parameter\n+        UriBuilder uriBuilder = requestContext.getUriInfo().getRequestUriBuilder().replaceQueryParam(ACCESS_TOKEN, new Object[] {});\n+        requestContext.setRequestUri(uriBuilder.build());\n \n-\t\t// Set cookie only if a token is present\n-\t\tif (token != null && !token.isEmpty()) {\n-\t\t\tif (cookie != null) {\n-\t\t\t\tlog.debug(\"Overwriting {} cookie\", ACCESS_TOKEN);\n-\t\t\t}\n-\t\t\tresponse.getHeaders().add(\n-\t\t\t\tHttpHeader.SET_COOKIE.toString(),\n-\t\t\t\tnew NewCookie(ACCESS_TOKEN, token, null, null, 0, null, COOKIE_MAX_AGE_HOURS, null, false, false));\n-\t\t}\n-\t}\n+    }\n+\n+    /**\n+     * Sets a cookie with the access_token from the requests query string.\n+     */\n+    @Override\n+    public void filter(ContainerRequestContext request, ContainerResponseContext response) throws IOException {\n+        Cookie cookie = request.getCookies().get(ACCESS_TOKEN);\n+        String token = request.getUriInfo().getQueryParameters().getFirst(ACCESS_TOKEN);\n+\n+        // Set cookie only if a token is present\n+        if (token != null && !token.isEmpty()) {\n+            if (cookie != null) {\n+                log.debug(\"Overwriting {} cookie\", ACCESS_TOKEN);\n+            }\n+            response.getHeaders().add(\n+                HttpHeader.SET_COOKIE.toString(),\n+                new NewCookie(ACCESS_TOKEN, token, null, null, 0, null, COOKIE_MAX_AGE_HOURS, null, false, false));\n+        }\n+    }\n \n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "55",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/756/AuthCookieFilter.java\nindex a2751cea23a..6bdc9dd14ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/756/AuthCookieFilter.java\n@@ -35,7 +35,7 @@ public class AuthCookieFilter implements ContainerRequestFilter, ContainerRespon\n \tprivate static final String ACCESS_TOKEN = \"access_token\";\n \tprivate static final String PREFIX = \"bearer\";\n \t// Define a maximum age since most browsers use session restoring making session cookies virtual permanent (see https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\n-\tprivate static final int COOKIE_MAX_AGE_HOURS = (int) TimeUnit.HOURS.toSeconds(12);\n+\tprivate static final int COOKIE_MAX_AGE_HOURS = (int)TimeUnit.HOURS.toSeconds(12);\n \n \t/**\n \t * The filter tries to extract a token from a cookie and puts it into the\n@@ -51,9 +51,9 @@ public class AuthCookieFilter implements ContainerRequestFilter, ContainerRespon\n \t\t}\n \t\t\n \t\tif(cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {\n-\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\t\t\t\n-\t\t}\n-\t\t\n+\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\n+\t}\n+\n \t\t// Get the token from the cookie and put it into the header\n \t\trequestContext.getHeaders().add(HttpHeaders.AUTHORIZATION, String.join(\" \", PREFIX, cookie.getValue()));\n \t\t// Remove the cookie for the rest of this processing\n@@ -83,4 +83,4 @@ public class AuthCookieFilter implements ContainerRequestFilter, ContainerRespon\n \t\t}\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/756/AuthCookieFilter.java\nindex a2751cea23a..60e143d6586 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/756/AuthCookieFilter.java\n@@ -2,7 +2,6 @@ package com.bakdata.conquery.models.auth.web;\n \n import java.io.IOException;\n import java.util.concurrent.TimeUnit;\n-\n import javax.annotation.Priority;\n import javax.ws.rs.Priorities;\n import javax.ws.rs.container.ContainerRequestContext;\n@@ -14,7 +13,6 @@ import javax.ws.rs.core.Cookie;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.NewCookie;\n import javax.ws.rs.core.UriBuilder;\n-\n import lombok.extern.slf4j.Slf4j;\n import org.eclipse.jetty.http.HttpHeader;\n \n@@ -26,61 +24,57 @@ import org.eclipse.jetty.http.HttpHeader;\n  * browser with every request.\n  *\n  */\n-@Slf4j\n-@PreMatching\n-// Chain this filter before the Authentication filter\n-@Priority(Priorities.AUTHENTICATION-100)\n+\n+@Slf4j @PreMatching\n+// Chain this filter before the Authentication filter @Priority(Priorities.AUTHENTICATION -100)\n public class AuthCookieFilter implements ContainerRequestFilter, ContainerResponseFilter {\n \n-\tprivate static final String ACCESS_TOKEN = \"access_token\";\n-\tprivate static final String PREFIX = \"bearer\";\n-\t// Define a maximum age since most browsers use session restoring making session cookies virtual permanent (see https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\n-\tprivate static final int COOKIE_MAX_AGE_HOURS = (int) TimeUnit.HOURS.toSeconds(12);\n+ private static final String ACCESS_TOKEN = \"access_token\";\n+ private static final String PREFIX = \"bearer\";\n+ // Define a maximum age since most browsers use session restoring making session cookies virtual permanent (see https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\n+ private static final int COOKIE_MAX_AGE_HOURS = (int)TimeUnit.HOURS.toSeconds(12);\n \n-\t/**\n-\t * The filter tries to extract a token from a cookie and puts it into the\n-\t * authorization header of the request. This simplifies the token retrival\n-\t * process for the realms.\n-\t */\n-\t@Override\n-\tpublic void filter(ContainerRequestContext requestContext) throws IOException {\n-\t\tCookie cookie = requestContext.getCookies().get(ACCESS_TOKEN);\n-\t\tString queryToken = requestContext.getUriInfo().getQueryParameters().getFirst(ACCESS_TOKEN);\n-\t\tif (cookie == null) {\n-\t\t\treturn;\n-\t\t}\n-\t\t\n-\t\tif(cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {\n-\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\t\t\t\n-\t\t}\n-\t\t\n-\t\t// Get the token from the cookie and put it into the header\n-\t\trequestContext.getHeaders().add(HttpHeaders.AUTHORIZATION, String.join(\" \", PREFIX, cookie.getValue()));\n-\t\t// Remove the cookie for the rest of this processing\n-\t\trequestContext.getCookies().remove(ACCESS_TOKEN);\n-\t\t// Remove the query parameter\n-\t\tUriBuilder uriBuilder = requestContext.getUriInfo().getRequestUriBuilder().replaceQueryParam(ACCESS_TOKEN, new Object[] {});\n-\t\trequestContext.setRequestUri(uriBuilder.build());\n+ /**\n+  * The filter tries to extract a token from a cookie and puts it into the\n+  * authorization header of the request. This simplifies the token retrival\n+  * process for the realms.\n+  */\n \n-\t}\n+ @Override\n+ public void filter(ContainerRequestContext requestContext) throws IOException {\n+  Cookie cookie = requestContext.getCookies().get(ACCESS_TOKEN);\n+  String queryToken = requestContext.getUriInfo().getQueryParameters().getFirst(ACCESS_TOKEN);\n+  if (cookie == null) {\n+   return;\n+  }\n+  if (cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {\n+   throw new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\n+  }\n+  \n+  // Get the token from the cookie and put it into the header\n+  requestContext.getHeaders().add(HttpHeaders.AUTHORIZATION, String.join(\" \", PREFIX, cookie.getValue()));\n+  // Remove the cookie for the rest of this processing\n+  requestContext.getCookies().remove(ACCESS_TOKEN);\n+  // Remove the query parameter\n+  UriBuilder uriBuilder = requestContext.getUriInfo().getRequestUriBuilder().replaceQueryParam(ACCESS_TOKEN, new Object[]{});\n+  requestContext.setRequestUri(uriBuilder.build());\n+ }\n \n-\t/**\n-\t * Sets a cookie with the access_token from the requests query string.\n-\t */\n-\t@Override\n-\tpublic void filter(ContainerRequestContext request, ContainerResponseContext response) throws IOException {\n-\t\tCookie cookie = request.getCookies().get(ACCESS_TOKEN);\n-\t\tString token = request.getUriInfo().getQueryParameters().getFirst(ACCESS_TOKEN);\n+ /**\n+  * Sets a cookie with the access_token from the requests query string.\n+  */\n \n-\t\t// Set cookie only if a token is present\n-\t\tif (token != null && !token.isEmpty()) {\n-\t\t\tif (cookie != null) {\n-\t\t\t\tlog.debug(\"Overwriting {} cookie\", ACCESS_TOKEN);\n-\t\t\t}\n-\t\t\tresponse.getHeaders().add(\n-\t\t\t\tHttpHeader.SET_COOKIE.toString(),\n-\t\t\t\tnew NewCookie(ACCESS_TOKEN, token, null, null, 0, null, COOKIE_MAX_AGE_HOURS, null, false, false));\n-\t\t}\n-\t}\n+ @Override\n+ public void filter(ContainerRequestContext request, ContainerResponseContext response) throws IOException {\n+  Cookie cookie = request.getCookies().get(ACCESS_TOKEN);\n+  String token = request.getUriInfo().getQueryParameters().getFirst(ACCESS_TOKEN);\n \n-}\n+  // Set cookie only if a token is present\n+  if (token != null && !token.isEmpty()) {\n+   if (cookie != null) {\n+    log.debug(\"Overwriting {} cookie\", ACCESS_TOKEN);\n+   }\n+   response.getHeaders().add(HttpHeader.SET_COOKIE.toString(), new NewCookie(ACCESS_TOKEN, token, null, null, 0, null, COOKIE_MAX_AGE_HOURS, null, false, false));\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 79
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/756/AuthCookieFilter.java\nindex a2751cea23a..e5b384589ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/756/AuthCookieFilter.java\n@@ -51,9 +51,10 @@ public class AuthCookieFilter implements ContainerRequestFilter, ContainerRespon\n \t\t}\n \t\t\n \t\tif(cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {\n-\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\t\t\t\n+\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\n+\n \t\t}\n-\t\t\n+\n \t\t// Get the token from the cookie and put it into the header\n \t\trequestContext.getHeaders().add(HttpHeaders.AUTHORIZATION, String.join(\" \", PREFIX, cookie.getValue()));\n \t\t// Remove the cookie for the rest of this processing\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "54",
                    "column": "5",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 1, expected is 2, indentation should be the same level as line 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/756/AuthCookieFilter.java\nindex a2751cea23a..2fbfd5741ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/756/AuthCookieFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/756/AuthCookieFilter.java\n@@ -50,10 +50,8 @@ public class AuthCookieFilter implements ContainerRequestFilter, ContainerRespon\n \t\t\treturn;\n \t\t}\n \t\t\n-\t\tif(cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {\n-\t\t\tthrow new IllegalStateException(\"Different tokens have been provided in cookie and query string\");\t\t\t\n-\t\t}\n-\t\t\n+\t\tif(cookie != null && !cookie.getValue().isEmpty() && queryToken != null && !cookie.getValue().equals(queryToken)) {throw newIllegalStateException (\"Different tokens have been provided in cookie and query string\");}\n+\t// Get the token from the cookie and put it into the header\n \t\t// Get the token from the cookie and put it into the header\n \t\trequestContext.getHeaders().add(HttpHeaders.AUTHORIZATION, String.join(\" \", PREFIX, cookie.getValue()));\n \t\t// Remove the cookie for the rest of this processing\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
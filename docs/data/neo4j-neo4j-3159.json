{
    "project_name": "neo4j-neo4j",
    "error_id": "3159",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "54",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "88",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "243",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "260",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "294",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3159/OffHeapByteArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3159/OffHeapByteArray.java\nindex 4a06075c498..23f78dcac12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3159/OffHeapByteArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3159/OffHeapByteArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.cache;\n \n import org.neo4j.internal.unsafe.UnsafeUtil;\n@@ -26,51 +27,48 @@ public class OffHeapByteArray extends OffHeapNumberArray<ByteArray> implements B\n {\n     private final byte[] defaultValue;\n \n-    protected OffHeapByteArray( long length, byte[] defaultValue, long base, MemoryTracker memoryTracker )\n+    protected OffHeapByteArray(long length, byte[] defaultValue, long base, MemoryTracker memoryTracker)\n     {\n-        super( length, defaultValue.length, base, memoryTracker );\n+        super(length, defaultValue.length, base, memoryTracker);\n         this.defaultValue = defaultValue;\n         clear();\n     }\n \n     @Override\n-    public void swap( long fromIndex, long toIndex )\n+    public void swap(long fromIndex, long toIndex)\n     {\n         int bytesLeft = itemSize;\n-        long fromAddress = address( fromIndex, 0 );\n-        long toAddress = address( toIndex, 0 );\n+        long fromAddress = address(fromIndex, 0);\n+        long toAddress = address(toIndex, 0);\n \n         // piece-wise swap, as large chunks as possible: long, int, short and finally byte-wise swap\n-        while ( bytesLeft > 0 )\n+        while (bytesLeft > 0)\n         {\n             int chunkSize;\n-            if ( bytesLeft >= Long.BYTES )\n+            if (bytesLeft >= Long.BYTES)\n             {\n                 chunkSize = Long.BYTES;\n-                long intermediary = getLong( fromAddress );\n-                UnsafeUtil.copyMemory( toAddress, fromAddress, chunkSize );\n-                putLong( toAddress, intermediary );\n-            }\n-            else if ( bytesLeft >= Integer.BYTES )\n+                long intermediary = getLong(fromAddress);\n+                UnsafeUtil.copyMemory(toAddress, fromAddress, chunkSize);\n+                putLong(toAddress, intermediary);\n+            } else if (bytesLeft >= Integer.BYTES)\n             {\n                 chunkSize = Integer.BYTES;\n-                int intermediary = getInt( fromAddress );\n-                UnsafeUtil.copyMemory( toAddress, fromAddress, chunkSize );\n-                putInt( toAddress, intermediary );\n-            }\n-            else if ( bytesLeft >= Short.BYTES )\n+                int intermediary = getInt(fromAddress);\n+                UnsafeUtil.copyMemory(toAddress, fromAddress, chunkSize);\n+                putInt(toAddress, intermediary);\n+            } else if (bytesLeft >= Short.BYTES)\n             {\n                 chunkSize = Short.BYTES;\n-                short intermediary = getShort( fromAddress );\n-                UnsafeUtil.copyMemory( toAddress, fromAddress, chunkSize );\n-                putShort( toAddress, intermediary );\n-            }\n-            else\n+                short intermediary = getShort(fromAddress);\n+                UnsafeUtil.copyMemory(toAddress, fromAddress, chunkSize);\n+                putShort(toAddress, intermediary);\n+            } else\n             {\n                 chunkSize = Byte.BYTES;\n-                byte intermediary = getByte( fromAddress );\n-                UnsafeUtil.copyMemory( toAddress, fromAddress, chunkSize );\n-                putByte( toAddress, intermediary );\n+                byte intermediary = getByte(fromAddress);\n+                UnsafeUtil.copyMemory(toAddress, fromAddress, chunkSize);\n+                putByte(toAddress, intermediary);\n             }\n             fromAddress += chunkSize;\n             toAddress += chunkSize;\n@@ -81,32 +79,31 @@ public class OffHeapByteArray extends OffHeapNumberArray<ByteArray> implements B\n     @Override\n     public void clear()\n     {\n-        if ( isByteUniform( defaultValue ) )\n+        if (isByteUniform(defaultValue))\n         {\n-            UnsafeUtil.setMemory( address, length * itemSize, defaultValue[0] );\n-        }\n-        else\n+            UnsafeUtil.setMemory(address, length * itemSize, defaultValue[0]);\n+        } else\n         {\n-            long intermediary = UnsafeUtil.allocateMemory( itemSize, memoryTracker );\n-            for ( int i = 0; i < defaultValue.length; i++ )\n+            long intermediary = UnsafeUtil.allocateMemory(itemSize, memoryTracker);\n+            for (int i = 0; i < defaultValue.length; i++)\n             {\n-                UnsafeUtil.putByte( intermediary + i, defaultValue[i] );\n+                UnsafeUtil.putByte(intermediary + i, defaultValue[i]);\n             }\n \n-            for ( long i = 0, adr = address; i < length; i++, adr += itemSize )\n+            for (long i = 0, adr = address; i < length; i++, adr += itemSize)\n             {\n-                UnsafeUtil.copyMemory( intermediary, adr, itemSize );\n+                UnsafeUtil.copyMemory(intermediary, adr, itemSize);\n             }\n-            UnsafeUtil.free( intermediary, itemSize, memoryTracker );\n+            UnsafeUtil.free(intermediary, itemSize, memoryTracker);\n         }\n     }\n \n-    private boolean isByteUniform( byte[] bytes )\n+    private boolean isByteUniform(byte[] bytes)\n     {\n         byte reference = bytes[0];\n-        for ( int i = 1; i < bytes.length; i++ )\n+        for (int i = 1; i < bytes.length; i++)\n         {\n-            if ( reference != bytes[i] )\n+            if (reference != bytes[i])\n             {\n                 return false;\n             }\n@@ -115,217 +112,214 @@ public class OffHeapByteArray extends OffHeapNumberArray<ByteArray> implements B\n     }\n \n     @Override\n-    public void get( long index, byte[] into )\n+    public void get(long index, byte[] into)\n     {\n-        long address = address( index, 0 );\n-        for ( int i = 0; i < itemSize; i++, address++ )\n+        long address = address(index, 0);\n+        for (int i = 0; i < itemSize; i++, address++)\n         {\n-            into[i] = UnsafeUtil.getByte( address );\n+            into[i] = UnsafeUtil.getByte(address);\n         }\n     }\n \n     @Override\n-    public byte getByte( long index, int offset )\n+    public byte getByte(long index, int offset)\n     {\n-        return UnsafeUtil.getByte( address( index, offset ) );\n+        return UnsafeUtil.getByte(address(index, offset));\n     }\n \n-    private byte getByte( long p )\n+    private byte getByte(long p)\n     {\n-        return UnsafeUtil.getByte( p );\n+        return UnsafeUtil.getByte(p);\n     }\n \n     @Override\n-    public short getShort( long index, int offset )\n+    public short getShort(long index, int offset)\n     {\n-        return getShort( address( index, offset ) );\n+        return getShort(address(index, offset));\n     }\n \n-    private short getShort( long p )\n+    private short getShort(long p)\n     {\n-        if ( UnsafeUtil.allowUnalignedMemoryAccess )\n+        if (UnsafeUtil.allowUnalignedMemoryAccess)\n         {\n-            return UnsafeUtil.getShort( p );\n+            return UnsafeUtil.getShort(p);\n         }\n \n-        return UnsafeUtil.getShortByteWiseLittleEndian( p );\n+        return UnsafeUtil.getShortByteWiseLittleEndian(p);\n     }\n \n     @Override\n-    public int getInt( long index, int offset )\n+    public int getInt(long index, int offset)\n     {\n-        return getInt( address( index, offset ) );\n+        return getInt(address(index, offset));\n     }\n \n-    private int getInt( long p )\n+    private int getInt(long p)\n     {\n-        if ( UnsafeUtil.allowUnalignedMemoryAccess )\n+        if (UnsafeUtil.allowUnalignedMemoryAccess)\n         {\n-            return UnsafeUtil.getInt( p );\n+            return UnsafeUtil.getInt(p);\n         }\n \n-        return UnsafeUtil.getIntByteWiseLittleEndian( p );\n+        return UnsafeUtil.getIntByteWiseLittleEndian(p);\n     }\n \n     @Override\n-    public long get5ByteLong( long index, int offset )\n+    public long get5ByteLong(long index, int offset)\n     {\n-        long address = address( index, offset );\n-        long low4b = getInt( address ) & 0xFFFFFFFFL;\n-        long high1b = UnsafeUtil.getByte( address + Integer.BYTES ) & 0xFF;\n+        long address = address(index, offset);\n+        long low4b = getInt(address) & 0xFFFFFFFFL;\n+        long high1b = UnsafeUtil.getByte(address + Integer.BYTES) & 0xFF;\n         long result = low4b | (high1b << 32);\n         return result == 0xFFFFFFFFFFL ? -1 : result;\n     }\n \n     @Override\n-    public long get6ByteLong( long index, int offset )\n+    public long get6ByteLong(long index, int offset)\n     {\n-        long address = address( index, offset );\n-        long low4b = getInt( address ) & 0xFFFFFFFFL;\n-        long high2b = getShort( address + Integer.BYTES ) & 0xFFFF;\n+        long address = address(index, offset);\n+        long low4b = getInt(address) & 0xFFFFFFFFL;\n+        long high2b = getShort(address + Integer.BYTES) & 0xFFFF;\n         long result = low4b | (high2b << 32);\n         return result == 0xFFFFFFFFFFFFL ? -1 : result;\n     }\n \n     @Override\n-    public long getLong( long index, int offset )\n+    public long getLong(long index, int offset)\n     {\n-        long p = address( index, offset );\n-        return getLong( p );\n+        long p = address(index, offset);\n+        return getLong(p);\n     }\n \n-    private long getLong( long p )\n+    private long getLong(long p)\n     {\n-        if ( UnsafeUtil.allowUnalignedMemoryAccess )\n+        if (UnsafeUtil.allowUnalignedMemoryAccess)\n         {\n-            return UnsafeUtil.getLong( p );\n+            return UnsafeUtil.getLong(p);\n         }\n \n-        return UnsafeUtil.getLongByteWiseLittleEndian( p );\n+        return UnsafeUtil.getLongByteWiseLittleEndian(p);\n     }\n \n     @Override\n-    public void set( long index, byte[] value )\n+    public void set(long index, byte[] value)\n     {\n-        long address = address( index, 0 );\n-        for ( int i = 0; i < itemSize; i++, address++ )\n+        long address = address(index, 0);\n+        for (int i = 0; i < itemSize; i++, address++)\n         {\n-            UnsafeUtil.putByte( address, value[i] );\n+            UnsafeUtil.putByte(address, value[i]);\n         }\n     }\n \n     @Override\n-    public void setByte( long index, int offset, byte value )\n+    public void setByte(long index, int offset, byte value)\n     {\n-        UnsafeUtil.putByte( address( index, offset ), value );\n+        UnsafeUtil.putByte(address(index, offset), value);\n     }\n \n-    private void putByte( long p, byte value )\n+    private void putByte(long p, byte value)\n     {\n-        UnsafeUtil.putByte( p, value );\n+        UnsafeUtil.putByte(p, value);\n     }\n \n     @Override\n-    public void setShort( long index, int offset, short value )\n+    public void setShort(long index, int offset, short value)\n     {\n-        putShort( address( index, offset ), value );\n+        putShort(address(index, offset), value);\n     }\n \n-    private void putShort( long p, short value )\n+    private void putShort(long p, short value)\n     {\n-        if ( UnsafeUtil.allowUnalignedMemoryAccess )\n+        if (UnsafeUtil.allowUnalignedMemoryAccess)\n         {\n-            UnsafeUtil.putShort( p, value );\n-        }\n-        else\n+            UnsafeUtil.putShort(p, value);\n+        } else\n         {\n-            UnsafeUtil.putShortByteWiseLittleEndian( p, value );\n+            UnsafeUtil.putShortByteWiseLittleEndian(p, value);\n         }\n     }\n \n     @Override\n-    public void setInt( long index, int offset, int value )\n+    public void setInt(long index, int offset, int value)\n     {\n-        putInt( address( index, offset ), value );\n+        putInt(address(index, offset), value);\n     }\n \n-    private void putInt( long p, int value )\n+    private void putInt(long p, int value)\n     {\n-        if ( UnsafeUtil.allowUnalignedMemoryAccess )\n+        if (UnsafeUtil.allowUnalignedMemoryAccess)\n         {\n-            UnsafeUtil.putInt( p, value );\n-        }\n-        else\n+            UnsafeUtil.putInt(p, value);\n+        } else\n         {\n-            UnsafeUtil.putIntByteWiseLittleEndian( p, value );\n+            UnsafeUtil.putIntByteWiseLittleEndian(p, value);\n         }\n     }\n \n     @Override\n-    public void set5ByteLong( long index, int offset, long value )\n+    public void set5ByteLong(long index, int offset, long value)\n     {\n-        long address = address( index, offset );\n-        putInt( address, (int) value );\n-        UnsafeUtil.putByte( address + Integer.BYTES, (byte) (value >>> 32) );\n+        long address = address(index, offset);\n+        putInt(address, (int) value);\n+        UnsafeUtil.putByte(address + Integer.BYTES, (byte) (value >>> 32));\n     }\n \n     @Override\n-    public void set6ByteLong( long index, int offset, long value )\n+    public void set6ByteLong(long index, int offset, long value)\n     {\n-        long address = address( index, offset );\n-        putInt( address, (int) value );\n-        putShort( address + Integer.BYTES, (short) (value >>> 32) );\n+        long address = address(index, offset);\n+        putInt(address, (int) value);\n+        putShort(address + Integer.BYTES, (short) (value >>> 32));\n     }\n \n     @Override\n-    public void setLong( long index, int offset, long value )\n+    public void setLong(long index, int offset, long value)\n     {\n-        long p = address( index, offset );\n-        putLong( p, value );\n+        long p = address(index, offset);\n+        putLong(p, value);\n     }\n \n-    private void putLong( long p, long value )\n+    private void putLong(long p, long value)\n     {\n-        if ( UnsafeUtil.allowUnalignedMemoryAccess )\n+        if (UnsafeUtil.allowUnalignedMemoryAccess)\n         {\n-            UnsafeUtil.putLong( p, value );\n-        }\n-        else\n+            UnsafeUtil.putLong(p, value);\n+        } else\n         {\n-            UnsafeUtil.putLongByteWiseLittleEndian( p, value );\n+            UnsafeUtil.putLongByteWiseLittleEndian(p, value);\n         }\n     }\n \n     @Override\n-    public int get3ByteInt( long index, int offset )\n+    public int get3ByteInt(long index, int offset)\n     {\n-        long address = address( index, offset );\n-        int lowWord = UnsafeUtil.getShort( address ) & 0xFFFF;\n-        int highByte = UnsafeUtil.getByte( address + Short.BYTES ) & 0xFF;\n+        long address = address(index, offset);\n+        int lowWord = UnsafeUtil.getShort(address) & 0xFFFF;\n+        int highByte = UnsafeUtil.getByte(address + Short.BYTES) & 0xFF;\n         int result = lowWord | (highByte << Short.SIZE);\n         return result == 0xFFFFFF ? -1 : result;\n     }\n \n     @Override\n-    public void set3ByteInt( long index, int offset, int value )\n+    public void set3ByteInt(long index, int offset, int value)\n     {\n-        long address = address( index, offset );\n-        UnsafeUtil.putShort( address, (short) value );\n-        UnsafeUtil.putByte( address + Short.BYTES, (byte) (value >>> Short.SIZE) );\n+        long address = address(index, offset);\n+        UnsafeUtil.putShort(address, (short) value);\n+        UnsafeUtil.putByte(address + Short.BYTES, (byte) (value >>> Short.SIZE));\n     }\n \n-    private long address( long index, int offset )\n+    private long address(long index, int offset)\n     {\n-        checkBounds( index );\n-        return address + (rebase( index ) * itemSize) + offset;\n+        checkBounds(index);\n+        return address + (rebase(index) * itemSize) + offset;\n     }\n \n-    private void checkBounds( long index )\n+    private void checkBounds(long index)\n     {\n-        long rebased = rebase( index );\n-        if ( rebased < 0 || rebased >= length )\n+        long rebased = rebase(index);\n+        if (rebased < 0 || rebased >= length)\n         {\n-            throw new IndexOutOfBoundsException( \"Wanted to access \" + rebased + \" but range is \" + base + \"-\" + length );\n+            throw new IndexOutOfBoundsException(\"Wanted to access \" + rebased + \" but range is \" + base + \"-\" + length);\n         }\n     }\n }\n",
            "diff_size": 130
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
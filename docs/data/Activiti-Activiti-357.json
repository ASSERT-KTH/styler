{
    "project_name": "Activiti-Activiti",
    "error_id": "357",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.impl;\n\nimport static org.activiti.engine.impl.bpmn.behavior.MappingExecutionContext.buildMappingExecutionContext;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/357/MappingAwareCallActivityBehavior.java\nindex c3ae32ca9d7..2804c07299e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/357/MappingAwareCallActivityBehavior.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import static org.activiti.engine.impl.bpmn.behavior.MappingExecutionContext.buildMappingExecutionContext;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/357/MappingAwareCallActivityBehavior.java\nindex c3ae32ca9d7..86b9aeb0169 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/357/MappingAwareCallActivityBehavior.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import static org.activiti.engine.impl.bpmn.behavior.MappingExecutionContext.buildMappingExecutionContext;\n@@ -38,7 +39,7 @@ public class MappingAwareCallActivityBehavior extends CallActivityBehavior {\n                                             VariablesCalculator variablesCalculator,\n                                             ProcessVariablesInitiator processVariablesInitiator) {\n         super(processDefinitionKey,\n-              mapExceptions);\n+                mapExceptions);\n         this.variablesCalculator = variablesCalculator;\n         this.processVariablesInitiator = processVariablesInitiator;\n     }\n@@ -48,7 +49,7 @@ public class MappingAwareCallActivityBehavior extends CallActivityBehavior {\n                                             VariablesCalculator variablesCalculator,\n                                             ProcessVariablesInitiator processVariablesInitiator) {\n         super(processDefinitionExpression,\n-              mapExceptions);\n+                mapExceptions);\n         this.variablesCalculator = variablesCalculator;\n         this.processVariablesInitiator = processVariablesInitiator;\n     }\n@@ -59,13 +60,13 @@ public class MappingAwareCallActivityBehavior extends CallActivityBehavior {\n \n         Map<String, Object> inputVariables = variablesCalculator.calculateInputVariables(execution);\n         return processVariablesInitiator.calculateVariablesFromExtensionFile(processDefinition,\n-                                                                                                  inputVariables);\n+                inputVariables);\n     }\n \n     @Override\n     protected Map<String, Object> calculateOutBoundVariables(DelegateExecution execution,\n                                                              Map<String, Object> availableVariables) {\n         return variablesCalculator.calculateOutPutVariables(buildMappingExecutionContext(execution),\n-                                                        availableVariables);\n+                availableVariables);\n     }\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/357/MappingAwareCallActivityBehavior.java\nindex c3ae32ca9d7..21261e350c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/357/MappingAwareCallActivityBehavior.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import static org.activiti.engine.impl.bpmn.behavior.MappingExecutionContext.buildMappingExecutionContext;\n@@ -56,8 +57,7 @@ public class MappingAwareCallActivityBehavior extends CallActivityBehavior {\n     @Override\n     protected Map<String, Object> calculateInboundVariables(DelegateExecution execution,\n                                                             ProcessDefinition processDefinition) {\n-\n-        Map<String, Object> inputVariables = variablesCalculator.calculateInputVariables(execution);\n+  Map<String, Object> inputVariables = variablesCalculator.calculateInputVariables(execution);\n         return processVariablesInitiator.calculateVariablesFromExtensionFile(processDefinition,\n                                                                                                   inputVariables);\n     }\n@@ -68,4 +68,4 @@ public class MappingAwareCallActivityBehavior extends CallActivityBehavior {\n         return variablesCalculator.calculateOutPutVariables(buildMappingExecutionContext(execution),\n                                                         availableVariables);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/357/MappingAwareCallActivityBehavior.java\nindex c3ae32ca9d7..1a508a63855 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/357/MappingAwareCallActivityBehavior.java\n@@ -16,10 +16,8 @@\n package org.activiti.runtime.api.impl;\n \n import static org.activiti.engine.impl.bpmn.behavior.MappingExecutionContext.buildMappingExecutionContext;\n-\n import java.util.List;\n import java.util.Map;\n-\n import org.activiti.bpmn.model.MapExceptionEntry;\n import org.activiti.engine.delegate.DelegateExecution;\n import org.activiti.engine.delegate.Expression;\n@@ -28,44 +26,38 @@ import org.activiti.engine.impl.bpmn.behavior.VariablesCalculator;\n import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.spring.process.ProcessVariablesInitiator;\n \n-public class MappingAwareCallActivityBehavior extends CallActivityBehavior {\n-\n-    private VariablesCalculator variablesCalculator;\n-    private ProcessVariablesInitiator processVariablesInitiator;\n \n-    public MappingAwareCallActivityBehavior(String processDefinitionKey,\n-                                            List<MapExceptionEntry> mapExceptions,\n-                                            VariablesCalculator variablesCalculator,\n-                                            ProcessVariablesInitiator processVariablesInitiator) {\n-        super(processDefinitionKey,\n-              mapExceptions);\n-        this.variablesCalculator = variablesCalculator;\n-        this.processVariablesInitiator = processVariablesInitiator;\n-    }\n-\n-    public MappingAwareCallActivityBehavior(Expression processDefinitionExpression,\n-                                            List<MapExceptionEntry> mapExceptions,\n-                                            VariablesCalculator variablesCalculator,\n-                                            ProcessVariablesInitiator processVariablesInitiator) {\n-        super(processDefinitionExpression,\n-              mapExceptions);\n-        this.variablesCalculator = variablesCalculator;\n-        this.processVariablesInitiator = processVariablesInitiator;\n-    }\n-\n-    @Override\n-    protected Map<String, Object> calculateInboundVariables(DelegateExecution execution,\n-                                                            ProcessDefinition processDefinition) {\n-\n-        Map<String, Object> inputVariables = variablesCalculator.calculateInputVariables(execution);\n-        return processVariablesInitiator.calculateVariablesFromExtensionFile(processDefinition,\n-                                                                                                  inputVariables);\n-    }\n+public class MappingAwareCallActivityBehavior extends CallActivityBehavior {\n \n-    @Override\n-    protected Map<String, Object> calculateOutBoundVariables(DelegateExecution execution,\n-                                                             Map<String, Object> availableVariables) {\n-        return variablesCalculator.calculateOutPutVariables(buildMappingExecutionContext(execution),\n+  private VariablesCalculator variablesCalculator;\n+\n+  private ProcessVariablesInitiator processVariablesInitiator;\n+\n+  public MappingAwareCallActivityBehavior(String processDefinitionKey,\n+                                          List<MapExceptionEntry> mapExceptions,\n+                                          VariablesCalculator variablesCalculator, ProcessVariablesInitiator processVariablesInitiator) {\n+    super(processDefinitionKey, mapExceptions);\n+    this.variablesCalculator = variablesCalculator;\n+    this.processVariablesInitiator = processVariablesInitiator;\n+  }\n+\n+  public MappingAwareCallActivityBehavior(Expression processDefinitionExpression,\n+                                          List<MapExceptionEntry> mapExceptions,\n+                                          VariablesCalculator variablesCalculator, ProcessVariablesInitiator processVariablesInitiator) {\n+    super(processDefinitionExpression, mapExceptions);\n+    this.variablesCalculator = variablesCalculator;\n+    this.processVariablesInitiator = processVariablesInitiator;\n+  }\n+\n+  @Override\n+  protected Map<String, Object> calculateInboundVariables(DelegateExecution execution, ProcessDefinition processDefinition) {\n+    Map<String, Object> inputVariables = variablesCalculator.calculateInputVariables(execution);\n+    return processVariablesInitiator.calculateVariablesFromExtensionFile(processDefinition, inputVariables);\n+  }\n+\n+  @Override\n+  protected Map<String, Object> calculateOutBoundVariables(DelegateExecution execution, Map<String, Object> availableVariables) {\n+    return variablesCalculator.calculateOutPutVariables(buildMappingExecutionContext(execution),\n                                                         availableVariables);\n-    }\n-}\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 65
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/357/MappingAwareCallActivityBehavior.java\nindex c3ae32ca9d7..2804c07299e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/357/MappingAwareCallActivityBehavior.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import static org.activiti.engine.impl.bpmn.behavior.MappingExecutionContext.buildMappingExecutionContext;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/357/MappingAwareCallActivityBehavior.java\nindex c3ae32ca9d7..2804c07299e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/357/MappingAwareCallActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/357/MappingAwareCallActivityBehavior.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import static org.activiti.engine.impl.bpmn.behavior.MappingExecutionContext.buildMappingExecutionContext;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
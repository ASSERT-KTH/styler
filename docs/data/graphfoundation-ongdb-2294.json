{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2294",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2294/StandardConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2294/StandardConfiguration.java\nindex 952a191f03e..2a8aa0260b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2294/StandardConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2294/StandardConfiguration.java\n@@ -17,72 +17,73 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.gis.spatial.index.curves;\n \n import org.neo4j.gis.spatial.index.Envelope;\n \n public class StandardConfiguration implements SpaceFillingCurveConfiguration\n {\n-    public static final int DEFAULT_EXTRA_LEVELS = 1;\n+  public static final int DEFAULT_EXTRA_LEVELS = 1;\n \n-    /**\n-     * After estimating the search ratio, we know the level at which tiles have approximately the same size as\n-     * our search area. This number dictates the amount of levels we go deeper than that, to trim down the amount\n-     * of false positives.\n-     */\n-    protected int extraLevels;\n+  /**\n+   * After estimating the search ratio, we know the level at which tiles have approximately the same size as\n+   * our search area. This number dictates the amount of levels we go deeper than that, to trim down the amount\n+   * of false positives.\n+   */\n+  protected int extraLevels;\n \n-    public StandardConfiguration()\n-    {\n-        this( DEFAULT_EXTRA_LEVELS );\n-    }\n+  public StandardConfiguration()\n+  {\n+    this(DEFAULT_EXTRA_LEVELS);\n+  }\n \n-    public StandardConfiguration( int extraLevels )\n-    {\n-        this.extraLevels = extraLevels;\n-    }\n+  public StandardConfiguration(int extraLevels)\n+  {\n+    this.extraLevels = extraLevels;\n+  }\n \n-    /**\n-     * This simply stops at the maxDepth calculated in the maxDepth() function, or\n-     * if the overlap is over 99%.\n-     * <p>\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public boolean stopAtThisDepth( double overlap, int depth, int maxDepth )\n-    {\n-        return overlap >= 0.99 || depth >= maxDepth;\n-    }\n+  /**\n+   * This simply stops at the maxDepth calculated in the maxDepth() function, or\n+   * if the overlap is over 99%.\n+   * <p>\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public boolean stopAtThisDepth(double overlap, int depth, int maxDepth)\n+  {\n+    return overlap >= 0.99 || depth >= maxDepth;\n+  }\n \n-    /**\n-     * If the search area is exactly one of the finest grained tiles (tile at maxLevel), then\n-     * we want the search to traverse to maxLevel, however, for each area that is 4x larger, we would\n-     * traverse one level shallower. This is achieved by a log (base 4 for 2D, base 8 for 3D) of the ratio of areas.\n-     * <p>\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public int maxDepth( Envelope referenceEnvelope, Envelope range, int nbrDim, int maxLevel )\n+  /**\n+   * If the search area is exactly one of the finest grained tiles (tile at maxLevel), then\n+   * we want the search to traverse to maxLevel, however, for each area that is 4x larger, we would\n+   * traverse one level shallower. This is achieved by a log (base 4 for 2D, base 8 for 3D) of the ratio of areas.\n+   * <p>\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public int maxDepth(Envelope referenceEnvelope, Envelope range, int nbrDim, int maxLevel)\n+  {\n+    Envelope paddedEnvelope = referenceEnvelope.withSideRatioNotTooSmall();\n+    double searchRatio = range.getArea() / paddedEnvelope.getArea();\n+    if (Double.isInfinite(searchRatio))\n     {\n-        Envelope paddedEnvelope = referenceEnvelope.withSideRatioNotTooSmall();\n-        double searchRatio = range.getArea() / paddedEnvelope.getArea();\n-        if ( Double.isInfinite( searchRatio ) )\n-        {\n-            return maxLevel;\n-        }\n-        return Math.min( maxLevel, (int) (Math.log( searchRatio ) / Math.log( Math.pow( 2, nbrDim ) )) + extraLevels );\n+      return maxLevel;\n     }\n+    return Math.min(maxLevel, (int) (Math.log(searchRatio) / Math.log(Math.pow(2, nbrDim))) + extraLevels);\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return getClass().getSimpleName() + \"(\" + extraLevels + \")\";\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return getClass().getSimpleName() + \"(\" + extraLevels + \")\";\n+  }\n \n-    @Override\n-    public int initialRangesListCapacity()\n-    {\n-        // Probably big enough to for the majority of index queries.\n-        return 1000;\n-    }\n+  @Override\n+  public int initialRangesListCapacity()\n+  {\n+    // Probably big enough to for the majority of index queries.\n+    return 1000;\n+  }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2294/StandardConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2294/StandardConfiguration.java\nindex 952a191f03e..e35039387bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2294/StandardConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2294/StandardConfiguration.java\n@@ -70,7 +70,8 @@ public class StandardConfiguration implements SpaceFillingCurveConfiguration\n         {\n             return maxLevel;\n         }\n-        return Math.min( maxLevel, (int) (Math.log( searchRatio ) / Math.log( Math.pow( 2, nbrDim ) )) + extraLevels );\n+\n+return Math.min( maxLevel, ( int) (Math.log( searchRatio ) / Math.log( Math.pow( 2, nbrDim ) )) + extraLevels );\n     }\n \n     @Override\n@@ -85,4 +86,4 @@ public class StandardConfiguration implements SpaceFillingCurveConfiguration\n         // Probably big enough to for the majority of index queries.\n         return 1000;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
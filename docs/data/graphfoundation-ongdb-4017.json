{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4017",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4017/CheckPointingMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4017/CheckPointingMetrics.java\nindex a16fc3c8fa6..5d74ddcb79b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4017/CheckPointingMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4017/CheckPointingMetrics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.source.db;\n \n import com.codahale.metrics.Gauge;\n@@ -34,53 +35,53 @@ import org.neo4j.metrics.output.EventReporter;\n import static com.codahale.metrics.MetricRegistry.name;\n import static java.util.Collections.emptySortedMap;\n \n-@Documented( \".Database Checkpointing Metrics\" )\n+@Documented(\".Database Checkpointing Metrics\")\n public class CheckPointingMetrics extends LifecycleAdapter\n {\n-    private static final String CHECK_POINT_PREFIX = \"neo4j.check_point\";\n+  private static final String CHECK_POINT_PREFIX = \"neo4j.check_point\";\n \n-    @Documented( \"The total number of check point events executed so far\" )\n-    public static final String CHECK_POINT_EVENTS = name( CHECK_POINT_PREFIX, \"events\" );\n-    @Documented( \"The total time spent in check pointing so far\" )\n-    public static final String CHECK_POINT_TOTAL_TIME = name( CHECK_POINT_PREFIX, \"total_time\" );\n-    @Documented( \"The duration of the check point event\" )\n-    public static final String CHECK_POINT_DURATION = name( CHECK_POINT_PREFIX, \"check_point_duration\" );\n+  @Documented(\"The total number of check point events executed so far\")\n+  public static final String CHECK_POINT_EVENTS = name(CHECK_POINT_PREFIX, \"events\");\n+  @Documented(\"The total time spent in check pointing so far\")\n+  public static final String CHECK_POINT_TOTAL_TIME = name(CHECK_POINT_PREFIX, \"total_time\");\n+  @Documented(\"The duration of the check point event\")\n+  public static final String CHECK_POINT_DURATION = name(CHECK_POINT_PREFIX, \"check_point_duration\");\n \n-    private final MetricRegistry registry;\n-    private final Monitors monitors;\n-    private final CheckPointerMonitor checkPointerMonitor;\n-    private final DefaultCheckPointerTracer.Monitor listener;\n+  private final MetricRegistry registry;\n+  private final Monitors monitors;\n+  private final CheckPointerMonitor checkPointerMonitor;\n+  private final DefaultCheckPointerTracer.Monitor listener;\n \n-    public CheckPointingMetrics( EventReporter reporter, MetricRegistry registry,\n-            Monitors monitors, CheckPointerMonitor checkPointerMonitor )\n+  public CheckPointingMetrics(EventReporter reporter, MetricRegistry registry,\n+                              Monitors monitors, CheckPointerMonitor checkPointerMonitor)\n+  {\n+    this.registry = registry;\n+    this.monitors = monitors;\n+    this.checkPointerMonitor = checkPointerMonitor;\n+    this.listener = durationMillis ->\n     {\n-        this.registry = registry;\n-        this.monitors = monitors;\n-        this.checkPointerMonitor = checkPointerMonitor;\n-        this.listener = durationMillis ->\n-        {\n-            TreeMap<String,Gauge> gauges = new TreeMap<>();\n-            gauges.put( CHECK_POINT_DURATION, () -> durationMillis );\n-            reporter.report( gauges, emptySortedMap(), emptySortedMap(), emptySortedMap(), emptySortedMap() );\n-        };\n-    }\n+      TreeMap<String, Gauge> gauges = new TreeMap<>();\n+      gauges.put(CHECK_POINT_DURATION, () -> durationMillis);\n+      reporter.report(gauges, emptySortedMap(), emptySortedMap(), emptySortedMap(), emptySortedMap());\n+    };\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        monitors.addMonitorListener( listener );\n+  @Override\n+  public void start()\n+  {\n+    monitors.addMonitorListener(listener);\n \n-        registry.register( CHECK_POINT_EVENTS, (Gauge<Long>) checkPointerMonitor::numberOfCheckPointEvents );\n-        registry.register( CHECK_POINT_TOTAL_TIME,\n-                (Gauge<Long>) checkPointerMonitor::checkPointAccumulatedTotalTimeMillis );\n-    }\n+    registry.register(CHECK_POINT_EVENTS, (Gauge<Long>) checkPointerMonitor::numberOfCheckPointEvents);\n+    registry.register(CHECK_POINT_TOTAL_TIME,\n+        (Gauge<Long>) checkPointerMonitor::checkPointAccumulatedTotalTimeMillis);\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        monitors.removeMonitorListener( listener );\n+  @Override\n+  public void stop()\n+  {\n+    monitors.removeMonitorListener(listener);\n \n-        registry.remove( CHECK_POINT_EVENTS );\n-        registry.remove( CHECK_POINT_TOTAL_TIME );\n-    }\n+    registry.remove(CHECK_POINT_EVENTS);\n+    registry.remove(CHECK_POINT_TOTAL_TIME);\n+  }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4017/CheckPointingMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4017/CheckPointingMetrics.java\nindex a16fc3c8fa6..f1f85628a47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4017/CheckPointingMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4017/CheckPointingMetrics.java\n@@ -69,18 +69,15 @@ public class CheckPointingMetrics extends LifecycleAdapter\n     public void start()\n     {\n         monitors.addMonitorListener( listener );\n-\n-        registry.register( CHECK_POINT_EVENTS, (Gauge<Long>) checkPointerMonitor::numberOfCheckPointEvents );\n-        registry.register( CHECK_POINT_TOTAL_TIME,\n-                (Gauge<Long>) checkPointerMonitor::checkPointAccumulatedTotalTimeMillis );\n+registry.register( CHECK_POINT_EVENTS, (Gauge<Long>) checkPointerMonitor::numberOfCheckPointEvents );\n+        registry.register( CHECK_POINT_TOTAL_TIME, (Gauge<Long>) checkPointerMonitor::checkPointAccumulatedTotalTimeMillis );\n     }\n \n     @Override\n     public void stop()\n     {\n         monitors.removeMonitorListener( listener );\n-\n-        registry.remove( CHECK_POINT_EVENTS );\n+registry.remove( CHECK_POINT_EVENTS );\n         registry.remove( CHECK_POINT_TOTAL_TIME );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "tmobile-kardio",
    "error_id": "53",
    "information": {
        "errors": [
            {
                "line": "30",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "@Table(name=\"region\")\npublic class RegionEntity implements Serializable{\n\t\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/53/RegionEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/intellij/53/RegionEntity.java\nindex 30bdece46d1..fa2fcbb6d8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/53/RegionEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/intellij/53/RegionEntity.java\n@@ -1,18 +1,19 @@\n /*******************************************************************************\n  * Copyright 2019 T-Mobile, Inc. or its affiliates. All Rights Reserved.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n  * use this file except in compliance with the License.  You may obtain a copy\n  * of the License at\n- * \n+ *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n  * License for the specific language governing permissions and limitations under\n  * the License.\n  ******************************************************************************/\n+\n package com.tmobile.kardio.surveiller.db.entity;\n \n import java.io.Serializable;\n@@ -25,88 +26,96 @@ import javax.persistence.Id;\n import javax.persistence.Table;\n \n @Entity\n-@Table(name=\"region\")\n-public class RegionEntity implements Serializable{\n-\t\n-\tprivate static final long serialVersionUID = 1L;\n-\n-\t@Id\n-    @Column(name=\"region_id\")\n-    @GeneratedValue(strategy=GenerationType.IDENTITY)\n-\tprivate Long regionId;\n-\t\n-\t@Column(name=\"region_name\")\n-\tprivate String regionName;\n-\t\n-\t@Column(name=\"region_desc\")\n-\tprivate String regionDesc;\n-\t\n-\t@Column(name=\"region_lock\")\n-\tprivate int regionLock;\n-\n-\t/**\n-\t * Get regionId\n-\t * @return regionId\n-\t */\n-\tpublic Long getRegionId() {\n-\t\treturn regionId;\n-\t}\n-\t\n-\t/**\n-\t * Set regionId\n-\t * @param regionId\n-\t */\n-\tpublic void setRegionId(Long regionId) {\n-\t\tthis.regionId = regionId;\n-\t}\n-\n-\t/**\n-\t * Get regionName\n-\t * @return regionName\n-\t */\n-\tpublic String getRegionName() {\n-\t\treturn regionName;\n-\t}\n-\n-\t/**\n-\t * Set regionName\n-\t * @param regionName\n-\t */\n-\tpublic void setRegionName(String regionName) {\n-\t\tthis.regionName = regionName;\n-\t}\n-\n-\t/**\n-\t * Get regionDesc\n-\t * @return regionDesc\n-\t */\n-\tpublic String getRegionDesc() {\n-\t\treturn regionDesc;\n-\t}\n-\n-\t/**\n-\t * Set regionDesc\n-\t * @param regionDesc\n-\t */\n-\tpublic void setRegionDesc(String regionDesc) {\n-\t\tthis.regionDesc = regionDesc;\n-\t}\n-\n-\t/**\n-\t * Get regionLock\n-\t * @return regionLock\n-\t */\n-\tpublic int getRegionLock() {\n-\t\treturn regionLock;\n-\t}\n-\n-\t/**\n-\t * Set regionLock\n-\t * @param regionLock\n-\t */\n-\tpublic void setRegionLock(int regionLock) {\n-\t\tthis.regionLock = regionLock;\n-\t}\n-\t\n-\t\n+@Table(name = \"region\")\n+public class RegionEntity implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @Column(name = \"region_id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long regionId;\n+\n+    @Column(name = \"region_name\")\n+    private String regionName;\n+\n+    @Column(name = \"region_desc\")\n+    private String regionDesc;\n+\n+    @Column(name = \"region_lock\")\n+    private int regionLock;\n+\n+    /**\n+     * Get regionId\n+     *\n+     * @return regionId\n+     */\n+    public Long getRegionId() {\n+        return regionId;\n+    }\n+\n+    /**\n+     * Set regionId\n+     *\n+     * @param regionId\n+     */\n+    public void setRegionId(Long regionId) {\n+        this.regionId = regionId;\n+    }\n+\n+    /**\n+     * Get regionName\n+     *\n+     * @return regionName\n+     */\n+    public String getRegionName() {\n+        return regionName;\n+    }\n+\n+    /**\n+     * Set regionName\n+     *\n+     * @param regionName\n+     */\n+    public void setRegionName(String regionName) {\n+        this.regionName = regionName;\n+    }\n+\n+    /**\n+     * Get regionDesc\n+     *\n+     * @return regionDesc\n+     */\n+    public String getRegionDesc() {\n+        return regionDesc;\n+    }\n+\n+    /**\n+     * Set regionDesc\n+     *\n+     * @param regionDesc\n+     */\n+    public void setRegionDesc(String regionDesc) {\n+        this.regionDesc = regionDesc;\n+    }\n+\n+    /**\n+     * Get regionLock\n+     *\n+     * @return regionLock\n+     */\n+    public int getRegionLock() {\n+        return regionLock;\n+    }\n+\n+    /**\n+     * Set regionLock\n+     *\n+     * @param regionLock\n+     */\n+    public void setRegionLock(int regionLock) {\n+        this.regionLock = regionLock;\n+    }\n+\n+\n }\n",
            "diff_size": 96
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/53/RegionEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/naturalize/53/RegionEntity.java\nindex 30bdece46d1..e48183a02a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/53/RegionEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/naturalize/53/RegionEntity.java\n@@ -26,87 +26,85 @@ import javax.persistence.Table;\n \n @Entity\n @Table(name=\"region\")\n-public class RegionEntity implements Serializable{\n-\t\n-\tprivate static final long serialVersionUID = 1L;\n+public class RegionEntity implements Serializable {\n \n-\t@Id\n-    @Column(name=\"region_id\")\n+    private static final long serialVersionUID = 1L;\n+\n+@Id\n+@Column(name=\"region_id\")\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n-\tprivate Long regionId;\n-\t\n-\t@Column(name=\"region_name\")\n-\tprivate String regionName;\n-\t\n-\t@Column(name=\"region_desc\")\n-\tprivate String regionDesc;\n-\t\n-\t@Column(name=\"region_lock\")\n-\tprivate int regionLock;\n+private Long regionId;\n+\n+@Column(name=\"region_name\")\n+private String regionName;\n+\n+@Column(name=\"region_desc\")\n+private String regionDesc;\n+\n+@Column(name=\"region_lock\")\n+private int regionLock;\n \n \t/**\n \t * Get regionId\n \t * @return regionId\n \t */\n \tpublic Long getRegionId() {\n-\t\treturn regionId;\n-\t}\n-\t\n-\t/**\n+    return regionId;\n+    }\n+\n+/**\n \t * Set regionId\n \t * @param regionId\n \t */\n-\tpublic void setRegionId(Long regionId) {\n-\t\tthis.regionId = regionId;\n-\t}\n+public void setRegionId(Long regionId) {\n+    this.regionId = regionId;\n+    }\n \n \t/**\n \t * Get regionName\n \t * @return regionName\n \t */\n \tpublic String getRegionName() {\n-\t\treturn regionName;\n-\t}\n+    return regionName;\n+    }\n \n \t/**\n \t * Set regionName\n \t * @param regionName\n \t */\n \tpublic void setRegionName(String regionName) {\n-\t\tthis.regionName = regionName;\n-\t}\n+    this.regionName = regionName;\n+    }\n \n \t/**\n \t * Get regionDesc\n \t * @return regionDesc\n \t */\n \tpublic String getRegionDesc() {\n-\t\treturn regionDesc;\n-\t}\n+    return regionDesc;\n+    }\n \n \t/**\n \t * Set regionDesc\n \t * @param regionDesc\n \t */\n \tpublic void setRegionDesc(String regionDesc) {\n-\t\tthis.regionDesc = regionDesc;\n-\t}\n+    this.regionDesc = regionDesc;\n+    }\n \n \t/**\n \t * Get regionLock\n \t * @return regionLock\n \t */\n \tpublic int getRegionLock() {\n-\t\treturn regionLock;\n-\t}\n+    return regionLock;\n+    }\n \n \t/**\n \t * Set regionLock\n \t * @param regionLock\n \t */\n \tpublic void setRegionLock(int regionLock) {\n-\t\tthis.regionLock = regionLock;\n-\t}\n-\t\n-\t\n-}\n+    this.regionLock = regionLock;\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/53/RegionEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/codebuff/53/RegionEntity.java\nindex 30bdece46d1..c695f01f7fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/53/RegionEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/codebuff/53/RegionEntity.java\n@@ -16,7 +16,6 @@\n package com.tmobile.kardio.surveiller.db.entity;\n \n import java.io.Serializable;\n-\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n@@ -24,89 +23,105 @@ import javax.persistence.GenerationType;\n import javax.persistence.Id;\n import javax.persistence.Table;\n \n+\n @Entity\n-@Table(name=\"region\")\n-public class RegionEntity implements Serializable{\n-\t\n-\tprivate static final long serialVersionUID = 1L;\n-\n-\t@Id\n-    @Column(name=\"region_id\")\n-    @GeneratedValue(strategy=GenerationType.IDENTITY)\n-\tprivate Long regionId;\n-\t\n-\t@Column(name=\"region_name\")\n-\tprivate String regionName;\n-\t\n-\t@Column(name=\"region_desc\")\n-\tprivate String regionDesc;\n-\t\n-\t@Column(name=\"region_lock\")\n-\tprivate int regionLock;\n-\n-\t/**\n-\t * Get regionId\n-\t * @return regionId\n-\t */\n-\tpublic Long getRegionId() {\n-\t\treturn regionId;\n-\t}\n-\t\n-\t/**\n-\t * Set regionId\n-\t * @param regionId\n-\t */\n-\tpublic void setRegionId(Long regionId) {\n-\t\tthis.regionId = regionId;\n-\t}\n-\n-\t/**\n-\t * Get regionName\n-\t * @return regionName\n-\t */\n-\tpublic String getRegionName() {\n-\t\treturn regionName;\n-\t}\n-\n-\t/**\n-\t * Set regionName\n-\t * @param regionName\n-\t */\n-\tpublic void setRegionName(String regionName) {\n-\t\tthis.regionName = regionName;\n-\t}\n-\n-\t/**\n-\t * Get regionDesc\n-\t * @return regionDesc\n-\t */\n-\tpublic String getRegionDesc() {\n-\t\treturn regionDesc;\n-\t}\n-\n-\t/**\n-\t * Set regionDesc\n-\t * @param regionDesc\n-\t */\n-\tpublic void setRegionDesc(String regionDesc) {\n-\t\tthis.regionDesc = regionDesc;\n-\t}\n-\n-\t/**\n-\t * Get regionLock\n-\t * @return regionLock\n-\t */\n-\tpublic int getRegionLock() {\n-\t\treturn regionLock;\n-\t}\n-\n-\t/**\n-\t * Set regionLock\n-\t * @param regionLock\n-\t */\n-\tpublic void setRegionLock(int regionLock) {\n-\t\tthis.regionLock = regionLock;\n-\t}\n-\t\n-\t\n-}\n+@Table(name = \"region\")\n+public class RegionEntity implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @Column(name = \"region_id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long regionId;\n+\n+    @Column(name = \"region_name\")\n+    private String regionName;\n+\n+    @Column(name = \"region_desc\")\n+    private String regionDesc;\n+\n+    @Column(name = \"region_lock\")\n+    private int regionLock;\n+\n+    /**\n+     * Get regionId\n+     * @return regionId\n+     */\n+\n+\n+    public Long getRegionId() {\n+        return regionId;\n+    }\n+    \n+    /**\n+     * Set regionId\n+     * @param regionId\n+     */\n+\n+\n+    public void setRegionId(Long regionId) {\n+        this.regionId = regionId;\n+    }\n+\n+    /**\n+     * Get regionName\n+     * @return regionName\n+     */\n+\n+\n+    public String getRegionName() {\n+        return regionName;\n+    }\n+\n+    /**\n+     * Set regionName\n+     * @param regionName\n+     */\n+\n+\n+    public void setRegionName(String regionName) {\n+        this.regionName = regionName;\n+    }\n+\n+    /**\n+     * Get regionDesc\n+     * @return regionDesc\n+     */\n+\n+\n+    public String getRegionDesc() {\n+        return regionDesc;\n+    }\n+\n+    /**\n+     * Set regionDesc\n+     * @param regionDesc\n+     */\n+\n+\n+    public void setRegionDesc(String regionDesc) {\n+        this.regionDesc = regionDesc;\n+    }\n+\n+    /**\n+     * Get regionLock\n+     * @return regionLock\n+     */\n+\n+\n+    public int getRegionLock() {\n+        return regionLock;\n+    }\n+\n+    /**\n+     * Set regionLock\n+     * @param regionLock\n+     */\n+\n+\n+    public void setRegionLock(int regionLock) {\n+        this.regionLock = regionLock;\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 102
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "30",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "163",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/163/DCNTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/163/DCNTest.java\nindex 20ee3bde9d8..40299145d9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/163/DCNTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/163/DCNTest.java\n@@ -81,7 +81,8 @@ public class DCNTest {\n     }\n   }\n \n-  @Test public void testDCN() throws Exception {\n+  @Test\n+  public void testDCN() throws Exception {\n     setSystemConf();\n     trainTest();\n     //predictTest();\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/163/DCNTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/163/DCNTest.java\nindex 20ee3bde9d8..35e2c317e81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/163/DCNTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/163/DCNTest.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ml.dcn;\n \n import com.tencent.angel.conf.AngelConf;\n@@ -81,7 +80,8 @@ public class DCNTest {\n     }\n   }\n \n-  @Test public void testDCN() throws Exception {\n+  @Test\n+public void testDCN() throws Exception {\n     setSystemConf();\n     trainTest();\n     //predictTest();\n@@ -127,4 +127,4 @@ public class DCNTest {\n       throw x;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/163/DCNTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/163/DCNTest.java\nindex 20ee3bde9d8..d8b8c8e3b52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/163/DCNTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/163/DCNTest.java\n@@ -34,7 +34,9 @@ import org.junit.Test;\n /**\n  * Gradient descent LR UT.\n  */\n+\n public class DCNTest {\n+\n   private Configuration conf = new Configuration();\n   private static final Log LOG = LogFactory.getLog(DCNTest.class);\n   private static String LOCAL_FS = FileSystem.DEFAULT_FS;\n@@ -62,7 +64,6 @@ public class DCNTest {\n       conf.setInt(AngelConf.ANGEL_WORKERGROUP_NUMBER, 1);\n       conf.setInt(AngelConf.ANGEL_WORKER_TASK_NUMBER, 1);\n       conf.setInt(AngelConf.ANGEL_PS_NUMBER, 1);\n-\n       String savePath = LOCAL_FS + TMP_PATH + \"/model/wideDeep\";\n       //String savePath = \"file:///E:/model/DCN\";\n       String logPath = LOCAL_FS + TMP_PATH + \"/DCNlog\";\n@@ -71,7 +72,6 @@ public class DCNTest {\n       // Set log path\n       conf.set(AngelConf.ANGEL_LOG_PATH, logPath);\n       conf.set(MLCoreConf.ML_OPTIMIZER_JSON_PROVIDER(), PSOptimizerProvider.class.getName());\n-\n       String angelConfFile = \"./src/test/jsons/dcn.json\";\n       conf.set(AngelConf.ANGEL_ML_CONF, angelConfFile);\n       conf.set(AngelMLConf.ML_MODEL_CLASS_NAME(), CLASSBASE + \"AngelModel\");\n@@ -81,7 +81,8 @@ public class DCNTest {\n     }\n   }\n \n-  @Test public void testDCN() throws Exception {\n+  @Test\n+  public void testDCN() throws Exception {\n     setSystemConf();\n     trainTest();\n     //predictTest();\n@@ -94,7 +95,6 @@ public class DCNTest {\n \n       // Set actionType train\n       conf.set(AngelConf.ANGEL_ACTION_TYPE, AngelMLConf.ANGEL_ML_TRAIN());\n-\n       GraphRunner runner = new GraphRunner();\n       runner.train(conf);\n     } catch (Exception x) {\n@@ -111,7 +111,6 @@ public class DCNTest {\n \n       // Set trainning data path\n       conf.set(AngelConf.ANGEL_PREDICT_DATA_PATH, inputPath);\n-\n       conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, modelPath);\n \n       // Set predict result path\n@@ -119,7 +118,6 @@ public class DCNTest {\n \n       // Set actionType prediction\n       conf.set(AngelConf.ANGEL_ACTION_TYPE, AngelMLConf.ANGEL_ML_PREDICT());\n-\n       GraphRunner runner = new GraphRunner();\n       runner.predict(conf);\n     } catch (Exception x) {\n@@ -127,4 +125,4 @@ public class DCNTest {\n       throw x;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
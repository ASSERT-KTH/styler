{
    "project_name": "neo4j-neo4j",
    "error_id": "132",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/132/DBMSModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/132/DBMSModule.java\nindex 85931fc9b6c..4d3b80cec82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/132/DBMSModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/132/DBMSModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.modules;\n \n import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n@@ -51,8 +52,8 @@ public class DBMSModule implements ServerModule\n     private final Supplier<DiscoverableURIs> discoverableURIs;\n     private LogProvider logProvider;\n \n-    public DBMSModule( WebServer webServer, Config config, Supplier<DiscoverableURIs> discoverableURIs,\n-            LogProvider logProvider )\n+    public DBMSModule(WebServer webServer, Config config, Supplier<DiscoverableURIs> discoverableURIs,\n+                      LogProvider logProvider)\n     {\n         this.webServer = webServer;\n         this.config = config;\n@@ -64,27 +65,27 @@ public class DBMSModule implements ServerModule\n     public void start()\n     {\n         webServer.addJAXRSClasses(\n-                singletonList( DiscoveryService.class ), ROOT_PATH,\n-                singletonList( injectable( DiscoverableURIs.class, discoverableURIs.get() ) ) );\n+          singletonList(DiscoveryService.class), ROOT_PATH,\n+          singletonList(injectable(DiscoverableURIs.class, discoverableURIs.get())));\n \n-        webServer.addJAXRSClasses( jaxRsClasses(), ROOT_PATH, null );\n+        webServer.addJAXRSClasses(jaxRsClasses(), ROOT_PATH, null);\n \n         // add filters:\n-        webServer.addFilter( new CorsFilter( logProvider, config.get( http_access_control_allow_origin ) ), \"/*\" );\n-        webServer.addFilter( new AccessiblePathFilter( logProvider, config.get( ServerSettings.http_paths_blacklist ) ), \"/*\" );\n+        webServer.addFilter(new CorsFilter(logProvider, config.get(http_access_control_allow_origin)), \"/*\");\n+        webServer.addFilter(new AccessiblePathFilter(logProvider, config.get(ServerSettings.http_paths_blacklist)), \"/*\");\n     }\n \n     @Override\n     public void stop()\n     {\n-        webServer.removeJAXRSClasses( jaxRsClasses(), ROOT_PATH );\n+        webServer.removeJAXRSClasses(jaxRsClasses(), ROOT_PATH);\n     }\n \n     private List<Class<?>> jaxRsClasses()\n     {\n-        if ( config.get( GraphDatabaseSettings.auth_enabled ) )\n+        if (config.get(GraphDatabaseSettings.auth_enabled))\n         {\n-            return singletonList( JacksonJsonProvider.class );\n+            return singletonList(JacksonJsonProvider.class);\n         }\n         return Collections.emptyList();\n     }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
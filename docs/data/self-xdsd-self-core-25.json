{
    "project_name": "self-xdsd-self-core",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "118",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        }\n        Issue issue = null;\n        if(jsonObject != null){\n            issue = new BitbucketIssue(\n                issueUri,\n                jsonObject,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/25/BitbucketIssues.java\nindex 11c6d80e77b..854905ff6d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/25/BitbucketIssues.java\n@@ -115,7 +115,7 @@ final class BitbucketIssues implements Issues {\n                 );\n         }\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             issue = new BitbucketIssue(\n                 issueUri,\n                 jsonObject,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "81",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/25/BitbucketIssues.java\nindex 11c6d80e77b..66ed0a907ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/25/BitbucketIssues.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core;\n \n import com.selfxdsd.api.Issue;\n@@ -36,12 +37,12 @@ import java.util.Iterator;\n \n /**\n  * Issues in a Bitbucket repository.\n+ *\n  * @author Ali Fellahi (fellahi.ali@gmail.com)\n  * @version $Id$\n- * @since 0.0.69\n- *\n  * @todo #1013:60min Continue the implementation & tests of open()\n- *  and search() methods.\n+ * and search() methods.\n+ * @since 0.0.69\n  */\n final class BitbucketIssues implements Issues {\n \n@@ -77,8 +78,8 @@ final class BitbucketIssues implements Issues {\n      *\n      * @param resources Bitbucket's JSON Resources.\n      * @param issuesUri Issues base URI.\n-     * @param repo Parent repo.\n-     * @param storage Storage.\n+     * @param repo      Parent repo.\n+     * @param storage   Storage.\n      */\n     BitbucketIssues(\n         final JsonResources resources,\n@@ -115,7 +116,7 @@ final class BitbucketIssues implements Issues {\n                 );\n         }\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null) {\n             issue = new BitbucketIssue(\n                 issueUri,\n                 jsonObject,\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/25/BitbucketIssues.java\nindex 11c6d80e77b..d47d92e57c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/25/BitbucketIssues.java\n@@ -115,7 +115,7 @@ final class BitbucketIssues implements Issues {\n                 );\n         }\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             issue = new BitbucketIssue(\n                 issueUri,\n                 jsonObject,\n@@ -159,4 +159,4 @@ final class BitbucketIssues implements Issues {\n         );\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "'+' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 38, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 38, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/25/BitbucketIssues.java\nindex 11c6d80e77b..738685fa3cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/25/BitbucketIssues.java\n@@ -28,7 +28,6 @@ import com.selfxdsd.api.Repo;\n import com.selfxdsd.api.storage.Storage;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import javax.json.JsonObject;\n import java.net.HttpURLConnection;\n import java.net.URI;\n@@ -43,33 +42,43 @@ import java.util.Iterator;\n  * @todo #1013:60min Continue the implementation & tests of open()\n  *  and search() methods.\n  */\n+\n+\n final class BitbucketIssues implements Issues {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        BitbucketIssues.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(BitbucketIssues.class);\n \n     /**\n      * Bitbucket repo issues base uri.\n      */\n+\n+\n     private final URI issuesUri;\n \n     /**\n      * Bitbucket's JSON Resources.\n      */\n+\n+\n     private final JsonResources resources;\n \n     /**\n      * Parent Repo.\n      */\n+\n+\n     private final Repo repo;\n \n     /**\n      * Self storage, in case we want to store something.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -80,6 +89,8 @@ final class BitbucketIssues implements Issues {\n      * @param repo Parent repo.\n      * @param storage Storage.\n      */\n+\n+\n     BitbucketIssues(\n         final JsonResources resources,\n         final URI issuesUri,\n@@ -94,34 +105,28 @@ final class BitbucketIssues implements Issues {\n \n     @Override\n     public Issue getById(final String issueId) {\n-        LOG.debug(\"Getting Bitbucket issue with id \" + issueId + \"...\");\n-        final URI issueUri = URI.create(\n-            this.issuesUri.toString() + \"/\" + issueId\n-        );\n+        LOG.debug(\"Getting Bitbucket issue with id \"\n+                      + issueId + \"...\");\n+        final URI issueUri = URI.create(this.issuesUri.toString() + \"/\"\n++ issueId);\n         final Resource resource = this.resources.get(issueUri);\n         JsonObject jsonObject;\n-        switch (resource.statusCode()) {\n-            case HttpURLConnection.HTTP_OK:\n-                jsonObject = resource.asJsonObject();\n-                break;\n-            case HttpURLConnection.HTTP_NOT_FOUND:\n-            case HttpURLConnection.HTTP_GONE:\n-                jsonObject = null;\n-                break;\n-            default:\n-                throw new IllegalStateException(\n-                    \"Could not get the issue \" + issueId + \". \"\n-                        + \"Received status code: \" + resource.statusCode()\n-                );\n+        switch(resource.statusCode()) {\n+                                      case HttpURLConnection.HTTP_OK:\n+                                      jsonObject = resource.asJsonObject();\n+                                      break;\n+                                      case HttpURLConnection.HTTP_NOT_FOUND: case HttpURLConnection.HTTP_GONE:\n+            jsonObject = null;\n+            break;\n+                                      default:\n+            throw new IllegalStateException(\"Could not get the issue \"\n+                                                + issueId + \". \"\n+                                                + \"Received status code: \"\n++ resource.statusCode());\n         }\n         Issue issue = null;\n-        if(jsonObject != null){\n-            issue = new BitbucketIssue(\n-                issueUri,\n-                jsonObject,\n-                this.storage,\n-                this.resources\n-            );\n+        if (jsonObject != null) {\n+            issue = new BitbucketIssue(issueUri, jsonObject, this.storage, this.resources);\n         }\n         return issue;\n     }\n@@ -129,9 +134,8 @@ final class BitbucketIssues implements Issues {\n     @Override\n     public Issue received(final JsonObject issue) {\n         return new BitbucketIssue(\n-            URI.create(\n-                this.issuesUri.toString() + \"/\" + issue.getInt(\"id\")\n-            ),\n+            URI.create(this.issuesUri.toString() + \"/\"\n++ issue.getInt(\"id\")),\n             issue,\n             this.storage,\n             this.resources\n@@ -139,24 +143,19 @@ final class BitbucketIssues implements Issues {\n     }\n \n     @Override\n-    public Issue open(\n-        final String title,\n-        final String body,\n-        final String... labels\n-    ) {\n+    public Issue open(final String title, final String body,\n+                      final String... labels) {\n         throw new UnsupportedOperationException(\"Not implemented yet\");\n     }\n \n     @Override\n-    public Issues search(final String text, final String... labels) {\n+    public Issues search(final String text,\n+                         final String... labels) {\n         throw new UnsupportedOperationException(\"Not implemented yet\");\n     }\n \n     @Override\n     public Iterator<Issue> iterator() {\n-        throw new IllegalStateException(\n-            \"You cannot iterate over all the issues in a repo.\"\n-        );\n+        throw new IllegalStateException(\"You cannot iterate over all the issues in a repo.\");\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 55
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/25/BitbucketIssues.java\nindex 11c6d80e77b..854905ff6d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/25/BitbucketIssues.java\n@@ -115,7 +115,7 @@ final class BitbucketIssues implements Issues {\n                 );\n         }\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             issue = new BitbucketIssue(\n                 issueUri,\n                 jsonObject,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/25/BitbucketIssues.java\nindex 11c6d80e77b..854905ff6d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/25/BitbucketIssues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/25/BitbucketIssues.java\n@@ -115,7 +115,7 @@ final class BitbucketIssues implements Issues {\n                 );\n         }\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             issue = new BitbucketIssue(\n                 issueUri,\n                 jsonObject,\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2017",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "160",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2017/NeoStoreIndexStoreView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2017/NeoStoreIndexStoreView.java\nindex f2b325de06b..bd73962ae8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2017/NeoStoreIndexStoreView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2017/NeoStoreIndexStoreView.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state.storeview;\n \n import java.util.function.IntPredicate;\n@@ -41,7 +42,7 @@ public class NeoStoreIndexStoreView implements IndexStoreView\n     protected final LockService locks;\n     protected final Supplier<StorageReader> storageEngine;\n \n-    public NeoStoreIndexStoreView( LockService locks, Supplier<StorageReader> storageEngine )\n+    public NeoStoreIndexStoreView(LockService locks, Supplier<StorageReader> storageEngine)\n     {\n         this.locks = locks;\n         this.storageEngine = storageEngine;\n@@ -49,37 +50,37 @@ public class NeoStoreIndexStoreView implements IndexStoreView\n \n     @Override\n     public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(\n-            final int[] labelIds, IntPredicate propertyKeyIdFilter,\n-            final Visitor<EntityUpdates, FAILURE> propertyUpdatesVisitor,\n-            final Visitor<EntityTokenUpdate, FAILURE> labelUpdateVisitor,\n-            boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+      final int[] labelIds, IntPredicate propertyKeyIdFilter,\n+      final Visitor<EntityUpdates, FAILURE> propertyUpdatesVisitor,\n+      final Visitor<EntityTokenUpdate, FAILURE> labelUpdateVisitor,\n+      boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        return new NodeStoreScan<>( storageEngine.get(), locks, labelUpdateVisitor,\n-                propertyUpdatesVisitor, labelIds, propertyKeyIdFilter, cursorTracer, memoryTracker );\n+        return new NodeStoreScan<>(storageEngine.get(), locks, labelUpdateVisitor,\n+          propertyUpdatesVisitor, labelIds, propertyKeyIdFilter, cursorTracer, memoryTracker);\n     }\n \n     @Override\n-    public <FAILURE extends Exception> StoreScan<FAILURE> visitRelationships( final int[] relationshipTypeIds, IntPredicate propertyKeyIdFilter,\n-            final Visitor<EntityUpdates,FAILURE> propertyUpdatesVisitor,\n-            Visitor<EntityTokenUpdate,FAILURE> relationshipTypeUpdateVisitor,\n-            boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    public <FAILURE extends Exception> StoreScan<FAILURE> visitRelationships(final int[] relationshipTypeIds, IntPredicate propertyKeyIdFilter,\n+                                                                             final Visitor<EntityUpdates, FAILURE> propertyUpdatesVisitor,\n+                                                                             Visitor<EntityTokenUpdate, FAILURE> relationshipTypeUpdateVisitor,\n+                                                                             boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        return new RelationshipStoreScan<>( storageEngine.get(), locks, relationshipTypeUpdateVisitor, propertyUpdatesVisitor, relationshipTypeIds,\n-                propertyKeyIdFilter, cursorTracer, memoryTracker );\n+        return new RelationshipStoreScan<>(storageEngine.get(), locks, relationshipTypeUpdateVisitor, propertyUpdatesVisitor, relationshipTypeIds,\n+          propertyKeyIdFilter, cursorTracer, memoryTracker);\n     }\n \n     @Override\n-    public NodePropertyAccessor newPropertyAccessor( PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    public NodePropertyAccessor newPropertyAccessor(PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        return new DefaultNodePropertyAccessor( storageEngine.get(), cursorTracer, memoryTracker );\n+        return new DefaultNodePropertyAccessor(storageEngine.get(), cursorTracer, memoryTracker);\n     }\n \n     @Override\n     public boolean isEmpty()\n     {\n-        try ( StorageReader reader = storageEngine.get() )\n+        try (StorageReader reader = storageEngine.get())\n         {\n-            return reader.nodesGetCount( PageCursorTracer.NULL ) == 0 && reader.relationshipsGetCount() == 0;\n+            return reader.nodesGetCount(PageCursorTracer.NULL) == 0 && reader.relationshipsGetCount() == 0;\n         }\n     }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2058",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2058/UniqueLuceneIndexPopulatingUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2058/UniqueLuceneIndexPopulatingUpdater.java\nindex 118e7a7d164..a0affd3f956 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2058/UniqueLuceneIndexPopulatingUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2058/UniqueLuceneIndexPopulatingUpdater.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.populator;\n \n import java.io.IOException;\n@@ -38,45 +39,45 @@ import org.neo4j.values.storable.Value;\n  */\n public class UniqueLuceneIndexPopulatingUpdater extends LuceneIndexPopulatingUpdater\n {\n-    private final int[] propertyKeyIds;\n-    private final SchemaIndex luceneIndex;\n-    private final PropertyAccessor propertyAccessor;\n-    private final UniqueIndexSampler sampler;\n+  private final int[] propertyKeyIds;\n+  private final SchemaIndex luceneIndex;\n+  private final PropertyAccessor propertyAccessor;\n+  private final UniqueIndexSampler sampler;\n \n-    private final List<Value[]> updatedValueTuples = new ArrayList<>();\n+  private final List<Value[]> updatedValueTuples = new ArrayList<>();\n \n-    public UniqueLuceneIndexPopulatingUpdater( LuceneIndexWriter writer, int[] propertyKeyIds,\n-            SchemaIndex luceneIndex, PropertyAccessor propertyAccessor, UniqueIndexSampler sampler )\n-    {\n-        super( writer );\n-        this.propertyKeyIds = propertyKeyIds;\n-        this.luceneIndex = luceneIndex;\n-        this.propertyAccessor = propertyAccessor;\n-        this.sampler = sampler;\n-    }\n+  public UniqueLuceneIndexPopulatingUpdater(LuceneIndexWriter writer, int[] propertyKeyIds,\n+                                            SchemaIndex luceneIndex, PropertyAccessor propertyAccessor, UniqueIndexSampler sampler)\n+  {\n+    super(writer);\n+    this.propertyKeyIds = propertyKeyIds;\n+    this.luceneIndex = luceneIndex;\n+    this.propertyAccessor = propertyAccessor;\n+    this.sampler = sampler;\n+  }\n \n-    @Override\n-    protected void added( IndexEntryUpdate<?> update )\n-    {\n-        sampler.increment( 1 );\n-        updatedValueTuples.add( update.values() );\n-    }\n+  @Override\n+  protected void added(IndexEntryUpdate<?> update)\n+  {\n+    sampler.increment(1);\n+    updatedValueTuples.add(update.values());\n+  }\n \n-    @Override\n-    protected void changed( IndexEntryUpdate<?> update )\n-    {\n-        updatedValueTuples.add( update.values() );\n-    }\n+  @Override\n+  protected void changed(IndexEntryUpdate<?> update)\n+  {\n+    updatedValueTuples.add(update.values());\n+  }\n \n-    @Override\n-    protected void removed( IndexEntryUpdate<?> update )\n-    {\n-        sampler.increment( -1 );\n-    }\n+  @Override\n+  protected void removed(IndexEntryUpdate<?> update)\n+  {\n+    sampler.increment(-1);\n+  }\n \n-    @Override\n-    public void close() throws IOException, IndexEntryConflictException\n-    {\n-        luceneIndex.verifyUniqueness( propertyAccessor, propertyKeyIds, updatedValueTuples );\n-    }\n+  @Override\n+  public void close() throws IOException, IndexEntryConflictException\n+  {\n+    luceneIndex.verifyUniqueness(propertyAccessor, propertyKeyIds, updatedValueTuples);\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2058/UniqueLuceneIndexPopulatingUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2058/UniqueLuceneIndexPopulatingUpdater.java\nindex 118e7a7d164..4d8abf5109a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2058/UniqueLuceneIndexPopulatingUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2058/UniqueLuceneIndexPopulatingUpdater.java\n@@ -79,4 +79,4 @@ public class UniqueLuceneIndexPopulatingUpdater extends LuceneIndexPopulatingUpd\n     {\n         luceneIndex.verifyUniqueness( propertyAccessor, propertyKeyIds, updatedValueTuples );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2058/UniqueLuceneIndexPopulatingUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2058/UniqueLuceneIndexPopulatingUpdater.java\nindex 118e7a7d164..d431e1a5cd3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2058/UniqueLuceneIndexPopulatingUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2058/UniqueLuceneIndexPopulatingUpdater.java\n@@ -22,7 +22,6 @@ package org.neo4j.kernel.api.impl.schema.populator;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.List;\n-\n import org.neo4j.kernel.api.exceptions.index.IndexEntryConflictException;\n import org.neo4j.kernel.api.impl.schema.SchemaIndex;\n import org.neo4j.kernel.api.impl.schema.writer.LuceneIndexWriter;\n@@ -36,17 +35,16 @@ import org.neo4j.values.storable.Value;\n  * Verifies uniqueness of added and changed values when closed using\n  * {@link SchemaIndex#verifyUniqueness(PropertyAccessor, int[], List)} method.\n  */\n+\n public class UniqueLuceneIndexPopulatingUpdater extends LuceneIndexPopulatingUpdater\n {\n     private final int[] propertyKeyIds;\n     private final SchemaIndex luceneIndex;\n     private final PropertyAccessor propertyAccessor;\n     private final UniqueIndexSampler sampler;\n-\n     private final List<Value[]> updatedValueTuples = new ArrayList<>();\n \n-    public UniqueLuceneIndexPopulatingUpdater( LuceneIndexWriter writer, int[] propertyKeyIds,\n-            SchemaIndex luceneIndex, PropertyAccessor propertyAccessor, UniqueIndexSampler sampler )\n+    public UniqueLuceneIndexPopulatingUpdater( LuceneIndexWriter writer, int[] propertyKeyIds, SchemaIndex luceneIndex, PropertyAccessor propertyAccessor, UniqueIndexSampler sampler )\n     {\n         super( writer );\n         this.propertyKeyIds = propertyKeyIds;\n@@ -71,7 +69,7 @@ public class UniqueLuceneIndexPopulatingUpdater extends LuceneIndexPopulatingUpd\n     @Override\n     protected void removed( IndexEntryUpdate<?> update )\n     {\n-        sampler.increment( -1 );\n+        sampler.increment( - 1 );\n     }\n \n     @Override\n@@ -79,4 +77,4 @@ public class UniqueLuceneIndexPopulatingUpdater extends LuceneIndexPopulatingUpd\n     {\n         luceneIndex.verifyUniqueness( propertyAccessor, propertyKeyIds, updatedValueTuples );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
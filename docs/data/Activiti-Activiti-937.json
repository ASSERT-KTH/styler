{
    "project_name": "Activiti-Activiti",
    "error_id": "937",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.spring;\n\nimport java.io.IOException;\nimport java.io.InputStream;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/937/ProcessDeployedEventProducer.java\nindex fa8e5f3a89d..d2cb3e4ca3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/937/ProcessDeployedEventProducer.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.spring;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/937/ProcessDeployedEventProducer.java\nindex fa8e5f3a89d..d2cb3e4ca3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/937/ProcessDeployedEventProducer.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.spring;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/937/ProcessDeployedEventProducer.java\nindex fa8e5f3a89d..208cd7b49a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/937/ProcessDeployedEventProducer.java\n@@ -20,7 +20,6 @@ import java.io.InputStream;\n import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.List;\n-\n import org.activiti.api.process.model.ProcessDefinition;\n import org.activiti.api.process.model.events.ProcessDeployedEvent;\n import org.activiti.api.process.runtime.events.listener.ProcessRuntimeEventListener;\n@@ -32,47 +31,50 @@ import org.activiti.runtime.api.model.impl.APIProcessDefinitionConverter;\n import org.springframework.context.ApplicationEventPublisher;\n import org.springframework.util.StreamUtils;\n \n+\n public class ProcessDeployedEventProducer extends AbstractActivitiSmartLifeCycle {\n \n-    private RepositoryService repositoryService;\n-    private APIProcessDefinitionConverter converter;\n-    private List<ProcessRuntimeEventListener<ProcessDeployedEvent>> listeners;\n-    private ApplicationEventPublisher eventPublisher;\n+  private RepositoryService repositoryService;\n \n-    public ProcessDeployedEventProducer(RepositoryService repositoryService,\n-                                        APIProcessDefinitionConverter converter,\n-                                        List<ProcessRuntimeEventListener<ProcessDeployedEvent>> listeners,\n-                                        ApplicationEventPublisher eventPublisher) {\n-        this.repositoryService = repositoryService;\n-        this.converter = converter;\n-        this.listeners = listeners;\n-        this.eventPublisher = eventPublisher;\n-    }\n+  private APIProcessDefinitionConverter converter;\n+\n+  private List<ProcessRuntimeEventListener<ProcessDeployedEvent>> listeners;\n \n-    @Override\n-    public void doStart() {\n-        List<ProcessDefinition> processDefinitions = converter.from(repositoryService.createProcessDefinitionQuery().list());\n-        List<ProcessDeployedEvent> processDeployedEvents = new ArrayList<>();\n-        for (ProcessDefinition processDefinition : processDefinitions) {\n-            try (InputStream inputStream = repositoryService.getProcessModel(processDefinition.getId())) {\n-                String xmlModel = StreamUtils.copyToString(inputStream, StandardCharsets.UTF_8);\n-                ProcessDeployedEventImpl processDeployedEvent = new ProcessDeployedEventImpl(processDefinition, xmlModel);\n-                processDeployedEvents.add(processDeployedEvent);\n-                for (ProcessRuntimeEventListener<ProcessDeployedEvent> listener : listeners) {\n-                    listener.onEvent(processDeployedEvent);\n-                }\n-            } catch (IOException e) {\n-                throw new ActivitiException(\"Error occurred while getting process model '\" + processDefinition.getId() + \"' : \", e);\n-            }\n-        }\n-        if (!processDeployedEvents.isEmpty()) {\n-            eventPublisher.publishEvent(new ProcessDeployedEvents(processDeployedEvents));\n-        }\n+  private ApplicationEventPublisher eventPublisher;\n+\n+  public ProcessDeployedEventProducer(RepositoryService repositoryService,\n+                                      APIProcessDefinitionConverter converter,\n+                                      List<ProcessRuntimeEventListener<ProcessDeployedEvent>> listeners, ApplicationEventPublisher eventPublisher) {\n+    this.repositoryService = repositoryService;\n+    this.converter = converter;\n+    this.listeners = listeners;\n+    this.eventPublisher = eventPublisher;\n+  }\n+\n+  @Override\n+  public void doStart() {\n+    List<ProcessDefinition> processDefinitions = converter.from(repositoryService.createProcessDefinitionQuery().list());\n+    List<ProcessDeployedEvent> processDeployedEvents = new ArrayList<>();\n+    for (ProcessDefinition processDefinition : processDefinitions) {\n+      try (InputStream inputStream = repositoryService.getProcessModel(processDefinition.getId())) {\n+          String xmlModel = StreamUtils.copyToString(inputStream, StandardCharsets.UTF_8);\n+          ProcessDeployedEventImpl processDeployedEvent = new ProcessDeployedEventImpl(processDefinition, xmlModel);\n+          processDeployedEvents.add(processDeployedEvent);\n+          for (ProcessRuntimeEventListener<ProcessDeployedEvent> listener : listeners) {\n+              listener.onEvent(processDeployedEvent);\n+          }\n+      } catch (IOException e) {\n+          throw new ActivitiException(\"Error occurred while getting process model '\" + processDefinition.getId() + \"' : \", e);\n+      }\n     }\n+    if (!processDeployedEvents.isEmpty()) {\n+      eventPublisher.publishEvent(new ProcessDeployedEvents(processDeployedEvents));\n+    }\n+  }\n \n-    @Override\n-    public void doStop() {\n+  @Override\n+  public void doStop() {\n         // nothing\n+  }\n \n-    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/937/ProcessDeployedEventProducer.java\nindex fa8e5f3a89d..d2cb3e4ca3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/937/ProcessDeployedEventProducer.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.spring;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/937/ProcessDeployedEventProducer.java\nindex fa8e5f3a89d..d2cb3e4ca3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/937/ProcessDeployedEventProducer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/937/ProcessDeployedEventProducer.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.spring;\n \n import java.io.IOException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
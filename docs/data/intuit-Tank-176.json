{
    "project_name": "intuit-Tank",
    "error_id": "176",
    "information": {
        "errors": [
            {
                "line": "74",
                "column": "37",
                "severity": "warning",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "        });\n        JButton editButton = new JButton(\"Edit\");\n        editButton.addActionListener( (ActionEvent e) -> {\n            int selectedRow = ruleTable.getSelectedRow();\n            if (selectedRow != -1) {\n                handler.editRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/176/GeneralInclusionPanel.java\nindex a22f9c464cf..af8c22b0e81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/176/GeneralInclusionPanel.java\n@@ -71,7 +71,7 @@ public class GeneralInclusionPanel extends JPanel {\n             }\n         });\n         JButton editButton = new JButton(\"Edit\");\n-        editButton.addActionListener( (ActionEvent e) -> {\n+        editButton.addActionListener((ActionEvent e) -> {\n             int selectedRow = ruleTable.getSelectedRow();\n             if (selectedRow != -1) {\n                 handler.editRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/176/GeneralInclusionPanel.java\nindex a22f9c464cf..d1a8bb3f876 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/176/GeneralInclusionPanel.java\n@@ -28,79 +28,79 @@ import com.intuit.tank.proxy.config.ConfigInclusionExclusionRule;\n \n public class GeneralInclusionPanel extends JPanel {\n \n-    private static final long serialVersionUID = 1L;\n+  private static final long serialVersionUID = 1L;\n \n-    private Handler handler = null;\n-    private RuleTableModel ruleTableModel;\n-    private RuleTable ruleTable;\n+  private Handler handler = null;\n+  private RuleTableModel ruleTableModel;\n+  private RuleTable ruleTable;\n \n-    private ProxyConfigDialog dialog;\n+  private ProxyConfigDialog dialog;\n \n-    public GeneralInclusionPanel(Handler handler, ProxyConfigDialog dialog) {\n-        this.handler = handler;\n-        this.dialog = dialog;\n-        initialize();\n-    }\n-\n-    private void initialize() {\n-        this.setLayout(new BorderLayout());\n-        ruleTableModel = new RuleTableModel();\n-\n-        for (ConfigInclusionExclusionRule rule : handler.getData()) {\n-            ruleTableModel.addRule(rule);\n-        }\n-\n-        ruleTable = new RuleTable(ruleTableModel);\n-        ruleTable.setShowGrid(true);\n-        ruleTable.setGridColor(Color.LIGHT_GRAY);\n-\n-        JScrollPane scrollPane = new JScrollPane(ruleTable);\n-        ruleTable.setFillsViewportHeight(true);\n-        this.add(scrollPane, BorderLayout.CENTER);\n-\n-        JPanel opsPanel = new JPanel();\n-\n-        JButton addButton = new JButton(\"Add\");\n-        addButton.addActionListener((ActionEvent e) -> handler.addRule(ruleTableModel, dialog));\n-        JButton deleteButton = new JButton(\"Delete\");\n-        deleteButton.addActionListener((ActionEvent e) -> {\n-            int selectedRow = ruleTable.getSelectedRow();\n-            if (selectedRow != -1) {\n-                handler.removeRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n-                        ruleTable.getSelectedRow());\n-            }\n-        });\n-        JButton editButton = new JButton(\"Edit\");\n-        editButton.addActionListener( (ActionEvent e) -> {\n-            int selectedRow = ruleTable.getSelectedRow();\n-            if (selectedRow != -1) {\n-                handler.editRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n-                        ruleTable.getSelectedRow(), dialog);\n-            }\n-        });\n-\n-        opsPanel.add(addButton);\n-        opsPanel.add(deleteButton);\n-        opsPanel.add(editButton);\n-\n-        this.add(opsPanel, BorderLayout.SOUTH);\n-    }\n+  public GeneralInclusionPanel(Handler handler, ProxyConfigDialog dialog) {\n+    this.handler = handler;\n+    this.dialog = dialog;\n+    initialize();\n+  }\n \n-    public Set<ConfigInclusionExclusionRule> getData() {\n-        List<ConfigInclusionExclusionRule> dataList = ruleTableModel.getDataList();\n-        return new HashSet<ConfigInclusionExclusionRule>(dataList);\n-    }\n+  private void initialize() {\n+    this.setLayout(new BorderLayout());\n+    ruleTableModel = new RuleTableModel();\n \n-    public void addRule(ConfigInclusionExclusionRule rule) {\n-        ruleTableModel.addRule(rule);\n+    for (ConfigInclusionExclusionRule rule : handler.getData()) {\n+      ruleTableModel.addRule(rule);\n     }\n \n-    public void update(Set<ConfigInclusionExclusionRule> rules) {\n-        ruleTableModel.getDataVector().clear();\n-        ruleTableModel.getDataList().clear();\n-        for (ConfigInclusionExclusionRule configInclusionExclusionRule : rules) {\n-            ruleTableModel.addRule(configInclusionExclusionRule);\n-        }\n-        validate();\n+    ruleTable = new RuleTable(ruleTableModel);\n+    ruleTable.setShowGrid(true);\n+    ruleTable.setGridColor(Color.LIGHT_GRAY);\n+\n+    JScrollPane scrollPane = new JScrollPane(ruleTable);\n+    ruleTable.setFillsViewportHeight(true);\n+    this.add(scrollPane, BorderLayout.CENTER);\n+\n+    JPanel opsPanel = new JPanel();\n+\n+    JButton addButton = new JButton(\"Add\");\n+    addButton.addActionListener((ActionEvent e) -> handler.addRule(ruleTableModel, dialog));\n+    JButton deleteButton = new JButton(\"Delete\");\n+    deleteButton.addActionListener((ActionEvent e) -> {\n+      int selectedRow = ruleTable.getSelectedRow();\n+      if (selectedRow != -1) {\n+        handler.removeRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n+          ruleTable.getSelectedRow());\n+      }\n+    });\n+    JButton editButton = new JButton(\"Edit\");\n+    editButton.addActionListener((ActionEvent e) -> {\n+      int selectedRow = ruleTable.getSelectedRow();\n+      if (selectedRow != -1) {\n+        handler.editRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n+          ruleTable.getSelectedRow(), dialog);\n+      }\n+    });\n+\n+    opsPanel.add(addButton);\n+    opsPanel.add(deleteButton);\n+    opsPanel.add(editButton);\n+\n+    this.add(opsPanel, BorderLayout.SOUTH);\n+  }\n+\n+  public Set<ConfigInclusionExclusionRule> getData() {\n+    List<ConfigInclusionExclusionRule> dataList = ruleTableModel.getDataList();\n+    return new HashSet<ConfigInclusionExclusionRule>(dataList);\n+  }\n+\n+  public void addRule(ConfigInclusionExclusionRule rule) {\n+    ruleTableModel.addRule(rule);\n+  }\n+\n+  public void update(Set<ConfigInclusionExclusionRule> rules) {\n+    ruleTableModel.getDataVector().clear();\n+    ruleTableModel.getDataList().clear();\n+    for (ConfigInclusionExclusionRule configInclusionExclusionRule : rules) {\n+      ruleTableModel.addRule(configInclusionExclusionRule);\n     }\n+    validate();\n+  }\n }\n",
            "diff_size": 112
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/176/GeneralInclusionPanel.java\nindex a22f9c464cf..24a848f916f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/176/GeneralInclusionPanel.java\n@@ -71,7 +71,7 @@ public class GeneralInclusionPanel extends JPanel {\n             }\n         });\n         JButton editButton = new JButton(\"Edit\");\n-        editButton.addActionListener( (ActionEvent e) -> {\n+        editButton.addActionListener((ActionEvent e) -> {\n             int selectedRow = ruleTable.getSelectedRow();\n             if (selectedRow != -1) {\n                 handler.editRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n@@ -103,4 +103,4 @@ public class GeneralInclusionPanel extends JPanel {\n         }\n         validate();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/176/GeneralInclusionPanel.java\nindex a22f9c464cf..a4f26662e33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/176/GeneralInclusionPanel.java\n@@ -13,27 +13,26 @@ package com.intuit.tank.proxy.settings.ui;\n  * #L%\n  */\n \n+\n+\n import java.awt.BorderLayout;\n import java.awt.Color;\n import java.awt.event.ActionEvent;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-\n import javax.swing.JButton;\n import javax.swing.JPanel;\n import javax.swing.JScrollPane;\n-\n import com.intuit.tank.proxy.config.ConfigInclusionExclusionRule;\n \n+\n public class GeneralInclusionPanel extends JPanel {\n \n     private static final long serialVersionUID = 1L;\n-\n     private Handler handler = null;\n     private RuleTableModel ruleTableModel;\n     private RuleTable ruleTable;\n-\n     private ProxyConfigDialog dialog;\n \n     public GeneralInclusionPanel(Handler handler, ProxyConfigDialog dialog) {\n@@ -45,56 +44,50 @@ public class GeneralInclusionPanel extends JPanel {\n     private void initialize() {\n         this.setLayout(new BorderLayout());\n         ruleTableModel = new RuleTableModel();\n-\n         for (ConfigInclusionExclusionRule rule : handler.getData()) {\n             ruleTableModel.addRule(rule);\n         }\n-\n         ruleTable = new RuleTable(ruleTableModel);\n         ruleTable.setShowGrid(true);\n         ruleTable.setGridColor(Color.LIGHT_GRAY);\n-\n         JScrollPane scrollPane = new JScrollPane(ruleTable);\n         ruleTable.setFillsViewportHeight(true);\n         this.add(scrollPane, BorderLayout.CENTER);\n-\n         JPanel opsPanel = new JPanel();\n-\n         JButton addButton = new JButton(\"Add\");\n-        addButton.addActionListener((ActionEvent e) -> handler.addRule(ruleTableModel, dialog));\n+        addButton.addActionListener((ActionEvent e)-> handler.addRule(ruleTableModel, dialog));\n         JButton deleteButton = new JButton(\"Delete\");\n-        deleteButton.addActionListener((ActionEvent e) -> {\n-            int selectedRow = ruleTable.getSelectedRow();\n-            if (selectedRow != -1) {\n-                handler.removeRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n-                        ruleTable.getSelectedRow());\n-            }\n-        });\n+        deleteButton.addActionListener((ActionEvent e)-> {\n+                                           int selectedRow = ruleTable.getSelectedRow();\n+                                           if (selectedRow != -1) {\n+                                               handler.removeRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow), ruleTable.getSelectedRow());\n+                                           }\n+                                       });\n         JButton editButton = new JButton(\"Edit\");\n-        editButton.addActionListener( (ActionEvent e) -> {\n-            int selectedRow = ruleTable.getSelectedRow();\n-            if (selectedRow != -1) {\n-                handler.editRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n-                        ruleTable.getSelectedRow(), dialog);\n-            }\n-        });\n-\n+        editButton.addActionListener((ActionEvent e)-> {\n+                                         int selectedRow = ruleTable.getSelectedRow();\n+                                         if (selectedRow != -1) {\n+                                             handler.editRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow), ruleTable.getSelectedRow(), dialog);\n+                                         }\n+                                     });\n         opsPanel.add(addButton);\n         opsPanel.add(deleteButton);\n         opsPanel.add(editButton);\n-\n         this.add(opsPanel, BorderLayout.SOUTH);\n     }\n \n+\n     public Set<ConfigInclusionExclusionRule> getData() {\n         List<ConfigInclusionExclusionRule> dataList = ruleTableModel.getDataList();\n         return new HashSet<ConfigInclusionExclusionRule>(dataList);\n     }\n \n+\n     public void addRule(ConfigInclusionExclusionRule rule) {\n         ruleTableModel.addRule(rule);\n     }\n \n+\n     public void update(Set<ConfigInclusionExclusionRule> rules) {\n         ruleTableModel.getDataVector().clear();\n         ruleTableModel.getDataList().clear();\n@@ -103,4 +96,5 @@ public class GeneralInclusionPanel extends JPanel {\n         }\n         validate();\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/176/GeneralInclusionPanel.java\nindex a22f9c464cf..af8c22b0e81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/176/GeneralInclusionPanel.java\n@@ -71,7 +71,7 @@ public class GeneralInclusionPanel extends JPanel {\n             }\n         });\n         JButton editButton = new JButton(\"Edit\");\n-        editButton.addActionListener( (ActionEvent e) -> {\n+        editButton.addActionListener((ActionEvent e) -> {\n             int selectedRow = ruleTable.getSelectedRow();\n             if (selectedRow != -1) {\n                 handler.editRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/176/GeneralInclusionPanel.java\nindex a22f9c464cf..af8c22b0e81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/176/GeneralInclusionPanel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/176/GeneralInclusionPanel.java\n@@ -71,7 +71,7 @@ public class GeneralInclusionPanel extends JPanel {\n             }\n         });\n         JButton editButton = new JButton(\"Edit\");\n-        editButton.addActionListener( (ActionEvent e) -> {\n+        editButton.addActionListener((ActionEvent e) -> {\n             int selectedRow = ruleTable.getSelectedRow();\n             if (selectedRow != -1) {\n                 handler.editRule(ruleTableModel, ruleTableModel.getRuleForIndex(selectedRow),\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
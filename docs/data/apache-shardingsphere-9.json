{
    "project_name": "apache-shardingsphere",
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "53",
                "column": "5",
                "severity": "warning",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "    \n    \n    /**\n     * Init by string data.\n     *\n     * @param data string data",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler/9/JobProgress.java\nindex 32eabbe46d8..dcd8f524022 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler/9/JobProgress.java\n@@ -48,8 +48,7 @@ public final class JobProgress {\n     private Map<String, InventoryTaskProgress> inventoryTaskProgressMap;\n     \n     private Map<String, IncrementalTaskProgress> incrementalTaskProgressMap;\n-    \n-    \n+\n     /**\n      * Init by string data.\n      *\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "53",
                    "column": "5",
                    "severity": "warning",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/intellij/9/JobProgress.java\nindex 32eabbe46d8..347c4548180 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/intellij/9/JobProgress.java\n@@ -38,18 +38,18 @@ import java.util.stream.Collectors;\n @Getter\n @Setter\n public final class JobProgress {\n-    \n+\n     private static final JobProgressYamlSwapper JOB_PROGRESS_YAML_SWAPPER = new JobProgressYamlSwapper();\n-    \n+\n     private JobStatus status = JobStatus.RUNNING;\n-    \n+\n     private String databaseType;\n-    \n+\n     private Map<String, InventoryTaskProgress> inventoryTaskProgressMap;\n-    \n+\n     private Map<String, IncrementalTaskProgress> incrementalTaskProgressMap;\n-    \n-    \n+\n+\n     /**\n      * Init by string data.\n      *\n@@ -59,7 +59,7 @@ public final class JobProgress {\n     public static JobProgress init(final String data) {\n         return JOB_PROGRESS_YAML_SWAPPER.swapToObject(YamlEngine.unmarshal(data, YamlJobProgress.class));\n     }\n-    \n+\n     /**\n      * Get incremental position.\n      *\n@@ -69,7 +69,7 @@ public final class JobProgress {\n     public Position<?> getIncrementalPosition(final String dataSourceName) {\n         return incrementalTaskProgressMap.get(dataSourceName).getPosition();\n     }\n-    \n+\n     /**\n      * Get inventory position.\n      *\n@@ -79,10 +79,10 @@ public final class JobProgress {\n     public Map<String, Position<?>> getInventoryPosition(final String tableName) {\n         Pattern pattern = Pattern.compile(String.format(\"%s(#\\\\d+)?\", tableName));\n         return inventoryTaskProgressMap.entrySet().stream()\n-                .filter(entry -> pattern.matcher(entry.getKey()).find())\n-                .collect(Collectors.toMap(Entry::getKey, entry -> entry.getValue().getPosition()));\n+            .filter(entry -> pattern.matcher(entry.getKey()).find())\n+            .collect(Collectors.toMap(Entry::getKey, entry -> entry.getValue().getPosition()));\n     }\n-    \n+\n     @Override\n     public String toString() {\n         return YamlEngine.marshal(JOB_PROGRESS_YAML_SWAPPER.swapToYaml(this));\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/naturalize/9/JobProgress.java\nindex 32eabbe46d8..52d021b25db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/naturalize/9/JobProgress.java\n@@ -48,9 +48,8 @@ public final class JobProgress {\n     private Map<String, InventoryTaskProgress> inventoryTaskProgressMap;\n     \n     private Map<String, IncrementalTaskProgress> incrementalTaskProgressMap;\n-    \n-    \n-    /**\n+\n+/**\n      * Init by string data.\n      *\n      * @param data string data\n@@ -78,8 +77,7 @@ public final class JobProgress {\n      */\n     public Map<String, Position<?>> getInventoryPosition(final String tableName) {\n         Pattern pattern = Pattern.compile(String.format(\"%s(#\\\\d+)?\", tableName));\n-        return inventoryTaskProgressMap.entrySet().stream()\n-                .filter(entry -> pattern.matcher(entry.getKey()).find())\n+        return inventoryTaskProgressMap.entrySet().stream().filter(entry -> pattern.matcher(entry.getKey()).find())\n                 .collect(Collectors.toMap(Entry::getKey, entry -> entry.getValue().getPosition()));\n     }\n     \n@@ -87,4 +85,4 @@ public final class JobProgress {\n     public String toString() {\n         return YamlEngine.marshal(JOB_PROGRESS_YAML_SWAPPER.swapToYaml(this));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "column": "5",
                    "severity": "warning",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "87",
                    "column": "73",
                    "severity": "warning",
                    "message": "'->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "87",
                    "column": "161",
                    "severity": "warning",
                    "message": "'->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/codebuff/9/JobProgress.java\nindex 32eabbe46d8..5329ecd10ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/codebuff/9/JobProgress.java\n@@ -26,7 +26,6 @@ import org.apache.shardingsphere.scaling.core.job.progress.yaml.JobProgressYamlS\n import org.apache.shardingsphere.scaling.core.job.progress.yaml.YamlJobProgress;\n import org.apache.shardingsphere.scaling.core.job.task.incremental.IncrementalTaskProgress;\n import org.apache.shardingsphere.scaling.core.job.task.inventory.InventoryTaskProgress;\n-\n import java.util.Map;\n import java.util.Map.Entry;\n import java.util.regex.Pattern;\n@@ -35,18 +34,20 @@ import java.util.stream.Collectors;\n /**\n  * Job progress.\n  */\n+\n+\n @Getter\n @Setter\n public final class JobProgress {\n-    \n+\n     private static final JobProgressYamlSwapper JOB_PROGRESS_YAML_SWAPPER = new JobProgressYamlSwapper();\n-    \n+\n     private JobStatus status = JobStatus.RUNNING;\n-    \n+\n     private String databaseType;\n-    \n+\n     private Map<String, InventoryTaskProgress> inventoryTaskProgressMap;\n-    \n+\n     private Map<String, IncrementalTaskProgress> incrementalTaskProgressMap;\n     \n     \n@@ -56,6 +57,7 @@ public final class JobProgress {\n      * @param data string data\n      * @return job progress\n      */\n+\n     public static JobProgress init(final String data) {\n         return JOB_PROGRESS_YAML_SWAPPER.swapToObject(YamlEngine.unmarshal(data, YamlJobProgress.class));\n     }\n@@ -66,6 +68,8 @@ public final class JobProgress {\n      * @param dataSourceName data source name\n      * @return incremental position\n      */\n+\n+\n     public Position<?> getIncrementalPosition(final String dataSourceName) {\n         return incrementalTaskProgressMap.get(dataSourceName).getPosition();\n     }\n@@ -76,15 +80,15 @@ public final class JobProgress {\n      * @param tableName table name\n      * @return inventory position\n      */\n+\n+\n     public Map<String, Position<?>> getInventoryPosition(final String tableName) {\n         Pattern pattern = Pattern.compile(String.format(\"%s(#\\\\d+)?\", tableName));\n-        return inventoryTaskProgressMap.entrySet().stream()\n-                .filter(entry -> pattern.matcher(entry.getKey()).find())\n-                .collect(Collectors.toMap(Entry::getKey, entry -> entry.getValue().getPosition()));\n+        return inventoryTaskProgressMap.entrySet().stream().filter(entry-> pattern.matcher(entry.getKey()).find()).collect(Collectors.toMap(Entry::getKey, entry-> entry.getValue().getPosition()));\n     }\n-    \n+\n     @Override\n     public String toString() {\n         return YamlEngine.marshal(JOB_PROGRESS_YAML_SWAPPER.swapToYaml(this));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_random/9/JobProgress.java\nindex 32eabbe46d8..dcd8f524022 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_random/9/JobProgress.java\n@@ -48,8 +48,7 @@ public final class JobProgress {\n     private Map<String, InventoryTaskProgress> inventoryTaskProgressMap;\n     \n     private Map<String, IncrementalTaskProgress> incrementalTaskProgressMap;\n-    \n-    \n+\n     /**\n      * Init by string data.\n      *\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_three_grams/9/JobProgress.java\nindex 32eabbe46d8..dcd8f524022 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/9/JobProgress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_three_grams/9/JobProgress.java\n@@ -48,8 +48,7 @@ public final class JobProgress {\n     private Map<String, InventoryTaskProgress> inventoryTaskProgressMap;\n     \n     private Map<String, IncrementalTaskProgress> incrementalTaskProgressMap;\n-    \n-    \n+\n     /**\n      * Init by string data.\n      *\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
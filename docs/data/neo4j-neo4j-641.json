{
    "project_name": "neo4j-neo4j",
    "error_id": "641",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "29",
                    "severity": "error",
                    "message": "'}' at column 29 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/641/SchemaStorage35.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/641/SchemaStorage35.java\nindex 95e4b79e708..63d1fc1339c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/641/SchemaStorage35.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/641/SchemaStorage35.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration.legacy;\n \n import java.util.Collection;\n@@ -42,28 +43,28 @@ public class SchemaStorage35 implements SchemaStorage\n {\n     private final RecordStore<DynamicRecord> schemaStore;\n \n-    public SchemaStorage35( RecordStore<DynamicRecord> schemaStore )\n+    public SchemaStorage35(RecordStore<DynamicRecord> schemaStore)\n     {\n         this.schemaStore = schemaStore;\n     }\n \n-    public Iterable<SchemaRule> getAll( PageCursorTracer cursorTracer )\n+    public Iterable<SchemaRule> getAll(PageCursorTracer cursorTracer)\n     {\n-        return () -> loadAllSchemaRules( cursorTracer );\n+        return () -> loadAllSchemaRules(cursorTracer);\n     }\n \n-    public Iterator<IndexDescriptor> indexesGetAll( PageCursorTracer cursorTracer )\n+    public Iterator<IndexDescriptor> indexesGetAll(PageCursorTracer cursorTracer)\n     {\n-        return loadAllSchemaRules( Predicates.alwaysTrue(), IndexDescriptor.class, cursorTracer );\n+        return loadAllSchemaRules(Predicates.alwaysTrue(), IndexDescriptor.class, cursorTracer);\n     }\n \n-    public IndexDescriptor indexGetForName( String indexName, PageCursorTracer cursorTracer )\n+    public IndexDescriptor indexGetForName(String indexName, PageCursorTracer cursorTracer)\n     {\n-        Iterator<IndexDescriptor> itr = indexesGetAll( cursorTracer );\n-        while ( itr.hasNext() )\n+        Iterator<IndexDescriptor> itr = indexesGetAll(cursorTracer);\n+        while (itr.hasNext())\n         {\n             IndexDescriptor sid = itr.next();\n-            if ( sid.getName().equals( indexName ) )\n+            if (sid.getName().equals(indexName))\n             {\n                 return sid;\n             }\n@@ -71,25 +72,25 @@ public class SchemaStorage35 implements SchemaStorage\n         return null;\n     }\n \n-    private Iterator<SchemaRule> loadAllSchemaRules( PageCursorTracer cursorTracer )\n+    private Iterator<SchemaRule> loadAllSchemaRules(PageCursorTracer cursorTracer)\n     {\n-        return loadAllSchemaRules( Predicates.alwaysTrue(), SchemaRule.class, cursorTracer );\n+        return loadAllSchemaRules(Predicates.alwaysTrue(), SchemaRule.class, cursorTracer);\n     }\n \n     /**\n      * Scans the schema store and loads all {@link SchemaRule rules} in it. This method is written with the assumption\n      * that there's no id reuse on schema records.\n      *\n-     * @param predicate filter when loading.\n+     * @param predicate  filter when loading.\n      * @param returnType type of {@link SchemaRule} to load.\n      * @return {@link Iterator} of the loaded schema rules, lazily loaded when advancing the iterator.\n      */\n-    private <ReturnType extends SchemaRule> Iterator<ReturnType> loadAllSchemaRules( final Predicate<ReturnType> predicate, final Class<ReturnType> returnType,\n-            PageCursorTracer cursorTracer )\n+    private <ReturnType extends SchemaRule> Iterator<ReturnType> loadAllSchemaRules(final Predicate<ReturnType> predicate, final Class<ReturnType> returnType,\n+                                                                                    PageCursorTracer cursorTracer)\n     {\n         return new PrefetchingIterator<>()\n         {\n-            private final long highestId = schemaStore.getHighestPossibleIdInUse( cursorTracer );\n+            private final long highestId = schemaStore.getHighestPossibleIdInUse(cursorTracer);\n             private long currentId = 1; /*record 0 contains the block size*/\n             private final byte[] scratchData = newRecordBuffer();\n             private final DynamicRecord record = schemaStore.newRecord();\n@@ -97,16 +98,16 @@ public class SchemaStorage35 implements SchemaStorage\n             @Override\n             protected ReturnType fetchNextOrNull()\n             {\n-                while ( currentId <= highestId )\n+                while (currentId <= highestId)\n                 {\n                     long id = currentId++;\n-                    schemaStore.getRecord( id, record, RecordLoad.LENIENT_CHECK, cursorTracer );\n-                    if ( !record.inUse() )\n+                    schemaStore.getRecord(id, record, RecordLoad.LENIENT_CHECK, cursorTracer);\n+                    if (!record.inUse())\n                     {\n                         continue;\n                     }\n-                    schemaStore.getRecord( id, record, RecordLoad.NORMAL, cursorTracer );\n-                    if ( record.isStartRecord() )\n+                    schemaStore.getRecord(id, record, RecordLoad.NORMAL, cursorTracer);\n+                    if (record.isStartRecord())\n                     {\n                         // It may be that concurrently to our reading there's a transaction dropping the schema rule\n                         // that we're reading and that rule may have spanned multiple dynamic records.\n@@ -115,27 +116,25 @@ public class SchemaStorage35 implements SchemaStorage\n                             Collection<DynamicRecord> records;\n                             try\n                             {\n-                                records = schemaStore.getRecords( id, RecordLoad.NORMAL, false, cursorTracer );\n-                            }\n-                            catch ( InvalidRecordException e )\n+                                records = schemaStore.getRecords(id, RecordLoad.NORMAL, false, cursorTracer);\n+                            } catch (InvalidRecordException e)\n                             {\n                                 // This may have been due to a concurrent drop of this rule.\n                                 continue;\n                             }\n \n-                            SchemaRule schemaRule = SchemaStore35.readSchemaRule( id, records, scratchData );\n-                            if ( returnType.isInstance( schemaRule ) )\n+                            SchemaRule schemaRule = SchemaStore35.readSchemaRule(id, records, scratchData);\n+                            if (returnType.isInstance(schemaRule))\n                             {\n-                                ReturnType returnRule = returnType.cast( schemaRule );\n-                                if ( predicate.test( returnRule ) )\n+                                ReturnType returnRule = returnType.cast(schemaRule);\n+                                if (predicate.test(returnRule))\n                                 {\n                                     return returnRule;\n                                 }\n                             }\n-                        }\n-                        catch ( MalformedSchemaRuleException e )\n+                        } catch (MalformedSchemaRuleException e)\n                         {\n-                            throw new RuntimeException( e );\n+                            throw new RuntimeException(e);\n                         }\n                     }\n                 }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
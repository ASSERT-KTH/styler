{
    "project_name": "neo4j-neo4j",
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "132",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "124",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/12/LockVerificationMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/12/LockVerificationMonitor.java\nindex 4609387f6f7..ffeac2146fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/12/LockVerificationMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/12/LockVerificationMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.util.function.LongFunction;\n@@ -51,7 +52,7 @@ public class LockVerificationMonitor implements LoadMonitor\n     private final ReadableTransactionState txState;\n     private final StoreLoader loader;\n \n-    LockVerificationMonitor( ResourceLocker locks, ReadableTransactionState txState, StoreLoader loader )\n+    LockVerificationMonitor(ResourceLocker locks, ReadableTransactionState txState, StoreLoader loader)\n     {\n         this.locks = locks;\n         this.txState = txState;\n@@ -59,178 +60,176 @@ public class LockVerificationMonitor implements LoadMonitor\n     }\n \n     @Override\n-    public void markedAsChanged( AbstractBaseRecord before )\n+    public void markedAsChanged(AbstractBaseRecord before)\n     {\n         // This is assuming that all before records coming here are inUse, they should really always be when getting a call to this method\n-        if ( !before.inUse() )\n+        if (!before.inUse())\n         {\n             return; //we can not do anything useful with unused before records\n         }\n \n-        if ( before instanceof NodeRecord )\n+        if (before instanceof NodeRecord)\n         {\n-            verifyNodeSufficientlyLocked( (NodeRecord) before );\n-        }\n-        else if ( before instanceof RelationshipRecord )\n+            verifyNodeSufficientlyLocked((NodeRecord) before);\n+        } else if (before instanceof RelationshipRecord)\n         {\n-            verifyRelationshipSufficientlyLocked( (RelationshipRecord) before );\n-        }\n-        else if ( before instanceof RelationshipGroupRecord )\n+            verifyRelationshipSufficientlyLocked((RelationshipRecord) before);\n+        } else if (before instanceof RelationshipGroupRecord)\n         {\n-            verifyRelationshipGroupSufficientlyLocked( (RelationshipGroupRecord) before );\n+            verifyRelationshipGroupSufficientlyLocked((RelationshipGroupRecord) before);\n         }\n     }\n \n-    private void verifyNodeSufficientlyLocked( NodeRecord before )\n+    private void verifyNodeSufficientlyLocked(NodeRecord before)\n     {\n-        assertRecordsEquals( before, loader::loadNode );\n+        assertRecordsEquals(before, loader::loadNode);\n         long id = before.getId();\n-        if ( !txState.nodeIsAddedInThisTx( id ) )\n+        if (!txState.nodeIsAddedInThisTx(id))\n         {\n-            assertLocked( id, NODE, before );\n+            assertLocked(id, NODE, before);\n         }\n-        if ( txState.nodeIsDeletedInThisTx( id ) )\n+        if (txState.nodeIsDeletedInThisTx(id))\n         {\n-            assertLocked( id, NODE_RELATIONSHIP_GROUP_DELETE, before );\n+            assertLocked(id, NODE_RELATIONSHIP_GROUP_DELETE, before);\n         }\n     }\n \n-    private void verifyRelationshipSufficientlyLocked( RelationshipRecord before )\n+    private void verifyRelationshipSufficientlyLocked(RelationshipRecord before)\n     {\n-        assertRecordsEquals( before, loader::loadRelationship );\n+        assertRecordsEquals(before, loader::loadRelationship);\n         long id = before.getId();\n-        boolean addedInThisTx = txState.relationshipIsAddedInThisTx( id );\n-        checkState( before.inUse() == !addedInThisTx, \"Relationship[%d] inUse:%b, but txState.relationshipIsAddedInThisTx:%b\", id, before.inUse(),\n-                addedInThisTx );\n-        checkRelationship( txState, locks, loader, before );\n+        boolean addedInThisTx = txState.relationshipIsAddedInThisTx(id);\n+        checkState(before.inUse() == !addedInThisTx, \"Relationship[%d] inUse:%b, but txState.relationshipIsAddedInThisTx:%b\", id, before.inUse(),\n+          addedInThisTx);\n+        checkRelationship(txState, locks, loader, before);\n     }\n \n-    private void verifyRelationshipGroupSufficientlyLocked( RelationshipGroupRecord before )\n+    private void verifyRelationshipGroupSufficientlyLocked(RelationshipGroupRecord before)\n     {\n-        assertRecordsEquals( before, loader::loadRelationshipGroup );\n+        assertRecordsEquals(before, loader::loadRelationshipGroup);\n \n         long node = before.getOwningNode();\n-        if ( !txState.nodeIsAddedInThisTx( node ) )\n+        if (!txState.nodeIsAddedInThisTx(node))\n         {\n-            assertLocked( node, RELATIONSHIP_GROUP, before );\n+            assertLocked(node, RELATIONSHIP_GROUP, before);\n         }\n     }\n \n-    private void assertLocked( long id, ResourceType resource, AbstractBaseRecord record )\n+    private void assertLocked(long id, ResourceType resource, AbstractBaseRecord record)\n     {\n-        assertLocked( locks, id, resource, EXCLUSIVE, record );\n+        assertLocked(locks, id, resource, EXCLUSIVE, record);\n     }\n \n-    static void checkRelationship( ReadableTransactionState txState, ResourceLocker locks, StoreLoader loader, RelationshipRecord record )\n+    static void checkRelationship(ReadableTransactionState txState, ResourceLocker locks, StoreLoader loader, RelationshipRecord record)\n     {\n         long id = record.getId();\n-        if ( !txState.relationshipIsAddedInThisTx( id ) && !txState.relationshipIsDeletedInThisTx( id ) )\n+        if (!txState.relationshipIsAddedInThisTx(id) && !txState.relationshipIsDeletedInThisTx(id))\n         {\n             //relationship only modified\n-            assertLocked( locks, id, RELATIONSHIP, EXCLUSIVE, record );\n-        }\n-        else\n+            assertLocked(locks, id, RELATIONSHIP, EXCLUSIVE, record);\n+        } else\n         {\n-            if ( txState.relationshipIsDeletedInThisTx( id ) )\n+            if (txState.relationshipIsDeletedInThisTx(id))\n             {\n-                assertLocked( locks, id, RELATIONSHIP, EXCLUSIVE, record );\n-            }\n-            else\n+                assertLocked(locks, id, RELATIONSHIP, EXCLUSIVE, record);\n+            } else\n             {\n-                checkRelationshipNode( txState, locks, loader, record.getFirstNode() );\n-                checkRelationshipNode( txState, locks, loader, record.getSecondNode() );\n+                checkRelationshipNode(txState, locks, loader, record.getFirstNode());\n+                checkRelationshipNode(txState, locks, loader, record.getSecondNode());\n             }\n         }\n     }\n \n-    private static void checkRelationshipNode( ReadableTransactionState txState, ResourceLocker locks, StoreLoader loader, long nodeId )\n+    private static void checkRelationshipNode(ReadableTransactionState txState, ResourceLocker locks, StoreLoader loader, long nodeId)\n     {\n-        if ( !txState.nodeIsAddedInThisTx( nodeId ) )\n+        if (!txState.nodeIsAddedInThisTx(nodeId))\n         {\n-            NodeRecord node = loader.loadNode( nodeId );\n-            if ( node.inUse() && node.isDense() )\n+            NodeRecord node = loader.loadNode(nodeId);\n+            if (node.inUse() && node.isDense())\n             {\n-                assertLocked( locks, nodeId, NODE_RELATIONSHIP_GROUP_DELETE, SHARED, node );\n-                checkState( hasLock( locks, nodeId, NODE, EXCLUSIVE ) ||\n-                        hasLock( locks, nodeId, NODE_RELATIONSHIP_GROUP_DELETE, SHARED ),\n-                        \"%s modified w/ neither [%s,%s] nor [%s,%s]\", locks, NODE, EXCLUSIVE, NODE_RELATIONSHIP_GROUP_DELETE, SHARED );\n+                assertLocked(locks, nodeId, NODE_RELATIONSHIP_GROUP_DELETE, SHARED, node);\n+                checkState(hasLock(locks, nodeId, NODE, EXCLUSIVE) ||\n+                    hasLock(locks, nodeId, NODE_RELATIONSHIP_GROUP_DELETE, SHARED),\n+                  \"%s modified w/ neither [%s,%s] nor [%s,%s]\", locks, NODE, EXCLUSIVE, NODE_RELATIONSHIP_GROUP_DELETE, SHARED);\n             }\n         }\n     }\n \n-    static void assertLocked( ResourceLocker locks, long id, ResourceType resource, LockType type, AbstractBaseRecord record )\n+    static void assertLocked(ResourceLocker locks, long id, ResourceType resource, LockType type, AbstractBaseRecord record)\n     {\n-        checkState( hasLock( locks, id, resource, type ), \"%s [%s,%s] modified without %s lock, record:%s.\", locks, resource, id, type, record );\n+        checkState(hasLock(locks, id, resource, type), \"%s [%s,%s] modified without %s lock, record:%s.\", locks, resource, id, type, record);\n     }\n \n-    private static boolean hasLock( ResourceLocker locks, long id, ResourceType resource, LockType type )\n+    private static boolean hasLock(ResourceLocker locks, long id, ResourceType resource, LockType type)\n     {\n-        return locks.activeLocks().anyMatch( lock -> lock.resourceId() == id && lock.resourceType() == resource && lock.lockType() == type );\n+        return locks.activeLocks().anyMatch(lock -> lock.resourceId() == id && lock.resourceType() == resource && lock.lockType() == type);\n     }\n \n-    static <RECORD extends AbstractBaseRecord> void assertRecordsEquals( RECORD before, LongFunction<RECORD> loader )\n+    static <RECORD extends AbstractBaseRecord> void assertRecordsEquals(RECORD before, LongFunction<RECORD> loader)\n     {\n-        RECORD stored = loader.apply( before.getId() );\n-        if ( before.inUse() || stored.inUse() )\n+        RECORD stored = loader.apply(before.getId());\n+        if (before.inUse() || stored.inUse())\n         {\n-            checkState( stored.equals( before ),\n-                    \"Record which got marked as changed is not what the store has, i.e. it was read before lock was acquired%nbefore:%s%nstore:%s\",\n-                    before, stored );\n+            checkState(stored.equals(before),\n+              \"Record which got marked as changed is not what the store has, i.e. it was read before lock was acquired%nbefore:%s%nstore:%s\",\n+              before, stored);\n         }\n     }\n \n     public interface Factory\n     {\n-        RecordAccess.LoadMonitor create( ResourceLocker locks, ReadableTransactionState txState, NeoStores neoStores );\n+        RecordAccess.LoadMonitor create(ResourceLocker locks, ReadableTransactionState txState, NeoStores neoStores);\n \n-        static Factory defaultFactory( Config config )\n+        static Factory defaultFactory(Config config)\n         {\n-            boolean enabled = config.get( GraphDatabaseInternalSettings.additional_lock_verification );\n-            return enabled ? ( locks, txState, neoStores ) -> new LockVerificationMonitor( locks, txState, new NeoStoresLoader( neoStores ) ) : IGNORE;\n-        };\n+            boolean enabled = config.get(GraphDatabaseInternalSettings.additional_lock_verification);\n+            return enabled ? (locks, txState, neoStores) -> new LockVerificationMonitor(locks, txState, new NeoStoresLoader(neoStores)) : IGNORE;\n+        }\n+\n+        ;\n \n-        Factory IGNORE = ( locks, txState, neoStores ) -> LoadMonitor.NULL_MONITOR;\n+        Factory IGNORE = (locks, txState, neoStores) -> LoadMonitor.NULL_MONITOR;\n     }\n \n     public interface StoreLoader\n     {\n-        NodeRecord loadNode( long id );\n+        NodeRecord loadNode(long id);\n \n-        RelationshipRecord loadRelationship( long id );\n+        RelationshipRecord loadRelationship(long id);\n \n-        RelationshipGroupRecord loadRelationshipGroup( long id );\n+        RelationshipGroupRecord loadRelationshipGroup(long id);\n     }\n \n     public static class NeoStoresLoader implements StoreLoader\n     {\n         private final NeoStores neoStores;\n \n-        public NeoStoresLoader( NeoStores neoStores )\n+        public NeoStoresLoader(NeoStores neoStores)\n         {\n             this.neoStores = neoStores;\n         }\n \n         @Override\n-        public NodeRecord loadNode( long id )\n+        public NodeRecord loadNode(long id)\n         {\n-            return readRecord( id, neoStores.getNodeStore() );\n+            return readRecord(id, neoStores.getNodeStore());\n         }\n \n         @Override\n-        public RelationshipRecord loadRelationship( long id )\n+        public RelationshipRecord loadRelationship(long id)\n         {\n-            return readRecord( id, neoStores.getRelationshipStore() );\n+            return readRecord(id, neoStores.getRelationshipStore());\n         }\n \n         @Override\n-        public RelationshipGroupRecord loadRelationshipGroup( long id )\n+        public RelationshipGroupRecord loadRelationshipGroup(long id)\n         {\n-            return readRecord( id, neoStores.getRelationshipGroupStore() );\n+            return readRecord(id, neoStores.getRelationshipGroupStore());\n         }\n \n-        private <RECORD extends AbstractBaseRecord> RECORD readRecord( long id, RecordStore<RECORD> store )\n+        private <RECORD extends AbstractBaseRecord> RECORD readRecord(long id, RecordStore<RECORD> store)\n         {\n-            return store.getRecord( id, store.newRecord(), RecordLoad.ALWAYS, PageCursorTracer.NULL );\n+            return store.getRecord(id, store.newRecord(), RecordLoad.ALWAYS, PageCursorTracer.NULL);\n         }\n     }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
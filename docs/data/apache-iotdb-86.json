{
    "project_name": "apache-iotdb",
    "error_id": "86",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.concurrent;\n\nimport java.util.concurrent.ThreadFactory;\nimport java.util.concurrent.atomic.AtomicInteger;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/86/IoTThreadFactory.java\nindex 98505c3bbe4..428769bbbd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/86/IoTThreadFactory.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.concurrent;\n \n import java.util.concurrent.ThreadFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/86/IoTThreadFactory.java\nindex 98505c3bbe4..a2e52f58e62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/86/IoTThreadFactory.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.concurrent;\n \n import java.util.concurrent.ThreadFactory;\n@@ -29,7 +30,9 @@ public class IoTThreadFactory implements ThreadFactory {\n   private final String namePrefix;\n   private Thread.UncaughtExceptionHandler handler = new IoTDBDefaultThreadExceptionHandler();\n \n-  /** Constructor of IoTThreadFactory. */\n+  /**\n+   * Constructor of IoTThreadFactory.\n+   */\n   public IoTThreadFactory(String poolName) {\n     SecurityManager s = System.getSecurityManager();\n     group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup();\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/86/IoTThreadFactory.java\nindex 98505c3bbe4..9c7fe87c8a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/86/IoTThreadFactory.java\n@@ -30,12 +30,17 @@ public class IoTThreadFactory implements ThreadFactory {\n   private Thread.UncaughtExceptionHandler handler = new IoTDBDefaultThreadExceptionHandler();\n \n   /** Constructor of IoTThreadFactory. */\n+\n   public IoTThreadFactory(String poolName) {\n     SecurityManager s = System.getSecurityManager();\n-    group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup();\n+    group = (s != null)\n+? s.getThreadGroup()\n+: Thread.currentThread().getThreadGroup();\n     // thread pool name format : pool-number-IoTDB-poolName-thread-\n-    this.namePrefix =\n-        \"pool-\" + poolNumber.getAndIncrement() + \"-IoTDB\" + \"-\" + poolName + \"-thread-\";\n+    this.namePrefix = \"pool-\" + poolNumber.getAndIncrement()\n+    + \"-IoTDB\"\n+    + \"-\"\n+    + poolName + \"-thread-\";\n   }\n \n   public IoTThreadFactory(String poolName, Thread.UncaughtExceptionHandler handler) {\n@@ -56,4 +61,4 @@ public class IoTThreadFactory implements ThreadFactory {\n     t.setUncaughtExceptionHandler(handler);\n     return t;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/86/IoTThreadFactory.java\nindex 98505c3bbe4..428769bbbd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/86/IoTThreadFactory.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.concurrent;\n \n import java.util.concurrent.ThreadFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/86/IoTThreadFactory.java\nindex 98505c3bbe4..428769bbbd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/86/IoTThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/86/IoTThreadFactory.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.concurrent;\n \n import java.util.concurrent.ThreadFactory;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3791",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "220",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3791/ResourcePool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3791/ResourcePool.java\nindex 05d84e42ee2..8ea369cbfe1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3791/ResourcePool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3791/ResourcePool.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com;\n \n import java.time.Clock;\n@@ -29,217 +30,216 @@ import org.neo4j.time.Clocks;\n \n public abstract class ResourcePool<R>\n {\n-    public interface Monitor<R>\n-    {\n-        void updatedCurrentPeakSize( int currentPeakSize );\n-\n-        void updatedTargetSize( int targetSize );\n+  public interface Monitor<R>\n+  {\n+    void updatedCurrentPeakSize(int currentPeakSize);\n \n-        void created( R resource );\n+    void updatedTargetSize(int targetSize);\n \n-        void acquired( R resource );\n+    void created(R resource);\n \n-        void disposed( R resource );\n+    void acquired(R resource);\n \n-        class Adapter<R> implements Monitor<R>\n-        {\n-            @Override\n-            public void updatedCurrentPeakSize( int currentPeakSize )\n-            {\n-            }\n-\n-            @Override\n-            public void updatedTargetSize( int targetSize )\n-            {\n-            }\n-\n-            @Override\n-            public void created( R resource )\n-            {\n-            }\n-\n-            @Override\n-            public void acquired( R resource )\n-            {\n-            }\n-\n-            @Override\n-            public void disposed( R resource )\n-            {\n-            }\n-        }\n-    }\n+    void disposed(R resource);\n \n-    public interface CheckStrategy\n+    class Adapter<R> implements Monitor<R>\n     {\n-        boolean shouldCheck();\n-\n-        class TimeoutCheckStrategy implements CheckStrategy\n-        {\n-            private final long interval;\n-            private volatile long lastCheckTime;\n-            private final Clock clock;\n-\n-            public TimeoutCheckStrategy( long interval, Clock clock )\n-            {\n-                this.interval = interval;\n-                this.lastCheckTime = clock.millis();\n-                this.clock = clock;\n-            }\n-\n-            @Override\n-            public boolean shouldCheck()\n-            {\n-                long currentTime = clock.millis();\n-                if ( currentTime > lastCheckTime + interval )\n-                {\n-                    lastCheckTime = currentTime;\n-                    return true;\n-                }\n-                return false;\n-            }\n-        }\n+      @Override\n+      public void updatedCurrentPeakSize(int currentPeakSize)\n+      {\n+      }\n+\n+      @Override\n+      public void updatedTargetSize(int targetSize)\n+      {\n+      }\n+\n+      @Override\n+      public void created(R resource)\n+      {\n+      }\n+\n+      @Override\n+      public void acquired(R resource)\n+      {\n+      }\n+\n+      @Override\n+      public void disposed(R resource)\n+      {\n+      }\n     }\n+  }\n \n-    public static final int DEFAULT_CHECK_INTERVAL = 60 * 1000;\n-\n-    // protected for testing\n-    protected final LinkedList<R> unused = new LinkedList<>();\n-    private final Map<Thread,R> current = new ConcurrentHashMap<>();\n-    private final Monitor<R> monitor;\n-    private final int minSize;\n-    private final CheckStrategy checkStrategy;\n-    // Guarded by nothing. Those are estimates, losing some values doesn't matter much\n-    private int currentPeakSize;\n-    private int targetSize;\n+  public interface CheckStrategy\n+  {\n+    boolean shouldCheck();\n \n-    protected ResourcePool( int minSize )\n+    class TimeoutCheckStrategy implements CheckStrategy\n     {\n-        this( minSize, new CheckStrategy.TimeoutCheckStrategy( DEFAULT_CHECK_INTERVAL, Clocks.systemClock() ),\n-                new Monitor.Adapter<>() );\n+      private final long interval;\n+      private volatile long lastCheckTime;\n+      private final Clock clock;\n+\n+      public TimeoutCheckStrategy(long interval, Clock clock)\n+      {\n+        this.interval = interval;\n+        this.lastCheckTime = clock.millis();\n+        this.clock = clock;\n+      }\n+\n+      @Override\n+      public boolean shouldCheck()\n+      {\n+        long currentTime = clock.millis();\n+        if (currentTime > lastCheckTime + interval)\n+        {\n+          lastCheckTime = currentTime;\n+          return true;\n+        }\n+        return false;\n+      }\n     }\n-\n-    protected ResourcePool( int minSize, CheckStrategy strategy, Monitor<R> monitor )\n-    {\n-        this.minSize = minSize;\n-        this.currentPeakSize = 0;\n-        this.targetSize = minSize;\n-        this.checkStrategy = strategy;\n-        this.monitor = monitor;\n-    }\n-\n-    protected abstract R create();\n-\n-    protected void dispose( R resource )\n+  }\n+\n+  public static final int DEFAULT_CHECK_INTERVAL = 60 * 1000;\n+\n+  // protected for testing\n+  protected final LinkedList<R> unused = new LinkedList<>();\n+  private final Map<Thread, R> current = new ConcurrentHashMap<>();\n+  private final Monitor<R> monitor;\n+  private final int minSize;\n+  private final CheckStrategy checkStrategy;\n+  // Guarded by nothing. Those are estimates, losing some values doesn't matter much\n+  private int currentPeakSize;\n+  private int targetSize;\n+\n+  protected ResourcePool(int minSize)\n+  {\n+    this(minSize, new CheckStrategy.TimeoutCheckStrategy(DEFAULT_CHECK_INTERVAL, Clocks.systemClock()),\n+        new Monitor.Adapter<>());\n+  }\n+\n+  protected ResourcePool(int minSize, CheckStrategy strategy, Monitor<R> monitor)\n+  {\n+    this.minSize = minSize;\n+    this.currentPeakSize = 0;\n+    this.targetSize = minSize;\n+    this.checkStrategy = strategy;\n+    this.monitor = monitor;\n+  }\n+\n+  protected abstract R create();\n+\n+  protected void dispose(R resource)\n+  {\n+  }\n+\n+  protected int currentSize()\n+  {\n+    return current.size();\n+  }\n+\n+  protected boolean isAlive(R resource)\n+  {\n+    return true;\n+  }\n+\n+  public final R acquire()\n+  {\n+    Thread thread = Thread.currentThread();\n+    R resource = current.get(thread);\n+    if (resource == null)\n     {\n+      List<R> garbage = null;\n+      synchronized (unused)\n+      {\n+        for (; ; )\n+        {\n+          resource = unused.poll();\n+          if (resource == null)\n+          {\n+            break;\n+          }\n+          if (isAlive(resource))\n+          {\n+            break;\n+          }\n+          if (garbage == null)\n+          {\n+            garbage = new LinkedList<>();\n+          }\n+          garbage.add(resource);\n+        }\n+      }\n+      if (resource == null)\n+      {\n+        resource = create();\n+        monitor.created(resource);\n+      }\n+      current.put(thread, resource);\n+      monitor.acquired(resource);\n+      if (garbage != null)\n+      {\n+        for (R dead : garbage)\n+        {\n+          dispose(dead);\n+          monitor.disposed(dead);\n+        }\n+      }\n     }\n-\n-    protected int currentSize()\n+    currentPeakSize = Math.max(currentPeakSize, current.size());\n+    if (checkStrategy.shouldCheck())\n     {\n-        return current.size();\n+      targetSize = Math.max(minSize, currentPeakSize);\n+      monitor.updatedCurrentPeakSize(currentPeakSize);\n+      currentPeakSize = 0;\n+      monitor.updatedTargetSize(targetSize);\n     }\n \n-    protected boolean isAlive( R resource )\n-    {\n-        return true;\n-    }\n+    return resource;\n+  }\n \n-    public final R acquire()\n+  public final void release()\n+  {\n+    Thread thread = Thread.currentThread();\n+    R resource = current.remove(thread);\n+    if (resource != null)\n     {\n-        Thread thread = Thread.currentThread();\n-        R resource = current.get( thread );\n-        if ( resource == null )\n+      boolean dead = false;\n+      synchronized (unused)\n+      {\n+        if (unused.size() < targetSize)\n         {\n-            List<R> garbage = null;\n-            synchronized ( unused )\n-            {\n-                for (; ; )\n-                {\n-                    resource = unused.poll();\n-                    if ( resource == null )\n-                    {\n-                        break;\n-                    }\n-                    if ( isAlive( resource ) )\n-                    {\n-                        break;\n-                    }\n-                    if ( garbage == null )\n-                    {\n-                        garbage = new LinkedList<>();\n-                    }\n-                    garbage.add( resource );\n-                }\n-            }\n-            if ( resource == null )\n-            {\n-                resource = create();\n-                monitor.created( resource );\n-            }\n-            current.put( thread, resource );\n-            monitor.acquired( resource );\n-            if ( garbage != null )\n-            {\n-                for ( R dead : garbage )\n-                {\n-                    dispose( dead );\n-                    monitor.disposed( dead );\n-                }\n-            }\n-        }\n-        currentPeakSize = Math.max( currentPeakSize, current.size() );\n-        if ( checkStrategy.shouldCheck() )\n+          unused.add(resource);\n+        } else\n         {\n-            targetSize = Math.max( minSize, currentPeakSize );\n-            monitor.updatedCurrentPeakSize( currentPeakSize );\n-            currentPeakSize = 0;\n-            monitor.updatedTargetSize( targetSize );\n+          dead = true;\n         }\n-\n-        return resource;\n+      }\n+      if (dead)\n+      {\n+        dispose(resource);\n+        monitor.disposed(resource);\n+      }\n     }\n+  }\n \n-    public final void release()\n+  public final void close(boolean force)\n+  {\n+    List<R> dead = new LinkedList<>();\n+    synchronized (unused)\n     {\n-        Thread thread = Thread.currentThread();\n-        R resource = current.remove( thread );\n-        if ( resource != null )\n-        {\n-            boolean dead = false;\n-            synchronized ( unused )\n-            {\n-                if ( unused.size() < targetSize )\n-                {\n-                    unused.add( resource );\n-                }\n-                else\n-                {\n-                    dead = true;\n-                }\n-            }\n-            if ( dead )\n-            {\n-                dispose( resource );\n-                monitor.disposed( resource );\n-            }\n-        }\n+      dead.addAll(unused);\n+      unused.clear();\n     }\n-\n-    public final void close( boolean force )\n+    if (force)\n     {\n-        List<R> dead = new LinkedList<>();\n-        synchronized ( unused )\n-        {\n-            dead.addAll( unused );\n-            unused.clear();\n-        }\n-        if ( force )\n-        {\n-            dead.addAll( current.values() );\n-        }\n-        for ( R resource : dead )\n-        {\n-            dispose( resource );\n-        }\n+      dead.addAll(current.values());\n+    }\n+    for (R resource : dead)\n+    {\n+      dispose(resource);\n     }\n+  }\n }\n",
            "diff_size": 298
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3791/ResourcePool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3791/ResourcePool.java\nindex 05d84e42ee2..2b3fdc18fba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3791/ResourcePool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3791/ResourcePool.java\n@@ -91,7 +91,7 @@ public abstract class ResourcePool<R>\n             public boolean shouldCheck()\n             {\n                 long currentTime = clock.millis();\n-                if ( currentTime > lastCheckTime + interval )\n+                if ( currentTime> lastCheckTime + interval )\n                 {\n                     lastCheckTime = currentTime;\n                     return true;\n@@ -115,8 +115,7 @@ public abstract class ResourcePool<R>\n \n     protected ResourcePool( int minSize )\n     {\n-        this( minSize, new CheckStrategy.TimeoutCheckStrategy( DEFAULT_CHECK_INTERVAL, Clocks.systemClock() ),\n-                new Monitor.Adapter<>() );\n+        this( minSize, new CheckStrategy.TimeoutCheckStrategy( DEFAULT_CHECK_INTERVAL, Clocks.systemClock() ), new Monitor.Adapter<>() );\n     }\n \n     protected ResourcePool( int minSize, CheckStrategy strategy, Monitor<R> monitor )\n@@ -160,11 +159,13 @@ public abstract class ResourcePool<R>\n                     {\n                         break;\n                     }\n-                    if ( isAlive( resource ) )\n+\n+if ( isAlive( resource ) )\n                     {\n                         break;\n                     }\n-                    if ( garbage == null )\n+\n+if ( garbage == null )\n                     {\n                         garbage = new LinkedList<>();\n                     }\n@@ -233,7 +234,8 @@ public abstract class ResourcePool<R>\n             dead.addAll( unused );\n             unused.clear();\n         }\n-        if ( force )\n+\n+if ( force )\n         {\n             dead.addAll( current.values() );\n         }\n@@ -242,4 +244,4 @@ public abstract class ResourcePool<R>\n             dispose( resource );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
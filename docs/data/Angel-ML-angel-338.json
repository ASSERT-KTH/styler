{
    "project_name": "Angel-ML-angel",
    "error_id": "338",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import io.netty.buffer.ByteBuf;\n\npublic class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IIntKeyDoubleValuePartOp {\n  /**\n   * Whole key array before serialization, sorted by asc\n   */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/338/RangeViewDoubleValuesPart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/338/RangeViewDoubleValuesPart.java\nindex 977a0377bbd..1740ab44907 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/338/RangeViewDoubleValuesPart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/338/RangeViewDoubleValuesPart.java\n@@ -5,7 +5,8 @@ import com.tencent.angel.ml.matrix.RowType;\n import com.tencent.angel.psagent.matrix.transport.router.operator.IIntKeyDoubleValuePartOp;\n import io.netty.buffer.ByteBuf;\n \n-public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IIntKeyDoubleValuePartOp {\n+public class RangeViewDoubleValuesPart extends RangeKeyValuePart\n+    implements IIntKeyDoubleValuePartOp {\n   /**\n    * Whole key array before serialization, sorted by asc\n    */\n@@ -32,9 +33,9 @@ public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IInt\n \n   @Override\n   public int[] getKeys() {\n-    if(keys == null) {\n+    if (keys == null) {\n       keys = new int[values.length];\n-      for(int i = 0; i < keys.length; i++) {\n+      for (int i = 0; i < keys.length; i++) {\n         keys[i] = i;\n       }\n     }\n@@ -59,7 +60,7 @@ public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IInt\n \n   @Override\n   public int size() {\n-    if(endPos != -1) {\n+    if (endPos != -1) {\n       return endPos - startPos;\n     } else {\n       return keys.length;\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/338/RangeViewDoubleValuesPart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/338/RangeViewDoubleValuesPart.java\nindex 977a0377bbd..354fb31fabc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/338/RangeViewDoubleValuesPart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/338/RangeViewDoubleValuesPart.java\n@@ -34,7 +34,7 @@ public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IInt\n   public int[] getKeys() {\n     if(keys == null) {\n       keys = new int[values.length];\n-      for(int i = 0; i < keys.length; i++) {\n+      for (int i = 0; i < keys.length; i++) {\n         keys[i] = i;\n       }\n     }\n@@ -87,4 +87,4 @@ public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IInt\n   public int bufferLen() {\n     return super.bufferLen() + ByteBufSerdeUtils.serializedDoublesLen(values, startPos, endPos);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/338/RangeViewDoubleValuesPart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/338/RangeViewDoubleValuesPart.java\nindex 977a0377bbd..7b8590fb1e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/338/RangeViewDoubleValuesPart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/338/RangeViewDoubleValuesPart.java\n@@ -9,6 +9,7 @@ public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IInt\n   /**\n    * Whole key array before serialization, sorted by asc\n    */\n+\n   private int[] keys;\n \n   /**\n@@ -16,7 +17,6 @@ public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IInt\n    */\n   private double[] values;\n \n-\n   public RangeViewDoubleValuesPart(int rowId, double[] values, int startPos, int endPos) {\n     super(rowId, startPos, endPos);\n     this.values = values;\n@@ -32,13 +32,12 @@ public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IInt\n \n   @Override\n   public int[] getKeys() {\n-    if(keys == null) {\n+    if (keys == null) {\n       keys = new int[values.length];\n-      for(int i = 0; i < keys.length; i++) {\n+      for (int i = 0; i < keys.length; i++) {\n         keys[i] = i;\n       }\n     }\n-\n     return keys;\n   }\n \n@@ -59,7 +58,7 @@ public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IInt\n \n   @Override\n   public int size() {\n-    if(endPos != -1) {\n+    if (endPos != -1) {\n       return endPos - startPos;\n     } else {\n       return keys.length;\n@@ -87,4 +86,5 @@ public class RangeViewDoubleValuesPart extends RangeKeyValuePart implements IInt\n   public int bufferLen() {\n     return super.bufferLen() + ByteBufSerdeUtils.serializedDoublesLen(values, startPos, endPos);\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "122",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docquery.adapter.proxy;\n\nimport gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/122/AdapterDocQueryProxyNoOpImpl.java\nindex 618dc4bea15..c93361c101e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/122/AdapterDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/122/AdapterDocQueryProxyNoOpImpl.java\nindex 618dc4bea15..43696a7c5de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/122/AdapterDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -39,29 +40,26 @@ import org.apache.log4j.Logger;\n \n /**\n  * @author achidamb\n- *\n  */\n public class AdapterDocQueryProxyNoOpImpl implements AdapterDocQueryProxy {\n-    private static final Logger LOG = Logger.getLogger(AdapterDocQueryProxyNoOpImpl.class);\n+  private static final Logger LOG = Logger.getLogger(AdapterDocQueryProxyNoOpImpl.class);\n \n-    /**\n-     * The respondingGatewayCrossGatewayQuery takes AdhocQueryRequestmessage and assertion and returns\n-     * AdhocQueryResponse. This noop implementation returns AdhocQueryresponse without any document.\n-     *\n-     * @param msg\n-     *            The AdhocQueryRequest message.\n-     * @param assertion\n-     *            Assertion received.\n-     * @return AdhocQueryResponse from Adapter interface.\n-     */\n-    @AdapterDelegationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class,\n-            afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\",\n-            version = \"\")\n-    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion) {\n-        LOG.debug(\"Using NoOp Implementation for Adapter Doc Query Service\");\n-        AdhocQueryResponse response = new AdhocQueryResponse();\n-        response.setRegistryObjectList(new RegistryObjectListType());\n-        response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n-        return response;\n-    }\n+  /**\n+   * The respondingGatewayCrossGatewayQuery takes AdhocQueryRequestmessage and assertion and returns\n+   * AdhocQueryResponse. This noop implementation returns AdhocQueryresponse without any document.\n+   *\n+   * @param msg       The AdhocQueryRequest message.\n+   * @param assertion Assertion received.\n+   * @return AdhocQueryResponse from Adapter interface.\n+   */\n+  @AdapterDelegationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class,\n+      afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\",\n+      version = \"\")\n+  public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion) {\n+    LOG.debug(\"Using NoOp Implementation for Adapter Doc Query Service\");\n+    AdhocQueryResponse response = new AdhocQueryResponse();\n+    response.setRegistryObjectList(new RegistryObjectListType());\n+    response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n+    return response;\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/122/AdapterDocQueryProxyNoOpImpl.java\nindex 618dc4bea15..8b2fa90b978 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/122/AdapterDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -54,14 +55,13 @@ public class AdapterDocQueryProxyNoOpImpl implements AdapterDocQueryProxy {\n      *            Assertion received.\n      * @return AdhocQueryResponse from Adapter interface.\n      */\n-    @AdapterDelegationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class,\n-            afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\",\n-            version = \"\")\n-    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion) {\n+    @AdapterDelegationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class, afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\", version = \"\")\n+public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion) {\n         LOG.debug(\"Using NoOp Implementation for Adapter Doc Query Service\");\n         AdhocQueryResponse response = new AdhocQueryResponse();\n         response.setRegistryObjectList(new RegistryObjectListType());\n         response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n-        return response;\n+\n+return response;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/122/AdapterDocQueryProxyNoOpImpl.java\nindex 618dc4bea15..5ec0daf1aa6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/122/AdapterDocQueryProxyNoOpImpl.java\n@@ -34,14 +34,16 @@ import gov.hhs.fha.nhinc.document.DocumentConstants;\n import oasis.names.tc.ebxml_regrep.xsd.query._3.AdhocQueryRequest;\n import oasis.names.tc.ebxml_regrep.xsd.query._3.AdhocQueryResponse;\n import oasis.names.tc.ebxml_regrep.xsd.rim._3.RegistryObjectListType;\n-\n import org.apache.log4j.Logger;\n \n /**\n  * @author achidamb\n  *\n  */\n+\n+\n public class AdapterDocQueryProxyNoOpImpl implements AdapterDocQueryProxy {\n+\n     private static final Logger LOG = Logger.getLogger(AdapterDocQueryProxyNoOpImpl.class);\n \n     /**\n@@ -54,9 +56,9 @@ public class AdapterDocQueryProxyNoOpImpl implements AdapterDocQueryProxy {\n      *            Assertion received.\n      * @return AdhocQueryResponse from Adapter interface.\n      */\n-    @AdapterDelegationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class,\n-            afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\",\n-            version = \"\")\n+\n+\n+    @AdapterDelegationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class, afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\", version = \"\")\n     public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion) {\n         LOG.debug(\"Using NoOp Implementation for Adapter Doc Query Service\");\n         AdhocQueryResponse response = new AdhocQueryResponse();\n@@ -64,4 +66,5 @@ public class AdapterDocQueryProxyNoOpImpl implements AdapterDocQueryProxy {\n         response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n         return response;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/122/AdapterDocQueryProxyNoOpImpl.java\nindex 618dc4bea15..bf313b152e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/122/AdapterDocQueryProxyNoOpImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docquery.adapter.proxy;\n-\n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.docquery.aspect.AdhocQueryRequestDescriptionBuilder;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/122/AdapterDocQueryProxyNoOpImpl.java\nindex 618dc4bea15..c93361c101e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/122/AdapterDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/122/AdapterDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
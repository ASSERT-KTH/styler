{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2148",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "6",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2148/UserFunctionProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2148/UserFunctionProcessor.java\nindex 83a6a9afc7b..ac95ad59e12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2148/UserFunctionProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2148/UserFunctionProcessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure;\n \n import com.google.auto.service.AutoService;\n@@ -35,29 +36,29 @@ import org.neo4j.tooling.procedure.visitors.UserFunctionVisitor;\n \n import static org.neo4j.tooling.procedure.CompilerOptions.IGNORE_CONTEXT_WARNINGS_OPTION;\n \n-@AutoService( Processor.class )\n+@AutoService(Processor.class)\n public class UserFunctionProcessor extends DuplicationAwareBaseProcessor<UserFunction>\n {\n \n-    private static final Class<UserFunction> SUPPORTED_ANNOTATION_TYPE = UserFunction.class;\n+  private static final Class<UserFunction> SUPPORTED_ANNOTATION_TYPE = UserFunction.class;\n \n-    public UserFunctionProcessor()\n-    {\n-        super( SUPPORTED_ANNOTATION_TYPE, customNameExtractor(), processingEnvironment ->\n-        {\n-            Elements elementUtils = processingEnvironment.getElementUtils();\n-            Types typeUtils = processingEnvironment.getTypeUtils();\n-            TypeMirrorUtils typeMirrorUtils = new TypeMirrorUtils( typeUtils, elementUtils );\n-\n-            return new UserFunctionVisitor(\n-                    new FunctionVisitor<>( SUPPORTED_ANNOTATION_TYPE, typeUtils, elementUtils, typeMirrorUtils,\n-                            customNameExtractor(),\n-                            processingEnvironment.getOptions().containsKey( IGNORE_CONTEXT_WARNINGS_OPTION ) ) );\n-        } );\n-    }\n-\n-    private static Function<UserFunction,Optional<String>> customNameExtractor()\n+  public UserFunctionProcessor()\n+  {\n+    super(SUPPORTED_ANNOTATION_TYPE, customNameExtractor(), processingEnvironment ->\n     {\n-        return function -> CustomNameExtractor.getName( function::name, function::value );\n-    }\n+      Elements elementUtils = processingEnvironment.getElementUtils();\n+      Types typeUtils = processingEnvironment.getTypeUtils();\n+      TypeMirrorUtils typeMirrorUtils = new TypeMirrorUtils(typeUtils, elementUtils);\n+\n+      return new UserFunctionVisitor(\n+          new FunctionVisitor<>(SUPPORTED_ANNOTATION_TYPE, typeUtils, elementUtils, typeMirrorUtils,\n+              customNameExtractor(),\n+              processingEnvironment.getOptions().containsKey(IGNORE_CONTEXT_WARNINGS_OPTION)));\n+    });\n+  }\n+\n+  private static Function<UserFunction, Optional<String>> customNameExtractor()\n+  {\n+    return function -> CustomNameExtractor.getName(function::name, function::value);\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2148/UserFunctionProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2148/UserFunctionProcessor.java\nindex 83a6a9afc7b..b7bebff182d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2148/UserFunctionProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2148/UserFunctionProcessor.java\n@@ -38,7 +38,6 @@ import static org.neo4j.tooling.procedure.CompilerOptions.IGNORE_CONTEXT_WARNING\n @AutoService( Processor.class )\n public class UserFunctionProcessor extends DuplicationAwareBaseProcessor<UserFunction>\n {\n-\n     private static final Class<UserFunction> SUPPORTED_ANNOTATION_TYPE = UserFunction.class;\n \n     public UserFunctionProcessor()\n@@ -48,16 +47,13 @@ public class UserFunctionProcessor extends DuplicationAwareBaseProcessor<UserFun\n             Elements elementUtils = processingEnvironment.getElementUtils();\n             Types typeUtils = processingEnvironment.getTypeUtils();\n             TypeMirrorUtils typeMirrorUtils = new TypeMirrorUtils( typeUtils, elementUtils );\n-\n-            return new UserFunctionVisitor(\n-                    new FunctionVisitor<>( SUPPORTED_ANNOTATION_TYPE, typeUtils, elementUtils, typeMirrorUtils,\n-                            customNameExtractor(),\n-                            processingEnvironment.getOptions().containsKey( IGNORE_CONTEXT_WARNINGS_OPTION ) ) );\n-        } );\n+return new UserFunctionVisitor( new FunctionVisitor<>( SUPPORTED_ANNOTATION_TYPE, typeUtils, elementUtils, typeMirrorUtils,\n+                            customNameExtractor(), processingEnvironment.getOptions().containsKey( IGNORE_CONTEXT_WARNINGS_OPTION ) ) );\n+    } );\n     }\n \n     private static Function<UserFunction,Optional<String>> customNameExtractor()\n     {\n         return function -> CustomNameExtractor.getName( function::name, function::value );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
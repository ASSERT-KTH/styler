{
    "project_name": "neo4j-neo4j",
    "error_id": "538",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/538/MapCachingDatabaseIdRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/538/MapCachingDatabaseIdRepository.java\nindex d7cacab6beb..58f51b97ec0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/538/MapCachingDatabaseIdRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/538/MapCachingDatabaseIdRepository.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.database;\n \n import java.util.Map;\n@@ -27,13 +28,13 @@ import org.neo4j.configuration.helpers.NormalizedDatabaseName;\n \n public class MapCachingDatabaseIdRepository implements DatabaseIdRepository.Caching\n {\n-    private static final Optional<NamedDatabaseId> OPT_SYS_DB = Optional.of( NAMED_SYSTEM_DATABASE_ID );\n+    private static final Optional<NamedDatabaseId> OPT_SYS_DB = Optional.of(NAMED_SYSTEM_DATABASE_ID);\n \n     private final DatabaseIdRepository delegate;\n-    private final Map<String,NamedDatabaseId> databaseIdsByName;\n-    private final Map<DatabaseId,NamedDatabaseId> databaseIdsByUuid;\n+    private final Map<String, NamedDatabaseId> databaseIdsByName;\n+    private final Map<DatabaseId, NamedDatabaseId> databaseIdsByUuid;\n \n-    public MapCachingDatabaseIdRepository( DatabaseIdRepository delegate )\n+    public MapCachingDatabaseIdRepository(DatabaseIdRepository delegate)\n     {\n         this.delegate = delegate;\n         this.databaseIdsByName = new ConcurrentHashMap<>();\n@@ -41,40 +42,40 @@ public class MapCachingDatabaseIdRepository implements DatabaseIdRepository.Cach\n     }\n \n     @Override\n-    public Optional<NamedDatabaseId> getByName( NormalizedDatabaseName databaseName )\n+    public Optional<NamedDatabaseId> getByName(NormalizedDatabaseName databaseName)\n     {\n-        if ( NAMED_SYSTEM_DATABASE_ID.name().equals( databaseName.name() ) )\n+        if (NAMED_SYSTEM_DATABASE_ID.name().equals(databaseName.name()))\n         {\n             return OPT_SYS_DB;\n         }\n         return Optional.ofNullable(\n-                databaseIdsByName.computeIfAbsent( databaseName.name(), name -> delegate.getByName( name ).orElse( null ) )\n+          databaseIdsByName.computeIfAbsent(databaseName.name(), name -> delegate.getByName(name).orElse(null))\n         );\n     }\n \n     @Override\n-    public Optional<NamedDatabaseId> getById( DatabaseId uuid )\n+    public Optional<NamedDatabaseId> getById(DatabaseId uuid)\n     {\n-        if ( NAMED_SYSTEM_DATABASE_ID.databaseId().equals( uuid ) )\n+        if (NAMED_SYSTEM_DATABASE_ID.databaseId().equals(uuid))\n         {\n             return OPT_SYS_DB;\n         }\n         return Optional.ofNullable(\n-                databaseIdsByUuid.computeIfAbsent( uuid, id -> delegate.getById( id ).orElse( null ) )\n+          databaseIdsByUuid.computeIfAbsent(uuid, id -> delegate.getById(id).orElse(null))\n         );\n     }\n \n     @Override\n-    public void invalidate( NamedDatabaseId namedDatabaseId )\n+    public void invalidate(NamedDatabaseId namedDatabaseId)\n     {\n-        databaseIdsByName.remove( namedDatabaseId.name() );\n-        databaseIdsByUuid.remove( namedDatabaseId.databaseId() );\n+        databaseIdsByName.remove(namedDatabaseId.name());\n+        databaseIdsByUuid.remove(namedDatabaseId.databaseId());\n     }\n \n     @Override\n-    public void cache( NamedDatabaseId namedDatabaseId )\n+    public void cache(NamedDatabaseId namedDatabaseId)\n     {\n-        this.databaseIdsByName.put( namedDatabaseId.name(), namedDatabaseId );\n-        this.databaseIdsByUuid.put( namedDatabaseId.databaseId(), namedDatabaseId );\n+        this.databaseIdsByName.put(namedDatabaseId.name(), namedDatabaseId);\n+        this.databaseIdsByUuid.put(namedDatabaseId.databaseId(), namedDatabaseId);\n     }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/538/MapCachingDatabaseIdRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/538/MapCachingDatabaseIdRepository.java\nindex d7cacab6beb..fc26e41d57e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/538/MapCachingDatabaseIdRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/538/MapCachingDatabaseIdRepository.java\n@@ -77,4 +77,4 @@ public class MapCachingDatabaseIdRepository implements DatabaseIdRepository.Cach\n         this.databaseIdsByName.put( namedDatabaseId.name(), namedDatabaseId );\n         this.databaseIdsByUuid.put( namedDatabaseId.databaseId(), namedDatabaseId );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
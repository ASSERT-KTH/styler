{
    "project_name": "StevenLooman-sonar-magik",
    "error_id": "31",
    "information": {
        "errors": [
            {
                "line": "17",
                "column": "20",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    MagikCheck check = new SyntaxErrorCheck();\n    String code =\n        \"_block\\n\" +\n        \"_endbloc\";\n    List<MagikIssue> issues = runCheck(code, check);\n    assertThat(issues).isNotEmpty();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler/31/SyntaxErrorCheckTest.java\nindex e5a7418bc30..3318de8f276 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler/31/SyntaxErrorCheckTest.java\n@@ -14,8 +14,7 @@ public class SyntaxErrorCheckTest extends MagikCheckTestBase {\n   public void testSyntaxError() {\n     MagikCheck check = new SyntaxErrorCheck();\n     String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+        \"_block\\n\" + \"_endbloc\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "17",
                    "column": "20",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/31/SyntaxErrorCheckTest.java\nindex e5a7418bc30..c53688a3bdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/31/SyntaxErrorCheckTest.java\n@@ -15,7 +15,7 @@ public class SyntaxErrorCheckTest extends MagikCheckTestBase {\n     MagikCheck check = new SyntaxErrorCheck();\n     String code =\n         \"_block\\n\" +\n-        \"_endbloc\";\n+            \"_endbloc\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/31/SyntaxErrorCheckTest.java\nindex e5a7418bc30..c1f88bfd9a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/31/SyntaxErrorCheckTest.java\n@@ -14,8 +14,7 @@ public class SyntaxErrorCheckTest extends MagikCheckTestBase {\n   public void testSyntaxError() {\n     MagikCheck check = new SyntaxErrorCheck();\n     String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+        \"_block\\n\" + \"_endbloc\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n@@ -29,4 +28,4 @@ public class SyntaxErrorCheckTest extends MagikCheckTestBase {\n     assertThat(issues).isNotEmpty();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/31/SyntaxErrorCheckTest.java\nindex e5a7418bc30..11427be3bf8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/31/SyntaxErrorCheckTest.java\n@@ -1,21 +1,16 @@\n package org.stevenlooman.sw.magik.checks;\n \n import static org.fest.assertions.Assertions.assertThat;\n-\n import org.junit.Test;\n import org.stevenlooman.sw.magik.MagikCheck;\n import org.stevenlooman.sw.magik.MagikIssue;\n-\n import java.util.List;\n \n public class SyntaxErrorCheckTest extends MagikCheckTestBase {\n-\n   @Test\n   public void testSyntaxError() {\n     MagikCheck check = new SyntaxErrorCheck();\n-    String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+    String code = \"_block\\n\" + \"_endbloc\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n@@ -23,10 +18,8 @@ public class SyntaxErrorCheckTest extends MagikCheckTestBase {\n   @Test\n   public void testSytnaxError2() {\n     MagikCheck check = new SyntaxErrorCheck();\n-    String code =\n-        \"_method\";\n+    String code = \"_method\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "17",
                    "column": "20",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/31/SyntaxErrorCheckTest.java\nindex e5a7418bc30..3318de8f276 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/31/SyntaxErrorCheckTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/31/SyntaxErrorCheckTest.java\n@@ -14,8 +14,7 @@ public class SyntaxErrorCheckTest extends MagikCheckTestBase {\n   public void testSyntaxError() {\n     MagikCheck check = new SyntaxErrorCheck();\n     String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+        \"_block\\n\" + \"_endbloc\";\n     List<MagikIssue> issues = runCheck(code, check);\n     assertThat(issues).isNotEmpty();\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "854",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "76",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/854/RelationshipCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/854/RelationshipCursor.java\nindex 132814f5f83..2eddea14d54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/854/RelationshipCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/854/RelationshipCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.neo4j.internal.kernel.api.NodeCursor;\n@@ -27,137 +28,136 @@ import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n \n abstract class RelationshipCursor extends RelationshipRecord implements RelationshipDataAccessor, RelationshipVisitor<RuntimeException>\n {\n-    private boolean hasChanges;\n-    private boolean checkHasChanges;\n-    private PropertyCursor propertyCursor;\n-    final DefaultCursors pool;\n-    Read read;\n-\n-    RelationshipCursor( DefaultCursors pool )\n-    {\n-        super( NO_ID );\n-        this.pool = pool;\n-    }\n-\n-    protected void init( Read read )\n-    {\n-        this.read = read;\n-        this.checkHasChanges = true;\n-    }\n-\n-    @Override\n-    public long relationshipReference()\n-    {\n-        return getId();\n-    }\n-\n-    @Override\n-    public int type()\n-    {\n-        return getType();\n-    }\n-\n-    @Override\n-    public boolean hasProperties()\n-    {\n-        if ( read.hasTxStateWithChanges() )\n-        {\n-            PropertyCursor cursor = propertyCursor();\n-            properties( cursor );\n-            return cursor.next();\n-        }\n-        else\n-        {\n-            return nextProp != DefaultPropertyCursor.NO_ID;\n-        }\n-    }\n-\n-    @Override\n-    public void source( NodeCursor cursor )\n-    {\n-        read.singleNode( sourceNodeReference(), cursor );\n-    }\n-\n-    @Override\n-    public void target( NodeCursor cursor )\n-    {\n-        read.singleNode( targetNodeReference(), cursor );\n-    }\n-\n-    @Override\n-    public void properties( PropertyCursor cursor )\n-    {\n-        read.relationshipProperties( relationshipReference(), propertiesReference(), cursor );\n-    }\n-\n-    @Override\n-    public long sourceNodeReference()\n-    {\n-        return getFirstNode();\n-    }\n-\n-    @Override\n-    public long targetNodeReference()\n-    {\n-        return getSecondNode();\n-    }\n-\n-    @Override\n-    public long propertiesReference()\n-    {\n-        return getNextProp();\n-    }\n-\n-    protected abstract void collectAddedTxStateSnapshot();\n-\n-    /**\n-     * RelationshipCursor should only see changes that are there from the beginning\n-     * otherwise it will not be stable.\n-     */\n-    protected boolean hasChanges()\n-    {\n-        if ( checkHasChanges )\n-        {\n-            hasChanges = read.hasTxStateWithChanges();\n-            if ( hasChanges )\n-            {\n-                collectAddedTxStateSnapshot();\n-            }\n-            checkHasChanges = false;\n-        }\n-\n-        return hasChanges;\n-    }\n-\n-    // Load transaction state using RelationshipVisitor\n-    void loadFromTxState( long reference )\n-    {\n-        read.txState().relationshipVisit( reference, this );\n-    }\n-\n-    // used to visit transaction state\n-    @Override\n-    public void visit( long relationshipId, int typeId, long startNodeId, long endNodeId )\n-    {\n-        setId( relationshipId );\n-        initialize( true, NO_ID, startNodeId, endNodeId, typeId, NO_ID, NO_ID, NO_ID, NO_ID, false, false );\n-    }\n-\n-    private PropertyCursor propertyCursor()\n-    {\n-        if ( propertyCursor == null )\n-        {\n-            propertyCursor = pool.allocatePropertyCursor();\n-        }\n-        return propertyCursor;\n-    }\n-\n-    void close()\n-    {\n-        if ( propertyCursor != null )\n-        {\n-            propertyCursor.close();\n-            propertyCursor = null;\n-        }\n-    }\n+  private boolean hasChanges;\n+  private boolean checkHasChanges;\n+  private PropertyCursor propertyCursor;\n+  final DefaultCursors pool;\n+  Read read;\n+\n+  RelationshipCursor(DefaultCursors pool)\n+  {\n+    super(NO_ID);\n+    this.pool = pool;\n+  }\n+\n+  protected void init(Read read)\n+  {\n+    this.read = read;\n+    this.checkHasChanges = true;\n+  }\n+\n+  @Override\n+  public long relationshipReference()\n+  {\n+    return getId();\n+  }\n+\n+  @Override\n+  public int type()\n+  {\n+    return getType();\n+  }\n+\n+  @Override\n+  public boolean hasProperties()\n+  {\n+    if (read.hasTxStateWithChanges())\n+    {\n+      PropertyCursor cursor = propertyCursor();\n+      properties(cursor);\n+      return cursor.next();\n+    } else\n+    {\n+      return nextProp != DefaultPropertyCursor.NO_ID;\n+    }\n+  }\n+\n+  @Override\n+  public void source(NodeCursor cursor)\n+  {\n+    read.singleNode(sourceNodeReference(), cursor);\n+  }\n+\n+  @Override\n+  public void target(NodeCursor cursor)\n+  {\n+    read.singleNode(targetNodeReference(), cursor);\n+  }\n+\n+  @Override\n+  public void properties(PropertyCursor cursor)\n+  {\n+    read.relationshipProperties(relationshipReference(), propertiesReference(), cursor);\n+  }\n+\n+  @Override\n+  public long sourceNodeReference()\n+  {\n+    return getFirstNode();\n+  }\n+\n+  @Override\n+  public long targetNodeReference()\n+  {\n+    return getSecondNode();\n+  }\n+\n+  @Override\n+  public long propertiesReference()\n+  {\n+    return getNextProp();\n+  }\n+\n+  protected abstract void collectAddedTxStateSnapshot();\n+\n+  /**\n+   * RelationshipCursor should only see changes that are there from the beginning\n+   * otherwise it will not be stable.\n+   */\n+  protected boolean hasChanges()\n+  {\n+    if (checkHasChanges)\n+    {\n+      hasChanges = read.hasTxStateWithChanges();\n+      if (hasChanges)\n+      {\n+        collectAddedTxStateSnapshot();\n+      }\n+      checkHasChanges = false;\n+    }\n+\n+    return hasChanges;\n+  }\n+\n+  // Load transaction state using RelationshipVisitor\n+  void loadFromTxState(long reference)\n+  {\n+    read.txState().relationshipVisit(reference, this);\n+  }\n+\n+  // used to visit transaction state\n+  @Override\n+  public void visit(long relationshipId, int typeId, long startNodeId, long endNodeId)\n+  {\n+    setId(relationshipId);\n+    initialize(true, NO_ID, startNodeId, endNodeId, typeId, NO_ID, NO_ID, NO_ID, NO_ID, false, false);\n+  }\n+\n+  private PropertyCursor propertyCursor()\n+  {\n+    if (propertyCursor == null)\n+    {\n+      propertyCursor = pool.allocatePropertyCursor();\n+    }\n+    return propertyCursor;\n+  }\n+\n+  void close()\n+  {\n+    if (propertyCursor != null)\n+    {\n+      propertyCursor.close();\n+      propertyCursor = null;\n+    }\n+  }\n }\n",
            "diff_size": 134
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1516",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientlocationquery.audit.transform;\n\nimport com.services.nhinc.schema.auditmessage.AuditMessageType;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1516/PatientLocationQueryAuditTransforms.java\nindex 6548703517f..94640fd4490 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1516/PatientLocationQueryAuditTransforms.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.patientlocationquery.audit.transform;\n-\n import com.services.nhinc.schema.auditmessage.AuditMessageType;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.patientdiscovery.audit.transform.PatientDiscoveryAuditTransforms;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1516/PatientLocationQueryAuditTransforms.java\nindex 6548703517f..e7b7c7e90fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1516/PatientLocationQueryAuditTransforms.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientlocationquery.audit.transform;\n \n import com.services.nhinc.schema.auditmessage.AuditMessageType;\n@@ -43,36 +44,39 @@ import org.slf4j.LoggerFactory;\n public class PatientLocationQueryAuditTransforms extends\n     AbstractPatientLocationQueryAuditTransforms<PatientLocationQueryRequestType, PatientLocationQueryResponseType> {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(PatientDiscoveryAuditTransforms.class);\n-\n-    @Override\n-    protected AuditMessageType getParticipantObjectIdentificationForRequest(PatientLocationQueryRequestType request,\n-        AssertionType assertion, AuditMessageType auditMsg) {\n+  private static final Logger LOG = LoggerFactory.getLogger(PatientDiscoveryAuditTransforms.class);\n \n-        getPatientParticipantObjectIdentificationForRequest(request, auditMsg);\n-        try {\n-            getQueryParamsParticipantObjectIdentificationForRequest(request, auditMsg);\n-        } catch (JAXBException ex) {\n-            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\",\n-                ex.getLocalizedMessage(), ex);\n-        }\n+  @Override\n+  protected AuditMessageType getParticipantObjectIdentificationForRequest(PatientLocationQueryRequestType request,\n+                                                                          AssertionType assertion,\n+                                                                          AuditMessageType auditMsg) {\n \n-        return auditMsg;\n+    getPatientParticipantObjectIdentificationForRequest(request, auditMsg);\n+    try {\n+      getQueryParamsParticipantObjectIdentificationForRequest(request, auditMsg);\n+    } catch (JAXBException ex) {\n+      LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\",\n+          ex.getLocalizedMessage(), ex);\n     }\n \n-    @Override\n-    protected AuditMessageType getParticipantObjectIdentificationForResponse(PatientLocationQueryRequestType request,\n-        PatientLocationQueryResponseType response, AssertionType assertion, AuditMessageType auditMsg) {\n+    return auditMsg;\n+  }\n \n-        getPatientParticipantObjectIdentificationForResponse(response, auditMsg);\n+  @Override\n+  protected AuditMessageType getParticipantObjectIdentificationForResponse(PatientLocationQueryRequestType request,\n+                                                                           PatientLocationQueryResponseType response,\n+                                                                           AssertionType assertion,\n+                                                                           AuditMessageType auditMsg) {\n \n-        try {\n-            getQueryParamsParticipantObjectIdentificationForRequest(request, auditMsg);\n-        } catch (JAXBException ex) {\n-            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\",\n-                ex.getLocalizedMessage(), ex);\n-        }\n+    getPatientParticipantObjectIdentificationForResponse(response, auditMsg);\n \n-        return auditMsg;\n+    try {\n+      getQueryParamsParticipantObjectIdentificationForRequest(request, auditMsg);\n+    } catch (JAXBException ex) {\n+      LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\",\n+          ex.getLocalizedMessage(), ex);\n     }\n+\n+    return auditMsg;\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1516/PatientLocationQueryAuditTransforms.java\nindex 6548703517f..a3f1577b152 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1516/PatientLocationQueryAuditTransforms.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientlocationquery.audit.transform;\n \n import com.services.nhinc.schema.auditmessage.AuditMessageType;\n@@ -41,21 +42,19 @@ import org.slf4j.LoggerFactory;\n  * @author tran tang\n  */\n public class PatientLocationQueryAuditTransforms extends\n-    AbstractPatientLocationQueryAuditTransforms<PatientLocationQueryRequestType, PatientLocationQueryResponseType> {\n+        AbstractPatientLocationQueryAuditTransforms<PatientLocationQueryRequestType, PatientLocationQueryResponseType> {\n \n     private static final Logger LOG = LoggerFactory.getLogger(PatientDiscoveryAuditTransforms.class);\n \n     @Override\n     protected AuditMessageType getParticipantObjectIdentificationForRequest(PatientLocationQueryRequestType request,\n         AssertionType assertion, AuditMessageType auditMsg) {\n-\n-        getPatientParticipantObjectIdentificationForRequest(request, auditMsg);\n+    getPatientParticipantObjectIdentificationForRequest(request, auditMsg);\n         try {\n             getQueryParamsParticipantObjectIdentificationForRequest(request, auditMsg);\n         } catch (JAXBException ex) {\n-            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\",\n-                ex.getLocalizedMessage(), ex);\n-        }\n+            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\", ex.getLocalizedMessage(), ex);\n+    }\n \n         return auditMsg;\n     }\n@@ -63,16 +62,13 @@ public class PatientLocationQueryAuditTransforms extends\n     @Override\n     protected AuditMessageType getParticipantObjectIdentificationForResponse(PatientLocationQueryRequestType request,\n         PatientLocationQueryResponseType response, AssertionType assertion, AuditMessageType auditMsg) {\n-\n-        getPatientParticipantObjectIdentificationForResponse(response, auditMsg);\n-\n-        try {\n+    getPatientParticipantObjectIdentificationForResponse(response, auditMsg);\n+try {\n             getQueryParamsParticipantObjectIdentificationForRequest(request, auditMsg);\n         } catch (JAXBException ex) {\n-            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\",\n-                ex.getLocalizedMessage(), ex);\n-        }\n+            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\", ex.getLocalizedMessage(), ex);\n+    }\n \n         return auditMsg;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1516/PatientLocationQueryAuditTransforms.java\nindex 6548703517f..a03748ec613 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1516/PatientLocationQueryAuditTransforms.java\n@@ -40,39 +40,38 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author tran tang\n  */\n+\n+\n public class PatientLocationQueryAuditTransforms extends\n     AbstractPatientLocationQueryAuditTransforms<PatientLocationQueryRequestType, PatientLocationQueryResponseType> {\n \n     private static final Logger LOG = LoggerFactory.getLogger(PatientDiscoveryAuditTransforms.class);\n \n+\n     @Override\n     protected AuditMessageType getParticipantObjectIdentificationForRequest(PatientLocationQueryRequestType request,\n         AssertionType assertion, AuditMessageType auditMsg) {\n-\n         getPatientParticipantObjectIdentificationForRequest(request, auditMsg);\n         try {\n             getQueryParamsParticipantObjectIdentificationForRequest(request, auditMsg);\n         } catch (JAXBException ex) {\n-            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\",\n-                ex.getLocalizedMessage(), ex);\n+            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\", ex.getLocalizedMessage(), ex);\n         }\n-\n         return auditMsg;\n     }\n \n+\n     @Override\n     protected AuditMessageType getParticipantObjectIdentificationForResponse(PatientLocationQueryRequestType request,\n-        PatientLocationQueryResponseType response, AssertionType assertion, AuditMessageType auditMsg) {\n-\n+        PatientLocationQueryResponseType response,\n+        AssertionType assertion, AuditMessageType auditMsg) {\n         getPatientParticipantObjectIdentificationForResponse(response, auditMsg);\n-\n         try {\n             getQueryParamsParticipantObjectIdentificationForRequest(request, auditMsg);\n         } catch (JAXBException ex) {\n-            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\",\n-                ex.getLocalizedMessage(), ex);\n+            LOG.error(\"Error while creating ParticipantObjectIdentificationQueryByParameters segment : {}\", ex.getLocalizedMessage(), ex);\n         }\n-\n         return auditMsg;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1516/PatientLocationQueryAuditTransforms.java\nindex 6548703517f..94640fd4490 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1516/PatientLocationQueryAuditTransforms.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1516/PatientLocationQueryAuditTransforms.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.patientlocationquery.audit.transform;\n-\n import com.services.nhinc.schema.auditmessage.AuditMessageType;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.patientdiscovery.audit.transform.PatientDiscoveryAuditTransforms;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
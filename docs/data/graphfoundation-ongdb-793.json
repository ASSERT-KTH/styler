{
    "project_name": "graphfoundation-ongdb",
    "error_id": "793",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/793/EagerParserChunker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/793/EagerParserChunker.java\nindex 0e5bdec0536..4919dc389da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/793/EagerParserChunker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/793/EagerParserChunker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input.csv;\n \n import java.io.IOException;\n@@ -37,53 +38,53 @@ import static org.neo4j.csv.reader.CharSeekers.charSeeker;\n  */\n public class EagerParserChunker implements Chunker\n {\n-    private final CharSeeker seeker;\n-    private final CsvInputParser parser;\n-    private final int chunkSize;\n-    private final Decorator decorator;\n+  private final CharSeeker seeker;\n+  private final CsvInputParser parser;\n+  private final int chunkSize;\n+  private final Decorator decorator;\n \n-    public EagerParserChunker( CharReadable reader, IdType idType, Header header, Collector badCollector, Extractors extractors,\n-            int chunkSize, Configuration config, Decorator decorator )\n-    {\n-        this.chunkSize = chunkSize;\n-        this.decorator = decorator;\n-        this.seeker = charSeeker( reader, config, true );\n-        this.parser = new CsvInputParser( seeker, config.delimiter(), idType, header, badCollector, extractors );\n-    }\n-\n-    @Override\n-    public boolean nextChunk( Chunk chunk ) throws IOException\n-    {\n-        InputEntityArray entities = new InputEntityArray( chunkSize );\n-        InputEntityVisitor decorated = decorator.apply( entities );\n-        int cursor = 0;\n-        for ( ; cursor < chunkSize && parser.next( decorated ); cursor++ )\n-        {   // just loop through and parse\n-        }\n+  public EagerParserChunker(CharReadable reader, IdType idType, Header header, Collector badCollector, Extractors extractors,\n+                            int chunkSize, Configuration config, Decorator decorator)\n+  {\n+    this.chunkSize = chunkSize;\n+    this.decorator = decorator;\n+    this.seeker = charSeeker(reader, config, true);\n+    this.parser = new CsvInputParser(seeker, config.delimiter(), idType, header, badCollector, extractors);\n+  }\n \n-        if ( cursor > 0 )\n-        {\n-            ((EagerCsvInputChunk)chunk).initialize( entities.toArray() );\n-            return true;\n-        }\n-        return false;\n+  @Override\n+  public boolean nextChunk(Chunk chunk) throws IOException\n+  {\n+    InputEntityArray entities = new InputEntityArray(chunkSize);\n+    InputEntityVisitor decorated = decorator.apply(entities);\n+    int cursor = 0;\n+    for (; cursor < chunkSize && parser.next(decorated); cursor++)\n+    {   // just loop through and parse\n     }\n \n-    @Override\n-    public long position()\n+    if (cursor > 0)\n     {\n-        return seeker.position();\n+      ((EagerCsvInputChunk) chunk).initialize(entities.toArray());\n+      return true;\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public void close() throws IOException\n-    {\n-        parser.close();\n-    }\n+  @Override\n+  public long position()\n+  {\n+    return seeker.position();\n+  }\n \n-    @Override\n-    public Chunk newChunk()\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n+  @Override\n+  public void close() throws IOException\n+  {\n+    parser.close();\n+  }\n+\n+  @Override\n+  public Chunk newChunk()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/793/EagerParserChunker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/793/EagerParserChunker.java\nindex 0e5bdec0536..f738b28ac59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/793/EagerParserChunker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/793/EagerParserChunker.java\n@@ -42,8 +42,7 @@ public class EagerParserChunker implements Chunker\n     private final int chunkSize;\n     private final Decorator decorator;\n \n-    public EagerParserChunker( CharReadable reader, IdType idType, Header header, Collector badCollector, Extractors extractors,\n-            int chunkSize, Configuration config, Decorator decorator )\n+    public EagerParserChunker( CharReadable reader, IdType idType, Header header, Collector badCollector, Extractors extractors, int chunkSize, Configuration config, Decorator decorator )\n     {\n         this.chunkSize = chunkSize;\n         this.decorator = decorator;\n@@ -58,12 +57,13 @@ public class EagerParserChunker implements Chunker\n         InputEntityVisitor decorated = decorator.apply( entities );\n         int cursor = 0;\n         for ( ; cursor < chunkSize && parser.next( decorated ); cursor++ )\n-        {   // just loop through and parse\n+        {\n+    // just loop through and parse\n         }\n \n         if ( cursor > 0 )\n         {\n-            ((EagerCsvInputChunk)chunk).initialize( entities.toArray() );\n+            ((EagerCsvInputChunk) chunk).initialize( entities.toArray() );\n             return true;\n         }\n         return false;\n@@ -86,4 +86,4 @@ public class EagerParserChunker implements Chunker\n     {\n         throw new UnsupportedOperationException();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "cloudera-director-sdk",
    "error_id": "295",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/295/WarningInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/295/WarningInfo.java\nindex bcf22d2c896..860e1060376 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/295/WarningInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/295/WarningInfo.java\n@@ -28,6 +28,7 @@ public class WarningInfo {\n   private String warningCode;\n   /* Warning type */\n   private String warningType;\n+\n   public interface WarningCode {\n     String UNKNOWN_SERVICE_TYPE = \"UNKNOWN_SERVICE_TYPE\";\n     String UNKNOWN_ROLE_TYPE_FOR_SERVICE_TYPE = \"UNKNOWN_ROLE_TYPE_FOR_SERVICE_TYPE\";\n@@ -38,12 +39,15 @@ public class WarningInfo {\n     String INSTANCE_CONFIGURATION_VALUE_DIFFERENCE = \"INSTANCE_CONFIGURATION_VALUE_DIFFERENCE\";\n     String UNDEFINED = \"UNDEFINED\";\n   }\n+\n   public interface WarningType {\n     String CLIENT = \"CLIENT\";\n     String SERVICE = \"SERVICE\";\n     String UNKNOWN = \"UNKNOWN\";\n   }\n-  public WarningInfo() { }\n+\n+  public WarningInfo() {\n+  }\n \n   private WarningInfo(Map<String, String> properties, String warningCode, String warningType) {\n     this.properties = properties;\n@@ -88,14 +92,16 @@ public class WarningInfo {\n \n   public WarningInfoBuilder toBuilder() {\n     return builder()\n-      .properties(properties)\n-      .warningCode(warningCode)\n-      .warningType(warningType)\n-      ;\n+        .properties(properties)\n+        .warningCode(warningCode)\n+        .warningType(warningType)\n+        ;\n   }\n+\n   public Map<String, String> getProperties() {\n     return properties;\n   }\n+\n   public void setProperties(Map<String, String> properties) {\n     this.properties = properties;\n   }\n@@ -103,6 +109,7 @@ public class WarningInfo {\n   public String getWarningCode() {\n     return warningCode;\n   }\n+\n   public void setWarningCode(String warningCode) {\n     this.warningCode = warningCode;\n   }\n@@ -110,26 +117,37 @@ public class WarningInfo {\n   public String getWarningType() {\n     return warningType;\n   }\n+\n   public void setWarningType(String warningType) {\n     this.warningType = warningType;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     WarningInfo other = (WarningInfo) o; // NOPMD\n \n     if (properties != null ?\n         !properties.equals(other.properties) :\n-        other.properties != null) return false;\n+        other.properties != null) {\n+      return false;\n+    }\n     if (warningCode != null ?\n         !warningCode.equals(other.warningCode) :\n-        other.warningCode != null) return false;\n+        other.warningCode != null) {\n+      return false;\n+    }\n     if (warningType != null ?\n         !warningType.equals(other.warningType) :\n-        other.warningType != null) return false;\n+        other.warningType != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -143,7 +161,7 @@ public class WarningInfo {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class WarningInfo {\" + newLine);\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "114",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "116",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "118",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/295/WarningInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/295/WarningInfo.java\nindex bcf22d2c896..acd7ca07a2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/295/WarningInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/295/WarningInfo.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v10.model;\n@@ -28,7 +13,8 @@ public class WarningInfo {\n   private String warningCode;\n   /* Warning type */\n   private String warningType;\n-  public interface WarningCode {\n+\n+public interface WarningCode {\n     String UNKNOWN_SERVICE_TYPE = \"UNKNOWN_SERVICE_TYPE\";\n     String UNKNOWN_ROLE_TYPE_FOR_SERVICE_TYPE = \"UNKNOWN_ROLE_TYPE_FOR_SERVICE_TYPE\";\n     String ROLE_ASSIGNMENT_DIFFERENCE = \"ROLE_ASSIGNMENT_DIFFERENCE\";\n@@ -38,12 +24,14 @@ public class WarningInfo {\n     String INSTANCE_CONFIGURATION_VALUE_DIFFERENCE = \"INSTANCE_CONFIGURATION_VALUE_DIFFERENCE\";\n     String UNDEFINED = \"UNDEFINED\";\n   }\n-  public interface WarningType {\n+\n+public interface WarningType {\n     String CLIENT = \"CLIENT\";\n     String SERVICE = \"SERVICE\";\n     String UNKNOWN = \"UNKNOWN\";\n   }\n-  public WarningInfo() { }\n+\n+public WarningInfo() { }\n \n   private WarningInfo(Map<String, String> properties, String warningCode, String warningType) {\n     this.properties = properties;\n@@ -62,7 +50,8 @@ public class WarningInfo {\n   }\n \n   public static class WarningInfoBuilder {\n-    private Map<String, String> properties = new HashMap<String, String>();\n+\n+  private Map<String, String> properties = new HashMap<String, String>();\n     private String warningCode = null;\n     private String warningType = null;\n \n@@ -87,11 +76,9 @@ public class WarningInfo {\n   }\n \n   public WarningInfoBuilder toBuilder() {\n-    return builder()\n-      .properties(properties)\n+    return builder().properties(properties)\n       .warningCode(warningCode)\n-      .warningType(warningType)\n-      ;\n+      .warningType(warningType);\n   }\n   public Map<String, String> getProperties() {\n     return properties;\n@@ -117,19 +104,18 @@ public class WarningInfo {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    WarningInfo other = (WarningInfo) o; // NOPMD\n-\n-    if (properties != null ?\n-        !properties.equals(other.properties) :\n-        other.properties != null) return false;\n-    if (warningCode != null ?\n-        !warningCode.equals(other.warningCode) :\n-        other.warningCode != null) return false;\n-    if (warningType != null ?\n-        !warningType.equals(other.warningType) :\n-        other.warningType != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    WarningInfo other = (WarningInfo) o;\n+\n+// NOPMD\n+\n+    if (properties != null ?!properties.equals(other.properties) : other.properties != null) return false;\n+\n+if (warningCode != null ?!warningCode.equals(other.warningCode) : other.warningCode != null) return false;\n+\n+if (warningType != null ?!warningType.equals(other.warningType) : other.warningType != null) return false;\n     return true;\n   }\n \n@@ -143,7 +129,7 @@ public class WarningInfo {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class WarningInfo {\" + newLine);\n@@ -153,5 +139,4 @@ public class WarningInfo {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "71",
                    "column": "24",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "71",
                    "column": "25",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "156",
                    "column": "37",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "158",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "158",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "158",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "159",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "159",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "159",
                    "column": "67",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "160",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "160",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "160",
                    "column": "67",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "168",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "168",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "168",
                    "column": "45",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "168",
                    "column": "68",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "168",
                    "column": "68",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "169",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "169",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "169",
                    "column": "46",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "169",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "169",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "column": "46",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/295/WarningInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/295/WarningInfo.java\nindex bcf22d2c896..423391db2a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/295/WarningInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/295/WarningInfo.java\n@@ -21,49 +21,78 @@ package com.cloudera.director.client.v10.model;\n import java.util.HashMap;\n import java.util.Map;\n \n+\n public class WarningInfo {\n   /* Properties */\n+\n   private Map<String, String> properties;\n   /* Warning code */\n+\n   private String warningCode;\n   /* Warning type */\n+\n   private String warningType;\n+\n   public interface WarningCode {\n-    String UNKNOWN_SERVICE_TYPE = \"UNKNOWN_SERVICE_TYPE\";\n-    String UNKNOWN_ROLE_TYPE_FOR_SERVICE_TYPE = \"UNKNOWN_ROLE_TYPE_FOR_SERVICE_TYPE\";\n-    String ROLE_ASSIGNMENT_DIFFERENCE = \"ROLE_ASSIGNMENT_DIFFERENCE\";\n-    String ROLE_CONFIGURATION_DIFFERENCE = \"ROLE_CONFIGURATION_DIFFERENCE\";\n-    String ROLE_CONFIGURATION_VALUE_DIFFERENCE = \"ROLE_CONFIGURATION_VALUE_DIFFERENCE\";\n-    String INSTANCE_CONFIGURATION_DIFFERENCE = \"INSTANCE_CONFIGURATION_DIFFERENCE\";\n-    String INSTANCE_CONFIGURATION_VALUE_DIFFERENCE = \"INSTANCE_CONFIGURATION_VALUE_DIFFERENCE\";\n-    String UNDEFINED = \"UNDEFINED\";\n+String UNKNOWN_SERVICE_TYPE = \"UNKNOWN_SERVICE_TYPE\";\n+\n+\n+String UNKNOWN_ROLE_TYPE_FOR_SERVICE_TYPE = \"UNKNOWN_ROLE_TYPE_FOR_SERVICE_TYPE\";\n+\n+\n+String ROLE_ASSIGNMENT_DIFFERENCE = \"ROLE_ASSIGNMENT_DIFFERENCE\";\n+\n+\n+String ROLE_CONFIGURATION_DIFFERENCE = \"ROLE_CONFIGURATION_DIFFERENCE\";\n+\n+\n+String ROLE_CONFIGURATION_VALUE_DIFFERENCE = \"ROLE_CONFIGURATION_VALUE_DIFFERENCE\";\n+\n+\n+String INSTANCE_CONFIGURATION_DIFFERENCE = \"INSTANCE_CONFIGURATION_DIFFERENCE\";\n+\n+\n+String INSTANCE_CONFIGURATION_VALUE_DIFFERENCE = \"INSTANCE_CONFIGURATION_VALUE_DIFFERENCE\";\n+\n+\n+String UNDEFINED = \"UNDEFINED\";\n   }\n+\n   public interface WarningType {\n-    String CLIENT = \"CLIENT\";\n-    String SERVICE = \"SERVICE\";\n-    String UNKNOWN = \"UNKNOWN\";\n+String CLIENT = \"CLIENT\";\n+\n+\n+String SERVICE = \"SERVICE\";\n+\n+\n+String UNKNOWN = \"UNKNOWN\";\n   }\n-  public WarningInfo() { }\n+\n+  public WarningInfo() {}\n+\n \n   private WarningInfo(Map<String, String> properties, String warningCode, String warningType) {\n-    this.properties = properties;\n-    this.warningCode = warningCode;\n-    this.warningType = warningType;\n-  }\n+                                                                                              this.properties = properties;\n+                                                                                              this.warningCode = warningCode;\n+                                                                                              this.warningType = warningType;\n+                         }\n \n   private WarningInfo(WarningInfoBuilder builder) {\n-    this.properties = builder.properties;\n-    this.warningCode = builder.warningCode;\n-    this.warningType = builder.warningType;\n-  }\n+                                                  this.properties = builder.properties;\n+                                                  this.warningCode = builder.warningCode;\n+                                                  this.warningType = builder.warningType;\n+                         }\n \n   public static WarningInfoBuilder builder() {\n     return new WarningInfoBuilder();\n   }\n \n   public static class WarningInfoBuilder {\n+\n     private Map<String, String> properties = new HashMap<String, String>();\n+\n     private String warningCode = null;\n+\n     private String warningType = null;\n \n     public WarningInfoBuilder properties(Map<String, String> properties) {\n@@ -90,12 +119,13 @@ public class WarningInfo {\n     return builder()\n       .properties(properties)\n       .warningCode(warningCode)\n-      .warningType(warningType)\n-      ;\n+      .warningType(warningType);\n   }\n+\n   public Map<String, String> getProperties() {\n     return properties;\n   }\n+\n   public void setProperties(Map<String, String> properties) {\n     this.properties = properties;\n   }\n@@ -103,6 +133,7 @@ public class WarningInfo {\n   public String getWarningCode() {\n     return warningCode;\n   }\n+\n   public void setWarningCode(String warningCode) {\n     this.warningCode = warningCode;\n   }\n@@ -110,48 +141,50 @@ public class WarningInfo {\n   public String getWarningType() {\n     return warningType;\n   }\n+\n   public void setWarningType(String warningType) {\n     this.warningType = warningType;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    WarningInfo other = (WarningInfo) o; // NOPMD\n-\n-    if (properties != null ?\n-        !properties.equals(other.properties) :\n-        other.properties != null) return false;\n-    if (warningCode != null ?\n-        !warningCode.equals(other.warningCode) :\n-        other.warningCode != null) return false;\n-    if (warningType != null ?\n-        !warningType.equals(other.warningType) :\n-        other.warningType != null) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n+\n+    WarningInfo other = (WarningInfo)o; // NOPMD\n+\n+    if (properties != null?!properties.equals(other.properties): other.properties != null) return false;\n+    if (warningCode != null?!warningCode.equals(other.warningCode): other.warningCode != null) return false;\n+    if (warningType != null?!warningType.equals(other.warningType): other.warningType != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (properties != null ? properties.hashCode() : 0);\n-    result = 31 * result + (warningCode != null ? warningCode.hashCode() : 0);\n-    result = 31 * result + (warningType != null ? warningType.hashCode() : 0);\n+    result = 31*result + (properties != null? properties.hashCode():0);\n+    result = 31*result + (warningCode != null? warningCode.hashCode():0);\n+    result = 31*result + (warningType != null? warningType.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class WarningInfo {\" + newLine);\n-    sb.append(\"  properties: \").append(properties).append(newLine);\n-    sb.append(\"  warningCode: \").append(warningCode).append(newLine);\n-    sb.append(\"  warningType: \").append(warningType).append(newLine);\n+    sb.append(\"  properties: \")\n+      .append(properties).append(newLine);\n+    sb.append(\"  warningCode: \")\n+      .append(warningCode).append(newLine);\n+    sb.append(\"  warningType: \")\n+      .append(warningType).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 84
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
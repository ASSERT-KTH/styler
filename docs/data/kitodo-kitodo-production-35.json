{
    "project_name": "kitodo-kitodo-production",
    "error_id": "35",
    "information": {
        "errors": [
            {
                "line": "189",
                "column": "9",
                "severity": "warning",
                "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "     */\n    public void initMetadataEditor() {\n        if(Objects.isNull(process)) {\n            try {\n                Helper.setErrorMessage(\"noProcessSelected\");\n                FacesContext context = FacesContext.getCurrentInstance();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/35/DataEditorForm.java\nindex 78d62e37888..d6a9f934109 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/35/DataEditorForm.java\n@@ -186,7 +186,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * because metadataeditor doesn't work without a process.\n      */\n     public void initMetadataEditor() {\n-        if(Objects.isNull(process)) {\n+        if (Objects.isNull(process)) {\n             try {\n                 Helper.setErrorMessage(\"noProcessSelected\");\n                 FacesContext context = FacesContext.getCurrentInstance();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/35/DataEditorForm.java\nindex 78d62e37888..c7869ee577a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/35/DataEditorForm.java\n@@ -186,7 +186,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * because metadataeditor doesn't work without a process.\n      */\n     public void initMetadataEditor() {\n-        if(Objects.isNull(process)) {\n+        if (Objects.isNull(process)) {\n             try {\n                 Helper.setErrorMessage(\"noProcessSelected\");\n                 FacesContext context = FacesContext.getCurrentInstance();\n@@ -201,10 +201,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n     /**\n      * Open the metadata file of the process with the given ID in the metadata editor.\n      *\n-     * @param processID\n-     *            ID of the process that is opened\n-     * @param referringView\n-     *            JSF page the user came from\n+     * @param processID     ID of the process that is opened\n+     * @param referringView JSF page the user came from\n      */\n     public String open(String processID, String referringView) {\n         try {\n@@ -222,7 +220,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n             ruleset = openRuleset(process.getRuleset());\n             openMetsFile();\n             if (!workpiece.getId().equals(process.getId().toString())) {\n-                Helper.setErrorMessage(\"metadataConfusion\", new Object[] {process.getId(), workpiece.getId() });\n+                Helper.setErrorMessage(\"metadataConfusion\", new Object[] {process.getId(), workpiece.getId()});\n                 return referringView;\n             }\n             selectedMedia = new LinkedList<>();\n@@ -238,8 +236,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n     /**\n      * Opens the METS file.\n      *\n-     * @throws IOException\n-     *             if filesystem I/O fails\n+     * @throws IOException if filesystem I/O fails\n      */\n     private void openMetsFile() throws IOException, InvalidImagesException {\n         mainFileUri = ServiceManager.getProcessService().getMetadataFileUri(process);\n@@ -355,9 +352,9 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n             structurePanel.preserve();\n             try (OutputStream out = ServiceManager.getFileService().write(mainFileUri)) {\n                 ServiceManager.getMetsService().save(workpiece, out);\n-                ServiceManager.getProcessService().saveToIndex(process,false);\n+                ServiceManager.getProcessService().saveToIndex(process, false);\n                 PrimeFaces.current().executeScript(\"PF('notifications').renderMessage({'summary':'\"\n-                        + Helper.getTranslation(\"metadataSaved\") + \"','severity':'info'})\");\n+                    + Helper.getTranslation(\"metadataSaved\") + \"','severity':'info'})\");\n             } catch (IOException e) {\n                 Helper.setErrorMessage(e.getLocalizedMessage(), logger, e);\n             }\n@@ -379,7 +376,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n             structurePanel.preserve();\n             try (OutputStream out = ServiceManager.getFileService().write(mainFileUri)) {\n                 ServiceManager.getMetsService().save(workpiece, out);\n-                ServiceManager.getProcessService().saveToIndex(process,false);\n+                ServiceManager.getProcessService().saveToIndex(process, false);\n                 return close();\n             } catch (IOException e) {\n                 Helper.setErrorMessage(e.getLocalizedMessage(), logger, e);\n@@ -540,6 +537,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n \n     /**\n      * Check if the passed IncludedStructuralElement is part of the selection.\n+     *\n      * @param structure IncludedStructuralElement to be checked\n      * @return boolean representing selection status\n      */\n@@ -585,7 +583,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n \n     /**\n      * Check if the passed MediaUnit is selected.\n-     * @param mediaUnit MediaUnit object to check for selection\n+     *\n+     * @param mediaUnit                 MediaUnit object to check for selection\n      * @param includedStructuralElement object to check whether the MediaUnit is selected as a child of this IncludedStructuralElement.\n      *                                  A MediaUnit can be assigned to multiple IncludedStructuralElements but can be selected\n      *                                  in one of these IncludedStructuralElements.\n@@ -612,7 +611,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n             StructureTreeNode structureTreeNode = (StructureTreeNode) treeNodeData;\n             if (Objects.nonNull(structureTreeNode.getDataObject())) {\n                 if (structureTreeNode.getDataObject() instanceof IncludedStructuralElement\n-                        && selectedStructure.isPresent()) {\n+                    && selectedStructure.isPresent()) {\n                     // Logical structure element selected\n                     if (structurePanel.isSeparateMedia()) {\n                         IncludedStructuralElement structuralElement = selectedStructure.get();\n@@ -659,7 +658,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n             // update logical tree\n             for (GalleryMediaContent galleryMediaContent : galleryPanel.getMedias()) {\n                 if (Objects.nonNull(galleryMediaContent.getView())\n-                        && Objects.equals(selectedMediaUnit.get(), galleryMediaContent.getView().getMediaUnit())) {\n+                    && Objects.equals(selectedMediaUnit.get(), galleryMediaContent.getView().getMediaUnit())) {\n                     structurePanel.updateLogicalNodeSelection(galleryMediaContent, null);\n                     break;\n                 }\n@@ -704,18 +703,17 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * which metadata keys should be considered.\n      * Return empty string otherwise.\n      *\n-     * @param dataObject\n-     *          StructureTreeNode containing the IncludedStructuralElement whose title is returned\n+     * @param dataObject StructureTreeNode containing the IncludedStructuralElement whose title is returned\n      * @return 'title' value of the IncludedStructuralElement contained in the given StructureTreeNode 'treeNode'\n      */\n     public String getStructureElementTitle(Object dataObject) {\n         if (dataObject instanceof IncludedStructuralElement) {\n             IncludedStructuralElement element = (IncludedStructuralElement) dataObject;\n             List<Metadata> titleMetadata = element.getMetadata().stream()\n-                    .filter(m -> DataEditorService.getTitleKeys().contains(m.getKey())).collect(Collectors.toList());\n+                .filter(m -> DataEditorService.getTitleKeys().contains(m.getKey())).collect(Collectors.toList());\n             for (Metadata metadata : titleMetadata) {\n                 if (metadata instanceof MetadataEntry && Objects.nonNull(((MetadataEntry) metadata).getValue())\n-                        && !((MetadataEntry) metadata).getValue().isEmpty()) {\n+                    && !((MetadataEntry) metadata).getValue().isEmpty()) {\n                     return \" - \" + ((MetadataEntry) metadata).getValue();\n                 }\n             }\n@@ -742,9 +740,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n     public boolean canBeAdded(ProcessDetail processDetail) {\n         if (Objects.nonNull(this.getAddDocStrucTypeDialog().getSelectAddableMetadataTypesItems())) {\n             return this.getAddDocStrucTypeDialog().getSelectAddableMetadataTypesItems().stream()\n-                    .map(SelectItem::getValue).collect(Collectors.toList()).contains(processDetail.getMetadataID());\n-        }\n-        else {\n+                .map(SelectItem::getValue).collect(Collectors.toList()).contains(processDetail.getMetadataID());\n+        } else {\n             return true;\n         }\n     }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/35/DataEditorForm.java\nindex 78d62e37888..612d99961b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/35/DataEditorForm.java\n@@ -186,7 +186,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * because metadataeditor doesn't work without a process.\n      */\n     public void initMetadataEditor() {\n-        if(Objects.isNull(process)) {\n+        if (Objects.isNull(process)) {\n             try {\n                 Helper.setErrorMessage(\"noProcessSelected\");\n                 FacesContext context = FacesContext.getCurrentInstance();\n@@ -355,7 +355,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n             structurePanel.preserve();\n             try (OutputStream out = ServiceManager.getFileService().write(mainFileUri)) {\n                 ServiceManager.getMetsService().save(workpiece, out);\n-                ServiceManager.getProcessService().saveToIndex(process,false);\n+                ServiceManager.getProcessService().saveToIndex(process, false);\n                 PrimeFaces.current().executeScript(\"PF('notifications').renderMessage({'summary':'\"\n                         + Helper.getTranslation(\"metadataSaved\") + \"','severity':'info'})\");\n             } catch (IOException e) {\n@@ -379,7 +379,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n             structurePanel.preserve();\n             try (OutputStream out = ServiceManager.getFileService().write(mainFileUri)) {\n                 ServiceManager.getMetsService().save(workpiece, out);\n-                ServiceManager.getProcessService().saveToIndex(process,false);\n+                ServiceManager.getProcessService().saveToIndex(process, false);\n                 return close();\n             } catch (IOException e) {\n                 Helper.setErrorMessage(e.getLocalizedMessage(), logger, e);\n@@ -758,4 +758,4 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n             PrimeFaces.current().executeScript(\"setConfirmUnload(\" + unsavedChanges + \");\");\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "365",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "698",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "755",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "788",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/35/DataEditorForm.java\nindex 78d62e37888..77e23e85ad3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/35/DataEditorForm.java\n@@ -26,12 +26,10 @@ import java.util.Optional;\n import java.util.Set;\n import java.util.concurrent.TimeUnit;\n import java.util.stream.Collectors;\n-\n import javax.enterprise.context.SessionScoped;\n import javax.faces.context.FacesContext;\n import javax.faces.model.SelectItem;\n import javax.inject.Named;\n-\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.logging.log4j.LogManager;\n@@ -130,7 +128,6 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * Process whose workpiece is under edit.\n      */\n     private Process process;\n-\n     private String referringView = \"desktop\";\n \n     /**\n@@ -163,12 +160,13 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * It is necessary to store the logical elements as well, because a physical element can be assigned to multiple logical elements.\n      */\n     private List<Pair<MediaUnit, IncludedStructuralElement>> selectedMedia;\n-\n     private static final String DESKTOP_LINK = \"/pages/desktop.jsf\";\n \n     /**\n      * Public constructor.\n      */\n+\n+\n     public DataEditorForm() {\n         this.structurePanel = new StructurePanel(this);\n         this.metadataPanel = new MetadataPanel(this);\n@@ -185,8 +183,10 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * Checks if the process is correctly set. Otherwise redirect to desktop,\n      * because metadataeditor doesn't work without a process.\n      */\n+\n+\n     public void initMetadataEditor() {\n-        if(Objects.isNull(process)) {\n+        if (Objects.isNull(process)) {\n             try {\n                 Helper.setErrorMessage(\"noProcessSelected\");\n                 FacesContext context = FacesContext.getCurrentInstance();\n@@ -206,19 +206,19 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * @param referringView\n      *            JSF page the user came from\n      */\n+\n+\n     public String open(String processID, String referringView) {\n         try {\n             this.referringView = referringView;\n             this.process = ServiceManager.getProcessService().getById(Integer.parseInt(processID));\n             this.currentChildren.addAll(process.getChildren());\n             this.user = ServiceManager.getUserService().getCurrentUser();\n-\n             User blockedUser = MetadataLock.getLockUser(process.getId());\n             if (Objects.nonNull(blockedUser) && !blockedUser.equals(this.user)) {\n                 Helper.setErrorMessage(\"blocked\", blockedUser.getFullName());\n                 return referringView;\n             }\n-\n             ruleset = openRuleset(process.getRuleset());\n             openMetsFile();\n             if (!workpiece.getId().equals(process.getId().toString())) {\n@@ -241,6 +241,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * @throws IOException\n      *             if filesystem I/O fails\n      */\n+\n+\n     private void openMetsFile() throws IOException, InvalidImagesException {\n         mainFileUri = ServiceManager.getProcessService().getMetadataFileUri(process);\n         workpiece = ServiceManager.getMetsService().loadWorkpiece(mainFileUri);\n@@ -252,24 +254,25 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n         ServiceManager.getFileService().searchForMedia(process, workpiece);\n     }\n \n+\n     private RulesetManagementInterface openRuleset(Ruleset ruleset) throws IOException, RulesetNotFoundException {\n         final long begin = System.nanoTime();\n         String metadataLanguage = user.getMetadataLanguage();\n         priorityList = LanguageRange.parse(metadataLanguage.isEmpty() ? \"en\" : metadataLanguage);\n         RulesetManagementInterface openRuleset = ServiceManager.getRulesetService().openRuleset(ruleset);\n         if (logger.isTraceEnabled()) {\n-            logger.trace(\"Reading ruleset took {} ms\", TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - begin));\n+            logger.trace(\"Reading ruleset took {} ms\",\n+                TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - begin));\n         }\n         return openRuleset;\n     }\n \n+\n     private void init() {\n         final long begin = System.nanoTime();\n-\n         List<MediaUnit> severalAssignments = new LinkedList<>();\n         initSeveralAssignments(workpiece.getMediaUnit(), severalAssignments);\n         structurePanel.getSeveralAssignments().addAll(severalAssignments);\n-\n         structurePanel.show();\n         structurePanel.getSelectedLogicalNode().setSelected(true);\n         structurePanel.getSelectedPhysicalNode().setSelected(true);\n@@ -277,9 +280,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n         metadataPanel.showPhysical(getSelectedMediaUnit());\n         galleryPanel.show();\n         paginationPanel.show();\n-\n         editPagesDialog.prepare();\n-\n         if (logger.isTraceEnabled()) {\n             logger.trace(\"Initializing editor beans took {} ms\",\n                 TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - begin));\n@@ -291,6 +292,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return the referring view, to return there\n      */\n+\n+\n     public String close() {\n         metadataPanel.clear();\n         structurePanel.clear();\n@@ -315,10 +318,11 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return whether the validation was successful or not\n      */\n+\n+\n     public boolean validate() {\n         try {\n-            ValidationResult validationResult = ServiceManager.getMetadataValidationService().validate(workpiece,\n-                ruleset);\n+            ValidationResult validationResult = ServiceManager.getMetadataValidationService().validate(workpiece, ruleset);\n             State state = validationResult.getState();\n             switch (state) {\n                 case ERROR:\n@@ -349,15 +353,16 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n     /**\n      * Save the structure and metadata.\n      */\n+\n+\n     public void save() {\n         metadataPanel.preserve();\n         try {\n             structurePanel.preserve();\n             try (OutputStream out = ServiceManager.getFileService().write(mainFileUri)) {\n                 ServiceManager.getMetsService().save(workpiece, out);\n-                ServiceManager.getProcessService().saveToIndex(process,false);\n-                PrimeFaces.current().executeScript(\"PF('notifications').renderMessage({'summary':'\"\n-                        + Helper.getTranslation(\"metadataSaved\") + \"','severity':'info'})\");\n+                ServiceManager.getProcessService().saveToIndex(process, false);\n+                PrimeFaces.current().executeScript(\"PF('notifications').renderMessage({'summary':'\" + Helper.getTranslation(\"metadataSaved\") + \"','severity':'info'})\");\n             } catch (IOException e) {\n                 Helper.setErrorMessage(e.getLocalizedMessage(), logger, e);\n             }\n@@ -373,13 +378,15 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return navigation target\n      */\n+\n+\n     public String saveAndExit() {\n         metadataPanel.preserve();\n         try {\n             structurePanel.preserve();\n             try (OutputStream out = ServiceManager.getFileService().write(mainFileUri)) {\n                 ServiceManager.getMetsService().save(workpiece, out);\n-                ServiceManager.getProcessService().saveToIndex(process,false);\n+                ServiceManager.getProcessService().saveToIndex(process, false);\n                 return close();\n             } catch (IOException e) {\n                 Helper.setErrorMessage(e.getLocalizedMessage(), logger, e);\n@@ -392,6 +399,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n         return null;\n     }\n \n+\n     private void initSeveralAssignments(MediaUnit mediaUnit, List<MediaUnit> severalAssignments) {\n         if (mediaUnit.getIncludedStructuralElements().size() > 1) {\n             severalAssignments.add(mediaUnit);\n@@ -406,6 +414,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * is called by PrimeFaces to inform the application that the user has\n      * clicked on the shortcut menu entry to clear the outline point.\n      */\n+\n+\n     public void deleteStructure() {\n         structurePanel.deleteSelectedStructure();\n     }\n@@ -417,6 +427,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * method is called by PrimeFaces to inform the application that the user\n      * clicked on the context menu entry to delete the media unit.\n      */\n+\n+\n     public void deleteMediaUnit() {\n         structurePanel.deleteSelectedMediaUnit();\n     }\n@@ -433,6 +445,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return the backing bean for the add doc struc type dialog\n      */\n+\n+\n     public AddDocStrucTypeDialog getAddDocStrucTypeDialog() {\n         return addDocStrucTypeDialog;\n     }\n@@ -443,6 +457,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return the backing bean for the add media dialog\n      */\n+\n+\n     public AddMediaUnitDialog getAddMediaUnitDialog() {\n         return addMediaUnitDialog;\n     }\n@@ -454,6 +470,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return the backing bean for the change doc struc type dialog\n      */\n+\n+\n     public ChangeDocStrucTypeDialog getChangeDocStrucTypeDialog() {\n         return changeDocStrucTypeDialog;\n     }\n@@ -464,6 +482,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return the backing bean for the edit pages dialog\n      */\n+\n+\n     public EditPagesDialog getEditPagesDialog() {\n         return editPagesDialog;\n     }\n@@ -474,10 +494,13 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return the backing bean for the gallery panel\n      */\n+\n+\n     public GalleryPanel getGalleryPanel() {\n         return galleryPanel;\n     }\n \n+\n     Set<Process> getCurrentChildren() {\n         return currentChildren;\n     }\n@@ -488,6 +511,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return the backing bean for the metadata panel\n      */\n+\n+\n     public MetadataPanel getMetadataPanel() {\n         return metadataPanel;\n     }\n@@ -498,6 +523,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return the backing bean for the pagination panel\n      */\n+\n+\n     public PaginationPanel getPaginationPanel() {\n         return paginationPanel;\n     }\n@@ -512,6 +539,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return value of process\n      */\n+\n+\n     public Process getProcess() {\n         return process;\n     }\n@@ -521,6 +550,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return value of process title\n      */\n+\n+\n     public String getProcessTitle() {\n         return process.getTitle();\n     }\n@@ -530,10 +561,12 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n         return ruleset;\n     }\n \n+\n     Optional<IncludedStructuralElement> getSelectedStructure() {\n         return structurePanel.getSelectedStructure();\n     }\n \n+\n     Optional<MediaUnit> getSelectedMediaUnit() {\n         return structurePanel.getSelectedMediaUnit();\n     }\n@@ -543,6 +576,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * @param structure IncludedStructuralElement to be checked\n      * @return boolean representing selection status\n      */\n+\n+\n     public boolean isStripeSelected(IncludedStructuralElement structure) {\n         Optional<IncludedStructuralElement> selectedStructure = structurePanel.getSelectedStructure();\n         return selectedStructure.filter(includedStructuralElement -> Objects.equals(structure, includedStructuralElement)).isPresent();\n@@ -553,10 +588,13 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return structurePanel\n      */\n+\n+\n     public StructurePanel getStructurePanel() {\n         return structurePanel;\n     }\n \n+\n     Workpiece getWorkpiece() {\n         return workpiece;\n     }\n@@ -575,6 +613,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return value of selectedMedia\n      */\n+\n+\n     List<Pair<MediaUnit, IncludedStructuralElement>> getSelectedMedia() {\n         return selectedMedia;\n     }\n@@ -591,6 +631,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *                                  in one of these IncludedStructuralElements.\n      * @return boolean whether the MediaUnit is selected at the specified position\n      */\n+\n+\n     public boolean isSelected(MediaUnit mediaUnit, IncludedStructuralElement includedStructuralElement) {\n         if (Objects.nonNull(mediaUnit) && Objects.nonNull(includedStructuralElement)) {\n             return selectedMedia.contains(new ImmutablePair<>(mediaUnit, includedStructuralElement));\n@@ -604,15 +646,12 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n         } catch (InvalidMetadataValueException e) {\n             logger.info(e.getLocalizedMessage(), e);\n         }\n-\n         Optional<IncludedStructuralElement> selectedStructure = structurePanel.getSelectedStructure();\n-\n         metadataPanel.showLogical(selectedStructure);\n         if (treeNodeData instanceof StructureTreeNode) {\n             StructureTreeNode structureTreeNode = (StructureTreeNode) treeNodeData;\n             if (Objects.nonNull(structureTreeNode.getDataObject())) {\n-                if (structureTreeNode.getDataObject() instanceof IncludedStructuralElement\n-                        && selectedStructure.isPresent()) {\n+                if (structureTreeNode.getDataObject() instanceof IncludedStructuralElement && selectedStructure.isPresent()) {\n                     // Logical structure element selected\n                     if (structurePanel.isSeparateMedia()) {\n                         IncludedStructuralElement structuralElement = selectedStructure.get();\n@@ -649,17 +688,14 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n         } catch (InvalidMetadataValueException e) {\n             logger.info(e.getLocalizedMessage(), e);\n         }\n-\n         Optional<MediaUnit> selectedMediaUnit = structurePanel.getSelectedMediaUnit();\n-\n         metadataPanel.showPhysical(selectedMediaUnit);\n         if (selectedMediaUnit.isPresent()) {\n             // update gallery\n             galleryPanel.updateSelection(selectedMediaUnit.get(), null);\n             // update logical tree\n             for (GalleryMediaContent galleryMediaContent : galleryPanel.getMedias()) {\n-                if (Objects.nonNull(galleryMediaContent.getView())\n-                        && Objects.equals(selectedMediaUnit.get(), galleryMediaContent.getView().getMediaUnit())) {\n+                if (Objects.nonNull(galleryMediaContent.getView()) && Objects.equals(selectedMediaUnit.get(), galleryMediaContent.getView().getMediaUnit())) {\n                     structurePanel.updateLogicalNodeSelection(galleryMediaContent, null);\n                     break;\n                 }\n@@ -667,11 +703,13 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n         }\n     }\n \n+\n     private void updatePhysicalStructureTree(View view) {\n         GalleryMediaContent galleryMediaContent = this.galleryPanel.getGalleryMediaContent(view);\n         structurePanel.updatePhysicalNodeSelection(galleryMediaContent);\n     }\n \n+\n     private void updateGallery(View view) {\n         MediaUnit mediaUnit = view.getMediaUnit();\n         if (Objects.nonNull(mediaUnit)) {\n@@ -680,7 +718,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n     }\n \n     void assignView(IncludedStructuralElement includedStructuralElement, View view, Integer index) {\n-        if (Objects.nonNull(index) && index >= 0 && index < includedStructuralElement.getViews().size()) {\n+        if (Objects.nonNull(index) && index >= 0\n+                && index < includedStructuralElement.getViews().size()) {\n             includedStructuralElement.getViews().add(index, view);\n         } else {\n             includedStructuralElement.getViews().add(view);\n@@ -708,11 +747,12 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *          StructureTreeNode containing the IncludedStructuralElement whose title is returned\n      * @return 'title' value of the IncludedStructuralElement contained in the given StructureTreeNode 'treeNode'\n      */\n+\n+\n     public String getStructureElementTitle(Object dataObject) {\n         if (dataObject instanceof IncludedStructuralElement) {\n             IncludedStructuralElement element = (IncludedStructuralElement) dataObject;\n-            List<Metadata> titleMetadata = element.getMetadata().stream()\n-                    .filter(m -> DataEditorService.getTitleKeys().contains(m.getKey())).collect(Collectors.toList());\n+            List<Metadata> titleMetadata = element.getMetadata().stream().filter(m -> DataEditorService.getTitleKeys().contains(m.getKey())).collect(Collectors.toList());\n             for (Metadata metadata : titleMetadata) {\n                 if (metadata instanceof MetadataEntry && Objects.nonNull(((MetadataEntry) metadata).getValue())\n                         && !((MetadataEntry) metadata).getValue().isEmpty()) {\n@@ -728,6 +768,8 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      *\n      * @return value of referringView\n      */\n+\n+\n     public String getReferringView() {\n         return referringView;\n     }\n@@ -739,12 +781,12 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * @param processDetail ProcessDetail to be added\n      * @return whether the given ProcessDetail can be added or not\n      */\n+\n+\n     public boolean canBeAdded(ProcessDetail processDetail) {\n         if (Objects.nonNull(this.getAddDocStrucTypeDialog().getSelectAddableMetadataTypesItems())) {\n-            return this.getAddDocStrucTypeDialog().getSelectAddableMetadataTypesItems().stream()\n-                    .map(SelectItem::getValue).collect(Collectors.toList()).contains(processDetail.getMetadataID());\n-        }\n-        else {\n+            return this.getAddDocStrucTypeDialog().getSelectAddableMetadataTypesItems().stream().map(SelectItem::getValue).collect(Collectors.toList()).contains(processDetail.getMetadataID());\n+        } else {\n             return true;\n         }\n     }\n@@ -752,10 +794,12 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n     /**\n      * Check for changes in workpiece.\n      */\n+\n+\n     public void checkForChanges() {\n         if (Objects.nonNull(PrimeFaces.current())) {\n             boolean unsavedChanges = !this.workpiece.equals(workpieceOriginalState);\n             PrimeFaces.current().executeScript(\"setConfirmUnload(\" + unsavedChanges + \");\");\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 99
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/35/DataEditorForm.java\nindex 78d62e37888..d6a9f934109 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/35/DataEditorForm.java\n@@ -186,7 +186,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * because metadataeditor doesn't work without a process.\n      */\n     public void initMetadataEditor() {\n-        if(Objects.isNull(process)) {\n+        if (Objects.isNull(process)) {\n             try {\n                 Helper.setErrorMessage(\"noProcessSelected\");\n                 FacesContext context = FacesContext.getCurrentInstance();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/35/DataEditorForm.java\nindex 78d62e37888..d6a9f934109 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/35/DataEditorForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/35/DataEditorForm.java\n@@ -186,7 +186,7 @@ public class DataEditorForm implements RulesetSetupInterface, Serializable {\n      * because metadataeditor doesn't work without a process.\n      */\n     public void initMetadataEditor() {\n-        if(Objects.isNull(process)) {\n+        if (Objects.isNull(process)) {\n             try {\n                 Helper.setErrorMessage(\"noProcessSelected\");\n                 FacesContext context = FacesContext.getCurrentInstance();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
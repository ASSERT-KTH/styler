{
    "project_name": "wso2-attic-commons",
    "error_id": "175",
    "information": {
        "errors": [
            {
                "line": "39",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 134).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    public boolean equals(Object obj) {\n        if (obj instanceof OExpressionLanguage) return ((OExpressionLanguage)obj).expressionLanguageUri.equals(expressionLanguageUri);\n        else return super.equals(obj);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/175/OExpressionLanguage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/175/OExpressionLanguage.java\nindex 0ab32d4bfae..a616cced181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/175/OExpressionLanguage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/175/OExpressionLanguage.java\n@@ -36,8 +36,9 @@ public class OExpressionLanguage extends OBase {\n     }\n \n     public boolean equals(Object obj) {\n-        if (obj instanceof OExpressionLanguage) return ((OExpressionLanguage)obj).expressionLanguageUri.equals(expressionLanguageUri);\n-        else return super.equals(obj);\n+        if (obj instanceof OExpressionLanguage)\n+            return ((OExpressionLanguage)obj).expressionLanguageUri.equals(expressionLanguageUri);\n+         else return super.equals(obj);\n     }\n \n     public int hashCode() {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/175/OExpressionLanguage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/175/OExpressionLanguage.java\nindex 0ab32d4bfae..0cf4e0b6552 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/175/OExpressionLanguage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/175/OExpressionLanguage.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.bpel.rtrep.v1;\n \n import java.util.HashMap;\n@@ -25,22 +26,26 @@ import java.util.Map;\n  * Compiled representation of an expression language dependency.\n  */\n public class OExpressionLanguage extends OBase {\n-    private static final long serialVersionUID = 1L;\n-    public String expressionLanguageUri;\n-    public final Map<String,String> properties = new HashMap<String,String>();\n+  private static final long serialVersionUID = 1L;\n+  public String expressionLanguageUri;\n+  public final Map<String, String> properties = new HashMap<String, String>();\n \n-    public OExpressionLanguage(OProcess owner, Map<String,String> properties) {\n-        super(owner);\n-        if (properties != null)\n-            this.properties.putAll(properties);\n+  public OExpressionLanguage(OProcess owner, Map<String, String> properties) {\n+    super(owner);\n+    if (properties != null) {\n+      this.properties.putAll(properties);\n     }\n+  }\n \n-    public boolean equals(Object obj) {\n-        if (obj instanceof OExpressionLanguage) return ((OExpressionLanguage)obj).expressionLanguageUri.equals(expressionLanguageUri);\n-        else return super.equals(obj);\n+  public boolean equals(Object obj) {\n+    if (obj instanceof OExpressionLanguage) {\n+      return ((OExpressionLanguage) obj).expressionLanguageUri.equals(expressionLanguageUri);\n+    } else {\n+      return super.equals(obj);\n     }\n+  }\n \n-    public int hashCode() {\n-        return expressionLanguageUri.hashCode();\n-    }\n+  public int hashCode() {\n+    return expressionLanguageUri.hashCode();\n+  }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/175/OExpressionLanguage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/175/OExpressionLanguage.java\nindex 0ab32d4bfae..460f6b80a99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/175/OExpressionLanguage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/175/OExpressionLanguage.java\n@@ -43,4 +43,4 @@ public class OExpressionLanguage extends OBase {\n     public int hashCode() {\n         return expressionLanguageUri.hashCode();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/175/OExpressionLanguage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/175/OExpressionLanguage.java\nindex 0ab32d4bfae..a616cced181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/175/OExpressionLanguage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/175/OExpressionLanguage.java\n@@ -36,8 +36,9 @@ public class OExpressionLanguage extends OBase {\n     }\n \n     public boolean equals(Object obj) {\n-        if (obj instanceof OExpressionLanguage) return ((OExpressionLanguage)obj).expressionLanguageUri.equals(expressionLanguageUri);\n-        else return super.equals(obj);\n+        if (obj instanceof OExpressionLanguage)\n+            return ((OExpressionLanguage)obj).expressionLanguageUri.equals(expressionLanguageUri);\n+         else return super.equals(obj);\n     }\n \n     public int hashCode() {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
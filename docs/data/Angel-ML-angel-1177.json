{
    "project_name": "Angel-ML-angel",
    "error_id": "1177",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1177/LongDoubleVectorSplitter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1177/LongDoubleVectorSplitter.java\nindex df261e680c2..d4fb0fc2972 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1177/LongDoubleVectorSplitter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1177/LongDoubleVectorSplitter.java\n@@ -29,19 +29,17 @@ import java.util.List;\n import java.util.Map;\n \n public class LongDoubleVectorSplitter implements ISplitter {\n-\n   @Override\n   public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n     LongDoubleVectorStorage storage = ((LongDoubleVector) vector).getStorage();\n     if (storage instanceof LongDoubleSparseVectorStorage) {\n       return RowUpdateSplitUtils\n           .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, false);\n-    } else if (storage instanceof LongDoubleSortedVectorStorage) {\n+  } else if (storage instanceof LongDoubleSortedVectorStorage) {\n       return RowUpdateSplitUtils\n           .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, true);\n-    } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage type:\" + storage.getClass().getName());\n+  } else {\n+      throw new UnsupportedOperationException(\"unsupport split for storage type:\" + storage.getClass().getName());\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1177/LongDoubleVectorSplitter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1177/LongDoubleVectorSplitter.java\nindex df261e680c2..df7055fcf03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1177/LongDoubleVectorSplitter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1177/LongDoubleVectorSplitter.java\n@@ -30,18 +30,17 @@ import java.util.Map;\n \n public class LongDoubleVectorSplitter implements ISplitter {\n \n+\n   @Override\n   public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n     LongDoubleVectorStorage storage = ((LongDoubleVector) vector).getStorage();\n     if (storage instanceof LongDoubleSparseVectorStorage) {\n-      return RowUpdateSplitUtils\n-          .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, false);\n+      return RowUpdateSplitUtils.split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, false);\n     } else if (storage instanceof LongDoubleSortedVectorStorage) {\n-      return RowUpdateSplitUtils\n-          .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, true);\n+             return RowUpdateSplitUtils.split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, true);\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage type:\" + storage.getClass().getName());\n+      throw new UnsupportedOperationException(\"unsupport split for storage type:\" + storage.getClass().getName());\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3204",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "142",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3204/PagedFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3204/PagedFile.java\nindex c74afd622b4..7566fd778a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3204/PagedFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3204/PagedFile.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache;\n \n import java.io.IOException;\n@@ -128,17 +129,17 @@ public interface PagedFile extends AutoCloseable\n      * operator.\n      * Arithmetic addition can also be used, but might not make it as clear that we are dealing with a bit-set.\n      *\n-     * @param pageId The initial file-page-id, that the cursor will be bound to\n-     * after the first call to <code>next</code>.\n+     * @param pageId   The initial file-page-id, that the cursor will be bound to\n+     *                 after the first call to <code>next</code>.\n      * @param pf_flags A bitmap of <code>PF_*</code> constants composed with\n-     * the bitwise-OR operator, that expresses the desired\n-     * locking behaviour, and other hints.\n-     * @param tracer underlying page cursor tracer\n+     *                 the bitwise-OR operator, that expresses the desired\n+     *                 locking behaviour, and other hints.\n+     * @param tracer   underlying page cursor tracer\n      * @return A PageCursor in its initial unbound state.\n      * Never <code>null</code>.\n      * @throws IOException if there was an error accessing the underlying file.\n      */\n-    PageCursor io( long pageId, int pf_flags, PageCursorTracer tracer ) throws IOException;\n+    PageCursor io(long pageId, int pf_flags, PageCursorTracer tracer) throws IOException;\n \n     /**\n      * Get the size of the file-pages, in bytes.\n@@ -165,9 +166,9 @@ public interface PagedFile extends AutoCloseable\n      * advised by the given IOPSLimiter.\n      *\n      * @param limiter The {@link IOLimiter} that determines if pauses or sleeps should be injected into the flushing\n-     * process to keep the IO rate down.\n+     *                process to keep the IO rate down.\n      */\n-    void flushAndForce( IOLimiter limiter ) throws IOException;\n+    void flushAndForce(IOLimiter limiter) throws IOException;\n \n     /**\n      * Get the file-page-id of the last page in the file.\n@@ -195,12 +196,14 @@ public interface PagedFile extends AutoCloseable\n      * Set if this page file can be deleted on close.\n      * Pages of marked for deletion file do not need to be flushed on close so closing file\n      * that is marked for deletion can be significantly faster.\n+     *\n      * @param deleteOnClose true if file can be deleted on close, false otherwise.\n      */\n-    void setDeleteOnClose( boolean deleteOnClose );\n+    void setDeleteOnClose(boolean deleteOnClose);\n \n     /**\n      * Check if this can be deleted on close.\n+     *\n      * @return true if file can be deleted on close, false otherwise.\n      */\n     boolean isDeleteOnClose();\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1012",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "113",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "312",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "337",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "595",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "601",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "601",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "607",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "721",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "721",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "756",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "757",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "769",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "769",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "777",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "780",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "785",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "788",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "788",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "794",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "794",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "801",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "808",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "808",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "831",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "831",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "839",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "840",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "843",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "843",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "854",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "855",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "859",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "863",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "863",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "874",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "875",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "881",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "882",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "888",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "888",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "899",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "900",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "922",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "923",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "930",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "932",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "943",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "943",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "948",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "948",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "954",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "966",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "967",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "972",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "972",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "989",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "989",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "994",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "994",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "999",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "999",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1014",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1020",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1021",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1027",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1036",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1037",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1051",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1052",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1058",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1058",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1082",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1083",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1090",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1090",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1099",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1099",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1108",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1109",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1116",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1119",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1119",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1125",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1125",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1130",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1130",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1130",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1138",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1138",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1138",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1140",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1141",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1146",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1146",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1157",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1157",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1165",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1165",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1170",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1170",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1179",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1181",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1197",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1199",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1215",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1216",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1229",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1230",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1253",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1254",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1286",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1288",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1293",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1293",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1301",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1301",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1329",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1329",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1334",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1334",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1012/InternalTreeLogic.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1012/InternalTreeLogic.java\nindex a28d837b40d..80ee5f5d079 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1012/InternalTreeLogic.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1012/InternalTreeLogic.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.IOException;\n@@ -81,16 +82,16 @@ import static org.neo4j.index.internal.gbptree.TreeNode.Type.LEAF;\n  *   There's no bad intermediate state\n  * </pre>\n  *\n- * @param <KEY> type of internal/leaf keys\n+ * @param <KEY>   type of internal/leaf keys\n  * @param <VALUE> type of leaf values\n  */\n-class InternalTreeLogic<KEY,VALUE>\n+class InternalTreeLogic<KEY, VALUE>\n {\n     static final double DEFAULT_SPLIT_RATIO = 0.5;\n \n     private final IdProvider idProvider;\n-    private final TreeNode<KEY,VALUE> bTreeNode;\n-    private final Layout<KEY,VALUE> layout;\n+    private final TreeNode<KEY, VALUE> bTreeNode;\n+    private final Layout<KEY, VALUE> layout;\n     private final KEY newKeyPlaceHolder;\n     private final KEY readKey;\n     private final VALUE readValue;\n@@ -109,7 +110,7 @@ class InternalTreeLogic<KEY,VALUE>\n      * Further inserts/removals will move the cursor from its current position to where the next change will\n      * take place using as few page pins as possible.\n      */\n-    @SuppressWarnings( \"unchecked\" )\n+    @SuppressWarnings(\"unchecked\")\n     private Level<KEY>[] levels = new Level[0]; // grows on demand\n     private int currentLevel = -1;\n     private double ratioToKeepInLeftOnSplit;\n@@ -137,7 +138,7 @@ class InternalTreeLogic<KEY,VALUE>\n         // Whether or not the upper bound is fixed or open-ended (far right in the tree)\n         private boolean upperIsOpenEnded;\n \n-        Level( Layout<KEY,?> layout )\n+        Level(Layout<KEY, ?> layout)\n         {\n             this.layout = layout;\n             this.lower = layout.newKey();\n@@ -150,15 +151,15 @@ class InternalTreeLogic<KEY,VALUE>\n          * @param key KEY to check.\n          * @return {@code true} if key is within the key range if this level, otherwise {@code false}.\n          */\n-        boolean covers( KEY key )\n+        boolean covers(KEY key)\n         {\n-            boolean insideLower = lowerIsOpenEnded || layout.compare( key, lower ) >= 0;\n-            boolean insideHigher = upperIsOpenEnded || layout.compare( key, upper ) < 0;\n+            boolean insideLower = lowerIsOpenEnded || layout.compare(key, lower) >= 0;\n+            boolean insideHigher = upperIsOpenEnded || layout.compare(key, upper) < 0;\n             return insideLower && insideHigher;\n         }\n     }\n \n-    InternalTreeLogic( IdProvider idProvider, TreeNode<KEY,VALUE> bTreeNode, Layout<KEY,VALUE> layout, GBPTree.Monitor monitor )\n+    InternalTreeLogic(IdProvider idProvider, TreeNode<KEY, VALUE> bTreeNode, Layout<KEY, VALUE> layout, GBPTree.Monitor monitor)\n     {\n         this.idProvider = idProvider;\n         this.bTreeNode = bTreeNode;\n@@ -169,33 +170,34 @@ class InternalTreeLogic<KEY,VALUE>\n         this.monitor = monitor;\n \n         // an arbitrary depth slightly bigger than an unimaginably big tree\n-        ensureStackCapacity( 10 );\n+        ensureStackCapacity(10);\n     }\n \n-    private void ensureStackCapacity( int depth )\n+    private void ensureStackCapacity(int depth)\n     {\n-        if ( depth > levels.length )\n+        if (depth > levels.length)\n         {\n             int oldStackLength = levels.length;\n-            levels = Arrays.copyOf( levels, depth );\n-            for ( int i = oldStackLength; i < depth; i++ )\n+            levels = Arrays.copyOf(levels, depth);\n+            for (int i = oldStackLength; i < depth; i++)\n             {\n-                levels[i] = new Level<>( layout );\n+                levels[i] = new Level<>(layout);\n             }\n         }\n     }\n \n-    protected void initialize( PageCursor cursorAtRoot )\n+    protected void initialize(PageCursor cursorAtRoot)\n     {\n-        initialize( cursorAtRoot, DEFAULT_SPLIT_RATIO );\n+        initialize(cursorAtRoot, DEFAULT_SPLIT_RATIO);\n     }\n \n     /**\n      * Prepare for starting over with new updates.\n-     * @param cursorAtRoot {@link PageCursor} pointing at root of tree.\n+     *\n+     * @param cursorAtRoot             {@link PageCursor} pointing at root of tree.\n      * @param ratioToKeepInLeftOnSplit Decide how much to keep in left node on split, 0=keep nothing, 0.5=split 50-50, 1=keep everything.\n      */\n-    protected void initialize( PageCursor cursorAtRoot, double ratioToKeepInLeftOnSplit )\n+    protected void initialize(PageCursor cursorAtRoot, double ratioToKeepInLeftOnSplit)\n     {\n         currentLevel = 0;\n         Level<KEY> level = levels[currentLevel];\n@@ -205,13 +207,13 @@ class InternalTreeLogic<KEY,VALUE>\n         this.ratioToKeepInLeftOnSplit = ratioToKeepInLeftOnSplit;\n     }\n \n-    private boolean popLevel( PageCursor cursor ) throws IOException\n+    private boolean popLevel(PageCursor cursor) throws IOException\n     {\n         currentLevel--;\n-        if ( currentLevel >= 0 )\n+        if (currentLevel >= 0)\n         {\n             Level<KEY> level = levels[currentLevel];\n-            TreeNode.goTo( cursor, \"parent\", level.treeNodeId );\n+            TreeNode.goTo(cursor, \"parent\", level.treeNodeId);\n             return true;\n         }\n         return false;\n@@ -230,10 +232,10 @@ class InternalTreeLogic<KEY,VALUE>\n      *   / | \\     / | \\     / | \\\n      * [E][F][G] [H][I][J] [K][L][M]\n      * </pre>\n-     *\n+     * <p>\n      * Examples:\n      * <p>\n-     *\n+     * <p>\n      * inserting a key into J (path A,C,J) after previously have inserted a key into F (path A,B,F):\n      * <p>\n      * <ol>\n@@ -251,106 +253,104 @@ class InternalTreeLogic<KEY,VALUE>\n      * <li>Popping stack, seeing that B covers new key (only by asking existing information in path)</li>\n      * <li>Binary search B to select G to go down to</li>\n      * </ol>\n-     *\n+     * <p>\n      * The closer keys are together from one change to the next, the fewer page pins and searches needs\n      * to be performed to get there.\n      *\n-     * @param cursor {@link PageCursor} to move to the correct location.\n-     * @param key KEY to make change for.\n-     * @param stableGeneration stable generation.\n+     * @param cursor             {@link PageCursor} to move to the correct location.\n+     * @param key                KEY to make change for.\n+     * @param stableGeneration   stable generation.\n      * @param unstableGeneration unstable generation.\n-     * @param cursorTracer underlying page cursor tracer.\n-     * @throws IOException on {@link PageCursor} error.\n+     * @param cursorTracer       underlying page cursor tracer.\n+     * @throws IOException                on {@link PageCursor} error.\n      * @throws TreeInconsistencyException on seeing tree nodes of unexpected type\n      */\n-    private void moveToCorrectLeaf( PageCursor cursor, KEY key, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer )\n-            throws IOException\n+    private void moveToCorrectLeaf(PageCursor cursor, KEY key, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer)\n+      throws IOException\n     {\n         int previousLevel = currentLevel;\n-        while ( !levels[currentLevel].covers( key ) )\n+        while (!levels[currentLevel].covers(key))\n         {\n             currentLevel--;\n         }\n-        if ( currentLevel != previousLevel )\n+        if (currentLevel != previousLevel)\n         {\n-            TreeNode.goTo( cursor, \"parent\", levels[currentLevel].treeNodeId );\n+            TreeNode.goTo(cursor, \"parent\", levels[currentLevel].treeNodeId);\n         }\n \n-        while ( TreeNode.isInternal( cursor ) )\n+        while (TreeNode.isInternal(cursor))\n         {\n-            ensureNodeIsTreeNode( cursor, key );\n+            ensureNodeIsTreeNode(cursor, key);\n \n             // We still need to go down further, but we're on the right path\n-            int keyCount = TreeNode.keyCount( cursor );\n-            int searchResult = search( cursor, INTERNAL, key, readKey, keyCount, cursorTracer );\n-            int childPos = childPositionOf( searchResult );\n+            int keyCount = TreeNode.keyCount(cursor);\n+            int searchResult = search(cursor, INTERNAL, key, readKey, keyCount, cursorTracer);\n+            int childPos = childPositionOf(searchResult);\n \n             Level<KEY> parentLevel = levels[currentLevel];\n             currentLevel++;\n-            ensureStackCapacity( currentLevel + 1 );\n+            ensureStackCapacity(currentLevel + 1);\n             Level<KEY> level = levels[currentLevel];\n \n             // Restrict the key range as the cursor moves down to the next level\n             level.childPos = childPos;\n             level.lowerIsOpenEnded = childPos == 0 &&\n-                    !TreeNode.isNode( TreeNode.leftSibling( cursor, stableGeneration, unstableGeneration ) );\n-            if ( !level.lowerIsOpenEnded )\n+              !TreeNode.isNode(TreeNode.leftSibling(cursor, stableGeneration, unstableGeneration));\n+            if (!level.lowerIsOpenEnded)\n             {\n-                if ( childPos == 0 )\n+                if (childPos == 0)\n                 {\n-                    layout.copyKey( parentLevel.lower, level.lower );\n+                    layout.copyKey(parentLevel.lower, level.lower);\n                     level.lowerIsOpenEnded = parentLevel.lowerIsOpenEnded;\n-                }\n-                else\n+                } else\n                 {\n-                    bTreeNode.keyAt( cursor, level.lower, childPos - 1, INTERNAL, cursorTracer );\n+                    bTreeNode.keyAt(cursor, level.lower, childPos - 1, INTERNAL, cursorTracer);\n                 }\n             }\n             level.upperIsOpenEnded = childPos >= keyCount &&\n-                    !TreeNode.isNode( TreeNode.rightSibling( cursor, stableGeneration, unstableGeneration ) );\n-            if ( !level.upperIsOpenEnded )\n+              !TreeNode.isNode(TreeNode.rightSibling(cursor, stableGeneration, unstableGeneration));\n+            if (!level.upperIsOpenEnded)\n             {\n-                if ( childPos == keyCount )\n+                if (childPos == keyCount)\n                 {\n-                    layout.copyKey( parentLevel.upper, level.upper );\n+                    layout.copyKey(parentLevel.upper, level.upper);\n                     level.upperIsOpenEnded = parentLevel.upperIsOpenEnded;\n-                }\n-                else\n+                } else\n                 {\n-                    bTreeNode.keyAt( cursor, level.upper, childPos, INTERNAL, cursorTracer );\n+                    bTreeNode.keyAt(cursor, level.upper, childPos, INTERNAL, cursorTracer);\n                 }\n             }\n \n-            long childId = bTreeNode.childAt( cursor, childPos, stableGeneration, unstableGeneration );\n-            PointerChecking.checkPointer( childId, false );\n+            long childId = bTreeNode.childAt(cursor, childPos, stableGeneration, unstableGeneration);\n+            PointerChecking.checkPointer(childId, false);\n \n-            TreeNode.goTo( cursor, \"child\", childId );\n+            TreeNode.goTo(cursor, \"child\", childId);\n             level.treeNodeId = cursor.getCurrentPageId();\n \n-            assert assertNoSuccessor( cursor, stableGeneration, unstableGeneration );\n+            assert assertNoSuccessor(cursor, stableGeneration, unstableGeneration);\n         }\n \n-        ensureNodeIsTreeNode( cursor, key );\n-        ensureTreeNodeIsLeaf( cursor, key );\n+        ensureNodeIsTreeNode(cursor, key);\n+        ensureTreeNodeIsLeaf(cursor, key);\n     }\n \n-    private void ensureNodeIsTreeNode( PageCursor cursor, KEY key )\n+    private void ensureNodeIsTreeNode(PageCursor cursor, KEY key)\n     {\n-        if ( TreeNode.nodeType( cursor ) != TreeNode.NODE_TYPE_TREE_NODE )\n+        if (TreeNode.nodeType(cursor) != TreeNode.NODE_TYPE_TREE_NODE)\n         {\n             throw new TreeInconsistencyException(\n-                    \"Index update aborted due to finding tree node that doesn't have correct type (pageId: %d, type: %d), when moving cursor towards \" + key +\n-                    \". This is most likely caused by an inconsistency in the index. \", cursor.getCurrentPageId(), TreeNode.nodeType( cursor ) );\n+              \"Index update aborted due to finding tree node that doesn't have correct type (pageId: %d, type: %d), when moving cursor towards \" + key +\n+                \". This is most likely caused by an inconsistency in the index. \", cursor.getCurrentPageId(), TreeNode.nodeType(cursor));\n         }\n     }\n \n-    private void ensureTreeNodeIsLeaf( PageCursor cursor, KEY key )\n+    private void ensureTreeNodeIsLeaf(PageCursor cursor, KEY key)\n     {\n-        if ( !TreeNode.isLeaf( cursor ) )\n+        if (!TreeNode.isLeaf(cursor))\n         {\n             throw new TreeInconsistencyException(\n-                    \"Index update aborted due to ending up on a tree node which isn't a leaf after moving cursor towards \" +\n-                    key + \", cursor is at pageId \" + cursor.getCurrentPageId() + \". This is most likely caused by an inconsistency in the index.\" );\n+              \"Index update aborted due to ending up on a tree node which isn't a leaf after moving cursor towards \" +\n+                key + \", cursor is at pageId \" + cursor.getCurrentPageId() + \". This is most likely caused by an inconsistency in the index.\");\n         }\n     }\n \n@@ -374,34 +374,34 @@ class InternalTreeLogic<KEY,VALUE>\n      * <p>\n      * Leaves cursor at the page which was last updated. No guarantees on offset.\n      *\n-     * @param cursor {@link PageCursor} pinned to root of tree (if first insert/remove since\n-     * {@link #initialize(PageCursor)}) or at where last insert/remove left it.\n+     * @param cursor               {@link PageCursor} pinned to root of tree (if first insert/remove since\n+     *                             {@link #initialize(PageCursor)}) or at where last insert/remove left it.\n      * @param structurePropagation {@link StructurePropagation} used to report structure changes between tree levels.\n-     * @param key key to be inserted\n-     * @param value value to be associated with key\n-     * @param valueMerger {@link ValueMerger} for deciding what to do with existing keys\n-     * @param createIfNotExists create this key if it doesn't exist\n-     * @param stableGeneration stable generation, i.e. generations <= this generation are considered stable.\n-     * @param unstableGeneration unstable generation, i.e. generation which is under development right now.\n-     * @param cursorTracer underlying page cursor tracer\n+     * @param key                  key to be inserted\n+     * @param value                value to be associated with key\n+     * @param valueMerger          {@link ValueMerger} for deciding what to do with existing keys\n+     * @param createIfNotExists    create this key if it doesn't exist\n+     * @param stableGeneration     stable generation, i.e. generations <= this generation are considered stable.\n+     * @param unstableGeneration   unstable generation, i.e. generation which is under development right now.\n+     * @param cursorTracer         underlying page cursor tracer\n      * @throws IOException on cursor failure\n      */\n-    void insert( PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE value, ValueMerger<KEY,VALUE> valueMerger,\n-            boolean createIfNotExists, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    void insert(PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE value, ValueMerger<KEY, VALUE> valueMerger,\n+                boolean createIfNotExists, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        assert cursorIsAtExpectedLocation( cursor );\n-        bTreeNode.validateKeyValueSize( key, value );\n-        moveToCorrectLeaf( cursor, key, stableGeneration, unstableGeneration, cursorTracer );\n+        assert cursorIsAtExpectedLocation(cursor);\n+        bTreeNode.validateKeyValueSize(key, value);\n+        moveToCorrectLeaf(cursor, key, stableGeneration, unstableGeneration, cursorTracer);\n \n-        insertInLeaf( cursor, structurePropagation, key, value, valueMerger, createIfNotExists, stableGeneration, unstableGeneration, cursorTracer );\n+        insertInLeaf(cursor, structurePropagation, key, value, valueMerger, createIfNotExists, stableGeneration, unstableGeneration, cursorTracer);\n \n-        handleStructureChanges( cursor, structurePropagation, stableGeneration, unstableGeneration, cursorTracer );\n+        handleStructureChanges(cursor, structurePropagation, stableGeneration, unstableGeneration, cursorTracer);\n     }\n \n-    private int search( PageCursor cursor, TreeNode.Type type, KEY key, KEY readKey, int keyCount, PageCursorTracer cursorTracer )\n+    private int search(PageCursor cursor, TreeNode.Type type, KEY key, KEY readKey, int keyCount, PageCursorTracer cursorTracer)\n     {\n-        int searchResult = KeySearch.search( cursor, bTreeNode, type, key, readKey, keyCount, cursorTracer );\n-        KeySearch.assertSuccess( searchResult );\n+        int searchResult = KeySearch.search(cursor, bTreeNode, type, key, readKey, keyCount, cursorTracer);\n+        KeySearch.assertSuccess(searchResult);\n         return searchResult;\n     }\n \n@@ -411,14 +411,14 @@ class InternalTreeLogic<KEY,VALUE>\n      * @param cursor {@link PageCursor} to check.\n      * @return {@code true} so that it can be called in an {@code assert} statement.\n      */\n-    private boolean cursorIsAtExpectedLocation( PageCursor cursor )\n+    private boolean cursorIsAtExpectedLocation(PageCursor cursor)\n     {\n         assert currentLevel >= 0 : \"Uninitialized tree logic, currentLevel:\" + currentLevel;\n         long currentPageId = cursor.getCurrentPageId();\n         long expectedPageId = levels[currentLevel].treeNodeId;\n         assert currentPageId == expectedPageId : \"Expected cursor to be at page:\" +\n-                expectedPageId + \" at level:\" + currentLevel + \", but was at page:\" +\n-                currentPageId;\n+          expectedPageId + \" at level:\" + currentLevel + \", but was at page:\" +\n+          currentPageId;\n         return true;\n     }\n \n@@ -428,47 +428,47 @@ class InternalTreeLogic<KEY,VALUE>\n      * Insertion in internal is always triggered by a split in child.\n      * The result of a split is a primary key that is sent upwards in the b+tree and the newly created right child.\n      *\n-     * @param cursor {@link PageCursor} pinned to page containing internal node, current node\n+     * @param cursor               {@link PageCursor} pinned to page containing internal node, current node\n      * @param structurePropagation {@link StructurePropagation} used to report structure changes between tree levels.\n-     * @param keyCount the key count of current node\n-     * @param primKey the primary key to be inserted\n-     * @param rightChild the right child of primKey\n+     * @param keyCount             the key count of current node\n+     * @param primKey              the primary key to be inserted\n+     * @param rightChild           the right child of primKey\n      * @throws IOException on cursor failure\n      */\n-    private void insertInInternal( PageCursor cursor, StructurePropagation<KEY> structurePropagation, int keyCount,\n-            KEY primKey, long rightChild, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer )\n-            throws IOException\n+    private void insertInInternal(PageCursor cursor, StructurePropagation<KEY> structurePropagation, int keyCount,\n+                                  KEY primKey, long rightChild, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer)\n+      throws IOException\n     {\n-        createSuccessorIfNeeded( cursor, structurePropagation, UPDATE_MID_CHILD,\n-                stableGeneration, unstableGeneration, cursorTracer );\n+        createSuccessorIfNeeded(cursor, structurePropagation, UPDATE_MID_CHILD,\n+          stableGeneration, unstableGeneration, cursorTracer);\n \n-        doInsertInInternal( cursor, structurePropagation, keyCount, primKey, rightChild, stableGeneration, unstableGeneration, cursorTracer );\n+        doInsertInInternal(cursor, structurePropagation, keyCount, primKey, rightChild, stableGeneration, unstableGeneration, cursorTracer);\n     }\n \n-    private void doInsertInInternal( PageCursor cursor, StructurePropagation<KEY> structurePropagation, int keyCount, KEY primKey,\n-            long rightChild, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void doInsertInInternal(PageCursor cursor, StructurePropagation<KEY> structurePropagation, int keyCount, KEY primKey,\n+                                    long rightChild, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        Overflow overflow = bTreeNode.internalOverflow( cursor, keyCount, primKey );\n-        if ( overflow == YES )\n+        Overflow overflow = bTreeNode.internalOverflow(cursor, keyCount, primKey);\n+        if (overflow == YES)\n         {\n             // Overflow\n             // We will overwrite rightKey in structurePropagation, so copy it over to a place holder\n-            layout.copyKey( primKey, newKeyPlaceHolder );\n-            splitInternal( cursor, structurePropagation, newKeyPlaceHolder, rightChild, keyCount,\n-                    stableGeneration, unstableGeneration, cursorTracer );\n+            layout.copyKey(primKey, newKeyPlaceHolder);\n+            splitInternal(cursor, structurePropagation, newKeyPlaceHolder, rightChild, keyCount,\n+              stableGeneration, unstableGeneration, cursorTracer);\n             return;\n         }\n \n-        if ( overflow == NO_NEED_DEFRAG )\n+        if (overflow == NO_NEED_DEFRAG)\n         {\n-            bTreeNode.defragmentInternal( cursor );\n+            bTreeNode.defragmentInternal(cursor);\n         }\n \n         // No overflow\n-        int pos = positionOf( search( cursor, INTERNAL, primKey, readKey, keyCount, cursorTracer ) );\n-        bTreeNode.insertKeyAndRightChildAt( cursor, primKey, rightChild, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+        int pos = positionOf(search(cursor, INTERNAL, primKey, readKey, keyCount, cursorTracer));\n+        bTreeNode.insertKeyAndRightChildAt(cursor, primKey, rightChild, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n         // Increase key count\n-        TreeNode.setKeyCount( cursor, keyCount + 1 );\n+        TreeNode.setKeyCount(cursor, keyCount + 1);\n     }\n \n     /**\n@@ -476,55 +476,56 @@ class InternalTreeLogic<KEY,VALUE>\n      * <p>\n      * Split in internal node caused by an insertion of rightKey and newRightChild\n      *\n-     * @param cursor {@link PageCursor} pinned to page containing internal node, full node.\n+     * @param cursor               {@link PageCursor} pinned to page containing internal node, full node.\n      * @param structurePropagation {@link StructurePropagation} used to report structure changes between tree levels.\n-     * @param newKey new key to be inserted together with newRightChild, causing the split\n-     * @param newRightChild new child to be inserted to the right of newKey\n-     * @param keyCount key count for fullNode\n-     * @param cursorTracer underlying page cursor tracer.\n+     * @param newKey               new key to be inserted together with newRightChild, causing the split\n+     * @param newRightChild        new child to be inserted to the right of newKey\n+     * @param keyCount             key count for fullNode\n+     * @param cursorTracer         underlying page cursor tracer.\n      * @throws IOException on cursor failure\n      */\n-    private void splitInternal( PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY newKey,\n-            long newRightChild, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void splitInternal(PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY newKey,\n+                               long newRightChild, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer)\n+      throws IOException\n     {\n         long current = cursor.getCurrentPageId();\n-        long oldRight = TreeNode.rightSibling( cursor, stableGeneration, unstableGeneration );\n-        PointerChecking.checkPointer( oldRight, true );\n-        long newRight = idProvider.acquireNewId( stableGeneration, unstableGeneration, cursorTracer );\n+        long oldRight = TreeNode.rightSibling(cursor, stableGeneration, unstableGeneration);\n+        PointerChecking.checkPointer(oldRight, true);\n+        long newRight = idProvider.acquireNewId(stableGeneration, unstableGeneration, cursorTracer);\n \n         // Find position to insert new key\n-        int pos = positionOf( search( cursor, INTERNAL, newKey, readKey, keyCount, cursorTracer ) );\n+        int pos = positionOf(search(cursor, INTERNAL, newKey, readKey, keyCount, cursorTracer));\n \n         // Update structurePropagation\n         structurePropagation.hasRightKeyInsert = true;\n         structurePropagation.midChild = current;\n         structurePropagation.rightChild = newRight;\n \n-        try ( PageCursor rightCursor = cursor.openLinkedCursor( newRight ) )\n+        try (PageCursor rightCursor = cursor.openLinkedCursor(newRight))\n         {\n             // Initialize new right\n-            TreeNode.goTo( rightCursor, \"new right sibling in split\", newRight );\n-            bTreeNode.initializeInternal( rightCursor, stableGeneration, unstableGeneration );\n-            TreeNode.setRightSibling( rightCursor, oldRight, stableGeneration, unstableGeneration );\n-            TreeNode.setLeftSibling( rightCursor, current, stableGeneration, unstableGeneration );\n+            TreeNode.goTo(rightCursor, \"new right sibling in split\", newRight);\n+            bTreeNode.initializeInternal(rightCursor, stableGeneration, unstableGeneration);\n+            TreeNode.setRightSibling(rightCursor, oldRight, stableGeneration, unstableGeneration);\n+            TreeNode.setLeftSibling(rightCursor, current, stableGeneration, unstableGeneration);\n \n             // Do split\n-            bTreeNode.doSplitInternal( cursor, keyCount, rightCursor, pos, newKey, newRightChild, stableGeneration, unstableGeneration,\n-                    structurePropagation.rightKey, ratioToKeepInLeftOnSplit, cursorTracer );\n+            bTreeNode.doSplitInternal(cursor, keyCount, rightCursor, pos, newKey, newRightChild, stableGeneration, unstableGeneration,\n+              structurePropagation.rightKey, ratioToKeepInLeftOnSplit, cursorTracer);\n         }\n \n         // Update old right with new left sibling (newRight)\n-        if ( TreeNode.isNode( oldRight ) )\n+        if (TreeNode.isNode(oldRight))\n         {\n-            try ( PageCursor oldRightCursor = cursor.openLinkedCursor( oldRight ) )\n+            try (PageCursor oldRightCursor = cursor.openLinkedCursor(oldRight))\n             {\n-                TreeNode.goTo( oldRightCursor, \"old right sibling\", oldRight );\n-                TreeNode.setLeftSibling( oldRightCursor, newRight, stableGeneration, unstableGeneration );\n+                TreeNode.goTo(oldRightCursor, \"old right sibling\", oldRight);\n+                TreeNode.setLeftSibling(oldRightCursor, newRight, stableGeneration, unstableGeneration);\n             }\n         }\n \n         // Update left node with new right sibling\n-        TreeNode.setRightSibling( cursor, newRight, stableGeneration, unstableGeneration );\n+        TreeNode.setRightSibling(cursor, newRight, stableGeneration, unstableGeneration);\n     }\n \n     /**\n@@ -532,102 +533,100 @@ class InternalTreeLogic<KEY,VALUE>\n      * <p>\n      * Split in leaf node caused by an insertion of key and value\n      *\n-     * @param cursor {@link PageCursor} pinned to page containing leaf node targeted for insertion.\n+     * @param cursor               {@link PageCursor} pinned to page containing leaf node targeted for insertion.\n      * @param structurePropagation {@link StructurePropagation} used to report structure changes between tree levels.\n-     * @param key key to be inserted\n-     * @param value value to be associated with key\n-     * @param valueMerger {@link ValueMerger} for deciding what to do with existing keys\n-     * @param createIfNotExists create this key if it doesn't exist\n-     * @param cursorTracer underlying page cursor tracer.\n+     * @param key                  key to be inserted\n+     * @param value                value to be associated with key\n+     * @param valueMerger          {@link ValueMerger} for deciding what to do with existing keys\n+     * @param createIfNotExists    create this key if it doesn't exist\n+     * @param cursorTracer         underlying page cursor tracer.\n      * @throws IOException on cursor failure\n      */\n-    private void insertInLeaf( PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE value, ValueMerger<KEY,VALUE> valueMerger,\n-            boolean createIfNotExists, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void insertInLeaf(PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE value, ValueMerger<KEY, VALUE> valueMerger,\n+                              boolean createIfNotExists, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        int keyCount = TreeNode.keyCount( cursor );\n-        int search = search( cursor, LEAF, key, readKey, keyCount, cursorTracer );\n-        int pos = positionOf( search );\n-        if ( isHit( search ) )\n+        int keyCount = TreeNode.keyCount(cursor);\n+        int search = search(cursor, LEAF, key, readKey, keyCount, cursorTracer);\n+        int pos = positionOf(search);\n+        if (isHit(search))\n         {\n-            mergeValue( cursor, structurePropagation, key, value, valueMerger, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+            mergeValue(cursor, structurePropagation, key, value, valueMerger, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n             return;\n         }\n \n-        if ( createIfNotExists )\n+        if (createIfNotExists)\n         {\n-            createSuccessorIfNeeded( cursor, structurePropagation, UPDATE_MID_CHILD, stableGeneration, unstableGeneration, cursorTracer );\n-            doInsertInLeaf( cursor, structurePropagation, key, value, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+            createSuccessorIfNeeded(cursor, structurePropagation, UPDATE_MID_CHILD, stableGeneration, unstableGeneration, cursorTracer);\n+            doInsertInLeaf(cursor, structurePropagation, key, value, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n         }\n     }\n \n-    private void mergeValue( PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE value,\n-            ValueMerger<KEY,VALUE> valueMerger, int pos, int keyCount, long stableGeneration, long unstableGeneration,\n-            PageCursorTracer cursorTracer ) throws IOException\n+    private void mergeValue(PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE value,\n+                            ValueMerger<KEY, VALUE> valueMerger, int pos, int keyCount, long stableGeneration, long unstableGeneration,\n+                            PageCursorTracer cursorTracer) throws IOException\n     {\n         // This key already exists, what shall we do? ask the valueMerger\n-        bTreeNode.valueAt( cursor, readValue, pos, cursorTracer );\n-        ValueMerger.MergeResult mergeResult = valueMerger.merge( readKey, key, readValue, value );\n-        if ( mergeResult == ValueMerger.MergeResult.UNCHANGED )\n+        bTreeNode.valueAt(cursor, readValue, pos, cursorTracer);\n+        ValueMerger.MergeResult mergeResult = valueMerger.merge(readKey, key, readValue, value);\n+        if (mergeResult == ValueMerger.MergeResult.UNCHANGED)\n         {\n             return;\n         }\n \n-        createSuccessorIfNeeded( cursor, structurePropagation, UPDATE_MID_CHILD, stableGeneration, unstableGeneration, cursorTracer );\n-        if ( mergeResult == ValueMerger.MergeResult.REPLACED || mergeResult == ValueMerger.MergeResult.MERGED )\n+        createSuccessorIfNeeded(cursor, structurePropagation, UPDATE_MID_CHILD, stableGeneration, unstableGeneration, cursorTracer);\n+        if (mergeResult == ValueMerger.MergeResult.REPLACED || mergeResult == ValueMerger.MergeResult.MERGED)\n         {\n             // First try to write the merged value right in there\n             VALUE mergedValue = mergeResult == ValueMerger.MergeResult.REPLACED ? value : readValue;\n-            boolean couldOverwrite = bTreeNode.setValueAt( cursor, mergedValue, pos );\n-            if ( !couldOverwrite )\n+            boolean couldOverwrite = bTreeNode.setValueAt(cursor, mergedValue, pos);\n+            if (!couldOverwrite)\n             {\n                 // Value could not be overwritten in a simple way because they differ in size.\n                 // Delete old value and insert w/ overflow/underflow checks.\n-                bTreeNode.removeKeyValueAt( cursor, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n-                TreeNode.setKeyCount( cursor, keyCount - 1 );\n-                boolean didSplit = doInsertInLeaf( cursor, structurePropagation, key, mergedValue, pos, keyCount - 1, stableGeneration,\n-                        unstableGeneration, cursorTracer );\n-                if ( !didSplit && bTreeNode.leafUnderflow( cursor, keyCount ) )\n+                bTreeNode.removeKeyValueAt(cursor, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n+                TreeNode.setKeyCount(cursor, keyCount - 1);\n+                boolean didSplit = doInsertInLeaf(cursor, structurePropagation, key, mergedValue, pos, keyCount - 1, stableGeneration,\n+                  unstableGeneration, cursorTracer);\n+                if (!didSplit && bTreeNode.leafUnderflow(cursor, keyCount))\n                 {\n-                    underflowInLeaf( cursor, structurePropagation, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+                    underflowInLeaf(cursor, structurePropagation, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n                 }\n             }\n-        }\n-        else if ( mergeResult == ValueMerger.MergeResult.REMOVED )\n+        } else if (mergeResult == ValueMerger.MergeResult.REMOVED)\n         {\n             // Remove this entry from the tree and possible underflow while doing so\n-            bTreeNode.removeKeyValueAt( cursor, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+            bTreeNode.removeKeyValueAt(cursor, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n             int newKeyCount = keyCount - 1;\n-            TreeNode.setKeyCount( cursor, newKeyCount );\n-            if ( bTreeNode.leafUnderflow( cursor, newKeyCount ) )\n+            TreeNode.setKeyCount(cursor, newKeyCount);\n+            if (bTreeNode.leafUnderflow(cursor, newKeyCount))\n             {\n-                underflowInLeaf( cursor, structurePropagation, newKeyCount, stableGeneration, unstableGeneration, cursorTracer );\n+                underflowInLeaf(cursor, structurePropagation, newKeyCount, stableGeneration, unstableGeneration, cursorTracer);\n             }\n-        }\n-        else\n+        } else\n         {\n-            throw new UnsupportedOperationException( \"Unexpected merge result \" + mergeResult );\n+            throw new UnsupportedOperationException(\"Unexpected merge result \" + mergeResult);\n         }\n     }\n \n-    private boolean doInsertInLeaf( PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE value, int pos,\n-            int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private boolean doInsertInLeaf(PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE value, int pos,\n+                                   int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        Overflow overflow = bTreeNode.leafOverflow( cursor, keyCount, key, value );\n-        if ( overflow == YES )\n+        Overflow overflow = bTreeNode.leafOverflow(cursor, keyCount, key, value);\n+        if (overflow == YES)\n         {\n             // Overflow, split leaf\n-            splitLeaf( cursor, structurePropagation, key, value, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+            splitLeaf(cursor, structurePropagation, key, value, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n             return true;\n         }\n \n-        if ( overflow == NO_NEED_DEFRAG )\n+        if (overflow == NO_NEED_DEFRAG)\n         {\n-            bTreeNode.defragmentLeaf( cursor );\n+            bTreeNode.defragmentLeaf(cursor);\n         }\n \n         // No overflow, insert key and value\n-        bTreeNode.insertKeyValueAt( cursor, key, value, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n-        TreeNode.setKeyCount( cursor, keyCount + 1 );\n+        bTreeNode.insertKeyValueAt(cursor, key, value, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n+        TreeNode.setKeyCount(cursor, keyCount + 1);\n         return false;\n     }\n \n@@ -635,16 +634,16 @@ class InternalTreeLogic<KEY,VALUE>\n      * Leaves cursor at same page as when called. No guarantees on offset.\n      * Cursor is expected to be pointing to full leaf.\n      *\n-     * @param cursor cursor pointing into full (left) leaf that should be split in two.\n+     * @param cursor               cursor pointing into full (left) leaf that should be split in two.\n      * @param structurePropagation {@link StructurePropagation} used to report structure changes between tree levels.\n-     * @param newKey key to be inserted\n-     * @param newValue value to be inserted (in association with key)\n-     * @param keyCount number of keys in this leaf (it was already read anyway)\n+     * @param newKey               key to be inserted\n+     * @param newValue             value to be inserted (in association with key)\n+     * @param keyCount             number of keys in this leaf (it was already read anyway)\n      * @throws IOException on cursor failure\n      */\n-    private void splitLeaf( PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n-            KEY newKey, VALUE newValue, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer )\n-                    throws IOException\n+    private void splitLeaf(PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n+                           KEY newKey, VALUE newValue, int keyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer)\n+      throws IOException\n     {\n         // To avoid moving cursor between pages we do all operations on left node first.\n \n@@ -661,9 +660,9 @@ class InternalTreeLogic<KEY,VALUE>\n         //\n \n         long current = cursor.getCurrentPageId();\n-        long oldRight = TreeNode.rightSibling( cursor, stableGeneration, unstableGeneration );\n-        PointerChecking.checkPointer( oldRight, true );\n-        long newRight = idProvider.acquireNewId( stableGeneration, unstableGeneration, cursorTracer );\n+        long oldRight = TreeNode.rightSibling(cursor, stableGeneration, unstableGeneration);\n+        PointerChecking.checkPointer(oldRight, true);\n+        long newRight = idProvider.acquireNewId(stableGeneration, unstableGeneration, cursorTracer);\n \n         // BALANCE KEYS AND VALUES\n         // Two different scenarios\n@@ -697,37 +696,37 @@ class InternalTreeLogic<KEY,VALUE>\n         //\n \n         // Position where newKey / newValue is to be inserted\n-        int pos = positionOf( search( cursor, LEAF, newKey, readKey, keyCount, cursorTracer ) );\n+        int pos = positionOf(search(cursor, LEAF, newKey, readKey, keyCount, cursorTracer));\n \n         structurePropagation.hasRightKeyInsert = true;\n         structurePropagation.midChild = current;\n         structurePropagation.rightChild = newRight;\n \n-        try ( PageCursor rightCursor = cursor.openLinkedCursor( newRight ) )\n+        try (PageCursor rightCursor = cursor.openLinkedCursor(newRight))\n         {\n             // Initialize new right\n-            TreeNode.goTo( rightCursor, \"new right sibling in split\", newRight );\n-            bTreeNode.initializeLeaf( rightCursor, stableGeneration, unstableGeneration );\n-            TreeNode.setRightSibling( rightCursor, oldRight, stableGeneration, unstableGeneration );\n-            TreeNode.setLeftSibling( rightCursor, current, stableGeneration, unstableGeneration );\n+            TreeNode.goTo(rightCursor, \"new right sibling in split\", newRight);\n+            bTreeNode.initializeLeaf(rightCursor, stableGeneration, unstableGeneration);\n+            TreeNode.setRightSibling(rightCursor, oldRight, stableGeneration, unstableGeneration);\n+            TreeNode.setLeftSibling(rightCursor, current, stableGeneration, unstableGeneration);\n \n             // Do split\n-            bTreeNode.doSplitLeaf( cursor, keyCount, rightCursor, pos, newKey, newValue, structurePropagation.rightKey, ratioToKeepInLeftOnSplit,\n-                    stableGeneration, unstableGeneration, cursorTracer );\n+            bTreeNode.doSplitLeaf(cursor, keyCount, rightCursor, pos, newKey, newValue, structurePropagation.rightKey, ratioToKeepInLeftOnSplit,\n+              stableGeneration, unstableGeneration, cursorTracer);\n         }\n \n         // Update old right with new left sibling (newRight)\n-        if ( TreeNode.isNode( oldRight ) )\n+        if (TreeNode.isNode(oldRight))\n         {\n-            try ( PageCursor oldRightCursor = cursor.openLinkedCursor( oldRight ) )\n+            try (PageCursor oldRightCursor = cursor.openLinkedCursor(oldRight))\n             {\n-                TreeNode.goTo( oldRightCursor, \"old right sibling\", oldRight );\n-                TreeNode.setLeftSibling( oldRightCursor, newRight, stableGeneration, unstableGeneration );\n+                TreeNode.goTo(oldRightCursor, \"old right sibling\", oldRight);\n+                TreeNode.setLeftSibling(oldRightCursor, newRight, stableGeneration, unstableGeneration);\n             }\n         }\n \n         // Update left child\n-        TreeNode.setRightSibling( cursor, newRight, stableGeneration, unstableGeneration );\n+        TreeNode.setRightSibling(cursor, newRight, stableGeneration, unstableGeneration);\n     }\n \n     /**\n@@ -743,327 +742,323 @@ class InternalTreeLogic<KEY,VALUE>\n      * <p>\n      * Leaves cursor at the page which was last updated. No guarantees on offset.\n      *\n-     * @param cursor {@link PageCursor} pinned to root of tree (if first insert/remove since\n-     * {@link #initialize(PageCursor)}) or at where last insert/remove left it.\n+     * @param cursor               {@link PageCursor} pinned to root of tree (if first insert/remove since\n+     *                             {@link #initialize(PageCursor)}) or at where last insert/remove left it.\n      * @param structurePropagation {@link StructurePropagation} used to report structure changes between tree levels.\n-     * @param key key to be removed\n-     * @param into {@code VALUE} instance to write removed value to\n-     * @param stableGeneration stable generation, i.e. generations <= this generation are considered stable.\n-     * @param unstableGeneration unstable generation, i.e. generation which is under development right now.\n+     * @param key                  key to be removed\n+     * @param into                 {@code VALUE} instance to write removed value to\n+     * @param stableGeneration     stable generation, i.e. generations <= this generation are considered stable.\n+     * @param unstableGeneration   unstable generation, i.e. generation which is under development right now.\n      * @return Provided {@code into}, populated with removed value for convenience if {@code key} was removed.\n      * Otherwise {@code null}.\n      * @throws IOException on cursor failure\n      */\n-    VALUE remove( PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE into,\n-            long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    VALUE remove(PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY key, VALUE into,\n+                 long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        assert cursorIsAtExpectedLocation( cursor );\n-        moveToCorrectLeaf( cursor, key, stableGeneration, unstableGeneration, cursorTracer );\n+        assert cursorIsAtExpectedLocation(cursor);\n+        moveToCorrectLeaf(cursor, key, stableGeneration, unstableGeneration, cursorTracer);\n \n-        if ( !removeFromLeaf( cursor, structurePropagation, key, into, stableGeneration, unstableGeneration, cursorTracer ) )\n+        if (!removeFromLeaf(cursor, structurePropagation, key, into, stableGeneration, unstableGeneration, cursorTracer))\n         {\n             return null;\n         }\n \n-        handleStructureChanges( cursor, structurePropagation, stableGeneration, unstableGeneration, cursorTracer );\n+        handleStructureChanges(cursor, structurePropagation, stableGeneration, unstableGeneration, cursorTracer);\n \n-        if ( currentLevel <= 0 )\n+        if (currentLevel <= 0)\n         {\n-            tryShrinkTree( cursor, structurePropagation, stableGeneration, unstableGeneration, cursorTracer );\n+            tryShrinkTree(cursor, structurePropagation, stableGeneration, unstableGeneration, cursorTracer);\n         }\n \n         return into;\n     }\n \n-    private void handleStructureChanges( PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n-            long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void handleStructureChanges(PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n+                                        long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        while ( structurePropagation.hasLeftChildUpdate  ||\n-                structurePropagation.hasMidChildUpdate ||\n-                structurePropagation.hasRightChildUpdate ||\n-                structurePropagation.hasLeftKeyReplace ||\n-                structurePropagation.hasRightKeyReplace ||\n-                structurePropagation.hasRightKeyInsert )\n+        while (structurePropagation.hasLeftChildUpdate ||\n+          structurePropagation.hasMidChildUpdate ||\n+          structurePropagation.hasRightChildUpdate ||\n+          structurePropagation.hasLeftKeyReplace ||\n+          structurePropagation.hasRightKeyReplace ||\n+          structurePropagation.hasRightKeyInsert)\n         {\n             int pos = levels[currentLevel].childPos;\n-            if ( !popLevel( cursor ) )\n+            if (!popLevel(cursor))\n             {\n                 // Root split, let that be handled outside\n                 break;\n             }\n \n-            if ( structurePropagation.hasLeftChildUpdate )\n+            if (structurePropagation.hasLeftChildUpdate)\n             {\n                 structurePropagation.hasLeftChildUpdate = false;\n-                if ( pos == 0 )\n+                if (pos == 0)\n                 {\n-                    updateRightmostChildInLeftSibling( cursor, structurePropagation.leftChild,\n-                            stableGeneration, unstableGeneration );\n-                }\n-                else\n+                    updateRightmostChildInLeftSibling(cursor, structurePropagation.leftChild,\n+                      stableGeneration, unstableGeneration);\n+                } else\n                 {\n-                    bTreeNode.setChildAt( cursor, structurePropagation.leftChild, pos - 1,\n-                            stableGeneration, unstableGeneration );\n+                    bTreeNode.setChildAt(cursor, structurePropagation.leftChild, pos - 1,\n+                      stableGeneration, unstableGeneration);\n                 }\n             }\n \n-            if ( structurePropagation.hasMidChildUpdate )\n+            if (structurePropagation.hasMidChildUpdate)\n             {\n-                updateMidChild( cursor, structurePropagation, pos, stableGeneration, unstableGeneration );\n+                updateMidChild(cursor, structurePropagation, pos, stableGeneration, unstableGeneration);\n             }\n \n-            if ( structurePropagation.hasRightChildUpdate )\n+            if (structurePropagation.hasRightChildUpdate)\n             {\n                 structurePropagation.hasRightChildUpdate = false;\n-                int keyCount = TreeNode.keyCount( cursor );\n-                if ( pos == keyCount )\n+                int keyCount = TreeNode.keyCount(cursor);\n+                if (pos == keyCount)\n                 {\n-                    updateLeftmostChildInRightSibling( cursor, structurePropagation.rightChild,\n-                            stableGeneration, unstableGeneration );\n-                }\n-                else\n+                    updateLeftmostChildInRightSibling(cursor, structurePropagation.rightChild,\n+                      stableGeneration, unstableGeneration);\n+                } else\n                 {\n-                    bTreeNode.setChildAt( cursor, structurePropagation.rightChild, pos + 1,\n-                            stableGeneration, unstableGeneration );\n+                    bTreeNode.setChildAt(cursor, structurePropagation.rightChild, pos + 1,\n+                      stableGeneration, unstableGeneration);\n                 }\n             }\n \n             // Insert before replace because replace can lead to split and another insert in next level.\n             // Replace can only come from rebalance on lower levels and because we do no rebalance among\n             // internal nodes we will only ever have one replace on our way up.\n-            if ( structurePropagation.hasRightKeyInsert )\n+            if (structurePropagation.hasRightKeyInsert)\n             {\n                 structurePropagation.hasRightKeyInsert = false;\n-                insertInInternal( cursor, structurePropagation, TreeNode.keyCount( cursor ),\n-                        structurePropagation.rightKey, structurePropagation.rightChild,\n-                        stableGeneration, unstableGeneration, cursorTracer );\n+                insertInInternal(cursor, structurePropagation, TreeNode.keyCount(cursor),\n+                  structurePropagation.rightKey, structurePropagation.rightChild,\n+                  stableGeneration, unstableGeneration, cursorTracer);\n             }\n \n-            if ( structurePropagation.hasLeftKeyReplace &&\n-                    levels[currentLevel].covers( structurePropagation.leftKey ) )\n+            if (structurePropagation.hasLeftKeyReplace &&\n+              levels[currentLevel].covers(structurePropagation.leftKey))\n             {\n                 structurePropagation.hasLeftKeyReplace = false;\n-                switch ( structurePropagation.keyReplaceStrategy )\n+                switch (structurePropagation.keyReplaceStrategy)\n                 {\n-                case REPLACE:\n-                    overwriteKeyInternal( cursor, structurePropagation, structurePropagation.leftKey, pos - 1,\n-                            stableGeneration, unstableGeneration, cursorTracer );\n-                    break;\n-                case BUBBLE:\n-                    replaceKeyByBubbleRightmostFromSubtree( cursor, structurePropagation, pos - 1,\n-                            stableGeneration, unstableGeneration, cursorTracer );\n-                    break;\n-                default:\n-                    throw new IllegalArgumentException( \"Unknown KeyReplaceStrategy \" +\n-                            structurePropagation.keyReplaceStrategy );\n+                    case REPLACE:\n+                        overwriteKeyInternal(cursor, structurePropagation, structurePropagation.leftKey, pos - 1,\n+                          stableGeneration, unstableGeneration, cursorTracer);\n+                        break;\n+                    case BUBBLE:\n+                        replaceKeyByBubbleRightmostFromSubtree(cursor, structurePropagation, pos - 1,\n+                          stableGeneration, unstableGeneration, cursorTracer);\n+                        break;\n+                    default:\n+                        throw new IllegalArgumentException(\"Unknown KeyReplaceStrategy \" +\n+                          structurePropagation.keyReplaceStrategy);\n                 }\n             }\n \n-            if ( structurePropagation.hasRightKeyReplace &&\n-                    levels[currentLevel].covers( structurePropagation.rightKey ) )\n+            if (structurePropagation.hasRightKeyReplace &&\n+              levels[currentLevel].covers(structurePropagation.rightKey))\n             {\n                 structurePropagation.hasRightKeyReplace = false;\n-                switch ( structurePropagation.keyReplaceStrategy )\n+                switch (structurePropagation.keyReplaceStrategy)\n                 {\n-                case REPLACE:\n-                    overwriteKeyInternal( cursor, structurePropagation, structurePropagation.rightKey, pos,\n-                            stableGeneration, unstableGeneration, cursorTracer );\n-                    break;\n-                case BUBBLE:\n-                    replaceKeyByBubbleRightmostFromSubtree( cursor, structurePropagation, pos,\n-                            stableGeneration, unstableGeneration, cursorTracer );\n-                    break;\n-                default:\n-                    throw new IllegalArgumentException( \"Unknown KeyReplaceStrategy \" +\n-                            structurePropagation.keyReplaceStrategy );\n+                    case REPLACE:\n+                        overwriteKeyInternal(cursor, structurePropagation, structurePropagation.rightKey, pos,\n+                          stableGeneration, unstableGeneration, cursorTracer);\n+                        break;\n+                    case BUBBLE:\n+                        replaceKeyByBubbleRightmostFromSubtree(cursor, structurePropagation, pos,\n+                          stableGeneration, unstableGeneration, cursorTracer);\n+                        break;\n+                    default:\n+                        throw new IllegalArgumentException(\"Unknown KeyReplaceStrategy \" +\n+                          structurePropagation.keyReplaceStrategy);\n                 }\n             }\n         }\n     }\n \n-    private void overwriteKeyInternal( PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY newKey, int pos,\n-            long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void overwriteKeyInternal(PageCursor cursor, StructurePropagation<KEY> structurePropagation, KEY newKey, int pos,\n+                                      long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        createSuccessorIfNeeded( cursor, structurePropagation, UPDATE_MID_CHILD,\n-                stableGeneration, unstableGeneration, cursorTracer );\n-        int keyCount = TreeNode.keyCount( cursor );\n-        boolean couldOverwrite = bTreeNode.setKeyAtInternal( cursor, newKey, pos );\n-        if ( !couldOverwrite )\n+        createSuccessorIfNeeded(cursor, structurePropagation, UPDATE_MID_CHILD,\n+          stableGeneration, unstableGeneration, cursorTracer);\n+        int keyCount = TreeNode.keyCount(cursor);\n+        boolean couldOverwrite = bTreeNode.setKeyAtInternal(cursor, newKey, pos);\n+        if (!couldOverwrite)\n         {\n             // Remove key and right child\n-            long rightChild = bTreeNode.childAt( cursor, pos + 1, stableGeneration, unstableGeneration );\n-            bTreeNode.removeKeyAndRightChildAt( cursor, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n-            TreeNode.setKeyCount( cursor, keyCount - 1 );\n+            long rightChild = bTreeNode.childAt(cursor, pos + 1, stableGeneration, unstableGeneration);\n+            bTreeNode.removeKeyAndRightChildAt(cursor, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n+            TreeNode.setKeyCount(cursor, keyCount - 1);\n \n-            doInsertInInternal( cursor, structurePropagation, keyCount - 1, newKey, rightChild, stableGeneration, unstableGeneration, cursorTracer );\n+            doInsertInInternal(cursor, structurePropagation, keyCount - 1, newKey, rightChild, stableGeneration, unstableGeneration, cursorTracer);\n         }\n     }\n \n-    private void tryShrinkTree( PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n-            long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void tryShrinkTree(PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n+                               long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n         // New root will be propagated out. If rootKeyCount is 0 we can shrink the tree.\n-        int rootKeyCount = TreeNode.keyCount( cursor );\n+        int rootKeyCount = TreeNode.keyCount(cursor);\n \n-        while ( rootKeyCount == 0 && TreeNode.isInternal( cursor ) )\n+        while (rootKeyCount == 0 && TreeNode.isInternal(cursor))\n         {\n             long oldRoot = cursor.getCurrentPageId();\n-            long onlyChildOfRoot = bTreeNode.childAt( cursor, 0, stableGeneration, unstableGeneration );\n-            PointerChecking.checkPointer( onlyChildOfRoot, false );\n+            long onlyChildOfRoot = bTreeNode.childAt(cursor, 0, stableGeneration, unstableGeneration);\n+            PointerChecking.checkPointer(onlyChildOfRoot, false);\n \n             structurePropagation.hasMidChildUpdate = true;\n             structurePropagation.midChild = onlyChildOfRoot;\n \n-            idProvider.releaseId( stableGeneration, unstableGeneration, oldRoot, cursorTracer );\n-            TreeNode.goTo( cursor, \"child\", onlyChildOfRoot );\n+            idProvider.releaseId(stableGeneration, unstableGeneration, oldRoot, cursorTracer);\n+            TreeNode.goTo(cursor, \"child\", onlyChildOfRoot);\n \n-            rootKeyCount = TreeNode.keyCount( cursor );\n+            rootKeyCount = TreeNode.keyCount(cursor);\n             monitor.treeShrink();\n         }\n     }\n \n-    private void updateMidChild( PageCursor cursor, StructurePropagation<KEY> structurePropagation, int childPos,\n-            long stableGeneration, long unstableGeneration )\n+    private void updateMidChild(PageCursor cursor, StructurePropagation<KEY> structurePropagation, int childPos,\n+                                long stableGeneration, long unstableGeneration)\n     {\n         structurePropagation.hasMidChildUpdate = false;\n-        bTreeNode.setChildAt( cursor, structurePropagation.midChild, childPos,\n-                stableGeneration, unstableGeneration );\n+        bTreeNode.setChildAt(cursor, structurePropagation.midChild, childPos,\n+          stableGeneration, unstableGeneration);\n     }\n \n-    private void replaceKeyByBubbleRightmostFromSubtree( PageCursor cursor,\n-            StructurePropagation<KEY> structurePropagation, int subtreePosition,\n-            long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void replaceKeyByBubbleRightmostFromSubtree(PageCursor cursor,\n+                                                        StructurePropagation<KEY> structurePropagation, int subtreePosition,\n+                                                        long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n         long currentPageId = cursor.getCurrentPageId();\n-        long subtree = bTreeNode.childAt( cursor, subtreePosition, stableGeneration, unstableGeneration );\n-        PointerChecking.checkPointer( subtree, false );\n+        long subtree = bTreeNode.childAt(cursor, subtreePosition, stableGeneration, unstableGeneration);\n+        PointerChecking.checkPointer(subtree, false);\n \n-        TreeNode.goTo( cursor, \"child\", subtree );\n-        boolean foundKeyBelow = bubbleRightmostKeyRecursive( cursor, structurePropagation, currentPageId,\n-                stableGeneration, unstableGeneration, cursorTracer );\n+        TreeNode.goTo(cursor, \"child\", subtree);\n+        boolean foundKeyBelow = bubbleRightmostKeyRecursive(cursor, structurePropagation, currentPageId,\n+          stableGeneration, unstableGeneration, cursorTracer);\n \n         // Propagate structurePropagation from below\n-        if ( structurePropagation.hasMidChildUpdate )\n+        if (structurePropagation.hasMidChildUpdate)\n         {\n-            updateMidChild( cursor, structurePropagation, subtreePosition, stableGeneration, unstableGeneration );\n+            updateMidChild(cursor, structurePropagation, subtreePosition, stableGeneration, unstableGeneration);\n         }\n \n-        if ( foundKeyBelow )\n+        if (foundKeyBelow)\n         {\n             // A key has been bubble up to us.\n             // It's in structurePropagation.bubbleKey and should be inserted in subtreePosition.\n-            overwriteKeyInternal( cursor, structurePropagation, structurePropagation.bubbleKey, subtreePosition,\n-                    stableGeneration, unstableGeneration, cursorTracer );\n-        }\n-        else\n+            overwriteKeyInternal(cursor, structurePropagation, structurePropagation.bubbleKey, subtreePosition,\n+              stableGeneration, unstableGeneration, cursorTracer);\n+        } else\n         {\n             // No key could be found in subtree, it's completely empty and can be removed.\n             // We shift keys and children in this internal node to the left (potentially creating new version of this\n             // node).\n-            createSuccessorIfNeeded( cursor, structurePropagation, UPDATE_MID_CHILD,\n-                    stableGeneration, unstableGeneration, cursorTracer );\n-            int keyCount = TreeNode.keyCount( cursor );\n-            simplyRemoveFromInternal( cursor, keyCount, subtreePosition, true, stableGeneration, unstableGeneration, cursorTracer );\n+            createSuccessorIfNeeded(cursor, structurePropagation, UPDATE_MID_CHILD,\n+              stableGeneration, unstableGeneration, cursorTracer);\n+            int keyCount = TreeNode.keyCount(cursor);\n+            simplyRemoveFromInternal(cursor, keyCount, subtreePosition, true, stableGeneration, unstableGeneration, cursorTracer);\n         }\n     }\n \n-    private boolean bubbleRightmostKeyRecursive( PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n-            long previousNode, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private boolean bubbleRightmostKeyRecursive(PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n+                                                long previousNode, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer)\n+      throws IOException\n     {\n         try\n         {\n-            if ( TreeNode.isLeaf( cursor ) )\n+            if (TreeNode.isLeaf(cursor))\n             {\n                 // Base case\n                 return false;\n             }\n             // Recursive case\n             long currentPageId = cursor.getCurrentPageId();\n-            int keyCount = TreeNode.keyCount( cursor );\n-            long rightmostSubtree = bTreeNode.childAt( cursor, keyCount, stableGeneration, unstableGeneration );\n-            PointerChecking.checkPointer( rightmostSubtree, false );\n+            int keyCount = TreeNode.keyCount(cursor);\n+            long rightmostSubtree = bTreeNode.childAt(cursor, keyCount, stableGeneration, unstableGeneration);\n+            PointerChecking.checkPointer(rightmostSubtree, false);\n \n-            TreeNode.goTo( cursor, \"child\", rightmostSubtree );\n+            TreeNode.goTo(cursor, \"child\", rightmostSubtree);\n \n-            boolean foundKeyBelow = bubbleRightmostKeyRecursive( cursor, structurePropagation, currentPageId,\n-                    stableGeneration, unstableGeneration, cursorTracer );\n+            boolean foundKeyBelow = bubbleRightmostKeyRecursive(cursor, structurePropagation, currentPageId,\n+              stableGeneration, unstableGeneration, cursorTracer);\n \n             // Propagate structurePropagation from below\n-            if ( structurePropagation.hasMidChildUpdate )\n+            if (structurePropagation.hasMidChildUpdate)\n             {\n-                updateMidChild( cursor, structurePropagation, keyCount, stableGeneration, unstableGeneration );\n+                updateMidChild(cursor, structurePropagation, keyCount, stableGeneration, unstableGeneration);\n             }\n \n-            if ( foundKeyBelow )\n+            if (foundKeyBelow)\n             {\n                 return true;\n             }\n \n-            if ( keyCount == 0 )\n+            if (keyCount == 0)\n             {\n                 // This subtree does not contain anything any more\n                 // Repoint sibling and add to freelist and return false\n-                connectLeftAndRightSibling( cursor, stableGeneration, unstableGeneration );\n-                idProvider.releaseId( stableGeneration, unstableGeneration, currentPageId, cursorTracer );\n+                connectLeftAndRightSibling(cursor, stableGeneration, unstableGeneration);\n+                idProvider.releaseId(stableGeneration, unstableGeneration, currentPageId, cursorTracer);\n                 return false;\n             }\n \n             // Create new version of node, save rightmost key in structurePropagation, remove rightmost key and child\n-            createSuccessorIfNeeded( cursor, structurePropagation, UPDATE_MID_CHILD, stableGeneration, unstableGeneration, cursorTracer );\n-            bTreeNode.keyAt( cursor, structurePropagation.bubbleKey, keyCount - 1, INTERNAL, cursorTracer );\n-            simplyRemoveFromInternal( cursor, keyCount, keyCount - 1, false, stableGeneration, unstableGeneration, cursorTracer );\n+            createSuccessorIfNeeded(cursor, structurePropagation, UPDATE_MID_CHILD, stableGeneration, unstableGeneration, cursorTracer);\n+            bTreeNode.keyAt(cursor, structurePropagation.bubbleKey, keyCount - 1, INTERNAL, cursorTracer);\n+            simplyRemoveFromInternal(cursor, keyCount, keyCount - 1, false, stableGeneration, unstableGeneration, cursorTracer);\n \n             return true;\n-        }\n-        finally\n+        } finally\n         {\n-            TreeNode.goTo( cursor, \"back to previous node\", previousNode );\n+            TreeNode.goTo(cursor, \"back to previous node\", previousNode);\n         }\n     }\n \n-    private void simplyRemoveFromInternal( PageCursor cursor, int keyCount, int keyPos, boolean leftChild, long stableGeneration, long unstableGeneration,\n-            PageCursorTracer cursorTracer ) throws IOException\n+    private void simplyRemoveFromInternal(PageCursor cursor, int keyCount, int keyPos, boolean leftChild, long stableGeneration, long unstableGeneration,\n+                                          PageCursorTracer cursorTracer) throws IOException\n     {\n         // Remove key and child\n-        if ( leftChild )\n+        if (leftChild)\n         {\n-            bTreeNode.removeKeyAndLeftChildAt( cursor, keyPos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n-        }\n-        else\n+            bTreeNode.removeKeyAndLeftChildAt(cursor, keyPos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n+        } else\n         {\n-            bTreeNode.removeKeyAndRightChildAt( cursor, keyPos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+            bTreeNode.removeKeyAndRightChildAt(cursor, keyPos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n         }\n \n         // Decrease key count\n-        TreeNode.setKeyCount( cursor, keyCount - 1 );\n+        TreeNode.setKeyCount(cursor, keyCount - 1);\n     }\n \n-    private void updateRightmostChildInLeftSibling( PageCursor cursor, long childPointer, long stableGeneration,\n-            long unstableGeneration ) throws IOException\n+    private void updateRightmostChildInLeftSibling(PageCursor cursor, long childPointer, long stableGeneration,\n+                                                   long unstableGeneration) throws IOException\n     {\n-        long leftSibling = TreeNode.leftSibling( cursor, stableGeneration, unstableGeneration );\n+        long leftSibling = TreeNode.leftSibling(cursor, stableGeneration, unstableGeneration);\n         // Left sibling is not allowed to be NO_NODE here because that means there is a child node with no parent\n-        PointerChecking.checkPointer( leftSibling, false );\n+        PointerChecking.checkPointer(leftSibling, false);\n \n-        try ( PageCursor leftSiblingCursor = cursor.openLinkedCursor( leftSibling ) )\n+        try (PageCursor leftSiblingCursor = cursor.openLinkedCursor(leftSibling))\n         {\n-            TreeNode.goTo( leftSiblingCursor, \"left sibling\", leftSibling );\n-            int keyCount = TreeNode.keyCount( leftSiblingCursor );\n-            bTreeNode.setChildAt( leftSiblingCursor, childPointer, keyCount, stableGeneration, unstableGeneration );\n+            TreeNode.goTo(leftSiblingCursor, \"left sibling\", leftSibling);\n+            int keyCount = TreeNode.keyCount(leftSiblingCursor);\n+            bTreeNode.setChildAt(leftSiblingCursor, childPointer, keyCount, stableGeneration, unstableGeneration);\n         }\n     }\n \n-    private void updateLeftmostChildInRightSibling( PageCursor cursor, long childPointer, long stableGeneration,\n-            long unstableGeneration ) throws IOException\n+    private void updateLeftmostChildInRightSibling(PageCursor cursor, long childPointer, long stableGeneration,\n+                                                   long unstableGeneration) throws IOException\n     {\n-        long rightSibling = TreeNode.rightSibling( cursor, stableGeneration, unstableGeneration );\n+        long rightSibling = TreeNode.rightSibling(cursor, stableGeneration, unstableGeneration);\n         // Left sibling is not allowed to be NO_NODE here because that means there is a child node with no parent\n-        PointerChecking.checkPointer( rightSibling, false );\n+        PointerChecking.checkPointer(rightSibling, false);\n \n-        try ( PageCursor rightSiblingCursor = cursor.openLinkedCursor( rightSibling ) )\n+        try (PageCursor rightSiblingCursor = cursor.openLinkedCursor(rightSibling))\n         {\n-            TreeNode.goTo( rightSiblingCursor, \"right sibling\", rightSibling );\n-            bTreeNode.setChildAt( rightSiblingCursor, childPointer, 0, stableGeneration, unstableGeneration );\n+            TreeNode.goTo(rightSiblingCursor, \"right sibling\", rightSibling);\n+            bTreeNode.setChildAt(rightSiblingCursor, childPointer, 0, stableGeneration, unstableGeneration);\n         }\n     }\n \n@@ -1075,122 +1070,120 @@ class InternalTreeLogic<KEY,VALUE>\n      * <p>\n      * Leaves cursor at same page as when called. No guarantees on offset.\n      *\n-     * @param cursor {@link PageCursor} pinned to page where remove is to be done.\n+     * @param cursor               {@link PageCursor} pinned to page where remove is to be done.\n      * @param structurePropagation {@link StructurePropagation} used to report structure changes between tree levels.\n-     * @param key key to be removed\n-     * @param into {@code VALUE} instance to write removed value to\n-     * @param stableGeneration stable generation, i.e. generations <= this generation are considered stable.\n-     * @param unstableGeneration unstable generation, i.e. generation which is under development right now.\n+     * @param key                  key to be removed\n+     * @param into                 {@code VALUE} instance to write removed value to\n+     * @param stableGeneration     stable generation, i.e. generations <= this generation are considered stable.\n+     * @param unstableGeneration   unstable generation, i.e. generation which is under development right now.\n      * @return {@code true} if key was removed, otherwise {@code false}.\n      * @throws IOException on cursor failure\n      */\n-    private boolean removeFromLeaf( PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n-            KEY key, VALUE into, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private boolean removeFromLeaf(PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n+                                   KEY key, VALUE into, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        int keyCount = TreeNode.keyCount( cursor );\n+        int keyCount = TreeNode.keyCount(cursor);\n \n-        int search = search( cursor, LEAF, key, readKey, keyCount, cursorTracer );\n-        int pos = positionOf( search );\n-        boolean hit = isHit( search );\n-        if ( !hit )\n+        int search = search(cursor, LEAF, key, readKey, keyCount, cursorTracer);\n+        int pos = positionOf(search);\n+        boolean hit = isHit(search);\n+        if (!hit)\n         {\n             return false;\n         }\n \n-        createSuccessorIfNeeded( cursor, structurePropagation, UPDATE_MID_CHILD,\n-                stableGeneration, unstableGeneration, cursorTracer );\n-        keyCount = simplyRemoveFromLeaf( cursor, into, keyCount, pos, stableGeneration, unstableGeneration, cursorTracer );\n+        createSuccessorIfNeeded(cursor, structurePropagation, UPDATE_MID_CHILD,\n+          stableGeneration, unstableGeneration, cursorTracer);\n+        keyCount = simplyRemoveFromLeaf(cursor, into, keyCount, pos, stableGeneration, unstableGeneration, cursorTracer);\n \n-        if ( bTreeNode.leafUnderflow( cursor, keyCount ) )\n+        if (bTreeNode.leafUnderflow(cursor, keyCount))\n         {\n             // Underflow\n-            underflowInLeaf( cursor, structurePropagation, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+            underflowInLeaf(cursor, structurePropagation, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n         }\n \n         return true;\n     }\n \n-    private void underflowInLeaf( PageCursor cursor, StructurePropagation<KEY> structurePropagation, int keyCount,\n-            long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void underflowInLeaf(PageCursor cursor, StructurePropagation<KEY> structurePropagation, int keyCount,\n+                                 long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        long leftSibling = TreeNode.leftSibling( cursor, stableGeneration, unstableGeneration );\n-        PointerChecking.checkPointer( leftSibling, true );\n-        long rightSibling = TreeNode.rightSibling( cursor, stableGeneration, unstableGeneration );\n-        PointerChecking.checkPointer( rightSibling, true );\n+        long leftSibling = TreeNode.leftSibling(cursor, stableGeneration, unstableGeneration);\n+        PointerChecking.checkPointer(leftSibling, true);\n+        long rightSibling = TreeNode.rightSibling(cursor, stableGeneration, unstableGeneration);\n+        PointerChecking.checkPointer(rightSibling, true);\n \n-        if ( TreeNode.isNode( leftSibling ) )\n+        if (TreeNode.isNode(leftSibling))\n         {\n             // Go to left sibling and read stuff\n-            try ( PageCursor leftSiblingCursor = cursor.openLinkedCursor( GenerationSafePointerPair.pointer( leftSibling ) ) )\n+            try (PageCursor leftSiblingCursor = cursor.openLinkedCursor(GenerationSafePointerPair.pointer(leftSibling)))\n             {\n                 leftSiblingCursor.next();\n-                int leftSiblingKeyCount = TreeNode.keyCount( leftSiblingCursor );\n+                int leftSiblingKeyCount = TreeNode.keyCount(leftSiblingCursor);\n \n-                int keysToRebalance = bTreeNode.canRebalanceLeaves( leftSiblingCursor, leftSiblingKeyCount, cursor, keyCount );\n-                if ( keysToRebalance > 0 )\n+                int keysToRebalance = bTreeNode.canRebalanceLeaves(leftSiblingCursor, leftSiblingKeyCount, cursor, keyCount);\n+                if (keysToRebalance > 0)\n                 {\n-                    createSuccessorIfNeeded( leftSiblingCursor, structurePropagation, UPDATE_LEFT_CHILD,\n-                            stableGeneration, unstableGeneration, cursorTracer );\n-                    rebalanceLeaf( leftSiblingCursor, leftSiblingKeyCount, cursor, keyCount, keysToRebalance , structurePropagation, cursorTracer );\n-                }\n-                else if ( keysToRebalance == -1 )\n+                    createSuccessorIfNeeded(leftSiblingCursor, structurePropagation, UPDATE_LEFT_CHILD,\n+                      stableGeneration, unstableGeneration, cursorTracer);\n+                    rebalanceLeaf(leftSiblingCursor, leftSiblingKeyCount, cursor, keyCount, keysToRebalance, structurePropagation, cursorTracer);\n+                } else if (keysToRebalance == -1)\n                 {\n                     // No need to create new unstable version of left sibling.\n                     // Parent pointer will be updated later.\n-                    mergeFromLeftSiblingLeaf( cursor, leftSiblingCursor, structurePropagation, keyCount,\n-                            leftSiblingKeyCount, stableGeneration, unstableGeneration, cursorTracer );\n+                    mergeFromLeftSiblingLeaf(cursor, leftSiblingCursor, structurePropagation, keyCount,\n+                      leftSiblingKeyCount, stableGeneration, unstableGeneration, cursorTracer);\n                 }\n             }\n-        }\n-        else if ( TreeNode.isNode( rightSibling ) )\n+        } else if (TreeNode.isNode(rightSibling))\n         {\n-            try ( PageCursor rightSiblingCursor = cursor.openLinkedCursor(\n-                    GenerationSafePointerPair.pointer( rightSibling ) ) )\n+            try (PageCursor rightSiblingCursor = cursor.openLinkedCursor(\n+              GenerationSafePointerPair.pointer(rightSibling)))\n             {\n                 rightSiblingCursor.next();\n-                int rightSiblingKeyCount = TreeNode.keyCount( rightSiblingCursor );\n+                int rightSiblingKeyCount = TreeNode.keyCount(rightSiblingCursor);\n \n-                if ( bTreeNode.canMergeLeaves( cursor, keyCount, rightSiblingCursor, rightSiblingKeyCount ) )\n+                if (bTreeNode.canMergeLeaves(cursor, keyCount, rightSiblingCursor, rightSiblingKeyCount))\n                 {\n-                    createSuccessorIfNeeded( rightSiblingCursor, structurePropagation, UPDATE_RIGHT_CHILD,\n-                            stableGeneration, unstableGeneration, cursorTracer );\n-                    mergeToRightSiblingLeaf( cursor, rightSiblingCursor, structurePropagation, keyCount,\n-                            rightSiblingKeyCount, stableGeneration, unstableGeneration, cursorTracer );\n+                    createSuccessorIfNeeded(rightSiblingCursor, structurePropagation, UPDATE_RIGHT_CHILD,\n+                      stableGeneration, unstableGeneration, cursorTracer);\n+                    mergeToRightSiblingLeaf(cursor, rightSiblingCursor, structurePropagation, keyCount,\n+                      rightSiblingKeyCount, stableGeneration, unstableGeneration, cursorTracer);\n                 }\n             }\n         }\n     }\n \n-    private void connectLeftAndRightSibling( PageCursor cursor, long stableGeneration, long unstableGeneration )\n-            throws IOException\n+    private void connectLeftAndRightSibling(PageCursor cursor, long stableGeneration, long unstableGeneration)\n+      throws IOException\n     {\n         long currentId = cursor.getCurrentPageId();\n-        long leftSibling = TreeNode.leftSibling( cursor, stableGeneration, unstableGeneration );\n-        PointerChecking.checkPointer( leftSibling, true );\n-        long rightSibling = TreeNode. rightSibling( cursor, stableGeneration, unstableGeneration );\n-        PointerChecking.checkPointer( rightSibling, true );\n-        if ( TreeNode.isNode( leftSibling ) )\n+        long leftSibling = TreeNode.leftSibling(cursor, stableGeneration, unstableGeneration);\n+        PointerChecking.checkPointer(leftSibling, true);\n+        long rightSibling = TreeNode.rightSibling(cursor, stableGeneration, unstableGeneration);\n+        PointerChecking.checkPointer(rightSibling, true);\n+        if (TreeNode.isNode(leftSibling))\n         {\n-            TreeNode.goTo( cursor, \"left sibling\", leftSibling );\n-            TreeNode.setRightSibling( cursor, rightSibling, stableGeneration, unstableGeneration );\n+            TreeNode.goTo(cursor, \"left sibling\", leftSibling);\n+            TreeNode.setRightSibling(cursor, rightSibling, stableGeneration, unstableGeneration);\n         }\n-        if ( TreeNode.isNode( rightSibling ) )\n+        if (TreeNode.isNode(rightSibling))\n         {\n-            TreeNode.goTo( cursor, \"right sibling\", rightSibling );\n-            TreeNode.setLeftSibling( cursor, leftSibling, stableGeneration, unstableGeneration );\n+            TreeNode.goTo(cursor, \"right sibling\", rightSibling);\n+            TreeNode.setLeftSibling(cursor, leftSibling, stableGeneration, unstableGeneration);\n         }\n \n-        TreeNode.goTo( cursor, \"back to origin after repointing siblings\", currentId );\n+        TreeNode.goTo(cursor, \"back to origin after repointing siblings\", currentId);\n     }\n \n-    private void mergeToRightSiblingLeaf( PageCursor cursor, PageCursor rightSiblingCursor,\n-            StructurePropagation<KEY> structurePropagation, int keyCount, int rightSiblingKeyCount,\n-            long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void mergeToRightSiblingLeaf(PageCursor cursor, PageCursor rightSiblingCursor,\n+                                         StructurePropagation<KEY> structurePropagation, int keyCount, int rightSiblingKeyCount,\n+                                         long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n         // Read the right-most key from the right sibling to use when comparing whether or not\n         // a common parent covers the keys in right sibling too\n-        bTreeNode.keyAt( rightSiblingCursor, structurePropagation.rightKey, rightSiblingKeyCount - 1, LEAF, cursorTracer );\n-        merge( cursor, keyCount, rightSiblingCursor, rightSiblingKeyCount, stableGeneration, unstableGeneration, cursorTracer );\n+        bTreeNode.keyAt(rightSiblingCursor, structurePropagation.rightKey, rightSiblingKeyCount - 1, LEAF, cursorTracer);\n+        merge(cursor, keyCount, rightSiblingCursor, rightSiblingKeyCount, stableGeneration, unstableGeneration, cursorTracer);\n \n         // Propagate change\n         // mid child has been merged into right child\n@@ -1201,14 +1194,14 @@ class InternalTreeLogic<KEY,VALUE>\n         structurePropagation.keyReplaceStrategy = BUBBLE;\n     }\n \n-    private void mergeFromLeftSiblingLeaf( PageCursor cursor, PageCursor leftSiblingCursor,\n-            StructurePropagation<KEY> structurePropagation, int keyCount, int leftSiblingKeyCount,\n-            long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void mergeFromLeftSiblingLeaf(PageCursor cursor, PageCursor leftSiblingCursor,\n+                                          StructurePropagation<KEY> structurePropagation, int keyCount, int leftSiblingKeyCount,\n+                                          long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n         // Read the left-most key from the left sibling to use when comparing whether or not\n         // a common parent covers the keys in left sibling too\n-        bTreeNode.keyAt( leftSiblingCursor, structurePropagation.leftKey, 0, LEAF, cursorTracer );\n-        merge( leftSiblingCursor, leftSiblingKeyCount, cursor, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+        bTreeNode.keyAt(leftSiblingCursor, structurePropagation.leftKey, 0, LEAF, cursorTracer);\n+        merge(leftSiblingCursor, leftSiblingKeyCount, cursor, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n \n         // Propagate change\n         // left child has been merged into mid child\n@@ -1219,55 +1212,55 @@ class InternalTreeLogic<KEY,VALUE>\n         structurePropagation.keyReplaceStrategy = BUBBLE;\n     }\n \n-    private void merge( PageCursor leftSiblingCursor, int leftSiblingKeyCount, PageCursor rightSiblingCursor,\n-            int rightSiblingKeyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException\n+    private void merge(PageCursor leftSiblingCursor, int leftSiblingKeyCount, PageCursor rightSiblingCursor,\n+                       int rightSiblingKeyCount, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException\n     {\n-        bTreeNode.copyKeyValuesFromLeftToRight( leftSiblingCursor, leftSiblingKeyCount, rightSiblingCursor, rightSiblingKeyCount );\n+        bTreeNode.copyKeyValuesFromLeftToRight(leftSiblingCursor, leftSiblingKeyCount, rightSiblingCursor, rightSiblingKeyCount);\n \n         // Update successor of left sibling to be right sibling\n-        TreeNode.setSuccessor( leftSiblingCursor, rightSiblingCursor.getCurrentPageId(),\n-                stableGeneration, unstableGeneration );\n+        TreeNode.setSuccessor(leftSiblingCursor, rightSiblingCursor.getCurrentPageId(),\n+          stableGeneration, unstableGeneration);\n \n         // Add left sibling to free list\n-        connectLeftAndRightSibling( leftSiblingCursor, stableGeneration, unstableGeneration );\n-        idProvider.releaseId( stableGeneration, unstableGeneration, leftSiblingCursor.getCurrentPageId(), cursorTracer );\n+        connectLeftAndRightSibling(leftSiblingCursor, stableGeneration, unstableGeneration);\n+        idProvider.releaseId(stableGeneration, unstableGeneration, leftSiblingCursor.getCurrentPageId(), cursorTracer);\n     }\n \n-    private void rebalanceLeaf( PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount,\n-            int numberOfKeysToMove, StructurePropagation<KEY> structurePropagation, PageCursorTracer cursorTracer )\n+    private void rebalanceLeaf(PageCursor leftCursor, int leftKeyCount, PageCursor rightCursor, int rightKeyCount,\n+                               int numberOfKeysToMove, StructurePropagation<KEY> structurePropagation, PageCursorTracer cursorTracer)\n     {\n-        bTreeNode.moveKeyValuesFromLeftToRight( leftCursor, leftKeyCount, rightCursor, rightKeyCount, leftKeyCount - numberOfKeysToMove );\n+        bTreeNode.moveKeyValuesFromLeftToRight(leftCursor, leftKeyCount, rightCursor, rightKeyCount, leftKeyCount - numberOfKeysToMove);\n \n         // Propagate change\n         structurePropagation.hasLeftKeyReplace = true;\n         structurePropagation.keyReplaceStrategy = REPLACE;\n-        bTreeNode.keyAt( rightCursor, structurePropagation.leftKey, 0, LEAF, cursorTracer );\n+        bTreeNode.keyAt(rightCursor, structurePropagation.leftKey, 0, LEAF, cursorTracer);\n     }\n \n     /**\n      * Remove key and value on given position and decrement key count. Deleted value is stored in {@code into}.\n      * Key count after remove is returned.\n      *\n-     * @param cursor Cursor pinned to node in which to remove from,\n-     * @param into VALUE in which to store removed value\n-     * @param keyCount Key count of node before remove\n-     * @param pos Position to remove from\n-     * @param stableGeneration stable generation, i.e. generations <= this generation are considered stable.\n+     * @param cursor             Cursor pinned to node in which to remove from,\n+     * @param into               VALUE in which to store removed value\n+     * @param keyCount           Key count of node before remove\n+     * @param pos                Position to remove from\n+     * @param stableGeneration   stable generation, i.e. generations <= this generation are considered stable.\n      * @param unstableGeneration unstable generation, i.e. generation which is under development right now.\n-     * @param cursorTracer underlying page cursor tracer.\n+     * @param cursorTracer       underlying page cursor tracer.\n      * @return keyCount after remove\n      */\n-    private int simplyRemoveFromLeaf( PageCursor cursor, VALUE into, int keyCount, int pos, long stableGeneration, long unstableGeneration,\n-            PageCursorTracer cursorTracer ) throws IOException\n+    private int simplyRemoveFromLeaf(PageCursor cursor, VALUE into, int keyCount, int pos, long stableGeneration, long unstableGeneration,\n+                                     PageCursorTracer cursorTracer) throws IOException\n     {\n         // Save value to remove\n-        bTreeNode.valueAt( cursor, into, pos, cursorTracer );\n+        bTreeNode.valueAt(cursor, into, pos, cursorTracer);\n         // Remove key/value\n-        bTreeNode.removeKeyValueAt( cursor, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer );\n+        bTreeNode.removeKeyValueAt(cursor, pos, keyCount, stableGeneration, unstableGeneration, cursorTracer);\n \n         // Decrease key count\n         int newKeyCount = keyCount - 1;\n-        TreeNode.setKeyCount( cursor, newKeyCount );\n+        TreeNode.setKeyCount(cursor, newKeyCount);\n         return newKeyCount;\n     }\n \n@@ -1282,34 +1275,35 @@ class InternalTreeLogic<KEY,VALUE>\n      * {@code structurePropagation} will be updated with information about this new node so that it can report to\n      * level above.\n      *\n-     * @param cursor {@link PageCursor} pinned to page containing node to potentially create a new version of\n+     * @param cursor               {@link PageCursor} pinned to page containing node to potentially create a new version of\n      * @param structurePropagation {@link StructurePropagation} used to report structure changes between tree levels.\n-     * @param structureUpdate {@link StructurePropagation.StructureUpdate} define how to update structurePropagation\n-     * if new unstable version is created\n-     * @param stableGeneration stable generation, i.e. generations <= this generation are considered stable.\n-     * @param unstableGeneration unstable generation, i.e. generation which is under development right now.\n+     * @param structureUpdate      {@link StructurePropagation.StructureUpdate} define how to update structurePropagation\n+     *                             if new unstable version is created\n+     * @param stableGeneration     stable generation, i.e. generations <= this generation are considered stable.\n+     * @param unstableGeneration   unstable generation, i.e. generation which is under development right now.\n      * @throws IOException on cursor failure\n      */\n-    private void createSuccessorIfNeeded( PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n-            StructurePropagation.StructureUpdate structureUpdate, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer )\n-            throws IOException\n+    private void createSuccessorIfNeeded(PageCursor cursor, StructurePropagation<KEY> structurePropagation,\n+                                         StructurePropagation.StructureUpdate structureUpdate, long stableGeneration, long unstableGeneration,\n+                                         PageCursorTracer cursorTracer)\n+      throws IOException\n     {\n         long oldId = cursor.getCurrentPageId();\n-        long nodeGeneration = TreeNode.generation( cursor );\n-        if ( nodeGeneration == unstableGeneration )\n+        long nodeGeneration = TreeNode.generation(cursor);\n+        if (nodeGeneration == unstableGeneration)\n         {\n             // Don't copy\n             return;\n         }\n \n         // Do copy\n-        long successorId = idProvider.acquireNewId( stableGeneration, unstableGeneration, cursorTracer );\n-        try ( PageCursor successorCursor = cursor.openLinkedCursor( successorId ) )\n+        long successorId = idProvider.acquireNewId(stableGeneration, unstableGeneration, cursorTracer);\n+        try (PageCursor successorCursor = cursor.openLinkedCursor(successorId))\n         {\n-            TreeNode.goTo( successorCursor, \"successor\", successorId );\n-            cursor.copyTo( 0, successorCursor, 0, cursor.getCurrentPageSize() );\n-            TreeNode.setGeneration( successorCursor, unstableGeneration );\n-            TreeNode.setSuccessor( successorCursor, TreeNode.NO_NODE_FLAG, stableGeneration, unstableGeneration );\n+            TreeNode.goTo(successorCursor, \"successor\", successorId);\n+            cursor.copyTo(0, successorCursor, 0, cursor.getCurrentPageSize());\n+            TreeNode.setGeneration(successorCursor, unstableGeneration);\n+            TreeNode.setSuccessor(successorCursor, TreeNode.NO_NODE_FLAG, stableGeneration, unstableGeneration);\n         }\n \n         // Insert successor pointer in old stable version\n@@ -1319,7 +1313,7 @@ class InternalTreeLogic<KEY,VALUE>\n         //        |\n         //        v\n         // (newUnstableNode)\n-        TreeNode.setSuccessor( cursor, successorId, stableGeneration, unstableGeneration );\n+        TreeNode.setSuccessor(cursor, successorId, stableGeneration, unstableGeneration);\n \n         // Redirect sibling pointers\n         //               ---------[leftSibling]---------(stableNode)----------[rightSibling]---------\n@@ -1328,27 +1322,27 @@ class InternalTreeLogic<KEY,VALUE>\n         //              |                                     |                                      |\n         //              v                                     v                                      v\n         // (leftSiblingOfStableNode) -[rightSibling]-> (newUnstableNode) <-[leftSibling]- (rightSiblingOfStableNode)\n-        long leftSibling = TreeNode.leftSibling( cursor, stableGeneration, unstableGeneration );\n-        PointerChecking.checkPointer( leftSibling, true );\n-        long rightSibling = TreeNode.rightSibling( cursor, stableGeneration, unstableGeneration );\n-        PointerChecking.checkPointer( rightSibling, true );\n-        if ( TreeNode.isNode( leftSibling ) )\n+        long leftSibling = TreeNode.leftSibling(cursor, stableGeneration, unstableGeneration);\n+        PointerChecking.checkPointer(leftSibling, true);\n+        long rightSibling = TreeNode.rightSibling(cursor, stableGeneration, unstableGeneration);\n+        PointerChecking.checkPointer(rightSibling, true);\n+        if (TreeNode.isNode(leftSibling))\n         {\n-            TreeNode.goTo( cursor, \"left sibling in split\", leftSibling );\n-            TreeNode.setRightSibling( cursor, successorId, stableGeneration, unstableGeneration );\n+            TreeNode.goTo(cursor, \"left sibling in split\", leftSibling);\n+            TreeNode.setRightSibling(cursor, successorId, stableGeneration, unstableGeneration);\n         }\n-        if ( TreeNode.isNode( rightSibling ) )\n+        if (TreeNode.isNode(rightSibling))\n         {\n-            TreeNode.goTo( cursor, \"right sibling in split\", rightSibling );\n-            TreeNode.setLeftSibling( cursor, successorId, stableGeneration, unstableGeneration );\n+            TreeNode.goTo(cursor, \"right sibling in split\", rightSibling);\n+            TreeNode.setLeftSibling(cursor, successorId, stableGeneration, unstableGeneration);\n         }\n \n         // Leave cursor at new tree node\n-        TreeNode.goTo( cursor, \"successor\", successorId );\n+        TreeNode.goTo(cursor, \"successor\", successorId);\n \n         // Propagate structure change\n-        structureUpdate.update( structurePropagation, successorId );\n+        structureUpdate.update(structurePropagation, successorId);\n \n-        idProvider.releaseId( stableGeneration, unstableGeneration, oldId, cursorTracer );\n+        idProvider.releaseId(stableGeneration, unstableGeneration, oldId, cursorTracer);\n     }\n }\n",
            "diff_size": 496
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
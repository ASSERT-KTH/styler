{
    "project_name": "bakdata-conquery",
    "error_id": "478",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "87",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "@Slf4j\n@RequiredArgsConstructor\npublic class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User>{\n\t\n\tprivate final AuthorizationStorage storage;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/478/ConqueryAuthenticator.java\nindex d0dcdee3c8e..8a8e61a5060 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/478/ConqueryAuthenticator.java\n@@ -22,8 +22,8 @@ import org.apache.shiro.authc.AuthenticationToken;\n  */\n @Slf4j\n @RequiredArgsConstructor\n-public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User>{\n-\t\n+public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User> {\n+\n \tprivate final AuthorizationStorage storage;\n \n \t@Override\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/478/ConqueryAuthenticator.java\nindex d0dcdee3c8e..b04e2fd87df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/478/ConqueryAuthenticator.java\n@@ -22,20 +22,20 @@ import org.apache.shiro.authc.AuthenticationToken;\n  */\n @Slf4j\n @RequiredArgsConstructor\n-public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User>{\n-\t\n-\tprivate final AuthorizationStorage storage;\n-\n-\t@Override\n-\tpublic Optional<User> authenticate(AuthenticationToken token) throws AuthenticationException {\n-\t\t\n-\t\tAuthenticationInfo info = SecurityUtils.getSecurityManager().authenticate(token);\n-\t\tUserId userId = (UserId)info.getPrincipals().getPrimaryPrincipal();\n-\n-\t\tUser user = storage.getUser(userId);\n-\t\t\n-\t\tConqueryMDC.setLocation(user.getId().toString());\n-\t\treturn Optional.ofNullable(user);\n-\t}\n+public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User> {\n+\n+    private final AuthorizationStorage storage;\n+\n+    @Override\n+    public Optional<User> authenticate(AuthenticationToken token) throws AuthenticationException {\n+\n+        AuthenticationInfo info = SecurityUtils.getSecurityManager().authenticate(token);\n+        UserId userId = (UserId) info.getPrincipals().getPrimaryPrincipal();\n+\n+        User user = storage.getUser(userId);\n+\n+        ConqueryMDC.setLocation(user.getId().toString());\n+        return Optional.ofNullable(user);\n+    }\n \n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/478/ConqueryAuthenticator.java\nindex d0dcdee3c8e..e2958835844 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/478/ConqueryAuthenticator.java\n@@ -22,14 +22,13 @@ import org.apache.shiro.authc.AuthenticationToken;\n  */\n @Slf4j\n @RequiredArgsConstructor\n-public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User>{\n+public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User> {\n \t\n \tprivate final AuthorizationStorage storage;\n \n \t@Override\n \tpublic Optional<User> authenticate(AuthenticationToken token) throws AuthenticationException {\n-\t\t\n-\t\tAuthenticationInfo info = SecurityUtils.getSecurityManager().authenticate(token);\n+\tAuthenticationInfo info = SecurityUtils.getSecurityManager().authenticate(token);\n \t\tUserId userId = (UserId)info.getPrincipals().getPrimaryPrincipal();\n \n \t\tUser user = storage.getUser(userId);\n@@ -38,4 +37,4 @@ public class ConqueryAuthenticator implements Authenticator<AuthenticationToken,\n \t\treturn Optional.ofNullable(user);\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/478/ConqueryAuthenticator.java\nindex d0dcdee3c8e..fe3631c2818 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/478/ConqueryAuthenticator.java\n@@ -1,7 +1,6 @@\n package com.bakdata.conquery.models.auth;\n \n import java.util.Optional;\n-\n import com.bakdata.conquery.models.auth.entities.User;\n import com.bakdata.conquery.models.identifiable.ids.specific.UserId;\n import com.bakdata.conquery.util.io.ConqueryMDC;\n@@ -20,22 +19,18 @@ import org.apache.shiro.authc.AuthenticationToken;\n  * shiro, where multiple realms might be configured.\n  * We need this authenticator to plug in the security, and hereby shiro, into the AuthFilter.\n  */\n-@Slf4j\n-@RequiredArgsConstructor\n-public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User>{\n-\t\n-\tprivate final AuthorizationStorage storage;\n \n-\t@Override\n-\tpublic Optional<User> authenticate(AuthenticationToken token) throws AuthenticationException {\n-\t\t\n-\t\tAuthenticationInfo info = SecurityUtils.getSecurityManager().authenticate(token);\n-\t\tUserId userId = (UserId)info.getPrincipals().getPrimaryPrincipal();\n+@Slf4j @RequiredArgsConstructor\n+public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User> {\n \n-\t\tUser user = storage.getUser(userId);\n-\t\t\n-\t\tConqueryMDC.setLocation(user.getId().toString());\n-\t\treturn Optional.ofNullable(user);\n-\t}\n+ private final AuthorizationStorage storage;\n \n-}\n+ @Override\n+ public Optional<User> authenticate(AuthenticationToken token) throws AuthenticationException {\n+  AuthenticationInfo info = SecurityUtils.getSecurityManager().authenticate(token);\n+  UserId userId = (UserId)info.getPrincipals().getPrimaryPrincipal();\n+  User user = storage.getUser(userId);\n+  ConqueryMDC.setLocation(user.getId().toString());\n+  return Optional.ofNullable(user);\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/478/ConqueryAuthenticator.java\nindex d0dcdee3c8e..8a8e61a5060 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/478/ConqueryAuthenticator.java\n@@ -22,8 +22,8 @@ import org.apache.shiro.authc.AuthenticationToken;\n  */\n @Slf4j\n @RequiredArgsConstructor\n-public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User>{\n-\t\n+public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User> {\n+\n \tprivate final AuthorizationStorage storage;\n \n \t@Override\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "column": "1",
                    "severity": "warning",
                    "message": "'{' at column 1 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/478/ConqueryAuthenticator.java\nindex d0dcdee3c8e..bddb9e3ffa4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/478/ConqueryAuthenticator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/478/ConqueryAuthenticator.java\n@@ -22,8 +22,9 @@ import org.apache.shiro.authc.AuthenticationToken;\n  */\n @Slf4j\n @RequiredArgsConstructor\n-public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User>{\n-\t\n+public class ConqueryAuthenticator implements Authenticator<AuthenticationToken, User>\n+{\n+\n \tprivate final AuthorizationStorage storage;\n \n \t@Override\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
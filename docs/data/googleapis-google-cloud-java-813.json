{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "813",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.google.cloud.bigtable.data.v2.stub;\n\nimport com.google.api.core.ApiFunction;\nimport com.google.api.core.ApiFuture;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/813/ReadModifyWriteRowCallable.java\nindex f456f0202bf..cb2ee9ed057 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/813/ReadModifyWriteRowCallable.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub;\n \n import com.google.api.core.ApiFunction;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/813/ReadModifyWriteRowCallable.java\nindex f456f0202bf..c0b53100b26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/813/ReadModifyWriteRowCallable.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub;\n \n import com.google.api.core.ApiFunction;\n@@ -33,7 +34,9 @@ import com.google.cloud.bigtable.data.v2.models.RowAdapter;\n import com.google.cloud.bigtable.data.v2.models.RowAdapter.RowBuilder;\n import com.google.common.util.concurrent.MoreExecutors;\n \n-/** Simple wrapper for ReadModifyWriteRow to wrap the request and response protobufs. */\n+/**\n+ * Simple wrapper for ReadModifyWriteRow to wrap the request and response protobufs.\n+ */\n class ReadModifyWriteRowCallable extends UnaryCallable<ReadModifyWriteRow, Row> {\n   private final UnaryCallable<ReadModifyWriteRowRequest, ReadModifyWriteRowResponse> inner;\n   private final RequestContext requestContext;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 10, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 10, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 8, expected level should be one of the following: 0, 2, 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/813/ReadModifyWriteRowCallable.java\nindex f456f0202bf..1b6ee0d3d8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/813/ReadModifyWriteRowCallable.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub;\n \n import com.google.api.core.ApiFunction;\n@@ -35,13 +36,13 @@ import com.google.common.util.concurrent.MoreExecutors;\n \n /** Simple wrapper for ReadModifyWriteRow to wrap the request and response protobufs. */\n class ReadModifyWriteRowCallable extends UnaryCallable<ReadModifyWriteRow, Row> {\n+\n   private final UnaryCallable<ReadModifyWriteRowRequest, ReadModifyWriteRowResponse> inner;\n   private final RequestContext requestContext;\n   private final RowAdapter<Row> rowAdapter;\n \n   ReadModifyWriteRowCallable(\n-      UnaryCallable<ReadModifyWriteRowRequest, ReadModifyWriteRowResponse> inner,\n-      RequestContext requestContext) {\n+      UnaryCallable<ReadModifyWriteRowRequest, ReadModifyWriteRowResponse> inner, RequestContext requestContext) {\n     this.inner = inner;\n     this.requestContext = requestContext;\n     this.rowAdapter = new DefaultRowAdapter();\n@@ -51,10 +52,7 @@ class ReadModifyWriteRowCallable extends UnaryCallable<ReadModifyWriteRow, Row>\n   public ApiFuture<Row> futureCall(ReadModifyWriteRow request, ApiCallContext context) {\n     ApiFuture<ReadModifyWriteRowResponse> rawResponse =\n         inner.futureCall(request.toProto(requestContext), context);\n-\n-    return ApiFutures.transform(\n-        rawResponse,\n-        new ApiFunction<ReadModifyWriteRowResponse, Row>() {\n+return ApiFutures.transform(rawResponse, new ApiFunction<ReadModifyWriteRowResponse, Row>() {\n           @Override\n           public Row apply(ReadModifyWriteRowResponse readModifyWriteRowResponse) {\n             return convertResponse(readModifyWriteRowResponse);\n@@ -66,8 +64,7 @@ class ReadModifyWriteRowCallable extends UnaryCallable<ReadModifyWriteRow, Row>\n   private Row convertResponse(ReadModifyWriteRowResponse response) {\n     RowBuilder<Row> rowBuilder = rowAdapter.createRowBuilder();\n     rowBuilder.startRow(response.getRow().getKey());\n-\n-    for (Family family : response.getRow().getFamiliesList()) {\n+for (Family family : response.getRow().getFamiliesList()) {\n       for (Column column : family.getColumnsList()) {\n         for (Cell cell : column.getCellsList()) {\n           rowBuilder.startCell(\n@@ -76,8 +73,7 @@ class ReadModifyWriteRowCallable extends UnaryCallable<ReadModifyWriteRow, Row>\n               cell.getTimestampMicros(),\n               cell.getLabelsList(),\n               cell.getValue().size());\n-\n-          rowBuilder.cellValue(cell.getValue());\n+rowBuilder.cellValue(cell.getValue());\n \n           rowBuilder.finishCell();\n         }\n@@ -85,4 +81,4 @@ class ReadModifyWriteRowCallable extends UnaryCallable<ReadModifyWriteRow, Row>\n     }\n     return rowBuilder.finishRow();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'column' has incorrect indentation level 12, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/813/ReadModifyWriteRowCallable.java\nindex f456f0202bf..530158e713d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/813/ReadModifyWriteRowCallable.java\n@@ -34,14 +34,15 @@ import com.google.cloud.bigtable.data.v2.models.RowAdapter.RowBuilder;\n import com.google.common.util.concurrent.MoreExecutors;\n \n /** Simple wrapper for ReadModifyWriteRow to wrap the request and response protobufs. */\n+\n+\n class ReadModifyWriteRowCallable extends UnaryCallable<ReadModifyWriteRow, Row> {\n+\n   private final UnaryCallable<ReadModifyWriteRowRequest, ReadModifyWriteRowResponse> inner;\n   private final RequestContext requestContext;\n   private final RowAdapter<Row> rowAdapter;\n \n-  ReadModifyWriteRowCallable(\n-      UnaryCallable<ReadModifyWriteRowRequest, ReadModifyWriteRowResponse> inner,\n-      RequestContext requestContext) {\n+  ReadModifyWriteRowCallable(UnaryCallable<ReadModifyWriteRowRequest, ReadModifyWriteRowResponse> inner, RequestContext requestContext) {\n     this.inner = inner;\n     this.requestContext = requestContext;\n     this.rowAdapter = new DefaultRowAdapter();\n@@ -49,40 +50,31 @@ class ReadModifyWriteRowCallable extends UnaryCallable<ReadModifyWriteRow, Row>\n \n   @Override\n   public ApiFuture<Row> futureCall(ReadModifyWriteRow request, ApiCallContext context) {\n-    ApiFuture<ReadModifyWriteRowResponse> rawResponse =\n-        inner.futureCall(request.toProto(requestContext), context);\n-\n-    return ApiFutures.transform(\n-        rawResponse,\n-        new ApiFunction<ReadModifyWriteRowResponse, Row>() {\n-          @Override\n-          public Row apply(ReadModifyWriteRowResponse readModifyWriteRowResponse) {\n-            return convertResponse(readModifyWriteRowResponse);\n-          }\n-        },\n-        MoreExecutors.directExecutor());\n+    ApiFuture<ReadModifyWriteRowResponse> rawResponse = inner.futureCall(request.toProto(requestContext), context);\n+    return ApiFutures.transform(rawResponse, new ApiFunction<ReadModifyWriteRowResponse, Row>() {\n+      @Override\n+      public Row apply(ReadModifyWriteRowResponse readModifyWriteRowResponse) {\n+        return convertResponse(readModifyWriteRowResponse);\n+      }\n+    }, MoreExecutors.directExecutor());\n   }\n \n   private Row convertResponse(ReadModifyWriteRowResponse response) {\n     RowBuilder<Row> rowBuilder = rowAdapter.createRowBuilder();\n     rowBuilder.startRow(response.getRow().getKey());\n-\n     for (Family family : response.getRow().getFamiliesList()) {\n       for (Column column : family.getColumnsList()) {\n         for (Cell cell : column.getCellsList()) {\n-          rowBuilder.startCell(\n-              family.getName(),\n-              column.getQualifier(),\n+          rowBuilder.startCell(family.getName(),\n+            column.getQualifier(),\n               cell.getTimestampMicros(),\n-              cell.getLabelsList(),\n-              cell.getValue().size());\n-\n+                cell.getLabelsList(),\n+                  cell.getValue().size());\n           rowBuilder.cellValue(cell.getValue());\n-\n           rowBuilder.finishCell();\n         }\n       }\n     }\n     return rowBuilder.finishRow();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/813/ReadModifyWriteRowCallable.java\nindex f456f0202bf..cb2ee9ed057 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/813/ReadModifyWriteRowCallable.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub;\n \n import com.google.api.core.ApiFunction;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/813/ReadModifyWriteRowCallable.java\nindex f456f0202bf..cb2ee9ed057 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/813/ReadModifyWriteRowCallable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/813/ReadModifyWriteRowCallable.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub;\n \n import com.google.api.core.ApiFunction;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
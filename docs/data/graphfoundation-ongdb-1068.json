{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1068",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1068/IndexPopulationFailure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1068/IndexPopulationFailure.java\nindex 0a21605fd8f..03919e0987c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1068/IndexPopulationFailure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1068/IndexPopulationFailure.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import org.neo4j.helpers.Exceptions;\n@@ -25,46 +26,46 @@ import org.neo4j.kernel.api.exceptions.index.IndexPopulationFailedKernelExceptio\n \n public abstract class IndexPopulationFailure\n {\n-    public abstract String asString();\n+  public abstract String asString();\n \n-    public abstract IndexPopulationFailedKernelException asIndexPopulationFailure(\n-            SchemaDescriptor descriptor, String indexUserDescriptor );\n+  public abstract IndexPopulationFailedKernelException asIndexPopulationFailure(\n+      SchemaDescriptor descriptor, String indexUserDescriptor);\n \n-    public static IndexPopulationFailure failure( final Throwable failure )\n+  public static IndexPopulationFailure failure(final Throwable failure)\n+  {\n+    return new IndexPopulationFailure()\n     {\n-        return new IndexPopulationFailure()\n-        {\n-            @Override\n-            public String asString()\n-            {\n-                return Exceptions.stringify( failure );\n-            }\n+      @Override\n+      public String asString()\n+      {\n+        return Exceptions.stringify(failure);\n+      }\n \n-            @Override\n-            public IndexPopulationFailedKernelException asIndexPopulationFailure(\n-                    SchemaDescriptor descriptor, String indexUserDescription )\n-            {\n-                return new IndexPopulationFailedKernelException( descriptor, indexUserDescription, failure );\n-            }\n-        };\n-    }\n+      @Override\n+      public IndexPopulationFailedKernelException asIndexPopulationFailure(\n+          SchemaDescriptor descriptor, String indexUserDescription)\n+      {\n+        return new IndexPopulationFailedKernelException(descriptor, indexUserDescription, failure);\n+      }\n+    };\n+  }\n \n-    public static IndexPopulationFailure failure( final String failure )\n+  public static IndexPopulationFailure failure(final String failure)\n+  {\n+    return new IndexPopulationFailure()\n     {\n-        return new IndexPopulationFailure()\n-        {\n-            @Override\n-            public String asString()\n-            {\n-                return failure;\n-            }\n+      @Override\n+      public String asString()\n+      {\n+        return failure;\n+      }\n \n-            @Override\n-            public IndexPopulationFailedKernelException asIndexPopulationFailure(\n-                    SchemaDescriptor descriptor, String indexUserDescription )\n-            {\n-                return new IndexPopulationFailedKernelException( descriptor, indexUserDescription, failure );\n-            }\n-        };\n-    }\n+      @Override\n+      public IndexPopulationFailedKernelException asIndexPopulationFailure(\n+          SchemaDescriptor descriptor, String indexUserDescription)\n+      {\n+        return new IndexPopulationFailedKernelException(descriptor, indexUserDescription, failure);\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1068/IndexPopulationFailure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1068/IndexPopulationFailure.java\nindex 0a21605fd8f..3cfb0c746c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1068/IndexPopulationFailure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1068/IndexPopulationFailure.java\n@@ -27,10 +27,9 @@ public abstract class IndexPopulationFailure\n {\n     public abstract String asString();\n \n-    public abstract IndexPopulationFailedKernelException asIndexPopulationFailure(\n-            SchemaDescriptor descriptor, String indexUserDescriptor );\n+    public abstract IndexPopulationFailedKernelException asIndexPopulationFailure( SchemaDescriptor descriptor, String indexUserDescriptor );\n \n-    public static IndexPopulationFailure failure( final Throwable failure )\n+public static IndexPopulationFailure failure( final Throwable failure )\n     {\n         return new IndexPopulationFailure()\n         {\n@@ -41,8 +40,7 @@ public abstract class IndexPopulationFailure\n             }\n \n             @Override\n-            public IndexPopulationFailedKernelException asIndexPopulationFailure(\n-                    SchemaDescriptor descriptor, String indexUserDescription )\n+            public IndexPopulationFailedKernelException asIndexPopulationFailure( SchemaDescriptor descriptor, String indexUserDescription )\n             {\n                 return new IndexPopulationFailedKernelException( descriptor, indexUserDescription, failure );\n             }\n@@ -60,11 +58,10 @@ public abstract class IndexPopulationFailure\n             }\n \n             @Override\n-            public IndexPopulationFailedKernelException asIndexPopulationFailure(\n-                    SchemaDescriptor descriptor, String indexUserDescription )\n+            public IndexPopulationFailedKernelException asIndexPopulationFailure( SchemaDescriptor descriptor, String indexUserDescription )\n             {\n                 return new IndexPopulationFailedKernelException( descriptor, indexUserDescription, failure );\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
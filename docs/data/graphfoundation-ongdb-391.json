{
    "project_name": "graphfoundation-ongdb",
    "error_id": "391",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/391/RequestContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/391/RequestContext.java\nindex 09bfc4840d5..30b77ab6059 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/391/RequestContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/391/RequestContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com;\n \n \n@@ -32,88 +33,88 @@ package org.neo4j.com;\n  */\n public final class RequestContext\n {\n-    private final int machineId;\n-    private final long lastAppliedTransaction;\n-    private final int eventIdentifier;\n-    private final int hashCode;\n-    private final long epoch;\n-    private final long checksum;\n+  private final int machineId;\n+  private final long lastAppliedTransaction;\n+  private final int eventIdentifier;\n+  private final int hashCode;\n+  private final long epoch;\n+  private final long checksum;\n \n-    public RequestContext( long epoch, int machineId, int eventIdentifier,\n-            long lastAppliedTransaction, long checksum )\n-    {\n-        this.epoch = epoch;\n-        this.machineId = machineId;\n-        this.eventIdentifier = eventIdentifier;\n-        this.lastAppliedTransaction = lastAppliedTransaction;\n-        this.checksum = checksum;\n+  public RequestContext(long epoch, int machineId, int eventIdentifier,\n+                        long lastAppliedTransaction, long checksum)\n+  {\n+    this.epoch = epoch;\n+    this.machineId = machineId;\n+    this.eventIdentifier = eventIdentifier;\n+    this.lastAppliedTransaction = lastAppliedTransaction;\n+    this.checksum = checksum;\n \n-        long hash = epoch;\n-        hash = ( 31 * hash ) ^ eventIdentifier;\n-        hash = ( 31 * hash ) ^ machineId;\n-        this.hashCode = (int) ( ( hash >>> 32 ) ^ hash );\n-    }\n+    long hash = epoch;\n+    hash = (31 * hash) ^ eventIdentifier;\n+    hash = (31 * hash) ^ machineId;\n+    this.hashCode = (int) ((hash >>> 32) ^ hash);\n+  }\n \n-    public int machineId()\n-    {\n-        return machineId;\n-    }\n+  public int machineId()\n+  {\n+    return machineId;\n+  }\n \n-    public long lastAppliedTransaction()\n-    {\n-        return lastAppliedTransaction;\n-    }\n+  public long lastAppliedTransaction()\n+  {\n+    return lastAppliedTransaction;\n+  }\n \n-    public int getEventIdentifier()\n-    {\n-        return eventIdentifier;\n-    }\n+  public int getEventIdentifier()\n+  {\n+    return eventIdentifier;\n+  }\n \n-    public long getEpoch()\n-    {\n-        return epoch;\n-    }\n+  public long getEpoch()\n+  {\n+    return epoch;\n+  }\n \n-    public long getChecksum()\n-    {\n-        return checksum;\n-    }\n+  public long getChecksum()\n+  {\n+    return checksum;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"RequestContext[\" +\n-                \"machineId=\" + machineId +\n-                \", lastAppliedTransaction=\" + lastAppliedTransaction +\n-                \", eventIdentifier=\" + eventIdentifier +\n-                \", hashCode=\" + hashCode +\n-                \", epoch=\" + epoch +\n-                \", checksum=\" + checksum +\n-                ']';\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return \"RequestContext[\" +\n+        \"machineId=\" + machineId +\n+        \", lastAppliedTransaction=\" + lastAppliedTransaction +\n+        \", eventIdentifier=\" + eventIdentifier +\n+        \", hashCode=\" + hashCode +\n+        \", epoch=\" + epoch +\n+        \", checksum=\" + checksum +\n+        ']';\n+  }\n \n-    @Override\n-    public boolean equals( Object obj )\n+  @Override\n+  public boolean equals(Object obj)\n+  {\n+    if (!(obj instanceof RequestContext))\n     {\n-        if ( !( obj instanceof RequestContext ) )\n-        {\n-            return false;\n-        }\n-        RequestContext o = (RequestContext) obj;\n-        return o.eventIdentifier == eventIdentifier && o.machineId == machineId && o.epoch == epoch;\n+      return false;\n     }\n+    RequestContext o = (RequestContext) obj;\n+    return o.eventIdentifier == eventIdentifier && o.machineId == machineId && o.epoch == epoch;\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return this.hashCode;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return this.hashCode;\n+  }\n \n-    public static final RequestContext EMPTY = new RequestContext( -1, -1, -1, -1, -1 );\n+  public static final RequestContext EMPTY = new RequestContext(-1, -1, -1, -1, -1);\n \n-    public static RequestContext anonymous( long lastAppliedTransaction )\n-    {\n-        return new RequestContext( EMPTY.epoch, EMPTY.machineId, EMPTY.eventIdentifier,\n-                lastAppliedTransaction, EMPTY.checksum );\n-    }\n+  public static RequestContext anonymous(long lastAppliedTransaction)\n+  {\n+    return new RequestContext(EMPTY.epoch, EMPTY.machineId, EMPTY.eventIdentifier,\n+        lastAppliedTransaction, EMPTY.checksum);\n+  }\n }\n",
            "diff_size": 76
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/391/RequestContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/391/RequestContext.java\nindex 09bfc4840d5..389a72e4020 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/391/RequestContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/391/RequestContext.java\n@@ -19,7 +19,6 @@\n  */\n package org.neo4j.com;\n \n-\n /**\n  * A representation of the context in which an HA slave operates.\n  * Contains\n@@ -51,7 +50,7 @@ public final class RequestContext\n         long hash = epoch;\n         hash = ( 31 * hash ) ^ eventIdentifier;\n         hash = ( 31 * hash ) ^ machineId;\n-        this.hashCode = (int) ( ( hash >>> 32 ) ^ hash );\n+        this.hashCode = ( int) ( ( hash >>> 32 ) ^ hash );\n     }\n \n     public int machineId()\n@@ -82,14 +81,7 @@ public final class RequestContext\n     @Override\n     public String toString()\n     {\n-        return \"RequestContext[\" +\n-                \"machineId=\" + machineId +\n-                \", lastAppliedTransaction=\" + lastAppliedTransaction +\n-                \", eventIdentifier=\" + eventIdentifier +\n-                \", hashCode=\" + hashCode +\n-                \", epoch=\" + epoch +\n-                \", checksum=\" + checksum +\n-                ']';\n+        return \"RequestContext[\" + \"machineId=\" + machineId + \", lastAppliedTransaction=\" + lastAppliedTransaction + \", eventIdentifier=\" + eventIdentifier + \", hashCode=\" + hashCode + \", epoch=\" + epoch + \", checksum=\" + checksum + ']';\n     }\n \n     @Override\n@@ -99,7 +91,8 @@ public final class RequestContext\n         {\n             return false;\n         }\n-        RequestContext o = (RequestContext) obj;\n+\n+RequestContext o = (RequestContext) obj;\n         return o.eventIdentifier == eventIdentifier && o.machineId == machineId && o.epoch == epoch;\n     }\n \n@@ -116,4 +109,4 @@ public final class RequestContext\n         return new RequestContext( EMPTY.epoch, EMPTY.machineId, EMPTY.eventIdentifier,\n                 lastAppliedTransaction, EMPTY.checksum );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
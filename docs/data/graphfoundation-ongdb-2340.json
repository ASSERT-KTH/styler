{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2340",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2340/HeapByteArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2340/HeapByteArray.java\nindex c15ee37b87a..520fa421135 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2340/HeapByteArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2340/HeapByteArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache;\n \n import java.nio.ByteBuffer;\n@@ -26,201 +27,200 @@ import static java.lang.Math.toIntExact;\n \n public class HeapByteArray extends HeapNumberArray<ByteArray> implements ByteArray\n {\n-    private final int length;\n-    private final byte[] array;\n-    private final ByteBuffer buffer;\n-    private final byte[] defaultValue;\n-    private final boolean defaultValueIsUniform;\n-\n-    public HeapByteArray( int length, byte[] defaultValue, long base )\n-    {\n-        super( defaultValue.length, base );\n-        this.length = length;\n-        this.defaultValue = defaultValue;\n-        this.array = new byte[itemSize * length];\n-        this.buffer = ByteBuffer.wrap( array );\n-        this.defaultValueIsUniform = isUniform( defaultValue );\n-        clear();\n-    }\n-\n-    @Override\n-    public long length()\n-    {\n-        return length;\n-    }\n-\n-    @Override\n-    public void swap( long fromIndex, long toIndex )\n-    {\n-        // Byte-wise swap\n-        for ( int i = 0; i < itemSize; i++ )\n-        {\n-            int fromOffset = index( fromIndex, i );\n-            int toOffset = index( toIndex, i );\n-            byte intermediary = array[fromOffset];\n-            array[fromOffset] = array[toOffset];\n-            array[toOffset] = intermediary;\n-        }\n-    }\n-\n-    @Override\n-    public void clear()\n-    {\n-        if ( defaultValueIsUniform )\n-        {\n-            Arrays.fill( array, defaultValue[0] );\n-        }\n-        else\n-        {\n-            for ( int i = 0; i < length; i++ )\n-            {\n-                System.arraycopy( defaultValue, 0, array, i * itemSize, itemSize );\n-            }\n-        }\n-    }\n-\n-    private static boolean isUniform( byte[] value )\n-    {\n-        byte reference = value[0];\n-        for ( int i = 1; i < value.length; i++ )\n-        {\n-            if ( reference != value[i] )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public void get( long index, byte[] into )\n-    {\n-        System.arraycopy( array, index( index, 0 ), into, 0, itemSize );\n-    }\n-\n-    @Override\n-    public byte getByte( long index, int offset )\n-    {\n-        return buffer.get( index( index, offset ) );\n-    }\n-\n-    @Override\n-    public short getShort( long index, int offset )\n-    {\n-        return buffer.getShort( index( index, offset ) );\n-    }\n-\n-    @Override\n-    public int getInt( long index, int offset )\n-    {\n-        return buffer.getInt( index( index, offset ) );\n-    }\n-\n-    @Override\n-    public int get3ByteInt( long index, int offset )\n-    {\n-        int address = index( index, offset );\n-        return get3ByteIntFromByteBuffer( buffer, address );\n-    }\n-\n-    @Override\n-    public long get5ByteLong( long index, int offset )\n-    {\n-        return get5BLongFromByteBuffer( buffer, index( index, offset ) );\n-    }\n-\n-    @Override\n-    public long get6ByteLong( long index, int offset )\n-    {\n-        return get6BLongFromByteBuffer( buffer, index( index, offset ) );\n-    }\n-\n-    protected static int get3ByteIntFromByteBuffer( ByteBuffer buffer, int address )\n-    {\n-        int lowWord = buffer.getShort( address ) & 0xFFFF;\n-        int highByte = buffer.get( address + Short.BYTES ) & 0xFF;\n-        int result = lowWord | (highByte << Short.SIZE);\n-        return result == 0xFFFFFF ? -1 : result;\n-    }\n-\n-    protected static long get5BLongFromByteBuffer( ByteBuffer buffer, int startOffset )\n-    {\n-        long low4b = buffer.getInt( startOffset ) & 0xFFFFFFFFL;\n-        long high1b = buffer.get( startOffset + Integer.BYTES ) & 0xFF;\n-        long result = low4b | (high1b << 32);\n-        return result == 0xFFFFFFFFFFL ? -1 : result;\n-    }\n-\n-    protected static long get6BLongFromByteBuffer( ByteBuffer buffer, int startOffset )\n-    {\n-        long low4b = buffer.getInt( startOffset ) & 0xFFFFFFFFL;\n-        long high2b = buffer.getShort( startOffset + Integer.BYTES ) & 0xFFFF;\n-        long result = low4b | (high2b << 32);\n-        return result == 0xFFFFFFFFFFFFL ? -1 : result;\n-    }\n-\n-    @Override\n-    public long getLong( long index, int offset )\n-    {\n-        return buffer.getLong( index( index, offset ) );\n-    }\n-\n-    @Override\n-    public void set( long index, byte[] value )\n-    {\n-        System.arraycopy( value, 0, array, index( index, 0 ), itemSize );\n-    }\n-\n-    @Override\n-    public void setByte( long index, int offset, byte value )\n-    {\n-        buffer.put( index( index, offset ), value );\n-    }\n-\n-    @Override\n-    public void setShort( long index, int offset, short value )\n-    {\n-        buffer.putShort( index( index, offset ), value );\n-    }\n-\n-    @Override\n-    public void setInt( long index, int offset, int value )\n-    {\n-        buffer.putInt( index( index, offset ), value );\n-    }\n-\n-    @Override\n-    public void set5ByteLong( long index, int offset, long value )\n-    {\n-        int absIndex = index( index, offset );\n-        buffer.putInt( absIndex, (int) value );\n-        buffer.put( absIndex + Integer.BYTES, (byte) (value >>> 32) );\n-    }\n-\n-    @Override\n-    public void set6ByteLong( long index, int offset, long value )\n-    {\n-        int absIndex = index( index, offset );\n-        buffer.putInt( absIndex, (int) value );\n-        buffer.putShort( absIndex + Integer.BYTES, (short) (value >>> 32) );\n-    }\n-\n-    @Override\n-    public void setLong( long index, int offset, long value )\n-    {\n-        buffer.putLong( index( index, offset ), value );\n-    }\n-\n-    @Override\n-    public void set3ByteInt( long index, int offset, int value )\n-    {\n-        int address = index( index, offset );\n-        buffer.putShort( address, (short) value );\n-        buffer.put( address + Short.BYTES, (byte) (value >>> Short.SIZE) );\n-    }\n-\n-    private int index( long index, int offset )\n-    {\n-        return toIntExact( (rebase( index ) * itemSize) + offset );\n-    }\n+  private final int length;\n+  private final byte[] array;\n+  private final ByteBuffer buffer;\n+  private final byte[] defaultValue;\n+  private final boolean defaultValueIsUniform;\n+\n+  public HeapByteArray(int length, byte[] defaultValue, long base)\n+  {\n+    super(defaultValue.length, base);\n+    this.length = length;\n+    this.defaultValue = defaultValue;\n+    this.array = new byte[itemSize * length];\n+    this.buffer = ByteBuffer.wrap(array);\n+    this.defaultValueIsUniform = isUniform(defaultValue);\n+    clear();\n+  }\n+\n+  @Override\n+  public long length()\n+  {\n+    return length;\n+  }\n+\n+  @Override\n+  public void swap(long fromIndex, long toIndex)\n+  {\n+    // Byte-wise swap\n+    for (int i = 0; i < itemSize; i++)\n+    {\n+      int fromOffset = index(fromIndex, i);\n+      int toOffset = index(toIndex, i);\n+      byte intermediary = array[fromOffset];\n+      array[fromOffset] = array[toOffset];\n+      array[toOffset] = intermediary;\n+    }\n+  }\n+\n+  @Override\n+  public void clear()\n+  {\n+    if (defaultValueIsUniform)\n+    {\n+      Arrays.fill(array, defaultValue[0]);\n+    } else\n+    {\n+      for (int i = 0; i < length; i++)\n+      {\n+        System.arraycopy(defaultValue, 0, array, i * itemSize, itemSize);\n+      }\n+    }\n+  }\n+\n+  private static boolean isUniform(byte[] value)\n+  {\n+    byte reference = value[0];\n+    for (int i = 1; i < value.length; i++)\n+    {\n+      if (reference != value[i])\n+      {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n+\n+  @Override\n+  public void get(long index, byte[] into)\n+  {\n+    System.arraycopy(array, index(index, 0), into, 0, itemSize);\n+  }\n+\n+  @Override\n+  public byte getByte(long index, int offset)\n+  {\n+    return buffer.get(index(index, offset));\n+  }\n+\n+  @Override\n+  public short getShort(long index, int offset)\n+  {\n+    return buffer.getShort(index(index, offset));\n+  }\n+\n+  @Override\n+  public int getInt(long index, int offset)\n+  {\n+    return buffer.getInt(index(index, offset));\n+  }\n+\n+  @Override\n+  public int get3ByteInt(long index, int offset)\n+  {\n+    int address = index(index, offset);\n+    return get3ByteIntFromByteBuffer(buffer, address);\n+  }\n+\n+  @Override\n+  public long get5ByteLong(long index, int offset)\n+  {\n+    return get5BLongFromByteBuffer(buffer, index(index, offset));\n+  }\n+\n+  @Override\n+  public long get6ByteLong(long index, int offset)\n+  {\n+    return get6BLongFromByteBuffer(buffer, index(index, offset));\n+  }\n+\n+  protected static int get3ByteIntFromByteBuffer(ByteBuffer buffer, int address)\n+  {\n+    int lowWord = buffer.getShort(address) & 0xFFFF;\n+    int highByte = buffer.get(address + Short.BYTES) & 0xFF;\n+    int result = lowWord | (highByte << Short.SIZE);\n+    return result == 0xFFFFFF ? -1 : result;\n+  }\n+\n+  protected static long get5BLongFromByteBuffer(ByteBuffer buffer, int startOffset)\n+  {\n+    long low4b = buffer.getInt(startOffset) & 0xFFFFFFFFL;\n+    long high1b = buffer.get(startOffset + Integer.BYTES) & 0xFF;\n+    long result = low4b | (high1b << 32);\n+    return result == 0xFFFFFFFFFFL ? -1 : result;\n+  }\n+\n+  protected static long get6BLongFromByteBuffer(ByteBuffer buffer, int startOffset)\n+  {\n+    long low4b = buffer.getInt(startOffset) & 0xFFFFFFFFL;\n+    long high2b = buffer.getShort(startOffset + Integer.BYTES) & 0xFFFF;\n+    long result = low4b | (high2b << 32);\n+    return result == 0xFFFFFFFFFFFFL ? -1 : result;\n+  }\n+\n+  @Override\n+  public long getLong(long index, int offset)\n+  {\n+    return buffer.getLong(index(index, offset));\n+  }\n+\n+  @Override\n+  public void set(long index, byte[] value)\n+  {\n+    System.arraycopy(value, 0, array, index(index, 0), itemSize);\n+  }\n+\n+  @Override\n+  public void setByte(long index, int offset, byte value)\n+  {\n+    buffer.put(index(index, offset), value);\n+  }\n+\n+  @Override\n+  public void setShort(long index, int offset, short value)\n+  {\n+    buffer.putShort(index(index, offset), value);\n+  }\n+\n+  @Override\n+  public void setInt(long index, int offset, int value)\n+  {\n+    buffer.putInt(index(index, offset), value);\n+  }\n+\n+  @Override\n+  public void set5ByteLong(long index, int offset, long value)\n+  {\n+    int absIndex = index(index, offset);\n+    buffer.putInt(absIndex, (int) value);\n+    buffer.put(absIndex + Integer.BYTES, (byte) (value >>> 32));\n+  }\n+\n+  @Override\n+  public void set6ByteLong(long index, int offset, long value)\n+  {\n+    int absIndex = index(index, offset);\n+    buffer.putInt(absIndex, (int) value);\n+    buffer.putShort(absIndex + Integer.BYTES, (short) (value >>> 32));\n+  }\n+\n+  @Override\n+  public void setLong(long index, int offset, long value)\n+  {\n+    buffer.putLong(index(index, offset), value);\n+  }\n+\n+  @Override\n+  public void set3ByteInt(long index, int offset, int value)\n+  {\n+    int address = index(index, offset);\n+    buffer.putShort(address, (short) value);\n+    buffer.put(address + Short.BYTES, (byte) (value >>> Short.SIZE));\n+  }\n+\n+  private int index(long index, int offset)\n+  {\n+    return toIntExact((rebase(index) * itemSize) + offset);\n+  }\n }\n",
            "diff_size": 198
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "196",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2340/HeapByteArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2340/HeapByteArray.java\nindex c15ee37b87a..4c20ff33ebe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2340/HeapByteArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2340/HeapByteArray.java\n@@ -139,7 +139,7 @@ public class HeapByteArray extends HeapNumberArray<ByteArray> implements ByteArr\n     {\n         int lowWord = buffer.getShort( address ) & 0xFFFF;\n         int highByte = buffer.get( address + Short.BYTES ) & 0xFF;\n-        int result = lowWord | (highByte << Short.SIZE);\n+        int result = lowWord | ( highByte << Short.SIZE);\n         return result == 0xFFFFFF ? -1 : result;\n     }\n \n@@ -147,7 +147,7 @@ public class HeapByteArray extends HeapNumberArray<ByteArray> implements ByteArr\n     {\n         long low4b = buffer.getInt( startOffset ) & 0xFFFFFFFFL;\n         long high1b = buffer.get( startOffset + Integer.BYTES ) & 0xFF;\n-        long result = low4b | (high1b << 32);\n+        long result = low4b | ( high1b << 32 );\n         return result == 0xFFFFFFFFFFL ? -1 : result;\n     }\n \n@@ -155,7 +155,7 @@ public class HeapByteArray extends HeapNumberArray<ByteArray> implements ByteArr\n     {\n         long low4b = buffer.getInt( startOffset ) & 0xFFFFFFFFL;\n         long high2b = buffer.getShort( startOffset + Integer.BYTES ) & 0xFFFF;\n-        long result = low4b | (high2b << 32);\n+        long result = low4b | ( high2b << 32 );\n         return result == 0xFFFFFFFFFFFFL ? -1 : result;\n     }\n \n@@ -193,16 +193,16 @@ public class HeapByteArray extends HeapNumberArray<ByteArray> implements ByteArr\n     public void set5ByteLong( long index, int offset, long value )\n     {\n         int absIndex = index( index, offset );\n-        buffer.putInt( absIndex, (int) value );\n-        buffer.put( absIndex + Integer.BYTES, (byte) (value >>> 32) );\n+        buffer.putInt( absIndex, ( int) value );\n+        buffer.put( absIndex + Integer.BYTES, (byte) ( value >>> 32) );\n     }\n \n     @Override\n     public void set6ByteLong( long index, int offset, long value )\n     {\n         int absIndex = index( index, offset );\n-        buffer.putInt( absIndex, (int) value );\n-        buffer.putShort( absIndex + Integer.BYTES, (short) (value >>> 32) );\n+        buffer.putInt( absIndex, ( int) value );\n+        buffer.putShort( absIndex + Integer.BYTES, (short) ( value >>> 32) );\n     }\n \n     @Override\n@@ -216,11 +216,11 @@ public class HeapByteArray extends HeapNumberArray<ByteArray> implements ByteArr\n     {\n         int address = index( index, offset );\n         buffer.putShort( address, (short) value );\n-        buffer.put( address + Short.BYTES, (byte) (value >>> Short.SIZE) );\n+        buffer.put( address + Short.BYTES, (byte) ( value >>> Short.SIZE) );\n     }\n \n     private int index( long index, int offset )\n     {\n         return toIntExact( (rebase( index ) * itemSize) + offset );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
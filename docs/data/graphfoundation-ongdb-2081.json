{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2081",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2081/FulltextIndexConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2081/FulltextIndexConfiguration.java\nindex 0789eee3931..fdf3cc106d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2081/FulltextIndexConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2081/FulltextIndexConfiguration.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import org.apache.lucene.document.Document;\n@@ -35,72 +36,72 @@ import static org.neo4j.kernel.api.impl.fulltext.FulltextProvider.LUCENE_FULLTEX\n \n class FulltextIndexConfiguration\n {\n-    private static final String FIELD_METADATA_DOC = LUCENE_FULLTEXT_ADDON_PREFIX + \"metadata__doc__field__\";\n-    private static final String FIELD_CONFIG_ANALYZER = LUCENE_FULLTEXT_ADDON_PREFIX + \"analyzer\";\n-    private static final String FIELD_CONFIG_PROPERTIES = LUCENE_FULLTEXT_ADDON_PREFIX + \"properties\";\n-    private static final String FIELD_LAST_COMMITTED_TX_ID = LUCENE_FULLTEXT_ADDON_PREFIX + \"tx__id\";\n-    static Term TERM = new Term( FIELD_METADATA_DOC );\n+  private static final String FIELD_METADATA_DOC = LUCENE_FULLTEXT_ADDON_PREFIX + \"metadata__doc__field__\";\n+  private static final String FIELD_CONFIG_ANALYZER = LUCENE_FULLTEXT_ADDON_PREFIX + \"analyzer\";\n+  private static final String FIELD_CONFIG_PROPERTIES = LUCENE_FULLTEXT_ADDON_PREFIX + \"properties\";\n+  private static final String FIELD_LAST_COMMITTED_TX_ID = LUCENE_FULLTEXT_ADDON_PREFIX + \"tx__id\";\n+  static Term TERM = new Term(FIELD_METADATA_DOC);\n+\n+  private final Set<String> properties;\n+  private final String analyzerClassName;\n+  private final long txId;\n+\n+  FulltextIndexConfiguration(Document doc)\n+  {\n+    properties = new HashSet<>(Arrays.asList(doc.getValues(FIELD_CONFIG_PROPERTIES)));\n+    analyzerClassName = doc.get(FIELD_CONFIG_ANALYZER);\n+    txId = Long.parseLong(doc.get(FIELD_LAST_COMMITTED_TX_ID));\n+  }\n \n-    private final Set<String> properties;\n-    private final String analyzerClassName;\n-    private final long txId;\n+  FulltextIndexConfiguration(String analyzerClassName, Set<String> properties, long txId)\n+  {\n+    this.properties = properties;\n+    this.analyzerClassName = analyzerClassName;\n+    this.txId = txId;\n+  }\n \n-    FulltextIndexConfiguration( Document doc )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        properties = new HashSet<>( Arrays.asList( doc.getValues( FIELD_CONFIG_PROPERTIES ) ) );\n-        analyzerClassName = doc.get( FIELD_CONFIG_ANALYZER );\n-        txId = Long.parseLong( doc.get( FIELD_LAST_COMMITTED_TX_ID ) );\n+      return true;\n     }\n-\n-    FulltextIndexConfiguration( String analyzerClassName, Set<String> properties, long txId )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        this.properties = properties;\n-        this.analyzerClassName = analyzerClassName;\n-        this.txId = txId;\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n+    FulltextIndexConfiguration that = (FulltextIndexConfiguration) o;\n \n-        FulltextIndexConfiguration that = (FulltextIndexConfiguration) o;\n+    return txId == that.txId && properties.equals(that.properties) &&\n+        analyzerClassName.equals(that.analyzerClassName);\n+  }\n \n-        return txId == that.txId && properties.equals( that.properties ) &&\n-               analyzerClassName.equals( that.analyzerClassName );\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = properties.hashCode();\n+    result = 31 * result + analyzerClassName.hashCode();\n+    result = 31 * result + (int) (txId ^ (txId >>> 32));\n+    return result;\n+  }\n \n-    @Override\n-    public int hashCode()\n+  Document asDocument()\n+  {\n+    Document doc = new Document();\n+    doc.add(new StringField(FIELD_METADATA_DOC, \"\", NO));\n+    doc.add(new StoredField(FIELD_CONFIG_ANALYZER, analyzerClassName));\n+    doc.add(new LongField(FIELD_LAST_COMMITTED_TX_ID, txId, YES));\n+    for (String property : properties)\n     {\n-        int result = properties.hashCode();\n-        result = 31 * result + analyzerClassName.hashCode();\n-        result = 31 * result + (int) (txId ^ (txId >>> 32));\n-        return result;\n+      doc.add(new StoredField(FIELD_CONFIG_PROPERTIES, property));\n     }\n+    return doc;\n+  }\n \n-    Document asDocument()\n-    {\n-        Document doc = new Document();\n-        doc.add( new StringField( FIELD_METADATA_DOC, \"\", NO ) );\n-        doc.add( new StoredField( FIELD_CONFIG_ANALYZER, analyzerClassName ) );\n-        doc.add( new LongField( FIELD_LAST_COMMITTED_TX_ID, txId, YES ) );\n-        for ( String property : properties )\n-        {\n-            doc.add( new StoredField( FIELD_CONFIG_PROPERTIES, property ) );\n-        }\n-        return doc;\n-    }\n-\n-    public Set<String> getProperties()\n-    {\n-        return properties;\n-    }\n+  public Set<String> getProperties()\n+  {\n+    return properties;\n+  }\n }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "column": "74",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "85",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2081/FulltextIndexConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2081/FulltextIndexConfiguration.java\nindex 0789eee3931..fbd59976ddf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2081/FulltextIndexConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2081/FulltextIndexConfiguration.java\n@@ -66,15 +66,15 @@ class FulltextIndexConfiguration\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         FulltextIndexConfiguration that = (FulltextIndexConfiguration) o;\n \n-        return txId == that.txId && properties.equals( that.properties ) &&\n-               analyzerClassName.equals( that.analyzerClassName );\n+        return txId == that.txId && properties.equals( that.properties ) &&analyzerClassName.equals( that.analyzerClassName );\n     }\n \n     @Override\n@@ -82,7 +82,7 @@ class FulltextIndexConfiguration\n     {\n         int result = properties.hashCode();\n         result = 31 * result + analyzerClassName.hashCode();\n-        result = 31 * result + (int) (txId ^ (txId >>> 32));\n+        result = 31 * result + ( int) ( txId ^ ( txId >>> 32 ));\n         return result;\n     }\n \n@@ -96,11 +96,12 @@ class FulltextIndexConfiguration\n         {\n             doc.add( new StoredField( FIELD_CONFIG_PROPERTIES, property ) );\n         }\n-        return doc;\n+\n+return doc;\n     }\n \n     public Set<String> getProperties()\n     {\n         return properties;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "column": "23",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "75",
                    "column": "33",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "75",
                    "column": "72",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "82",
                    "column": "20",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "20",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "43",
                    "severity": "error",
                    "message": "'^' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "51",
                    "severity": "error",
                    "message": "'>>>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "93",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2081/FulltextIndexConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2081/FulltextIndexConfiguration.java\nindex 0789eee3931..87087e0b238 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2081/FulltextIndexConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2081/FulltextIndexConfiguration.java\n@@ -24,13 +24,13 @@ import org.apache.lucene.document.LongField;\n import org.apache.lucene.document.StoredField;\n import org.apache.lucene.document.StringField;\n import org.apache.lucene.index.Term;\n-\n import java.util.Arrays;\n import java.util.HashSet;\n import java.util.Set;\n-\n import static org.apache.lucene.document.Field.Store.NO;\n+\n import static org.apache.lucene.document.Field.Store.YES;\n+\n import static org.neo4j.kernel.api.impl.fulltext.FulltextProvider.LUCENE_FULLTEXT_ADDON_PREFIX;\n \n class FulltextIndexConfiguration\n@@ -40,7 +40,6 @@ class FulltextIndexConfiguration\n     private static final String FIELD_CONFIG_PROPERTIES = LUCENE_FULLTEXT_ADDON_PREFIX + \"properties\";\n     private static final String FIELD_LAST_COMMITTED_TX_ID = LUCENE_FULLTEXT_ADDON_PREFIX + \"tx__id\";\n     static Term TERM = new Term( FIELD_METADATA_DOC );\n-\n     private final Set<String> properties;\n     private final String analyzerClassName;\n     private final long txId;\n@@ -66,23 +65,22 @@ class FulltextIndexConfiguration\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+        if ( o == null|| getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         FulltextIndexConfiguration that = (FulltextIndexConfiguration) o;\n-\n-        return txId == that.txId && properties.equals( that.properties ) &&\n-               analyzerClassName.equals( that.analyzerClassName );\n+        return txId == that.txId&& properties.equals( that.properties )&& analyzerClassName.equals( that.analyzerClassName );\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = properties.hashCode();\n-        result = 31 * result + analyzerClassName.hashCode();\n-        result = 31 * result + (int) (txId ^ (txId >>> 32));\n+        result = 31* result + analyzerClassName.hashCode();\n+        result = 31* result + (int) ( txId^ ( txId>>> 32));\n         return result;\n     }\n \n@@ -92,10 +90,11 @@ class FulltextIndexConfiguration\n         doc.add( new StringField( FIELD_METADATA_DOC, \"\", NO ) );\n         doc.add( new StoredField( FIELD_CONFIG_ANALYZER, analyzerClassName ) );\n         doc.add( new LongField( FIELD_LAST_COMMITTED_TX_ID, txId, YES ) );\n-        for ( String property : properties )\n+        for( String property : properties)\n         {\n             doc.add( new StoredField( FIELD_CONFIG_PROPERTIES, property ) );\n         }\n+\n         return doc;\n     }\n \n@@ -103,4 +102,4 @@ class FulltextIndexConfiguration\n     {\n         return properties;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
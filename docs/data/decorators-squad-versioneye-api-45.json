{
    "project_name": "decorators-squad-versioneye-api",
    "error_id": "45",
    "information": {
        "errors": [
            {
                "line": "73",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            .getJsonArray(\"repos\");\n        final List<Repository> repositories = new ArrayList<>();\n        for(int idx=0; idx<results.size(); idx++) {\n            repositories.add(\n                new RtRepository(results.getJsonObject(idx))\n            );",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler/45/RtRepositories.java\nindex bac1edb5f77..5c1be0a78c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler/45/RtRepositories.java\n@@ -70,7 +70,7 @@ final class RtRepositories implements Repositories {\n             .readObject()\n             .getJsonArray(\"repos\");\n         final List<Repository> repositories = new ArrayList<>();\n-        for(int idx=0; idx<results.size(); idx++) {\n+        for (int idx=0; idx<results.size(); idx++) {\n             repositories.add(\n                 new RtRepository(results.getJsonObject(idx))\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/45/RtRepositories.java\nindex bac1edb5f77..eed9355ed46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/45/RtRepositories.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2017, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.versioneye;\n \n import java.io.IOException;\n@@ -50,7 +51,7 @@ final class RtRepositories implements Repositories {\n      * HTTP request.\n      */\n     private Request req;\n-    \n+\n     /**\n      * Ctor.\n      * @param entry HTTP request.\n@@ -58,7 +59,7 @@ final class RtRepositories implements Repositories {\n     RtRepositories(final Request entry) {\n         this.req = entry;\n     }\n-    \n+\n     @Override\n     public List<Repository> fetch(final int page) throws IOException {\n         final JsonArray results = this.req.uri()\n@@ -70,7 +71,7 @@ final class RtRepositories implements Repositories {\n             .readObject()\n             .getJsonArray(\"repos\");\n         final List<Repository> repositories = new ArrayList<>();\n-        for(int idx=0; idx<results.size(); idx++) {\n+        for (int idx = 0; idx < results.size(); idx++) {\n             repositories.add(\n                 new RtRepository(results.getJsonObject(idx))\n             );\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/45/RtRepositories.java\nindex bac1edb5f77..b79746e01df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/45/RtRepositories.java\n@@ -71,25 +71,21 @@ final class RtRepositories implements Repositories {\n             .getJsonArray(\"repos\");\n         final List<Repository> repositories = new ArrayList<>();\n         for(int idx=0; idx<results.size(); idx++) {\n-            repositories.add(\n-                new RtRepository(results.getJsonObject(idx))\n-            );\n+            repositories.add(new RtRepository(results.getJsonObject(idx)));\n         }\n         return repositories;\n     }\n \n     @Override\n     public Paging paging(final int page) throws IOException {\n-        return new JsonPaging(\n-            this.req.uri()\n+        return new JsonPaging(this.req.uri()\n                 .queryParam(\"page\", String.valueOf(page)).back().fetch()\n                 .as(RestResponse.class)\n                 .assertStatus(HttpURLConnection.HTTP_OK)\n                 .as(JsonResponse.class)\n                 .json()\n                 .readObject()\n-                .getJsonObject(\"paging\")\n-        );\n+                .getJsonObject(\"paging\"));\n     }\n \n     @Override\n@@ -99,44 +95,35 @@ final class RtRepositories implements Repositories {\n \n     @Override\n     public Repositories language(final String language) {\n-        return new RtRepositories(\n-            this.req.uri().queryParam(\"lang\", language).back()\n-        );\n+        return new RtRepositories(this.req.uri().queryParam(\"lang\", language).back());\n     }\n \n     @Override\n     public Repositories isPrivate(final boolean isPrivate) {\n-        return new RtRepositories(\n-            this.req.uri()\n+        return new RtRepositories(this.req.uri()\n                 .queryParam(\"private\", String.valueOf(isPrivate))\n-                .back()\n-        );\n+                .back());\n     }\n \n     @Override\n     public Repositories organizationName(final String organizationName) {\n-        return new RtRepositories(\n-            this.req.uri()\n+        return new RtRepositories(this.req.uri()\n                 .queryParam(\"orga_name\", organizationName)\n-                .back()\n-        );\n+                .back());\n     }\n \n     @Override\n     public Repositories organizationType(final String organizationType) {\n-        return new RtRepositories(\n-            this.req.uri()\n+        return new RtRepositories(this.req.uri()\n                 .queryParam(\"orga_type\", organizationType)\n-                .back()\n-        );\n+                .back());\n     }\n \n     @Override\n     public Repositories onlyImported(final boolean onlyImported) {\n-        return new RtRepositories(\n-            this.req.uri()\n+        return new RtRepositories(this.req.uri()\n                 .queryParam(\"only_imported\", String.valueOf(onlyImported))\n-                .back()\n-        );\n+                .back());\n     }\n-}\n+\n+    }\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "67",
                    "column": "16",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "67",
                    "column": "18",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'int' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'this' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "column": "11",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "80",
                    "column": "13",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "14",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "column": "4",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'0' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "column": "2",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'int' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "column": "16",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "112",
                    "column": "18",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'boolean' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "'boolean' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/45/RtRepositories.java\nindex bac1edb5f77..9638ae42637 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/45/RtRepositories.java\n@@ -31,9 +31,7 @@ import java.io.IOException;\n import java.net.HttpURLConnection;\n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.json.JsonArray;\n-\n import com.jcabi.http.Request;\n import com.jcabi.http.response.JsonResponse;\n import com.jcabi.http.response.RestResponse;\n@@ -44,99 +42,112 @@ import com.jcabi.http.response.RestResponse;\n  * @version $Id: e1161fe30e1eed7be53848e2fe01d28e2b36fb45 $\n  * @since 1.0.0\n  */\n+\n+\n final class RtRepositories implements Repositories {\n \n     /**\n      * HTTP request.\n      */\n+\n+\n     private Request req;\n     \n     /**\n      * Ctor.\n      * @param entry HTTP request.\n      */\n+\n+\n     RtRepositories(final Request entry) {\n         this.req = entry;\n     }\n-    \n+\n     @Override\n-    public List<Repository> fetch(final int page) throws IOException {\n-        final JsonArray results = this.req.uri()\n-            .queryParam(\"page\", String.valueOf(page)).back().fetch()\n-            .as(RestResponse.class)\n-            .assertStatus(HttpURLConnection.HTTP_OK)\n-            .as(JsonResponse.class)\n-            .json()\n-            .readObject()\n-            .getJsonArray(\"repos\");\n-        final List<Repository> repositories = new ArrayList<>();\n-        for(int idx=0; idx<results.size(); idx++) {\n-            repositories.add(\n-                new RtRepository(results.getJsonObject(idx))\n-            );\n-        }\n-        return repositories;\n+    public List < Repository> fetch(final\n+int page) throws IOException {\n+        final JsonArray results=\n+this.req.uri()\n+.queryParam(\"page\", String.valueOf(page))\n+.back()\n+.fetch()\n+.as(RestResponse.class)\n+.assertStatus(HttpURLConnection.HTTP_OK)\n+.as(JsonResponse.class)\n+.json()\n+.readObject()\n+.getJsonArray(\"repos\");\n+final List < Repository> repositories=\n+new ArrayList <>();\n+\n+\n+for(int idx=\n+0 ;\n+\n+\n+idx< results.size();\n+\n+\n+                  idx++) {\n+repositories.add(new RtRepository(results.getJsonObject(idx)));\n+} return repositories;\n     }\n \n     @Override\n-    public Paging paging(final int page) throws IOException {\n-        return new JsonPaging(\n-            this.req.uri()\n-                .queryParam(\"page\", String.valueOf(page)).back().fetch()\n-                .as(RestResponse.class)\n-                .assertStatus(HttpURLConnection.HTTP_OK)\n-                .as(JsonResponse.class)\n-                .json()\n-                .readObject()\n-                .getJsonObject(\"paging\")\n-        );\n+    public Paging paging(final\n+int page) throws IOException {\n+        return new JsonPaging(this.req.uri()\n+.queryParam(\"page\", String.valueOf(page))\n+.back()\n+.fetch()\n+.as(RestResponse.class)\n+.assertStatus(HttpURLConnection.HTTP_OK)\n+.as(JsonResponse.class)\n+.json()\n+.readObject()\n+.getJsonObject(\"paging\"));\n     }\n \n     @Override\n-    public Page<Repository> paginated() {\n+    public Page < Repository> paginated() {\n         return new RepositoriesPage(this);\n     }\n \n     @Override\n     public Repositories language(final String language) {\n-        return new RtRepositories(\n-            this.req.uri().queryParam(\"lang\", language).back()\n-        );\n+        return new RtRepositories(this.req.uri()\n+.queryParam(\"lang\", language)\n+.back());\n     }\n \n     @Override\n-    public Repositories isPrivate(final boolean isPrivate) {\n-        return new RtRepositories(\n-            this.req.uri()\n-                .queryParam(\"private\", String.valueOf(isPrivate))\n-                .back()\n-        );\n+    public Repositories isPrivate(final\n+boolean isPrivate) {\n+        return new RtRepositories(this.req.uri()\n+.queryParam(\"private\", String.valueOf(isPrivate))\n+.back());\n     }\n \n     @Override\n     public Repositories organizationName(final String organizationName) {\n-        return new RtRepositories(\n-            this.req.uri()\n-                .queryParam(\"orga_name\", organizationName)\n-                .back()\n-        );\n+        return new RtRepositories(this.req.uri()\n+.queryParam(\"orga_name\", organizationName)\n+.back());\n     }\n \n     @Override\n     public Repositories organizationType(final String organizationType) {\n-        return new RtRepositories(\n-            this.req.uri()\n-                .queryParam(\"orga_type\", organizationType)\n-                .back()\n-        );\n+        return new RtRepositories(this.req.uri()\n+.queryParam(\"orga_type\", organizationType)\n+.back());\n     }\n \n     @Override\n-    public Repositories onlyImported(final boolean onlyImported) {\n-        return new RtRepositories(\n-            this.req.uri()\n-                .queryParam(\"only_imported\", String.valueOf(onlyImported))\n-                .back()\n-        );\n+    public Repositories onlyImported(final\n+boolean onlyImported) {\n+        return new RtRepositories(this.req.uri()\n+.queryParam(\"only_imported\", String.valueOf(onlyImported))\n+.back());\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 76
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler_random/45/RtRepositories.java\nindex bac1edb5f77..5c1be0a78c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/45/RtRepositories.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler_random/45/RtRepositories.java\n@@ -70,7 +70,7 @@ final class RtRepositories implements Repositories {\n             .readObject()\n             .getJsonArray(\"repos\");\n         final List<Repository> repositories = new ArrayList<>();\n-        for(int idx=0; idx<results.size(); idx++) {\n+        for (int idx=0; idx<results.size(); idx++) {\n             repositories.add(\n                 new RtRepository(results.getJsonObject(idx))\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "Rugal-algorithm",
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage ga.rugal.leetcode.romantointeger;\n\nimport java.util.HashMap;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/17/Solution.java\nindex 46dd912b145..399840b6e59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/17/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.romantointeger;\r\n \r\n import java.util.HashMap;\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/17/Solution.java\nindex 46dd912b145..bf24f6451b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/17/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.romantointeger;\r\n \r\n import java.util.HashMap;\r\n@@ -43,8 +44,8 @@ public class Solution {\n       final char c = s.charAt(i);\r\n       result += this.map.get(c);\r\n       result -= (i > 0 && this.map.get(s.charAt(i - 1)) < this.map.get(c)\r\n-                 ? 2 * this.map.get(s.charAt(i - 1))\r\n-                 : 0);\r\n+        ? 2 * this.map.get(s.charAt(i - 1))\r\n+        : 0);\r\n     }\r\n     return result;\r\n   }\r\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/17/Solution.java\nindex 46dd912b145..3a46cf7bb76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/17/Solution.java\n@@ -12,8 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n- */\r\n-package ga.rugal.leetcode.romantointeger;\r\n+ */package ga.rugal.leetcode.romantointeger;\r\n \r\n import java.util.HashMap;\r\n import java.util.Map;\r\n@@ -42,10 +41,9 @@ public class Solution {\n     for (int i = 0; i < s.length(); ++i) {\r\n       final char c = s.charAt(i);\r\n       result += this.map.get(c);\r\n-      result -= (i > 0 && this.map.get(s.charAt(i - 1)) < this.map.get(c)\r\n-                 ? 2 * this.map.get(s.charAt(i - 1))\r\n-                 : 0);\r\n-    }\r\n+      result -= (i > 0 && this.map.get(s.charAt(i - 1)) < this.map.get(c) ? 2 * this.map.get(s.charAt(i - 1))\r\n+                 : 0);\n+  }\r\n     return result;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/17/Solution.java\nindex 46dd912b145..d120b9bd97c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/17/Solution.java\n@@ -13,39 +13,39 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package ga.rugal.leetcode.romantointeger;\r\n-\r\n-import java.util.HashMap;\r\n+package ga.rugal.leetcode.romantointeger;\n+\n+import java.util.HashMap;\n import java.util.Map;\r\n \r\n /**\r\n  * https://leetcode.com/problems/roman-to-integer/\r\n  *\r\n  * @author rugal\r\n- */\r\n-public class Solution {\r\n-\r\n-  private final Map<Character, Integer> map = new HashMap<>();\r\n-\r\n-  public Solution() {\r\n-    this.map.put('I', 1);\r\n-    this.map.put('V', 5);\r\n-    this.map.put('X', 10);\r\n-    this.map.put('L', 50);\r\n-    this.map.put('C', 100);\r\n-    this.map.put('D', 500);\r\n-    this.map.put('M', 1000);\r\n-  }\r\n-\r\n-  public int romanToInt(final String s) {\r\n-    int result = 0;\r\n-    for (int i = 0; i < s.length(); ++i) {\r\n-      final char c = s.charAt(i);\r\n-      result += this.map.get(c);\r\n-      result -= (i > 0 && this.map.get(s.charAt(i - 1)) < this.map.get(c)\r\n-                 ? 2 * this.map.get(s.charAt(i - 1))\r\n-                 : 0);\r\n-    }\r\n-    return result;\r\n-  }\r\n-}\r\n+ */\n+\n+\n+public class Solution {\n+\n+  private final Map<Character, Integer> map = new HashMap<>();\n+\n+  public Solution() {\n+    this.map.put('I', 1);\n+    this.map.put('V', 5);\n+    this.map.put('X', 10);\n+    this.map.put('L', 50);\n+    this.map.put('C', 100);\n+    this.map.put('D', 500);\n+    this.map.put('M', 1000);\n+  }\n+\n+  public int romanToInt(final String s) {\n+    int result = 0;\n+    for (int i = 0; i < s.length(); ++i) {\n+      final char c = s.charAt(i);\n+      result += this.map.get(c);\n+      result -= (i > 0 && this.map.get(s.charAt(i - 1)) < this.map.get(c) ? 2 * this.map.get(s.charAt(i - 1)) : 0);\n+    }\n+    return result;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/17/Solution.java\nindex 46dd912b145..399840b6e59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/17/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.romantointeger;\r\n \r\n import java.util.HashMap;\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/17/Solution.java\nindex 46dd912b145..399840b6e59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/17/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/17/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.romantointeger;\r\n \r\n import java.util.HashMap;\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1088",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "231",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "390",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1088/GBPTreeConsistencyChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1088/GBPTreeConsistencyChecker.java\nindex a9075548aa7..cf735fce521 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1088/GBPTreeConsistencyChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1088/GBPTreeConsistencyChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import org.eclipse.collections.api.list.MutableList;\n@@ -54,9 +55,9 @@ import static org.neo4j.index.internal.gbptree.TreeNode.Type.LEAF;\n  */\n class GBPTreeConsistencyChecker<KEY>\n {\n-    private final TreeNode<KEY,?> node;\n+    private final TreeNode<KEY, ?> node;\n     private final Comparator<KEY> comparator;\n-    private final Layout<KEY,?> layout;\n+    private final Layout<KEY, ?> layout;\n     private final List<RightmostInChain> rightmostPerLevel = new ArrayList<>();\n     private final IdProvider idProvider;\n     private final long lastId;\n@@ -66,8 +67,8 @@ class GBPTreeConsistencyChecker<KEY>\n     private final GenerationKeeper generationTarget = new GenerationKeeper();\n     private final MutableLongList offloadIds = new LongArrayList();\n \n-    GBPTreeConsistencyChecker( TreeNode<KEY,?> node, Layout<KEY,?> layout, IdProvider idProvider, long stableGeneration,\n-            long unstableGeneration, boolean reportDirty )\n+    GBPTreeConsistencyChecker(TreeNode<KEY, ?> node, Layout<KEY, ?> layout, IdProvider idProvider, long stableGeneration,\n+                              long unstableGeneration, boolean reportDirty)\n     {\n         this.node = node;\n         this.comparator = node.keyComparator();\n@@ -83,77 +84,77 @@ class GBPTreeConsistencyChecker<KEY>\n      * Checks so that all pages between {@link IdSpace#MIN_TREE_NODE_ID} and highest allocated id\n      * are either in use in the tree, on the free-list or free-list nodes.\n      *\n-     * @param file The file containing the gbptree\n-     * @param cursor {@link PageCursor} to use for reading.\n-     * @param root {@link Root} the root of the gbptree.\n-     * @param visitor {@link GBPTreeConsistencyCheckVisitor} visitor to report inconsistencies to.\n+     * @param file         The file containing the gbptree\n+     * @param cursor       {@link PageCursor} to use for reading.\n+     * @param root         {@link Root} the root of the gbptree.\n+     * @param visitor      {@link GBPTreeConsistencyCheckVisitor} visitor to report inconsistencies to.\n      * @param cursorTracer underlying page cursor tracer\n      * @throws IOException on {@link PageCursor} error.\n      */\n-    public void check( Path file, PageCursor cursor, Root root, GBPTreeConsistencyCheckVisitor<KEY> visitor, PageCursorTracer cursorTracer ) throws IOException\n+    public void check(Path file, PageCursor cursor, Root root, GBPTreeConsistencyCheckVisitor<KEY> visitor, PageCursorTracer cursorTracer) throws IOException\n     {\n         // TODO: limitation, can't run on an index larger than Integer.MAX_VALUE pages (which is fairly large)\n         long highId = lastId + 1;\n-        BitSet seenIds = new BitSet( toIntExact( highId ) );\n+        BitSet seenIds = new BitSet(toIntExact(highId));\n \n         // Log ids in freelist together with ids occupied by freelist pages.\n-        IdProvider.IdProviderVisitor freelistSeenIdsVisitor = new FreelistSeenIdsVisitor<>( file, seenIds, lastId, visitor );\n-        idProvider.visitFreelist( freelistSeenIdsVisitor, cursorTracer );\n+        IdProvider.IdProviderVisitor freelistSeenIdsVisitor = new FreelistSeenIdsVisitor<>(file, seenIds, lastId, visitor);\n+        idProvider.visitFreelist(freelistSeenIdsVisitor, cursorTracer);\n \n         // Check structure of GBPTree\n-        long rootGeneration = root.goTo( cursor );\n-        KeyRange<KEY> openRange = new KeyRange<>( -1, -1, comparator, null, null, layout, null );\n-        checkSubtree( file, cursor, openRange, -1, rootGeneration, GBPTreePointerType.noPointer(), 0, visitor, seenIds, cursorTracer );\n+        long rootGeneration = root.goTo(cursor);\n+        KeyRange<KEY> openRange = new KeyRange<>(-1, -1, comparator, null, null, layout, null);\n+        checkSubtree(file, cursor, openRange, -1, rootGeneration, GBPTreePointerType.noPointer(), 0, visitor, seenIds, cursorTracer);\n \n         // Assert that rightmost node on each level has empty right sibling.\n-        rightmostPerLevel.forEach( rightmost -> rightmost.assertLast( visitor ) );\n+        rightmostPerLevel.forEach(rightmost -> rightmost.assertLast(visitor));\n \n         // Assert that all pages in file are either present as an active tree node or in freelist.\n-        assertAllIdsOccupied( file, highId, seenIds, visitor );\n-        root.goTo( cursor );\n+        assertAllIdsOccupied(file, highId, seenIds, visitor);\n+        root.goTo(cursor);\n     }\n \n-    private static <KEY> void assertAllIdsOccupied( Path file, long highId, BitSet seenIds, GBPTreeConsistencyCheckVisitor<KEY> visitor )\n+    private static <KEY> void assertAllIdsOccupied(Path file, long highId, BitSet seenIds, GBPTreeConsistencyCheckVisitor<KEY> visitor)\n     {\n         long expectedNumberOfPages = highId - IdSpace.MIN_TREE_NODE_ID;\n-        if ( seenIds.cardinality() != expectedNumberOfPages )\n+        if (seenIds.cardinality() != expectedNumberOfPages)\n         {\n             int index = (int) IdSpace.MIN_TREE_NODE_ID;\n-            while ( index >= 0 && index < highId )\n+            while (index >= 0 && index < highId)\n             {\n-                index = seenIds.nextClearBit( index );\n-                if ( index != -1 && index < highId )\n+                index = seenIds.nextClearBit(index);\n+                if (index != -1 && index < highId)\n                 {\n-                    visitor.unusedPage( index, file );\n+                    visitor.unusedPage(index, file);\n                 }\n                 index++;\n             }\n         }\n     }\n \n-    private static <KEY> void addToSeenList( Path file, BitSet target, long id, long lastId, GBPTreeConsistencyCheckVisitor<KEY> visitor )\n+    private static <KEY> void addToSeenList(Path file, BitSet target, long id, long lastId, GBPTreeConsistencyCheckVisitor<KEY> visitor)\n     {\n-        int index = toIntExact( id );\n-        if ( target.get( index ) )\n+        int index = toIntExact(id);\n+        if (target.get(index))\n         {\n-            visitor.pageIdSeenMultipleTimes( id, file );\n+            visitor.pageIdSeenMultipleTimes(id, file);\n         }\n-        if ( id > lastId )\n+        if (id > lastId)\n         {\n-            visitor.pageIdExceedLastId( lastId, id, file );\n+            visitor.pageIdExceedLastId(lastId, id, file);\n         }\n-        target.set( index );\n+        target.set(index);\n     }\n \n-    private void checkSubtree( Path file, PageCursor cursor, KeyRange<KEY> range, long parentNode, long pointerGeneration,\n-            GBPTreePointerType parentPointerType, int level, GBPTreeConsistencyCheckVisitor<KEY> visitor, BitSet seenIds,\n-            PageCursorTracer cursorTracer ) throws IOException\n+    private void checkSubtree(Path file, PageCursor cursor, KeyRange<KEY> range, long parentNode, long pointerGeneration,\n+                              GBPTreePointerType parentPointerType, int level, GBPTreeConsistencyCheckVisitor<KEY> visitor, BitSet seenIds,\n+                              PageCursorTracer cursorTracer) throws IOException\n     {\n         long pageId = cursor.getCurrentPageId();\n-        addToSeenList( file, seenIds, pageId, lastId, visitor );\n-        if ( range.hasPageIdInStack( pageId ) )\n+        addToSeenList(file, seenIds, pageId, lastId, visitor);\n+        if (range.hasPageIdInStack(pageId))\n         {\n-            visitor.childNodeFoundAmongParentNodes( range, level, pageId, file );\n+            visitor.childNodeFoundAmongParentNodes(range, level, pageId, file);\n             return;\n         }\n         byte nodeType;\n@@ -170,118 +171,118 @@ class GBPTreeConsistencyChecker<KEY>\n         do\n         {\n             // for assertSiblings\n-            leftSiblingPointer = TreeNode.leftSibling( cursor, stableGeneration, unstableGeneration, generationTarget );\n+            leftSiblingPointer = TreeNode.leftSibling(cursor, stableGeneration, unstableGeneration, generationTarget);\n             leftSiblingPointerGeneration = generationTarget.generation;\n-            rightSiblingPointer = TreeNode.rightSibling( cursor, stableGeneration, unstableGeneration, generationTarget );\n+            rightSiblingPointer = TreeNode.rightSibling(cursor, stableGeneration, unstableGeneration, generationTarget);\n             rightSiblingPointerGeneration = generationTarget.generation;\n-            leftSiblingPointer = pointer( leftSiblingPointer );\n-            rightSiblingPointer = pointer( rightSiblingPointer );\n-            currentNodeGeneration = TreeNode.generation( cursor );\n+            leftSiblingPointer = pointer(leftSiblingPointer);\n+            rightSiblingPointer = pointer(rightSiblingPointer);\n+            currentNodeGeneration = TreeNode.generation(cursor);\n \n-            successor = TreeNode.successor( cursor, stableGeneration, unstableGeneration, generationTarget );\n+            successor = TreeNode.successor(cursor, stableGeneration, unstableGeneration, generationTarget);\n \n-            keyCount = TreeNode.keyCount( cursor );\n-            nodeType = TreeNode.nodeType( cursor );\n-            treeNodeType = TreeNode.treeNodeType( cursor );\n+            keyCount = TreeNode.keyCount(cursor);\n+            nodeType = TreeNode.nodeType(cursor);\n+            treeNodeType = TreeNode.treeNodeType(cursor);\n         }\n-        while ( cursor.shouldRetry() );\n-        checkAfterShouldRetry( cursor );\n+        while (cursor.shouldRetry());\n+        checkAfterShouldRetry(cursor);\n \n-        if ( nodeType != TreeNode.NODE_TYPE_TREE_NODE )\n+        if (nodeType != TreeNode.NODE_TYPE_TREE_NODE)\n         {\n-            visitor.notATreeNode( pageId, file );\n+            visitor.notATreeNode(pageId, file);\n             return;\n         }\n \n         boolean isLeaf = treeNodeType == TreeNode.LEAF_FLAG;\n         boolean isInternal = treeNodeType == TreeNode.INTERNAL_FLAG;\n-        if ( !isInternal && !isLeaf )\n+        if (!isInternal && !isLeaf)\n         {\n-            visitor.unknownTreeNodeType( pageId, treeNodeType, file );\n+            visitor.unknownTreeNodeType(pageId, treeNodeType, file);\n             return;\n         }\n \n         // check header pointers\n-        assertNoCrashOrBrokenPointerInGSPP( file,\n-                cursor, stableGeneration, unstableGeneration, GBPTreePointerType.leftSibling(), TreeNode.BYTE_POS_LEFTSIBLING, visitor, reportDirty );\n-        assertNoCrashOrBrokenPointerInGSPP( file,\n-                cursor, stableGeneration, unstableGeneration, GBPTreePointerType.rightSibling(), TreeNode.BYTE_POS_RIGHTSIBLING, visitor, reportDirty );\n-        assertNoCrashOrBrokenPointerInGSPP( file,\n-                cursor, stableGeneration, unstableGeneration, GBPTreePointerType.successor(), TreeNode.BYTE_POS_SUCCESSOR, visitor, reportDirty );\n-\n-        boolean reasonableKeyCount = node.reasonableKeyCount( keyCount );\n-        if ( !reasonableKeyCount )\n+        assertNoCrashOrBrokenPointerInGSPP(file,\n+          cursor, stableGeneration, unstableGeneration, GBPTreePointerType.leftSibling(), TreeNode.BYTE_POS_LEFTSIBLING, visitor, reportDirty);\n+        assertNoCrashOrBrokenPointerInGSPP(file,\n+          cursor, stableGeneration, unstableGeneration, GBPTreePointerType.rightSibling(), TreeNode.BYTE_POS_RIGHTSIBLING, visitor, reportDirty);\n+        assertNoCrashOrBrokenPointerInGSPP(file,\n+          cursor, stableGeneration, unstableGeneration, GBPTreePointerType.successor(), TreeNode.BYTE_POS_SUCCESSOR, visitor, reportDirty);\n+\n+        boolean reasonableKeyCount = node.reasonableKeyCount(keyCount);\n+        if (!reasonableKeyCount)\n         {\n-            visitor.unreasonableKeyCount( pageId, keyCount, file );\n-        }\n-        else\n+            visitor.unreasonableKeyCount(pageId, keyCount, file);\n+        } else\n \n         {\n-            assertKeyOrder( file, cursor, range, keyCount, isLeaf ? LEAF : INTERNAL, offloadIds, visitor, cursorTracer );\n+            assertKeyOrder(file, cursor, range, keyCount, isLeaf ? LEAF : INTERNAL, offloadIds, visitor, cursorTracer);\n         }\n-        offloadIds.forEach( id -> addToSeenList( file, seenIds, id, lastId, visitor ) );\n+        offloadIds.forEach(id -> addToSeenList(file, seenIds, id, lastId, visitor));\n \n         String nodeMetaReport;\n         boolean consistentNodeMeta;\n         do\n         {\n-            nodeMetaReport = node.checkMetaConsistency( cursor, keyCount, isLeaf ? LEAF : INTERNAL, visitor );\n+            nodeMetaReport = node.checkMetaConsistency(cursor, keyCount, isLeaf ? LEAF : INTERNAL, visitor);\n             consistentNodeMeta = nodeMetaReport.isEmpty();\n         }\n-        while ( cursor.shouldRetry() );\n-        checkAfterShouldRetry( cursor );\n-        if ( !consistentNodeMeta )\n+        while (cursor.shouldRetry());\n+        checkAfterShouldRetry(cursor);\n+        if (!consistentNodeMeta)\n         {\n-            visitor.nodeMetaInconsistency( pageId, nodeMetaReport, file );\n+            visitor.nodeMetaInconsistency(pageId, nodeMetaReport, file);\n         }\n \n-        assertPointerGenerationMatchesGeneration( file, parentPointerType, parentNode, pageId,\n-                pointerGeneration, currentNodeGeneration, visitor );\n-        assertSiblings( file, cursor, currentNodeGeneration, leftSiblingPointer, leftSiblingPointerGeneration,\n-                rightSiblingPointer, rightSiblingPointerGeneration, level, visitor );\n-        checkSuccessorPointerGeneration( file, cursor, successor, visitor );\n+        assertPointerGenerationMatchesGeneration(file, parentPointerType, parentNode, pageId,\n+          pointerGeneration, currentNodeGeneration, visitor);\n+        assertSiblings(file, cursor, currentNodeGeneration, leftSiblingPointer, leftSiblingPointerGeneration,\n+          rightSiblingPointer, rightSiblingPointerGeneration, level, visitor);\n+        checkSuccessorPointerGeneration(file, cursor, successor, visitor);\n \n-        if ( isInternal && reasonableKeyCount && consistentNodeMeta )\n+        if (isInternal && reasonableKeyCount && consistentNodeMeta)\n         {\n-            assertSubtrees( file, cursor, range, keyCount, level, visitor, seenIds, cursorTracer );\n+            assertSubtrees(file, cursor, range, keyCount, level, visitor, seenIds, cursorTracer);\n         }\n     }\n \n-    private static <KEY> void assertPointerGenerationMatchesGeneration( Path file, GBPTreePointerType pointerType, long sourceNode, long pointer,\n-            long pointerGeneration, long targetNodeGeneration, GBPTreeConsistencyCheckVisitor<KEY> visitor )\n+    private static <KEY> void assertPointerGenerationMatchesGeneration(Path file, GBPTreePointerType pointerType, long sourceNode, long pointer,\n+                                                                       long pointerGeneration, long targetNodeGeneration,\n+                                                                       GBPTreeConsistencyCheckVisitor<KEY> visitor)\n     {\n-        if ( targetNodeGeneration > pointerGeneration )\n+        if (targetNodeGeneration > pointerGeneration)\n         {\n-            visitor.pointerHasLowerGenerationThanNode( pointerType, sourceNode, pointerGeneration, pointer, targetNodeGeneration, file );\n+            visitor.pointerHasLowerGenerationThanNode(pointerType, sourceNode, pointerGeneration, pointer, targetNodeGeneration, file);\n         }\n     }\n \n-    private void checkSuccessorPointerGeneration( Path file, PageCursor cursor, long successor, GBPTreeConsistencyCheckVisitor<KEY> visitor )\n+    private void checkSuccessorPointerGeneration(Path file, PageCursor cursor, long successor, GBPTreeConsistencyCheckVisitor<KEY> visitor)\n     {\n-        if ( TreeNode.isNode( successor ) )\n+        if (TreeNode.isNode(successor))\n         {\n-            visitor.pointerToOldVersionOfTreeNode( cursor.getCurrentPageId(), pointer( successor ), file );\n+            visitor.pointerToOldVersionOfTreeNode(cursor.getCurrentPageId(), pointer(successor), file);\n         }\n     }\n \n     // Assumption: We traverse the tree from left to right on every level\n-    private void assertSiblings( Path file, PageCursor cursor, long currentNodeGeneration, long leftSiblingPointer,\n-            long leftSiblingPointerGeneration, long rightSiblingPointer, long rightSiblingPointerGeneration, int level,\n-            GBPTreeConsistencyCheckVisitor<KEY> visitor )\n+    private void assertSiblings(Path file, PageCursor cursor, long currentNodeGeneration, long leftSiblingPointer,\n+                                long leftSiblingPointerGeneration, long rightSiblingPointer, long rightSiblingPointerGeneration, int level,\n+                                GBPTreeConsistencyCheckVisitor<KEY> visitor)\n     {\n         // If this is the first time on this level, we will add a new entry\n-        for ( int i = rightmostPerLevel.size(); i <= level; i++ )\n+        for (int i = rightmostPerLevel.size(); i <= level; i++)\n         {\n-            rightmostPerLevel.add( i, new RightmostInChain( file ) );\n+            rightmostPerLevel.add(i, new RightmostInChain(file));\n         }\n-        RightmostInChain rightmost = rightmostPerLevel.get( level );\n+        RightmostInChain rightmost = rightmostPerLevel.get(level);\n \n-        rightmost.assertNext( cursor, currentNodeGeneration, leftSiblingPointer, leftSiblingPointerGeneration, rightSiblingPointer,\n-                rightSiblingPointerGeneration, visitor );\n+        rightmost.assertNext(cursor, currentNodeGeneration, leftSiblingPointer, leftSiblingPointerGeneration, rightSiblingPointer,\n+          rightSiblingPointerGeneration, visitor);\n     }\n \n-    private void assertSubtrees( Path file, PageCursor cursor, KeyRange<KEY> range, int keyCount, int level,\n-            GBPTreeConsistencyCheckVisitor<KEY> visitor, BitSet seenIds, PageCursorTracer cursorTracer ) throws IOException\n+    private void assertSubtrees(Path file, PageCursor cursor, KeyRange<KEY> range, int keyCount, int level,\n+                                GBPTreeConsistencyCheckVisitor<KEY> visitor, BitSet seenIds, PageCursorTracer cursorTracer) throws IOException\n     {\n         long pageId = cursor.getCurrentPageId();\n         KEY prev = null;\n@@ -290,74 +291,74 @@ class GBPTreeConsistencyChecker<KEY>\n \n         // Check children, all except the last one\n         int pos = 0;\n-        while ( pos < keyCount )\n+        while (pos < keyCount)\n         {\n             long child;\n             long childGeneration;\n-            assertNoCrashOrBrokenPointerInGSPP( file,\n-                    cursor, stableGeneration, unstableGeneration, GBPTreePointerType.child( pos ), node.childOffset( pos ), visitor, reportDirty );\n+            assertNoCrashOrBrokenPointerInGSPP(file,\n+              cursor, stableGeneration, unstableGeneration, GBPTreePointerType.child(pos), node.childOffset(pos), visitor, reportDirty);\n             do\n             {\n-                child = childAt( cursor, pos, generationTarget );\n+                child = childAt(cursor, pos, generationTarget);\n                 childGeneration = generationTarget.generation;\n-                node.keyAt( cursor, readKey, pos, INTERNAL, cursorTracer );\n+                node.keyAt(cursor, readKey, pos, INTERNAL, cursorTracer);\n             }\n-            while ( cursor.shouldRetry() );\n-            checkAfterShouldRetry( cursor );\n+            while (cursor.shouldRetry());\n+            checkAfterShouldRetry(cursor);\n \n-            childRange = range.newSubRange( level, pageId ).restrictRight( readKey );\n-            if ( pos > 0 )\n+            childRange = range.newSubRange(level, pageId).restrictRight(readKey);\n+            if (pos > 0)\n             {\n-                childRange = childRange.restrictLeft( prev );\n+                childRange = childRange.restrictLeft(prev);\n             }\n \n-            TreeNode.goTo( cursor, \"child at pos \" + pos, child );\n-            checkSubtree( file, cursor, childRange, pageId, childGeneration, GBPTreePointerType.child( pos ), level + 1, visitor, seenIds, cursorTracer );\n+            TreeNode.goTo(cursor, \"child at pos \" + pos, child);\n+            checkSubtree(file, cursor, childRange, pageId, childGeneration, GBPTreePointerType.child(pos), level + 1, visitor, seenIds, cursorTracer);\n \n-            TreeNode.goTo( cursor, \"parent\", pageId );\n+            TreeNode.goTo(cursor, \"parent\", pageId);\n \n-            if ( pos == 0 )\n+            if (pos == 0)\n             {\n                 prev = layout.newKey();\n             }\n-            layout.copyKey( readKey, prev );\n+            layout.copyKey(readKey, prev);\n             pos++;\n         }\n \n         // Check last child\n         long child;\n         long childGeneration;\n-        assertNoCrashOrBrokenPointerInGSPP( file,\n-                cursor, stableGeneration, unstableGeneration, GBPTreePointerType.child( pos ), node.childOffset( pos ), visitor, reportDirty );\n+        assertNoCrashOrBrokenPointerInGSPP(file,\n+          cursor, stableGeneration, unstableGeneration, GBPTreePointerType.child(pos), node.childOffset(pos), visitor, reportDirty);\n         do\n         {\n-            child = childAt( cursor, pos, generationTarget );\n+            child = childAt(cursor, pos, generationTarget);\n             childGeneration = generationTarget.generation;\n         }\n-        while ( cursor.shouldRetry() );\n-        checkAfterShouldRetry( cursor );\n+        while (cursor.shouldRetry());\n+        checkAfterShouldRetry(cursor);\n \n-        TreeNode.goTo( cursor, \"child at pos \" + pos, child );\n-        childRange = range.newSubRange( level, pageId ).restrictLeft( prev );\n-        checkSubtree( file, cursor, childRange, pageId, childGeneration, GBPTreePointerType.child( pos ), level + 1, visitor, seenIds, cursorTracer );\n-        TreeNode.goTo( cursor, \"parent\", pageId );\n+        TreeNode.goTo(cursor, \"child at pos \" + pos, child);\n+        childRange = range.newSubRange(level, pageId).restrictLeft(prev);\n+        checkSubtree(file, cursor, childRange, pageId, childGeneration, GBPTreePointerType.child(pos), level + 1, visitor, seenIds, cursorTracer);\n+        TreeNode.goTo(cursor, \"parent\", pageId);\n     }\n \n-    private static void checkAfterShouldRetry( PageCursor cursor ) throws CursorException\n+    private static void checkAfterShouldRetry(PageCursor cursor) throws CursorException\n     {\n-        checkOutOfBounds( cursor );\n+        checkOutOfBounds(cursor);\n         cursor.checkAndClearCursorException();\n     }\n \n-    private long childAt( PageCursor cursor, int pos, GBPTreeGenerationTarget childGeneration )\n+    private long childAt(PageCursor cursor, int pos, GBPTreeGenerationTarget childGeneration)\n     {\n-        return node.childAt( cursor, pos, stableGeneration, unstableGeneration, childGeneration );\n+        return node.childAt(cursor, pos, stableGeneration, unstableGeneration, childGeneration);\n     }\n \n-    private void assertKeyOrder( Path file, PageCursor cursor, KeyRange<KEY> range, int keyCount, TreeNode.Type type,\n-            MutableLongList offloadIds, GBPTreeConsistencyCheckVisitor<KEY> visitor, PageCursorTracer cursorTracer ) throws IOException\n+    private void assertKeyOrder(Path file, PageCursor cursor, KeyRange<KEY> range, int keyCount, TreeNode.Type type,\n+                                MutableLongList offloadIds, GBPTreeConsistencyCheckVisitor<KEY> visitor, PageCursorTracer cursorTracer) throws IOException\n     {\n-        DelayedVisitor<KEY> delayedVisitor = new DelayedVisitor<>( file );\n+        DelayedVisitor<KEY> delayedVisitor = new DelayedVisitor<>(file);\n         do\n         {\n             delayedVisitor.clear();\n@@ -365,41 +366,41 @@ class GBPTreeConsistencyChecker<KEY>\n             KEY prev = layout.newKey();\n             KEY readKey = layout.newKey();\n             boolean first = true;\n-            for ( int pos = 0; pos < keyCount; pos++ )\n+            for (int pos = 0; pos < keyCount; pos++)\n             {\n-                node.keyAt( cursor, readKey, pos, type, cursorTracer );\n-                if ( !range.inRange( readKey ) )\n+                node.keyAt(cursor, readKey, pos, type, cursorTracer);\n+                if (!range.inRange(readKey))\n                 {\n                     KEY keyCopy = layout.newKey();\n-                    layout.copyKey( readKey, keyCopy );\n-                    delayedVisitor.keysLocatedInWrongNode( range, keyCopy, pos, keyCount, cursor.getCurrentPageId(), file );\n+                    layout.copyKey(readKey, keyCopy);\n+                    delayedVisitor.keysLocatedInWrongNode(range, keyCopy, pos, keyCount, cursor.getCurrentPageId(), file);\n                 }\n-                if ( !first )\n+                if (!first)\n                 {\n-                    if ( comparator.compare( prev, readKey ) >= 0 )\n+                    if (comparator.compare(prev, readKey) >= 0)\n                     {\n-                        delayedVisitor.keysOutOfOrderInNode( cursor.getCurrentPageId(), file );\n+                        delayedVisitor.keysOutOfOrderInNode(cursor.getCurrentPageId(), file);\n                     }\n-                }\n-                else\n+                } else\n                 {\n                     first = false;\n                 }\n-                layout.copyKey( readKey, prev );\n-                long offloadId = node.offloadIdAt( cursor, pos, type );\n-                if ( offloadId != NO_OFFLOAD_ID )\n+                layout.copyKey(readKey, prev);\n+                long offloadId = node.offloadIdAt(cursor, pos, type);\n+                if (offloadId != NO_OFFLOAD_ID)\n                 {\n-                    offloadIds.add( offloadId );\n+                    offloadIds.add(offloadId);\n                 }\n             }\n         }\n-        while ( cursor.shouldRetry() );\n-        checkAfterShouldRetry( cursor );\n-        delayedVisitor.report( visitor );\n+        while (cursor.shouldRetry());\n+        checkAfterShouldRetry(cursor);\n+        delayedVisitor.report(visitor);\n     }\n \n-    static <KEY> void assertNoCrashOrBrokenPointerInGSPP( Path file, PageCursor cursor, long stableGeneration, long unstableGeneration,\n-            GBPTreePointerType pointerType, int offset, GBPTreeConsistencyCheckVisitor<KEY> visitor, boolean reportDirty ) throws IOException\n+    static <KEY> void assertNoCrashOrBrokenPointerInGSPP(Path file, PageCursor cursor, long stableGeneration, long unstableGeneration,\n+                                                         GBPTreePointerType pointerType, int offset, GBPTreeConsistencyCheckVisitor<KEY> visitor,\n+                                                         boolean reportDirty) throws IOException\n     {\n         long currentNodeId = cursor.getCurrentPageId();\n \n@@ -418,38 +419,38 @@ class GBPTreeConsistencyChecker<KEY>\n         byte stateB;\n         do\n         {\n-            cursor.setOffset( offset );\n+            cursor.setOffset(offset);\n             // A\n-            generationA = GenerationSafePointer.readGeneration( cursor );\n-            readPointerA = GenerationSafePointer.readPointer( cursor );\n-            pointerA = GenerationSafePointerPair.pointer( readPointerA );\n-            checksumA = GenerationSafePointer.readChecksum( cursor );\n-            correctChecksumA = GenerationSafePointer.checksumOf( generationA, readPointerA ) == checksumA;\n+            generationA = GenerationSafePointer.readGeneration(cursor);\n+            readPointerA = GenerationSafePointer.readPointer(cursor);\n+            pointerA = GenerationSafePointerPair.pointer(readPointerA);\n+            checksumA = GenerationSafePointer.readChecksum(cursor);\n+            correctChecksumA = GenerationSafePointer.checksumOf(generationA, readPointerA) == checksumA;\n             stateA = GenerationSafePointerPair.pointerState(\n-                    stableGeneration, unstableGeneration, generationA, readPointerA, correctChecksumA );\n+              stableGeneration, unstableGeneration, generationA, readPointerA, correctChecksumA);\n \n             // B\n-            generationB = GenerationSafePointer.readGeneration( cursor );\n-            readPointerB = GenerationSafePointer.readPointer( cursor );\n-            pointerB = GenerationSafePointerPair.pointer( readPointerA );\n-            checksumB = GenerationSafePointer.readChecksum( cursor );\n-            correctChecksumB = GenerationSafePointer.checksumOf( generationB, readPointerB ) == checksumB;\n+            generationB = GenerationSafePointer.readGeneration(cursor);\n+            readPointerB = GenerationSafePointer.readPointer(cursor);\n+            pointerB = GenerationSafePointerPair.pointer(readPointerA);\n+            checksumB = GenerationSafePointer.readChecksum(cursor);\n+            correctChecksumB = GenerationSafePointer.checksumOf(generationB, readPointerB) == checksumB;\n             stateB = GenerationSafePointerPair.pointerState(\n-                    stableGeneration, unstableGeneration, generationB, readPointerB, correctChecksumB );\n+              stableGeneration, unstableGeneration, generationB, readPointerB, correctChecksumB);\n         }\n-        while ( cursor.shouldRetry() );\n+        while (cursor.shouldRetry());\n \n-        if ( reportDirty )\n+        if (reportDirty)\n         {\n-            if ( stateA == GenerationSafePointerPair.CRASH || stateB == GenerationSafePointerPair.CRASH )\n+            if (stateA == GenerationSafePointerPair.CRASH || stateB == GenerationSafePointerPair.CRASH)\n             {\n-                visitor.crashedPointer( currentNodeId, pointerType, generationA, readPointerA, pointerA, stateA, generationB, readPointerB, pointerB, stateB,\n-                        file );\n+                visitor.crashedPointer(currentNodeId, pointerType, generationA, readPointerA, pointerA, stateA, generationB, readPointerB, pointerB, stateB,\n+                  file);\n             }\n         }\n-        if ( stateA == GenerationSafePointerPair.BROKEN || stateB == GenerationSafePointerPair.BROKEN )\n+        if (stateA == GenerationSafePointerPair.BROKEN || stateB == GenerationSafePointerPair.BROKEN)\n         {\n-            visitor.brokenPointer( currentNodeId, pointerType, generationA, readPointerA, pointerA, stateA, generationB, readPointerB, pointerB, stateB, file );\n+            visitor.brokenPointer(currentNodeId, pointerType, generationA, readPointerA, pointerA, stateA, generationB, readPointerB, pointerB, stateB, file);\n         }\n     }\n \n@@ -459,21 +460,21 @@ class GBPTreeConsistencyChecker<KEY>\n         MutableLongList keysOutOfOrder = LongLists.mutable.empty();\n         MutableList<KeyInWrongNode<KEY>> keysLocatedInWrongNode = Lists.mutable.empty();\n \n-        DelayedVisitor( Path path )\n+        DelayedVisitor(Path path)\n         {\n             this.path = path;\n         }\n \n         @Override\n-        public void keysOutOfOrderInNode( long pageId, Path file )\n+        public void keysOutOfOrderInNode(long pageId, Path file)\n         {\n-            keysOutOfOrder.add( pageId );\n+            keysOutOfOrder.add(pageId);\n         }\n \n         @Override\n-        public void keysLocatedInWrongNode( KeyRange<KEY> range, KEY key, int pos, int keyCount, long pageId, Path file )\n+        public void keysLocatedInWrongNode(KeyRange<KEY> range, KEY key, int pos, int keyCount, long pageId, Path file)\n         {\n-            keysLocatedInWrongNode.add( new KeyInWrongNode<>( pageId, range, key, pos, keyCount ) );\n+            keysLocatedInWrongNode.add(new KeyInWrongNode<>(pageId, range, key, pos, keyCount));\n         }\n \n         void clear()\n@@ -482,17 +483,17 @@ class GBPTreeConsistencyChecker<KEY>\n             keysLocatedInWrongNode.clear();\n         }\n \n-        void report( GBPTreeConsistencyCheckVisitor<KEY> visitor )\n+        void report(GBPTreeConsistencyCheckVisitor<KEY> visitor)\n         {\n-            if ( keysOutOfOrder.notEmpty() )\n+            if (keysOutOfOrder.notEmpty())\n             {\n-                keysOutOfOrder.forEach( pageId -> visitor.keysOutOfOrderInNode( pageId, path ) );\n+                keysOutOfOrder.forEach(pageId -> visitor.keysOutOfOrderInNode(pageId, path));\n             }\n-            if ( keysLocatedInWrongNode.notEmpty() )\n+            if (keysLocatedInWrongNode.notEmpty())\n             {\n-                keysLocatedInWrongNode.forEach( keyInWrongNode -> visitor.keysLocatedInWrongNode( keyInWrongNode.range, keyInWrongNode.key, keyInWrongNode.pos,\n-                        keyInWrongNode.keyCount, keyInWrongNode.pageId, path\n-                ) );\n+                keysLocatedInWrongNode.forEach(keyInWrongNode -> visitor.keysLocatedInWrongNode(keyInWrongNode.range, keyInWrongNode.key, keyInWrongNode.pos,\n+                  keyInWrongNode.keyCount, keyInWrongNode.pageId, path\n+                ));\n             }\n         }\n \n@@ -504,7 +505,7 @@ class GBPTreeConsistencyChecker<KEY>\n             final int pos;\n             final int keyCount;\n \n-            private KeyInWrongNode( long pageId, KeyRange<KEY> range, KEY key, int pos, int keyCount )\n+            private KeyInWrongNode(long pageId, KeyRange<KEY> range, KEY key, int pos, int keyCount)\n             {\n                 this.pageId = pageId;\n                 this.range = range;\n@@ -522,7 +523,7 @@ class GBPTreeConsistencyChecker<KEY>\n         private final long lastId;\n         private final GBPTreeConsistencyCheckVisitor<KEY> visitor;\n \n-        private FreelistSeenIdsVisitor( Path path, BitSet seenIds, long lastId, GBPTreeConsistencyCheckVisitor<KEY> visitor )\n+        private FreelistSeenIdsVisitor(Path path, BitSet seenIds, long lastId, GBPTreeConsistencyCheckVisitor<KEY> visitor)\n         {\n             this.path = path;\n             this.seenIds = seenIds;\n@@ -531,20 +532,20 @@ class GBPTreeConsistencyChecker<KEY>\n         }\n \n         @Override\n-        public void beginFreelistPage( long pageId )\n+        public void beginFreelistPage(long pageId)\n         {\n-            addToSeenList( path, seenIds, pageId, lastId, visitor );\n+            addToSeenList(path, seenIds, pageId, lastId, visitor);\n         }\n \n         @Override\n-        public void endFreelistPage( long pageId )\n+        public void endFreelistPage(long pageId)\n         {\n         }\n \n         @Override\n-        public void freelistEntry( long pageId, long generation, int pos )\n+        public void freelistEntry(long pageId, long generation, int pos)\n         {\n-            addToSeenList( path, seenIds, pageId, lastId, visitor );\n+            addToSeenList(path, seenIds, pageId, lastId, visitor);\n         }\n     }\n }\n",
            "diff_size": 187
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
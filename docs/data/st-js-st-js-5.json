{
    "project_name": "st-js-st-js",
    "error_id": "5",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "36",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "public class StatementGeneratorTest extends AbstractStjsTest {\n\t@Test\n\tpublic void testMultipleCatch(){\n\t\tassertCodeContains(Statement1.class, \"catch(e){throw new RuntimeException(e);}\");\n\t}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/5/StatementGeneratorTest.java\nindex d528dea99f9..49af3c1a869 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/5/StatementGeneratorTest.java\n@@ -5,7 +5,7 @@ import org.stjs.generator.utils.AbstractStjsTest;\n \r\n public class StatementGeneratorTest extends AbstractStjsTest {\r\n \t@Test\r\n-\tpublic void testMultipleCatch(){\r\n+\tpublic void testMultipleCatch() {\r\n \t\tassertCodeContains(Statement1.class, \"catch(e){throw new RuntimeException(e);}\");\r\n \t}\r\n }\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "7",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/5/StatementGeneratorTest.java\nindex d528dea99f9..79aa31feb70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/5/StatementGeneratorTest.java\n@@ -4,8 +4,8 @@ import org.junit.Test;\n import org.stjs.generator.utils.AbstractStjsTest;\r\n \r\n public class StatementGeneratorTest extends AbstractStjsTest {\r\n-\t@Test\r\n-\tpublic void testMultipleCatch(){\r\n-\t\tassertCodeContains(Statement1.class, \"catch(e){throw new RuntimeException(e);}\");\r\n-\t}\r\n+    @Test\r\n+    public void testMultipleCatch() {\r\n+        assertCodeContains(Statement1.class, \"catch(e){throw new RuntimeException(e);}\");\r\n+    }\r\n }\r\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/5/StatementGeneratorTest.java\nindex d528dea99f9..d202cd9f975 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/5/StatementGeneratorTest.java\n@@ -5,7 +5,7 @@ import org.stjs.generator.utils.AbstractStjsTest;\n \r\n public class StatementGeneratorTest extends AbstractStjsTest {\r\n \t@Test\r\n-\tpublic void testMultipleCatch(){\r\n+\tpublic void testMultipleCatch() {\r\n \t\tassertCodeContains(Statement1.class, \"catch(e){throw new RuntimeException(e);}\");\r\n \t}\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/5/StatementGeneratorTest.java\nindex d528dea99f9..57600276335 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/5/StatementGeneratorTest.java\n@@ -1,11 +1,13 @@\n-package org.stjs.generator.plugin.java8.writer.statements;\r\n-\r\n-import org.junit.Test;\r\n-import org.stjs.generator.utils.AbstractStjsTest;\r\n-\r\n-public class StatementGeneratorTest extends AbstractStjsTest {\r\n-\t@Test\r\n-\tpublic void testMultipleCatch(){\r\n-\t\tassertCodeContains(Statement1.class, \"catch(e){throw new RuntimeException(e);}\");\r\n-\t}\r\n-}\r\n+package org.stjs.generator.plugin.java8.writer.statements;\n+\n+import org.junit.Test;\n+import org.stjs.generator.utils.AbstractStjsTest;\n+\n+\n+public class StatementGeneratorTest extends AbstractStjsTest {\n+\n+ @Test\n+ public void testMultipleCatch() {\n+  assertCodeContains(Statement1.class, \"catch(e){throw new RuntimeException(e);}\");\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/5/StatementGeneratorTest.java\nindex d528dea99f9..49af3c1a869 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/5/StatementGeneratorTest.java\n@@ -5,7 +5,7 @@ import org.stjs.generator.utils.AbstractStjsTest;\n \r\n public class StatementGeneratorTest extends AbstractStjsTest {\r\n \t@Test\r\n-\tpublic void testMultipleCatch(){\r\n+\tpublic void testMultipleCatch() {\r\n \t\tassertCodeContains(Statement1.class, \"catch(e){throw new RuntimeException(e);}\");\r\n \t}\r\n }\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/5/StatementGeneratorTest.java\nindex d528dea99f9..49af3c1a869 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/5/StatementGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/5/StatementGeneratorTest.java\n@@ -5,7 +5,7 @@ import org.stjs.generator.utils.AbstractStjsTest;\n \r\n public class StatementGeneratorTest extends AbstractStjsTest {\r\n \t@Test\r\n-\tpublic void testMultipleCatch(){\r\n+\tpublic void testMultipleCatch() {\r\n \t\tassertCodeContains(Statement1.class, \"catch(e){throw new RuntimeException(e);}\");\r\n \t}\r\n }\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
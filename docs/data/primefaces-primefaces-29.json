{
    "project_name": "primefaces-primefaces",
    "error_id": "29",
    "information": {
        "errors": [
            {
                "line": "60",
                "severity": "error",
                "message": "Line is longer than 160 characters (found 164).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n        // create nested groups\n        TimelineGroup<String> group1 = new TimelineGroup<>(\"groupId1\", \"Truck Group Level 1\", \"groupId1\", 1, Arrays.asList(\"groupId2\", \"id1\", \"id2\", \"id5\", \"id6\"));\n        TimelineGroup<String> group2 = new TimelineGroup<>(\"groupId2\", \"Truck Group Level 2\", \"groupId2\", 2, Arrays.asList(\"id3\", \"id4\"));\n        TimelineGroup<String> group3 = new TimelineGroup<>(\"id1\", \"Truck 1\", 2);\n        TimelineGroup<String> group4 = new TimelineGroup<>(\"id2\", \"Truck 2\", 2);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "158",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/29/NestedGroupingTimelineView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/intellij/29/NestedGroupingTimelineView.java\nindex eef31be3eed..b38956d5705 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/29/NestedGroupingTimelineView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/intellij/29/NestedGroupingTimelineView.java\n@@ -21,6 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n+\n package org.primefaces.showcase.view.data.timeline;\n \n import org.primefaces.model.timeline.TimelineGroup;\n@@ -57,7 +58,8 @@ public class NestedGroupingTimelineView implements Serializable {\n         model = new TimelineModel<>();\n \n         // create nested groups\n-        TimelineGroup<String> group1 = new TimelineGroup<>(\"groupId1\", \"Truck Group Level 1\", \"groupId1\", 1, Arrays.asList(\"groupId2\", \"id1\", \"id2\", \"id5\", \"id6\"));\n+        TimelineGroup<String> group1 =\n+            new TimelineGroup<>(\"groupId1\", \"Truck Group Level 1\", \"groupId1\", 1, Arrays.asList(\"groupId2\", \"id1\", \"id2\", \"id5\", \"id6\"));\n         TimelineGroup<String> group2 = new TimelineGroup<>(\"groupId2\", \"Truck Group Level 2\", \"groupId2\", 2, Arrays.asList(\"id3\", \"id4\"));\n         TimelineGroup<String> group3 = new TimelineGroup<>(\"id1\", \"Truck 1\", 2);\n         TimelineGroup<String> group4 = new TimelineGroup<>(\"id2\", \"Truck 2\", 2);\n@@ -102,12 +104,12 @@ public class NestedGroupingTimelineView implements Serializable {\n \n                 Order order = new Order(orderNumber, imagePath);\n                 model.add(TimelineEvent.<Order>builder()\n-                        .data(order)\n-                        .startDate(startDate)\n-                        .endDate(endDate)\n-                        .editable(true)\n-                        .group(\"id\" + j)\n-                        .build());\n+                    .data(order)\n+                    .startDate(startDate)\n+                    .endDate(endDate)\n+                    .editable(true)\n+                    .group(\"id\" + j)\n+                    .build());\n \n                 orderNumber++;\n                 referenceDate = endDate;\n@@ -153,10 +155,9 @@ public class NestedGroupingTimelineView implements Serializable {\n         // merge orders and update UI if the user selected some orders to be merged\n         if (ordersToMerge != null && !ordersToMerge.isEmpty()) {\n             model.merge(event, ordersToMerge, TimelineUpdater.getCurrentInstance(\":form:timeline\"));\n-        }\n-        else {\n+        } else {\n             FacesMessage msg\n-                    = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Nothing to merge, please choose orders to be merged\", null);\n+                = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Nothing to merge, please choose orders to be merged\", null);\n             FacesContext.getCurrentInstance().addMessage(null, msg);\n         }\n \n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "column": "36",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 24, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "column": "49",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/29/NestedGroupingTimelineView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/naturalize/29/NestedGroupingTimelineView.java\nindex eef31be3eed..10b5d8f6a0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/29/NestedGroupingTimelineView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/naturalize/29/NestedGroupingTimelineView.java\n@@ -53,8 +53,7 @@ public class NestedGroupingTimelineView implements Serializable {\n \n     @PostConstruct\n     protected void initialize() {\n-\n-        model = new TimelineModel<>();\n+    model = new TimelineModel<>();\n \n         // create nested groups\n         TimelineGroup<String> group1 = new TimelineGroup<>(\"groupId1\", \"Truck Group Level 1\", \"groupId1\", 1, Arrays.asList(\"groupId2\", \"id1\", \"id2\", \"id5\", \"id6\"));\n@@ -107,9 +106,7 @@ public class NestedGroupingTimelineView implements Serializable {\n                         .endDate(endDate)\n                         .editable(true)\n                         .group(\"id\" + j)\n-                        .build());\n-\n-                orderNumber++;\n+                        .build()); orderNumber++;\n                 referenceDate = endDate;\n             }\n         }\n@@ -184,4 +181,4 @@ public class NestedGroupingTimelineView implements Serializable {\n         this.ordersToMerge = ordersToMerge;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/29/NestedGroupingTimelineView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/codebuff/29/NestedGroupingTimelineView.java\nindex eef31be3eed..59c63927731 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/29/NestedGroupingTimelineView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/codebuff/29/NestedGroupingTimelineView.java\n@@ -28,7 +28,6 @@ import org.primefaces.showcase.domain.Order;\n import org.primefaces.event.timeline.*;\n import org.primefaces.model.timeline.TimelineEvent;\n import org.primefaces.model.timeline.TimelineModel;\n-\n import javax.annotation.PostConstruct;\n import javax.faces.application.FacesMessage;\n import javax.faces.context.FacesContext;\n@@ -38,7 +37,6 @@ import java.io.Serializable;\n import java.time.LocalDateTime;\n import java.time.Month;\n import java.util.*;\n-\n import org.primefaces.PrimeFaces;\n import org.primefaces.component.timeline.TimelineUpdater;\n \n@@ -47,16 +45,19 @@ import org.primefaces.component.timeline.TimelineUpdater;\n public class NestedGroupingTimelineView implements Serializable {\n \n     private TimelineModel<Order, String> model;\n+\n     private TimelineEvent<Order> event; // current changed event\n+\n     private List<TimelineEvent<Order>> overlappedOrders; // all overlapped orders (events) to the changed order (event)\n+\n     private List<TimelineEvent<Order>> ordersToMerge; // selected orders (events) in the dialog which should be merged\n \n     @PostConstruct\n     protected void initialize() {\n-\n         model = new TimelineModel<>();\n \n         // create nested groups\n+\n         TimelineGroup<String> group1 = new TimelineGroup<>(\"groupId1\", \"Truck Group Level 1\", \"groupId1\", 1, Arrays.asList(\"groupId2\", \"id1\", \"id2\", \"id5\", \"id6\"));\n         TimelineGroup<String> group2 = new TimelineGroup<>(\"groupId2\", \"Truck Group Level 2\", \"groupId2\", 2, Arrays.asList(\"id3\", \"id4\"));\n         TimelineGroup<String> group3 = new TimelineGroup<>(\"id1\", \"Truck 1\", 2);\n@@ -65,7 +66,11 @@ public class NestedGroupingTimelineView implements Serializable {\n         TimelineGroup<String> group6 = new TimelineGroup<>(\"id4\", \"Truck 4\", 3);\n         TimelineGroup<String> group7 = new TimelineGroup<>(\"id5\", \"Truck 5\", 2);\n         TimelineGroup<String> group8 = new TimelineGroup<>(\"id6\", \"Truck 6\", 2);\n-        TimelineGroup<String> group9 = new TimelineGroup<>(\"groupId3\", \"Truck Group Level 1\", \"groupId3\", 1, Arrays.asList(\"id7\", \"id8\", \"id9\"));\n+        TimelineGroup<String> group9 = new TimelineGroup<>(\"groupId3\",\n+                                                           \"Truck Group Level 1\",\n+                                                           \"groupId3\",\n+                                                           1,\n+                                                           Arrays.asList(\"id7\", \"id8\", \"id9\"));\n         TimelineGroup<String> group10 = new TimelineGroup<>(\"id7\", \"Truck 7\", 2);\n         TimelineGroup<String> group11 = new TimelineGroup<>(\"id8\", \"Truck 8\", 2);\n         TimelineGroup<String> group12 = new TimelineGroup<>(\"id9\", \"Truck 9\", 2);\n@@ -83,7 +88,6 @@ public class NestedGroupingTimelineView implements Serializable {\n         model.addGroup(group10);\n         model.addGroup(group11);\n         model.addGroup(group12);\n-\n         int orderNumber = 1;\n \n         // iterate over groups\n@@ -92,23 +96,19 @@ public class NestedGroupingTimelineView implements Serializable {\n             // iterate over events in the same group\n             for (int i = 0; i < 6; i++) {\n                 LocalDateTime startDate = referenceDate.plusHours(3 * (Math.random() < 0.2 ? 1 : 0));\n-\n                 LocalDateTime endDate = startDate.plusHours(2 + (int) Math.floor(Math.random() * 3));\n-\n                 String imagePath = null;\n                 if (Math.random() < 0.25) {\n                     imagePath = \"images/timeline/box.png\";\n                 }\n \n                 Order order = new Order(orderNumber, imagePath);\n-                model.add(TimelineEvent.<Order>builder()\n-                        .data(order)\n-                        .startDate(startDate)\n-                        .endDate(endDate)\n-                        .editable(true)\n-                        .group(\"id\" + j)\n-                        .build());\n-\n+                model.add(TimelineEvent.<Order>builder().data(order)\n+                                                        .startDate(startDate)\n+                                                        .endDate(endDate)\n+                                                        .editable(true)\n+                                                        .group(\"id\" + j)\n+                                                        .build());\n                 orderNumber++;\n                 referenceDate = endDate;\n             }\n@@ -125,20 +125,22 @@ public class NestedGroupingTimelineView implements Serializable {\n         model.update(event);\n \n         // get overlapped events of the same group as for the changed event\n-        Set<TimelineEvent<Order>> overlappedEvents = model.getOverlappedEvents(event);\n \n+        Set<TimelineEvent<Order>> overlappedEvents = model.getOverlappedEvents(event);\n         if (overlappedEvents == null) {\n             // nothing to merge\n             return;\n         }\n \n         // list of orders which can be merged in the dialog\n+\n         overlappedOrders = new ArrayList<>(overlappedEvents);\n \n         // no pre-selection\n         ordersToMerge = null;\n \n         // update the dialog's content and show the dialog\n+\n         PrimeFaces primefaces = PrimeFaces.current();\n         primefaces.ajax().update(\"form:overlappedOrdersInner\");\n         primefaces.executeScript(\"PF('overlapEventsWdgt').show()\");\n@@ -155,8 +157,7 @@ public class NestedGroupingTimelineView implements Serializable {\n             model.merge(event, ordersToMerge, TimelineUpdater.getCurrentInstance(\":form:timeline\"));\n         }\n         else {\n-            FacesMessage msg\n-                    = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Nothing to merge, please choose orders to be merged\", null);\n+            FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Nothing to merge, please choose orders to be merged\", null);\n             FacesContext.getCurrentInstance().addMessage(null, msg);\n         }\n \n@@ -183,5 +184,4 @@ public class NestedGroupingTimelineView implements Serializable {\n     public void setOrdersToMerge(List<TimelineEvent<Order>> ordersToMerge) {\n         this.ordersToMerge = ordersToMerge;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "column": "38",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/29/NestedGroupingTimelineView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_random/29/NestedGroupingTimelineView.java\nindex eef31be3eed..0d29c364ce6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/29/NestedGroupingTimelineView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_random/29/NestedGroupingTimelineView.java\n@@ -57,7 +57,7 @@ public class NestedGroupingTimelineView implements Serializable {\n         model = new TimelineModel<>();\n \n         // create nested groups\n-        TimelineGroup<String> group1 = new TimelineGroup<>(\"groupId1\", \"Truck Group Level 1\", \"groupId1\", 1, Arrays.asList(\"groupId2\", \"id1\", \"id2\", \"id5\", \"id6\"));\n+        TimelineGroup<String> group1 =new TimelineGroup<>(\"groupId1\", \"Truck Group Level 1\", \"groupId1\", 1, Arrays.asList(\"groupId2\", \"id1\", \"id2\", \"id5\", \"id6\"));\n         TimelineGroup<String> group2 = new TimelineGroup<>(\"groupId2\", \"Truck Group Level 2\", \"groupId2\", 2, Arrays.asList(\"id3\", \"id4\"));\n         TimelineGroup<String> group3 = new TimelineGroup<>(\"id1\", \"Truck 1\", 2);\n         TimelineGroup<String> group4 = new TimelineGroup<>(\"id2\", \"Truck 2\", 2);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
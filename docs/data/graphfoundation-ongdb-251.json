{
    "project_name": "graphfoundation-ongdb",
    "error_id": "251",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/251/Lifecycles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/251/Lifecycles.java\nindex 2c0819800b4..fe7ae7acb42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/251/Lifecycles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/251/Lifecycles.java\n@@ -17,69 +17,70 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.lifecycle;\n \n import java.util.Arrays;\n \n public class Lifecycles\n {\n-    private Lifecycles()\n-    {   // No instances allowed or even necessary\n-    }\n+  private Lifecycles()\n+  {   // No instances allowed or even necessary\n+  }\n+\n+  public static Lifecycle multiple(final Iterable<? extends Lifecycle> lifecycles)\n+  {\n+    return new CombinedLifecycle(lifecycles);\n+  }\n \n-    public static Lifecycle multiple( final Iterable<? extends Lifecycle> lifecycles )\n+  public static Lifecycle multiple(Lifecycle... lifecycles)\n+  {\n+    return multiple(Arrays.asList(lifecycles));\n+  }\n+\n+  private static class CombinedLifecycle implements Lifecycle\n+  {\n+    private final Iterable<? extends Lifecycle> lifecycles;\n+\n+    CombinedLifecycle(Iterable<? extends Lifecycle> lifecycles)\n     {\n-        return new CombinedLifecycle( lifecycles );\n+      this.lifecycles = lifecycles;\n     }\n \n-    public static Lifecycle multiple( Lifecycle... lifecycles )\n+    @Override\n+    public void init() throws Throwable\n     {\n-        return multiple( Arrays.asList( lifecycles ) );\n+      for (Lifecycle lifecycle : lifecycles)\n+      {\n+        lifecycle.init();\n+      }\n     }\n \n-    private static class CombinedLifecycle implements Lifecycle\n+    @Override\n+    public void start() throws Throwable\n     {\n-        private final Iterable<? extends Lifecycle> lifecycles;\n-\n-        CombinedLifecycle( Iterable<? extends Lifecycle> lifecycles )\n-        {\n-            this.lifecycles = lifecycles;\n-        }\n-\n-        @Override\n-        public void init() throws Throwable\n-        {\n-            for ( Lifecycle lifecycle : lifecycles )\n-            {\n-                lifecycle.init();\n-            }\n-        }\n-\n-        @Override\n-        public void start() throws Throwable\n-        {\n-            for ( Lifecycle lifecycle : lifecycles )\n-            {\n-                lifecycle.start();\n-            }\n-        }\n+      for (Lifecycle lifecycle : lifecycles)\n+      {\n+        lifecycle.start();\n+      }\n+    }\n \n-        @Override\n-        public void stop() throws Throwable\n-        {\n-            for ( Lifecycle lifecycle : lifecycles )\n-            {\n-                lifecycle.stop();\n-            }\n-        }\n+    @Override\n+    public void stop() throws Throwable\n+    {\n+      for (Lifecycle lifecycle : lifecycles)\n+      {\n+        lifecycle.stop();\n+      }\n+    }\n \n-        @Override\n-        public void shutdown() throws Throwable\n-        {\n-            for ( Lifecycle lifecycle : lifecycles )\n-            {\n-                lifecycle.shutdown();\n-            }\n-        }\n+    @Override\n+    public void shutdown() throws Throwable\n+    {\n+      for (Lifecycle lifecycle : lifecycles)\n+      {\n+        lifecycle.shutdown();\n+      }\n     }\n+  }\n }\n",
            "diff_size": 69
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/251/Lifecycles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/251/Lifecycles.java\nindex 2c0819800b4..9655246da2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/251/Lifecycles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/251/Lifecycles.java\n@@ -24,7 +24,8 @@ import java.util.Arrays;\n public class Lifecycles\n {\n     private Lifecycles()\n-    {   // No instances allowed or even necessary\n+    {\n+    // No instances allowed or even necessary\n     }\n \n     public static Lifecycle multiple( final Iterable<? extends Lifecycle> lifecycles )\n@@ -82,4 +83,4 @@ public class Lifecycles\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "opencb-opencga",
    "error_id": "197",
    "information": {
        "errors": [
            {
                "line": "43",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 142).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public Interpretation(String uuid, String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software,\n                          Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n                          List<ReportedVariant> primaryFindinds, List<ReportedVariant> secondaryFindings,\n                          List<ReportedLowCoverage> reportedLowCoverages, List<Comment> comments, Map<String, Object> attributes,",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/197/Interpretation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/197/Interpretation.java\nindex 9e9f1d8d03f..8ae46bff1be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/197/Interpretation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/197/Interpretation.java\n@@ -13,205 +13,205 @@ import java.util.Map;\n \n public class Interpretation extends org.opencb.biodata.models.clinical.interpretation.Interpretation implements IPrivateStudyUid {\n \n-    private String uuid;\n-\n-    // Private fields\n-    private long studyUid;\n-    private long uid;\n-\n-    private InterpretationInternal internal;\n-\n-    public Interpretation() {\n-        super();\n-    }\n-\n-    public Interpretation(org.opencb.biodata.models.clinical.interpretation.Interpretation interpretation) {\n-        this(interpretation.getId(), interpretation.getDescription(), interpretation.getClinicalAnalysisId(), interpretation.getPanels(),\n-                interpretation.getSoftware(), interpretation.getAnalyst(), interpretation.getDependencies(), interpretation.getFilters(),\n-                interpretation.getCreationDate(), interpretation.getPrimaryFindings(), interpretation.getSecondaryFindings(),\n-                interpretation.getLowCoverageRegions(), interpretation.getComments(), interpretation.getAttributes());\n-    }\n-\n-    public Interpretation(String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software,\n-                          Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n-                          List<ReportedVariant> primaryFindinds, List<ReportedVariant> secondaryFindings,\n-                          List<ReportedLowCoverage> reportedLowCoverages, List<Comment> comments, Map<String, Object> attributes) {\n-        super(id, description, clinicalAnalysisId, software, analyst, dependencies, filters, panels, primaryFindinds, secondaryFindings,\n-                reportedLowCoverages, comments, InterpretationStatus.NOT_REVIEWED, creationDate, 1, attributes);\n-    }\n-\n-    public Interpretation(String uuid, String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software,\n-                          Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n-                          List<ReportedVariant> primaryFindinds, List<ReportedVariant> secondaryFindings,\n-                          List<ReportedLowCoverage> reportedLowCoverages, List<Comment> comments, Map<String, Object> attributes,\n-                          InterpretationInternal internal) {\n-        super(id, description, clinicalAnalysisId, software, analyst, dependencies, filters, panels, primaryFindinds, secondaryFindings,\n-                reportedLowCoverages, comments, InterpretationStatus.NOT_REVIEWED, creationDate, 1, attributes);\n-        this.uuid = uuid;\n-        this.internal = internal;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        final StringBuilder sb = new StringBuilder(\"Interpretation{\");\n-        sb.append(\"id='\").append(this.getId()).append('\\'');\n-        sb.append(\", uuid='\").append(uuid).append('\\'');\n-        sb.append(\", description='\").append(this.getDescription()).append('\\'');\n-        sb.append(\", clinicalAnalysisId='\").append(this.getClinicalAnalysisId()).append('\\'');\n-        sb.append(\", software=\").append(this.getSoftware()).append('\\'');\n-        sb.append(\", analyst=\").append(this.getAnalyst()).append('\\'');\n-        sb.append(\", dependencies=\").append(this.getDependencies()).append('\\'');\n-        sb.append(\", filters=\").append(this.getFilters()).append('\\'');\n-        sb.append(\", panels=\").append(this.getPanels()).append('\\'');\n-        sb.append(\", primaryFindings=\").append(this.getPrimaryFindings()).append('\\'');\n-        sb.append(\", secondaryFindings=\").append(this.getSecondaryFindings()).append('\\'');\n-        sb.append(\", lowCoverageRegions=\").append(this.getLowCoverageRegions()).append('\\'');\n-        sb.append(\", comments=\").append(this.getComments()).append('\\'');\n-        sb.append(\", status=\").append(this.getStatus()).append('\\'');\n-        sb.append(\", creationDate='\").append(this.getCreationDate()).append('\\'');\n-        sb.append(\", version=\").append(this.getVersion()).append('\\'');\n-        sb.append(\", attributes=\").append(this.getAttributes()).append('\\'');\n-        sb.append(\", internal=\").append(internal);\n-        sb.append('}');\n-        return sb.toString();\n-    }\n-\n-    public String getUuid() {\n-        return uuid;\n-    }\n-\n-    public Interpretation setUuid(String uuid) {\n-        this.uuid = uuid;\n-        return this;\n-    }\n-\n-    @Override\n-    public long getUid() {\n-        return uid;\n-    }\n-\n-    @Override\n-    public Interpretation setUid(long uid) {\n-        this.uid = uid;\n-        return this;\n-    }\n-\n-    @Override\n-    public long getStudyUid() {\n-        return studyUid;\n-    }\n-\n-    @Override\n-    public Interpretation setStudyUid(long studyUid) {\n-        this.studyUid = studyUid;\n-        return this;\n-    }\n-\n-\n-    // Biodata interpretation setters\n-\n-    @Override\n-    public Interpretation setId(String id) {\n-        super.setId(id);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setDescription(String description) {\n-        super.setDescription(description);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setClinicalAnalysisId(String clinicalAnalysisId) {\n-        super.setClinicalAnalysisId(clinicalAnalysisId);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setSoftware(Software software) {\n-        super.setSoftware(software);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setAnalyst(Analyst analyst) {\n-        super.setAnalyst(analyst);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setDependencies(List<Software> dependencies) {\n-        super.setDependencies(dependencies);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setFilters(Map<String, Object> filters) {\n-        super.setFilters(filters);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setPanels(List<DiseasePanel> panels) {\n-        super.setPanels(panels);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setPrimaryFindings(List<ReportedVariant> primaryFindings) {\n-        super.setPrimaryFindings(primaryFindings);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setSecondaryFindings(List<ReportedVariant> secondaryFindings) {\n-        super.setSecondaryFindings(secondaryFindings);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setLowCoverageRegions(List<ReportedLowCoverage> lowCoverageRegions) {\n-        super.setLowCoverageRegions(lowCoverageRegions);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setComments(List<Comment> comments) {\n-        super.setComments(comments);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setStatus(String status) {\n-        super.setStatus(status);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setCreationDate(String creationDate) {\n-        super.setCreationDate(creationDate);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setVersion(int version) {\n-        super.setVersion(version);\n-        return this;\n-    }\n-\n-    @Override\n-    public Interpretation setAttributes(Map<String, Object> attributes) {\n-        super.setAttributes(attributes);\n-        return this;\n-    }\n-\n-    public InterpretationInternal getInternal() {\n-        return internal;\n-    }\n-\n-    public Interpretation setInternal(InterpretationInternal internal) {\n-        this.internal = internal;\n-        return this;\n-    }\n+  private String uuid;\n+\n+  // Private fields\n+  private long studyUid;\n+  private long uid;\n+\n+  private InterpretationInternal internal;\n+\n+  public Interpretation() {\n+    super();\n+  }\n+\n+  public Interpretation(org.opencb.biodata.models.clinical.interpretation.Interpretation interpretation) {\n+    this(interpretation.getId(), interpretation.getDescription(), interpretation.getClinicalAnalysisId(), interpretation.getPanels(),\n+        interpretation.getSoftware(), interpretation.getAnalyst(), interpretation.getDependencies(), interpretation.getFilters(),\n+        interpretation.getCreationDate(), interpretation.getPrimaryFindings(), interpretation.getSecondaryFindings(),\n+        interpretation.getLowCoverageRegions(), interpretation.getComments(), interpretation.getAttributes());\n+  }\n+\n+  public Interpretation(String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software,\n+                        Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n+                        List<ReportedVariant> primaryFindinds, List<ReportedVariant> secondaryFindings,\n+                        List<ReportedLowCoverage> reportedLowCoverages, List<Comment> comments, Map<String, Object> attributes) {\n+    super(id, description, clinicalAnalysisId, software, analyst, dependencies, filters, panels, primaryFindinds, secondaryFindings,\n+        reportedLowCoverages, comments, InterpretationStatus.NOT_REVIEWED, creationDate, 1, attributes);\n+  }\n+\n+  public Interpretation(String uuid, String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software,\n+                        Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n+                        List<ReportedVariant> primaryFindinds, List<ReportedVariant> secondaryFindings,\n+                        List<ReportedLowCoverage> reportedLowCoverages, List<Comment> comments, Map<String, Object> attributes,\n+                        InterpretationInternal internal) {\n+    super(id, description, clinicalAnalysisId, software, analyst, dependencies, filters, panels, primaryFindinds, secondaryFindings,\n+        reportedLowCoverages, comments, InterpretationStatus.NOT_REVIEWED, creationDate, 1, attributes);\n+    this.uuid = uuid;\n+    this.internal = internal;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"Interpretation{\");\n+    sb.append(\"id='\").append(this.getId()).append('\\'');\n+    sb.append(\", uuid='\").append(uuid).append('\\'');\n+    sb.append(\", description='\").append(this.getDescription()).append('\\'');\n+    sb.append(\", clinicalAnalysisId='\").append(this.getClinicalAnalysisId()).append('\\'');\n+    sb.append(\", software=\").append(this.getSoftware()).append('\\'');\n+    sb.append(\", analyst=\").append(this.getAnalyst()).append('\\'');\n+    sb.append(\", dependencies=\").append(this.getDependencies()).append('\\'');\n+    sb.append(\", filters=\").append(this.getFilters()).append('\\'');\n+    sb.append(\", panels=\").append(this.getPanels()).append('\\'');\n+    sb.append(\", primaryFindings=\").append(this.getPrimaryFindings()).append('\\'');\n+    sb.append(\", secondaryFindings=\").append(this.getSecondaryFindings()).append('\\'');\n+    sb.append(\", lowCoverageRegions=\").append(this.getLowCoverageRegions()).append('\\'');\n+    sb.append(\", comments=\").append(this.getComments()).append('\\'');\n+    sb.append(\", status=\").append(this.getStatus()).append('\\'');\n+    sb.append(\", creationDate='\").append(this.getCreationDate()).append('\\'');\n+    sb.append(\", version=\").append(this.getVersion()).append('\\'');\n+    sb.append(\", attributes=\").append(this.getAttributes()).append('\\'');\n+    sb.append(\", internal=\").append(internal);\n+    sb.append('}');\n+    return sb.toString();\n+  }\n+\n+  public String getUuid() {\n+    return uuid;\n+  }\n+\n+  public Interpretation setUuid(String uuid) {\n+    this.uuid = uuid;\n+    return this;\n+  }\n+\n+  @Override\n+  public long getUid() {\n+    return uid;\n+  }\n+\n+  @Override\n+  public Interpretation setUid(long uid) {\n+    this.uid = uid;\n+    return this;\n+  }\n+\n+  @Override\n+  public long getStudyUid() {\n+    return studyUid;\n+  }\n+\n+  @Override\n+  public Interpretation setStudyUid(long studyUid) {\n+    this.studyUid = studyUid;\n+    return this;\n+  }\n+\n+\n+  // Biodata interpretation setters\n+\n+  @Override\n+  public Interpretation setId(String id) {\n+    super.setId(id);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setDescription(String description) {\n+    super.setDescription(description);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setClinicalAnalysisId(String clinicalAnalysisId) {\n+    super.setClinicalAnalysisId(clinicalAnalysisId);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setSoftware(Software software) {\n+    super.setSoftware(software);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setAnalyst(Analyst analyst) {\n+    super.setAnalyst(analyst);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setDependencies(List<Software> dependencies) {\n+    super.setDependencies(dependencies);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setFilters(Map<String, Object> filters) {\n+    super.setFilters(filters);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setPanels(List<DiseasePanel> panels) {\n+    super.setPanels(panels);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setPrimaryFindings(List<ReportedVariant> primaryFindings) {\n+    super.setPrimaryFindings(primaryFindings);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setSecondaryFindings(List<ReportedVariant> secondaryFindings) {\n+    super.setSecondaryFindings(secondaryFindings);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setLowCoverageRegions(List<ReportedLowCoverage> lowCoverageRegions) {\n+    super.setLowCoverageRegions(lowCoverageRegions);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setComments(List<Comment> comments) {\n+    super.setComments(comments);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setStatus(String status) {\n+    super.setStatus(status);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setCreationDate(String creationDate) {\n+    super.setCreationDate(creationDate);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setVersion(int version) {\n+    super.setVersion(version);\n+    return this;\n+  }\n+\n+  @Override\n+  public Interpretation setAttributes(Map<String, Object> attributes) {\n+    super.setAttributes(attributes);\n+    return this;\n+  }\n+\n+  public InterpretationInternal getInternal() {\n+    return internal;\n+  }\n+\n+  public Interpretation setInternal(InterpretationInternal internal) {\n+    this.internal = internal;\n+    return this;\n+  }\n }\n",
            "diff_size": 201
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 225).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 238).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/197/Interpretation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/197/Interpretation.java\nindex 9e9f1d8d03f..8d155010562 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/197/Interpretation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/197/Interpretation.java\n@@ -32,20 +32,17 @@ public class Interpretation extends org.opencb.biodata.models.clinical.interpret\n                 interpretation.getLowCoverageRegions(), interpretation.getComments(), interpretation.getAttributes());\n     }\n \n-    public Interpretation(String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software,\n-                          Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n+    public Interpretation(String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software, Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n                           List<ReportedVariant> primaryFindinds, List<ReportedVariant> secondaryFindings,\n                           List<ReportedLowCoverage> reportedLowCoverages, List<Comment> comments, Map<String, Object> attributes) {\n-        super(id, description, clinicalAnalysisId, software, analyst, dependencies, filters, panels, primaryFindinds, secondaryFindings,\n+    super(id, description, clinicalAnalysisId, software, analyst, dependencies, filters, panels, primaryFindinds, secondaryFindings,\n                 reportedLowCoverages, comments, InterpretationStatus.NOT_REVIEWED, creationDate, 1, attributes);\n     }\n \n-    public Interpretation(String uuid, String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software,\n-                          Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n+    public Interpretation(String uuid, String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software, Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n                           List<ReportedVariant> primaryFindinds, List<ReportedVariant> secondaryFindings,\n-                          List<ReportedLowCoverage> reportedLowCoverages, List<Comment> comments, Map<String, Object> attributes,\n-                          InterpretationInternal internal) {\n-        super(id, description, clinicalAnalysisId, software, analyst, dependencies, filters, panels, primaryFindinds, secondaryFindings,\n+                          List<ReportedLowCoverage> reportedLowCoverages, List<Comment> comments, Map<String, Object> attributes, InterpretationInternal internal) {\n+    super(id, description, clinicalAnalysisId, software, analyst, dependencies, filters, panels, primaryFindinds, secondaryFindings,\n                 reportedLowCoverages, comments, InterpretationStatus.NOT_REVIEWED, creationDate, 1, attributes);\n         this.uuid = uuid;\n         this.internal = internal;\n@@ -107,8 +104,7 @@ public class Interpretation extends org.opencb.biodata.models.clinical.interpret\n         return this;\n     }\n \n-\n-    // Biodata interpretation setters\n+// Biodata interpretation setters\n \n     @Override\n     public Interpretation setId(String id) {\n@@ -214,4 +210,4 @@ public class Interpretation extends org.opencb.biodata.models.clinical.interpret\n         this.internal = internal;\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/197/Interpretation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/197/Interpretation.java\nindex 9e9f1d8d03f..c58e114fbd0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/197/Interpretation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/197/Interpretation.java\n@@ -41,7 +41,7 @@ public class Interpretation extends org.opencb.biodata.models.clinical.interpret\n     }\n \n     public Interpretation(String uuid, String id, String description, String clinicalAnalysisId, List<DiseasePanel> panels, Software software,\n-                          Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n+                                     Analyst analyst, List<Software> dependencies, Map<String, Object> filters, String creationDate,\n                           List<ReportedVariant> primaryFindinds, List<ReportedVariant> secondaryFindings,\n                           List<ReportedLowCoverage> reportedLowCoverages, List<Comment> comments, Map<String, Object> attributes,\n                           InterpretationInternal internal) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
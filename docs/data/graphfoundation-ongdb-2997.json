{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2997",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2997/MasterClientResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2997/MasterClientResolver.java\nindex b6e93389f73..dde6b55a1ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2997/MasterClientResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2997/MasterClientResolver.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.com.slave;\n \n import java.util.HashMap;\n@@ -44,161 +45,159 @@ import org.neo4j.logging.LogProvider;\n \n public class MasterClientResolver implements MasterClientFactory, ComExceptionHandler\n {\n-    private volatile MasterClientFactory currentFactory;\n+  private volatile MasterClientFactory currentFactory;\n+\n+  private final Map<ProtocolVersion, MasterClientFactory> protocolToFactoryMapping;\n+  private final Log log;\n+  private final ResponseUnpacker responseUnpacker;\n+  private final InvalidEpochExceptionHandler invalidEpochHandler;\n+  private final Supplier<LogEntryReader<ReadableClosablePositionAwareChannel>> logEntryReader;\n+\n+  @Override\n+  public MasterClient instantiate(String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n+                                  Monitors monitors, StoreId storeId, LifeSupport life)\n+  {\n+    if (currentFactory == null)\n+    {\n+      assignDefaultFactory();\n+    }\n \n-    private final Map<ProtocolVersion, MasterClientFactory> protocolToFactoryMapping;\n-    private final Log log;\n-    private final ResponseUnpacker responseUnpacker;\n-    private final InvalidEpochExceptionHandler invalidEpochHandler;\n-    private final Supplier<LogEntryReader<ReadableClosablePositionAwareChannel>> logEntryReader;\n+    MasterClient result = currentFactory.instantiate(destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n+        monitors, storeId, life);\n+    result.setComExceptionHandler(this);\n+    return result;\n+  }\n+\n+  public MasterClientResolver(LogProvider logProvider, ResponseUnpacker responseUnpacker,\n+                              InvalidEpochExceptionHandler invalidEpochHandler,\n+                              int readTimeoutMillis, int lockReadTimeout, int channels, int chunkSize,\n+                              Supplier<LogEntryReader<ReadableClosablePositionAwareChannel>> logEntryReader)\n+  {\n+    this.logEntryReader = logEntryReader;\n+    this.log = logProvider.getLog(getClass());\n+    this.responseUnpacker = responseUnpacker;\n+    this.invalidEpochHandler = invalidEpochHandler;\n+\n+    protocolToFactoryMapping = new HashMap<>(3, 1);\n+    protocolToFactoryMapping.put(MasterClient214.PROTOCOL_VERSION, new F214(logProvider, readTimeoutMillis, lockReadTimeout,\n+        channels, chunkSize));\n+    protocolToFactoryMapping.put(MasterClient310.PROTOCOL_VERSION, new F310(logProvider, readTimeoutMillis, lockReadTimeout,\n+        channels, chunkSize));\n+    protocolToFactoryMapping.put(MasterClient320.PROTOCOL_VERSION, new F320(logProvider, readTimeoutMillis, lockReadTimeout,\n+        channels, chunkSize));\n+  }\n+\n+  @Override\n+  public void handle(ComException exception)\n+  {\n+    exception.traceComException(log, \"MasterClientResolver.handle\");\n+    if (exception instanceof IllegalProtocolVersionException)\n+    {\n+      log.info(\"Handling \" + exception + \", will pick new master client\");\n \n-    @Override\n-    public MasterClient instantiate( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n-            Monitors monitors, StoreId storeId, LifeSupport life )\n+      IllegalProtocolVersionException illegalProtocolVersion = (IllegalProtocolVersionException) exception;\n+      ProtocolVersion requiredProtocolVersion = new ProtocolVersion(illegalProtocolVersion.getReceived(),\n+          ProtocolVersion.INTERNAL_PROTOCOL_VERSION);\n+      getFor(requiredProtocolVersion);\n+    } else if (exception instanceof InvalidEpochException)\n     {\n-        if ( currentFactory == null )\n-        {\n-            assignDefaultFactory();\n-        }\n-\n-        MasterClient result = currentFactory.instantiate( destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n-                monitors, storeId, life );\n-        result.setComExceptionHandler( this );\n-        return result;\n-    }\n+      log.info(\"Handling \" + exception + \", will go to PENDING and ask for election\");\n \n-    public MasterClientResolver( LogProvider logProvider, ResponseUnpacker responseUnpacker,\n-            InvalidEpochExceptionHandler invalidEpochHandler,\n-            int readTimeoutMillis, int lockReadTimeout, int channels, int chunkSize,\n-            Supplier<LogEntryReader<ReadableClosablePositionAwareChannel>> logEntryReader )\n+      invalidEpochHandler.handle();\n+    } else\n     {\n-        this.logEntryReader = logEntryReader;\n-        this.log = logProvider.getLog( getClass() );\n-        this.responseUnpacker = responseUnpacker;\n-        this.invalidEpochHandler = invalidEpochHandler;\n-\n-        protocolToFactoryMapping = new HashMap<>( 3, 1 );\n-        protocolToFactoryMapping.put( MasterClient214.PROTOCOL_VERSION, new F214( logProvider, readTimeoutMillis, lockReadTimeout,\n-                channels, chunkSize ) );\n-        protocolToFactoryMapping.put( MasterClient310.PROTOCOL_VERSION, new F310( logProvider, readTimeoutMillis, lockReadTimeout,\n-                channels, chunkSize ) );\n-        protocolToFactoryMapping.put( MasterClient320.PROTOCOL_VERSION, new F320( logProvider, readTimeoutMillis, lockReadTimeout,\n-                channels, chunkSize ) );\n+      log.debug(\"Ignoring \" + exception + \".\");\n     }\n+  }\n \n-    @Override\n-    public void handle( ComException exception )\n+  private MasterClientFactory getFor(ProtocolVersion protocolVersion)\n+  {\n+    MasterClientFactory candidate = protocolToFactoryMapping.get(protocolVersion);\n+    if (candidate != null)\n+    {\n+      currentFactory = candidate;\n+    }\n+    return candidate;\n+  }\n+\n+  private MasterClientFactory assignDefaultFactory()\n+  {\n+    return getFor(MasterClient320.PROTOCOL_VERSION);\n+  }\n+\n+  private abstract static class StaticMasterClientFactory implements MasterClientFactory\n+  {\n+    final LogProvider logProvider;\n+    final int readTimeoutMillis;\n+    final int lockReadTimeout;\n+    final int maxConcurrentChannels;\n+    final int chunkSize;\n+\n+    StaticMasterClientFactory(LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout,\n+                              int maxConcurrentChannels, int chunkSize)\n     {\n-        exception.traceComException( log, \"MasterClientResolver.handle\" );\n-        if ( exception instanceof IllegalProtocolVersionException )\n-        {\n-            log.info( \"Handling \" + exception + \", will pick new master client\" );\n-\n-            IllegalProtocolVersionException illegalProtocolVersion = (IllegalProtocolVersionException) exception;\n-            ProtocolVersion requiredProtocolVersion = new ProtocolVersion( illegalProtocolVersion.getReceived(),\n-                    ProtocolVersion.INTERNAL_PROTOCOL_VERSION );\n-            getFor( requiredProtocolVersion );\n-        }\n-        else if ( exception instanceof InvalidEpochException )\n-        {\n-            log.info( \"Handling \" + exception + \", will go to PENDING and ask for election\" );\n-\n-            invalidEpochHandler.handle();\n-        }\n-        else\n-        {\n-            log.debug( \"Ignoring \" + exception + \".\" );\n-        }\n+      this.logProvider = logProvider;\n+      this.readTimeoutMillis = readTimeoutMillis;\n+      this.lockReadTimeout = lockReadTimeout;\n+      this.maxConcurrentChannels = maxConcurrentChannels;\n+      this.chunkSize = chunkSize;\n     }\n+  }\n \n-    private MasterClientFactory getFor( ProtocolVersion protocolVersion )\n+  private final class F214 extends StaticMasterClientFactory\n+  {\n+    private F214(LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels,\n+                 int chunkSize)\n     {\n-        MasterClientFactory candidate = protocolToFactoryMapping.get( protocolVersion );\n-        if ( candidate != null )\n-        {\n-            currentFactory = candidate;\n-        }\n-        return candidate;\n+      super(logProvider, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize);\n     }\n \n-    private MasterClientFactory assignDefaultFactory()\n+    @Override\n+    public MasterClient instantiate(String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n+                                    Monitors monitors, StoreId storeId, LifeSupport life)\n     {\n-        return getFor( MasterClient320.PROTOCOL_VERSION );\n+      return life.add(new MasterClient214(destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n+          logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize,\n+          responseUnpacker, monitors.newMonitor(ByteCounterMonitor.class, MasterClient320.class),\n+          monitors.newMonitor(RequestMonitor.class, MasterClient320.class), logEntryReader.get()));\n     }\n+  }\n \n-    private abstract static class StaticMasterClientFactory implements MasterClientFactory\n+  private final class F310 extends StaticMasterClientFactory\n+  {\n+    private F310(LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels,\n+                 int chunkSize)\n     {\n-        final LogProvider logProvider;\n-        final int readTimeoutMillis;\n-        final int lockReadTimeout;\n-        final int maxConcurrentChannels;\n-        final int chunkSize;\n-\n-        StaticMasterClientFactory( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout,\n-                                   int maxConcurrentChannels, int chunkSize )\n-        {\n-            this.logProvider = logProvider;\n-            this.readTimeoutMillis = readTimeoutMillis;\n-            this.lockReadTimeout = lockReadTimeout;\n-            this.maxConcurrentChannels = maxConcurrentChannels;\n-            this.chunkSize = chunkSize;\n-        }\n+      super(logProvider, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize);\n     }\n \n-    private final class F214 extends StaticMasterClientFactory\n+    @Override\n+    public MasterClient instantiate(String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n+                                    Monitors monitors, StoreId storeId, LifeSupport life)\n     {\n-        private F214( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels,\n-                     int chunkSize )\n-        {\n-            super( logProvider, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize );\n-        }\n-\n-        @Override\n-        public MasterClient instantiate( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n-                Monitors monitors, StoreId storeId, LifeSupport life )\n-        {\n-            return life.add( new MasterClient214(  destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n-                    logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize,\n-                    responseUnpacker, monitors.newMonitor( ByteCounterMonitor.class, MasterClient320.class ),\n-                    monitors.newMonitor( RequestMonitor.class, MasterClient320.class ), logEntryReader.get() ) );\n-        }\n+      return life.add(new MasterClient310(destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n+          logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize,\n+          responseUnpacker, monitors.newMonitor(ByteCounterMonitor.class, MasterClient320.class),\n+          monitors.newMonitor(RequestMonitor.class, MasterClient320.class), logEntryReader.get()));\n     }\n+  }\n \n-    private final class F310 extends StaticMasterClientFactory\n+  private final class F320 extends StaticMasterClientFactory\n+  {\n+    private F320(LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels,\n+                 int chunkSize)\n     {\n-        private F310( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels,\n-                     int chunkSize )\n-        {\n-            super( logProvider, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize );\n-        }\n-\n-        @Override\n-        public MasterClient instantiate( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n-                Monitors monitors, StoreId storeId, LifeSupport life )\n-        {\n-            return life.add( new MasterClient310(  destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n-                    logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize,\n-                    responseUnpacker, monitors.newMonitor( ByteCounterMonitor.class, MasterClient320.class ),\n-                    monitors.newMonitor( RequestMonitor.class, MasterClient320.class ), logEntryReader.get() ) );\n-        }\n+      super(logProvider, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize);\n     }\n \n-    private final class F320 extends StaticMasterClientFactory\n+    @Override\n+    public MasterClient instantiate(String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n+                                    Monitors monitors, StoreId storeId, LifeSupport life)\n     {\n-        private F320( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels,\n-                     int chunkSize )\n-        {\n-            super( logProvider, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize );\n-        }\n-\n-        @Override\n-        public MasterClient instantiate( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n-                Monitors monitors, StoreId storeId, LifeSupport life )\n-        {\n-            return life.add( new MasterClient320(  destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n-                    logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize,\n-                    responseUnpacker, monitors.newMonitor( ByteCounterMonitor.class, MasterClient320.class ),\n-                    monitors.newMonitor( RequestMonitor.class, MasterClient320.class ), logEntryReader.get() ) );\n-        }\n+      return life.add(new MasterClient320(destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n+          logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize,\n+          responseUnpacker, monitors.newMonitor(ByteCounterMonitor.class, MasterClient320.class),\n+          monitors.newMonitor(RequestMonitor.class, MasterClient320.class), logEntryReader.get()));\n     }\n+  }\n }\n",
            "diff_size": 221
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 295).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 295).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 295).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2997/MasterClientResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2997/MasterClientResolver.java\nindex b6e93389f73..557c22f6aba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2997/MasterClientResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2997/MasterClientResolver.java\n@@ -46,7 +46,7 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n {\n     private volatile MasterClientFactory currentFactory;\n \n-    private final Map<ProtocolVersion, MasterClientFactory> protocolToFactoryMapping;\n+    private final Map<ProtocolVersion,MasterClientFactory> protocolToFactoryMapping;\n     private final Log log;\n     private final ResponseUnpacker responseUnpacker;\n     private final InvalidEpochExceptionHandler invalidEpochHandler;\n@@ -63,14 +63,12 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n \n         MasterClient result = currentFactory.instantiate( destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n                 monitors, storeId, life );\n-        result.setComExceptionHandler( this );\n+result.setComExceptionHandler( this );\n         return result;\n     }\n \n     public MasterClientResolver( LogProvider logProvider, ResponseUnpacker responseUnpacker,\n-            InvalidEpochExceptionHandler invalidEpochHandler,\n-            int readTimeoutMillis, int lockReadTimeout, int channels, int chunkSize,\n-            Supplier<LogEntryReader<ReadableClosablePositionAwareChannel>> logEntryReader )\n+            InvalidEpochExceptionHandler invalidEpochHandler, int readTimeoutMillis, int lockReadTimeout, int channels, int chunkSize, Supplier<LogEntryReader<ReadableClosablePositionAwareChannel>> logEntryReader )\n     {\n         this.logEntryReader = logEntryReader;\n         this.log = logProvider.getLog( getClass() );\n@@ -80,9 +78,9 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n         protocolToFactoryMapping = new HashMap<>( 3, 1 );\n         protocolToFactoryMapping.put( MasterClient214.PROTOCOL_VERSION, new F214( logProvider, readTimeoutMillis, lockReadTimeout,\n                 channels, chunkSize ) );\n-        protocolToFactoryMapping.put( MasterClient310.PROTOCOL_VERSION, new F310( logProvider, readTimeoutMillis, lockReadTimeout,\n+protocolToFactoryMapping.put( MasterClient310.PROTOCOL_VERSION, new F310( logProvider, readTimeoutMillis, lockReadTimeout,\n                 channels, chunkSize ) );\n-        protocolToFactoryMapping.put( MasterClient320.PROTOCOL_VERSION, new F320( logProvider, readTimeoutMillis, lockReadTimeout,\n+protocolToFactoryMapping.put( MasterClient320.PROTOCOL_VERSION, new F320( logProvider, readTimeoutMillis, lockReadTimeout,\n                 channels, chunkSize ) );\n     }\n \n@@ -93,17 +91,14 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n         if ( exception instanceof IllegalProtocolVersionException )\n         {\n             log.info( \"Handling \" + exception + \", will pick new master client\" );\n-\n-            IllegalProtocolVersionException illegalProtocolVersion = (IllegalProtocolVersionException) exception;\n-            ProtocolVersion requiredProtocolVersion = new ProtocolVersion( illegalProtocolVersion.getReceived(),\n-                    ProtocolVersion.INTERNAL_PROTOCOL_VERSION );\n-            getFor( requiredProtocolVersion );\n+IllegalProtocolVersionException illegalProtocolVersion = (IllegalProtocolVersionException) exception;\n+            ProtocolVersion requiredProtocolVersion = new ProtocolVersion( illegalProtocolVersion.getReceived(), ProtocolVersion.INTERNAL_PROTOCOL_VERSION );\n+getFor( requiredProtocolVersion );\n         }\n         else if ( exception instanceof InvalidEpochException )\n         {\n             log.info( \"Handling \" + exception + \", will go to PENDING and ask for election\" );\n-\n-            invalidEpochHandler.handle();\n+invalidEpochHandler.handle();\n         }\n         else\n         {\n@@ -118,7 +113,8 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n         {\n             currentFactory = candidate;\n         }\n-        return candidate;\n+\n+return candidate;\n     }\n \n     private MasterClientFactory assignDefaultFactory()\n@@ -134,9 +130,8 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n         final int maxConcurrentChannels;\n         final int chunkSize;\n \n-        StaticMasterClientFactory( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout,\n-                                   int maxConcurrentChannels, int chunkSize )\n-        {\n+        StaticMasterClientFactory( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels, int chunkSize )\n+{\n             this.logProvider = logProvider;\n             this.readTimeoutMillis = readTimeoutMillis;\n             this.lockReadTimeout = lockReadTimeout;\n@@ -147,9 +142,8 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n \n     private final class F214 extends StaticMasterClientFactory\n     {\n-        private F214( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels,\n-                     int chunkSize )\n-        {\n+        private F214( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels, int chunkSize )\n+{\n             super( logProvider, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize );\n         }\n \n@@ -157,18 +151,15 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n         public MasterClient instantiate( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n                 Monitors monitors, StoreId storeId, LifeSupport life )\n         {\n-            return life.add( new MasterClient214(  destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n-                    logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize,\n-                    responseUnpacker, monitors.newMonitor( ByteCounterMonitor.class, MasterClient320.class ),\n-                    monitors.newMonitor( RequestMonitor.class, MasterClient320.class ), logEntryReader.get() ) );\n-        }\n+            return life.add( new MasterClient214( destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n+                    logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize, responseUnpacker, monitors.newMonitor( ByteCounterMonitor.class, MasterClient320.class ), monitors.newMonitor( RequestMonitor.class, MasterClient320.class ), logEntryReader.get() ) );\n+    }\n     }\n \n     private final class F310 extends StaticMasterClientFactory\n     {\n-        private F310( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels,\n-                     int chunkSize )\n-        {\n+        private F310( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels, int chunkSize )\n+{\n             super( logProvider, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize );\n         }\n \n@@ -176,18 +167,15 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n         public MasterClient instantiate( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n                 Monitors monitors, StoreId storeId, LifeSupport life )\n         {\n-            return life.add( new MasterClient310(  destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n-                    logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize,\n-                    responseUnpacker, monitors.newMonitor( ByteCounterMonitor.class, MasterClient320.class ),\n-                    monitors.newMonitor( RequestMonitor.class, MasterClient320.class ), logEntryReader.get() ) );\n-        }\n+            return life.add( new MasterClient310( destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n+                    logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize, responseUnpacker, monitors.newMonitor( ByteCounterMonitor.class, MasterClient320.class ), monitors.newMonitor( RequestMonitor.class, MasterClient320.class ), logEntryReader.get() ) );\n+    }\n     }\n \n     private final class F320 extends StaticMasterClientFactory\n     {\n-        private F320( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels,\n-                     int chunkSize )\n-        {\n+        private F320( LogProvider logProvider, int readTimeoutMillis, int lockReadTimeout, int maxConcurrentChannels, int chunkSize )\n+{\n             super( logProvider, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize );\n         }\n \n@@ -195,10 +183,8 @@ public class MasterClientResolver implements MasterClientFactory, ComExceptionHa\n         public MasterClient instantiate( String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp,\n                 Monitors monitors, StoreId storeId, LifeSupport life )\n         {\n-            return life.add( new MasterClient320(  destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n-                    logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize,\n-                    responseUnpacker, monitors.newMonitor( ByteCounterMonitor.class, MasterClient320.class ),\n-                    monitors.newMonitor( RequestMonitor.class, MasterClient320.class ), logEntryReader.get() ) );\n-        }\n+            return life.add( new MasterClient320( destinationHostNameOrIp, destinationPort, originHostNameOrIp,\n+                    logProvider, storeId, readTimeoutMillis, lockReadTimeout, maxConcurrentChannels, chunkSize, responseUnpacker, monitors.newMonitor( ByteCounterMonitor.class, MasterClient320.class ), monitors.newMonitor( RequestMonitor.class, MasterClient320.class ), logEntryReader.get() ) );\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
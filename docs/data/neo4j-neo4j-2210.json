{
    "project_name": "neo4j-neo4j",
    "error_id": "2210",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "185",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "199",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "224",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "254",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "265",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2210/IndexProcedures.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2210/IndexProcedures.java\nindex abba1070290..603ea7bfed7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2210/IndexProcedures.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2210/IndexProcedures.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.builtin;\n \n import java.util.List;\n@@ -56,228 +57,226 @@ public class IndexProcedures\n     private final KernelTransaction ktx;\n     private final IndexingService indexingService;\n \n-    public IndexProcedures( KernelTransaction tx, IndexingService indexingService )\n+    public IndexProcedures(KernelTransaction tx, IndexingService indexingService)\n     {\n         this.ktx = tx;\n         this.indexingService = indexingService;\n     }\n \n-    void awaitIndexByName( String indexName, long timeout, TimeUnit timeoutUnits )\n-            throws ProcedureException\n+    void awaitIndexByName(String indexName, long timeout, TimeUnit timeoutUnits)\n+      throws ProcedureException\n     {\n-        final IndexDescriptor index = getIndex( indexName );\n-        waitUntilOnline( index, timeout, timeoutUnits );\n+        final IndexDescriptor index = getIndex(indexName);\n+        waitUntilOnline(index, timeout, timeoutUnits);\n     }\n \n-    void resampleIndex( String indexName ) throws ProcedureException\n+    void resampleIndex(String indexName) throws ProcedureException\n     {\n-        final IndexDescriptor index = getIndex( indexName );\n-        triggerSampling( index );\n+        final IndexDescriptor index = getIndex(indexName);\n+        triggerSampling(index);\n     }\n \n     void resampleOutdatedIndexes()\n     {\n-        indexingService.triggerIndexSampling( backgroundRebuildUpdated() );\n+        indexingService.triggerIndexSampling(backgroundRebuildUpdated());\n     }\n \n-    void resampleOutdatedIndexes( long timeOutSeconds )\n+    void resampleOutdatedIndexes(long timeOutSeconds)\n     {\n-        long millis = TimeUnit.SECONDS.toMillis( timeOutSeconds );\n-        IndexSamplingMode mode = foregroundRebuildUpdated( millis );\n-        indexingService.triggerIndexSampling( mode );\n+        long millis = TimeUnit.SECONDS.toMillis(timeOutSeconds);\n+        IndexSamplingMode mode = foregroundRebuildUpdated(millis);\n+        indexingService.triggerIndexSampling(mode);\n     }\n \n-    public Stream<BuiltInProcedures.SchemaIndexInfo> createIndex( String indexName, List<String> labels, List<String> properties,\n-            IndexProviderDescriptor indexProviderDescriptor, Map<String,Object> configMap ) throws ProcedureException\n+    public Stream<BuiltInProcedures.SchemaIndexInfo> createIndex(String indexName, List<String> labels, List<String> properties,\n+                                                                 IndexProviderDescriptor indexProviderDescriptor, Map<String, Object> configMap)\n+      throws ProcedureException\n     {\n-        return createIndex( indexName, labels, properties, indexProviderDescriptor, configMap,\n-                \"index created\", ( schemaWrite, name, descriptor, provider, indexConfig ) ->\n-                {\n-                    IndexPrototype prototype = IndexPrototype.forSchema( descriptor, provider )\n-                            .withName( name )\n-                            .withIndexConfig( indexConfig );\n-                    schemaWrite.indexCreate( prototype );\n-                } );\n+        return createIndex(indexName, labels, properties, indexProviderDescriptor, configMap,\n+          \"index created\", (schemaWrite, name, descriptor, provider, indexConfig) ->\n+          {\n+              IndexPrototype prototype = IndexPrototype.forSchema(descriptor, provider)\n+                .withName(name)\n+                .withIndexConfig(indexConfig);\n+              schemaWrite.indexCreate(prototype);\n+          });\n     }\n \n-    public Stream<BuiltInProcedures.SchemaIndexInfo> createUniquePropertyConstraint( String constraintName, List<String> labels, List<String> properties,\n-            IndexProviderDescriptor indexProviderDescriptor, Map<String,Object> configMap ) throws ProcedureException\n+    public Stream<BuiltInProcedures.SchemaIndexInfo> createUniquePropertyConstraint(String constraintName, List<String> labels, List<String> properties,\n+                                                                                    IndexProviderDescriptor indexProviderDescriptor,\n+                                                                                    Map<String, Object> configMap) throws ProcedureException\n     {\n-        return createIndex( constraintName, labels, properties, indexProviderDescriptor, configMap,\n-                \"uniqueness constraint online\",\n-                ( schemaWrite, name, schema, provider, indexConfig ) -> {\n-                    final IndexPrototype prototype = IndexPrototype.uniqueForSchema( schema, provider )\n-                            .withName( name )\n-                            .withIndexConfig( indexConfig );\n-                    schemaWrite.uniquePropertyConstraintCreate( prototype );\n-                } );\n+        return createIndex(constraintName, labels, properties, indexProviderDescriptor, configMap,\n+          \"uniqueness constraint online\",\n+          (schemaWrite, name, schema, provider, indexConfig) -> {\n+              final IndexPrototype prototype = IndexPrototype.uniqueForSchema(schema, provider)\n+                .withName(name)\n+                .withIndexConfig(indexConfig);\n+              schemaWrite.uniquePropertyConstraintCreate(prototype);\n+          });\n     }\n \n-    public Stream<BuiltInProcedures.SchemaIndexInfo> createNodeKey( String constraintName, List<String> labels, List<String> properties,\n-            IndexProviderDescriptor indexProviderDescriptor, Map<String,Object> configMap ) throws ProcedureException\n+    public Stream<BuiltInProcedures.SchemaIndexInfo> createNodeKey(String constraintName, List<String> labels, List<String> properties,\n+                                                                   IndexProviderDescriptor indexProviderDescriptor, Map<String, Object> configMap)\n+      throws ProcedureException\n     {\n-        return createIndex( constraintName, labels, properties, indexProviderDescriptor, configMap,\n-                \"node key constraint online\",\n-                ( schemaWrite, name, schema, provider, indexConfig ) -> {\n-                    final IndexPrototype prototype = IndexPrototype.uniqueForSchema( schema, provider )\n-                            .withName( name )\n-                            .withIndexConfig( indexConfig );\n-                    schemaWrite.nodeKeyConstraintCreate( prototype );\n-                } );\n+        return createIndex(constraintName, labels, properties, indexProviderDescriptor, configMap,\n+          \"node key constraint online\",\n+          (schemaWrite, name, schema, provider, indexConfig) -> {\n+              final IndexPrototype prototype = IndexPrototype.uniqueForSchema(schema, provider)\n+                .withName(name)\n+                .withIndexConfig(indexConfig);\n+              schemaWrite.nodeKeyConstraintCreate(prototype);\n+          });\n     }\n \n-    private Stream<BuiltInProcedures.SchemaIndexInfo> createIndex( String name, List<String> labels, List<String> properties,\n-            IndexProviderDescriptor indexProviderDescriptor, Map<String,Object> configMap, String statusMessage, IndexCreator indexCreator )\n-            throws ProcedureException\n+    private Stream<BuiltInProcedures.SchemaIndexInfo> createIndex(String name, List<String> labels, List<String> properties,\n+                                                                  IndexProviderDescriptor indexProviderDescriptor, Map<String, Object> configMap,\n+                                                                  String statusMessage, IndexCreator indexCreator)\n+      throws ProcedureException\n     {\n-        IndexConfig indexConfig = IndexSettingUtil.toIndexConfigFromStringObjectMap( configMap );\n-        assertSingleLabel( labels );\n-        assertValidIndexProvider( indexProviderDescriptor );\n-        int labelId = getOrCreateLabelId( labels.get( 0 ) );\n-        int[] propertyKeyIds = getOrCreatePropertyIds( properties );\n+        IndexConfig indexConfig = IndexSettingUtil.toIndexConfigFromStringObjectMap(configMap);\n+        assertSingleLabel(labels);\n+        assertValidIndexProvider(indexProviderDescriptor);\n+        int labelId = getOrCreateLabelId(labels.get(0));\n+        int[] propertyKeyIds = getOrCreatePropertyIds(properties);\n         try\n         {\n             SchemaWrite schemaWrite = ktx.schemaWrite();\n-            LabelSchemaDescriptor labelSchemaDescriptor = SchemaDescriptor.forLabel( labelId, propertyKeyIds );\n-            indexCreator.create( schemaWrite, name, labelSchemaDescriptor, indexProviderDescriptor, indexConfig );\n-            return Stream.of( new BuiltInProcedures.SchemaIndexInfo( name, labels, properties, indexProviderDescriptor.name(), statusMessage ) );\n-        }\n-        catch ( KernelException e )\n+            LabelSchemaDescriptor labelSchemaDescriptor = SchemaDescriptor.forLabel(labelId, propertyKeyIds);\n+            indexCreator.create(schemaWrite, name, labelSchemaDescriptor, indexProviderDescriptor, indexConfig);\n+            return Stream.of(new BuiltInProcedures.SchemaIndexInfo(name, labels, properties, indexProviderDescriptor.name(), statusMessage));\n+        } catch (KernelException e)\n         {\n-            throw new ProcedureException( e.status(), e, e.getMessage() );\n+            throw new ProcedureException(e.status(), e, e.getMessage());\n         }\n     }\n \n-    private static void assertValidIndexProvider( IndexProviderDescriptor indexProviderDescriptor ) throws ProcedureException\n+    private static void assertValidIndexProvider(IndexProviderDescriptor indexProviderDescriptor) throws ProcedureException\n     {\n-        if ( indexProviderDescriptor == FulltextIndexProviderFactory.DESCRIPTOR )\n+        if (indexProviderDescriptor == FulltextIndexProviderFactory.DESCRIPTOR)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed,\n-                    \"Could not create index with specified index provider '%s'. To create fulltext index, please use '%s' or '%s'.\",\n-                    indexProviderDescriptor.name(), \"db.index.fulltext.createNodeIndex\", \"db.index.fulltext.createRelationshipIndex\" );\n+            throw new ProcedureException(Status.Procedure.ProcedureCallFailed,\n+              \"Could not create index with specified index provider '%s'. To create fulltext index, please use '%s' or '%s'.\",\n+              indexProviderDescriptor.name(), \"db.index.fulltext.createNodeIndex\", \"db.index.fulltext.createRelationshipIndex\");\n         }\n-        if ( indexProviderDescriptor != GenericNativeIndexProvider.DESCRIPTOR &&\n-             indexProviderDescriptor != NativeLuceneFusionIndexProviderFactory30.DESCRIPTOR )\n+        if (indexProviderDescriptor != GenericNativeIndexProvider.DESCRIPTOR &&\n+          indexProviderDescriptor != NativeLuceneFusionIndexProviderFactory30.DESCRIPTOR)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed,\n-                    \"Could not create index with specified index provider '%s'.\", indexProviderDescriptor.name() );\n+            throw new ProcedureException(Status.Procedure.ProcedureCallFailed,\n+              \"Could not create index with specified index provider '%s'.\", indexProviderDescriptor.name());\n         }\n     }\n \n-    private static void assertSingleLabel( List<String> labels ) throws ProcedureException\n+    private static void assertSingleLabel(List<String> labels) throws ProcedureException\n     {\n-        if ( labels.size() != 1 )\n+        if (labels.size() != 1)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed,\n-                    \"Could not create index with specified label(s), need to provide exactly one but was \" + labels );\n+            throw new ProcedureException(Status.Procedure.ProcedureCallFailed,\n+              \"Could not create index with specified label(s), need to provide exactly one but was \" + labels);\n         }\n     }\n \n-    private int getOrCreateLabelId( String labelName ) throws ProcedureException\n+    private int getOrCreateLabelId(String labelName) throws ProcedureException\n     {\n         try\n         {\n-            return ktx.tokenWrite().labelGetOrCreateForName( labelName );\n-        }\n-        catch ( KernelException e )\n+            return ktx.tokenWrite().labelGetOrCreateForName(labelName);\n+        } catch (KernelException e)\n         {\n-            throw new ProcedureException( e.status(), e, e.getMessage() );\n+            throw new ProcedureException(e.status(), e, e.getMessage());\n         }\n     }\n \n-    private int[] getOrCreatePropertyIds( List<String> propertyKeyNames ) throws ProcedureException\n+    private int[] getOrCreatePropertyIds(List<String> propertyKeyNames) throws ProcedureException\n     {\n         int[] propertyKeyIds = new int[propertyKeyNames.size()];\n-        for ( int i = 0; i < propertyKeyIds.length; i++ )\n+        for (int i = 0; i < propertyKeyIds.length; i++)\n         {\n             try\n             {\n-                propertyKeyIds[i] = ktx.tokenWrite().propertyKeyGetOrCreateForName( propertyKeyNames.get( i ) );\n-            }\n-            catch ( KernelException e )\n+                propertyKeyIds[i] = ktx.tokenWrite().propertyKeyGetOrCreateForName(propertyKeyNames.get(i));\n+            } catch (KernelException e)\n             {\n-                throw new ProcedureException( e.status(), e, e.getMessage() );\n+                throw new ProcedureException(e.status(), e, e.getMessage());\n             }\n         }\n         return propertyKeyIds;\n     }\n \n-    private IndexDescriptor getIndex( String indexName ) throws ProcedureException\n+    private IndexDescriptor getIndex(String indexName) throws ProcedureException\n     {\n         // Find index by name.\n-        IndexDescriptor indexReference = ktx.schemaRead().indexGetForName( indexName );\n+        IndexDescriptor indexReference = ktx.schemaRead().indexGetForName(indexName);\n \n-        if ( indexReference == IndexDescriptor.NO_INDEX )\n+        if (indexReference == IndexDescriptor.NO_INDEX)\n         {\n-            throw new ProcedureException( Status.Schema.IndexNotFound, \"No such index '%s'\", indexName );\n+            throw new ProcedureException(Status.Schema.IndexNotFound, \"No such index '%s'\", indexName);\n         }\n         return indexReference;\n     }\n \n-    private void waitUntilOnline( IndexDescriptor index, long timeout, TimeUnit timeoutUnits ) throws ProcedureException\n+    private void waitUntilOnline(IndexDescriptor index, long timeout, TimeUnit timeoutUnits) throws ProcedureException\n     {\n         try\n         {\n-            Predicates.awaitEx( () -> isOnline( index ), timeout, timeoutUnits );\n-        }\n-        catch ( TimeoutException e )\n+            Predicates.awaitEx(() -> isOnline(index), timeout, timeoutUnits);\n+        } catch (TimeoutException e)\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureTimedOut, \"Index on '%s' did not come online within %s %s\",\n-                    index.userDescription( ktx.tokenRead() ), timeout, timeoutUnits );\n+            throw new ProcedureException(Status.Procedure.ProcedureTimedOut, \"Index on '%s' did not come online within %s %s\",\n+              index.userDescription(ktx.tokenRead()), timeout, timeoutUnits);\n         }\n     }\n \n-    private boolean isOnline( IndexDescriptor index ) throws ProcedureException\n+    private boolean isOnline(IndexDescriptor index) throws ProcedureException\n     {\n-        InternalIndexState state = getState( index );\n-        switch ( state )\n+        InternalIndexState state = getState(index);\n+        switch (state)\n         {\n             case POPULATING:\n                 return false;\n             case ONLINE:\n                 return true;\n             case FAILED:\n-                String cause = getFailure( index );\n-                throw new ProcedureException( Status.Schema.IndexCreationFailed,\n-                        IndexPopulationFailure.appendCauseOfFailure( \"Index '%s' is in failed state.\", cause ), index.getName() );\n+                String cause = getFailure(index);\n+                throw new ProcedureException(Status.Schema.IndexCreationFailed,\n+                  IndexPopulationFailure.appendCauseOfFailure(\"Index '%s' is in failed state.\", cause), index.getName());\n             default:\n-                throw new IllegalStateException( \"Unknown index state \" + state );\n+                throw new IllegalStateException(\"Unknown index state \" + state);\n         }\n     }\n \n-    private InternalIndexState getState( IndexDescriptor index ) throws ProcedureException\n+    private InternalIndexState getState(IndexDescriptor index) throws ProcedureException\n     {\n         try\n         {\n-            return ktx.schemaRead().indexGetState( index );\n-        }\n-        catch ( IndexNotFoundKernelException e )\n+            return ktx.schemaRead().indexGetState(index);\n+        } catch (IndexNotFoundKernelException e)\n         {\n-            throw new ProcedureException( Status.Schema.IndexNotFound, e, \"No such index %s\", index.getName() );\n+            throw new ProcedureException(Status.Schema.IndexNotFound, e, \"No such index %s\", index.getName());\n         }\n     }\n \n-    private String getFailure( IndexDescriptor index ) throws ProcedureException\n+    private String getFailure(IndexDescriptor index) throws ProcedureException\n     {\n         try\n         {\n-            return ktx.schemaRead().indexGetFailure( index );\n-        }\n-        catch ( IndexNotFoundKernelException e )\n+            return ktx.schemaRead().indexGetFailure(index);\n+        } catch (IndexNotFoundKernelException e)\n         {\n-            throw new ProcedureException( Status.Schema.IndexNotFound, e, \"No such index %s\", index.getName() );\n+            throw new ProcedureException(Status.Schema.IndexNotFound, e, \"No such index %s\", index.getName());\n         }\n     }\n \n-    private void triggerSampling( IndexDescriptor index )\n+    private void triggerSampling(IndexDescriptor index)\n     {\n-        indexingService.triggerIndexSampling( index, backgroundRebuildAll() );\n+        indexingService.triggerIndexSampling(index, backgroundRebuildAll());\n     }\n \n     @FunctionalInterface\n     private interface IndexCreator\n     {\n-        void create( SchemaWrite schemaWrite, String name, LabelSchemaDescriptor descriptor, IndexProviderDescriptor indexProviderDescriptor,\n-                IndexConfig indexConfig ) throws KernelException;\n+        void create(SchemaWrite schemaWrite, String name, LabelSchemaDescriptor descriptor, IndexProviderDescriptor indexProviderDescriptor,\n+                    IndexConfig indexConfig) throws KernelException;\n     }\n }\n",
            "diff_size": 117
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "573",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/573/ZipUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/573/ZipUtils.java\nindex bd8d22f6264..c11b6d70847 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/573/ZipUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/573/ZipUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.compress;\n \n import java.io.File;\n@@ -45,37 +46,38 @@ public class ZipUtils\n      * Create zip archive for requested <code>sourceToCompress</code>.\n      * If <code>sourceToCompress</code> is a directory then content of that directory and all its sub-directories will be added to the archive.\n      * If <code>sourceToCompress</code> does not exist or is an empty directory then archive will not be created.\n-     * @param fileSystem source file system\n+     *\n+     * @param fileSystem       source file system\n      * @param sourceToCompress source file to compress\n-     * @param destinationZip zip file compress source to\n+     * @param destinationZip   zip file compress source to\n      * @throws IOException when underlying file system access produce IOException\n      */\n-    public static void zip( FileSystemAbstraction fileSystem, Path sourceToCompress, Path destinationZip ) throws IOException\n+    public static void zip(FileSystemAbstraction fileSystem, Path sourceToCompress, Path destinationZip) throws IOException\n     {\n-        if ( !fileSystem.fileExists( sourceToCompress ) )\n+        if (!fileSystem.fileExists(sourceToCompress))\n         {\n             return;\n         }\n-        if ( isEmptyDirectory( fileSystem, sourceToCompress ) )\n+        if (isEmptyDirectory(fileSystem, sourceToCompress))\n         {\n             return;\n         }\n-        Map<String,String> env = Map.of( \"create\", \"true\" );\n-        URI archiveAbsoluteURI = URI.create( \"jar:file:\" + destinationZip.toUri().getRawPath() );\n+        Map<String, String> env = Map.of(\"create\", \"true\");\n+        URI archiveAbsoluteURI = URI.create(\"jar:file:\" + destinationZip.toUri().getRawPath());\n \n-        try ( FileSystem zipFs = FileSystems.newFileSystem( archiveAbsoluteURI, env ) )\n+        try (FileSystem zipFs = FileSystems.newFileSystem(archiveAbsoluteURI, env))\n         {\n-            List<FileHandle> fileHandles = fileSystem.streamFilesRecursive( sourceToCompress ).collect( toList() );\n-            for ( FileHandle fileHandle : fileHandles )\n+            List<FileHandle> fileHandles = fileSystem.streamFilesRecursive(sourceToCompress).collect(toList());\n+            for (FileHandle fileHandle : fileHandles)\n             {\n                 Path sourcePath = fileHandle.getPath();\n-                Path zipFsPath = fileSystem.isDirectory( sourceToCompress ) ? zipFs.getPath( sourceToCompress.relativize( sourcePath ).toString() )\n-                                                                            : zipFs.getPath( sourcePath.getFileName().toString() );\n-                if ( zipFsPath.getParent() != null )\n+                Path zipFsPath = fileSystem.isDirectory(sourceToCompress) ? zipFs.getPath(sourceToCompress.relativize(sourcePath).toString())\n+                  : zipFs.getPath(sourcePath.getFileName().toString());\n+                if (zipFsPath.getParent() != null)\n                 {\n-                    Files.createDirectories( zipFsPath.getParent() );\n+                    Files.createDirectories(zipFsPath.getParent());\n                 }\n-                Files.copy( sourcePath, zipFsPath );\n+                Files.copy(sourcePath, zipFsPath);\n             }\n         }\n     }\n@@ -85,51 +87,51 @@ public class ZipUtils\n      * The zip file is expected to contain a single file with the same name as target.\n      * The content is unpacked into target location.\n      *\n-     * @param klass The class from which to get the zip file resource.\n-     * @param zipName Name of zip file.\n+     * @param klass      The class from which to get the zip file resource.\n+     * @param zipName    Name of zip file.\n      * @param targetFile Target file to which content will be unzipped, must align with content of zip file.\n      * @throws IOException if something goes wrong.\n      */\n-    public static void unzipResource( Class<?> klass, String zipName, Path targetFile ) throws IOException\n+    public static void unzipResource(Class<?> klass, String zipName, Path targetFile) throws IOException\n     {\n-        URL resource = klass.getResource( zipName );\n-        if ( resource == null )\n+        URL resource = klass.getResource(zipName);\n+        if (resource == null)\n         {\n-            throw new NoSuchFileException( zipName );\n+            throw new NoSuchFileException(zipName);\n         }\n-        unzip( resource.getFile(), targetFile );\n+        unzip(resource.getFile(), targetFile);\n     }\n \n     /**\n      * Unzip the source file to targetFile.\n      *\n-     * @param sourceZip {@link String} with path pointing at the source zip file.\n+     * @param sourceZip  {@link String} with path pointing at the source zip file.\n      * @param targetFile {@link File} defining the target file to extract.\n      * @throws IOException if something goes wrong.\n      */\n-    public static void unzip( String sourceZip, Path targetFile ) throws IOException\n+    public static void unzip(String sourceZip, Path targetFile) throws IOException\n     {\n-        try ( ZipFile zipFile = new ZipFile( sourceZip ) )\n+        try (ZipFile zipFile = new ZipFile(sourceZip))\n         {\n             Enumeration<? extends ZipEntry> entries = zipFile.entries();\n-            if ( !entries.hasMoreElements() )\n+            if (!entries.hasMoreElements())\n             {\n-                throw new IllegalStateException( \"Zip file '\" + sourceZip + \"' does not contain any elements.\" );\n+                throw new IllegalStateException(\"Zip file '\" + sourceZip + \"' does not contain any elements.\");\n             }\n             ZipEntry entry = entries.nextElement();\n-            if ( !targetFile.getFileName().toString().equals( entry.getName() ) )\n+            if (!targetFile.getFileName().toString().equals(entry.getName()))\n             {\n-                throw new IllegalStateException( \"Zip file '\" + sourceZip + \"' does not contain target file '\" + targetFile.getFileName() + \"'.\" );\n+                throw new IllegalStateException(\"Zip file '\" + sourceZip + \"' does not contain target file '\" + targetFile.getFileName() + \"'.\");\n             }\n-            Files.copy( zipFile.getInputStream( entry ), targetFile );\n+            Files.copy(zipFile.getInputStream(entry), targetFile);\n         }\n     }\n \n-    private static boolean isEmptyDirectory( FileSystemAbstraction fileSystem, Path sourceToCompress )\n+    private static boolean isEmptyDirectory(FileSystemAbstraction fileSystem, Path sourceToCompress)\n     {\n-        if ( fileSystem.isDirectory( sourceToCompress ) )\n+        if (fileSystem.isDirectory(sourceToCompress))\n         {\n-            Path[] files = fileSystem.listFiles( sourceToCompress );\n+            Path[] files = fileSystem.listFiles(sourceToCompress);\n             return files == null || files.length == 0;\n         }\n         return false;\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/573/ZipUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/573/ZipUtils.java\nindex bd8d22f6264..3b331f62971 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/573/ZipUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/573/ZipUtils.java\n@@ -71,7 +71,7 @@ public class ZipUtils\n                 Path sourcePath = fileHandle.getPath();\n                 Path zipFsPath = fileSystem.isDirectory( sourceToCompress ) ? zipFs.getPath( sourceToCompress.relativize( sourcePath ).toString() )\n                                                                             : zipFs.getPath( sourcePath.getFileName().toString() );\n-                if ( zipFsPath.getParent() != null )\n+if ( zipFsPath.getParent() != null )\n                 {\n                     Files.createDirectories( zipFsPath.getParent() );\n                 }\n@@ -134,4 +134,4 @@ public class ZipUtils\n         }\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "352",
    "information": {
        "errors": [
            {
                "line": "25",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 113).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    ObjectIterator<Long2ObjectMap.Entry<IElement>> it = ((ServerLongAnyRow) row).iterator();\n    while (it.hasNext()) {\n      maxCardinality = Math.max(maxCardinality, ((HyperLogLogPlusElement)it.next().getValue()).getCardinality());\n    }\n    return maxCardinality;\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/352/MaxCardinality.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/352/MaxCardinality.java\nindex eea0c2ab73f..558ab219039 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/352/MaxCardinality.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/352/MaxCardinality.java\n@@ -22,7 +22,8 @@ public class MaxCardinality extends UnaryAggrFunc {\n     double maxCardinality = 0;\n     ObjectIterator<Long2ObjectMap.Entry<IElement>> it = ((ServerLongAnyRow) row).iterator();\n     while (it.hasNext()) {\n-      maxCardinality = Math.max(maxCardinality, ((HyperLogLogPlusElement)it.next().getValue()).getCardinality());\n+      maxCardinality = Math.max(maxCardinality,\n+          ((HyperLogLogPlusElement) it.next().getValue()).getCardinality());\n     }\n     return maxCardinality;\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/352/MaxCardinality.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/352/MaxCardinality.java\nindex eea0c2ab73f..4d3ab068fe2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/352/MaxCardinality.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/352/MaxCardinality.java\n@@ -36,4 +36,4 @@ public class MaxCardinality extends UnaryAggrFunc {\n   public double mergeInit() {\n     return 0;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/352/MaxCardinality.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/352/MaxCardinality.java\nindex eea0c2ab73f..cec5efc3774 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/352/MaxCardinality.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/352/MaxCardinality.java\n@@ -22,7 +22,7 @@ public class MaxCardinality extends UnaryAggrFunc {\n     double maxCardinality = 0;\n     ObjectIterator<Long2ObjectMap.Entry<IElement>> it = ((ServerLongAnyRow) row).iterator();\n     while (it.hasNext()) {\n-      maxCardinality = Math.max(maxCardinality, ((HyperLogLogPlusElement)it.next().getValue()).getCardinality());\n+      maxCardinality = Math.max(maxCardinality, ((HyperLogLogPlusElement) it.next().getValue()).getCardinality());\n     }\n     return maxCardinality;\n   }\n@@ -36,4 +36,5 @@ public class MaxCardinality extends UnaryAggrFunc {\n   public double mergeInit() {\n     return 0;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "25",
                    "column": "137",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/352/MaxCardinality.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/352/MaxCardinality.java\nindex eea0c2ab73f..77646aaf72c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/352/MaxCardinality.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/352/MaxCardinality.java\n@@ -22,9 +22,7 @@ public class MaxCardinality extends UnaryAggrFunc {\n     double maxCardinality = 0;\n     ObjectIterator<Long2ObjectMap.Entry<IElement>> it = ((ServerLongAnyRow) row).iterator();\n     while (it.hasNext()) {\n-      maxCardinality = Math.max(maxCardinality, ((HyperLogLogPlusElement)it.next().getValue()).getCardinality());\n-    }\n-    return maxCardinality;\n+      maxCardinality = Math.max(maxCardinality,( (HyperLogLogPlusElement)it.next().getValue() ).getCardinality());}return maxCardinality;\n   }\n \n   @Override\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3457",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3457/ServerRootRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3457/ServerRootRepresentation.java\nindex a24f2b9b648..c258ab98c4a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3457/ServerRootRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3457/ServerRootRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.management.repr;\n \n import java.net.URI;\n@@ -29,40 +30,40 @@ import org.neo4j.server.rest.repr.MappingSerializer;\n \n public class ServerRootRepresentation extends MappingRepresentation\n {\n-    private HashMap<String, String> services = new HashMap<>();\n+  private HashMap<String, String> services = new HashMap<>();\n \n-    public ServerRootRepresentation( URI baseUri, Iterable<AdvertisableService> advertisableServices )\n+  public ServerRootRepresentation(URI baseUri, Iterable<AdvertisableService> advertisableServices)\n+  {\n+    super(\"services\");\n+    for (AdvertisableService svc : advertisableServices)\n     {\n-        super( \"services\" );\n-        for ( AdvertisableService svc : advertisableServices )\n-        {\n-            services.put( svc.getName(), baseUri.toString() + svc.getServerPath() );\n-        }\n+      services.put(svc.getName(), baseUri.toString() + svc.getServerPath());\n     }\n+  }\n \n-    public Map<String, Map<String, String>> serialize()\n-    {\n-        HashMap<String, Map<String, String>> result = new HashMap<>();\n-        result.put( \"services\", services );\n-        return result;\n-    }\n+  public Map<String, Map<String, String>> serialize()\n+  {\n+    HashMap<String, Map<String, String>> result = new HashMap<>();\n+    result.put(\"services\", services);\n+    return result;\n+  }\n \n-    @Override\n-    protected void serialize( MappingSerializer serializer )\n+  @Override\n+  protected void serialize(MappingSerializer serializer)\n+  {\n+    MappingRepresentation apa = new MappingRepresentation(\"services\")\n     {\n-        MappingRepresentation apa = new MappingRepresentation( \"services\" )\n-        {\n \n-            @Override\n-            protected void serialize( MappingSerializer serializer )\n-            {\n-                for ( Map.Entry<String, String> entry : services.entrySet() )\n-                {\n-                    serializer.putString( entry.getKey(), entry.getValue() );\n-                }\n-            }\n-        };\n+      @Override\n+      protected void serialize(MappingSerializer serializer)\n+      {\n+        for (Map.Entry<String, String> entry : services.entrySet())\n+        {\n+          serializer.putString(entry.getKey(), entry.getValue());\n+        }\n+      }\n+    };\n \n-        serializer.putMapping( \"services\", apa );\n-    }\n+    serializer.putMapping(\"services\", apa);\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3457/ServerRootRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3457/ServerRootRepresentation.java\nindex a24f2b9b648..e3d2638672a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3457/ServerRootRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3457/ServerRootRepresentation.java\n@@ -29,7 +29,7 @@ import org.neo4j.server.rest.repr.MappingSerializer;\n \n public class ServerRootRepresentation extends MappingRepresentation\n {\n-    private HashMap<String, String> services = new HashMap<>();\n+    private HashMap<String,String> services = new HashMap<>();\n \n     public ServerRootRepresentation( URI baseUri, Iterable<AdvertisableService> advertisableServices )\n     {\n@@ -53,10 +53,10 @@ public class ServerRootRepresentation extends MappingRepresentation\n         MappingRepresentation apa = new MappingRepresentation( \"services\" )\n         {\n \n-            @Override\n+@Override\n             protected void serialize( MappingSerializer serializer )\n             {\n-                for ( Map.Entry<String, String> entry : services.entrySet() )\n+                for ( Map.Entry<String,String> entry : services.entrySet() )\n                 {\n                     serializer.putString( entry.getKey(), entry.getValue() );\n                 }\n@@ -65,4 +65,4 @@ public class ServerRootRepresentation extends MappingRepresentation\n \n         serializer.putMapping( \"services\", apa );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
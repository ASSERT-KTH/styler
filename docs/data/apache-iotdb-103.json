{
    "project_name": "apache-iotdb",
    "error_id": "103",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.auth.user;\n\nimport org.apache.iotdb.db.auth.AuthException;\nimport org.apache.iotdb.db.auth.entity.User;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/103/BasicUserManager.java\nindex cc3c37295d5..fc8886e7c6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/103/BasicUserManager.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.auth.user;\n \n import org.apache.iotdb.db.auth.AuthException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/103/BasicUserManager.java\nindex cc3c37295d5..346fff69096 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/103/BasicUserManager.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.auth.user;\n \n import org.apache.iotdb.db.auth.AuthException;\n@@ -62,7 +63,9 @@ public abstract class BasicUserManager implements IUserManager {\n     reset();\n   }\n \n-  /** Try to load admin. If it doesn't exist, automatically create one. */\n+  /**\n+   * Try to load admin. If it doesn't exist, automatically create one.\n+   */\n   private void initAdmin() throws AuthException {\n     User admin;\n     try {\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/103/BasicUserManager.java\nindex cc3c37295d5..1e4ac889e72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/103/BasicUserManager.java\n@@ -23,10 +23,8 @@ import org.apache.iotdb.db.auth.entity.User;\n import org.apache.iotdb.db.concurrent.HashLock;\n import org.apache.iotdb.db.conf.IoTDBConstant;\n import org.apache.iotdb.db.utils.AuthUtils;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.IOException;\n import java.util.HashMap;\n import java.util.HashSet;\n@@ -39,11 +37,11 @@ import java.util.Set;\n  * This class stores information of each user in a separate file within a directory, and cache them\n  * in memory when a user is accessed.\n  */\n+\n public abstract class BasicUserManager implements IUserManager {\n \n   private static final Logger logger = LoggerFactory.getLogger(BasicUserManager.class);\n   private static final String NO_SUCH_USER_ERROR = \"No such user %s\";\n-\n   private Map<String, User> userMap;\n   private IUserAccessor accessor;\n   private HashLock lock;\n@@ -54,15 +52,17 @@ public abstract class BasicUserManager implements IUserManager {\n    * @param accessor user accessor\n    * @throws AuthException Authentication Exception\n    */\n-  public BasicUserManager(IUserAccessor accessor) throws AuthException {\n+\n+  public BasicUserManager(IUserAccessor accessor)\n+  throws AuthException {\n     this.userMap = new HashMap<>();\n     this.accessor = accessor;\n     this.lock = new HashLock();\n-\n     reset();\n   }\n \n   /** Try to load admin. If it doesn't exist, automatically create one. */\n+\n   private void initAdmin() throws AuthException {\n     User admin;\n     try {\n@@ -71,7 +71,6 @@ public abstract class BasicUserManager implements IUserManager {\n       logger.warn(\"Cannot load admin, Creating a new one.\", e);\n       admin = null;\n     }\n-\n     if (admin == null) {\n       createUser(IoTDBConstant.ADMIN_NAME, IoTDBConstant.ADMIN_PW);\n       setUserUseWaterMark(IoTDBConstant.ADMIN_NAME, false);\n@@ -105,7 +104,6 @@ public abstract class BasicUserManager implements IUserManager {\n   public boolean createUser(String username, String password) throws AuthException {\n     AuthUtils.validateUsername(username);\n     AuthUtils.validatePassword(password);\n-\n     User user = getUser(username);\n     if (user != null) {\n       return false;\n@@ -141,8 +139,8 @@ public abstract class BasicUserManager implements IUserManager {\n   }\n \n   @Override\n-  public boolean grantPrivilegeToUser(String username, String path, int privilegeId)\n-      throws AuthException {\n+  public boolean grantPrivilegeToUser(\n+    String username, String path, int privilegeId) throws AuthException {\n     AuthUtils.validatePrivilegeOnPath(path, privilegeId);\n     lock.writeLock(username);\n     try {\n@@ -168,8 +166,8 @@ public abstract class BasicUserManager implements IUserManager {\n   }\n \n   @Override\n-  public boolean revokePrivilegeFromUser(String username, String path, int privilegeId)\n-      throws AuthException {\n+  public boolean revokePrivilegeFromUser(\n+    String username, String path, int privilegeId) throws AuthException {\n     AuthUtils.validatePrivilegeOnPath(path, privilegeId);\n     lock.writeLock(username);\n     try {\n@@ -201,7 +199,6 @@ public abstract class BasicUserManager implements IUserManager {\n       logger.debug(\"An illegal password detected \", e);\n       return false;\n     }\n-\n     lock.writeLock(username);\n     try {\n       User user = getUser(username);\n@@ -317,7 +314,6 @@ public abstract class BasicUserManager implements IUserManager {\n     synchronized (this) {\n       reset();\n       userMap = users;\n-\n       for (Entry<String, User> entry : userMap.entrySet()) {\n         User user = entry.getValue();\n         try {\n@@ -328,4 +324,4 @@ public abstract class BasicUserManager implements IUserManager {\n       }\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/103/BasicUserManager.java\nindex cc3c37295d5..fc8886e7c6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/103/BasicUserManager.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.auth.user;\n \n import org.apache.iotdb.db.auth.AuthException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/103/BasicUserManager.java\nindex cc3c37295d5..fc8886e7c6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/103/BasicUserManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/103/BasicUserManager.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.auth.user;\n \n import org.apache.iotdb.db.auth.AuthException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
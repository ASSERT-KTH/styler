{
    "project_name": "Angel-ML-angel",
    "error_id": "953",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/953/DenseFloatMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/953/DenseFloatMatrix.java\nindex 3dd9d4329bf..030acc1491a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/953/DenseFloatMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/953/DenseFloatMatrix.java\n@@ -23,7 +23,7 @@ import org.apache.commons.logging.LogFactory;\n /**\r\n  * Dense double matrix that is represented by a group of dense float vector {@link DenseFloatVector}\r\n  */\r\n-public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\r\n+public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector> {\r\n   private static final Log LOG = LogFactory.getLog(DenseFloatMatrix.class);\r\n \r\n   /**\r\n@@ -64,14 +64,14 @@ public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\n    * @return\r\n    */\r\n   public DenseFloatVector initVector(int rowIndex) {\r\n-    DenseFloatVector ret = new DenseFloatVector((int)col);\r\n+    DenseFloatVector ret = new DenseFloatVector((int) col);\r\n     ret.setMatrixId(matrixId);\r\n     ret.setRowId(rowIndex);\r\n     return ret;\r\n   }\r\n \r\n   public void setRow(int rowIndex, float[] values) {\r\n-    DenseFloatVector ret = new DenseFloatVector((int)col, values);\r\n+    DenseFloatVector ret = new DenseFloatVector((int) col, values);\r\n     ret.setMatrixId(matrixId);\r\n     ret.setRowId(rowIndex);\r\n     vectors[rowIndex] = ret;\r\n@@ -85,7 +85,7 @@ public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\n    * @return\r\n    */\r\n   private DenseFloatVector initVector(int rowIndex, float[] values) {\r\n-    DenseFloatVector ret = new DenseFloatVector((int)col, values);\r\n+    DenseFloatVector ret = new DenseFloatVector((int) col, values);\r\n     ret.setMatrixId(matrixId);\r\n     ret.setRowId(rowIndex);\r\n     return ret;\r\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/953/DenseFloatMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/953/DenseFloatMatrix.java\nindex 3dd9d4329bf..16b9ac728c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/953/DenseFloatMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/953/DenseFloatMatrix.java\n@@ -23,7 +23,7 @@ import org.apache.commons.logging.LogFactory;\n /**\r\n  * Dense double matrix that is represented by a group of dense float vector {@link DenseFloatVector}\r\n  */\r\n-public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\r\n+public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector> {\r\n   private static final Log LOG = LogFactory.getLog(DenseFloatMatrix.class);\r\n \r\n   /**\r\n@@ -50,7 +50,7 @@ public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\n   public DenseFloatMatrix(int row, int col, float[][] values) {\r\n     this(row, col);\r\n     if (values != null) {\r\n-      assert (row == values.length);\r\n+      assert(row == values.length);\r\n       for (int i = 0; i < row; i++) {\r\n         vectors[i] = initVector(i, values[i]);\r\n       }\r\n@@ -64,14 +64,14 @@ public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\n    * @return\r\n    */\r\n   public DenseFloatVector initVector(int rowIndex) {\r\n-    DenseFloatVector ret = new DenseFloatVector((int)col);\r\n+    DenseFloatVector ret = new DenseFloatVector((int) col);\r\n     ret.setMatrixId(matrixId);\r\n     ret.setRowId(rowIndex);\r\n     return ret;\r\n   }\r\n \r\n   public void setRow(int rowIndex, float[] values) {\r\n-    DenseFloatVector ret = new DenseFloatVector((int)col, values);\r\n+    DenseFloatVector ret = new DenseFloatVector((int) col, values);\r\n     ret.setMatrixId(matrixId);\r\n     ret.setRowId(rowIndex);\r\n     vectors[rowIndex] = ret;\r\n@@ -85,9 +85,9 @@ public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\n    * @return\r\n    */\r\n   private DenseFloatVector initVector(int rowIndex, float[] values) {\r\n-    DenseFloatVector ret = new DenseFloatVector((int)col, values);\r\n+    DenseFloatVector ret = new DenseFloatVector((int) col, values);\r\n     ret.setMatrixId(matrixId);\r\n     ret.setRowId(rowIndex);\r\n     return ret;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/953/DenseFloatMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/953/DenseFloatMatrix.java\nindex 3dd9d4329bf..fde6e2e03c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/953/DenseFloatMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/953/DenseFloatMatrix.java\n@@ -14,16 +14,18 @@\n  * limitations under the License.\r\n  */\r\n \r\n-package com.tencent.angel.ml.math.matrix;\r\n-\r\n-import com.tencent.angel.ml.math.vector.DenseFloatVector;\r\n-import org.apache.commons.logging.Log;\r\n+package com.tencent.angel.ml.math.matrix;\n+\n+import com.tencent.angel.ml.math.vector.DenseFloatVector;\n+import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\r\n \r\n /**\r\n  * Dense double matrix that is represented by a group of dense float vector {@link DenseFloatVector}\r\n- */\r\n-public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\r\n+ */\n+\n+public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector> {\n+\n   private static final Log LOG = LogFactory.getLog(DenseFloatMatrix.class);\r\n \r\n   /**\r\n@@ -31,13 +33,14 @@ public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\n    *\r\n    * @param row the row\r\n    * @param col the col\r\n-   */\r\n-  public DenseFloatMatrix(int row, int col) {\r\n-    this(row, col, new DenseFloatVector[row]);\r\n-  }\r\n-\r\n-  public DenseFloatMatrix(int row, int col, DenseFloatVector[] vectors) {\r\n-    super(row, col, vectors);\r\n+   */\n+\n+  public DenseFloatMatrix(int row, int col) {\n+    this(row, col, new DenseFloatVector[row]);\n+  }\n+\n+  public DenseFloatMatrix(int row, int col, DenseFloatVector[] vectors) {\n+    super(row, col, vectors);\n   }\r\n \r\n   /**\r\n@@ -46,15 +49,16 @@ public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\n    * @param row    the row\r\n    * @param col    the col\r\n    * @param values the values\r\n-   */\r\n-  public DenseFloatMatrix(int row, int col, float[][] values) {\r\n-    this(row, col);\r\n-    if (values != null) {\r\n-      assert (row == values.length);\r\n-      for (int i = 0; i < row; i++) {\r\n-        vectors[i] = initVector(i, values[i]);\r\n-      }\r\n-    }\r\n+   */\n+\n+  public DenseFloatMatrix(int row, int col, float[][] values) {\n+    this(row, col);\n+    if (values != null) {\n+      assert (row == values.length);\n+      for (int i = 0; i < row; i++) {\n+        vectors[i] = initVector(i, values[i]);\n+      }\n+    }\n   }\r\n \r\n   /**\r\n@@ -62,19 +66,20 @@ public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\n    *\r\n    * @param rowIndex\r\n    * @return\r\n-   */\r\n-  public DenseFloatVector initVector(int rowIndex) {\r\n-    DenseFloatVector ret = new DenseFloatVector((int)col);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    return ret;\r\n-  }\r\n-\r\n-  public void setRow(int rowIndex, float[] values) {\r\n-    DenseFloatVector ret = new DenseFloatVector((int)col, values);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    vectors[rowIndex] = ret;\r\n+   */\n+\n+  public DenseFloatVector initVector(int rowIndex) {\n+    DenseFloatVector ret = new DenseFloatVector((int) col);\n+    ret.setMatrixId(matrixId);\n+    ret.setRowId(rowIndex);\n+    return ret;\n+  }\n+\n+  public void setRow(int rowIndex, float[] values) {\n+    DenseFloatVector ret = new DenseFloatVector((int) col, values);\n+    ret.setMatrixId(matrixId);\n+    ret.setRowId(rowIndex);\n+    vectors[rowIndex] = ret;\n   }\r\n \r\n   /**\r\n@@ -83,11 +88,13 @@ public class DenseFloatMatrix extends TFloatMatrix<DenseFloatVector>  {\n    * @param rowIndex\r\n    * @param values\r\n    * @return\r\n-   */\r\n-  private DenseFloatVector initVector(int rowIndex, float[] values) {\r\n-    DenseFloatVector ret = new DenseFloatVector((int)col, values);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    return ret;\r\n-  }\r\n-}\r\n+   */\n+\n+  private DenseFloatVector initVector(int rowIndex, float[] values) {\n+    DenseFloatVector ret = new DenseFloatVector((int) col, values);\n+    ret.setMatrixId(matrixId);\n+    ret.setRowId(rowIndex);\n+    return ret;\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "eclipse-ee4j-glassfish",
    "error_id": "69",
    "information": {
        "errors": [
            {
                "line": "99",
                "column": "21",
                "severity": "warning",
                "message": "'method call lparen' has incorrect indentation level 20, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "        if (principals == null && userGroups == null) {\n            report.setMessage\n                    (localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n                    \"Either the principal or the user group has to be specified while creating a security map.\" +\n                            \" Both cannot be null.\"));\n            report.setActionExitCode(ActionReport.ExitCode.FAILURE);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/69/CreateConnectorSecurityMap.java\nindex d12d96ecf3a..1697f4a8594 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/69/CreateConnectorSecurityMap.java\n@@ -95,8 +95,7 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n         }\n \n         if (principals == null && userGroups == null) {\n-            report.setMessage\n-                    (localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n+            report.setMessage(localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n                     \"Either the principal or the user group has to be specified while creating a security map.\" +\n                             \" Both cannot be null.\"));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "101",
                    "column": "17",
                    "severity": "warning",
                    "message": "'method call lparen' has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/69/CreateConnectorSecurityMap.java\nindex d12d96ecf3a..7a8315f8da0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/69/CreateConnectorSecurityMap.java\n@@ -47,12 +47,13 @@ import static org.glassfish.connectors.admin.cli.CLIConstants.SM.*;\n  * Create Connector SecurityMap command\n  */\n @org.glassfish.api.admin.ExecuteOn(RuntimeType.ALL)\n-@Service(name=SM_CREATE_COMMAND_NAME)\n+@Service(name = SM_CREATE_COMMAND_NAME)\n @PerLookup\n @I18n(\"create.connector.security.map\")\n public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements AdminCommand {\n \n-    final private static LocalStringManagerImpl localStrings = new LocalStringManagerImpl(CreateConnectorSecurityMap.class);\n+    final private static LocalStringManagerImpl localStrings =\n+        new LocalStringManagerImpl(CreateConnectorSecurityMap.class);\n \n     @Param(optional = true, obsolete = true)\n     private String target = SystemPropertyConstants.DAS_SERVER_NAME;\n@@ -69,7 +70,7 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n     @Param(name = SM_MAPPED_NAME)\n     private String mappedusername;\n \n-    @Param(name=SM_MAPPED_PASSWORD, password = true, optional = true)\n+    @Param(name = SM_MAPPED_PASSWORD, password = true, optional = true)\n     private String mappedpassword;\n \n     @Param(name = SM_MAP_NAME, primary = true)\n@@ -88,7 +89,8 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n         final ActionReport report = context.getActionReport();\n \n         if (securityMapName == null) {\n-            report.setMessage(localStrings.getLocalString(\"create.connector.security.map.noSecurityMapName\",\n+            report.setMessage(\n+                localStrings.getLocalString(\"create.connector.security.map.noSecurityMapName\",\n                     \"No security map name specified\"));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n             return;\n@@ -96,34 +98,39 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n \n         if (principals == null && userGroups == null) {\n             report.setMessage\n-                    (localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n-                    \"Either the principal or the user group has to be specified while creating a security map.\" +\n+                (localStrings\n+                    .getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n+                        \"Either the principal or the user group has to be specified while creating a security map.\" +\n                             \" Both cannot be null.\"));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n             return;\n         }\n \n         if (principals != null && userGroups != null) {\n-            report.setMessage(localStrings.getLocalString(\"create.connector.security.map.specifyPrincipalsOrGroupsMap\",\n+            report.setMessage(localStrings\n+                .getLocalString(\"create.connector.security.map.specifyPrincipalsOrGroupsMap\",\n                     \"A work-security-map can have either (any number of) group mapping or (any number of) principals\" +\n-                            \" mapping but not both. Specify --principals or --usergroups.\"));\n+                        \" mapping but not both. Specify --principals or --usergroups.\"));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n             return;\n         }\n-        Collection<ConnectorConnectionPool> ccPools =  domain.getResources().getResources(ConnectorConnectionPool.class);\n+        Collection<ConnectorConnectionPool> ccPools =\n+            domain.getResources().getResources(ConnectorConnectionPool.class);\n \n         if (!doesPoolNameExist(poolName, ccPools)) {\n-            report.setMessage(localStrings.getLocalString(\"create.connector.security.map.noSuchPoolFound\",\n-                    \"Connector connection pool {0} does not exist. Please specify a valid pool name.\", poolName));\n+            report.setMessage(\n+                localStrings.getLocalString(\"create.connector.security.map.noSuchPoolFound\",\n+                    \"Connector connection pool {0} does not exist. Please specify a valid pool name.\",\n+                    poolName));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n             return;\n         }\n \n         if (doesMapNameExist(poolName, securityMapName, ccPools)) {\n             report.setMessage(localStrings.getLocalString(\"create.connector.security.map.duplicate\",\n-                    \"A security map named {0} already exists for connector connection pool {1}. Please give a\" +\n-                            \" different map name.\",\n-                    securityMapName, poolName));\n+                \"A security map named {0} already exists for connector connection pool {1}. Please give a\" +\n+                    \" different map name.\",\n+                securityMapName, poolName));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n             return;\n         }\n@@ -134,9 +141,10 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n         if (principals != null) {\n             for (String principal : principals) {\n                 if (isPrincipalExisting(principal, maps)) {\n-                    report.setMessage(localStrings.getLocalString(\"create.connector.security.map.principal_exists\",\n+                    report.setMessage(localStrings\n+                        .getLocalString(\"create.connector.security.map.principal_exists\",\n                             \"The principal {0} already exists in connector connection pool {1}. Please give a \" +\n-                                    \"different principal name.\",\n+                                \"different principal name.\",\n                             principal, poolName));\n                     report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n                     return;\n@@ -146,9 +154,10 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n         if (userGroups != null) {\n             for (String userGroup : userGroups) {\n                 if (isUserGroupExisting(userGroup, maps)) {\n-                    report.setMessage(localStrings.getLocalString(\"create.connector.security.map.usergroup_exists\",\n+                    report.setMessage(localStrings\n+                        .getLocalString(\"create.connector.security.map.usergroup_exists\",\n                             \"The user-group {0} already exists in connector connection pool {1}. Please give a\" +\n-                                    \" different user-group name.\",\n+                                \" different user-group name.\",\n                             userGroup, poolName));\n                     report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n                     return;\n@@ -166,7 +175,8 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n         try {\n             ConfigSupport.apply(new SingleConfigCode<ConnectorConnectionPool>() {\n \n-                public Object run(ConnectorConnectionPool ccp) throws PropertyVetoException, TransactionFailure {\n+                public Object run(ConnectorConnectionPool ccp)\n+                    throws PropertyVetoException, TransactionFailure {\n \n                     List<SecurityMap> securityMaps = ccp.getSecurityMap();\n \n@@ -185,7 +195,8 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n                         }\n                     }\n \n-                    BackendPrincipal backendPrincipal = newResource.createChild(BackendPrincipal.class);\n+                    BackendPrincipal backendPrincipal =\n+                        newResource.createChild(BackendPrincipal.class);\n                     backendPrincipal.setUserName(mappedusername);\n                     if (mappedpassword != null && !mappedpassword.isEmpty()) {\n                         backendPrincipal.setPassword(mappedpassword);\n@@ -199,8 +210,9 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n         } catch (TransactionFailure tfe) {\n             Object params[] = {securityMapName, poolName};\n             report.setMessage(localStrings.getLocalString(\"create.connector.security.map.fail\",\n-                    \"Unable to create connector security map {0} for connector connection pool {1} \", params) +\n-                    \" \" + tfe.getLocalizedMessage());\n+                \"Unable to create connector security map {0} for connector connection pool {1} \",\n+                params) +\n+                \" \" + tfe.getLocalizedMessage());\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n             report.setFailureCause(tfe);\n             return;\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/69/CreateConnectorSecurityMap.java\nindex d12d96ecf3a..94ec9b3c230 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/69/CreateConnectorSecurityMap.java\n@@ -95,8 +95,7 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n         }\n \n         if (principals == null && userGroups == null) {\n-            report.setMessage\n-                    (localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n+            report.setMessage(localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n                     \"Either the principal or the user group has to be specified while creating a security map.\" +\n                             \" Both cannot be null.\"));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n@@ -208,4 +207,4 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n \n         report.setActionExitCode(ActionReport.ExitCode.SUCCESS);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_random/69/CreateConnectorSecurityMap.java\nindex d12d96ecf3a..1697f4a8594 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_random/69/CreateConnectorSecurityMap.java\n@@ -95,8 +95,7 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n         }\n \n         if (principals == null && userGroups == null) {\n-            report.setMessage\n-                    (localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n+            report.setMessage(localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n                     \"Either the principal or the user group has to be specified while creating a security map.\" +\n                             \" Both cannot be null.\"));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/69/CreateConnectorSecurityMap.java\nindex d12d96ecf3a..1697f4a8594 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/69/CreateConnectorSecurityMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/69/CreateConnectorSecurityMap.java\n@@ -95,8 +95,7 @@ public class CreateConnectorSecurityMap extends ConnectorSecurityMap implements\n         }\n \n         if (principals == null && userGroups == null) {\n-            report.setMessage\n-                    (localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n+            report.setMessage(localStrings.getLocalString(\"create.connector.security.map.noPrincipalsOrGroupsMap\",\n                     \"Either the principal or the user group has to be specified while creating a security map.\" +\n                             \" Both cannot be null.\"));\n             report.setActionExitCode(ActionReport.ExitCode.FAILURE);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "752",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommonadapter.CheckPolicyRequestType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/752/PolicyEngineProxyJavaImpl.java\nindex aedad959980..b8e6c012a94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/752/PolicyEngineProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/752/PolicyEngineProxyJavaImpl.java\nindex aedad959980..9c3d985a343 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/752/PolicyEngineProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -34,27 +35,26 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author Neil Webb\n  */\n public class PolicyEngineProxyJavaImpl implements PolicyEngineProxy {\n-    private static final Logger LOG = LoggerFactory.getLogger(PolicyEngineProxyJavaImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(PolicyEngineProxyJavaImpl.class);\n \n-    @Override\n-    public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n-        LOG.trace(\"Begin PolicyEngineWebServiceProxyJavaImpl.checkPolicy\");\n-        CheckPolicyResponseType response;\n-        AdapterPolicyEngineProcessorImpl policyEngine = new AdapterPolicyEngineProcessorImpl();\n-        try {\n-            response = policyEngine.checkPolicy(checkPolicyRequest, assertion);\n-        } catch (Exception e) {\n-            String sErrorMessage = \"Error occurred calling PolicyEngineWebServiceProxyJavaImpl.checkPolicy.  Error: \"\n-                    + e.getMessage();\n-            LOG.error(sErrorMessage, e);\n-            throw new RuntimeException(sErrorMessage, e);\n-        }\n-        LOG.trace(\"End PolicyEngineWebServiceProxyJavaImpl.checkPolicy\");\n-        return response;\n+  @Override\n+  public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n+    LOG.trace(\"Begin PolicyEngineWebServiceProxyJavaImpl.checkPolicy\");\n+    CheckPolicyResponseType response;\n+    AdapterPolicyEngineProcessorImpl policyEngine = new AdapterPolicyEngineProcessorImpl();\n+    try {\n+      response = policyEngine.checkPolicy(checkPolicyRequest, assertion);\n+    } catch (Exception e) {\n+      String sErrorMessage = \"Error occurred calling PolicyEngineWebServiceProxyJavaImpl.checkPolicy.  Error: \"\n+          + e.getMessage();\n+      LOG.error(sErrorMessage, e);\n+      throw new RuntimeException(sErrorMessage, e);\n     }\n+    LOG.trace(\"End PolicyEngineWebServiceProxyJavaImpl.checkPolicy\");\n+    return response;\n+  }\n \n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/752/PolicyEngineProxyJavaImpl.java\nindex aedad959980..4b3a26643b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/752/PolicyEngineProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -48,13 +49,14 @@ public class PolicyEngineProxyJavaImpl implements PolicyEngineProxy {\n         try {\n             response = policyEngine.checkPolicy(checkPolicyRequest, assertion);\n         } catch (Exception e) {\n-            String sErrorMessage = \"Error occurred calling PolicyEngineWebServiceProxyJavaImpl.checkPolicy.  Error: \"\n-                    + e.getMessage();\n-            LOG.error(sErrorMessage, e);\n-            throw new RuntimeException(sErrorMessage, e);\n+            String sErrorMessage = \"Error occurred calling PolicyEngineWebServiceProxyJavaImpl.checkPolicy.  Error: \" + e.getMessage();\n+LOG.error(sErrorMessage, e);\n+\n+throw new RuntimeException(sErrorMessage, e);\n         }\n         LOG.trace(\"End PolicyEngineWebServiceProxyJavaImpl.checkPolicy\");\n-        return response;\n+\n+return response;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/752/PolicyEngineProxyJavaImpl.java\nindex aedad959980..d6cfa0ca7f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/752/PolicyEngineProxyJavaImpl.java\n@@ -37,9 +37,13 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author Neil Webb\n  */\n+\n+\n public class PolicyEngineProxyJavaImpl implements PolicyEngineProxy {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(PolicyEngineProxyJavaImpl.class);\n \n+\n     @Override\n     public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n         LOG.trace(\"Begin PolicyEngineWebServiceProxyJavaImpl.checkPolicy\");\n@@ -48,8 +52,7 @@ public class PolicyEngineProxyJavaImpl implements PolicyEngineProxy {\n         try {\n             response = policyEngine.checkPolicy(checkPolicyRequest, assertion);\n         } catch (Exception e) {\n-            String sErrorMessage = \"Error occurred calling PolicyEngineWebServiceProxyJavaImpl.checkPolicy.  Error: \"\n-                    + e.getMessage();\n+            String sErrorMessage = \"Error occurred calling PolicyEngineWebServiceProxyJavaImpl.checkPolicy.  Error: \" + e.getMessage();\n             LOG.error(sErrorMessage, e);\n             throw new RuntimeException(sErrorMessage, e);\n         }\n@@ -57,4 +60,4 @@ public class PolicyEngineProxyJavaImpl implements PolicyEngineProxy {\n         return response;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/752/PolicyEngineProxyJavaImpl.java\nindex aedad959980..8cce6c6d75d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/752/PolicyEngineProxyJavaImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n-\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.common.nhinccommonadapter.CheckPolicyRequestType;\n import gov.hhs.fha.nhinc.common.nhinccommonadapter.CheckPolicyResponseType;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/752/PolicyEngineProxyJavaImpl.java\nindex aedad959980..b8e6c012a94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/752/PolicyEngineProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/752/PolicyEngineProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "twilio-twilio-java",
    "error_id": "864",
    "information": {
        "errors": [
            {
                "line": "209",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/864/YearlyReader.java\nindex c6f43e97227..69fdde96ff8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/864/YearlyReader.java\n@@ -206,7 +206,7 @@ public class YearlyReader extends Reader<Yearly> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/864/YearlyReader.java\nindex c6f43e97227..1d0810dbc1f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/864/YearlyReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.api.v2010.account.usage.record;\n@@ -206,7 +206,7 @@ public class YearlyReader extends Reader<Yearly> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/864/YearlyReader.java\nindex c6f43e97227..5032d08ee83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/864/YearlyReader.java\n@@ -31,6 +31,8 @@ public class YearlyReader extends Reader<Yearly> {\n     /**\n      * Construct a new YearlyReader.\n      */\n+\n+\n     public YearlyReader() {\n     }\n \n@@ -40,6 +42,8 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param pathAccountSid The SID of the Account that created the resources to\n      *                       read\n      */\n+\n+\n     public YearlyReader(final String pathAccountSid) {\n         this.pathAccountSid = pathAccountSid;\n     }\n@@ -51,6 +55,8 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param category The usage category of the UsageRecord resources to read\n      * @return this\n      */\n+\n+\n     public YearlyReader setCategory(final Yearly.Category category) {\n         this.category = category;\n         return this;\n@@ -65,6 +71,8 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param startDate Only include usage that has occurred on or after this date\n      * @return this\n      */\n+\n+\n     public YearlyReader setStartDate(final LocalDate startDate) {\n         this.startDate = startDate;\n         return this;\n@@ -79,6 +87,8 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param endDate Only include usage that occurred on or before this date\n      * @return this\n      */\n+\n+\n     public YearlyReader setEndDate(final LocalDate endDate) {\n         this.endDate = endDate;\n         return this;\n@@ -93,6 +103,8 @@ public class YearlyReader extends Reader<Yearly> {\n      *                           and all its subaccounts\n      * @return this\n      */\n+\n+\n     public YearlyReader setIncludeSubaccounts(final Boolean includeSubaccounts) {\n         this.includeSubaccounts = includeSubaccounts;\n         return this;\n@@ -104,6 +116,7 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Yearly ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Yearly> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -115,15 +128,16 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Yearly ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Yearly> firstPage(final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.API.toString(),\n-            \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/Usage/Records/Yearly.json\",\n-            client.getRegion()\n+                              HttpMethod.GET,\n+                              Domains.API.toString(),\n+                              \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/Usage/Records/Yearly.json\",\n+                              client.getRegion()\n         );\n \n         addQueryParams(request);\n@@ -137,15 +151,13 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Yearly ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Yearly> getPage(final String targetUrl, final TwilioRestClient client) {\n+    public Page<Yearly> getPage(final String targetUrl,\n+                                final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -156,15 +168,13 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Yearly> nextPage(final Page<Yearly> page,\n                                  final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(\n-                Domains.API.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getNextPageUrl(Domains.API.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -176,15 +186,13 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Yearly> previousPage(final Page<Yearly> page,\n                                      final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(\n-                Domains.API.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getPreviousPageUrl(Domains.API.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -196,9 +204,11 @@ public class YearlyReader extends Reader<Yearly> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Yearly> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Yearly> pageForRequest(final TwilioRestClient client,\n+                                        final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Yearly read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -206,15 +216,11 @@ public class YearlyReader extends Reader<Yearly> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"usage_records\",\n-            response.getContent(),\n-            Yearly.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"usage_records\", response.getContent(), Yearly.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -222,6 +228,8 @@ public class YearlyReader extends Reader<Yearly> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (category != null) {\n             request.addQueryParam(\"Category\", category.toString());\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/864/YearlyReader.java\nindex c6f43e97227..69fdde96ff8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/864/YearlyReader.java\n@@ -206,7 +206,7 @@ public class YearlyReader extends Reader<Yearly> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/864/YearlyReader.java\nindex c6f43e97227..5ccb83ee244 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/864/YearlyReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/864/YearlyReader.java\n@@ -206,7 +206,8 @@ public class YearlyReader extends Reader<Yearly> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1197",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1197/FileSystemUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1197/FileSystemUtils.java\nindex 2ec578538f9..586656b1190 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1197/FileSystemUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1197/FileSystemUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.fs;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -40,76 +41,74 @@ public final class FileSystemUtils\n     /**\n      * Creates a file, or opens an existing file. If necessary, parent directories will be created.\n      *\n-     * @param fs The filesystem abstraction to use.\n+     * @param fs   The filesystem abstraction to use.\n      * @param file The file to create or open.\n      * @return An output stream.\n      * @throws IOException If an error occurs creating directories or opening the file.\n      */\n-    public static OutputStream createOrOpenAsOutputStream( FileSystemAbstraction fs, Path file, boolean append ) throws IOException\n+    public static OutputStream createOrOpenAsOutputStream(FileSystemAbstraction fs, Path file, boolean append) throws IOException\n     {\n-        if ( file.getParent() != null )\n+        if (file.getParent() != null)\n         {\n-            fs.mkdirs( file.getParent() );\n+            fs.mkdirs(file.getParent());\n         }\n-        return fs.openAsOutputStream( file, append );\n+        return fs.openAsOutputStream(file, append);\n     }\n \n     /**\n      * Check if directory is empty.\n      *\n-     * @param fs file system to use.\n+     * @param fs        file system to use.\n      * @param directory directory to check.\n      * @return {@code true} when directory does not exist or exists and is empty, {@code false} otherwise.\n      */\n-    public static boolean isEmptyOrNonExistingDirectory( FileSystemAbstraction fs, Path directory )\n+    public static boolean isEmptyOrNonExistingDirectory(FileSystemAbstraction fs, Path directory)\n     {\n-        if ( fs.isDirectory( directory ) )\n+        if (fs.isDirectory(directory))\n         {\n-            Path[] files = fs.listFiles( directory );\n-            return ArrayUtils.isEmpty( files );\n+            Path[] files = fs.listFiles(directory);\n+            return ArrayUtils.isEmpty(files);\n         }\n-        return !fs.fileExists( directory );\n+        return !fs.fileExists(directory);\n     }\n \n     /**\n      * Calculates the size of a given directory or file given the provided abstract filesystem.\n      *\n-     * @param fs the filesystem abstraction to use.\n+     * @param fs   the filesystem abstraction to use.\n      * @param file to the file or directory.\n      * @return the size, in bytes, of the file or the total size of the content in the directory, including\n      * subdirectories.\n      */\n-    public static long size( FileSystemAbstraction fs, Path file )\n+    public static long size(FileSystemAbstraction fs, Path file)\n     {\n-        if ( fs.isDirectory( file ) )\n+        if (fs.isDirectory(file))\n         {\n-            Path[] files = fs.listFiles( file );\n-            if ( files == null )\n+            Path[] files = fs.listFiles(file);\n+            if (files == null)\n             {\n                 return 0L;\n             }\n             long size = 0L;\n-            for ( Path child : files )\n+            for (Path child : files)\n             {\n-                size += size( fs, child );\n+                size += size(fs, child);\n             }\n             return size;\n-        }\n-        else\n+        } else\n         {\n-            return fs.getFileSize( file );\n+            return fs.getFileSize(file);\n         }\n     }\n \n-    public static void deleteFile( FileSystemAbstraction fs, Path fileToDelete ) throws IOException\n+    public static void deleteFile(FileSystemAbstraction fs, Path fileToDelete) throws IOException\n     {\n-        if ( fs.isDirectory( fileToDelete ) )\n+        if (fs.isDirectory(fileToDelete))\n         {\n-            fs.deleteRecursively( fileToDelete );\n-        }\n-        else\n+            fs.deleteRecursively(fileToDelete);\n+        } else\n         {\n-            fs.deleteFile( fileToDelete );\n+            fs.deleteFile(fileToDelete);\n         }\n     }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
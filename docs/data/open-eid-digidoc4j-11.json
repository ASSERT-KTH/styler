{
    "project_name": "open-eid-digidoc4j",
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "170",
                "column": "119",
                "severity": "error",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "            token.getCertificate().getSubjectX500Principal());\n        if (CollectionUtils.isEmpty(tokens) || tokens.size() != 1) {\n          throw new SignatureVerificationException(String.format(\"OCSP response certificate <%s> match is not found \" +\n              \"in TSL (<%s> results in total)\", token.getDSSIdAsString(), tokens.size()));\n        } else {\n          try {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "170",
                    "column": "119",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "170",
                    "column": "119",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/11/SKOnlineOCSPSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/11/SKOnlineOCSPSource.java\nindex 63ccdd9d7c0..10aabf7fab1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/11/SKOnlineOCSPSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/11/SKOnlineOCSPSource.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl;\n \n@@ -151,7 +151,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n         X509Certificate signingCertificate = privateKeyEntry.getCertificate().getCertificate();\n         builder.setRequestorName(new GeneralName(new JcaX509CertificateHolder(signingCertificate).getSubject()));\n         return builder.build(signerBuilder.build(((KSPrivateKeyEntry) privateKeyEntry).getPrivateKey()),\n-            new X509CertificateHolder[]{new X509CertificateHolder(signingCertificate.getEncoded())}).getEncoded();\n+            new X509CertificateHolder[] {new X509CertificateHolder(signingCertificate.getEncoded())}).getEncoded();\n       }\n       return builder.build().getEncoded();\n     } catch (Exception e) {\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/11/SKOnlineOCSPSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/11/SKOnlineOCSPSource.java\nindex 63ccdd9d7c0..4bd855e14c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/11/SKOnlineOCSPSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/11/SKOnlineOCSPSource.java\n@@ -130,9 +130,8 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n     DEROctetString receivedNonce = (DEROctetString) extension.getExtnValue();\n     if (!receivedNonce.equals(expectedNonce)) {\n       throw new DigiDoc4JException(\n-          String.format(\"The OCSP request was the victim of replay attack (nonce sent <%s>, nonce received <%s>)\",\n-              expectedNonce, receivedNonce));\n-    }\n+          String.format(\"The OCSP request was the victim of replay attack (nonce sent <%s>, nonce received <%s>)\", expectedNonce, receivedNonce));\n+  }\n   }\n \n   private byte[] buildRequest(final CertificateID certificateID, Extension nonceExtension) throws DSSException {\n@@ -150,8 +149,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n         DSSPrivateKeyEntry privateKeyEntry = this.getOCSPAccessCertificatePrivateKey();\n         X509Certificate signingCertificate = privateKeyEntry.getCertificate().getCertificate();\n         builder.setRequestorName(new GeneralName(new JcaX509CertificateHolder(signingCertificate).getSubject()));\n-        return builder.build(signerBuilder.build(((KSPrivateKeyEntry) privateKeyEntry).getPrivateKey()),\n-            new X509CertificateHolder[]{new X509CertificateHolder(signingCertificate.getEncoded())}).getEncoded();\n+        return builder.build(signerBuilder.build(((KSPrivateKeyEntry) privateKeyEntry).getPrivateKey()), new X509CertificateHolder[]{new X509CertificateHolder(signingCertificate.getEncoded())}).getEncoded();\n       }\n       return builder.build().getEncoded();\n     } catch (Exception e) {\n@@ -167,12 +165,10 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n         List<CertificateToken> tokens = this.configuration.getTSL().get(\n             token.getCertificate().getSubjectX500Principal());\n         if (CollectionUtils.isEmpty(tokens) || tokens.size() != 1) {\n-          throw new SignatureVerificationException(String.format(\"OCSP response certificate <%s> match is not found \" +\n-              \"in TSL (<%s> results in total)\", token.getDSSIdAsString(), tokens.size()));\n+          throw new SignatureVerificationException(String.format(\"OCSP response certificate <%s> match is not found \" + \"in TSL (<%s> results in total)\", token.getDSSIdAsString(), tokens.size()));\n         } else {\n           try {\n-            ContentVerifierProvider provider = new JcaContentVerifierProviderBuilder().setProvider(\"BC\").build(new\n-                X509CertificateHolder(tokens.get(0).getEncoded()));\n+            ContentVerifierProvider provider = new JcaContentVerifierProviderBuilder().setProvider(\"BC\").build(new X509CertificateHolder(tokens.get(0).getEncoded()));\n             if (!response.isSignatureValid(provider)) {\n               throw new SignatureVerificationException(\"OCSP response signature is invalid\");\n             }\n@@ -192,8 +188,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n \n   private DSSPrivateKeyEntry getOCSPAccessCertificatePrivateKey() throws IOException {\n     Pkcs12SignatureToken signatureTokenConnection = new Pkcs12SignatureToken(\n-        this.configuration.getOCSPAccessCertificateFileName(), this.configuration\n-        .getOCSPAccessCertificatePasswordAsString());\n+        this.configuration.getOCSPAccessCertificateFileName(), this.configuration.getOCSPAccessCertificatePasswordAsString());\n     return signatureTokenConnection.getKeys().get(0);\n   }\n \n@@ -228,4 +223,4 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n     this.dataLoader = dataLoader;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "192",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/11/SKOnlineOCSPSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/11/SKOnlineOCSPSource.java\nindex 63ccdd9d7c0..d60a2eeb87c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/11/SKOnlineOCSPSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/11/SKOnlineOCSPSource.java\n@@ -14,7 +14,6 @@ import java.io.IOException;\n import java.security.cert.X509Certificate;\n import java.util.Arrays;\n import java.util.List;\n-\n import org.apache.commons.collections4.CollectionUtils;\n import org.bouncycastle.asn1.DEROctetString;\n import org.bouncycastle.asn1.ocsp.OCSPObjectIdentifiers;\n@@ -39,7 +38,6 @@ import org.digidoc4j.exceptions.TechnicalException;\n import org.digidoc4j.impl.asic.SkDataLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import eu.europa.esig.dss.DSSException;\n import eu.europa.esig.dss.DSSRevocationUtils;\n import eu.europa.esig.dss.DSSUtils;\n@@ -53,6 +51,8 @@ import eu.europa.esig.dss.x509.ocsp.OCSPToken;\n /**\n  * SK OCSP source location.\n  */\n+\n+\n public abstract class SKOnlineOCSPSource implements OCSPSource {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(SKOnlineOCSPSource.class);\n@@ -64,6 +64,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n    *\n    * @param configuration configuration to use for this source\n    */\n+\n   public SKOnlineOCSPSource(Configuration configuration) {\n     this.configuration = configuration;\n   }\n@@ -73,6 +74,8 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n    *\n    * @return OCSP source location\n    */\n+\n+\n   public String getAccessLocation() {\n     if (this.configuration != null) {\n       return this.configuration.getOcspSource();\n@@ -92,8 +95,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n       }\n       CertificateID certificateID = DSSRevocationUtils.getOCSPCertificateID(certificateToken, issuerCertificateToken);\n       Extension nonceExtension = this.createNonce();\n-      BasicOCSPResp response = (BasicOCSPResp) new OCSPResp(this.dataLoader.post(this.getAccessLocation(),\n-          this.buildRequest(certificateID, nonceExtension))).getResponseObject();\n+      BasicOCSPResp response = (BasicOCSPResp) new OCSPResp(this.dataLoader.post(this.getAccessLocation(), this.buildRequest(certificateID, nonceExtension))).getResponseObject();\n       if (response == null) {\n         LOGGER.warn(\"Basic OCSP response is empty\");\n         return null;\n@@ -129,9 +131,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n     DEROctetString expectedNonce = (DEROctetString) expectedNonceExtension.getExtnValue();\n     DEROctetString receivedNonce = (DEROctetString) extension.getExtnValue();\n     if (!receivedNonce.equals(expectedNonce)) {\n-      throw new DigiDoc4JException(\n-          String.format(\"The OCSP request was the victim of replay attack (nonce sent <%s>, nonce received <%s>)\",\n-              expectedNonce, receivedNonce));\n+      throw new DigiDoc4JException(String.format(\"The OCSP request was the victim of replay attack (nonce sent <%s>, nonce received <%s>)\", expectedNonce, receivedNonce));\n     }\n   }\n \n@@ -150,8 +150,9 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n         DSSPrivateKeyEntry privateKeyEntry = this.getOCSPAccessCertificatePrivateKey();\n         X509Certificate signingCertificate = privateKeyEntry.getCertificate().getCertificate();\n         builder.setRequestorName(new GeneralName(new JcaX509CertificateHolder(signingCertificate).getSubject()));\n-        return builder.build(signerBuilder.build(((KSPrivateKeyEntry) privateKeyEntry).getPrivateKey()),\n-            new X509CertificateHolder[]{new X509CertificateHolder(signingCertificate.getEncoded())}).getEncoded();\n+        return builder.build(signerBuilder.build(((KSPrivateKeyEntry) privateKeyEntry).getPrivateKey()), new X509CertificateHolder[]{\n+                                                                                                           new X509CertificateHolder(signingCertificate.getEncoded())\n+                                                                                                           }).getEncoded();\n       }\n       return builder.build().getEncoded();\n     } catch (Exception e) {\n@@ -164,15 +165,12 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n     if (CollectionUtils.isNotEmpty(holders)) {\n       for (X509CertificateHolder holder : holders) {\n         CertificateToken token = DSSUtils.loadCertificate(holder.getEncoded());\n-        List<CertificateToken> tokens = this.configuration.getTSL().get(\n-            token.getCertificate().getSubjectX500Principal());\n+        List<CertificateToken> tokens = this.configuration.getTSL().get(token.getCertificate().getSubjectX500Principal());\n         if (CollectionUtils.isEmpty(tokens) || tokens.size() != 1) {\n-          throw new SignatureVerificationException(String.format(\"OCSP response certificate <%s> match is not found \" +\n-              \"in TSL (<%s> results in total)\", token.getDSSIdAsString(), tokens.size()));\n+          throw new SignatureVerificationException(String.format(\"OCSP response certificate <%s> match is not found \" + \"in TSL (<%s> results in total)\", token.getDSSIdAsString(), tokens.size()));\n         } else {\n           try {\n-            ContentVerifierProvider provider = new JcaContentVerifierProviderBuilder().setProvider(\"BC\").build(new\n-                X509CertificateHolder(tokens.get(0).getEncoded()));\n+            ContentVerifierProvider provider = new JcaContentVerifierProviderBuilder().setProvider(\"BC\").build(new X509CertificateHolder(tokens.get(0).getEncoded()));\n             if (!response.isSignatureValid(provider)) {\n               throw new SignatureVerificationException(\"OCSP response signature is invalid\");\n             }\n@@ -191,9 +189,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n   }\n \n   private DSSPrivateKeyEntry getOCSPAccessCertificatePrivateKey() throws IOException {\n-    Pkcs12SignatureToken signatureTokenConnection = new Pkcs12SignatureToken(\n-        this.configuration.getOCSPAccessCertificateFileName(), this.configuration\n-        .getOCSPAccessCertificatePasswordAsString());\n+    Pkcs12SignatureToken signatureTokenConnection = new Pkcs12SignatureToken(this.configuration.getOCSPAccessCertificateFileName(), this.configuration.getOCSPAccessCertificatePasswordAsString());\n     return signatureTokenConnection.getKeys().get(0);\n   }\n \n@@ -206,6 +202,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n    *\n    * @return Configuration\n    */\n+\n   public Configuration getConfiguration() {\n     return configuration;\n   }\n@@ -215,6 +212,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n    *\n    * @return SkDataLoader\n    */\n+\n   public SkDataLoader getDataLoader() {\n     return dataLoader;\n   }\n@@ -224,8 +222,8 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n    *\n    * @param dataLoader Data loader object to be used.\n    */\n+\n   public void setDataLoader(SkDataLoader dataLoader) {\n     this.dataLoader = dataLoader;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "170",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/11/SKOnlineOCSPSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/11/SKOnlineOCSPSource.java\nindex 63ccdd9d7c0..8c4b32936e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/11/SKOnlineOCSPSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/11/SKOnlineOCSPSource.java\n@@ -167,7 +167,7 @@ public abstract class SKOnlineOCSPSource implements OCSPSource {\n         List<CertificateToken> tokens = this.configuration.getTSL().get(\n             token.getCertificate().getSubjectX500Principal());\n         if (CollectionUtils.isEmpty(tokens) || tokens.size() != 1) {\n-          throw new SignatureVerificationException(String.format(\"OCSP response certificate <%s> match is not found \" +\n+          throw new SignatureVerificationException(String.format(\"OCSP response certificate <%s> match is not found \"+\n               \"in TSL (<%s> results in total)\", token.getDSSIdAsString(), tokens.size()));\n         } else {\n           try {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "170",
                    "column": "119",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
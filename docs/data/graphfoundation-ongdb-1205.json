{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1205",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1205/TransactionMetadataCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1205/TransactionMetadataCache.java\nindex 21203088338..9b852928e42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1205/TransactionMetadataCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1205/TransactionMetadataCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.util.Objects;\n@@ -25,119 +26,119 @@ import org.neo4j.helpers.collection.LruCache;\n \n public class TransactionMetadataCache\n {\n-    private final LruCache<Long /*tx id*/, TransactionMetadata> txStartPositionCache;\n+  private final LruCache<Long /*tx id*/, TransactionMetadata> txStartPositionCache;\n+\n+  public TransactionMetadataCache(int transactionCacheSize)\n+  {\n+    this.txStartPositionCache = new LruCache<>(\"Tx start position cache\", transactionCacheSize);\n+  }\n+\n+  public void clear()\n+  {\n+    txStartPositionCache.clear();\n+  }\n+\n+  public TransactionMetadata getTransactionMetadata(long txId)\n+  {\n+    return txStartPositionCache.get(txId);\n+  }\n+\n+  public TransactionMetadata cacheTransactionMetadata(long txId, LogPosition position, int masterId,\n+                                                      int authorId, long checksum, long timeWritten)\n+  {\n+    if (position.getByteOffset() == -1)\n+    {\n+      throw new RuntimeException(\"StartEntry.position is \" + position);\n+    }\n+\n+    TransactionMetadata result = new TransactionMetadata(masterId, authorId, position, checksum, timeWritten);\n+    txStartPositionCache.put(txId, result);\n+    return result;\n+  }\n+\n+  public static class TransactionMetadata\n+  {\n+    private final int masterId;\n+    private final int authorId;\n+    private final LogPosition startPosition;\n+    private final long checksum;\n+    private final long timeWritten;\n+\n+    public TransactionMetadata(int masterId, int authorId, LogPosition startPosition, long checksum,\n+                               long timeWritten)\n+    {\n+      this.masterId = masterId;\n+      this.authorId = authorId;\n+      this.startPosition = startPosition;\n+      this.checksum = checksum;\n+      this.timeWritten = timeWritten;\n+    }\n+\n+    public int getMasterId()\n+    {\n+      return masterId;\n+    }\n+\n+    public int getAuthorId()\n+    {\n+      return authorId;\n+    }\n+\n+    public LogPosition getStartPosition()\n+    {\n+      return startPosition;\n+    }\n \n-    public TransactionMetadataCache( int transactionCacheSize )\n+    public long getChecksum()\n     {\n-        this.txStartPositionCache = new LruCache<>( \"Tx start position cache\", transactionCacheSize );\n+      return checksum;\n     }\n \n-    public void clear()\n+    public long getTimeWritten()\n     {\n-        txStartPositionCache.clear();\n+      return timeWritten;\n     }\n \n-    public TransactionMetadata getTransactionMetadata( long txId )\n+    @Override\n+    public String toString()\n     {\n-        return txStartPositionCache.get( txId );\n+      return \"TransactionMetadata{\" +\n+          \"masterId=\" + masterId +\n+          \", authorId=\" + authorId +\n+          \", startPosition=\" + startPosition +\n+          \", checksum=\" + checksum +\n+          \", timeWritten=\" + timeWritten +\n+          '}';\n     }\n \n-    public TransactionMetadata cacheTransactionMetadata( long txId, LogPosition position, int masterId,\n-                                                         int authorId, long checksum, long timeWritten )\n+    @Override\n+    public boolean equals(Object o)\n     {\n-        if ( position.getByteOffset() == -1 )\n-        {\n-            throw new RuntimeException( \"StartEntry.position is \" + position );\n-        }\n-\n-        TransactionMetadata result = new TransactionMetadata( masterId, authorId, position, checksum, timeWritten );\n-        txStartPositionCache.put( txId, result );\n-        return result;\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      TransactionMetadata that = (TransactionMetadata) o;\n+      return masterId == that.masterId &&\n+          authorId == that.authorId &&\n+          checksum == that.checksum &&\n+          timeWritten == that.timeWritten &&\n+          Objects.equals(startPosition, that.startPosition);\n     }\n \n-    public static class TransactionMetadata\n+    @Override\n+    public int hashCode()\n     {\n-        private final int masterId;\n-        private final int authorId;\n-        private final LogPosition startPosition;\n-        private final long checksum;\n-        private final long timeWritten;\n-\n-        public TransactionMetadata( int masterId, int authorId, LogPosition startPosition, long checksum,\n-                long timeWritten )\n-        {\n-            this.masterId = masterId;\n-            this.authorId = authorId;\n-            this.startPosition = startPosition;\n-            this.checksum = checksum;\n-            this.timeWritten = timeWritten;\n-        }\n-\n-        public int getMasterId()\n-        {\n-            return masterId;\n-        }\n-\n-        public int getAuthorId()\n-        {\n-            return authorId;\n-        }\n-\n-        public LogPosition getStartPosition()\n-        {\n-            return startPosition;\n-        }\n-\n-        public long getChecksum()\n-        {\n-            return checksum;\n-        }\n-\n-        public long getTimeWritten()\n-        {\n-            return timeWritten;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"TransactionMetadata{\" +\n-                   \"masterId=\" + masterId +\n-                   \", authorId=\" + authorId +\n-                   \", startPosition=\" + startPosition +\n-                   \", checksum=\" + checksum +\n-                   \", timeWritten=\" + timeWritten +\n-                   '}';\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            TransactionMetadata that = (TransactionMetadata) o;\n-            return masterId == that.masterId &&\n-                   authorId == that.authorId &&\n-                   checksum == that.checksum &&\n-                   timeWritten == that.timeWritten &&\n-                   Objects.equals( startPosition, that.startPosition );\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            int result = masterId;\n-            result = 31 * result + authorId;\n-            result = 31 * result + startPosition.hashCode();\n-            result = 31 * result + (int) (checksum ^ (checksum >>> 32));\n-            result = 31 * result + (int) (timeWritten ^ (timeWritten >>> 32));\n-            return result;\n-        }\n+      int result = masterId;\n+      result = 31 * result + authorId;\n+      result = 31 * result + startPosition.hashCode();\n+      result = 31 * result + (int) (checksum ^ (checksum >>> 32));\n+      result = 31 * result + (int) (timeWritten ^ (timeWritten >>> 32));\n+      return result;\n     }\n+  }\n }\n",
            "diff_size": 177
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1205/TransactionMetadataCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1205/TransactionMetadataCache.java\nindex 21203088338..14721bee8a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1205/TransactionMetadataCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1205/TransactionMetadataCache.java\n@@ -25,7 +25,7 @@ import org.neo4j.helpers.collection.LruCache;\n \n public class TransactionMetadataCache\n {\n-    private final LruCache<Long /*tx id*/, TransactionMetadata> txStartPositionCache;\n+    private final LruCache<Long/*tx id*/, TransactionMetadata> txStartPositionCache;\n \n     public TransactionMetadataCache( int transactionCacheSize )\n     {\n@@ -42,9 +42,8 @@ public class TransactionMetadataCache\n         return txStartPositionCache.get( txId );\n     }\n \n-    public TransactionMetadata cacheTransactionMetadata( long txId, LogPosition position, int masterId,\n-                                                         int authorId, long checksum, long timeWritten )\n-    {\n+    public TransactionMetadata cacheTransactionMetadata( long txId, LogPosition position, int masterId, int authorId, long checksum, long timeWritten )\n+{\n         if ( position.getByteOffset() == -1 )\n         {\n             throw new RuntimeException( \"StartEntry.position is \" + position );\n@@ -101,14 +100,8 @@ public class TransactionMetadataCache\n         @Override\n         public String toString()\n         {\n-            return \"TransactionMetadata{\" +\n-                   \"masterId=\" + masterId +\n-                   \", authorId=\" + authorId +\n-                   \", startPosition=\" + startPosition +\n-                   \", checksum=\" + checksum +\n-                   \", timeWritten=\" + timeWritten +\n-                   '}';\n-        }\n+            return \"TransactionMetadata{\" + \"masterId=\" + masterId + \", authorId=\" + authorId + \", startPosition=\" + startPosition + \", checksum=\" + checksum + \", timeWritten=\" + timeWritten + '}';\n+    }\n \n         @Override\n         public boolean equals( Object o )\n@@ -117,17 +110,18 @@ public class TransactionMetadataCache\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            TransactionMetadata that = (TransactionMetadata) o;\n-            return masterId == that.masterId &&\n-                   authorId == that.authorId &&\n+\n+TransactionMetadata that = (TransactionMetadata) o;\n+            return masterId == that.masterId && authorId == that.authorId &&\n                    checksum == that.checksum &&\n                    timeWritten == that.timeWritten &&\n                    Objects.equals( startPosition, that.startPosition );\n-        }\n+    }\n \n         @Override\n         public int hashCode()\n@@ -135,9 +129,9 @@ public class TransactionMetadataCache\n             int result = masterId;\n             result = 31 * result + authorId;\n             result = 31 * result + startPosition.hashCode();\n-            result = 31 * result + (int) (checksum ^ (checksum >>> 32));\n-            result = 31 * result + (int) (timeWritten ^ (timeWritten >>> 32));\n+            result = 31 * result + ( int) ( checksum ^ ( checksum >>> 32 ));\n+            result = 31 * result + ( int) ( timeWritten ^ ( timeWritten >>> 32 ));\n             return result;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "90",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 136).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    static class QueryEndpointFactory implements EndpointFactory {\n        @Override\n        public Endpoint create(final String hostname, final String bucket, final String username, final String password, final int port,\n                               final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n            return new QueryEndpoint(hostname, bucket, username, password, port, env, responseBuffer);\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/32/OldQueryService.java\nindex 0aeb99e68ad..f8e398e1861 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/32/OldQueryService.java\n@@ -87,8 +87,9 @@ public class OldQueryService extends AbstractPoolingService {\n      */\n     static class QueryEndpointFactory implements EndpointFactory {\n         @Override\n-        public Endpoint create(final String hostname, final String bucket, final String username, final String password, final int port,\n-                               final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n+        public Endpoint create(final String hostname, final String bucket, final String username,\n+                               final String password, final int port,\n+                                final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n             return new QueryEndpoint(hostname, bucket, username, password, port, env, responseBuffer);\n         }\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/32/OldQueryService.java\nindex 0aeb99e68ad..cea98e15b28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/32/OldQueryService.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.service;\n \n import com.couchbase.client.core.ResponseEvent;\n@@ -46,11 +47,11 @@ public class OldQueryService extends AbstractPoolingService {\n     /**\n      * Creates a new {@link QueryService}.\n      *\n-     * @param hostname the hostname of the service.\n-     * @param bucket the name of the bucket.\n-     * @param password the password of the bucket.\n-     * @param port the port of the service.\n-     * @param env the shared environment.\n+     * @param hostname       the hostname of the service.\n+     * @param bucket         the name of the bucket.\n+     * @param password       the password of the bucket.\n+     * @param port           the port of the service.\n+     * @param env            the shared environment.\n      * @param responseBuffer the shared response buffer.\n      */\n     @Deprecated\n@@ -62,18 +63,18 @@ public class OldQueryService extends AbstractPoolingService {\n     /**\n      * Creates a new {@link QueryService}.\n      *\n-     * @param hostname the hostname of the service.\n-     * @param bucket the name of the bucket.\n-     * @param username the user authorized for bucket access.\n-     * @param password the password of the user.\n-     * @param port the port of the service.\n-     * @param env the shared environment.\n+     * @param hostname       the hostname of the service.\n+     * @param bucket         the name of the bucket.\n+     * @param username       the user authorized for bucket access.\n+     * @param password       the password of the user.\n+     * @param port           the port of the service.\n+     * @param env            the shared environment.\n      * @param responseBuffer the shared response buffer.\n      */\n     public OldQueryService(final String hostname, final String bucket, final String username, final String password,\n                            final int port, final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, username, password, port, env, env.queryEndpoints(), env.queryEndpoints(), STRATEGY,\n-                responseBuffer, FACTORY);\n+            responseBuffer, FACTORY);\n     }\n \n \n@@ -87,7 +88,8 @@ public class OldQueryService extends AbstractPoolingService {\n      */\n     static class QueryEndpointFactory implements EndpointFactory {\n         @Override\n-        public Endpoint create(final String hostname, final String bucket, final String username, final String password, final int port,\n+        public Endpoint create(final String hostname, final String bucket, final String username, final String password,\n+                               final int port,\n                                final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n             return new QueryEndpoint(hostname, bucket, username, password, port, env, responseBuffer);\n         }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/32/OldQueryService.java\nindex 0aeb99e68ad..732c837200b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/32/OldQueryService.java\n@@ -30,11 +30,13 @@ import com.lmax.disruptor.RingBuffer;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n+\n public class OldQueryService extends AbstractPoolingService {\n \n     /**\n      * The endpoint selection strategy.\n      */\n+\n     private static final SelectionStrategy STRATEGY = new RoundRobinSelectionStrategy();\n \n     /**\n@@ -53,9 +55,9 @@ public class OldQueryService extends AbstractPoolingService {\n      * @param env the shared environment.\n      * @param responseBuffer the shared response buffer.\n      */\n+\n     @Deprecated\n-    public OldQueryService(final String hostname, final String bucket, final String password,\n-                           final int port, final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n+    public OldQueryService(final String hostname, final String bucket, final String password, final int port, final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n         this(hostname, bucket, bucket, password, port, env, responseBuffer);\n     }\n \n@@ -70,12 +72,10 @@ public class OldQueryService extends AbstractPoolingService {\n      * @param env the shared environment.\n      * @param responseBuffer the shared response buffer.\n      */\n-    public OldQueryService(final String hostname, final String bucket, final String username, final String password,\n-                           final int port, final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, env, env.queryEndpoints(), env.queryEndpoints(), STRATEGY,\n-                responseBuffer, FACTORY);\n-    }\n \n+    public OldQueryService(final String hostname, final String bucket, final String username, final String password, final int port, final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n+        super(hostname, bucket, username, password, port, env, env.queryEndpoints(), env.queryEndpoints(), STRATEGY, responseBuffer, FACTORY);\n+    }\n \n     @Override\n     public ServiceType type() {\n@@ -85,10 +85,10 @@ public class OldQueryService extends AbstractPoolingService {\n     /**\n      * The factory for {@link com.couchbase.client.core.endpoint.query.QueryEndpoint}s.\n      */\n+\n     static class QueryEndpointFactory implements EndpointFactory {\n         @Override\n-        public Endpoint create(final String hostname, final String bucket, final String username, final String password, final int port,\n-                               final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n+        public Endpoint create(final String hostname, final String bucket, final String username, final String password, final int port, final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n             return new QueryEndpoint(hostname, bucket, username, password, port, env, responseBuffer);\n         }\n     }\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/32/OldQueryService.java\nindex 0aeb99e68ad..f8e398e1861 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/32/OldQueryService.java\n@@ -87,8 +87,9 @@ public class OldQueryService extends AbstractPoolingService {\n      */\n     static class QueryEndpointFactory implements EndpointFactory {\n         @Override\n-        public Endpoint create(final String hostname, final String bucket, final String username, final String password, final int port,\n-                               final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n+        public Endpoint create(final String hostname, final String bucket, final String username,\n+                               final String password, final int port,\n+                                final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n             return new QueryEndpoint(hostname, bucket, username, password, port, env, responseBuffer);\n         }\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/32/OldQueryService.java\nindex 0aeb99e68ad..fa68ca570a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/32/OldQueryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/32/OldQueryService.java\n@@ -87,8 +87,9 @@ public class OldQueryService extends AbstractPoolingService {\n      */\n     static class QueryEndpointFactory implements EndpointFactory {\n         @Override\n-        public Endpoint create(final String hostname, final String bucket, final String username, final String password, final int port,\n-                               final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n+        public Endpoint create(final String hostname, final String bucket, final String username, final String password,\n+            final int port,\n+                                final CoreEnvironment env, final RingBuffer<ResponseEvent> responseBuffer) {\n             return new QueryEndpoint(hostname, bucket, username, password, port, env, responseBuffer);\n         }\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4342",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "102",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4342/PageCursorTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4342/PageCursorTracer.java\nindex 6d59f7dbd9e..f7df39fd99b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4342/PageCursorTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4342/PageCursorTracer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.tracing.cursor;\n \n import org.neo4j.io.pagecache.PageSwapper;\n@@ -25,7 +26,7 @@ import org.neo4j.io.pagecache.tracing.PinEvent;\n \n /**\n  * Event tracer for page cursors.\n- *\n+ * <p>\n  * Performs event tracing related to particular page cursors and expose simple counters around them.\n  * Since events of each particular page cursor are part of whole page cache events, each particular page cursor\n  * tracer will eventually report them to global page cache counters/tracers.\n@@ -35,126 +36,129 @@ import org.neo4j.io.pagecache.tracing.PinEvent;\n public interface PageCursorTracer extends PageCursorCounters\n {\n \n-    PageCursorTracer NULL = new PageCursorTracer()\n+  PageCursorTracer NULL = new PageCursorTracer()\n+  {\n+    @Override\n+    public long faults()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long pins()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long unpins()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long hits()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long bytesRead()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long evictions()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long evictionExceptions()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long bytesWritten()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long flushes()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public double hitRatio()\n+    {\n+      return 0d;\n+    }\n+\n+    @Override\n+    public PinEvent beginPin(boolean writeLock, long filePageId, PageSwapper swapper)\n+    {\n+      return PinEvent.NULL;\n+    }\n+\n+    @Override\n+    public void init(PageCacheTracer tracer)\n+    {\n+\n+    }\n+\n+    @Override\n+    public void reportEvents()\n+    {\n+\n+    }\n+\n+    @Override\n+    public long accumulatedHits()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long accumulatedFaults()\n     {\n-        @Override\n-        public long faults()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long pins()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long unpins()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long hits()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long bytesRead()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long evictions()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long evictionExceptions()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long bytesWritten()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long flushes()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public double hitRatio()\n-        {\n-            return 0d;\n-        }\n-\n-        @Override\n-        public PinEvent beginPin( boolean writeLock, long filePageId, PageSwapper swapper )\n-        {\n-            return PinEvent.NULL;\n-        }\n-\n-        @Override\n-        public void init( PageCacheTracer tracer )\n-        {\n-\n-        }\n-\n-        @Override\n-        public void reportEvents()\n-        {\n-\n-        }\n-\n-        @Override\n-        public long accumulatedHits()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long accumulatedFaults()\n-        {\n-            return 0;\n-        }\n-    };\n-\n-    PinEvent beginPin( boolean writeLock, long filePageId, PageSwapper swapper );\n-\n-    /**\n-     * Initialize page cursor tracer with required context dependent values.\n-     * @param tracer page cache tracer\n-     */\n-    void init( PageCacheTracer tracer );\n-\n-    /**\n-     * Report to global page cache tracer events observed by current page cursor tracer.\n-     * As soon as any event will be reported, page cursor tracer reset corresponding counters and completely forgets\n-     * about all of them except for accumulated counterparts.\n-     */\n-    void reportEvents();\n-\n-    /**\n-     * Accumulated number of hits that tracer observed over all reporting cycles.\n-     * In counterpart to hits metric that reset each time when reporting cycle is over\n-     * @return accumulated number of hits\n-     */\n-    long accumulatedHits();\n-\n-    /**\n-     * Accumulated number of faults that tracer observed over all reporting cycles.\n-     * In counterpart to faults metric that reset each time when reporting cycle is over\n-     * @return accumulated number of faults\n-     */\n-    long accumulatedFaults();\n+      return 0;\n+    }\n+  };\n+\n+  PinEvent beginPin(boolean writeLock, long filePageId, PageSwapper swapper);\n+\n+  /**\n+   * Initialize page cursor tracer with required context dependent values.\n+   *\n+   * @param tracer page cache tracer\n+   */\n+  void init(PageCacheTracer tracer);\n+\n+  /**\n+   * Report to global page cache tracer events observed by current page cursor tracer.\n+   * As soon as any event will be reported, page cursor tracer reset corresponding counters and completely forgets\n+   * about all of them except for accumulated counterparts.\n+   */\n+  void reportEvents();\n+\n+  /**\n+   * Accumulated number of hits that tracer observed over all reporting cycles.\n+   * In counterpart to hits metric that reset each time when reporting cycle is over\n+   *\n+   * @return accumulated number of hits\n+   */\n+  long accumulatedHits();\n+\n+  /**\n+   * Accumulated number of faults that tracer observed over all reporting cycles.\n+   * In counterpart to faults metric that reset each time when reporting cycle is over\n+   *\n+   * @return accumulated number of faults\n+   */\n+  long accumulatedFaults();\n \n }\n",
            "diff_size": 209
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4342/PageCursorTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4342/PageCursorTracer.java\nindex 6d59f7dbd9e..482ac62e627 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4342/PageCursorTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4342/PageCursorTracer.java\n@@ -34,7 +34,6 @@ import org.neo4j.io.pagecache.tracing.PinEvent;\n  */\n public interface PageCursorTracer extends PageCursorCounters\n {\n-\n     PageCursorTracer NULL = new PageCursorTracer()\n     {\n         @Override\n@@ -106,14 +105,12 @@ public interface PageCursorTracer extends PageCursorCounters\n         @Override\n         public void init( PageCacheTracer tracer )\n         {\n-\n-        }\n+}\n \n         @Override\n         public void reportEvents()\n         {\n-\n-        }\n+}\n \n         @Override\n         public long accumulatedHits()\n@@ -156,5 +153,4 @@ public interface PageCursorTracer extends PageCursorCounters\n      * @return accumulated number of faults\n      */\n     long accumulatedFaults();\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
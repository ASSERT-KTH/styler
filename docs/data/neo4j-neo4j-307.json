{
    "project_name": "neo4j-neo4j",
    "error_id": "307",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "75",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/307/SimpleEntryStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/307/SimpleEntryStorage.java\nindex 321a1526ce9..b5a766e5d15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/307/SimpleEntryStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/307/SimpleEntryStorage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.Closeable;\n@@ -39,16 +40,16 @@ import static org.neo4j.util.concurrent.Runnables.runAll;\n \n /**\n  * Not thread safe, except for {@link #count()} which does not support calls concurrent with {@link #add(Object)}.\n- *\n+ * <p>\n  * Storage that store {@link ENTRY entries} in a file by simply appending them.\n  * Entries can be read back, in the order they where added, through a {@link CURSOR}.\n  * This storage is useful when we don't want to hold all entries in memory.\n- *\n+ * <p>\n  * Extending classes are responsible for serializing and deserializing entries.\n- *\n+ * <p>\n  * On close, file will be deleted but provided {@link ByteBufferFactory} will not be closed.\n  *\n- * @param <ENTRY> Type of entry we are storing.\n+ * @param <ENTRY>  Type of entry we are storing.\n  * @param <CURSOR> Cursor type responsible for deserializing what we have stored.\n  */\n public abstract class SimpleEntryStorage<ENTRY, CURSOR> implements Closeable\n@@ -71,7 +72,7 @@ public abstract class SimpleEntryStorage<ENTRY, CURSOR> implements Closeable\n \n     private final AtomicLong count = new AtomicLong();\n \n-    SimpleEntryStorage( FileSystemAbstraction fs, Path file, ByteBufferFactory.Allocator byteBufferFactory, int blockSize, MemoryTracker memoryTracker )\n+    SimpleEntryStorage(FileSystemAbstraction fs, Path file, ByteBufferFactory.Allocator byteBufferFactory, int blockSize, MemoryTracker memoryTracker)\n     {\n         this.fs = fs;\n         this.file = file;\n@@ -80,25 +81,25 @@ public abstract class SimpleEntryStorage<ENTRY, CURSOR> implements Closeable\n         this.memoryTracker = memoryTracker;\n     }\n \n-    void add( ENTRY entry ) throws IOException\n+    void add(ENTRY entry) throws IOException\n     {\n         allocateResources();\n-        add( entry, pageCursor );\n+        add(entry, pageCursor);\n         // a single thread, and the same thread every time, increments this count\n         count.incrementAndGet();\n     }\n \n     CURSOR reader() throws IOException\n     {\n-        if ( !allocated )\n+        if (!allocated)\n         {\n-            return reader( new ByteArrayPageCursor( NO_ENTRIES ) );\n+            return reader(new ByteArrayPageCursor(NO_ENTRIES));\n         }\n \n         // Reuse the existing buffer because we're not writing while reading anyway\n-        ReadAheadChannel<StoreChannel> channel = new ReadAheadChannel<>( fs.read( file ), byteBufferFactory.allocate( blockSize, memoryTracker ) );\n-        PageCursor pageCursor = new ReadableChannelPageCursor( channel );\n-        return reader( pageCursor );\n+        ReadAheadChannel<StoreChannel> channel = new ReadAheadChannel<>(fs.read(file), byteBufferFactory.allocate(blockSize, memoryTracker));\n+        PageCursor pageCursor = new ReadableChannelPageCursor(channel);\n+        return reader(pageCursor);\n     }\n \n     long count()\n@@ -108,31 +109,30 @@ public abstract class SimpleEntryStorage<ENTRY, CURSOR> implements Closeable\n \n     void doneAdding() throws IOException\n     {\n-        if ( !allocated )\n+        if (!allocated)\n         {\n             return;\n         }\n-        if ( buffer.remaining() < TYPE_SIZE )\n+        if (buffer.remaining() < TYPE_SIZE)\n         {\n             flush();\n         }\n-        pageCursor.putByte( STOP_TYPE );\n+        pageCursor.putByte(STOP_TYPE);\n         flush();\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n-        if ( allocated )\n+        if (allocated)\n         {\n-            runAll( \"Failed while trying to close \" + getClass().getSimpleName(),\n-                    () -> closeAllUnchecked( pageCursor, storeChannel, scopedBuffer ),\n-                    () -> fs.deleteFile( file )\n+            runAll(\"Failed while trying to close \" + getClass().getSimpleName(),\n+              () -> closeAllUnchecked(pageCursor, storeChannel, scopedBuffer),\n+              () -> fs.deleteFile(file)\n             );\n-        }\n-        else\n+        } else\n         {\n-            fs.deleteFile( file );\n+            fs.deleteFile(file);\n         }\n     }\n \n@@ -140,20 +140,20 @@ public abstract class SimpleEntryStorage<ENTRY, CURSOR> implements Closeable\n      * DON'T CALL THIS METHOD DIRECTLY. Instead, use {@link #add(Object)}.\n      * Write entry to pageCursor. Implementor of this method is responsible for calling {@link #prepareWrite(int)} before actually start writing.\n      */\n-    abstract void add( ENTRY entry, PageCursor pageCursor ) throws IOException;\n+    abstract void add(ENTRY entry, PageCursor pageCursor) throws IOException;\n \n     /**\n      * DON'T CALL THIS METHOD DIRECTLY. Instead use {@link #reader()}.\n      * Return {@link CURSOR} responsible for deserializing wrapping provided {@link PageCursor}, pointing to head of file.\n      */\n-    abstract CURSOR reader( PageCursor pageCursor ) throws IOException;\n+    abstract CURSOR reader(PageCursor pageCursor) throws IOException;\n \n     /**\n      * DON'T CALL THIS METHOD DIRECTLY. Only used by subclasses.\n      */\n-    void prepareWrite( int entrySize ) throws IOException\n+    void prepareWrite(int entrySize) throws IOException\n     {\n-        if ( entrySize > buffer.remaining() )\n+        if (entrySize > buffer.remaining())\n         {\n             flush();\n         }\n@@ -162,18 +162,18 @@ public abstract class SimpleEntryStorage<ENTRY, CURSOR> implements Closeable\n     private void flush() throws IOException\n     {\n         buffer.flip();\n-        storeChannel.writeAll( buffer );\n+        storeChannel.writeAll(buffer);\n         buffer.clear();\n     }\n \n     private void allocateResources() throws IOException\n     {\n-        if ( !allocated )\n+        if (!allocated)\n         {\n-            this.scopedBuffer = byteBufferFactory.allocate( blockSize, memoryTracker );\n+            this.scopedBuffer = byteBufferFactory.allocate(blockSize, memoryTracker);\n             this.buffer = scopedBuffer.getBuffer();\n-            this.pageCursor = new ByteArrayPageCursor( buffer );\n-            this.storeChannel = fs.write( file );\n+            this.pageCursor = new ByteArrayPageCursor(buffer);\n+            this.storeChannel = fs.write(file);\n             this.allocated = true;\n         }\n     }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
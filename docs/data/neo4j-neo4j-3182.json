{
    "project_name": "neo4j-neo4j",
    "error_id": "3182",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3182/BidirectionalTraversalDescriptionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3182/BidirectionalTraversalDescriptionImpl.java\nindex 000a3d61df8..d1a66125c51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3182/BidirectionalTraversalDescriptionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3182/BidirectionalTraversalDescriptionImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.traversal;\n \n import java.util.Arrays;\n@@ -45,11 +46,11 @@ public class BidirectionalTraversalDescriptionImpl implements BidirectionalTrave\n     final org.neo4j.graphdb.traversal.BranchCollisionPolicy collisionPolicy;\n     final int maxDepth;\n \n-    private BidirectionalTraversalDescriptionImpl( MonoDirectionalTraversalDescription start,\n-                                                   MonoDirectionalTraversalDescription end,\n-                                                   org.neo4j.graphdb.traversal.BranchCollisionPolicy collisionPolicy,\n-                                                   PathEvaluator collisionEvaluator, SideSelectorPolicy sideSelector,\n-                                                   int maxDepth )\n+    private BidirectionalTraversalDescriptionImpl(MonoDirectionalTraversalDescription start,\n+                                                  MonoDirectionalTraversalDescription end,\n+                                                  org.neo4j.graphdb.traversal.BranchCollisionPolicy collisionPolicy,\n+                                                  PathEvaluator collisionEvaluator, SideSelectorPolicy sideSelector,\n+                                                  int maxDepth)\n     {\n         this.start = start;\n         this.end = end;\n@@ -59,94 +60,94 @@ public class BidirectionalTraversalDescriptionImpl implements BidirectionalTrave\n         this.maxDepth = maxDepth;\n     }\n \n-    public BidirectionalTraversalDescriptionImpl( )\n+    public BidirectionalTraversalDescriptionImpl()\n     {\n-        this( new MonoDirectionalTraversalDescription(), new MonoDirectionalTraversalDescription(),\n-                STANDARD,\n-                Evaluators.all(), ALTERNATING,\n-                Integer.MAX_VALUE );\n+        this(new MonoDirectionalTraversalDescription(), new MonoDirectionalTraversalDescription(),\n+          STANDARD,\n+          Evaluators.all(), ALTERNATING,\n+          Integer.MAX_VALUE);\n     }\n \n     @Override\n-    public BidirectionalTraversalDescription startSide( TraversalDescription startSideDescription )\n+    public BidirectionalTraversalDescription startSide(TraversalDescription startSideDescription)\n     {\n-        assertIsMonoDirectional( startSideDescription );\n-        return new BidirectionalTraversalDescriptionImpl( (MonoDirectionalTraversalDescription)startSideDescription,\n-                this.end, this.collisionPolicy, this.collisionEvaluator, this.sideSelector,\n-                this.maxDepth );\n+        assertIsMonoDirectional(startSideDescription);\n+        return new BidirectionalTraversalDescriptionImpl((MonoDirectionalTraversalDescription) startSideDescription,\n+          this.end, this.collisionPolicy, this.collisionEvaluator, this.sideSelector,\n+          this.maxDepth);\n     }\n \n     @Override\n-    public BidirectionalTraversalDescription endSide( TraversalDescription endSideDescription )\n+    public BidirectionalTraversalDescription endSide(TraversalDescription endSideDescription)\n     {\n-        assertIsMonoDirectional( endSideDescription );\n-        return new BidirectionalTraversalDescriptionImpl( this.start,\n-                (MonoDirectionalTraversalDescription)endSideDescription,\n-                this.collisionPolicy, this.collisionEvaluator, this.sideSelector, this.maxDepth );\n+        assertIsMonoDirectional(endSideDescription);\n+        return new BidirectionalTraversalDescriptionImpl(this.start,\n+          (MonoDirectionalTraversalDescription) endSideDescription,\n+          this.collisionPolicy, this.collisionEvaluator, this.sideSelector, this.maxDepth);\n     }\n \n     @Override\n-    public BidirectionalTraversalDescription mirroredSides( TraversalDescription sideDescription )\n+    public BidirectionalTraversalDescription mirroredSides(TraversalDescription sideDescription)\n     {\n-        assertIsMonoDirectional( sideDescription );\n+        assertIsMonoDirectional(sideDescription);\n         return new BidirectionalTraversalDescriptionImpl(\n-                (MonoDirectionalTraversalDescription)sideDescription,\n-                (MonoDirectionalTraversalDescription)sideDescription.reverse(),\n-                collisionPolicy, collisionEvaluator, sideSelector, maxDepth );\n+          (MonoDirectionalTraversalDescription) sideDescription,\n+          (MonoDirectionalTraversalDescription) sideDescription.reverse(),\n+          collisionPolicy, collisionEvaluator, sideSelector, maxDepth);\n     }\n \n     @Override\n-    public BidirectionalTraversalDescription collisionPolicy( BranchCollisionPolicy collisionPolicy )\n+    public BidirectionalTraversalDescription collisionPolicy(BranchCollisionPolicy collisionPolicy)\n     {\n-        return new BidirectionalTraversalDescriptionImpl( this.start, this.end, collisionPolicy,\n-                this.collisionEvaluator, this.sideSelector, this.maxDepth );\n+        return new BidirectionalTraversalDescriptionImpl(this.start, this.end, collisionPolicy,\n+          this.collisionEvaluator, this.sideSelector, this.maxDepth);\n     }\n \n     @Override\n-    public BidirectionalTraversalDescription collisionEvaluator( PathEvaluator collisionEvaluator )\n+    public BidirectionalTraversalDescription collisionEvaluator(PathEvaluator collisionEvaluator)\n     {\n-        nullCheck( collisionEvaluator, Evaluator.class, \"RETURN_ALL\" );\n-        return new BidirectionalTraversalDescriptionImpl( this.start, this.end, this.collisionPolicy,\n-                addEvaluator( this.collisionEvaluator, collisionEvaluator ), this.sideSelector, maxDepth );\n+        nullCheck(collisionEvaluator, Evaluator.class, \"RETURN_ALL\");\n+        return new BidirectionalTraversalDescriptionImpl(this.start, this.end, this.collisionPolicy,\n+          addEvaluator(this.collisionEvaluator, collisionEvaluator), this.sideSelector, maxDepth);\n     }\n \n     @Override\n-    public BidirectionalTraversalDescription collisionEvaluator( Evaluator collisionEvaluator )\n+    public BidirectionalTraversalDescription collisionEvaluator(Evaluator collisionEvaluator)\n     {\n-        return collisionEvaluator( new Evaluator.AsPathEvaluator( collisionEvaluator ) );\n+        return collisionEvaluator(new Evaluator.AsPathEvaluator(collisionEvaluator));\n     }\n \n     @Override\n-    public BidirectionalTraversalDescription sideSelector( SideSelectorPolicy sideSelector, int maxDepth )\n+    public BidirectionalTraversalDescription sideSelector(SideSelectorPolicy sideSelector, int maxDepth)\n     {\n-        return new BidirectionalTraversalDescriptionImpl( this.start, this.end, this.collisionPolicy,\n-                this.collisionEvaluator, sideSelector, maxDepth );\n+        return new BidirectionalTraversalDescriptionImpl(this.start, this.end, this.collisionPolicy,\n+          this.collisionEvaluator, sideSelector, maxDepth);\n     }\n \n     @Override\n-    public Traverser traverse( Node start, Node end )\n+    public Traverser traverse(Node start, Node end)\n     {\n-        return traverse( Arrays.asList( start ), Arrays.asList( end ) );\n+        return traverse(Arrays.asList(start), Arrays.asList(end));\n     }\n \n     @Override\n-    public Traverser traverse( final Iterable<Node> startNodes, final Iterable<Node> endNodes )\n+    public Traverser traverse(final Iterable<Node> startNodes, final Iterable<Node> endNodes)\n     {\n-        return new DefaultTraverser( () -> new BidirectionalTraverserIterator( start, end, sideSelector, collisionPolicy,\n-                        collisionEvaluator, maxDepth, startNodes, endNodes ) );\n+        return new DefaultTraverser(() -> new BidirectionalTraverserIterator(start, end, sideSelector, collisionPolicy,\n+          collisionEvaluator, maxDepth, startNodes, endNodes));\n     }\n \n     /**\n      * We currently only support mono-directional traversers as \"inner\" traversers, so we need to check specifically\n      * for this when the user specifies traversers to work with.\n      */\n-    private void assertIsMonoDirectional( TraversalDescription traversal )\n+    private void assertIsMonoDirectional(TraversalDescription traversal)\n     {\n-        if ( !(traversal instanceof MonoDirectionalTraversalDescription) )\n+        if (!(traversal instanceof MonoDirectionalTraversalDescription))\n         {\n-            throw new IllegalArgumentException( \"The bi-directional traversals currently do not support using \" +\n-                    \"anything but mono-directional traversers as start and stop points. Please provide a regular \" +\n-                    \"mono-directional traverser instead.\" );\n+            throw new IllegalArgumentException(\"The bi-directional traversals currently do not support using \" +\n+              \"anything but mono-directional traversers as start and stop points. Please provide a regular \" +\n+              \"mono-directional traverser instead.\");\n         }\n     }\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3182/BidirectionalTraversalDescriptionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3182/BidirectionalTraversalDescriptionImpl.java\nindex 000a3d61df8..89085a99882 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3182/BidirectionalTraversalDescriptionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3182/BidirectionalTraversalDescriptionImpl.java\n@@ -45,12 +45,11 @@ public class BidirectionalTraversalDescriptionImpl implements BidirectionalTrave\n     final org.neo4j.graphdb.traversal.BranchCollisionPolicy collisionPolicy;\n     final int maxDepth;\n \n-    private BidirectionalTraversalDescriptionImpl( MonoDirectionalTraversalDescription start,\n-                                                   MonoDirectionalTraversalDescription end,\n+    private BidirectionalTraversalDescriptionImpl( MonoDirectionalTraversalDescription start, MonoDirectionalTraversalDescription end,\n                                                    org.neo4j.graphdb.traversal.BranchCollisionPolicy collisionPolicy,\n                                                    PathEvaluator collisionEvaluator, SideSelectorPolicy sideSelector,\n                                                    int maxDepth )\n-    {\n+{\n         this.start = start;\n         this.end = end;\n         this.collisionPolicy = collisionPolicy;\n@@ -132,8 +131,7 @@ public class BidirectionalTraversalDescriptionImpl implements BidirectionalTrave\n     @Override\n     public Traverser traverse( final Iterable<Node> startNodes, final Iterable<Node> endNodes )\n     {\n-        return new DefaultTraverser( () -> new BidirectionalTraverserIterator( start, end, sideSelector, collisionPolicy,\n-                        collisionEvaluator, maxDepth, startNodes, endNodes ) );\n+        return new DefaultTraverser( () -> new BidirectionalTraverserIterator( start, end, sideSelector, collisionPolicy, collisionEvaluator, maxDepth, startNodes, endNodes ) );\n     }\n \n     /**\n@@ -149,4 +147,4 @@ public class BidirectionalTraversalDescriptionImpl implements BidirectionalTrave\n                     \"mono-directional traverser instead.\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
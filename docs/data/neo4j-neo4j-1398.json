{
    "project_name": "neo4j-neo4j",
    "error_id": "1398",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1398/AdversarialReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1398/AdversarialReader.java\nindex 9d072ced23f..2b8638ec817 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1398/AdversarialReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1398/AdversarialReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.adversaries.fs;\n \n import java.io.IOException;\n@@ -26,72 +27,72 @@ import java.nio.CharBuffer;\n \n import org.neo4j.adversaries.Adversary;\n \n-@SuppressWarnings( \"unchecked\" )\n+@SuppressWarnings(\"unchecked\")\n public class AdversarialReader extends Reader\n {\n     private final Reader reader;\n     private final Adversary adversary;\n \n-    public AdversarialReader( Reader reader, Adversary adversary )\n+    public AdversarialReader(Reader reader, Adversary adversary)\n     {\n         this.reader = reader;\n         this.adversary = adversary;\n     }\n \n     @Override\n-    public int read( CharBuffer target ) throws IOException\n+    public int read(CharBuffer target) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief(\n-                IOException.class, BufferOverflowException.class, IndexOutOfBoundsException.class ) )\n+        if (adversary.injectFailureOrMischief(\n+          IOException.class, BufferOverflowException.class, IndexOutOfBoundsException.class))\n         {\n             CharBuffer dup = target.duplicate();\n-            dup.limit( Math.max( target.limit() / 2, 1 ) );\n-            return reader.read( dup );\n+            dup.limit(Math.max(target.limit() / 2, 1));\n+            return reader.read(dup);\n         }\n-        return reader.read( target );\n+        return reader.read(target);\n     }\n \n     @Override\n     public int read() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         return reader.read();\n     }\n \n     @Override\n-    public int read( char[] cbuf ) throws IOException\n+    public int read(char[] cbuf) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class))\n         {\n-            char[] dup = new char[ Math.max( cbuf.length / 2, 1 ) ];\n-            int read = reader.read( dup );\n-            System.arraycopy( dup, 0, cbuf, 0, read );\n+            char[] dup = new char[Math.max(cbuf.length / 2, 1)];\n+            int read = reader.read(dup);\n+            System.arraycopy(dup, 0, cbuf, 0, read);\n             return read;\n         }\n-        return reader.read( cbuf );\n+        return reader.read(cbuf);\n     }\n \n     @Override\n-    public int read( char[] cbuf, int off, int len ) throws IOException\n+    public int read(char[] cbuf, int off, int len) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class))\n         {\n-            return reader.read( cbuf, off, Math.max( len / 2, 1 ) );\n+            return reader.read(cbuf, off, Math.max(len / 2, 1));\n         }\n-        return reader.read( cbuf, off, len );\n+        return reader.read(cbuf, off, len);\n     }\n \n     @Override\n-    public long skip( long n ) throws IOException\n+    public long skip(long n) throws IOException\n     {\n-        adversary.injectFailure( IllegalArgumentException.class, IOException.class );\n-        return reader.skip( n );\n+        adversary.injectFailure(IllegalArgumentException.class, IOException.class);\n+        return reader.skip(n);\n     }\n \n     @Override\n     public boolean ready() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         return reader.ready();\n     }\n \n@@ -103,23 +104,23 @@ public class AdversarialReader extends Reader\n     }\n \n     @Override\n-    public void mark( int readAheadLimit ) throws IOException\n+    public void mark(int readAheadLimit) throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n-        reader.mark( readAheadLimit );\n+        adversary.injectFailure(IOException.class);\n+        reader.mark(readAheadLimit);\n     }\n \n     @Override\n     public void reset() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         reader.reset();\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         reader.close();\n     }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1398/AdversarialReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1398/AdversarialReader.java\nindex 9d072ced23f..33376f63ee0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1398/AdversarialReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1398/AdversarialReader.java\n@@ -122,4 +122,4 @@ public class AdversarialReader extends Reader\n         adversary.injectFailure( IOException.class );\n         reader.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
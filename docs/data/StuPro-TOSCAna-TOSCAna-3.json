{
    "project_name": "StuPro-TOSCAna-TOSCAna",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "112",
                "column": "5",
                "severity": "error",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n    /**\n     @return {@link #privateAddress}\n     */\n    public Optional<String> getPrivateAddress() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler/3/Compute.java\nindex 48a69c249fd..cb9aba039f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler/3/Compute.java\n@@ -108,7 +108,6 @@ public class Compute extends RootNode {\n             .localStorage(localStorage);\n     }\n \n-\n     /**\n      @return {@link #privateAddress}\n      */\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "112",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/intellij/3/Compute.java\nindex 48a69c249fd..34ff1af0742 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/intellij/3/Compute.java\n@@ -21,33 +21,33 @@ import lombok.Builder;\n import lombok.Data;\n \n /**\n- Represents one or more real or virtual processors of software applications or services along with other essential local resources.\n- Collectively, the resources the compute node represents can logically be viewed as a (real or virtual) \u201cserver\u201d.\n- (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n+ * Represents one or more real or virtual processors of software applications or services along with other essential local resources.\n+ * Collectively, the resources the compute node represents can logically be viewed as a (real or virtual) \u201cserver\u201d.\n+ * (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n  */\n @Data\n public class Compute extends RootNode {\n     /**\n-     The optional primary private IP address assigned by the cloud provider that applications may use to access the Compute node.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n+     * The optional primary private IP address assigned by the cloud provider that applications may use to access the Compute node.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n      */\n     private final String privateAddress;\n \n     /**\n-     The optional primary public IP address assigned by the cloud provider that applications may use to access the Compute node.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n+     * The optional primary public IP address assigned by the cloud provider that applications may use to access the Compute node.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n      */\n     private final String publicAddress;\n \n     /**\n-     The collection of logical networks assigned to the compute host instance and information about them.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n+     * The collection of logical networks assigned to the compute host instance and information about them.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n      */\n     private final Set<NetworkInfo> networks = new HashSet<>();\n \n     /**\n-     The set of logical ports assigned to this compute host instance and information about them.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n+     * The set of logical ports assigned to this compute host instance and information about them.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n      */\n     private final Set<PortInfo> ports = new HashSet<>();\n \n@@ -89,17 +89,17 @@ public class Compute extends RootNode {\n     }\n \n     /**\n-     @param nodeName      {@link #nodeName}\n-     @param adminEndpoint {@link #adminEndpoint}\n-     @param scalable      {@link #scalable}\n-     @param binding       {@link #binding}\n-     @param localStorage  {@link #localStorage}\n+     * @param nodeName      {@link #nodeName}\n+     * @param adminEndpoint {@link #adminEndpoint}\n+     * @param scalable      {@link #scalable}\n+     * @param binding       {@link #binding}\n+     * @param localStorage  {@link #localStorage}\n      */\n     public static ComputeBuilder builder(String nodeName,\n-                                  AdminEndpointCapability adminEndpoint,\n-                                  ScalableCapability scalable,\n-                                  BindableCapability binding,\n-                                  Requirement<AttachmentCapability, BlockStorage, AttachesTo> localStorage) {\n+                                         AdminEndpointCapability adminEndpoint,\n+                                         ScalableCapability scalable,\n+                                         BindableCapability binding,\n+                                         Requirement<AttachmentCapability, BlockStorage, AttachesTo> localStorage) {\n         return new ComputeBuilder()\n             .nodeName(nodeName)\n             .adminEndpoint(adminEndpoint)\n@@ -110,14 +110,14 @@ public class Compute extends RootNode {\n \n \n     /**\n-     @return {@link #privateAddress}\n+     * @return {@link #privateAddress}\n      */\n     public Optional<String> getPrivateAddress() {\n         return Optional.ofNullable(privateAddress);\n     }\n \n     /**\n-     @return {@link #publicAddress}\n+     * @return {@link #publicAddress}\n      */\n     public Optional<String> getPublicAddress() {\n         return Optional.ofNullable(publicAddress);\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/naturalize/3/Compute.java\nindex 48a69c249fd..6a59d60b668 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/naturalize/3/Compute.java\n@@ -62,8 +62,7 @@ public class Compute extends RootNode {\n     private final Requirement<AttachmentCapability, BlockStorage, AttachesTo> localStorage;\n \n     @Builder\n-    protected Compute(String privateAddress,\n-                      String publicAddress,\n+    protected Compute(String privateAddress, String publicAddress,\n                       ContainerCapability host,\n                       AdminEndpointCapability adminEndpoint,\n                       ScalableCapability scalable,\n@@ -72,7 +71,7 @@ public class Compute extends RootNode {\n                       String nodeName,\n                       StandardLifecycle standardLifecycle,\n                       String description) {\n-        super(nodeName, standardLifecycle, description);\n+    super(nodeName, standardLifecycle, description);\n         this.privateAddress = privateAddress;\n         this.publicAddress = publicAddress;\n         this.host = Objects.requireNonNull(host);\n@@ -95,12 +94,11 @@ public class Compute extends RootNode {\n      @param binding       {@link #binding}\n      @param localStorage  {@link #localStorage}\n      */\n-    public static ComputeBuilder builder(String nodeName,\n-                                  AdminEndpointCapability adminEndpoint,\n+    public static ComputeBuilder builder(String nodeName, AdminEndpointCapability adminEndpoint,\n                                   ScalableCapability scalable,\n                                   BindableCapability binding,\n                                   Requirement<AttachmentCapability, BlockStorage, AttachesTo> localStorage) {\n-        return new ComputeBuilder()\n+    return new ComputeBuilder()\n             .nodeName(nodeName)\n             .adminEndpoint(adminEndpoint)\n             .scalable(scalable)\n@@ -108,8 +106,7 @@ public class Compute extends RootNode {\n             .localStorage(localStorage);\n     }\n \n-\n-    /**\n+/**\n      @return {@link #privateAddress}\n      */\n     public Optional<String> getPrivateAddress() {\n@@ -127,5 +124,4 @@ public class Compute extends RootNode {\n     public void accept(NodeVisitor v) {\n         v.visit(this);\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "109",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "114",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "123",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/codebuff/3/Compute.java\nindex 48a69c249fd..c807c1746e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/codebuff/3/Compute.java\n@@ -4,7 +4,6 @@ import java.util.HashSet;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.Set;\n-\n import org.opentosca.toscana.model.capability.AdminEndpointCapability;\n import org.opentosca.toscana.model.capability.AttachmentCapability;\n import org.opentosca.toscana.model.capability.BindableCapability;\n@@ -16,7 +15,6 @@ import org.opentosca.toscana.model.datatype.PortInfo;\n import org.opentosca.toscana.model.operation.StandardLifecycle;\n import org.opentosca.toscana.model.relation.AttachesTo;\n import org.opentosca.toscana.model.visitor.NodeVisitor;\n-\n import lombok.Builder;\n import lombok.Data;\n \n@@ -25,12 +23,14 @@ import lombok.Data;\n  Collectively, the resources the compute node represents can logically be viewed as a (real or virtual) \u201cserver\u201d.\n  (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n  */\n+\n @Data\n public class Compute extends RootNode {\n     /**\n      The optional primary private IP address assigned by the cloud provider that applications may use to access the Compute node.\n      (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n      */\n+\n     private final String privateAddress;\n \n     /**\n@@ -50,28 +50,24 @@ public class Compute extends RootNode {\n      (TOSCA Simple Profile in YAML Version 1.1, p. 169)\n      */\n     private final Set<PortInfo> ports = new HashSet<>();\n-\n     private final ContainerCapability host;\n-\n     private final AdminEndpointCapability adminEndpoint;\n-\n     private final ScalableCapability scalable;\n-\n     private final BindableCapability binding;\n-\n     private final Requirement<AttachmentCapability, BlockStorage, AttachesTo> localStorage;\n \n     @Builder\n-    protected Compute(String privateAddress,\n-                      String publicAddress,\n-                      ContainerCapability host,\n-                      AdminEndpointCapability adminEndpoint,\n-                      ScalableCapability scalable,\n-                      BindableCapability binding,\n-                      Requirement<AttachmentCapability, BlockStorage, AttachesTo> localStorage,\n-                      String nodeName,\n-                      StandardLifecycle standardLifecycle,\n-                      String description) {\n+    protected Compute(\n+        String privateAddress,\n+        String publicAddress,\n+        ContainerCapability host,\n+        AdminEndpointCapability adminEndpoint,\n+        ScalableCapability scalable,\n+        BindableCapability binding,\n+        Requirement<AttachmentCapability, BlockStorage, AttachesTo> localStorage,\n+        String nodeName,\n+        StandardLifecycle standardLifecycle, String description\n+    ) {\n         super(nodeName, standardLifecycle, description);\n         this.privateAddress = privateAddress;\n         this.publicAddress = publicAddress;\n@@ -80,7 +76,6 @@ public class Compute extends RootNode {\n         this.scalable = Objects.requireNonNull(scalable);\n         this.binding = Objects.requireNonNull(binding);\n         this.localStorage = Objects.requireNonNull(localStorage);\n-\n         capabilities.add(host);\n         capabilities.add(adminEndpoint);\n         capabilities.add(scalable);\n@@ -95,11 +90,13 @@ public class Compute extends RootNode {\n      @param binding       {@link #binding}\n      @param localStorage  {@link #localStorage}\n      */\n-    public static ComputeBuilder builder(String nodeName,\n-                                  AdminEndpointCapability adminEndpoint,\n-                                  ScalableCapability scalable,\n-                                  BindableCapability binding,\n-                                  Requirement<AttachmentCapability, BlockStorage, AttachesTo> localStorage) {\n+\n+    public static ComputeBuilder builder(\n+        String nodeName,\n+        AdminEndpointCapability adminEndpoint,\n+        ScalableCapability scalable,\n+        BindableCapability binding, Requirement<AttachmentCapability, BlockStorage, AttachesTo> localStorage\n+    ) {\n         return new ComputeBuilder()\n             .nodeName(nodeName)\n             .adminEndpoint(adminEndpoint)\n@@ -112,6 +109,8 @@ public class Compute extends RootNode {\n     /**\n      @return {@link #privateAddress}\n      */\n+\n+\n     public Optional<String> getPrivateAddress() {\n         return Optional.ofNullable(privateAddress);\n     }\n@@ -119,6 +118,8 @@ public class Compute extends RootNode {\n     /**\n      @return {@link #publicAddress}\n      */\n+\n+\n     public Optional<String> getPublicAddress() {\n         return Optional.ofNullable(publicAddress);\n     }\n@@ -127,5 +128,4 @@ public class Compute extends RootNode {\n     public void accept(NodeVisitor v) {\n         v.visit(this);\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_random/3/Compute.java\nindex 48a69c249fd..918c529ab1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_random/3/Compute.java\n@@ -108,10 +108,10 @@ public class Compute extends RootNode {\n             .localStorage(localStorage);\n     }\n \n-\n     /**\n      @return {@link #privateAddress}\n      */\n+\n     public Optional<String> getPrivateAddress() {\n         return Optional.ofNullable(privateAddress);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_three_grams/3/Compute.java\nindex 48a69c249fd..cb9aba039f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/3/Compute.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_three_grams/3/Compute.java\n@@ -108,7 +108,6 @@ public class Compute extends RootNode {\n             .localStorage(localStorage);\n     }\n \n-\n     /**\n      @return {@link #privateAddress}\n      */\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
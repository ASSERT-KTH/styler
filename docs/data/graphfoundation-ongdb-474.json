{
    "project_name": "graphfoundation-ongdb",
    "error_id": "474",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/474/LocalOperationId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/474/LocalOperationId.java\nindex 76b3f977a78..7ab336953b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/474/LocalOperationId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/474/LocalOperationId.java\n@@ -17,64 +17,67 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.replication.session;\n \n import static java.lang.String.format;\n \n-/** Uniquely identifies an operation as performed under a global session. */\n+/**\n+ * Uniquely identifies an operation as performed under a global session.\n+ */\n public class LocalOperationId\n {\n-    private final long localSessionId;\n-    private final long sequenceNumber;\n+  private final long localSessionId;\n+  private final long sequenceNumber;\n \n-    public LocalOperationId( long localSessionId, long sequenceNumber )\n-    {\n-        this.localSessionId = localSessionId;\n-        this.sequenceNumber = sequenceNumber;\n-    }\n+  public LocalOperationId(long localSessionId, long sequenceNumber)\n+  {\n+    this.localSessionId = localSessionId;\n+    this.sequenceNumber = sequenceNumber;\n+  }\n \n-    public long localSessionId()\n-    {\n-        return localSessionId;\n-    }\n+  public long localSessionId()\n+  {\n+    return localSessionId;\n+  }\n \n-    public long sequenceNumber()\n-    {\n-        return sequenceNumber;\n-    }\n+  public long sequenceNumber()\n+  {\n+    return sequenceNumber;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        LocalOperationId that = (LocalOperationId) o;\n-\n-        if ( localSessionId != that.localSessionId )\n-        {\n-            return false;\n-        }\n-        return sequenceNumber == that.sequenceNumber;\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        int result = (int) (localSessionId ^ (localSessionId >>> 32));\n-        result = 31 * result + (int) (sequenceNumber ^ (sequenceNumber >>> 32));\n-        return result;\n+      return false;\n     }\n \n-    @Override\n-    public String toString()\n+    LocalOperationId that = (LocalOperationId) o;\n+\n+    if (localSessionId != that.localSessionId)\n     {\n-        return format( \"LocalOperationId{localSessionId=%d, sequenceNumber=%d}\", localSessionId, sequenceNumber );\n+      return false;\n     }\n+    return sequenceNumber == that.sequenceNumber;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = (int) (localSessionId ^ (localSessionId >>> 32));\n+    result = 31 * result + (int) (sequenceNumber ^ (sequenceNumber >>> 32));\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"LocalOperationId{localSessionId=%d, sequenceNumber=%d}\", localSessionId, sequenceNumber);\n+  }\n }\n",
            "diff_size": 65
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "72",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/474/LocalOperationId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/474/LocalOperationId.java\nindex 76b3f977a78..36d24d8ef3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/474/LocalOperationId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/474/LocalOperationId.java\n@@ -50,7 +50,8 @@ public class LocalOperationId\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -61,14 +62,15 @@ public class LocalOperationId\n         {\n             return false;\n         }\n-        return sequenceNumber == that.sequenceNumber;\n+\n+return sequenceNumber == that.sequenceNumber;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        int result = (int) (localSessionId ^ (localSessionId >>> 32));\n-        result = 31 * result + (int) (sequenceNumber ^ (sequenceNumber >>> 32));\n+        int result = ( int) ( localSessionId ^ ( localSessionId >>> 32 ));\n+        result = 31 * result + ( int) ( sequenceNumber ^ ( sequenceNumber >>> 32 ));\n         return result;\n     }\n \n@@ -77,4 +79,4 @@ public class LocalOperationId\n     {\n         return format( \"LocalOperationId{localSessionId=%d, sequenceNumber=%d}\", localSessionId, sequenceNumber );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
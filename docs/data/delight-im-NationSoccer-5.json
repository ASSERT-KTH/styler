{
    "project_name": "delight-im-NationSoccer",
    "error_id": "5",
    "information": {
        "errors": [
            {
                "line": "93",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n\t\tthis.mPriority = pPriority;\n\t\tif(this.mStreamID != 0) {\n\t\t\tthis.getSoundPool().setPriority(this.mStreamID, pPriority);\n\t\t}\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/5/Sound.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/intellij/5/Sound.java\nindex 0ae2900d839..0444defc8fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/5/Sound.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/intellij/5/Sound.java\n@@ -13,187 +13,194 @@ import android.media.SoundPool;\n  * @since 13:22:15 - 11.03.2010\n  */\n public class Sound extends BaseAudioEntity {\n-\t// ===========================================================\n-\t// Constants\n-\t// ===========================================================\n+    // ===========================================================\n+    // Constants\n+    // ===========================================================\n+\n+    // ===========================================================\n+    // Fields\n+    // ===========================================================\n+\n+    private int mSoundID;\n+    private int mStreamID;\n \n-\t// ===========================================================\n-\t// Fields\n-\t// ===========================================================\n+    private boolean mLoaded;\n+\n+    private int mLoopCount;\n+    private float mRate = 1.0f;\n+    private int mPriority = 1;\n+\n+    // ===========================================================\n+    // Constructors\n+    // ===========================================================\n+\n+    Sound(final SoundManager pSoundManager, final int pSoundID) {\n+        super(pSoundManager);\n+\n+        this.mSoundID = pSoundID;\n+    }\n \n-\tprivate int mSoundID;\n-\tprivate int mStreamID;\n+    // ===========================================================\n+    // Getter & Setter\n+    // ===========================================================\n+\n+    public int getSoundID() {\n+        return this.mSoundID;\n+    }\n+\n+    public int getStreamID() {\n+        return this.mStreamID;\n+    }\n+\n+    public boolean isLoaded() {\n+        return this.mLoaded;\n+    }\n+\n+    public void setLoaded(final boolean pLoaded) {\n+        this.mLoaded = pLoaded;\n+    }\n+\n+    public void setLoopCount(final int pLoopCount)\n+        throws SoundReleasedException {\n+        this.assertNotReleased();\n \n-\tprivate boolean mLoaded;\n-\n-\tprivate int mLoopCount;\n-\tprivate float mRate = 1.0f;\n-\tprivate int mPriority = 1;\n-\n-\t// ===========================================================\n-\t// Constructors\n-\t// ===========================================================\n-\n-\tSound(final SoundManager pSoundManager, final int pSoundID) {\n-\t\tsuper(pSoundManager);\n-\n-\t\tthis.mSoundID = pSoundID;\n-\t}\n-\n-\t// ===========================================================\n-\t// Getter & Setter\n-\t// ===========================================================\n-\n-\tpublic int getSoundID() {\n-\t\treturn this.mSoundID;\n-\t}\n-\n-\tpublic int getStreamID() {\n-\t\treturn this.mStreamID;\n-\t}\n-\n-\tpublic boolean isLoaded() {\n-\t\treturn this.mLoaded;\n-\t}\n-\n-\tpublic void setLoaded(final boolean pLoaded) {\n-\t\tthis.mLoaded = pLoaded;\n-\t}\n-\n-\tpublic void setLoopCount(final int pLoopCount) throws SoundReleasedException {\n-\t\tthis.assertNotReleased();\n-\n-\t\tthis.mLoopCount = pLoopCount;\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().setLoop(this.mStreamID, pLoopCount);\n-\t\t}\n-\t}\n-\n-\tpublic float getRate() {\n-\t\treturn this.mRate;\n-\t}\n-\n-\tpublic void setRate(final float pRate) throws SoundReleasedException {\n-\t\tthis.assertNotReleased();\n-\n-\t\tthis.mRate = pRate;\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().setRate(this.mStreamID, pRate);\n-\t\t}\n-\t}\n-\n-\tpublic int getPriority() {\n-\t\treturn this.mPriority;\n-\t}\n-\n-\tpublic void setPrioriyt(final int pPriority) throws SoundReleasedException {\n-\t\tthis.assertNotReleased();\n-\n-\t\tthis.mPriority = pPriority;\n-\t\tif(this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().setPriority(this.mStreamID, pPriority);\n-\t\t}\n-\t}\n-\n-\tprivate SoundPool getSoundPool() throws SoundReleasedException {\n-\t\treturn this.getAudioManager().getSoundPool();\n-\t}\n-\n-\t// ===========================================================\n-\t// Methods for/from SuperClass/Interfaces\n-\t// ===========================================================\n-\n-\t@Override\n-\tprotected SoundManager getAudioManager() throws SoundReleasedException {\n-\t\treturn (SoundManager) super.getAudioManager();\n-\t}\n-\n-\t@Override\n-\tprotected void throwOnReleased() throws SoundReleasedException {\n-\t\tthrow new SoundReleasedException();\n-\t}\n-\n-\t@Override\n-\tpublic void play() throws SoundReleasedException {\n-\t\tsuper.play();\n-\n-\t\tfinal float masterVolume = this.getMasterVolume();\n-\t\tfinal float leftVolume = this.mLeftVolume * masterVolume;\n-\t\tfinal float rightVolume = this.mRightVolume * masterVolume;\n-\n-\t\tthis.mStreamID = this.getSoundPool().play(this.mSoundID, leftVolume, rightVolume, this.mPriority, this.mLoopCount, this.mRate);\n-\t}\n-\n-\t@Override\n-\tpublic void stop() throws SoundReleasedException {\n-\t\tsuper.stop();\n-\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().stop(this.mStreamID);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void resume() throws SoundReleasedException {\n-\t\tsuper.resume();\n-\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().resume(this.mStreamID);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void pause() throws SoundReleasedException {\n-\t\tsuper.pause();\n-\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().pause(this.mStreamID);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void release() throws SoundReleasedException {\n-\t\tthis.assertNotReleased();\n-\n-\t\tthis.getSoundPool().unload(this.mSoundID);\n-\t\tthis.mSoundID = 0;\n-\t\tthis.mLoaded = false;\n-\n-\t\tthis.getAudioManager().remove(this);\n-\n-\t\tsuper.release();\n-\t}\n-\n-\t@Override\n-\tpublic void setLooping(final boolean pLooping) throws SoundReleasedException {\n-\t\tsuper.setLooping(pLooping);\n-\n-\t\tthis.setLoopCount((pLooping) ? -1 : 0);\n-\t}\n-\n-\t@Override\n-\tpublic void setVolume(final float pLeftVolume, final float pRightVolume) throws SoundReleasedException {\n-\t\tsuper.setVolume(pLeftVolume, pRightVolume);\n-\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tfinal float masterVolume = this.getMasterVolume();\n-\t\t\tfinal float leftVolume = this.mLeftVolume * masterVolume;\n-\t\t\tfinal float rightVolume = this.mRightVolume * masterVolume;\n-\n-\t\t\tthis.getSoundPool().setVolume(this.mStreamID, leftVolume, rightVolume);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void onMasterVolumeChanged(final float pMasterVolume) throws SoundReleasedException {\n-\t\tthis.setVolume(this.mLeftVolume, this.mRightVolume);\n-\t}\n-\n-\t// ===========================================================\n-\t// Methods\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Inner and Anonymous Classes\n-\t// ===========================================================\n+        this.mLoopCount = pLoopCount;\n+        if (this.mStreamID != 0) {\n+            this.getSoundPool().setLoop(this.mStreamID, pLoopCount);\n+        }\n+    }\n+\n+    public float getRate() {\n+        return this.mRate;\n+    }\n+\n+    public void setRate(final float pRate) throws SoundReleasedException {\n+        this.assertNotReleased();\n+\n+        this.mRate = pRate;\n+        if (this.mStreamID != 0) {\n+            this.getSoundPool().setRate(this.mStreamID, pRate);\n+        }\n+    }\n+\n+    public int getPriority() {\n+        return this.mPriority;\n+    }\n+\n+    public void setPrioriyt(final int pPriority) throws SoundReleasedException {\n+        this.assertNotReleased();\n+\n+        this.mPriority = pPriority;\n+        if (this.mStreamID != 0) {\n+            this.getSoundPool().setPriority(this.mStreamID, pPriority);\n+        }\n+    }\n+\n+    private SoundPool getSoundPool() throws SoundReleasedException {\n+        return this.getAudioManager().getSoundPool();\n+    }\n+\n+    // ===========================================================\n+    // Methods for/from SuperClass/Interfaces\n+    // ===========================================================\n+\n+    @Override\n+    protected SoundManager getAudioManager() throws SoundReleasedException {\n+        return (SoundManager) super.getAudioManager();\n+    }\n+\n+    @Override\n+    protected void throwOnReleased() throws SoundReleasedException {\n+        throw new SoundReleasedException();\n+    }\n+\n+    @Override\n+    public void play() throws SoundReleasedException {\n+        super.play();\n+\n+        final float masterVolume = this.getMasterVolume();\n+        final float leftVolume = this.mLeftVolume * masterVolume;\n+        final float rightVolume = this.mRightVolume * masterVolume;\n+\n+        this.mStreamID = this.getSoundPool()\n+            .play(this.mSoundID, leftVolume, rightVolume, this.mPriority,\n+                this.mLoopCount, this.mRate);\n+    }\n+\n+    @Override\n+    public void stop() throws SoundReleasedException {\n+        super.stop();\n+\n+        if (this.mStreamID != 0) {\n+            this.getSoundPool().stop(this.mStreamID);\n+        }\n+    }\n+\n+    @Override\n+    public void resume() throws SoundReleasedException {\n+        super.resume();\n+\n+        if (this.mStreamID != 0) {\n+            this.getSoundPool().resume(this.mStreamID);\n+        }\n+    }\n+\n+    @Override\n+    public void pause() throws SoundReleasedException {\n+        super.pause();\n+\n+        if (this.mStreamID != 0) {\n+            this.getSoundPool().pause(this.mStreamID);\n+        }\n+    }\n+\n+    @Override\n+    public void release() throws SoundReleasedException {\n+        this.assertNotReleased();\n+\n+        this.getSoundPool().unload(this.mSoundID);\n+        this.mSoundID = 0;\n+        this.mLoaded = false;\n+\n+        this.getAudioManager().remove(this);\n+\n+        super.release();\n+    }\n+\n+    @Override\n+    public void setLooping(final boolean pLooping)\n+        throws SoundReleasedException {\n+        super.setLooping(pLooping);\n+\n+        this.setLoopCount((pLooping) ? -1 : 0);\n+    }\n+\n+    @Override\n+    public void setVolume(final float pLeftVolume, final float pRightVolume)\n+        throws SoundReleasedException {\n+        super.setVolume(pLeftVolume, pRightVolume);\n+\n+        if (this.mStreamID != 0) {\n+            final float masterVolume = this.getMasterVolume();\n+            final float leftVolume = this.mLeftVolume * masterVolume;\n+            final float rightVolume = this.mRightVolume * masterVolume;\n+\n+            this.getSoundPool()\n+                .setVolume(this.mStreamID, leftVolume, rightVolume);\n+        }\n+    }\n+\n+    @Override\n+    public void onMasterVolumeChanged(final float pMasterVolume)\n+        throws SoundReleasedException {\n+        this.setVolume(this.mLeftVolume, this.mRightVolume);\n+    }\n+\n+    // ===========================================================\n+    // Methods\n+    // ===========================================================\n+\n+    // ===========================================================\n+    // Inner and Anonymous Classes\n+    // ===========================================================\n }\n",
            "diff_size": 220
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/5/Sound.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/naturalize/5/Sound.java\nindex 0ae2900d839..347c42f6b64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/5/Sound.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/naturalize/5/Sound.java\n@@ -90,7 +90,7 @@ public class Sound extends BaseAudioEntity {\n \t\tthis.assertNotReleased();\n \n \t\tthis.mPriority = pPriority;\n-\t\tif(this.mStreamID != 0) {\n+\t\tif (this.mStreamID != 0) {\n \t\t\tthis.getSoundPool().setPriority(this.mStreamID, pPriority);\n \t\t}\n \t}\n@@ -196,4 +196,4 @@ public class Sound extends BaseAudioEntity {\n \t// ===========================================================\n \t// Inner and Anonymous Classes\n \t// ===========================================================\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/5/Sound.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/codebuff/5/Sound.java\nindex 0ae2900d839..769c494d74e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/5/Sound.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/codebuff/5/Sound.java\n@@ -2,7 +2,6 @@ package org.andengine.audio.sound;\n \n import org.andengine.audio.BaseAudioEntity;\n import org.andengine.audio.sound.exception.SoundReleasedException;\n-\n import android.media.SoundPool;\n \n /**\n@@ -12,188 +11,192 @@ import android.media.SoundPool;\n  * @author Nicolas Gramlich\n  * @since 13:22:15 - 11.03.2010\n  */\n-public class Sound extends BaseAudioEntity {\n-\t// ===========================================================\n-\t// Constants\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Fields\n-\t// ===========================================================\n-\n-\tprivate int mSoundID;\n-\tprivate int mStreamID;\n-\n-\tprivate boolean mLoaded;\n-\n-\tprivate int mLoopCount;\n-\tprivate float mRate = 1.0f;\n-\tprivate int mPriority = 1;\n-\n-\t// ===========================================================\n-\t// Constructors\n-\t// ===========================================================\n-\n-\tSound(final SoundManager pSoundManager, final int pSoundID) {\n-\t\tsuper(pSoundManager);\n-\n-\t\tthis.mSoundID = pSoundID;\n-\t}\n-\n-\t// ===========================================================\n-\t// Getter & Setter\n-\t// ===========================================================\n \n-\tpublic int getSoundID() {\n-\t\treturn this.mSoundID;\n-\t}\n \n-\tpublic int getStreamID() {\n-\t\treturn this.mStreamID;\n-\t}\n-\n-\tpublic boolean isLoaded() {\n-\t\treturn this.mLoaded;\n-\t}\n-\n-\tpublic void setLoaded(final boolean pLoaded) {\n-\t\tthis.mLoaded = pLoaded;\n-\t}\n-\n-\tpublic void setLoopCount(final int pLoopCount) throws SoundReleasedException {\n-\t\tthis.assertNotReleased();\n-\n-\t\tthis.mLoopCount = pLoopCount;\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().setLoop(this.mStreamID, pLoopCount);\n-\t\t}\n-\t}\n-\n-\tpublic float getRate() {\n-\t\treturn this.mRate;\n-\t}\n-\n-\tpublic void setRate(final float pRate) throws SoundReleasedException {\n-\t\tthis.assertNotReleased();\n-\n-\t\tthis.mRate = pRate;\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().setRate(this.mStreamID, pRate);\n-\t\t}\n-\t}\n-\n-\tpublic int getPriority() {\n-\t\treturn this.mPriority;\n-\t}\n+public class Sound extends BaseAudioEntity {\n+ // ===========================================================\n+ // Constants\n+ // ===========================================================\n \n-\tpublic void setPrioriyt(final int pPriority) throws SoundReleasedException {\n-\t\tthis.assertNotReleased();\n+ // ===========================================================\n+ // Fields\n+ // ===========================================================\n \n-\t\tthis.mPriority = pPriority;\n-\t\tif(this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().setPriority(this.mStreamID, pPriority);\n-\t\t}\n-\t}\n \n-\tprivate SoundPool getSoundPool() throws SoundReleasedException {\n-\t\treturn this.getAudioManager().getSoundPool();\n-\t}\n-\n-\t// ===========================================================\n-\t// Methods for/from SuperClass/Interfaces\n-\t// ===========================================================\n-\n-\t@Override\n-\tprotected SoundManager getAudioManager() throws SoundReleasedException {\n-\t\treturn (SoundManager) super.getAudioManager();\n-\t}\n-\n-\t@Override\n-\tprotected void throwOnReleased() throws SoundReleasedException {\n-\t\tthrow new SoundReleasedException();\n-\t}\n-\n-\t@Override\n-\tpublic void play() throws SoundReleasedException {\n-\t\tsuper.play();\n \n-\t\tfinal float masterVolume = this.getMasterVolume();\n-\t\tfinal float leftVolume = this.mLeftVolume * masterVolume;\n-\t\tfinal float rightVolume = this.mRightVolume * masterVolume;\n \n-\t\tthis.mStreamID = this.getSoundPool().play(this.mSoundID, leftVolume, rightVolume, this.mPriority, this.mLoopCount, this.mRate);\n-\t}\n+ private int mSoundID;\n+ private int mStreamID;\n+ private boolean mLoaded;\n+ private int mLoopCount;\n+ private float mRate = 1.0f;\n+ private int mPriority = 1;\n \n-\t@Override\n-\tpublic void stop() throws SoundReleasedException {\n-\t\tsuper.stop();\n-\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().stop(this.mStreamID);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void resume() throws SoundReleasedException {\n-\t\tsuper.resume();\n-\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().resume(this.mStreamID);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void pause() throws SoundReleasedException {\n-\t\tsuper.pause();\n-\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tthis.getSoundPool().pause(this.mStreamID);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void release() throws SoundReleasedException {\n-\t\tthis.assertNotReleased();\n-\n-\t\tthis.getSoundPool().unload(this.mSoundID);\n-\t\tthis.mSoundID = 0;\n-\t\tthis.mLoaded = false;\n-\n-\t\tthis.getAudioManager().remove(this);\n-\n-\t\tsuper.release();\n-\t}\n-\n-\t@Override\n-\tpublic void setLooping(final boolean pLooping) throws SoundReleasedException {\n-\t\tsuper.setLooping(pLooping);\n-\n-\t\tthis.setLoopCount((pLooping) ? -1 : 0);\n-\t}\n-\n-\t@Override\n-\tpublic void setVolume(final float pLeftVolume, final float pRightVolume) throws SoundReleasedException {\n-\t\tsuper.setVolume(pLeftVolume, pRightVolume);\n-\n-\t\tif (this.mStreamID != 0) {\n-\t\t\tfinal float masterVolume = this.getMasterVolume();\n-\t\t\tfinal float leftVolume = this.mLeftVolume * masterVolume;\n-\t\t\tfinal float rightVolume = this.mRightVolume * masterVolume;\n-\n-\t\t\tthis.getSoundPool().setVolume(this.mStreamID, leftVolume, rightVolume);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void onMasterVolumeChanged(final float pMasterVolume) throws SoundReleasedException {\n-\t\tthis.setVolume(this.mLeftVolume, this.mRightVolume);\n-\t}\n-\n-\t// ===========================================================\n-\t// Methods\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Inner and Anonymous Classes\n-\t// ===========================================================\n-}\n+ // ===========================================================\n+ // Constructors\n+ // ===========================================================\n+\n+ Sound(final SoundManager pSoundManager, final int pSoundID) {\n+  super(pSoundManager);\n+\n+  this.mSoundID = pSoundID;\n+ }\n+\n+ // ===========================================================\n+ // Getter & Setter\n+ // ===========================================================\n+\n+\n+\n+\n+\n+ public int getSoundID() {\n+  return this.mSoundID;\n+ }\n+\n+ public int getStreamID() {\n+  return this.mStreamID;\n+ }\n+\n+ public boolean isLoaded() {\n+  return this.mLoaded;\n+ }\n+\n+ public void setLoaded(final boolean pLoaded) {\n+  this.mLoaded = pLoaded;\n+ }\n+\n+ public void setLoopCount(final int pLoopCount) throws SoundReleasedException {\n+  this.assertNotReleased();\n+  this.mLoopCount = pLoopCount;\n+  if (this.mStreamID != 0) {\n+   this.getSoundPool().setLoop(this.mStreamID, pLoopCount);\n+  }\n+ }\n+\n+ public float getRate() {\n+  return this.mRate;\n+ }\n+\n+ public void setRate(final float pRate) throws SoundReleasedException {\n+  this.assertNotReleased();\n+  this.mRate = pRate;\n+  if (this.mStreamID != 0) {\n+   this.getSoundPool().setRate(this.mStreamID, pRate);\n+  }\n+ }\n+\n+ public int getPriority() {\n+  return this.mPriority;\n+ }\n+\n+ public void setPrioriyt(final int pPriority) throws SoundReleasedException {\n+  this.assertNotReleased();\n+  this.mPriority = pPriority;\n+  if (this.mStreamID != 0) {\n+   this.getSoundPool().setPriority(this.mStreamID, pPriority);\n+  }\n+ }\n+\n+ private SoundPool getSoundPool() throws SoundReleasedException {\n+  return this.getAudioManager().getSoundPool();\n+ }\n+\n+ // ===========================================================\n+ // Methods for/from SuperClass/Interfaces\n+ // ===========================================================\n+\n+ @Override\n+ protected SoundManager getAudioManager() throws SoundReleasedException {\n+  return (SoundManager) super.getAudioManager();\n+ }\n+\n+ @Override\n+ protected void throwOnReleased() throws SoundReleasedException {\n+        throw new SoundReleasedException();\n+ }\n+\n+ @Override\n+ public void play() throws SoundReleasedException {\n+  super.play();\n+\n+  final float masterVolume = this.getMasterVolume();\n+  final float leftVolume = this.mLeftVolume * masterVolume;\n+  final float rightVolume = this.mRightVolume * masterVolume;\n+  this.mStreamID = this.getSoundPool().play(this.mSoundID,\n+                                            leftVolume,\n+                                            rightVolume,\n+             this.mPriority,\n+             this.mLoopCount,\n+             this.mRate);\n+ }\n+\n+ @Override\n+ public void stop() throws SoundReleasedException {\n+  super.stop();\n+  if (this.mStreamID != 0) {\n+   this.getSoundPool().stop(this.mStreamID);\n+  }\n+ }\n+\n+ @Override\n+ public void resume() throws SoundReleasedException {\n+  super.resume();\n+  if (this.mStreamID != 0) {\n+   this.getSoundPool().resume(this.mStreamID);\n+  }\n+ }\n+\n+ @Override\n+ public void pause() throws SoundReleasedException {\n+  super.pause();\n+  if (this.mStreamID != 0) {\n+   this.getSoundPool().pause(this.mStreamID);\n+  }\n+ }\n+\n+ @Override\n+ public void release() throws SoundReleasedException {\n+  this.assertNotReleased();\n+  this.getSoundPool().unload(this.mSoundID);\n+  this.mSoundID = 0;\n+  this.mLoaded = false;\n+  this.getAudioManager().remove(this);\n+\n+  super.release();\n+ }\n+\n+ @Override\n+ public void setLooping(final boolean pLooping) throws SoundReleasedException {\n+  super.setLooping(pLooping);\n+  this.setLoopCount((pLooping) ? -1 : 0);\n+ }\n+\n+ @Override\n+ public void setVolume(final float pLeftVolume, final float pRightVolume) throws SoundReleasedException {\n+  super.setVolume(pLeftVolume, pRightVolume);\n+  if (this.mStreamID != 0) {\n+   final float masterVolume = this.getMasterVolume();\n+   final float leftVolume = this.mLeftVolume * masterVolume;\n+   final float rightVolume = this.mRightVolume * masterVolume;\n+   this.getSoundPool().setVolume(this.mStreamID, leftVolume, rightVolume);\n+  }\n+ }\n+\n+ @Override\n+ public void onMasterVolumeChanged(final float pMasterVolume) throws SoundReleasedException {\n+  this.setVolume(this.mLeftVolume, this.mRightVolume);\n+ }\n+\n+ // ===========================================================\n+ // Methods\n+ // ===========================================================\n+\n+ // ===========================================================\n+ // Inner and Anonymous Classes\n+ // ===========================================================\n+\n+\n+\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 278
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1943",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1943/FabricReactorHooksService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1943/FabricReactorHooksService.java\nindex f6439da0243..8188d76e894 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1943/FabricReactorHooksService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1943/FabricReactorHooksService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.bootstrap;\n \n import reactor.core.publisher.Hooks;\n@@ -49,20 +50,20 @@ class FabricReactorHooksService extends LifecycleAdapter\n \n     static\n     {\n-        Hooks.onErrorDropped( e -> ERROR_CONSUMERS.forEach( consumer -> consumer.accept( e ) ) );\n+        Hooks.onErrorDropped(e -> ERROR_CONSUMERS.forEach(consumer -> consumer.accept(e)));\n     }\n \n     private final Consumer<? super Throwable> errorConsumer;\n \n-    FabricReactorHooksService( ErrorReporter errorReporter )\n+    FabricReactorHooksService(ErrorReporter errorReporter)\n     {\n-        errorConsumer = throwable -> errorReporter.report( \"Unhandled error\", throwable, Status.General.UnknownError );\n-        ERROR_CONSUMERS.add( errorConsumer );\n+        errorConsumer = throwable -> errorReporter.report(\"Unhandled error\", throwable, Status.General.UnknownError);\n+        ERROR_CONSUMERS.add(errorConsumer);\n     }\n \n     @Override\n     public void stop()\n     {\n-        ERROR_CONSUMERS.remove( errorConsumer );\n+        ERROR_CONSUMERS.remove(errorConsumer);\n     }\n }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "774",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/774/DefaultCheckPointerTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/774/DefaultCheckPointerTracer.java\nindex ef4caed5202..bebe92b59dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/774/DefaultCheckPointerTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/774/DefaultCheckPointerTracer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.checkpoint;\n \n import java.util.concurrent.TimeUnit;\n@@ -32,85 +33,85 @@ import org.neo4j.time.SystemNanoClock;\n \n public class DefaultCheckPointerTracer implements CheckPointTracer, CheckPointerMonitor\n {\n-    public interface Monitor\n-    {\n-        void lastCheckPointEventDuration( long millis );\n-    }\n+  public interface Monitor\n+  {\n+    void lastCheckPointEventDuration(long millis);\n+  }\n \n-    private final SystemNanoClock clock;\n-    private final Monitor monitor;\n-    private final JobScheduler jobScheduler;\n+  private final SystemNanoClock clock;\n+  private final Monitor monitor;\n+  private final JobScheduler jobScheduler;\n \n-    private final AtomicLong counter = new AtomicLong();\n-    private final AtomicLong accumulatedTotalTimeNanos = new AtomicLong();\n-\n-    private volatile long startTimeNanos;\n-\n-    private LogCheckPointEvent logCheckPointEvent = new LogCheckPointEvent()\n-    {\n-        @Override\n-        public void close()\n-        {\n-            updateCountersAndNotifyListeners();\n-        }\n-\n-        @Override\n-        public LogForceWaitEvent beginLogForceWait()\n-        {\n-            return LogForceWaitEvent.NULL;\n-        }\n-\n-        @Override\n-        public LogForceEvent beginLogForce()\n-        {\n-            return LogForceEvent.NULL;\n-        }\n-    };\n-\n-    public DefaultCheckPointerTracer( Monitor monitor, JobScheduler jobScheduler )\n-    {\n-        this( Clocks.nanoClock(), monitor, jobScheduler );\n-    }\n+  private final AtomicLong counter = new AtomicLong();\n+  private final AtomicLong accumulatedTotalTimeNanos = new AtomicLong();\n \n-    public DefaultCheckPointerTracer( SystemNanoClock clock, Monitor monitor, JobScheduler jobScheduler )\n-    {\n-        this.clock = clock;\n-        this.monitor = monitor;\n-        this.jobScheduler = jobScheduler;\n-    }\n+  private volatile long startTimeNanos;\n \n+  private LogCheckPointEvent logCheckPointEvent = new LogCheckPointEvent()\n+  {\n     @Override\n-    public LogCheckPointEvent beginCheckPoint()\n+    public void close()\n     {\n-        startTimeNanos = clock.nanos();\n-        return logCheckPointEvent;\n+      updateCountersAndNotifyListeners();\n     }\n \n     @Override\n-    public long numberOfCheckPointEvents()\n+    public LogForceWaitEvent beginLogForceWait()\n     {\n-        return counter.get();\n+      return LogForceWaitEvent.NULL;\n     }\n \n     @Override\n-    public long checkPointAccumulatedTotalTimeMillis()\n+    public LogForceEvent beginLogForce()\n     {\n-        return TimeUnit.NANOSECONDS.toMillis( accumulatedTotalTimeNanos.get() );\n+      return LogForceEvent.NULL;\n     }\n-\n-    private void updateCountersAndNotifyListeners()\n+  };\n+\n+  public DefaultCheckPointerTracer(Monitor monitor, JobScheduler jobScheduler)\n+  {\n+    this(Clocks.nanoClock(), monitor, jobScheduler);\n+  }\n+\n+  public DefaultCheckPointerTracer(SystemNanoClock clock, Monitor monitor, JobScheduler jobScheduler)\n+  {\n+    this.clock = clock;\n+    this.monitor = monitor;\n+    this.jobScheduler = jobScheduler;\n+  }\n+\n+  @Override\n+  public LogCheckPointEvent beginCheckPoint()\n+  {\n+    startTimeNanos = clock.nanos();\n+    return logCheckPointEvent;\n+  }\n+\n+  @Override\n+  public long numberOfCheckPointEvents()\n+  {\n+    return counter.get();\n+  }\n+\n+  @Override\n+  public long checkPointAccumulatedTotalTimeMillis()\n+  {\n+    return TimeUnit.NANOSECONDS.toMillis(accumulatedTotalTimeNanos.get());\n+  }\n+\n+  private void updateCountersAndNotifyListeners()\n+  {\n+    final long lastEventTime = clock.nanos() - startTimeNanos;\n+\n+    // update counters\n+    counter.incrementAndGet();\n+    accumulatedTotalTimeNanos.addAndGet(lastEventTime);\n+\n+    // notify async\n+    jobScheduler.schedule(JobScheduler.Groups.metricsEvent, () ->\n     {\n-        final long lastEventTime = clock.nanos() - startTimeNanos;\n-\n-        // update counters\n-        counter.incrementAndGet();\n-        accumulatedTotalTimeNanos.addAndGet( lastEventTime );\n-\n-        // notify async\n-        jobScheduler.schedule( JobScheduler.Groups.metricsEvent, () ->\n-        {\n-            long millis = TimeUnit.NANOSECONDS.toMillis( lastEventTime );\n-            monitor.lastCheckPointEventDuration( millis );\n-        } );\n-    }\n+      long millis = TimeUnit.NANOSECONDS.toMillis(lastEventTime);\n+      monitor.lastCheckPointEventDuration(millis);\n+    });\n+  }\n }\n",
            "diff_size": 109
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/774/DefaultCheckPointerTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/774/DefaultCheckPointerTracer.java\nindex ef4caed5202..61263f46483 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/774/DefaultCheckPointerTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/774/DefaultCheckPointerTracer.java\n@@ -113,4 +113,4 @@ public class DefaultCheckPointerTracer implements CheckPointTracer, CheckPointer\n             monitor.lastCheckPointEventDuration( millis );\n         } );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
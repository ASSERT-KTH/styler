{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1068",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admindistribution;\n\nimport gov.hhs.fha.nhinc.largefile.LargeFileUtils;\nimport gov.hhs.fha.nhinc.largefile.LargePayloadException;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1068/AdminDistributionUtils.java\nindex e6090beb581..3d92d69b6b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1068/AdminDistributionUtils.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.largefile.LargeFileUtils;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1068/AdminDistributionUtils.java\nindex e6090beb581..db4da919e5e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1068/AdminDistributionUtils.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.largefile.LargeFileUtils;\n@@ -41,129 +42,127 @@ import oasis.names.tc.emergency.edxl.de._1.NonXMLContentType;\n \n /**\n  * @author akong\n- *\n  */\n public class AdminDistributionUtils {\n \n-    private static AdminDistributionUtils instance = new AdminDistributionUtils();\n-\n-    private LargeFileUtils fileUtils = null;\n-\n-    AdminDistributionUtils() {\n-        fileUtils = getLargeFileUtils();\n-    }\n-\n-    /**\n-     * @return the singleton instance of http://www.google.com/\n-     */\n-    public static AdminDistributionUtils getInstance() {\n-        return instance;\n-    }\n-\n-    /**\n-     * If enabled in the properties, this method will parse all ContentObject in the request from a base 64 encoded\n-     * string as a file URI and convert it as a Data Handler. This call will modify the pass in request! If an exception\n-     * is thrown, then the content object will not be converted back to its original value.\n-     *\n-     * @param request - the message to be converted\n-     * @throws LargePayloadException Throws LargePayloadException when retrieving contentObject or saving the attachment\n-     * to system.\n-     */\n-    public void convertFileLocationToDataIfEnabled(EDXLDistribution request) throws LargePayloadException {\n-\n-        if (fileUtils.isParsePayloadAsFileLocationEnabled()) {\n-            try {\n-                if (request.getContentObject() != null) {\n-                    for (ContentObjectType co : request.getContentObject()) {\n-                        convertToDataHandler(co);\n-                    }\n-                }\n-            } catch (Exception e) {\n-                throw new LargePayloadException(\"Failed to attach payload to message.\", e);\n-            }\n+  private static AdminDistributionUtils instance = new AdminDistributionUtils();\n+\n+  private LargeFileUtils fileUtils = null;\n+\n+  AdminDistributionUtils() {\n+    fileUtils = getLargeFileUtils();\n+  }\n+\n+  /**\n+   * @return the singleton instance of http://www.google.com/\n+   */\n+  public static AdminDistributionUtils getInstance() {\n+    return instance;\n+  }\n+\n+  /**\n+   * If enabled in the properties, this method will parse all ContentObject in the request from a base 64 encoded\n+   * string as a file URI and convert it as a Data Handler. This call will modify the pass in request! If an exception\n+   * is thrown, then the content object will not be converted back to its original value.\n+   *\n+   * @param request - the message to be converted\n+   * @throws LargePayloadException Throws LargePayloadException when retrieving contentObject or saving the attachment\n+   *                               to system.\n+   */\n+  public void convertFileLocationToDataIfEnabled(EDXLDistribution request) throws LargePayloadException {\n+\n+    if (fileUtils.isParsePayloadAsFileLocationEnabled()) {\n+      try {\n+        if (request.getContentObject() != null) {\n+          for (ContentObjectType co : request.getContentObject()) {\n+            convertToDataHandler(co);\n+          }\n         }\n+      } catch (Exception e) {\n+        throw new LargePayloadException(\"Failed to attach payload to message.\", e);\n+      }\n     }\n-\n-    /**\n-     * If enabled in the properties, this method will save the ContentObject data from the request into a file in the\n-     * system. It will then replace the value of that element with the file URI. This call will modify the pass in\n-     * request! If an exception is thrown, then the content object will not be converted back to its original value.\n-     *\n-     * @param request - the message to be converted\n-     * @throws LargePayloadException Throws LargePayloadException when retrieving contentObject or saving the attachment\n-     * to system.\n-     *\n-     */\n-    public void convertDataToFileLocationIfEnabled(EDXLDistribution request) throws LargePayloadException {\n-        if (fileUtils.isSavePayloadToFileEnabled()) {\n-            List<File> savedAttachmentList = new ArrayList<>();\n-            try {\n-                if (request.getContentObject() != null) {\n-                    for (ContentObjectType co : request.getContentObject()) {\n-                        File attachmentFile = convertToFile(co);\n-                        if (attachmentFile != null) {\n-                            savedAttachmentList.add(attachmentFile);\n-                        }\n-                    }\n-                }\n-\n-            } catch (Exception e) {\n-                deleteAllFiles(savedAttachmentList);\n-\n-                throw new LargePayloadException(\"Failed to save attachments to file system\", e);\n+  }\n+\n+  /**\n+   * If enabled in the properties, this method will save the ContentObject data from the request into a file in the\n+   * system. It will then replace the value of that element with the file URI. This call will modify the pass in\n+   * request! If an exception is thrown, then the content object will not be converted back to its original value.\n+   *\n+   * @param request - the message to be converted\n+   * @throws LargePayloadException Throws LargePayloadException when retrieving contentObject or saving the attachment\n+   *                               to system.\n+   */\n+  public void convertDataToFileLocationIfEnabled(EDXLDistribution request) throws LargePayloadException {\n+    if (fileUtils.isSavePayloadToFileEnabled()) {\n+      List<File> savedAttachmentList = new ArrayList<>();\n+      try {\n+        if (request.getContentObject() != null) {\n+          for (ContentObjectType co : request.getContentObject()) {\n+            File attachmentFile = convertToFile(co);\n+            if (attachmentFile != null) {\n+              savedAttachmentList.add(attachmentFile);\n             }\n+          }\n         }\n+\n+      } catch (Exception e) {\n+        deleteAllFiles(savedAttachmentList);\n+\n+        throw new LargePayloadException(\"Failed to save attachments to file system\", e);\n+      }\n     }\n+  }\n \n-    private void deleteAllFiles(List<File> savedAttachmentList) {\n-        for (File file : savedAttachmentList) {\n-            if (file.exists()) {\n-                file.delete();\n-            }\n-        }\n+  private void deleteAllFiles(List<File> savedAttachmentList) {\n+    for (File file : savedAttachmentList) {\n+      if (file.exists()) {\n+        file.delete();\n+      }\n     }\n+  }\n \n-    private void convertToDataHandler(ContentObjectType co) throws URISyntaxException, IOException {\n-        NonXMLContentType nonXmlContentType = co.getNonXMLContent();\n-        if (nonXmlContentType != null && nonXmlContentType.getContentData() != null) {\n-            URI payloadUri = fileUtils.parseBase64DataAsUri(nonXmlContentType.getContentData());\n-            if (payloadUri != null) {\n-                File payloadFile = new File(payloadUri);\n+  private void convertToDataHandler(ContentObjectType co) throws URISyntaxException, IOException {\n+    NonXMLContentType nonXmlContentType = co.getNonXMLContent();\n+    if (nonXmlContentType != null && nonXmlContentType.getContentData() != null) {\n+      URI payloadUri = fileUtils.parseBase64DataAsUri(nonXmlContentType.getContentData());\n+      if (payloadUri != null) {\n+        File payloadFile = new File(payloadUri);\n \n-                DataHandler dh = fileUtils.convertToDataHandler(payloadFile);\n-                nonXmlContentType.setContentData(dh);\n-            }\n-        }\n+        DataHandler dh = fileUtils.convertToDataHandler(payloadFile);\n+        nonXmlContentType.setContentData(dh);\n+      }\n     }\n+  }\n \n-    private File convertToFile(ContentObjectType co) throws IOException {\n-        File attachmentFile = null;\n-\n-        NonXMLContentType nonXmlContentType = co.getNonXMLContent();\n-        if (nonXmlContentType != null && nonXmlContentType.getContentData() != null) {\n-            attachmentFile = saveDataAttachmentToFile(nonXmlContentType);\n-            setDocumentValueToFileURI(nonXmlContentType, attachmentFile);\n-        }\n+  private File convertToFile(ContentObjectType co) throws IOException {\n+    File attachmentFile = null;\n \n-        return attachmentFile;\n+    NonXMLContentType nonXmlContentType = co.getNonXMLContent();\n+    if (nonXmlContentType != null && nonXmlContentType.getContentData() != null) {\n+      attachmentFile = saveDataAttachmentToFile(nonXmlContentType);\n+      setDocumentValueToFileURI(nonXmlContentType, attachmentFile);\n     }\n \n-    private File saveDataAttachmentToFile(NonXMLContentType nonXmlContentType) throws IOException {\n-        File attachmentFile = fileUtils.generateAttachmentFile();\n-        fileUtils.saveDataToFile(nonXmlContentType.getContentData(), attachmentFile);\n+    return attachmentFile;\n+  }\n \n-        return attachmentFile;\n-    }\n+  private File saveDataAttachmentToFile(NonXMLContentType nonXmlContentType) throws IOException {\n+    File attachmentFile = fileUtils.generateAttachmentFile();\n+    fileUtils.saveDataToFile(nonXmlContentType.getContentData(), attachmentFile);\n \n-    private void setDocumentValueToFileURI(NonXMLContentType nonXmlContentType, File file) {\n-        DataHandler dh = fileUtils.convertToDataHandler(file.toURI().toString());\n-        nonXmlContentType.setContentData(dh);\n-    }\n+    return attachmentFile;\n+  }\n \n-    /**\n-     * @return an instance of LargeFileUtils.\n-     */\n-    protected LargeFileUtils getLargeFileUtils() {\n-        return LargeFileUtils.getInstance();\n-    }\n+  private void setDocumentValueToFileURI(NonXMLContentType nonXmlContentType, File file) {\n+    DataHandler dh = fileUtils.convertToDataHandler(file.toURI().toString());\n+    nonXmlContentType.setContentData(dh);\n+  }\n+\n+  /**\n+   * @return an instance of LargeFileUtils.\n+   */\n+  protected LargeFileUtils getLargeFileUtils() {\n+    return LargeFileUtils.getInstance();\n+  }\n }\n",
            "diff_size": 128
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1068/AdminDistributionUtils.java\nindex e6090beb581..7b302840f59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1068/AdminDistributionUtils.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.largefile.LargeFileUtils;\n@@ -166,4 +167,4 @@ public class AdminDistributionUtils {\n     protected LargeFileUtils getLargeFileUtils() {\n         return LargeFileUtils.getInstance();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1068/AdminDistributionUtils.java\nindex e6090beb581..78b13131083 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1068/AdminDistributionUtils.java\n@@ -43,10 +43,11 @@ import oasis.names.tc.emergency.edxl.de._1.NonXMLContentType;\n  * @author akong\n  *\n  */\n+\n+\n public class AdminDistributionUtils {\n \n     private static AdminDistributionUtils instance = new AdminDistributionUtils();\n-\n     private LargeFileUtils fileUtils = null;\n \n     AdminDistributionUtils() {\n@@ -56,6 +57,8 @@ public class AdminDistributionUtils {\n     /**\n      * @return the singleton instance of http://www.google.com/\n      */\n+\n+\n     public static AdminDistributionUtils getInstance() {\n         return instance;\n     }\n@@ -69,8 +72,9 @@ public class AdminDistributionUtils {\n      * @throws LargePayloadException Throws LargePayloadException when retrieving contentObject or saving the attachment\n      * to system.\n      */\n-    public void convertFileLocationToDataIfEnabled(EDXLDistribution request) throws LargePayloadException {\n \n+\n+    public void convertFileLocationToDataIfEnabled(EDXLDistribution request) throws LargePayloadException {\n         if (fileUtils.isParsePayloadAsFileLocationEnabled()) {\n             try {\n                 if (request.getContentObject() != null) {\n@@ -94,6 +98,8 @@ public class AdminDistributionUtils {\n      * to system.\n      *\n      */\n+\n+\n     public void convertDataToFileLocationIfEnabled(EDXLDistribution request) throws LargePayloadException {\n         if (fileUtils.isSavePayloadToFileEnabled()) {\n             List<File> savedAttachmentList = new ArrayList<>();\n@@ -106,10 +112,8 @@ public class AdminDistributionUtils {\n                         }\n                     }\n                 }\n-\n             } catch (Exception e) {\n                 deleteAllFiles(savedAttachmentList);\n-\n                 throw new LargePayloadException(\"Failed to save attachments to file system\", e);\n             }\n         }\n@@ -129,7 +133,6 @@ public class AdminDistributionUtils {\n             URI payloadUri = fileUtils.parseBase64DataAsUri(nonXmlContentType.getContentData());\n             if (payloadUri != null) {\n                 File payloadFile = new File(payloadUri);\n-\n                 DataHandler dh = fileUtils.convertToDataHandler(payloadFile);\n                 nonXmlContentType.setContentData(dh);\n             }\n@@ -138,20 +141,17 @@ public class AdminDistributionUtils {\n \n     private File convertToFile(ContentObjectType co) throws IOException {\n         File attachmentFile = null;\n-\n         NonXMLContentType nonXmlContentType = co.getNonXMLContent();\n         if (nonXmlContentType != null && nonXmlContentType.getContentData() != null) {\n             attachmentFile = saveDataAttachmentToFile(nonXmlContentType);\n             setDocumentValueToFileURI(nonXmlContentType, attachmentFile);\n         }\n-\n         return attachmentFile;\n     }\n \n     private File saveDataAttachmentToFile(NonXMLContentType nonXmlContentType) throws IOException {\n         File attachmentFile = fileUtils.generateAttachmentFile();\n         fileUtils.saveDataToFile(nonXmlContentType.getContentData(), attachmentFile);\n-\n         return attachmentFile;\n     }\n \n@@ -163,7 +163,10 @@ public class AdminDistributionUtils {\n     /**\n      * @return an instance of LargeFileUtils.\n      */\n+\n+\n     protected LargeFileUtils getLargeFileUtils() {\n         return LargeFileUtils.getInstance();\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1068/AdminDistributionUtils.java\nindex e6090beb581..3d92d69b6b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1068/AdminDistributionUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1068/AdminDistributionUtils.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution;\n \n import gov.hhs.fha.nhinc.largefile.LargeFileUtils;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
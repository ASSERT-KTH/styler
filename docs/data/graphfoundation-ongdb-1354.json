{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1354",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1354/LoggingMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1354/LoggingMonitor.java\nindex 98d09c14334..9a00fe6a30f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1354/LoggingMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1354/LoggingMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.labelscan;\n \n import org.apache.commons.lang3.exception.ExceptionUtils;\n@@ -33,68 +34,68 @@ import static org.neo4j.helpers.Format.duration;\n  */\n public class LoggingMonitor extends Monitor.Adaptor\n {\n-    private final Log log;\n-\n-    public LoggingMonitor( Log log )\n-    {\n-        this.log = log;\n-    }\n-\n-    @Override\n-    public void noIndex()\n-    {\n-        log.info( \"No label index found, this might just be first use. Preparing to rebuild.\" );\n-    }\n-\n-    @Override\n-    public void notValidIndex()\n-    {\n-        log.warn( \"Label index could not be read. Preparing to rebuild.\" );\n-    }\n-\n-    @Override\n-    public void rebuilding()\n-    {\n-        log.info( \"Rebuilding label index, this may take a while\" );\n-    }\n-\n-    @Override\n-    public void rebuilt( long roughNodeCount )\n-    {\n-        log.info( \"Label index rebuilt (roughly \" + roughNodeCount + \" nodes)\" );\n-    }\n-\n-    @Override\n-    public void recoveryCleanupRegistered()\n-    {\n-        log.info( \"Label index cleanup job registered\" );\n-    }\n-\n-    @Override\n-    public void recoveryCleanupStarted()\n-    {\n-        log.info( \"Label index cleanup job started\" );\n-    }\n-\n-    @Override\n-    public void recoveryCleanupFinished( long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis )\n-    {\n-        StringJoiner joiner = new StringJoiner( \", \", \"Label index cleanup job finished: \", \"\" );\n-        joiner.add( \"Number of pages visited: \" + numberOfPagesVisited );\n-        joiner.add( \"Number of cleaned crashed pointers: \" + numberOfCleanedCrashPointers );\n-        joiner.add( \"Time spent: \" + duration( durationMillis ) );\n-        log.info( joiner.toString() );\n-    }\n-\n-    @Override\n-    public void recoveryCleanupClosed()\n-    {\n-        log.info( \"Label index cleanup job closed\" );\n-    }\n-\n-    @Override\n-    public void recoveryCleanupFailed( Throwable throwable )\n-    {\n-        log.info( String.format( \"Label index cleanup job failed.%nCaused by: %s\", ExceptionUtils.getStackTrace( throwable ) ) );\n-    }\n+  private final Log log;\n+\n+  public LoggingMonitor(Log log)\n+  {\n+    this.log = log;\n+  }\n+\n+  @Override\n+  public void noIndex()\n+  {\n+    log.info(\"No label index found, this might just be first use. Preparing to rebuild.\");\n+  }\n+\n+  @Override\n+  public void notValidIndex()\n+  {\n+    log.warn(\"Label index could not be read. Preparing to rebuild.\");\n+  }\n+\n+  @Override\n+  public void rebuilding()\n+  {\n+    log.info(\"Rebuilding label index, this may take a while\");\n+  }\n+\n+  @Override\n+  public void rebuilt(long roughNodeCount)\n+  {\n+    log.info(\"Label index rebuilt (roughly \" + roughNodeCount + \" nodes)\");\n+  }\n+\n+  @Override\n+  public void recoveryCleanupRegistered()\n+  {\n+    log.info(\"Label index cleanup job registered\");\n+  }\n+\n+  @Override\n+  public void recoveryCleanupStarted()\n+  {\n+    log.info(\"Label index cleanup job started\");\n+  }\n+\n+  @Override\n+  public void recoveryCleanupFinished(long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis)\n+  {\n+    StringJoiner joiner = new StringJoiner(\", \", \"Label index cleanup job finished: \", \"\");\n+    joiner.add(\"Number of pages visited: \" + numberOfPagesVisited);\n+    joiner.add(\"Number of cleaned crashed pointers: \" + numberOfCleanedCrashPointers);\n+    joiner.add(\"Time spent: \" + duration(durationMillis));\n+    log.info(joiner.toString());\n+  }\n+\n+  @Override\n+  public void recoveryCleanupClosed()\n+  {\n+    log.info(\"Label index cleanup job closed\");\n+  }\n+\n+  @Override\n+  public void recoveryCleanupFailed(Throwable throwable)\n+  {\n+    log.info(String.format(\"Label index cleanup job failed.%nCaused by: %s\", ExceptionUtils.getStackTrace(throwable)));\n+  }\n }\n",
            "diff_size": 65
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1354/LoggingMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1354/LoggingMonitor.java\nindex 98d09c14334..e047f587f90 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1354/LoggingMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1354/LoggingMonitor.java\n@@ -97,4 +97,4 @@ public class LoggingMonitor extends Monitor.Adaptor\n     {\n         log.info( String.format( \"Label index cleanup job failed.%nCaused by: %s\", ExceptionUtils.getStackTrace( throwable ) ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
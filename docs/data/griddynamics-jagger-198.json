{
    "project_name": "griddynamics-jagger",
    "error_id": "198",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 188).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @n\n * @par Details:\n * @details Test definition is the base component of the @ref section_writing_test_load_scenario \"load test description\". With the help of the internal Builder class it allows to setup: @n\n * @li source of the endpointsProvider (where to apply load)\n * @li source of queries (what parameters of the load to set)\n * @li what protocol to use for the communication with the system under test (SUT)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/198/JTestDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/198/JTestDefinition.java\nindex 7a0d707804a..7ee54bf2b52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/198/JTestDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/198/JTestDefinition.java\n@@ -17,7 +17,7 @@ import java.util.List;\n  * @li source of the endpointsProvider (where to apply load)\n  * @li source of queries (what parameters of the load to set)\n  * @li what protocol to use for the communication with the system under test (SUT)\n- *\n+ * <p>\n  * More information on the parameter of the test definition, you can find in the Builder documentation @n\n  * @n Code example:\n  * @dontinclude ExampleSimpleJLoadScenarioProvider.java\n@@ -98,7 +98,7 @@ public class JTestDefinition {\n \n         /**\n          * Optional: Sets subtypes of {@link com.griddynamics.jagger.invoker.Invoker}\n-         *\n+         * <p>\n          * Instances of this class will be used to during Jagger test execution to send requests to the System under test. @n\n          * Example:\n          *\n@@ -115,7 +115,7 @@ public class JTestDefinition {\n          * Instances of those subtypes will be used to validate responses during Jagger test execution @n\n          * Example:\n          *\n-         * @code withValidators(Arrays.asList(com.griddynamics.jagger.engine.e1.collector.NotNullResponseValidator.class))\n+         * @code withValidators(Arrays.asList ( com.griddynamics.jagger.engine.e1.collector.NotNullResponseValidator.class))\n          * @endcode\n          * @see com.griddynamics.jagger.engine.e1.collector.NotNullResponseValidator for example\n          */\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/198/JTestDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/198/JTestDefinition.java\nindex 7a0d707804a..e6fd56060d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/198/JTestDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/198/JTestDefinition.java\n@@ -33,9 +33,7 @@ public class JTestDefinition {\n     private Iterable queries;\n     private Class<? extends Invoker> invoker;\n     private List<Class<? extends ResponseValidator>> validators;\n-\n-\n-    private JTestDefinition(Builder builder) {\n+private JTestDefinition(Builder builder) {\n         this.id = builder.id.value();\n         this.endpoints = builder.endpointsProvider;\n \n@@ -161,4 +159,4 @@ public class JTestDefinition {\n     public List<Class<? extends ResponseValidator>> getValidators() {\n         return validators;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
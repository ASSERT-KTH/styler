{
    "project_name": "h2database-h2database",
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "80",
                "column": "59",
                "severity": "warning",
                "message": "',' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "        this.needRebuild = needRebuild;\n        if (trace.isDebugEnabled()) {\n            trace.debug(\"opened {0} rows: {1}\", getName() , rowCount);\n        }\n        memoryPerPage = (PageBtree.MEMORY_PAGE_BTREE + store.getPageSize()) >> 2;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/40/PageBtreeIndex.java\nindex 3792916c34d..e4d401df06b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/40/PageBtreeIndex.java\n@@ -77,7 +77,7 @@ public class PageBtreeIndex extends PageIndex {\n         }\n         this.needRebuild = needRebuild;\n         if (trace.isDebugEnabled()) {\n-            trace.debug(\"opened {0} rows: {1}\", getName() , rowCount);\n+            trace.debug(\"opened {0} rows: {1}\", getName(), rowCount);\n         }\n         memoryPerPage = (PageBtree.MEMORY_PAGE_BTREE + store.getPageSize()) >> 2;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/40/PageBtreeIndex.java\nindex 3792916c34d..0e2b82e533c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/40/PageBtreeIndex.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.pagestore.db;\n \n import org.h2.api.ErrorCode;\n@@ -41,8 +42,9 @@ public class PageBtreeIndex extends PageIndex {\n     private int memoryCount;\n \n     public PageBtreeIndex(PageStoreTable table, int id, String indexName,\n-            IndexColumn[] columns,\n-            IndexType indexType, boolean create, SessionLocal session) {\n+                          IndexColumn[] columns,\n+                          IndexType indexType, boolean create,\n+                          SessionLocal session) {\n         super(table, id, indexName, columns, indexType);\n         if (!database.isStarting() && create) {\n             checkIndexColumnTypes(columns);\n@@ -63,7 +65,8 @@ public class PageBtreeIndex extends PageIndex {\n             // it should not for new tables, otherwise redo of other operations\n             // must ensure this page is not used for other things\n             store.addMeta(this, session);\n-            PageBtreeLeaf root = PageBtreeLeaf.create(this, rootPageId, PageBtree.ROOT);\n+            PageBtreeLeaf root =\n+                    PageBtreeLeaf.create(this, rootPageId, PageBtree.ROOT);\n             store.logUndo(root, null);\n             store.update(root);\n             needRebuild = true;\n@@ -77,9 +80,10 @@ public class PageBtreeIndex extends PageIndex {\n         }\n         this.needRebuild = needRebuild;\n         if (trace.isDebugEnabled()) {\n-            trace.debug(\"opened {0} rows: {1}\", getName() , rowCount);\n+            trace.debug(\"opened {0} rows: {1}\", getName(), rowCount);\n         }\n-        memoryPerPage = (PageBtree.MEMORY_PAGE_BTREE + store.getPageSize()) >> 2;\n+        memoryPerPage =\n+                (PageBtree.MEMORY_PAGE_BTREE + store.getPageSize()) >> 2;\n     }\n \n     @Override\n@@ -153,13 +157,15 @@ public class PageBtreeIndex extends PageIndex {\n     PageBtree getPage(int id) {\n         Page p = store.getPage(id);\n         if (p == null) {\n-            PageBtreeLeaf empty = PageBtreeLeaf.create(this, id, PageBtree.ROOT);\n+            PageBtreeLeaf empty =\n+                    PageBtreeLeaf.create(this, id, PageBtree.ROOT);\n             // could have been created before, but never committed\n             store.logUndo(empty, null);\n             store.update(empty);\n             return empty;\n         } else if (!(p instanceof PageBtree)) {\n-            throw DbException.get(ErrorCode.FILE_CORRUPTED_1, String.valueOf(p));\n+            throw DbException\n+                    .get(ErrorCode.FILE_CORRUPTED_1, String.valueOf(p));\n         }\n         return (PageBtree) p;\n     }\n@@ -170,7 +176,8 @@ public class PageBtreeIndex extends PageIndex {\n     }\n \n     @Override\n-    public Cursor findNext(SessionLocal session, SearchRow first, SearchRow last) {\n+    public Cursor findNext(SessionLocal session, SearchRow first,\n+                           SearchRow last) {\n         return find(session, first, true, last);\n     }\n \n@@ -180,7 +187,7 @@ public class PageBtreeIndex extends PageIndex {\n     }\n \n     private Cursor find(SessionLocal session, SearchRow first, boolean bigger,\n-            SearchRow last) {\n+                        SearchRow last) {\n         if (store == null) {\n             throw DbException.get(ErrorCode.OBJECT_CLOSED);\n         }\n@@ -224,8 +231,9 @@ public class PageBtreeIndex extends PageIndex {\n \n     @Override\n     public double getCost(SessionLocal session, int[] masks,\n-            TableFilter[] filters, int filter, SortOrder sortOrder,\n-            AllColumnsForPlan allColumnsSet) {\n+                          TableFilter[] filters, int filter,\n+                          SortOrder sortOrder,\n+                          AllColumnsForPlan allColumnsSet) {\n         return 10 * getCostRangeIndex(masks, tableData.getRowCount(session),\n                 filters, filter, sortOrder, false, allColumnsSet);\n     }\n@@ -295,7 +303,7 @@ public class PageBtreeIndex extends PageIndex {\n      * Get a row from the main index.\n      *\n      * @param session the session\n-     * @param key the row key\n+     * @param key     the row key\n      * @return the row\n      */\n     @Override\n@@ -339,14 +347,14 @@ public class PageBtreeIndex extends PageIndex {\n     /**\n      * Read a row from the data page at the given offset.\n      *\n-     * @param data the data\n-     * @param offset the offset\n+     * @param data         the data\n+     * @param offset       the offset\n      * @param onlyPosition whether only the position of the row is stored\n-     * @param needData whether the row data is required\n+     * @param needData     whether the row data is required\n      * @return the row\n      */\n     SearchRow readRow(Data data, int offset, boolean onlyPosition,\n-            boolean needData) {\n+                      boolean needData) {\n         synchronized (data) {\n             data.setPos(offset);\n             long key = data.readVarLong();\n@@ -381,10 +389,10 @@ public class PageBtreeIndex extends PageIndex {\n     /**\n      * Write a row to the data page at the given offset.\n      *\n-     * @param data the data\n-     * @param offset the offset\n+     * @param data         the data\n+     * @param offset       the offset\n      * @param onlyPosition whether only the position of the row is stored\n-     * @param row the row to write\n+     * @param row          the row to write\n      */\n     void writeRow(Data data, int offset, SearchRow row, boolean onlyPosition) {\n         data.setPos(offset);\n@@ -400,7 +408,7 @@ public class PageBtreeIndex extends PageIndex {\n     /**\n      * Get the size of a row (only the part that is stored in the index).\n      *\n-     * @param row the row\n+     * @param row          the row\n      * @param onlyPosition whether only the position of the row is stored\n      * @return the number of bytes\n      */\n@@ -423,7 +431,7 @@ public class PageBtreeIndex extends PageIndex {\n      * The root page has changed.\n      *\n      * @param session the session\n-     * @param newPos the new position\n+     * @param newPos  the new position\n      */\n     void setRootPageId(SessionLocal session, int newPos) {\n         store.removeMeta(this, session);\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/40/PageBtreeIndex.java\nindex 3792916c34d..cdd4da9bfb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/40/PageBtreeIndex.java\n@@ -77,7 +77,7 @@ public class PageBtreeIndex extends PageIndex {\n         }\n         this.needRebuild = needRebuild;\n         if (trace.isDebugEnabled()) {\n-            trace.debug(\"opened {0} rows: {1}\", getName() , rowCount);\n+            trace.debug(\"opened {0} rows: {1}\", getName(), rowCount);\n         }\n         memoryPerPage = (PageBtree.MEMORY_PAGE_BTREE + store.getPageSize()) >> 2;\n     }\n@@ -485,4 +485,4 @@ public class PageBtreeIndex extends PageIndex {\n         return false;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/40/PageBtreeIndex.java\nindex 3792916c34d..171cce5ded5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/40/PageBtreeIndex.java\n@@ -29,10 +29,11 @@ import org.h2.value.ValueNull;\n  * This is the most common type of index, a b tree index.\n  * Only the data of the indexed columns are stored in the index.\n  */\n+\n+\n public class PageBtreeIndex extends PageIndex {\n \n     private static int memoryChangeRequired;\n-\n     private final PageStore store;\n     private final PageStoreTable tableData;\n     private final boolean needRebuild;\n@@ -40,9 +41,7 @@ public class PageBtreeIndex extends PageIndex {\n     private int memoryPerPage;\n     private int memoryCount;\n \n-    public PageBtreeIndex(PageStoreTable table, int id, String indexName,\n-            IndexColumn[] columns,\n-            IndexType indexType, boolean create, SessionLocal session) {\n+    public PageBtreeIndex(PageStoreTable table, int id, String indexName, IndexColumn[] columns, IndexType indexType, boolean create, SessionLocal session) {\n         super(table, id, indexName, columns, indexType);\n         if (!database.isStarting() && create) {\n             checkIndexColumnTypes(columns);\n@@ -77,7 +76,7 @@ public class PageBtreeIndex extends PageIndex {\n         }\n         this.needRebuild = needRebuild;\n         if (trace.isDebugEnabled()) {\n-            trace.debug(\"opened {0} rows: {1}\", getName() , rowCount);\n+            trace.debug(\"opened {0} rows: {1}\", getName(), rowCount);\n         }\n         memoryPerPage = (PageBtree.MEMORY_PAGE_BTREE + store.getPageSize()) >> 2;\n     }\n@@ -115,8 +114,7 @@ public class PageBtreeIndex extends PageIndex {\n             page1.setPageId(id);\n             page1.setParentPageId(rootPageId);\n             page2.setParentPageId(rootPageId);\n-            PageBtreeNode newRoot = PageBtreeNode.create(\n-                    this, rootPageId, PageBtree.ROOT);\n+            PageBtreeNode newRoot = PageBtreeNode.create(this, rootPageId, PageBtree.ROOT);\n             store.logUndo(newRoot, null);\n             newRoot.init(page1, pivot, page2);\n             store.update(page1);\n@@ -134,6 +132,7 @@ public class PageBtreeIndex extends PageIndex {\n      * @param row the row\n      * @return the search row\n      */\n+\n     private SearchRow getSearchRow(Row row) {\n         SearchRow r = table.getTemplateSimpleRow(columns.length == 1);\n         r.setKey(row.getKey());\n@@ -150,6 +149,8 @@ public class PageBtreeIndex extends PageIndex {\n      * @param id the page id\n      * @return the page\n      */\n+\n+\n     PageBtree getPage(int id) {\n         Page p = store.getPage(id);\n         if (p == null) {\n@@ -179,8 +180,7 @@ public class PageBtreeIndex extends PageIndex {\n         return find(session, first, false, last);\n     }\n \n-    private Cursor find(SessionLocal session, SearchRow first, boolean bigger,\n-            SearchRow last) {\n+    private Cursor find(SessionLocal session, SearchRow first, boolean bigger, SearchRow last) {\n         if (store == null) {\n             throw DbException.get(ErrorCode.OBJECT_CLOSED);\n         }\n@@ -223,11 +223,9 @@ public class PageBtreeIndex extends PageIndex {\n     }\n \n     @Override\n-    public double getCost(SessionLocal session, int[] masks,\n-            TableFilter[] filters, int filter, SortOrder sortOrder,\n-            AllColumnsForPlan allColumnsSet) {\n-        return 10 * getCostRangeIndex(masks, tableData.getRowCount(session),\n-                filters, filter, sortOrder, false, allColumnsSet);\n+    public double getCost(SessionLocal session, int[] masks, TableFilter[] filters, int filter, SortOrder sortOrder, AllColumnsForPlan allColumnsSet) {\n+        return 10 * getCostRangeIndex(\n+masks, tableData.getRowCount(session), filters, filter, sortOrder, false, allColumnsSet);\n     }\n \n     @Override\n@@ -298,11 +296,13 @@ public class PageBtreeIndex extends PageIndex {\n      * @param key the row key\n      * @return the row\n      */\n+\n     @Override\n     public Row getRow(SessionLocal session, long key) {\n         return tableData.getRow(session, key);\n     }\n \n+\n     PageStore getPageStore() {\n         return store;\n     }\n@@ -345,8 +345,9 @@ public class PageBtreeIndex extends PageIndex {\n      * @param needData whether the row data is required\n      * @return the row\n      */\n-    SearchRow readRow(Data data, int offset, boolean onlyPosition,\n-            boolean needData) {\n+\n+\n+    SearchRow readRow(Data data, int offset, boolean onlyPosition, boolean needData) {\n         synchronized (data) {\n             data.setPos(offset);\n             long key = data.readVarLong();\n@@ -374,6 +375,8 @@ public class PageBtreeIndex extends PageIndex {\n      * @param key the key\n      * @return the row\n      */\n+\n+\n     SearchRow readRow(long key) {\n         return tableData.getRow(null, key);\n     }\n@@ -386,6 +389,8 @@ public class PageBtreeIndex extends PageIndex {\n      * @param onlyPosition whether only the position of the row is stored\n      * @param row the row to write\n      */\n+\n+\n     void writeRow(Data data, int offset, SearchRow row, boolean onlyPosition) {\n         data.setPos(offset);\n         data.writeVarLong(row.getKey());\n@@ -404,6 +409,8 @@ public class PageBtreeIndex extends PageIndex {\n      * @param onlyPosition whether only the position of the row is stored\n      * @return the number of bytes\n      */\n+\n+\n     int getRowSize(SearchRow row, boolean onlyPosition) {\n         int rowsize = Data.getVarLongLen(row.getKey());\n         if (!onlyPosition) {\n@@ -425,6 +432,8 @@ public class PageBtreeIndex extends PageIndex {\n      * @param session the session\n      * @param newPos the new position\n      */\n+\n+\n     void setRootPageId(SessionLocal session, int newPos) {\n         store.removeMeta(this, session);\n         this.rootPageId = newPos;\n@@ -449,10 +458,13 @@ public class PageBtreeIndex extends PageIndex {\n      * @param row the row\n      * @return true if it contains data\n      */\n+\n+\n     boolean hasData(SearchRow row) {\n         return row.getValue(columns[0].getColumnId()) != null;\n     }\n \n+\n     int getMemoryPerPage() {\n         return memoryPerPage;\n     }\n@@ -463,12 +475,13 @@ public class PageBtreeIndex extends PageIndex {\n      *\n      * @param x the new memory size\n      */\n+\n+\n     void memoryChange(int x) {\n         if (memoryCount < Constants.MEMORY_FACTOR) {\n             memoryPerPage += (x - memoryPerPage) / ++memoryCount;\n         } else {\n-            memoryPerPage += (x > memoryPerPage ? 1 : -1) +\n-                    ((x - memoryPerPage) / Constants.MEMORY_FACTOR);\n+            memoryPerPage += (x > memoryPerPage ? 1 : -1) + ((x - memoryPerPage) / Constants.MEMORY_FACTOR);\n         }\n     }\n \n@@ -477,6 +490,8 @@ public class PageBtreeIndex extends PageIndex {\n      *\n      * @return true if it is\n      */\n+\n+\n     static boolean isMemoryChangeRequired() {\n         if (memoryChangeRequired-- <= 0) {\n             memoryChangeRequired = 10;\n@@ -485,4 +500,4 @@ public class PageBtreeIndex extends PageIndex {\n         return false;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/40/PageBtreeIndex.java\nindex 3792916c34d..e4d401df06b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/40/PageBtreeIndex.java\n@@ -77,7 +77,7 @@ public class PageBtreeIndex extends PageIndex {\n         }\n         this.needRebuild = needRebuild;\n         if (trace.isDebugEnabled()) {\n-            trace.debug(\"opened {0} rows: {1}\", getName() , rowCount);\n+            trace.debug(\"opened {0} rows: {1}\", getName(), rowCount);\n         }\n         memoryPerPage = (PageBtree.MEMORY_PAGE_BTREE + store.getPageSize()) >> 2;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/40/PageBtreeIndex.java\nindex 3792916c34d..e4d401df06b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/40/PageBtreeIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/40/PageBtreeIndex.java\n@@ -77,7 +77,7 @@ public class PageBtreeIndex extends PageIndex {\n         }\n         this.needRebuild = needRebuild;\n         if (trace.isDebugEnabled()) {\n-            trace.debug(\"opened {0} rows: {1}\", getName() , rowCount);\n+            trace.debug(\"opened {0} rows: {1}\", getName(), rowCount);\n         }\n         memoryPerPage = (PageBtree.MEMORY_PAGE_BTREE + store.getPageSize()) >> 2;\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
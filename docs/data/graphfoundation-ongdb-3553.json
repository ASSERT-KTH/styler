{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3553",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3553/NeoCommandType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3553/NeoCommandType.java\nindex 6692463f14a..2884e7255cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3553/NeoCommandType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3553/NeoCommandType.java\n@@ -17,31 +17,32 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.command;\n \n public interface NeoCommandType\n {\n-    // means the first byte of the command record was only written but second\n-    // (saying what type) did not get written but the file still got expanded\n-    byte NONE = (byte) 0;\n+  // means the first byte of the command record was only written but second\n+  // (saying what type) did not get written but the file still got expanded\n+  byte NONE = (byte) 0;\n \n-    byte NODE_COMMAND = (byte) 1;\n-    byte PROP_COMMAND = (byte) 2;\n-    byte REL_COMMAND = (byte) 3;\n-    byte REL_TYPE_COMMAND = (byte) 4;\n-    byte PROP_INDEX_COMMAND = (byte) 5;\n-    byte NEOSTORE_COMMAND = (byte) 6;\n-    byte SCHEMA_RULE_COMMAND = (byte) 7;\n-    byte LABEL_KEY_COMMAND = (byte) 8;\n-    byte REL_GROUP_COMMAND = (byte) 9;\n+  byte NODE_COMMAND = (byte) 1;\n+  byte PROP_COMMAND = (byte) 2;\n+  byte REL_COMMAND = (byte) 3;\n+  byte REL_TYPE_COMMAND = (byte) 4;\n+  byte PROP_INDEX_COMMAND = (byte) 5;\n+  byte NEOSTORE_COMMAND = (byte) 6;\n+  byte SCHEMA_RULE_COMMAND = (byte) 7;\n+  byte LABEL_KEY_COMMAND = (byte) 8;\n+  byte REL_GROUP_COMMAND = (byte) 9;\n \n-    byte INDEX_DEFINE_COMMAND = (byte) 10;\n-    byte INDEX_ADD_COMMAND = (byte) 11;\n-    byte INDEX_ADD_RELATIONSHIP_COMMAND = (byte) 12;\n-    byte INDEX_REMOVE_COMMAND = (byte) 13;\n-    byte INDEX_DELETE_COMMAND = (byte) 14;\n-    byte INDEX_CREATE_COMMAND = (byte) 15;\n+  byte INDEX_DEFINE_COMMAND = (byte) 10;\n+  byte INDEX_ADD_COMMAND = (byte) 11;\n+  byte INDEX_ADD_RELATIONSHIP_COMMAND = (byte) 12;\n+  byte INDEX_REMOVE_COMMAND = (byte) 13;\n+  byte INDEX_DELETE_COMMAND = (byte) 14;\n+  byte INDEX_CREATE_COMMAND = (byte) 15;\n \n-    byte UPDATE_RELATIONSHIP_COUNTS_COMMAND = (byte) 16;\n-    byte UPDATE_NODE_COUNTS_COMMAND = (byte) 17;\n+  byte UPDATE_RELATIONSHIP_COUNTS_COMMAND = (byte) 16;\n+  byte UPDATE_NODE_COUNTS_COMMAND = (byte) 17;\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3553/NeoCommandType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3553/NeoCommandType.java\nindex 6692463f14a..7f0a83910e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3553/NeoCommandType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3553/NeoCommandType.java\n@@ -44,4 +44,4 @@ public interface NeoCommandType\n \n     byte UPDATE_RELATIONSHIP_COUNTS_COMMAND = (byte) 16;\n     byte UPDATE_NODE_COUNTS_COMMAND = (byte) 17;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "914",
    "information": {
        "errors": [
            {
                "line": "48",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * <p>Original Java logging levels are added as labels (with {@code levelName} and\n * {@code levelValue} keys, respectively) to the corresponding Stackdriver Logging {@link LogEntry}.\n * You can read entry labels using {@link LogEntry#getLabels()}. To use logging levels that correspond\n * to Stackdriver Logging severities you can use {@link LoggingLevel}.\n *\n * <p><b>Configuration</b>: By default each {@code AsyncLoggingHandler} is initialized using the",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/914/AsyncLoggingHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/914/AsyncLoggingHandler.java\nindex 1773ef07aa5..7093807420f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/914/AsyncLoggingHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/914/AsyncLoggingHandler.java\n@@ -98,4 +98,4 @@ public class AsyncLoggingHandler extends LoggingHandler {\n   void write(List<LogEntry> entries, WriteOption... options) {\n     getLogging().writeAsync(entries, options);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/914/AsyncLoggingHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/914/AsyncLoggingHandler.java\nindex 1773ef07aa5..91fc2a4896e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/914/AsyncLoggingHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/914/AsyncLoggingHandler.java\n@@ -18,7 +18,6 @@ package com.google.cloud.logging;\n \n import com.google.cloud.MonitoredResource;\n import com.google.cloud.logging.Logging.WriteOption;\n-\n import java.util.List;\n import java.util.logging.Filter;\n import java.util.logging.Formatter;\n@@ -76,6 +75,8 @@ import java.util.logging.SimpleFormatter;\n  * {@code com.example.mypackage.handlers=com.google.cloud.logging.AsyncLoggingHandler}\n  * </pre>\n  */\n+\n+\n public class AsyncLoggingHandler extends LoggingHandler {\n \n   public AsyncLoggingHandler() {\n@@ -98,4 +99,4 @@ public class AsyncLoggingHandler extends LoggingHandler {\n   void write(List<LogEntry> entries, WriteOption... options) {\n     getLogging().writeAsync(entries, options);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "458",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/458/NetworkMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/458/NetworkMetrics.java\nindex 73c3c0f4213..bc4de068417 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/458/NetworkMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/458/NetworkMetrics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.source.cluster;\n \n import com.codahale.metrics.Gauge;\n@@ -32,54 +33,54 @@ import org.neo4j.metrics.source.ByteCountsMetric;\n \n import static com.codahale.metrics.MetricRegistry.name;\n \n-@Documented( \".Network Metrics\" )\n+@Documented(\".Network Metrics\")\n public class NetworkMetrics extends LifecycleAdapter\n {\n-    private static final String NAME_PREFIX = \"neo4j.network\";\n+  private static final String NAME_PREFIX = \"neo4j.network\";\n \n-    @Documented( \"The amount of bytes transmitted on the network containing the transaction data from a slave \" +\n-                 \"to the master in order to be committed\" )\n-    public static final String SLAVE_NETWORK_TX_WRITES = name( NAME_PREFIX, \"slave_network_tx_writes\" );\n-    @Documented( \"The amount of bytes transmitted on the network while copying stores from a machines to another\" )\n-    public static final String MASTER_NETWORK_STORE_WRITES = name( NAME_PREFIX, \"master_network_store_writes\" );\n-    @Documented( \"The amount of bytes transmitted on the network containing the transaction data from a master \" +\n-                 \"to the slaves in order to propagate committed transactions\" )\n-    public static final String MASTER_NETWORK_TX_WRITES = name( NAME_PREFIX, \"master_network_tx_writes\" );\n+  @Documented(\"The amount of bytes transmitted on the network containing the transaction data from a slave \" +\n+      \"to the master in order to be committed\")\n+  public static final String SLAVE_NETWORK_TX_WRITES = name(NAME_PREFIX, \"slave_network_tx_writes\");\n+  @Documented(\"The amount of bytes transmitted on the network while copying stores from a machines to another\")\n+  public static final String MASTER_NETWORK_STORE_WRITES = name(NAME_PREFIX, \"master_network_store_writes\");\n+  @Documented(\"The amount of bytes transmitted on the network containing the transaction data from a master \" +\n+      \"to the slaves in order to propagate committed transactions\")\n+  public static final String MASTER_NETWORK_TX_WRITES = name(NAME_PREFIX, \"master_network_tx_writes\");\n \n-    private final MetricRegistry registry;\n-    private final Monitors monitors;\n-    private final ByteCountsMetric masterNetworkTransactionWrites = new ByteCountsMetric();\n-    private final ByteCountsMetric masterNetworkStoreWrites = new ByteCountsMetric();\n-    private final ByteCountsMetric slaveNetworkTransactionWrites = new ByteCountsMetric();\n+  private final MetricRegistry registry;\n+  private final Monitors monitors;\n+  private final ByteCountsMetric masterNetworkTransactionWrites = new ByteCountsMetric();\n+  private final ByteCountsMetric masterNetworkStoreWrites = new ByteCountsMetric();\n+  private final ByteCountsMetric slaveNetworkTransactionWrites = new ByteCountsMetric();\n \n-    public NetworkMetrics( MetricRegistry registry, Monitors monitors )\n-    {\n-        this.registry = registry;\n-        this.monitors = monitors;\n-    }\n+  public NetworkMetrics(MetricRegistry registry, Monitors monitors)\n+  {\n+    this.registry = registry;\n+    this.monitors = monitors;\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        monitors.addMonitorListener( masterNetworkTransactionWrites, MasterServer.class.getName() );\n-        monitors.addMonitorListener( masterNetworkStoreWrites, ToNetworkStoreWriter.class.getName(),\n-                ToNetworkStoreWriter.STORE_COPIER_MONITOR_TAG );\n-        monitors.addMonitorListener( slaveNetworkTransactionWrites, MasterClient320.class.getName() );\n+  @Override\n+  public void start()\n+  {\n+    monitors.addMonitorListener(masterNetworkTransactionWrites, MasterServer.class.getName());\n+    monitors.addMonitorListener(masterNetworkStoreWrites, ToNetworkStoreWriter.class.getName(),\n+        ToNetworkStoreWriter.STORE_COPIER_MONITOR_TAG);\n+    monitors.addMonitorListener(slaveNetworkTransactionWrites, MasterClient320.class.getName());\n \n-        registry.register( MASTER_NETWORK_TX_WRITES, (Gauge<Long>) masterNetworkTransactionWrites::getBytesWritten );\n-        registry.register( MASTER_NETWORK_STORE_WRITES, (Gauge<Long>) masterNetworkStoreWrites::getBytesWritten );\n-        registry.register( SLAVE_NETWORK_TX_WRITES, (Gauge<Long>) slaveNetworkTransactionWrites::getBytesWritten );\n-    }\n+    registry.register(MASTER_NETWORK_TX_WRITES, (Gauge<Long>) masterNetworkTransactionWrites::getBytesWritten);\n+    registry.register(MASTER_NETWORK_STORE_WRITES, (Gauge<Long>) masterNetworkStoreWrites::getBytesWritten);\n+    registry.register(SLAVE_NETWORK_TX_WRITES, (Gauge<Long>) slaveNetworkTransactionWrites::getBytesWritten);\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        registry.remove( MASTER_NETWORK_TX_WRITES );\n-        registry.remove( MASTER_NETWORK_STORE_WRITES );\n-        registry.remove( SLAVE_NETWORK_TX_WRITES );\n+  @Override\n+  public void stop()\n+  {\n+    registry.remove(MASTER_NETWORK_TX_WRITES);\n+    registry.remove(MASTER_NETWORK_STORE_WRITES);\n+    registry.remove(SLAVE_NETWORK_TX_WRITES);\n \n-        monitors.removeMonitorListener( masterNetworkTransactionWrites );\n-        monitors.removeMonitorListener( masterNetworkStoreWrites );\n-        monitors.removeMonitorListener( slaveNetworkTransactionWrites );\n-    }\n+    monitors.removeMonitorListener(masterNetworkTransactionWrites);\n+    monitors.removeMonitorListener(masterNetworkStoreWrites);\n+    monitors.removeMonitorListener(slaveNetworkTransactionWrites);\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/458/NetworkMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/458/NetworkMetrics.java\nindex 73c3c0f4213..870cb0f3e80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/458/NetworkMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/458/NetworkMetrics.java\n@@ -37,14 +37,12 @@ public class NetworkMetrics extends LifecycleAdapter\n {\n     private static final String NAME_PREFIX = \"neo4j.network\";\n \n-    @Documented( \"The amount of bytes transmitted on the network containing the transaction data from a slave \" +\n-                 \"to the master in order to be committed\" )\n-    public static final String SLAVE_NETWORK_TX_WRITES = name( NAME_PREFIX, \"slave_network_tx_writes\" );\n+    @Documented( \"The amount of bytes transmitted on the network containing the transaction data from a slave \" + \"to the master in order to be committed\" )\n+public static final String SLAVE_NETWORK_TX_WRITES = name( NAME_PREFIX, \"slave_network_tx_writes\" );\n     @Documented( \"The amount of bytes transmitted on the network while copying stores from a machines to another\" )\n     public static final String MASTER_NETWORK_STORE_WRITES = name( NAME_PREFIX, \"master_network_store_writes\" );\n-    @Documented( \"The amount of bytes transmitted on the network containing the transaction data from a master \" +\n-                 \"to the slaves in order to propagate committed transactions\" )\n-    public static final String MASTER_NETWORK_TX_WRITES = name( NAME_PREFIX, \"master_network_tx_writes\" );\n+    @Documented( \"The amount of bytes transmitted on the network containing the transaction data from a master \" + \"to the slaves in order to propagate committed transactions\" )\n+public static final String MASTER_NETWORK_TX_WRITES = name( NAME_PREFIX, \"master_network_tx_writes\" );\n \n     private final MetricRegistry registry;\n     private final Monitors monitors;\n@@ -62,11 +60,9 @@ public class NetworkMetrics extends LifecycleAdapter\n     public void start()\n     {\n         monitors.addMonitorListener( masterNetworkTransactionWrites, MasterServer.class.getName() );\n-        monitors.addMonitorListener( masterNetworkStoreWrites, ToNetworkStoreWriter.class.getName(),\n-                ToNetworkStoreWriter.STORE_COPIER_MONITOR_TAG );\n-        monitors.addMonitorListener( slaveNetworkTransactionWrites, MasterClient320.class.getName() );\n-\n-        registry.register( MASTER_NETWORK_TX_WRITES, (Gauge<Long>) masterNetworkTransactionWrites::getBytesWritten );\n+        monitors.addMonitorListener( masterNetworkStoreWrites, ToNetworkStoreWriter.class.getName(), ToNetworkStoreWriter.STORE_COPIER_MONITOR_TAG );\n+monitors.addMonitorListener( slaveNetworkTransactionWrites, MasterClient320.class.getName() );\n+registry.register( MASTER_NETWORK_TX_WRITES, (Gauge<Long>) masterNetworkTransactionWrites::getBytesWritten );\n         registry.register( MASTER_NETWORK_STORE_WRITES, (Gauge<Long>) masterNetworkStoreWrites::getBytesWritten );\n         registry.register( SLAVE_NETWORK_TX_WRITES, (Gauge<Long>) slaveNetworkTransactionWrites::getBytesWritten );\n     }\n@@ -77,9 +73,8 @@ public class NetworkMetrics extends LifecycleAdapter\n         registry.remove( MASTER_NETWORK_TX_WRITES );\n         registry.remove( MASTER_NETWORK_STORE_WRITES );\n         registry.remove( SLAVE_NETWORK_TX_WRITES );\n-\n-        monitors.removeMonitorListener( masterNetworkTransactionWrites );\n+monitors.removeMonitorListener( masterNetworkTransactionWrites );\n         monitors.removeMonitorListener( masterNetworkStoreWrites );\n         monitors.removeMonitorListener( slaveNetworkTransactionWrites );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "156",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "column": "177",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/458/NetworkMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/458/NetworkMetrics.java\nindex 73c3c0f4213..4270f64a3e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/458/NetworkMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/458/NetworkMetrics.java\n@@ -21,7 +21,6 @@ package org.neo4j.metrics.source.cluster;\n \n import com.codahale.metrics.Gauge;\n import com.codahale.metrics.MetricRegistry;\n-\n import org.neo4j.com.storecopy.ToNetworkStoreWriter;\n import org.neo4j.kernel.ha.MasterClient320;\n import org.neo4j.kernel.ha.com.master.MasterServer;\n@@ -29,23 +28,18 @@ import org.neo4j.kernel.impl.annotations.Documented;\n import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.metrics.source.ByteCountsMetric;\n-\n import static com.codahale.metrics.MetricRegistry.name;\n \n-@Documented( \".Network Metrics\" )\n+@ Documented( \".Network Metrics\")\n public class NetworkMetrics extends LifecycleAdapter\n {\n     private static final String NAME_PREFIX = \"neo4j.network\";\n-\n-    @Documented( \"The amount of bytes transmitted on the network containing the transaction data from a slave \" +\n-                 \"to the master in order to be committed\" )\n+    @ Documented( \"The amount of bytes transmitted on the network containing the transaction data from a slave \" + \"to the master in order to be committed\")\n     public static final String SLAVE_NETWORK_TX_WRITES = name( NAME_PREFIX, \"slave_network_tx_writes\" );\n-    @Documented( \"The amount of bytes transmitted on the network while copying stores from a machines to another\" )\n+    @ Documented( \"The amount of bytes transmitted on the network while copying stores from a machines to another\")\n     public static final String MASTER_NETWORK_STORE_WRITES = name( NAME_PREFIX, \"master_network_store_writes\" );\n-    @Documented( \"The amount of bytes transmitted on the network containing the transaction data from a master \" +\n-                 \"to the slaves in order to propagate committed transactions\" )\n+    @ Documented( \"The amount of bytes transmitted on the network containing the transaction data from a master \" + \"to the slaves in order to propagate committed transactions\")\n     public static final String MASTER_NETWORK_TX_WRITES = name( NAME_PREFIX, \"master_network_tx_writes\" );\n-\n     private final MetricRegistry registry;\n     private final Monitors monitors;\n     private final ByteCountsMetric masterNetworkTransactionWrites = new ByteCountsMetric();\n@@ -62,10 +56,8 @@ public class NetworkMetrics extends LifecycleAdapter\n     public void start()\n     {\n         monitors.addMonitorListener( masterNetworkTransactionWrites, MasterServer.class.getName() );\n-        monitors.addMonitorListener( masterNetworkStoreWrites, ToNetworkStoreWriter.class.getName(),\n-                ToNetworkStoreWriter.STORE_COPIER_MONITOR_TAG );\n+        monitors.addMonitorListener( masterNetworkStoreWrites, ToNetworkStoreWriter.class.getName(), ToNetworkStoreWriter.STORE_COPIER_MONITOR_TAG );\n         monitors.addMonitorListener( slaveNetworkTransactionWrites, MasterClient320.class.getName() );\n-\n         registry.register( MASTER_NETWORK_TX_WRITES, (Gauge<Long>) masterNetworkTransactionWrites::getBytesWritten );\n         registry.register( MASTER_NETWORK_STORE_WRITES, (Gauge<Long>) masterNetworkStoreWrites::getBytesWritten );\n         registry.register( SLAVE_NETWORK_TX_WRITES, (Gauge<Long>) slaveNetworkTransactionWrites::getBytesWritten );\n@@ -77,9 +69,8 @@ public class NetworkMetrics extends LifecycleAdapter\n         registry.remove( MASTER_NETWORK_TX_WRITES );\n         registry.remove( MASTER_NETWORK_STORE_WRITES );\n         registry.remove( SLAVE_NETWORK_TX_WRITES );\n-\n         monitors.removeMonitorListener( masterNetworkTransactionWrites );\n         monitors.removeMonitorListener( masterNetworkStoreWrites );\n         monitors.removeMonitorListener( slaveNetworkTransactionWrites );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2453",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2453/ProgressTrackingOutputStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2453/ProgressTrackingOutputStream.java\nindex f01d8e3c2a0..7c407ce82a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2453/ProgressTrackingOutputStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2453/ProgressTrackingOutputStream.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.neo4j.pushtocloud;\n \n import java.io.IOException;\n@@ -26,17 +27,17 @@ class ProgressTrackingOutputStream extends OutputStream\n     private final OutputStream actual;\n     private final Progress progress;\n \n-    ProgressTrackingOutputStream( OutputStream actual, Progress progress )\n+    ProgressTrackingOutputStream(OutputStream actual, Progress progress)\n     {\n         this.actual = actual;\n         this.progress = progress;\n     }\n \n     @Override\n-    public void write( byte[] b, int off, int len ) throws IOException\n+    public void write(byte[] b, int off, int len) throws IOException\n     {\n-        actual.write( b, off, len );\n-        progress.add( len );\n+        actual.write(b, off, len);\n+        progress.add(len);\n     }\n \n     @Override\n@@ -52,10 +53,10 @@ class ProgressTrackingOutputStream extends OutputStream\n     }\n \n     @Override\n-    public void write( int b ) throws IOException\n+    public void write(int b) throws IOException\n     {\n-        actual.write( b );\n-        progress.add( 1 );\n+        actual.write(b);\n+        progress.add(1);\n     }\n \n     static class Progress\n@@ -71,31 +72,31 @@ class ProgressTrackingOutputStream extends OutputStream\n \n         /**\n          * @param progressListener {@link ProgressListener} to report upload progress to.\n-         * @param position initial position to start the upload from. This is only useful if the upload was started and made it part-way\n-         * there before the command failed and the command has to be reissued at which point it can be resumed. This position is the position\n-         * where the upload will continue from. This is separate from temporary failure where the upload will be retried after some back-off.\n-         * That logic will instead make use of {@link #rewindTo(long)}.\n+         * @param position         initial position to start the upload from. This is only useful if the upload was started and made it part-way\n+         *                         there before the command failed and the command has to be reissued at which point it can be resumed. This position is the position\n+         *                         where the upload will continue from. This is separate from temporary failure where the upload will be retried after some back-off.\n+         *                         That logic will instead make use of {@link #rewindTo(long)}.\n          */\n-        Progress( ProgressListener progressListener, long position )\n+        Progress(ProgressListener progressListener, long position)\n         {\n             uploadProgress = progressListener;\n-            if ( position > 0 )\n+            if (position > 0)\n             {\n-                uploadProgress.add( position );\n+                uploadProgress.add(position);\n             }\n         }\n \n-        void add( int increment )\n+        void add(int increment)\n         {\n             progress += increment;\n-            if ( progress > highestReportedProgress )\n+            if (progress > highestReportedProgress)\n             {\n-                uploadProgress.add( progress - highestReportedProgress );\n+                uploadProgress.add(progress - highestReportedProgress);\n                 highestReportedProgress = progress;\n             }\n         }\n \n-        void rewindTo( long absoluteProgress )\n+        void rewindTo(long absoluteProgress)\n         {\n             // May be lower than what we're at, but that's fine\n             progress = absoluteProgress;\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
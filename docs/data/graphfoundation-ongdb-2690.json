{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2690",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "291",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "296",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2690/NeoStoreFileListing.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2690/NeoStoreFileListing.java\nindex 48db4cb8882..43bb73f5da5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2690/NeoStoreFileListing.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2690/NeoStoreFileListing.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state;\n \n import java.io.File;\n@@ -48,270 +49,268 @@ import static org.neo4j.helpers.collection.Iterators.resourceIterator;\n \n public class NeoStoreFileListing\n {\n-    private final File storeDir;\n-    private final LogFiles logFiles;\n-    private final StorageEngine storageEngine;\n-    private static final Function<File,StoreFileMetadata> toNotAStoreTypeFile =\n-            file -> new StoreFileMetadata( file, RecordFormat.NO_RECORD_SIZE );\n-    private static final Function<File, StoreFileMetadata> logFileMapper =\n-            file -> new StoreFileMetadata( file, RecordFormat.NO_RECORD_SIZE, true );\n-    private final NeoStoreFileIndexListing neoStoreFileIndexListing;\n-    private final Collection<StoreFileProvider> additionalProviders;\n-\n-    public NeoStoreFileListing( File storeDir, LogFiles logFiles,\n-            LabelScanStore labelScanStore, IndexingService indexingService,\n-            ExplicitIndexProviderLookup explicitIndexProviders, StorageEngine storageEngine )\n+  private final File storeDir;\n+  private final LogFiles logFiles;\n+  private final StorageEngine storageEngine;\n+  private static final Function<File, StoreFileMetadata> toNotAStoreTypeFile =\n+      file -> new StoreFileMetadata(file, RecordFormat.NO_RECORD_SIZE);\n+  private static final Function<File, StoreFileMetadata> logFileMapper =\n+      file -> new StoreFileMetadata(file, RecordFormat.NO_RECORD_SIZE, true);\n+  private final NeoStoreFileIndexListing neoStoreFileIndexListing;\n+  private final Collection<StoreFileProvider> additionalProviders;\n+\n+  public NeoStoreFileListing(File storeDir, LogFiles logFiles,\n+                             LabelScanStore labelScanStore, IndexingService indexingService,\n+                             ExplicitIndexProviderLookup explicitIndexProviders, StorageEngine storageEngine)\n+  {\n+    this.storeDir = storeDir;\n+    this.logFiles = logFiles;\n+    this.storageEngine = storageEngine;\n+    this.neoStoreFileIndexListing = new NeoStoreFileIndexListing(labelScanStore, indexingService, explicitIndexProviders);\n+    this.additionalProviders = new CopyOnWriteArraySet<>();\n+  }\n+\n+  public StoreFileListingBuilder builder()\n+  {\n+    return new StoreFileListingBuilder();\n+  }\n+\n+  public NeoStoreFileIndexListing getNeoStoreFileIndexListing()\n+  {\n+    return neoStoreFileIndexListing;\n+  }\n+\n+  public void registerStoreFileProvider(StoreFileProvider provider)\n+  {\n+    additionalProviders.add(provider);\n+  }\n+\n+  public interface StoreFileProvider\n+  {\n+    /**\n+     * @param fileMetadataCollection the collection to add the files to\n+     * @return A {@link Resource} that should be closed when we are done working with the files added to the collection\n+     * @throws IOException if the provider is unable to prepare the file listing\n+     */\n+    Resource addFilesTo(Collection<StoreFileMetadata> fileMetadataCollection) throws IOException;\n+  }\n+\n+  private void placeMetaDataStoreLast(List<StoreFileMetadata> files)\n+  {\n+    int index = 0;\n+    for (StoreFileMetadata file : files)\n+    {\n+      Optional<StoreType> storeType = StoreType.typeOf(file.file().getName());\n+      if (storeType.isPresent() && storeType.get().equals(StoreType.META_DATA))\n+      {\n+        break;\n+      }\n+      index++;\n+    }\n+    if (index < files.size() - 1)\n     {\n-        this.storeDir = storeDir;\n-        this.logFiles = logFiles;\n-        this.storageEngine = storageEngine;\n-        this.neoStoreFileIndexListing = new NeoStoreFileIndexListing( labelScanStore, indexingService, explicitIndexProviders );\n-        this.additionalProviders = new CopyOnWriteArraySet<>();\n+      StoreFileMetadata metaDataStoreFile = files.remove(index);\n+      files.add(metaDataStoreFile);\n     }\n+  }\n \n-    public StoreFileListingBuilder builder()\n+  private void gatherNonRecordStores(Collection<StoreFileMetadata> files, boolean includeLogs)\n+  {\n+    File[] indexFiles = storeDir.listFiles((dir, name) -> name.equals(IndexConfigStore.INDEX_DB_FILE_NAME));\n+    if (indexFiles != null)\n+    {\n+      for (File file : indexFiles)\n+      {\n+        files.add(toNotAStoreTypeFile.apply(file));\n+      }\n+    }\n+    if (includeLogs)\n+    {\n+      File[] logFiles = this.logFiles.logFiles();\n+      for (File logFile : logFiles)\n+      {\n+        files.add(logFileMapper.apply(logFile));\n+      }\n+    }\n+  }\n+\n+  public class StoreFileListingBuilder\n+  {\n+    private boolean excludeLogFiles;\n+    private boolean excludeNonRecordStoreFiles;\n+    private boolean excludeNeoStoreFiles;\n+    private boolean excludeLabelScanStoreFiles;\n+    private boolean excludeSchemaIndexStoreFiles;\n+    private boolean excludeExplicitIndexStoreFiles;\n+    private boolean excludeAdditionalProviders;\n+\n+    private StoreFileListingBuilder()\n     {\n-        return new StoreFileListingBuilder();\n     }\n \n-    public NeoStoreFileIndexListing getNeoStoreFileIndexListing()\n+    private void excludeAll(boolean initiateInclusive)\n     {\n-        return neoStoreFileIndexListing;\n+      this.excludeLogFiles =\n+          this.excludeNonRecordStoreFiles =\n+              this.excludeNeoStoreFiles =\n+                  this.excludeLabelScanStoreFiles =\n+                      this.excludeSchemaIndexStoreFiles = this.excludeAdditionalProviders = this.excludeExplicitIndexStoreFiles = initiateInclusive;\n     }\n \n-    public void registerStoreFileProvider( StoreFileProvider provider )\n+    public StoreFileListingBuilder excludeAll()\n     {\n-        additionalProviders.add( provider );\n+      excludeAll(true);\n+      return this;\n     }\n \n-    public interface StoreFileProvider\n+    public StoreFileListingBuilder includeAll()\n     {\n-        /**\n-         * @param fileMetadataCollection the collection to add the files to\n-         * @return A {@link Resource} that should be closed when we are done working with the files added to the collection\n-         * @throws IOException if the provider is unable to prepare the file listing\n-         */\n-        Resource addFilesTo( Collection<StoreFileMetadata> fileMetadataCollection ) throws IOException;\n+      excludeAll(false);\n+      return this;\n     }\n \n-    private void placeMetaDataStoreLast( List<StoreFileMetadata> files )\n+    public StoreFileListingBuilder excludeLogFiles()\n     {\n-        int index = 0;\n-        for ( StoreFileMetadata file : files )\n-        {\n-            Optional<StoreType> storeType = StoreType.typeOf( file.file().getName() );\n-            if ( storeType.isPresent() && storeType.get().equals( StoreType.META_DATA ) )\n-            {\n-                break;\n-            }\n-            index++;\n-        }\n-        if ( index < files.size() - 1 )\n-        {\n-            StoreFileMetadata metaDataStoreFile = files.remove( index );\n-            files.add( metaDataStoreFile );\n-        }\n+      excludeLogFiles = true;\n+      return this;\n     }\n \n-    private void gatherNonRecordStores( Collection<StoreFileMetadata> files, boolean includeLogs )\n+    public StoreFileListingBuilder excludeNonRecordStoreFiles()\n     {\n-        File[] indexFiles = storeDir.listFiles( ( dir, name ) -> name.equals( IndexConfigStore.INDEX_DB_FILE_NAME ) );\n-        if ( indexFiles != null )\n-        {\n-            for ( File file : indexFiles )\n-            {\n-                files.add( toNotAStoreTypeFile.apply( file ) );\n-            }\n-        }\n-        if ( includeLogs )\n-        {\n-            File[] logFiles = this.logFiles.logFiles();\n-            for ( File logFile : logFiles )\n-            {\n-                files.add( logFileMapper.apply( logFile ) );\n-            }\n-        }\n+      excludeNonRecordStoreFiles = true;\n+      return this;\n     }\n \n-    public class StoreFileListingBuilder\n+    public StoreFileListingBuilder excludeNeoStoreFiles()\n     {\n-        private boolean excludeLogFiles;\n-        private boolean excludeNonRecordStoreFiles;\n-        private boolean excludeNeoStoreFiles;\n-        private boolean excludeLabelScanStoreFiles;\n-        private boolean excludeSchemaIndexStoreFiles;\n-        private boolean excludeExplicitIndexStoreFiles;\n-        private boolean excludeAdditionalProviders;\n-\n-        private StoreFileListingBuilder()\n-        {\n-        }\n+      excludeNeoStoreFiles = true;\n+      return this;\n+    }\n \n-        private void excludeAll( boolean initiateInclusive )\n-        {\n-            this.excludeLogFiles =\n-            this.excludeNonRecordStoreFiles =\n-            this.excludeNeoStoreFiles =\n-            this.excludeLabelScanStoreFiles =\n-                    this.excludeSchemaIndexStoreFiles = this.excludeAdditionalProviders = this.excludeExplicitIndexStoreFiles = initiateInclusive;\n-        }\n+    public StoreFileListingBuilder excludeLabelScanStoreFiles()\n+    {\n+      excludeLabelScanStoreFiles = true;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder excludeAll()\n-        {\n-            excludeAll( true );\n-            return this;\n-        }\n+    public StoreFileListingBuilder excludeSchemaIndexStoreFiles()\n+    {\n+      excludeSchemaIndexStoreFiles = true;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder includeAll()\n-        {\n-            excludeAll( false );\n-            return this;\n-        }\n+    public StoreFileListingBuilder excludeExplicitIndexStoreFiles()\n+    {\n+      excludeExplicitIndexStoreFiles = true;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder excludeLogFiles()\n-        {\n-            excludeLogFiles = true;\n-            return this;\n-        }\n+    public StoreFileListingBuilder excludeAdditionalProviders()\n+    {\n+      excludeAdditionalProviders = true;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder excludeNonRecordStoreFiles()\n-        {\n-            excludeNonRecordStoreFiles = true;\n-            return this;\n-        }\n+    public StoreFileListingBuilder includeLogFiles()\n+    {\n+      excludeLogFiles = false;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder excludeNeoStoreFiles()\n-        {\n-            excludeNeoStoreFiles = true;\n-            return this;\n-        }\n+    public StoreFileListingBuilder includeNonRecordStoreFiles()\n+    {\n+      excludeNonRecordStoreFiles = false;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder excludeLabelScanStoreFiles()\n-        {\n-            excludeLabelScanStoreFiles = true;\n-            return this;\n-        }\n+    public StoreFileListingBuilder includeNeoStoreFiles()\n+    {\n+      excludeNeoStoreFiles = false;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder excludeSchemaIndexStoreFiles()\n-        {\n-            excludeSchemaIndexStoreFiles = true;\n-            return this;\n-        }\n+    public StoreFileListingBuilder includeLabelScanStoreFiles()\n+    {\n+      excludeLabelScanStoreFiles = false;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder excludeExplicitIndexStoreFiles()\n-        {\n-            excludeExplicitIndexStoreFiles = true;\n-            return this;\n-        }\n+    public StoreFileListingBuilder includeSchemaIndexStoreFiles()\n+    {\n+      excludeSchemaIndexStoreFiles = false;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder excludeAdditionalProviders()\n-        {\n-            excludeAdditionalProviders = true;\n-            return this;\n-        }\n+    public StoreFileListingBuilder includeExplicitIndexStoreStoreFiles()\n+    {\n+      excludeExplicitIndexStoreFiles = false;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder includeLogFiles()\n-        {\n-            excludeLogFiles = false;\n-            return this;\n-        }\n+    public StoreFileListingBuilder includeAdditionalProviders()\n+    {\n+      excludeAdditionalProviders = false;\n+      return this;\n+    }\n \n-        public StoreFileListingBuilder includeNonRecordStoreFiles()\n+    public ResourceIterator<StoreFileMetadata> build() throws IOException\n+    {\n+      List<StoreFileMetadata> files = new ArrayList<>();\n+      List<Resource> resources = new ArrayList<>();\n+      try\n+      {\n+        if (!excludeNonRecordStoreFiles)\n         {\n-            excludeNonRecordStoreFiles = false;\n-            return this;\n+          gatherNonRecordStores(files, !excludeLogFiles);\n         }\n-\n-        public StoreFileListingBuilder includeNeoStoreFiles()\n+        if (!excludeNeoStoreFiles)\n         {\n-            excludeNeoStoreFiles = false;\n-            return this;\n+          gatherNeoStoreFiles(files);\n         }\n-\n-        public StoreFileListingBuilder includeLabelScanStoreFiles()\n+        if (!excludeLabelScanStoreFiles)\n         {\n-            excludeLabelScanStoreFiles = false;\n-            return this;\n+          resources.add(neoStoreFileIndexListing.gatherLabelScanStoreFiles(files));\n         }\n-\n-        public StoreFileListingBuilder includeSchemaIndexStoreFiles()\n+        if (!excludeSchemaIndexStoreFiles)\n         {\n-            excludeSchemaIndexStoreFiles = false;\n-            return this;\n+          resources.add(neoStoreFileIndexListing.gatherSchemaIndexFiles(files));\n         }\n-\n-        public StoreFileListingBuilder includeExplicitIndexStoreStoreFiles()\n+        if (!excludeExplicitIndexStoreFiles)\n         {\n-            excludeExplicitIndexStoreFiles = false;\n-            return this;\n+          resources.add(neoStoreFileIndexListing.gatherExplicitIndexFiles(files));\n         }\n-\n-        public StoreFileListingBuilder includeAdditionalProviders()\n+        if (!excludeAdditionalProviders)\n         {\n-            excludeAdditionalProviders = false;\n-            return this;\n+          for (StoreFileProvider additionalProvider : additionalProviders)\n+          {\n+            resources.add(additionalProvider.addFilesTo(files));\n+          }\n         }\n \n-        public ResourceIterator<StoreFileMetadata> build() throws IOException\n+        placeMetaDataStoreLast(files);\n+      } catch (IOException e)\n+      {\n+        try\n         {\n-            List<StoreFileMetadata> files = new ArrayList<>();\n-            List<Resource> resources = new ArrayList<>();\n-            try\n-            {\n-                if ( !excludeNonRecordStoreFiles )\n-                {\n-                    gatherNonRecordStores( files, !excludeLogFiles );\n-                }\n-                if ( !excludeNeoStoreFiles )\n-                {\n-                    gatherNeoStoreFiles( files );\n-                }\n-                if ( !excludeLabelScanStoreFiles )\n-                {\n-                    resources.add( neoStoreFileIndexListing.gatherLabelScanStoreFiles( files ) );\n-                }\n-                if ( !excludeSchemaIndexStoreFiles )\n-                {\n-                    resources.add( neoStoreFileIndexListing.gatherSchemaIndexFiles( files ) );\n-                }\n-                if ( !excludeExplicitIndexStoreFiles )\n-                {\n-                    resources.add( neoStoreFileIndexListing.gatherExplicitIndexFiles( files ) );\n-                }\n-                if ( !excludeAdditionalProviders )\n-                {\n-                    for ( StoreFileProvider additionalProvider : additionalProviders )\n-                    {\n-                        resources.add( additionalProvider.addFilesTo( files ) );\n-                    }\n-                }\n-\n-                placeMetaDataStoreLast( files );\n-            }\n-            catch ( IOException e )\n-            {\n-                try\n-                {\n-                    IOUtils.closeAll( resources );\n-                }\n-                catch ( IOException e1 )\n-                {\n-                    e = Exceptions.chain( e, e1 );\n-                }\n-                throw e;\n-            }\n-\n-            return resourceIterator( files.iterator(), new MultiResource( resources ) );\n+          IOUtils.closeAll(resources);\n+        } catch (IOException e1)\n+        {\n+          e = Exceptions.chain(e, e1);\n         }\n-    }\n+        throw e;\n+      }\n \n-    public static List<StoreFileMetadata> getSnapshotFilesMetadata( ResourceIterator<File> snapshot )\n-    {\n-        return snapshot.stream().map( toNotAStoreTypeFile ).collect( Collectors.toList() );\n+      return resourceIterator(files.iterator(), new MultiResource(resources));\n     }\n+  }\n \n-    private void gatherNeoStoreFiles( final Collection<StoreFileMetadata> targetFiles )\n-    {\n-        targetFiles.addAll( storageEngine.listStorageFiles() );\n-    }\n+  public static List<StoreFileMetadata> getSnapshotFilesMetadata(ResourceIterator<File> snapshot)\n+  {\n+    return snapshot.stream().map(toNotAStoreTypeFile).collect(Collectors.toList());\n+  }\n+\n+  private void gatherNeoStoreFiles(final Collection<StoreFileMetadata> targetFiles)\n+  {\n+    targetFiles.addAll(storageEngine.listStorageFiles());\n+  }\n }\n",
            "diff_size": 315
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 257).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2690/NeoStoreFileListing.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2690/NeoStoreFileListing.java\nindex 48db4cb8882..1a04af4fa73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2690/NeoStoreFileListing.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2690/NeoStoreFileListing.java\n@@ -53,9 +53,10 @@ public class NeoStoreFileListing\n     private final StorageEngine storageEngine;\n     private static final Function<File,StoreFileMetadata> toNotAStoreTypeFile =\n             file -> new StoreFileMetadata( file, RecordFormat.NO_RECORD_SIZE );\n-    private static final Function<File, StoreFileMetadata> logFileMapper =\n+\n+private static final Function<File,StoreFileMetadata> logFileMapper =\n             file -> new StoreFileMetadata( file, RecordFormat.NO_RECORD_SIZE, true );\n-    private final NeoStoreFileIndexListing neoStoreFileIndexListing;\n+private final NeoStoreFileIndexListing neoStoreFileIndexListing;\n     private final Collection<StoreFileProvider> additionalProviders;\n \n     public NeoStoreFileListing( File storeDir, LogFiles logFiles,\n@@ -106,7 +107,8 @@ public class NeoStoreFileListing\n             }\n             index++;\n         }\n-        if ( index < files.size() - 1 )\n+\n+if ( index < files.size() - 1 )\n         {\n             StoreFileMetadata metaDataStoreFile = files.remove( index );\n             files.add( metaDataStoreFile );\n@@ -149,12 +151,8 @@ public class NeoStoreFileListing\n \n         private void excludeAll( boolean initiateInclusive )\n         {\n-            this.excludeLogFiles =\n-            this.excludeNonRecordStoreFiles =\n-            this.excludeNeoStoreFiles =\n-            this.excludeLabelScanStoreFiles =\n-                    this.excludeSchemaIndexStoreFiles = this.excludeAdditionalProviders = this.excludeExplicitIndexStoreFiles = initiateInclusive;\n-        }\n+            this.excludeLogFiles = this.excludeNonRecordStoreFiles = this.excludeNeoStoreFiles = this.excludeLabelScanStoreFiles = this.excludeSchemaIndexStoreFiles = this.excludeAdditionalProviders = this.excludeExplicitIndexStoreFiles = initiateInclusive;\n+    }\n \n         public StoreFileListingBuilder excludeAll()\n         {\n@@ -262,23 +260,28 @@ public class NeoStoreFileListing\n                 {\n                     gatherNonRecordStores( files, !excludeLogFiles );\n                 }\n-                if ( !excludeNeoStoreFiles )\n+\n+if ( !excludeNeoStoreFiles )\n                 {\n                     gatherNeoStoreFiles( files );\n                 }\n-                if ( !excludeLabelScanStoreFiles )\n+\n+if ( !excludeLabelScanStoreFiles )\n                 {\n                     resources.add( neoStoreFileIndexListing.gatherLabelScanStoreFiles( files ) );\n                 }\n-                if ( !excludeSchemaIndexStoreFiles )\n+\n+if ( !excludeSchemaIndexStoreFiles )\n                 {\n                     resources.add( neoStoreFileIndexListing.gatherSchemaIndexFiles( files ) );\n                 }\n-                if ( !excludeExplicitIndexStoreFiles )\n+\n+if ( !excludeExplicitIndexStoreFiles )\n                 {\n                     resources.add( neoStoreFileIndexListing.gatherExplicitIndexFiles( files ) );\n                 }\n-                if ( !excludeAdditionalProviders )\n+\n+if ( !excludeAdditionalProviders )\n                 {\n                     for ( StoreFileProvider additionalProvider : additionalProviders )\n                     {\n@@ -314,4 +317,4 @@ public class NeoStoreFileListing\n     {\n         targetFiles.addAll( storageEngine.listStorageFiles() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
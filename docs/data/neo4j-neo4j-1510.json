{
    "project_name": "neo4j-neo4j",
    "error_id": "1510",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "157",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1510/StoreMigrationParticipant.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1510/StoreMigrationParticipant.java\nindex 1c0e0a1e3a2..727d52d38a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1510/StoreMigrationParticipant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1510/StoreMigrationParticipant.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.migration;\n \n import java.io.IOException;\n@@ -31,23 +32,23 @@ public interface StoreMigrationParticipant\n     /**\n      * Default empty implementation of StoreMigrationParticipant\n      */\n-    StoreMigrationParticipant NOT_PARTICIPATING = new AbstractStoreMigrationParticipant( \"Nothing\" )\n+    StoreMigrationParticipant NOT_PARTICIPATING = new AbstractStoreMigrationParticipant(\"Nothing\")\n     {\n         @Override\n-        public void migrate( DatabaseLayout directoryLayout, DatabaseLayout migrationLayout, ProgressReporter progress, String versionToMigrateFrom,\n-            String versionToMigrateTo )\n+        public void migrate(DatabaseLayout directoryLayout, DatabaseLayout migrationLayout, ProgressReporter progress, String versionToMigrateFrom,\n+                            String versionToMigrateTo)\n         {\n             // nop\n         }\n \n         @Override\n-        public void moveMigratedFiles( DatabaseLayout migrationLayout, DatabaseLayout directoryLayout, String versionToMigrateFrom, String versionToMigrateTo )\n+        public void moveMigratedFiles(DatabaseLayout migrationLayout, DatabaseLayout directoryLayout, String versionToMigrateFrom, String versionToMigrateTo)\n         {\n             // nop\n         }\n \n         @Override\n-        public void cleanup( DatabaseLayout migrationLayout )\n+        public void cleanup(DatabaseLayout migrationLayout)\n         {\n             // nop\n         }\n@@ -55,41 +56,43 @@ public interface StoreMigrationParticipant\n \n     /**\n      * Performs migration of data this participant is responsible for if necessary.\n-     *\n+     * <p>\n      * Data to migrate sits in {@code sourceDirectory} and must not be modified.\n      * Migrated data should go into {@code targetStoreDir}, where source and target dirs are\n      * highest level database store dirs.\n      *\n-     * @param directoryLayout data to migrate.\n-     * @param migrationLayout place to migrate to.\n-     * @param progress migration progress monitor\n+     * @param directoryLayout      data to migrate.\n+     * @param migrationLayout      place to migrate to.\n+     * @param progress             migration progress monitor\n      * @param versionToMigrateFrom the version to migrate from\n-     * @param versionToMigrateTo the version to migrate to\n-     * @throws IOException if there was an error migrating.\n+     * @param versionToMigrateTo   the version to migrate to\n+     * @throws IOException                    if there was an error migrating.\n      * @throws UnsatisfiedDependencyException if one or more dependencies were unsatisfied.\n      */\n-    void migrate( DatabaseLayout directoryLayout, DatabaseLayout migrationLayout, ProgressReporter progress,\n-            String versionToMigrateFrom, String versionToMigrateTo ) throws IOException, KernelException;\n+    void migrate(DatabaseLayout directoryLayout, DatabaseLayout migrationLayout, ProgressReporter progress,\n+                 String versionToMigrateFrom, String versionToMigrateTo) throws IOException, KernelException;\n \n     /**\n      * After a successful migration, move all affected files from {@code upgradeDirectory} over to\n      * the {@code workingDirectory}, effectively activating the migration changes.\n-     * @param migrationLayout directory where the\n-     * {@link #migrate(DatabaseLayout, DatabaseLayout, ProgressReporter, String, String) migration} put its files.\n-     * @param directoryLayout directory the store directory of the to move the migrated files to.\n+     *\n+     * @param migrationLayout      directory where the\n+     *                             {@link #migrate(DatabaseLayout, DatabaseLayout, ProgressReporter, String, String) migration} put its files.\n+     * @param directoryLayout      directory the store directory of the to move the migrated files to.\n      * @param versionToMigrateFrom the version we have migrated from\n-     * @param versionToMigrateTo the version we want to migrate to\n+     * @param versionToMigrateTo   the version we want to migrate to\n      * @throws IOException if unable to move one or more files.\n      */\n-    void moveMigratedFiles( DatabaseLayout migrationLayout, DatabaseLayout directoryLayout, String versionToMigrateFrom, String versionToMigrateTo )\n-            throws IOException;\n+    void moveMigratedFiles(DatabaseLayout migrationLayout, DatabaseLayout directoryLayout, String versionToMigrateFrom, String versionToMigrateTo)\n+      throws IOException;\n \n     /**\n      * Delete any file from {@code migrationLayout} produced during migration.\n+     *\n      * @param migrationLayout the directory where migrated files end up.\n      * @throws IOException if unable to clean up one or more files.\n      */\n-    void cleanup( DatabaseLayout migrationLayout ) throws IOException;\n+    void cleanup(DatabaseLayout migrationLayout) throws IOException;\n \n     /**\n      * @return descriptive name of this migration participant.\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
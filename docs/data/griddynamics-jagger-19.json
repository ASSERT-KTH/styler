{
    "project_name": "griddynamics-jagger",
    "error_id": "19",
    "information": {
        "errors": [
            {
                "line": "130",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 222).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        prototype.setTestListeners(newArrayList(new CollectThreadsTestListener()));\n\n        List<KernelSideObjectProvider<ScenarioCollector<Object, Object, Object>>> allMetrics = new ArrayList<KernelSideObjectProvider<ScenarioCollector<Object, Object, Object>>>(metrics.size() + standardCollectors.size());\n        allMetrics.addAll(standardCollectors);\n        allMetrics.addAll(metrics);\n        allMetrics.add(getSuccessRateMetric());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/19/TestDescription.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/19/TestDescription.java\nindex 88c7ebfcf74..da9db27d500 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/19/TestDescription.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/19/TestDescription.java\n@@ -127,7 +127,8 @@ public class TestDescription {\n         prototype.setListeners(listeners);\n         prototype.setTestListeners(newArrayList(new CollectThreadsTestListener()));\n \n-        List<KernelSideObjectProvider<ScenarioCollector<Object, Object, Object>>> allMetrics = new ArrayList<KernelSideObjectProvider<ScenarioCollector<Object, Object, Object>>>(metrics.size() + standardCollectors.size());\n+        List<KernelSideObjectProvider<ScenarioCollector<Object, Object, Object>>> allMetrics =\n+                new ArrayList<KernelSideObjectProvider<ScenarioCollector<Object, Object, Object>>>(metrics.size() + standardCollectors.size());\n         allMetrics.addAll(standardCollectors);\n         allMetrics.addAll(metrics);\n         allMetrics.add(getSuccessRateMetric());\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/19/TestDescription.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/19/TestDescription.java\nindex 88c7ebfcf74..7855d01742d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/19/TestDescription.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/19/TestDescription.java\n@@ -148,4 +148,4 @@ public class TestDescription {\n         successRateCollectorProvider.setName(\"SR\");\n         return successRateCollectorProvider;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
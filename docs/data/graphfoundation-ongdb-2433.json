{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2433",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2433/Work.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2433/Work.java\nindex 3fa3cb12e01..fbe8c56541e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2433/Work.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2433/Work.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.concurrent;\n \n /**\n@@ -46,25 +47,25 @@ package org.neo4j.concurrent;\n  * </ul>\n  *\n  * @param <Material> The type of material to work with.\n- * @param <W> The concrete type of work being performed.\n+ * @param <W>        The concrete type of work being performed.\n  * @see WorkSync\n  */\n-public interface Work<Material, W extends Work<Material,W>>\n+public interface Work<Material, W extends Work<Material, W>>\n {\n-    /**\n-     * <p>\n-     * Combine this unit of work with the given unit of work, and produce a unit of work that represents the\n-     * aggregate of the work.\n-     * </p>\n-     * <p>\n-     * It is perfectly fine for a unit to build up internal state that aggregates the work it is combined with,\n-     * and then return itself. This is perhaps useful for reducing the allocation rate a little.\n-     * </p>\n-     */\n-    W combine( W work );\n+  /**\n+   * <p>\n+   * Combine this unit of work with the given unit of work, and produce a unit of work that represents the\n+   * aggregate of the work.\n+   * </p>\n+   * <p>\n+   * It is perfectly fine for a unit to build up internal state that aggregates the work it is combined with,\n+   * and then return itself. This is perhaps useful for reducing the allocation rate a little.\n+   * </p>\n+   */\n+  W combine(W work);\n \n-    /**\n-     * Apply this unit of work to the given material.\n-     */\n-    void apply( Material material ) throws Exception;\n+  /**\n+   * Apply this unit of work to the given material.\n+   */\n+  void apply(Material material) throws Exception;\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2433/Work.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2433/Work.java\nindex 3fa3cb12e01..caabb214ed6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2433/Work.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2433/Work.java\n@@ -67,4 +67,4 @@ public interface Work<Material, W extends Work<Material,W>>\n      * Apply this unit of work to the given material.\n      */\n     void apply( Material material ) throws Exception;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "22",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2433/Work.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2433/Work.java\nindex 3fa3cb12e01..bb8e01bc56b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2433/Work.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2433/Work.java\n@@ -49,7 +49,8 @@ package org.neo4j.concurrent;\n  * @param <W> The concrete type of work being performed.\n  * @see WorkSync\n  */\n-public interface Work<Material, W extends Work<Material,W>>\n+\n+public interface Work< Material, W extends Work<Material,W>>\n {\n     /**\n      * <p>\n@@ -61,10 +62,10 @@ public interface Work<Material, W extends Work<Material,W>>\n      * and then return itself. This is perhaps useful for reducing the allocation rate a little.\n      * </p>\n      */\n-    W combine( W work );\n+    W combine( W work )\n+    ;\n \n     /**\n      * Apply this unit of work to the given material.\n-     */\n-    void apply( Material material ) throws Exception;\n-}\n+     */ void apply( Material material ) throws Exception ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
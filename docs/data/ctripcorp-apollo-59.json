{
    "project_name": "ctripcorp-apollo",
    "error_id": "59",
    "information": {
        "errors": [
            {
                "line": "17",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " *\n */\npackage com.ctrip.framework.apollo.core.utils;\n\nimport com.ctrip.framework.apollo.core.utils.StringUtils;\nimport org.junit.Assert;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler/59/StringUtilsTest.java\nindex 8d9903a5479..28cc0839999 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler/59/StringUtilsTest.java\n@@ -14,6 +14,7 @@\n  * limitations under the License.\n  *\n  */\n+\n package com.ctrip.framework.apollo.core.utils;\n \n import com.ctrip.framework.apollo.core.utils.StringUtils;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/intellij/59/StringUtilsTest.java\nindex 8d9903a5479..28cc0839999 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/intellij/59/StringUtilsTest.java\n@@ -14,6 +14,7 @@\n  * limitations under the License.\n  *\n  */\n+\n package com.ctrip.framework.apollo.core.utils;\n \n import com.ctrip.framework.apollo.core.utils.StringUtils;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'array initialization rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/naturalize/59/StringUtilsTest.java\nindex 8d9903a5479..f43a7373e69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/naturalize/59/StringUtilsTest.java\n@@ -13,8 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  *\n- */\n-package com.ctrip.framework.apollo.core.utils;\n+ */package com.ctrip.framework.apollo.core.utils;\n \n import com.ctrip.framework.apollo.core.utils.StringUtils;\n import org.junit.Assert;\n@@ -49,7 +48,8 @@ public class StringUtilsTest {\n   @Test\n   public void testIsContainEmpty() {\n     Assert.assertFalse(StringUtils.isContainEmpty(null));\n-    Assert.assertFalse(StringUtils.isContainEmpty(new String[] {}));\n+    Assert.assertFalse(StringUtils.isContainEmpty(new String[] {\n+}));\n     Assert.assertFalse(StringUtils.isContainEmpty(new String[] {\"1\"}));\n     Assert.assertTrue(StringUtils.isContainEmpty(new String[] {null}));\n   }\n@@ -112,4 +112,4 @@ public class StringUtilsTest {\n     Assert.assertNull(StringUtils.trimToNull(null));\n     Assert.assertEquals(\"foo\", StringUtils.trimToNull(\"foo\"));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'array initialization' child has incorrect indentation level 52, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'array initialization' child has incorrect indentation level 51, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/codebuff/59/StringUtilsTest.java\nindex 8d9903a5479..fbe0eaa3d34 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/codebuff/59/StringUtilsTest.java\n@@ -19,9 +19,9 @@ package com.ctrip.framework.apollo.core.utils;\n import com.ctrip.framework.apollo.core.utils.StringUtils;\n import org.junit.Assert;\n import org.junit.Test;\n-\n import java.util.ArrayList;\n \n+\n public class StringUtilsTest {\n \n   @Test\n@@ -50,8 +50,10 @@ public class StringUtilsTest {\n   public void testIsContainEmpty() {\n     Assert.assertFalse(StringUtils.isContainEmpty(null));\n     Assert.assertFalse(StringUtils.isContainEmpty(new String[] {}));\n-    Assert.assertFalse(StringUtils.isContainEmpty(new String[] {\"1\"}));\n-    Assert.assertTrue(StringUtils.isContainEmpty(new String[] {null}));\n+    Assert.assertFalse(StringUtils.isContainEmpty(new String[] {\n+                                                    \"1\" }));\n+    Assert.assertTrue(StringUtils.isContainEmpty(new String[] {\n+                                                   null }));\n   }\n \n   @Test\n@@ -71,11 +73,9 @@ public class StringUtilsTest {\n   @Test\n   public void testJoin() {\n     Assert.assertEquals(\"\", StringUtils.join(new ArrayList(), \"1a 2b 3c\"));\n-\n     ArrayList collection = new ArrayList();\n     collection.add(null);\n     Assert.assertEquals(\"\", StringUtils.join(collection, \"1a 2b 3c\"));\n-\n     collection = new ArrayList();\n     collection.add(-2_147_483_648);\n     Assert.assertEquals(\"-2147483648\", StringUtils.join(collection, \"1a 2b 3c\"));\n@@ -112,4 +112,4 @@ public class StringUtilsTest {\n     Assert.assertNull(StringUtils.trimToNull(null));\n     Assert.assertEquals(\"foo\", StringUtils.trimToNull(\"foo\"));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler_random/59/StringUtilsTest.java\nindex 8d9903a5479..ebfee4255fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler_random/59/StringUtilsTest.java\n@@ -14,6 +14,8 @@\n  * limitations under the License.\n  *\n  */\n+\n+\n package com.ctrip.framework.apollo.core.utils;\n \n import com.ctrip.framework.apollo.core.utils.StringUtils;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler_three_grams/59/StringUtilsTest.java\nindex 8d9903a5479..28cc0839999 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/59/StringUtilsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler_three_grams/59/StringUtilsTest.java\n@@ -14,6 +14,7 @@\n  * limitations under the License.\n  *\n  */\n+\n package com.ctrip.framework.apollo.core.utils;\n \n import com.ctrip.framework.apollo.core.utils.StringUtils;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
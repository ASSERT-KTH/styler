{
    "project_name": "graphfoundation-ongdb",
    "error_id": "498",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/498/LogHeaderReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/498/LogHeaderReader.java\nindex ed03d43fc80..eb184aee67d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/498/LogHeaderReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/498/LogHeaderReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.io.File;\n@@ -32,73 +33,73 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogHeader.LOG_HEADER_S\n \n public class LogHeaderReader\n {\n-    private LogHeaderReader()\n-    {\n-    }\n+  private LogHeaderReader()\n+  {\n+  }\n \n-    public static LogHeader readLogHeader( FileSystemAbstraction fileSystem, File file ) throws IOException\n-    {\n-        return readLogHeader( fileSystem, file, true );\n-    }\n+  public static LogHeader readLogHeader(FileSystemAbstraction fileSystem, File file) throws IOException\n+  {\n+    return readLogHeader(fileSystem, file, true);\n+  }\n \n-    public static LogHeader readLogHeader( FileSystemAbstraction fileSystem, File file, boolean strict ) throws IOException\n+  public static LogHeader readLogHeader(FileSystemAbstraction fileSystem, File file, boolean strict) throws IOException\n+  {\n+    try (StoreChannel channel = fileSystem.open(file, OpenMode.READ))\n     {\n-        try ( StoreChannel channel = fileSystem.open( file, OpenMode.READ ) )\n-        {\n-            return readLogHeader( ByteBuffer.allocate( LOG_HEADER_SIZE ), channel, strict, file );\n-        }\n+      return readLogHeader(ByteBuffer.allocate(LOG_HEADER_SIZE), channel, strict, file);\n     }\n+  }\n \n-    /**\n-     * Reads the header of a log. Data will be read from {@code channel} using supplied {@code buffer}\n-     * as to allow more controlled allocation.\n-     *\n-     * @param buffer {@link ByteBuffer} to read into. Passed in to allow control over allocation.\n-     * @param channel {@link ReadableByteChannel} to read from, typically a channel over a file containing the data.\n-     * @param strict if {@code true} then will fail with {@link IncompleteLogHeaderException} on incomplete\n-     * header, i.e. if there's not enough data in the channel to even read the header. If {@code false} then\n-     * the return value will instead be {@code null}.\n-     * @param fileForAdditionalErrorInformationOrNull when in {@code strict} mode the exception can be\n-     * amended with information about which file the channel represents, if any. Purely for better forensics\n-     * ability.\n-     * @return {@link LogHeader} containing the log header data from the {@code channel}.\n-     * @throws IOException if unable to read from {@code channel}\n-     * @throws IncompleteLogHeaderException if {@code strict} and not enough data could be read\n-     */\n-    public static LogHeader readLogHeader( ByteBuffer buffer, ReadableByteChannel channel, boolean strict,\n-            File fileForAdditionalErrorInformationOrNull ) throws IOException\n-    {\n-        buffer.clear();\n-        buffer.limit( LOG_HEADER_SIZE );\n+  /**\n+   * Reads the header of a log. Data will be read from {@code channel} using supplied {@code buffer}\n+   * as to allow more controlled allocation.\n+   *\n+   * @param buffer                                  {@link ByteBuffer} to read into. Passed in to allow control over allocation.\n+   * @param channel                                 {@link ReadableByteChannel} to read from, typically a channel over a file containing the data.\n+   * @param strict                                  if {@code true} then will fail with {@link IncompleteLogHeaderException} on incomplete\n+   *                                                header, i.e. if there's not enough data in the channel to even read the header. If {@code false} then\n+   *                                                the return value will instead be {@code null}.\n+   * @param fileForAdditionalErrorInformationOrNull when in {@code strict} mode the exception can be\n+   *                                                amended with information about which file the channel represents, if any. Purely for better forensics\n+   *                                                ability.\n+   * @return {@link LogHeader} containing the log header data from the {@code channel}.\n+   * @throws IOException                  if unable to read from {@code channel}\n+   * @throws IncompleteLogHeaderException if {@code strict} and not enough data could be read\n+   */\n+  public static LogHeader readLogHeader(ByteBuffer buffer, ReadableByteChannel channel, boolean strict,\n+                                        File fileForAdditionalErrorInformationOrNull) throws IOException\n+  {\n+    buffer.clear();\n+    buffer.limit(LOG_HEADER_SIZE);\n \n-        int read = channel.read( buffer );\n-        if ( read != LOG_HEADER_SIZE )\n+    int read = channel.read(buffer);\n+    if (read != LOG_HEADER_SIZE)\n+    {\n+      if (strict)\n+      {\n+        if (fileForAdditionalErrorInformationOrNull != null)\n         {\n-            if ( strict )\n-            {\n-                if ( fileForAdditionalErrorInformationOrNull != null )\n-                {\n-                    throw new IncompleteLogHeaderException( fileForAdditionalErrorInformationOrNull, read );\n-                }\n-                throw new IncompleteLogHeaderException( read );\n-            }\n-            return null;\n+          throw new IncompleteLogHeaderException(fileForAdditionalErrorInformationOrNull, read);\n         }\n-        buffer.flip();\n-        long encodedLogVersions = buffer.getLong();\n-        byte logFormatVersion = decodeLogFormatVersion( encodedLogVersions );\n-        long logVersion = decodeLogVersion( encodedLogVersions );\n-        long previousCommittedTx = buffer.getLong();\n-        return new LogHeader( logFormatVersion, logVersion, previousCommittedTx );\n+        throw new IncompleteLogHeaderException(read);\n+      }\n+      return null;\n     }\n+    buffer.flip();\n+    long encodedLogVersions = buffer.getLong();\n+    byte logFormatVersion = decodeLogFormatVersion(encodedLogVersions);\n+    long logVersion = decodeLogVersion(encodedLogVersions);\n+    long previousCommittedTx = buffer.getLong();\n+    return new LogHeader(logFormatVersion, logVersion, previousCommittedTx);\n+  }\n \n-    static long decodeLogVersion( long encLogVersion )\n-    {\n-        return encLogVersion & 0x00FFFFFFFFFFFFFFL;\n-    }\n+  static long decodeLogVersion(long encLogVersion)\n+  {\n+    return encLogVersion & 0x00FFFFFFFFFFFFFFL;\n+  }\n \n-    static byte decodeLogFormatVersion( long encLogVersion )\n-    {\n-        return (byte) ((encLogVersion >> 56) & 0xFF);\n-    }\n+  static byte decodeLogFormatVersion(long encLogVersion)\n+  {\n+    return (byte) ((encLogVersion >> 56) & 0xFF);\n+  }\n }\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/498/LogHeaderReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/498/LogHeaderReader.java\nindex ed03d43fc80..b90577c956d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/498/LogHeaderReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/498/LogHeaderReader.java\n@@ -67,7 +67,7 @@ public class LogHeaderReader\n      */\n     public static LogHeader readLogHeader( ByteBuffer buffer, ReadableByteChannel channel, boolean strict,\n             File fileForAdditionalErrorInformationOrNull ) throws IOException\n-    {\n+{\n         buffer.clear();\n         buffer.limit( LOG_HEADER_SIZE );\n \n@@ -99,6 +99,6 @@ public class LogHeaderReader\n \n     static byte decodeLogFormatVersion( long encLogVersion )\n     {\n-        return (byte) ((encLogVersion >> 56) & 0xFF);\n+        return (byte) ((encLogVersion >> 56) & 0xFF );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
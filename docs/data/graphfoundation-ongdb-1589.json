{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1589",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "6",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "10",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "96",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1589/DiscoveryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1589/DiscoveryService.java\nindex f4f538bb77a..b8d8872c237 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1589/DiscoveryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1589/DiscoveryService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.discovery;\n \n import java.net.URISyntaxException;\n@@ -41,68 +42,66 @@ import org.neo4j.server.rest.repr.OutputFormat;\n  * Used to discover the rest of the server URIs through a HTTP GET request to\n  * the server root (/).\n  */\n-@Path( \"/\" )\n+@Path(\"/\")\n public class DiscoveryService\n {\n-    private final Config config;\n-    private final OutputFormat outputFormat;\n-    private final ConnectorPortRegister connectorPortRegister;\n-\n-    // Your IDE might tell you to make this less visible than public. Don't. JAX-RS demands is to be public.\n-    public DiscoveryService( @Context Config config, @Context OutputFormat outputFormat, @Context NeoServer neoServer )\n-    {\n-        this.config = config;\n-        this.outputFormat = outputFormat;\n-        connectorPortRegister = neoServer.getDatabase().getGraph().getDependencyResolver()\n-                .resolveDependency( ConnectorPortRegister.class );\n-    }\n+  private final Config config;\n+  private final OutputFormat outputFormat;\n+  private final ConnectorPortRegister connectorPortRegister;\n \n-    @GET\n-    @Produces( MediaType.APPLICATION_JSON )\n-    public Response getDiscoveryDocument( @Context UriInfo uriInfo )\n-    {\n-        String managementUri = config.get( ServerSettings.management_api_path ).getPath() + \"/\";\n-        String dataUri = config.get( ServerSettings.rest_api_path ).getPath() + \"/\";\n+  // Your IDE might tell you to make this less visible than public. Don't. JAX-RS demands is to be public.\n+  public DiscoveryService(@Context Config config, @Context OutputFormat outputFormat, @Context NeoServer neoServer)\n+  {\n+    this.config = config;\n+    this.outputFormat = outputFormat;\n+    connectorPortRegister = neoServer.getDatabase().getGraph().getDependencyResolver()\n+        .resolveDependency(ConnectorPortRegister.class);\n+  }\n \n-        Optional<AdvertisedSocketAddress> boltAddress = config.enabledBoltConnectors().stream().findFirst()\n-                .map( boltConnector -> config.get( boltConnector.advertised_address ) );\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  public Response getDiscoveryDocument(@Context UriInfo uriInfo)\n+  {\n+    String managementUri = config.get(ServerSettings.management_api_path).getPath() + \"/\";\n+    String dataUri = config.get(ServerSettings.rest_api_path).getPath() + \"/\";\n \n-        if ( boltAddress.isPresent() )\n-        {\n-            AdvertisedSocketAddress advertisedSocketAddress = boltAddress.get();\n+    Optional<AdvertisedSocketAddress> boltAddress = config.enabledBoltConnectors().stream().findFirst()\n+        .map(boltConnector -> config.get(boltConnector.advertised_address));\n \n-            // If port is 0 it's been assigned a random port from the OS, list this instead\n-            if ( advertisedSocketAddress.getPort() == 0 )\n-            {\n-                int boltPort = connectorPortRegister.getLocalAddress( \"bolt\" ).getPort();\n-                advertisedSocketAddress = new AdvertisedSocketAddress( advertisedSocketAddress.getHostname(), boltPort );\n-            }\n+    if (boltAddress.isPresent())\n+    {\n+      AdvertisedSocketAddress advertisedSocketAddress = boltAddress.get();\n \n-            if ( advertisedSocketAddress.getHostname().equals( \"localhost\" ) )\n-            {\n-                // Use the port specified in the config, but not the host\n-                return outputFormat.ok( new DiscoveryRepresentation( managementUri, dataUri,\n-                        new AdvertisedSocketAddress( uriInfo.getBaseUri().getHost(), advertisedSocketAddress.getPort() ) ) );\n-            }\n-            else\n-            {\n-                // Use the config verbatim since it seems sane\n-                return outputFormat\n-                        .ok( new DiscoveryRepresentation( managementUri, dataUri, advertisedSocketAddress ) );\n-            }\n-        }\n-        else\n-        {\n-            // There's no config, compute possible endpoint using host header and default bolt port.\n-            return outputFormat.ok( new DiscoveryRepresentation( managementUri, dataUri,\n-                    new AdvertisedSocketAddress( uriInfo.getBaseUri().getHost(), 7687 ) ) );\n-        }\n-    }\n+      // If port is 0 it's been assigned a random port from the OS, list this instead\n+      if (advertisedSocketAddress.getPort() == 0)\n+      {\n+        int boltPort = connectorPortRegister.getLocalAddress(\"bolt\").getPort();\n+        advertisedSocketAddress = new AdvertisedSocketAddress(advertisedSocketAddress.getHostname(), boltPort);\n+      }\n \n-    @GET\n-    @Produces( MediaType.WILDCARD )\n-    public Response redirectToBrowser()\n+      if (advertisedSocketAddress.getHostname().equals(\"localhost\"))\n+      {\n+        // Use the port specified in the config, but not the host\n+        return outputFormat.ok(new DiscoveryRepresentation(managementUri, dataUri,\n+            new AdvertisedSocketAddress(uriInfo.getBaseUri().getHost(), advertisedSocketAddress.getPort())));\n+      } else\n+      {\n+        // Use the config verbatim since it seems sane\n+        return outputFormat\n+            .ok(new DiscoveryRepresentation(managementUri, dataUri, advertisedSocketAddress));\n+      }\n+    } else\n     {\n-        return outputFormat.seeOther( config.get( ServerSettings.browser_path ) );\n+      // There's no config, compute possible endpoint using host header and default bolt port.\n+      return outputFormat.ok(new DiscoveryRepresentation(managementUri, dataUri,\n+          new AdvertisedSocketAddress(uriInfo.getBaseUri().getHost(), 7687)));\n     }\n+  }\n+\n+  @GET\n+  @Produces(MediaType.WILDCARD)\n+  public Response redirectToBrowser()\n+  {\n+    return outputFormat.seeOther(config.get(ServerSettings.browser_path));\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1589/DiscoveryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1589/DiscoveryService.java\nindex f4f538bb77a..41e1556b08c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1589/DiscoveryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1589/DiscoveryService.java\n@@ -53,8 +53,7 @@ public class DiscoveryService\n     {\n         this.config = config;\n         this.outputFormat = outputFormat;\n-        connectorPortRegister = neoServer.getDatabase().getGraph().getDependencyResolver()\n-                .resolveDependency( ConnectorPortRegister.class );\n+        connectorPortRegister = neoServer.getDatabase().getGraph().getDependencyResolver().resolveDependency( ConnectorPortRegister.class );\n     }\n \n     @GET\n@@ -64,10 +63,8 @@ public class DiscoveryService\n         String managementUri = config.get( ServerSettings.management_api_path ).getPath() + \"/\";\n         String dataUri = config.get( ServerSettings.rest_api_path ).getPath() + \"/\";\n \n-        Optional<AdvertisedSocketAddress> boltAddress = config.enabledBoltConnectors().stream().findFirst()\n-                .map( boltConnector -> config.get( boltConnector.advertised_address ) );\n-\n-        if ( boltAddress.isPresent() )\n+        Optional<AdvertisedSocketAddress> boltAddress = config.enabledBoltConnectors().stream().findFirst().map( boltConnector -> config.get( boltConnector.advertised_address ) );\n+if ( boltAddress.isPresent() )\n         {\n             AdvertisedSocketAddress advertisedSocketAddress = boltAddress.get();\n \n@@ -81,22 +78,19 @@ public class DiscoveryService\n             if ( advertisedSocketAddress.getHostname().equals( \"localhost\" ) )\n             {\n                 // Use the port specified in the config, but not the host\n-                return outputFormat.ok( new DiscoveryRepresentation( managementUri, dataUri,\n-                        new AdvertisedSocketAddress( uriInfo.getBaseUri().getHost(), advertisedSocketAddress.getPort() ) ) );\n+                return outputFormat.ok( new DiscoveryRepresentation( managementUri, dataUri, new AdvertisedSocketAddress( uriInfo.getBaseUri().getHost(), advertisedSocketAddress.getPort() ) ) );\n             }\n             else\n             {\n                 // Use the config verbatim since it seems sane\n-                return outputFormat\n-                        .ok( new DiscoveryRepresentation( managementUri, dataUri, advertisedSocketAddress ) );\n-            }\n+                return outputFormat.ok( new DiscoveryRepresentation( managementUri, dataUri, advertisedSocketAddress ) );\n+    }\n         }\n         else\n         {\n             // There's no config, compute possible endpoint using host header and default bolt port.\n-            return outputFormat.ok( new DiscoveryRepresentation( managementUri, dataUri,\n-                    new AdvertisedSocketAddress( uriInfo.getBaseUri().getHost(), 7687 ) ) );\n-        }\n+            return outputFormat.ok( new DiscoveryRepresentation( managementUri, dataUri, new AdvertisedSocketAddress( uriInfo.getBaseUri().getHost(), 7687 ) ) );\n+    }\n     }\n \n     @GET\n@@ -105,4 +99,4 @@ public class DiscoveryService\n     {\n         return outputFormat.seeOther( config.get( ServerSettings.browser_path ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
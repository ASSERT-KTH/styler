{
    "project_name": "wso2-attic-commons",
    "error_id": "310",
    "information": {
        "errors": [
            {
                "line": "89",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        List responseMechanismList = requestAbstractType.getResponseMechanism();\n\n        ResponseMechanism[] responseMechanisms = responseMechanismList != null ? (ResponseMechanism[]) responseMechanismList\n                .toArray(new ResponseMechanism[responseMechanismList.size()])\n                : null;\n        // Get a sepearte Document for response",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/310/ProtocolExchange.java\nindex 3a7cc60dfd2..8b63e99eca4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/310/ProtocolExchange.java\n@@ -86,7 +86,7 @@ public class ProtocolExchange {\n \n         List responseMechanismList = requestAbstractType.getResponseMechanism();\n \n-        ResponseMechanism[] responseMechanisms = responseMechanismList != null ? (ResponseMechanism[]) responseMechanismList\n+    ResponseMechanism[] responseMechanisms = responseMechanismList != null ? (ResponseMechanism[]) responseMechanismList\n                 .toArray(new ResponseMechanism[responseMechanismList.size()])\n                 : null;\n         // Get a sepearte Document for response\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/310/ProtocolExchange.java\nindex 3a7cc60dfd2..a81f026ea8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/310/ProtocolExchange.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.wso2.xkms2.core;\n \n import java.util.List;\n@@ -64,147 +65,147 @@ import org.wso2.xkms2.util.XKMSUtil;\n \n public class ProtocolExchange {\n \n-    /**\n-     * Retruned an DOOMElement\n-     * \n-     * @param inMsgCtx\n-     * @return\n-     * @throws AxisFault\n-     * @throws XKMSException\n-     */\n-    public OMElement exchangeServer(MessageContext inMsgCtx) throws AxisFault,\n-            XKMSException {\n-\n-        ProtocolExchange.BuildElementHelper buildElementHelper = buildElement(inMsgCtx);\n-        XKMSElement xkmsElementObj = buildElementHelper.getXkmsElement();\n-        ElementBuilder builder = buildElementHelper.getBuilder();\n-        QName qName = buildElementHelper.getQName();\n-\n-        RequestAbstractTypeBuilder requestATBuider = (RequestAbstractTypeBuilder) builder;\n-        RequestAbstractType requestAbstractType = requestATBuider\n-                .getRequestAbstractType();\n-\n-        List responseMechanismList = requestAbstractType.getResponseMechanism();\n-\n-        ResponseMechanism[] responseMechanisms = responseMechanismList != null ? (ResponseMechanism[]) responseMechanismList\n-                .toArray(new ResponseMechanism[responseMechanismList.size()])\n-                : null;\n-        // Get a sepearte Document for response\n-        OMFactory fac = DOOMAbstractFactory.getOMFactory();\n-        OMDOMFactory omDomFac = (OMDOMFactory) fac;\n-        Document doc = omDomFac.getDocument();\n-\n-        XKMSRequestData requestData = new XKMSRequestData();\n-        requestData.setMessageContext(inMsgCtx);\n-        requestData.setRequest((RequestAbstractType) xkmsElementObj);\n-        requestData.setDocument(doc);\n-\n-        if (responseMechanisms == null || responseMechanisms.length == 0) {\n-            // Sync process\n-            XKMSServiceExecutor xkmsServiceExecutor = XKMSServiceExecutorManager\n-                    .get(qName.getLocalPart());\n-            ResultType result = xkmsServiceExecutor.execute(requestData, inMsgCtx);\n-            return getAsOMElement(result, fac);\n-\n-        }\n-\n-        throw new UnsupportedOperationException(\"TODO \");\n+  /**\n+   * Retruned an DOOMElement\n+   *\n+   * @param inMsgCtx\n+   * @return\n+   * @throws AxisFault\n+   * @throws XKMSException\n+   */\n+  public OMElement exchangeServer(MessageContext inMsgCtx) throws AxisFault,\n+    XKMSException {\n+\n+    ProtocolExchange.BuildElementHelper buildElementHelper = buildElement(inMsgCtx);\n+    XKMSElement xkmsElementObj = buildElementHelper.getXkmsElement();\n+    ElementBuilder builder = buildElementHelper.getBuilder();\n+    QName qName = buildElementHelper.getQName();\n+\n+    RequestAbstractTypeBuilder requestATBuider = (RequestAbstractTypeBuilder) builder;\n+    RequestAbstractType requestAbstractType = requestATBuider\n+      .getRequestAbstractType();\n+\n+    List responseMechanismList = requestAbstractType.getResponseMechanism();\n+\n+    ResponseMechanism[] responseMechanisms = responseMechanismList != null ? (ResponseMechanism[]) responseMechanismList\n+      .toArray(new ResponseMechanism[responseMechanismList.size()])\n+      : null;\n+    // Get a sepearte Document for response\n+    OMFactory fac = DOOMAbstractFactory.getOMFactory();\n+    OMDOMFactory omDomFac = (OMDOMFactory) fac;\n+    Document doc = omDomFac.getDocument();\n+\n+    XKMSRequestData requestData = new XKMSRequestData();\n+    requestData.setMessageContext(inMsgCtx);\n+    requestData.setRequest((RequestAbstractType) xkmsElementObj);\n+    requestData.setDocument(doc);\n+\n+    if (responseMechanisms == null || responseMechanisms.length == 0) {\n+      // Sync process\n+      XKMSServiceExecutor xkmsServiceExecutor = XKMSServiceExecutorManager\n+        .get(qName.getLocalPart());\n+      ResultType result = xkmsServiceExecutor.execute(requestData, inMsgCtx);\n+      return getAsOMElement(result, fac);\n \n     }\n \n-    // TODO need to fix this\n-    public XKMSElement exchangeClient(MessageContext inMsgCtx)\n-            throws XKMSException {\n-        ProtocolExchange.BuildElementHelper buildElementHelper = buildElement(inMsgCtx);\n-        XKMSElement xkmsElementObj = buildElementHelper.getXkmsElement();\n-        // TODO protocol handling.\n-        return xkmsElementObj;\n+    throw new UnsupportedOperationException(\"TODO \");\n+\n+  }\n+\n+  // TODO need to fix this\n+  public XKMSElement exchangeClient(MessageContext inMsgCtx)\n+    throws XKMSException {\n+    ProtocolExchange.BuildElementHelper buildElementHelper = buildElement(inMsgCtx);\n+    XKMSElement xkmsElementObj = buildElementHelper.getXkmsElement();\n+    // TODO protocol handling.\n+    return xkmsElementObj;\n+\n+  }\n \n+  private BuildElementHelper buildElement(MessageContext msgCtx)\n+    throws XKMSException {\n+\n+    SOAPEnvelope env = msgCtx.getEnvelope();\n+    OMElement llomElement = env.getBody().getFirstElement();\n+\n+    if (llomElement == null) {\n+      throw new XKMSException(XKMSException.INCOMPLETE, \"RequiredDataMissing\");\n     }\n \n-    private BuildElementHelper buildElement(MessageContext msgCtx)\n-            throws XKMSException {\n+    XKMSUtil.DOOMElementMetadata doomMetadata = XKMSUtil\n+      .getDOOMElement(llomElement);\n+    OMElement xkmsElement = doomMetadata.getElement();\n+    QName qName = xkmsElement.getQName();\n+\n+    ElementBuilder builder = FindBuilder.find(qName.getLocalPart());\n+    XKMSElement xkmsObj = builder.buildElement(xkmsElement);\n \n-        SOAPEnvelope env = msgCtx.getEnvelope();\n-        OMElement llomElement = env.getBody().getFirstElement();\n+    return new BuildElementHelper(qName, xkmsObj, builder);\n \n-        if (llomElement == null) {\n-            throw new XKMSException(XKMSException.INCOMPLETE, \"RequiredDataMissing\");    \n-        }\n+  }\n \n-        XKMSUtil.DOOMElementMetadata doomMetadata = XKMSUtil\n-                .getDOOMElement(llomElement);\n-        OMElement xkmsElement = doomMetadata.getElement();\n-        QName qName = xkmsElement.getQName();\n+  public String generateRequestId() {\n+    return UUIDGenerator.getUUID();\n \n-        ElementBuilder builder = FindBuilder.find(qName.getLocalPart());\n-        XKMSElement xkmsObj = builder.buildElement(xkmsElement);\n+  }\n \n-        return new BuildElementHelper(qName, xkmsObj, builder);\n+  private class BuildElementHelper {\n+    private QName qName;\n \n+    private XKMSElement xkmsElement;\n+\n+    private ElementBuilder builder;\n+\n+    BuildElementHelper(QName qName, XKMSElement xkmsElement,\n+                       ElementBuilder builder) {\n+      this.qName = qName;\n+      this.xkmsElement = xkmsElement;\n+      this.builder = builder;\n     }\n \n-    public String generateRequestId() {\n-        return UUIDGenerator.getUUID();\n+    public QName getQName() {\n+      return qName;\n+    }\n \n+    public XKMSElement getXkmsElement() {\n+      return xkmsElement;\n     }\n \n-    private class BuildElementHelper {\n-        private QName qName;\n+    public ElementBuilder getBuilder() {\n+      return builder;\n+    }\n+  }\n \n-        private XKMSElement xkmsElement;\n+  private OMElement getAsOMElement(ResultType resultType, OMFactory factory)\n+    throws XKMSException {\n \n-        private ElementBuilder builder;\n+    if (resultType instanceof RegisterResult) {\n+      return ((RegisterResult) resultType).serialize(factory);\n \n-        BuildElementHelper(QName qName, XKMSElement xkmsElement,\n-                ElementBuilder builder) {\n-            this.qName = qName;\n-            this.xkmsElement = xkmsElement;\n-            this.builder = builder;\n-        }\n+    } else if (resultType instanceof ReissueResult) {\n+      return ((ReissueResult) resultType).serialize(factory);\n \n-        public QName getQName() {\n-            return qName;\n-        }\n+    } else if (resultType instanceof RecoverResult) {\n+      try {\n+        ((RecoverResult) resultType).serialize(factory);\n+      } catch (Throwable e) {\n+        e.printStackTrace();\n+      }\n+      return ((RecoverResult) resultType).serialize(factory);\n \n-        public XKMSElement getXkmsElement() {\n-            return xkmsElement;\n-        }\n+    } else if (resultType instanceof RevokeResult) {\n+      return ((RevokeResult) resultType).serialize(factory);\n \n-        public ElementBuilder getBuilder() {\n-            return builder;\n-        }\n-    }\n+    } else if (resultType instanceof LocateResult) {\n+      return ((LocateResult) resultType).serialize(factory);\n \n-    private OMElement getAsOMElement(ResultType resultType, OMFactory factory)\n-            throws XKMSException {\n-\n-        if (resultType instanceof RegisterResult) {\n-            return ((RegisterResult) resultType).serialize(factory);\n-            \n-        } else if (resultType instanceof ReissueResult) {\n-            return ((ReissueResult) resultType).serialize(factory);\n-            \n-        } else if (resultType instanceof RecoverResult) {\n-            try {\n-                ((RecoverResult) resultType).serialize(factory);\n-            } catch (Throwable e) {\n-                e.printStackTrace();\n-            }\n-            return ((RecoverResult) resultType).serialize(factory);\n-            \n-        } else if (resultType instanceof RevokeResult) {\n-            return ((RevokeResult) resultType).serialize(factory);\n-            \n-        } else if (resultType instanceof LocateResult) {\n-            return ((LocateResult) resultType).serialize(factory);   \n-            \n-        } else if (resultType instanceof ValidateResult) {\n-            return ((ValidateResult) resultType).serialize(factory);\n-            \n-        } else {\n-            return null;\n-        }\n+    } else if (resultType instanceof ValidateResult) {\n+      return ((ValidateResult) resultType).serialize(factory);\n \n+    } else {\n+      return null;\n     }\n+\n+  }\n }\n",
            "diff_size": 162
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/310/ProtocolExchange.java\nindex 3a7cc60dfd2..8363bc39e29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/310/ProtocolExchange.java\n@@ -89,7 +89,8 @@ public class ProtocolExchange {\n         ResponseMechanism[] responseMechanisms = responseMechanismList != null ? (ResponseMechanism[]) responseMechanismList\n                 .toArray(new ResponseMechanism[responseMechanismList.size()])\n                 : null;\n-        // Get a sepearte Document for response\n+\n+// Get a sepearte Document for response\n         OMFactory fac = DOOMAbstractFactory.getOMFactory();\n         OMDOMFactory omDomFac = (OMDOMFactory) fac;\n         Document doc = omDomFac.getDocument();\n@@ -183,10 +184,10 @@ public class ProtocolExchange {\n             return ((RegisterResult) resultType).serialize(factory);\n             \n         } else if (resultType instanceof ReissueResult) {\n-            return ((ReissueResult) resultType).serialize(factory);\n+    return ((ReissueResult) resultType).serialize(factory);\n             \n         } else if (resultType instanceof RecoverResult) {\n-            try {\n+    try {\n                 ((RecoverResult) resultType).serialize(factory);\n             } catch (Throwable e) {\n                 e.printStackTrace();\n@@ -194,17 +195,16 @@ public class ProtocolExchange {\n             return ((RecoverResult) resultType).serialize(factory);\n             \n         } else if (resultType instanceof RevokeResult) {\n-            return ((RevokeResult) resultType).serialize(factory);\n+    return ((RevokeResult) resultType).serialize(factory);\n             \n         } else if (resultType instanceof LocateResult) {\n-            return ((LocateResult) resultType).serialize(factory);   \n-            \n-        } else if (resultType instanceof ValidateResult) {\n-            return ((ValidateResult) resultType).serialize(factory);\n+    return ((LocateResult) resultType).serialize(factory);\n+    } else if (resultType instanceof ValidateResult) {\n+    return ((ValidateResult) resultType).serialize(factory);\n             \n         } else {\n-            return null;\n+    return null;\n         }\n \n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/310/ProtocolExchange.java\nindex 3a7cc60dfd2..8b63e99eca4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/310/ProtocolExchange.java\n@@ -86,7 +86,7 @@ public class ProtocolExchange {\n \n         List responseMechanismList = requestAbstractType.getResponseMechanism();\n \n-        ResponseMechanism[] responseMechanisms = responseMechanismList != null ? (ResponseMechanism[]) responseMechanismList\n+    ResponseMechanism[] responseMechanisms = responseMechanismList != null ? (ResponseMechanism[]) responseMechanismList\n                 .toArray(new ResponseMechanism[responseMechanismList.size()])\n                 : null;\n         // Get a sepearte Document for response\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/310/ProtocolExchange.java\nindex 3a7cc60dfd2..93c3234267a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/310/ProtocolExchange.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/310/ProtocolExchange.java\n@@ -86,8 +86,9 @@ public class ProtocolExchange {\n \n         List responseMechanismList = requestAbstractType.getResponseMechanism();\n \n-        ResponseMechanism[] responseMechanisms = responseMechanismList != null ? (ResponseMechanism[]) responseMechanismList\n-                .toArray(new ResponseMechanism[responseMechanismList.size()])\n+        ResponseMechanism[] responseMechanisms = responseMechanismList != null ?\n+                (ResponseMechanism[]) responseMechanismList\n+                 .toArray(new ResponseMechanism[responseMechanismList.size()])\n                 : null;\n         // Get a sepearte Document for response\n         OMFactory fac = DOOMAbstractFactory.getOMFactory();\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1566",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "114",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1566/DirectoryFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1566/DirectoryFactory.java\nindex 5883f69c8aa..0187d7a8c19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1566/DirectoryFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1566/DirectoryFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.storage;\n \n import org.apache.lucene.store.Directory;\n@@ -43,135 +44,135 @@ import static java.lang.Math.min;\n \n public interface DirectoryFactory extends FileSystemAbstraction.ThirdPartyFileSystem\n {\n-    Directory open( File dir ) throws IOException;\n+  Directory open(File dir) throws IOException;\n+\n+  /**\n+   * Called when the directory factory is disposed of, really only here to allow\n+   * the ram directory thing to close open directories.\n+   */\n+  @Override\n+  void close();\n+\n+  DirectoryFactory PERSISTENT = new DirectoryFactory()\n+  {\n+    private final int MAX_MERGE_SIZE_MB =\n+        FeatureToggles.getInteger(DirectoryFactory.class, \"max_merge_size_mb\", 5);\n+    private final int MAX_CACHED_MB =\n+        FeatureToggles.getInteger(DirectoryFactory.class, \"max_cached_mb\", 50);\n+    private final boolean USE_DEFAULT_DIRECTORY_FACTORY =\n+        FeatureToggles.flag(DirectoryFactory.class, \"default_directory_factory\", true);\n+\n+    @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n+    @Override\n+    public Directory open(File dir) throws IOException\n+    {\n+      dir.mkdirs();\n+      FSDirectory directory = USE_DEFAULT_DIRECTORY_FACTORY ? FSDirectory.open(dir.toPath()) : new NIOFSDirectory(dir.toPath());\n+      return new NRTCachingDirectory(directory, MAX_MERGE_SIZE_MB, MAX_CACHED_MB);\n+    }\n \n-    /**\n-     * Called when the directory factory is disposed of, really only here to allow\n-     * the ram directory thing to close open directories.\n-     */\n     @Override\n-    void close();\n+    public void close()\n+    {\n+      // No resources to release. This method only exists as a hook for test implementations.\n+    }\n \n-    DirectoryFactory PERSISTENT = new DirectoryFactory()\n+    @Override\n+    public void dumpToZip(ZipOutputStream zip, byte[] scratchPad)\n     {\n-        private final int MAX_MERGE_SIZE_MB =\n-                FeatureToggles.getInteger( DirectoryFactory.class, \"max_merge_size_mb\", 5 );\n-        private final int MAX_CACHED_MB =\n-                FeatureToggles.getInteger( DirectoryFactory.class, \"max_cached_mb\", 50 );\n-        private final boolean USE_DEFAULT_DIRECTORY_FACTORY =\n-                FeatureToggles.flag( DirectoryFactory.class, \"default_directory_factory\", true );\n-\n-        @SuppressWarnings( \"ResultOfMethodCallIgnored\" )\n-        @Override\n-        public Directory open( File dir ) throws IOException\n-        {\n-            dir.mkdirs();\n-            FSDirectory directory = USE_DEFAULT_DIRECTORY_FACTORY ? FSDirectory.open( dir.toPath() ) : new NIOFSDirectory( dir.toPath() );\n-            return new NRTCachingDirectory( directory, MAX_MERGE_SIZE_MB, MAX_CACHED_MB );\n-        }\n+      // do nothing\n+    }\n+  };\n \n-        @Override\n-        public void close()\n-        {\n-            // No resources to release. This method only exists as a hook for test implementations.\n-        }\n+  final class InMemoryDirectoryFactory implements DirectoryFactory\n+  {\n+    private final Map<File, RAMDirectory> directories = new HashMap<>();\n \n-        @Override\n-        public void dumpToZip( ZipOutputStream zip, byte[] scratchPad )\n-        {\n-            // do nothing\n-        }\n-    };\n+    @Override\n+    public synchronized Directory open(File dir)\n+    {\n+      if (!directories.containsKey(dir))\n+      {\n+        directories.put(dir, new RAMDirectory());\n+      }\n+      return new UncloseableDirectory(directories.get(dir));\n+    }\n \n-    final class InMemoryDirectoryFactory implements DirectoryFactory\n+    @Override\n+    public synchronized void close()\n     {\n-        private final Map<File, RAMDirectory> directories = new HashMap<>();\n+      for (RAMDirectory ramDirectory : directories.values())\n+      {\n+        ramDirectory.close();\n+      }\n+      directories.clear();\n+    }\n \n-        @Override\n-        public synchronized Directory open( File dir )\n+    @Override\n+    public void dumpToZip(ZipOutputStream zip, byte[] scratchPad) throws IOException\n+    {\n+      for (Map.Entry<File, RAMDirectory> entry : directories.entrySet())\n+      {\n+        RAMDirectory ramDir = entry.getValue();\n+        for (String fileName : ramDir.listAll())\n         {\n-            if ( !directories.containsKey( dir ) )\n-            {\n-                directories.put( dir, new RAMDirectory() );\n-            }\n-            return new UncloseableDirectory( directories.get( dir ) );\n+          zip.putNextEntry(new ZipEntry(new File(entry.getKey(), fileName).getAbsolutePath()));\n+          copy(ramDir.openInput(fileName, IOContext.DEFAULT), zip, scratchPad);\n+          zip.closeEntry();\n         }\n+      }\n+    }\n \n-        @Override\n-        public synchronized void close()\n-        {\n-            for ( RAMDirectory ramDirectory : directories.values() )\n-            {\n-                ramDirectory.close();\n-            }\n-            directories.clear();\n-        }\n+    private static void copy(IndexInput source, OutputStream target, byte[] buffer) throws IOException\n+    {\n+      for (long remaining = source.length(), read; remaining > 0; remaining -= read)\n+      {\n+        read = min(remaining, buffer.length);\n+        source.readBytes(buffer, 0, (int) read);\n+        target.write(buffer, 0, (int) read);\n+      }\n+    }\n+  }\n \n-        @Override\n-        public void dumpToZip( ZipOutputStream zip, byte[] scratchPad ) throws IOException\n-        {\n-            for ( Map.Entry<File, RAMDirectory> entry : directories.entrySet() )\n-            {\n-                RAMDirectory ramDir = entry.getValue();\n-                for ( String fileName : ramDir.listAll() )\n-                {\n-                    zip.putNextEntry( new ZipEntry( new File( entry.getKey(), fileName ).getAbsolutePath() ) );\n-                    copy( ramDir.openInput( fileName, IOContext.DEFAULT ), zip, scratchPad );\n-                    zip.closeEntry();\n-                }\n-            }\n-        }\n+  final class Single implements DirectoryFactory\n+  {\n+    private final Directory directory;\n \n-        private static void copy( IndexInput source, OutputStream target, byte[] buffer ) throws IOException\n-        {\n-            for ( long remaining = source.length(), read; remaining > 0; remaining -= read )\n-            {\n-                read = min( remaining, buffer.length );\n-                source.readBytes( buffer, 0, (int) read );\n-                target.write( buffer, 0, (int) read );\n-            }\n-        }\n+    public Single(Directory directory)\n+    {\n+      this.directory = directory;\n     }\n \n-    final class Single implements DirectoryFactory\n+    @Override\n+    public Directory open(File dir)\n     {\n-        private final Directory directory;\n+      return directory;\n+    }\n \n-        public Single( Directory directory )\n-        {\n-            this.directory = directory;\n-        }\n+    @Override\n+    public void close()\n+    {\n+    }\n \n-        @Override\n-        public Directory open( File dir )\n-        {\n-            return directory;\n-        }\n+    @Override\n+    public void dumpToZip(ZipOutputStream zip, byte[] scratchPad)\n+    {\n+      throw new UnsupportedOperationException();\n+    }\n+  }\n \n-        @Override\n-        public void close()\n-        {\n-        }\n+  final class UncloseableDirectory extends FilterDirectory\n+  {\n \n-        @Override\n-        public void dumpToZip( ZipOutputStream zip, byte[] scratchPad )\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n+    public UncloseableDirectory(Directory delegate)\n+    {\n+      super(delegate);\n     }\n \n-    final class UncloseableDirectory extends FilterDirectory\n+    @Override\n+    public void close()\n     {\n-\n-        public UncloseableDirectory( Directory delegate )\n-        {\n-            super( delegate );\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            // No-op\n-        }\n+      // No-op\n     }\n+  }\n }\n",
            "diff_size": 158
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Annotation 'Override' have incorrect indentation level 8, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "126",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1566/DirectoryFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1566/DirectoryFactory.java\nindex 5883f69c8aa..8cd999af494 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1566/DirectoryFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1566/DirectoryFactory.java\n@@ -51,17 +51,13 @@ public interface DirectoryFactory extends FileSystemAbstraction.ThirdPartyFileSy\n      */\n     @Override\n     void close();\n-\n-    DirectoryFactory PERSISTENT = new DirectoryFactory()\n+DirectoryFactory PERSISTENT = new DirectoryFactory()\n     {\n-        private final int MAX_MERGE_SIZE_MB =\n-                FeatureToggles.getInteger( DirectoryFactory.class, \"max_merge_size_mb\", 5 );\n-        private final int MAX_CACHED_MB =\n-                FeatureToggles.getInteger( DirectoryFactory.class, \"max_cached_mb\", 50 );\n-        private final boolean USE_DEFAULT_DIRECTORY_FACTORY =\n-                FeatureToggles.flag( DirectoryFactory.class, \"default_directory_factory\", true );\n-\n-        @SuppressWarnings( \"ResultOfMethodCallIgnored\" )\n+        private final int MAX_MERGE_SIZE_MB = FeatureToggles.getInteger( DirectoryFactory.class, \"max_merge_size_mb\", 5 );\n+private final int MAX_CACHED_MB = FeatureToggles.getInteger( DirectoryFactory.class, \"max_cached_mb\", 50 );\n+private final boolean USE_DEFAULT_DIRECTORY_FACTORY = FeatureToggles.flag( DirectoryFactory.class, \"default_directory_factory\", true );\n+\n+@SuppressWarnings( \"ResultOfMethodCallIgnored\" )\n         @Override\n         public Directory open( File dir ) throws IOException\n         {\n@@ -85,7 +81,7 @@ public interface DirectoryFactory extends FileSystemAbstraction.ThirdPartyFileSy\n \n     final class InMemoryDirectoryFactory implements DirectoryFactory\n     {\n-        private final Map<File, RAMDirectory> directories = new HashMap<>();\n+        private final Map<File,RAMDirectory> directories = new HashMap<>();\n \n         @Override\n         public synchronized Directory open( File dir )\n@@ -110,7 +106,7 @@ public interface DirectoryFactory extends FileSystemAbstraction.ThirdPartyFileSy\n         @Override\n         public void dumpToZip( ZipOutputStream zip, byte[] scratchPad ) throws IOException\n         {\n-            for ( Map.Entry<File, RAMDirectory> entry : directories.entrySet() )\n+            for ( Map.Entry<File,RAMDirectory> entry : directories.entrySet() )\n             {\n                 RAMDirectory ramDir = entry.getValue();\n                 for ( String fileName : ramDir.listAll() )\n@@ -127,8 +123,8 @@ public interface DirectoryFactory extends FileSystemAbstraction.ThirdPartyFileSy\n             for ( long remaining = source.length(), read; remaining > 0; remaining -= read )\n             {\n                 read = min( remaining, buffer.length );\n-                source.readBytes( buffer, 0, (int) read );\n-                target.write( buffer, 0, (int) read );\n+                source.readBytes( buffer, 0, ( int) read );\n+                target.write( buffer, 0, ( int) read );\n             }\n         }\n     }\n@@ -162,8 +158,7 @@ public interface DirectoryFactory extends FileSystemAbstraction.ThirdPartyFileSy\n \n     final class UncloseableDirectory extends FilterDirectory\n     {\n-\n-        public UncloseableDirectory( Directory delegate )\n+    public UncloseableDirectory( Directory delegate )\n         {\n             super( delegate );\n         }\n@@ -174,4 +169,4 @@ public interface DirectoryFactory extends FileSystemAbstraction.ThirdPartyFileSy\n             // No-op\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
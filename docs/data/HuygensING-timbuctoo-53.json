{
    "project_name": "HuygensING-timbuctoo",
    "error_id": "53",
    "information": {
        "errors": [
            {
                "line": "14",
                "column": "5",
                "severity": "error",
                "message": "'}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "      result.add(partition);\n      return result;\n    }\n    else {\n      T head = input.get(0);\n      List<List<List<T>>> result = Lists.newArrayList();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/53/ListPartitioner.java\nindex a3f67f41459..951e3de43c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/53/ListPartitioner.java\n@@ -11,8 +11,7 @@ public class ListPartitioner {\n       List<List<T>> partition = createPartition(input);\n       result.add(partition);\n       return result;\n-    }\n-    else {\n+    } else {\n       T head = input.get(0);\n       List<List<List<T>>> result = Lists.newArrayList();\n       List<List<List<T>>> subPartitions = partition(input.subList(1, input.size()));\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/53/ListPartitioner.java\nindex a3f67f41459..68ac20dcef1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/53/ListPartitioner.java\n@@ -11,12 +11,11 @@ public class ListPartitioner {\n       List<List<T>> partition = createPartition(input);\n       result.add(partition);\n       return result;\n-    }\n-    else {\n+    } else {\n       T head = input.get(0);\n       List<List<List<T>>> result = Lists.newArrayList();\n       List<List<List<T>>> subPartitions = partition(input.subList(1, input.size()));\n-      for (List<List<T>> subPartition : subPartitions ) {\n+      for (List<List<T>> subPartition : subPartitions) {\n         List<List<T>> subResult = Lists.newArrayList();\n         subResult.add(Lists.newArrayList(head));\n         subResult.addAll(subPartition);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/53/ListPartitioner.java\nindex a3f67f41459..7a970089f0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/53/ListPartitioner.java\n@@ -11,12 +11,11 @@ public class ListPartitioner {\n       List<List<T>> partition = createPartition(input);\n       result.add(partition);\n       return result;\n-    }\n-    else {\n+    } else {\n       T head = input.get(0);\n       List<List<List<T>>> result = Lists.newArrayList();\n       List<List<List<T>>> subPartitions = partition(input.subList(1, input.size()));\n-      for (List<List<T>> subPartition : subPartitions ) {\n+      for (List<List<T>> subPartition : subPartitions) {\n         List<List<T>> subResult = Lists.newArrayList();\n         subResult.add(Lists.newArrayList(head));\n         subResult.addAll(subPartition);\n@@ -31,8 +30,6 @@ public class ListPartitioner {\n       }\n       return result;\n     }\n-\n-\n   }\n \n   private static <T> List<List<T>> createPartition(List<T> input) {\n@@ -40,4 +37,4 @@ public class ListPartitioner {\n     partition.add(input);\n     return partition;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/53/ListPartitioner.java\nindex a3f67f41459..0a2e99ad96c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/53/ListPartitioner.java\n@@ -1,7 +1,6 @@\n package nl.knaw.huygens;\n \n import com.google.common.collect.Lists;\n-\n import java.util.List;\n \n public class ListPartitioner {\n@@ -11,17 +10,15 @@ public class ListPartitioner {\n       List<List<T>> partition = createPartition(input);\n       result.add(partition);\n       return result;\n-    }\n-    else {\n+    } else {\n       T head = input.get(0);\n       List<List<List<T>>> result = Lists.newArrayList();\n       List<List<List<T>>> subPartitions = partition(input.subList(1, input.size()));\n-      for (List<List<T>> subPartition : subPartitions ) {\n+      for (List<List<T>> subPartition : subPartitions) {\n         List<List<T>> subResult = Lists.newArrayList();\n         subResult.add(Lists.newArrayList(head));\n         subResult.addAll(subPartition);\n         result.add(subResult);\n-\n         List<T> subList = Lists.newArrayList(head);\n         subList.addAll(subPartition.get(0));\n         List<List<T>> subResult2 = Lists.newArrayList();\n@@ -31,8 +28,6 @@ public class ListPartitioner {\n       }\n       return result;\n     }\n-\n-\n   }\n \n   private static <T> List<List<T>> createPartition(List<T> input) {\n@@ -40,4 +35,4 @@ public class ListPartitioner {\n     partition.add(input);\n     return partition;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/53/ListPartitioner.java\nindex a3f67f41459..951e3de43c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/53/ListPartitioner.java\n@@ -11,8 +11,7 @@ public class ListPartitioner {\n       List<List<T>> partition = createPartition(input);\n       result.add(partition);\n       return result;\n-    }\n-    else {\n+    } else {\n       T head = input.get(0);\n       List<List<List<T>>> result = Lists.newArrayList();\n       List<List<List<T>>> subPartitions = partition(input.subList(1, input.size()));\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "13",
                    "column": "22",
                    "severity": "error",
                    "message": "'}' at column 22 should have line break before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/53/ListPartitioner.java\nindex a3f67f41459..2afe990e1cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/53/ListPartitioner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/53/ListPartitioner.java\n@@ -10,9 +10,7 @@ public class ListPartitioner {\n       List<List<List<T>>> result = Lists.newArrayList();\n       List<List<T>> partition = createPartition(input);\n       result.add(partition);\n-      return result;\n-    }\n-    else {\n+      return result; } else {\n       T head = input.get(0);\n       List<List<List<T>>> result = Lists.newArrayList();\n       List<List<List<T>>> subPartitions = partition(input.subList(1, input.size()));\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2547",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "116",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "116",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "133",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "188",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "12",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2547/ThreadPool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2547/ThreadPool.java\nindex 25ceec248ee..b90f4e3cee1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2547/ThreadPool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2547/ThreadPool.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.scheduler;\n \n import java.time.Instant;\n@@ -51,12 +52,12 @@ import static org.neo4j.scheduler.JobMonitoringParams.NOT_MONITORED;\n \n final class ThreadPool\n {\n-    private static final int SHUTDOWN_TIMEOUT_SECONDS = FeatureToggles.getInteger( ThreadPool.class, \"shutdownTimeout\", 30 );\n+    private static final int SHUTDOWN_TIMEOUT_SECONDS = FeatureToggles.getInteger(ThreadPool.class, \"shutdownTimeout\", 30);\n     private static final int UNMONITORED_JOB_ID = -1;\n \n     private final SchedulerThreadFactory threadFactory;\n     private final ExecutorService executor;\n-    private final ConcurrentHashMap<Object,RegisteredJob> registry;\n+    private final ConcurrentHashMap<Object, RegisteredJob> registry;\n     private final Group group;\n     private final SystemNanoClock clock;\n     private final FailedJobRunsStore failedJobRunsStore;\n@@ -69,15 +70,15 @@ final class ThreadPool\n         volatile SchedulerThreadFactoryFactory providedThreadFactory = GroupedDaemonThreadFactory::new;\n     }\n \n-    ThreadPool( Group group, ThreadGroup parentThreadGroup, ThreadPoolParameters parameters, SystemNanoClock clock, FailedJobRunsStore failedJobRunsStore,\n-            LongSupplier jobIdSupplier )\n+    ThreadPool(Group group, ThreadGroup parentThreadGroup, ThreadPoolParameters parameters, SystemNanoClock clock, FailedJobRunsStore failedJobRunsStore,\n+               LongSupplier jobIdSupplier)\n     {\n         this.group = group;\n         this.clock = clock;\n         this.failedJobRunsStore = failedJobRunsStore;\n         this.jobIdSupplier = jobIdSupplier;\n-        threadFactory = parameters.providedThreadFactory.newSchedulerThreadFactory( group, parentThreadGroup );\n-        executor = group.buildExecutorService( threadFactory, parameters.desiredParallelism );\n+        threadFactory = parameters.providedThreadFactory.newSchedulerThreadFactory(group, parentThreadGroup);\n+        executor = group.buildExecutorService(threadFactory, parameters.desiredParallelism);\n         registry = new ConcurrentHashMap<>();\n     }\n \n@@ -91,17 +92,16 @@ final class ThreadPool\n         return executor;\n     }\n \n-    public <T> JobHandle<T> submit( JobMonitoringParams jobMonitoringParams, Callable<T> job )\n+    public <T> JobHandle<T> submit(JobMonitoringParams jobMonitoringParams, Callable<T> job)\n     {\n         Object registryKey = new Object();\n         AtomicBoolean running = new AtomicBoolean();\n         Instant submitted = clock.instant();\n         long jobId;\n-        if ( NOT_MONITORED == jobMonitoringParams )\n+        if (NOT_MONITORED == jobMonitoringParams)\n         {\n             jobId = UNMONITORED_JOB_ID;\n-        }\n-        else\n+        } else\n         {\n             jobId = jobIdSupplier.getAsLong();\n         }\n@@ -111,41 +111,38 @@ final class ThreadPool\n             Instant executionStart = clock.instant();\n             try\n             {\n-                running.set( true );\n+                running.set(true);\n                 return job.call();\n-            }\n-            catch ( Throwable t )\n+            } catch (Throwable t)\n             {\n-                recordFailedRun( jobId, jobMonitoringParams, submitted, executionStart, t );\n+                recordFailedRun(jobId, jobMonitoringParams, submitted, executionStart, t);\n                 throw t;\n-            }\n-            finally\n+            } finally\n             {\n-                registry.remove( registryKey );\n+                registry.remove(registryKey);\n             }\n         };\n \n-        var placeHolder = new RegisteredJob( -1, completedFuture( Void.TYPE ), NOT_MONITORED, Instant.now(), new AtomicBoolean() );\n-        registry.put( registryKey, placeHolder );\n+        var placeHolder = new RegisteredJob(-1, completedFuture(Void.TYPE), NOT_MONITORED, Instant.now(), new AtomicBoolean());\n+        registry.put(registryKey, placeHolder);\n         try\n         {\n-            var future = executor.submit( registeredJob );\n-            registry.replace( registryKey, new RegisteredJob( jobId, future, jobMonitoringParams, submitted, running ) );\n-            return new PooledJobHandle<>( future, registryKey, registry );\n-        }\n-        catch ( Exception e )\n+            var future = executor.submit(registeredJob);\n+            registry.replace(registryKey, new RegisteredJob(jobId, future, jobMonitoringParams, submitted, running));\n+            return new PooledJobHandle<>(future, registryKey, registry);\n+        } catch (Exception e)\n         {\n-            registry.remove( registryKey );\n+            registry.remove(registryKey);\n             throw e;\n         }\n     }\n \n-    public JobHandle<?> submit( JobMonitoringParams jobMonitoringParams, Runnable job )\n+    public JobHandle<?> submit(JobMonitoringParams jobMonitoringParams, Runnable job)\n     {\n-        return submit( jobMonitoringParams, asCallable( job ) );\n+        return submit(jobMonitoringParams, asCallable(job));\n     }\n \n-    private static Callable<?> asCallable( Runnable job )\n+    private static Callable<?> asCallable(Runnable job)\n     {\n         return () -> {\n             job.run();\n@@ -167,19 +164,19 @@ final class ThreadPool\n     {\n         ThreadGroup threadGroup = threadFactory.getThreadGroup();\n         int activeCountEstimate = threadGroup.activeCount();\n-        int activeCountFudge = Math.max( (int) Math.sqrt( activeCountEstimate ), 10 );\n+        int activeCountFudge = Math.max((int) Math.sqrt(activeCountEstimate), 10);\n         Thread[] snapshot = new Thread[activeCountEstimate + activeCountFudge];\n-        threadGroup.enumerate( snapshot );\n-        return Arrays.stream( snapshot ).filter( Objects::nonNull );\n+        threadGroup.enumerate(snapshot);\n+        return Arrays.stream(snapshot).filter(Objects::nonNull);\n     }\n \n     void cancelAllJobs()\n     {\n-        registry.values().removeIf( registeredJob ->\n+        registry.values().removeIf(registeredJob ->\n         {\n-            registeredJob.future.cancel( true );\n+            registeredJob.future.cancel(true);\n             return true;\n-        } );\n+        });\n     }\n \n     void shutDown()\n@@ -187,9 +184,8 @@ final class ThreadPool\n         executor.shutdown();\n         try\n         {\n-            executor.awaitTermination( SHUTDOWN_TIMEOUT_SECONDS, TimeUnit.SECONDS );\n-        }\n-        catch ( InterruptedException e )\n+            executor.awaitTermination(SHUTDOWN_TIMEOUT_SECONDS, TimeUnit.SECONDS);\n+        } catch (InterruptedException e)\n         {\n             shutdownInterrupted = e;\n         }\n@@ -198,22 +194,22 @@ final class ThreadPool\n     List<MonitoredJobInfo> getMonitoredJobs()\n     {\n         return registry.values().stream()\n-                       .filter( registeredJob -> registeredJob.monitoredJobParams != NOT_MONITORED )\n-                       .map( monitoredJob ->\n-                               new MonitoredJobInfo(\n-                                       monitoredJob.jobId,\n-                                       group,\n-                                       monitoredJob.submitted,\n-                                       monitoredJob.monitoredJobParams.getSubmitter(),\n-                                       monitoredJob.monitoredJobParams.getTargetDatabaseName(),\n-                                       monitoredJob.monitoredJobParams.getDescription(),\n-                                       null,\n-                                       null,\n-                                       monitoredJob.running.get() ? MonitoredJobInfo.State.EXECUTING : MonitoredJobInfo.State.SCHEDULED,\n-                                       JobType.IMMEDIATE,\n-                                       monitoredJob.monitoredJobParams.getCurrentStateDescription() )\n-                       )\n-                       .collect( Collectors.toList() );\n+          .filter(registeredJob -> registeredJob.monitoredJobParams != NOT_MONITORED)\n+          .map(monitoredJob ->\n+            new MonitoredJobInfo(\n+              monitoredJob.jobId,\n+              group,\n+              monitoredJob.submitted,\n+              monitoredJob.monitoredJobParams.getSubmitter(),\n+              monitoredJob.monitoredJobParams.getTargetDatabaseName(),\n+              monitoredJob.monitoredJobParams.getDescription(),\n+              null,\n+              null,\n+              monitoredJob.running.get() ? MonitoredJobInfo.State.EXECUTING : MonitoredJobInfo.State.SCHEDULED,\n+              JobType.IMMEDIATE,\n+              monitoredJob.monitoredJobParams.getCurrentStateDescription())\n+          )\n+          .collect(Collectors.toList());\n     }\n \n     InterruptedException getShutdownException()\n@@ -221,24 +217,24 @@ final class ThreadPool\n         return shutdownInterrupted;\n     }\n \n-    private void recordFailedRun( long jobId, JobMonitoringParams jobMonitoringParams, Instant submitted, Instant executionStart, Throwable t )\n+    private void recordFailedRun(long jobId, JobMonitoringParams jobMonitoringParams, Instant submitted, Instant executionStart, Throwable t)\n     {\n-        if ( jobMonitoringParams == NOT_MONITORED )\n+        if (jobMonitoringParams == NOT_MONITORED)\n         {\n             return;\n         }\n \n-        FailedJobRun failedJobRun = new FailedJobRun( jobId,\n-                group,\n-                jobMonitoringParams.getSubmitter(),\n-                jobMonitoringParams.getTargetDatabaseName(),\n-                jobMonitoringParams.getDescription(),\n-                JobType.IMMEDIATE,\n-                submitted,\n-                executionStart,\n-                clock.instant(),\n-                t );\n-        failedJobRunsStore.add( failedJobRun );\n+        FailedJobRun failedJobRun = new FailedJobRun(jobId,\n+          group,\n+          jobMonitoringParams.getSubmitter(),\n+          jobMonitoringParams.getTargetDatabaseName(),\n+          jobMonitoringParams.getDescription(),\n+          JobType.IMMEDIATE,\n+          submitted,\n+          executionStart,\n+          clock.instant(),\n+          t);\n+        failedJobRunsStore.add(failedJobRun);\n     }\n \n     private static class RegisteredJob\n@@ -249,13 +245,13 @@ final class ThreadPool\n         private final Instant submitted;\n         private final AtomicBoolean running;\n \n-        RegisteredJob( long jobId, Future<?> future, JobMonitoringParams monitoredJobParams, Instant submitted, AtomicBoolean running )\n+        RegisteredJob(long jobId, Future<?> future, JobMonitoringParams monitoredJobParams, Instant submitted, AtomicBoolean running)\n         {\n             this.jobId = jobId;\n-            this.future = requireNonNull( future );\n-            this.monitoredJobParams = requireNonNull( monitoredJobParams );\n-            this.submitted = requireNonNull( submitted );\n-            this.running = requireNonNull( running );\n+            this.future = requireNonNull(future);\n+            this.monitoredJobParams = requireNonNull(monitoredJobParams);\n+            this.submitted = requireNonNull(submitted);\n+            this.running = requireNonNull(running);\n         }\n     }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2547/ThreadPool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2547/ThreadPool.java\nindex 25ceec248ee..a3384a244b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2547/ThreadPool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2547/ThreadPool.java\n@@ -197,8 +197,7 @@ final class ThreadPool\n \n     List<MonitoredJobInfo> getMonitoredJobs()\n     {\n-        return registry.values().stream()\n-                       .filter( registeredJob -> registeredJob.monitoredJobParams != NOT_MONITORED )\n+        return registry.values().stream().filter( registeredJob -> registeredJob.monitoredJobParams != NOT_MONITORED )\n                        .map( monitoredJob ->\n                                new MonitoredJobInfo(\n                                        monitoredJob.jobId,\n@@ -258,4 +257,4 @@ final class ThreadPool\n             this.running = requireNonNull( running );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
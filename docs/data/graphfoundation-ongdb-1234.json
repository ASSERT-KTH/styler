{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1234",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1234/ClassGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1234/ClassGenerator.java\nindex ebc4df6c02f..7e747a97cb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1234/ClassGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1234/ClassGenerator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.lang.reflect.Modifier;\n@@ -33,130 +34,129 @@ import static org.neo4j.codegen.TypeReference.typeReference;\n \n public class ClassGenerator implements AutoCloseable\n {\n-    private final ClassHandle handle;\n-    private ClassEmitter emitter;\n-    private Map<String,FieldReference> fields;\n-    private boolean hasConstructor;\n-\n-    ClassGenerator( ClassHandle handle, ClassEmitter emitter )\n-    {\n-        this.handle = handle;\n-        this.emitter = emitter;\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        if ( !hasConstructor )\n-        {\n-            generate( MethodTemplate.constructor().invokeSuper().build() );\n-        }\n-        emitter.done();\n-        handle.generator.closeClass();\n-        emitter = InvalidState.CLASS_DONE;\n-    }\n-\n-    public ClassHandle handle()\n-    {\n-        return handle;\n-    }\n-\n-    public FieldReference field( Class<?> type, String name )\n-    {\n-        return field( typeReference( type ), name );\n-    }\n-\n-    public FieldReference field( TypeReference type, String name )\n-    {\n-        return emitField( Modifier.PUBLIC, type, name, null );\n-    }\n-\n-    public FieldReference staticField( Class<?> type, String name, Expression value )\n-    {\n-        return staticField( typeReference( type ), name, value );\n-    }\n-\n-    public FieldReference staticField( TypeReference type, String name )\n-    {\n-        return emitField( Modifier.PUBLIC | Modifier.STATIC, type, name, null );\n-    }\n-\n-    public FieldReference staticField( TypeReference type, String name, Expression value )\n-    {\n-        return emitField( Modifier.PRIVATE | Modifier.STATIC | Modifier.FINAL, type, name, Objects.requireNonNull( value ) );\n-    }\n-\n-    private FieldReference emitField( int modifiers, TypeReference type, String name, Expression value )\n-    {\n-        if ( fields == null )\n-        {\n-            fields = new HashMap<>();\n-        }\n-        else if ( fields.containsKey( name ) )\n-        {\n-            throw new IllegalArgumentException( handle + \" already has a field '\" + name + \"'\" );\n-        }\n-        FieldReference field = new FieldReference( modifiers, handle, type, name );\n-        fields.put( name, field );\n-        emitter.field( field, value );\n-        return field;\n-    }\n-\n-    public MethodReference generate( MethodTemplate template, Binding... bindings )\n-    {\n-        try ( CodeBlock generator = generate( template.declaration( handle ) ) )\n-        {\n-            template.generate( generator );\n-        }\n-        return methodReference( handle, template.returnType(), template.name(), template.modifiers(),  template.parameterTypes() );\n-    }\n-\n-    public CodeBlock generateConstructor( Parameter... parameters )\n-    {\n-        return generate( constructor( handle, parameters,/*throws:*/NO_TYPES, Modifier.PUBLIC, NO_PARAMETERS ) );\n-    }\n-\n-    public CodeBlock generateConstructor( int modifiers, Parameter... parameters )\n-    {\n-        return generate( constructor( handle, parameters,/*throws:*/NO_TYPES, modifiers, NO_PARAMETERS ) );\n-    }\n-\n-    public CodeBlock generateMethod( Class<?> returnType, String name, Parameter... parameters )\n-    {\n-        return generateMethod( typeReference( returnType ), name, Modifier.PUBLIC, parameters );\n-    }\n-\n-    public CodeBlock generateMethod( Class<?> returnType, String name, int modifiers, Parameter... parameters )\n-    {\n-        return generateMethod( typeReference( returnType ), name, modifiers, parameters );\n-    }\n-\n-    public CodeBlock generateMethod( TypeReference returnType, String name, Parameter... parameters )\n-    {\n-        return generate( method( handle, returnType, name, parameters,/*throws:*/NO_TYPES, Modifier.PUBLIC, NO_PARAMETERS ) );\n-    }\n-\n-    public CodeBlock generateMethod( TypeReference returnType, String name, int modifiers, Parameter... parameters )\n-    {\n-        return generate( method( handle, returnType, name, parameters,/*throws:*/NO_TYPES, modifiers, NO_PARAMETERS ) );\n-    }\n-\n-    public CodeBlock generate( MethodDeclaration.Builder builder )\n-    {\n-        return generate( builder.build( handle ) );\n-    }\n-\n-    private CodeBlock generate( MethodDeclaration declaration )\n-    {\n-        if ( declaration.isConstructor() )\n-        {\n-            hasConstructor = true;\n-        }\n-        return new CodeBlock( this, emitter.method( declaration ), declaration.parameters() );\n-    }\n-\n-    FieldReference getField( String name )\n-    {\n-        return fields == null ? null : fields.get( name );\n-    }\n+  private final ClassHandle handle;\n+  private ClassEmitter emitter;\n+  private Map<String, FieldReference> fields;\n+  private boolean hasConstructor;\n+\n+  ClassGenerator(ClassHandle handle, ClassEmitter emitter)\n+  {\n+    this.handle = handle;\n+    this.emitter = emitter;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    if (!hasConstructor)\n+    {\n+      generate(MethodTemplate.constructor().invokeSuper().build());\n+    }\n+    emitter.done();\n+    handle.generator.closeClass();\n+    emitter = InvalidState.CLASS_DONE;\n+  }\n+\n+  public ClassHandle handle()\n+  {\n+    return handle;\n+  }\n+\n+  public FieldReference field(Class<?> type, String name)\n+  {\n+    return field(typeReference(type), name);\n+  }\n+\n+  public FieldReference field(TypeReference type, String name)\n+  {\n+    return emitField(Modifier.PUBLIC, type, name, null);\n+  }\n+\n+  public FieldReference staticField(Class<?> type, String name, Expression value)\n+  {\n+    return staticField(typeReference(type), name, value);\n+  }\n+\n+  public FieldReference staticField(TypeReference type, String name)\n+  {\n+    return emitField(Modifier.PUBLIC | Modifier.STATIC, type, name, null);\n+  }\n+\n+  public FieldReference staticField(TypeReference type, String name, Expression value)\n+  {\n+    return emitField(Modifier.PRIVATE | Modifier.STATIC | Modifier.FINAL, type, name, Objects.requireNonNull(value));\n+  }\n+\n+  private FieldReference emitField(int modifiers, TypeReference type, String name, Expression value)\n+  {\n+    if (fields == null)\n+    {\n+      fields = new HashMap<>();\n+    } else if (fields.containsKey(name))\n+    {\n+      throw new IllegalArgumentException(handle + \" already has a field '\" + name + \"'\");\n+    }\n+    FieldReference field = new FieldReference(modifiers, handle, type, name);\n+    fields.put(name, field);\n+    emitter.field(field, value);\n+    return field;\n+  }\n+\n+  public MethodReference generate(MethodTemplate template, Binding... bindings)\n+  {\n+    try (CodeBlock generator = generate(template.declaration(handle)))\n+    {\n+      template.generate(generator);\n+    }\n+    return methodReference(handle, template.returnType(), template.name(), template.modifiers(), template.parameterTypes());\n+  }\n+\n+  public CodeBlock generateConstructor(Parameter... parameters)\n+  {\n+    return generate(constructor(handle, parameters,/*throws:*/NO_TYPES, Modifier.PUBLIC, NO_PARAMETERS));\n+  }\n+\n+  public CodeBlock generateConstructor(int modifiers, Parameter... parameters)\n+  {\n+    return generate(constructor(handle, parameters,/*throws:*/NO_TYPES, modifiers, NO_PARAMETERS));\n+  }\n+\n+  public CodeBlock generateMethod(Class<?> returnType, String name, Parameter... parameters)\n+  {\n+    return generateMethod(typeReference(returnType), name, Modifier.PUBLIC, parameters);\n+  }\n+\n+  public CodeBlock generateMethod(Class<?> returnType, String name, int modifiers, Parameter... parameters)\n+  {\n+    return generateMethod(typeReference(returnType), name, modifiers, parameters);\n+  }\n+\n+  public CodeBlock generateMethod(TypeReference returnType, String name, Parameter... parameters)\n+  {\n+    return generate(method(handle, returnType, name, parameters,/*throws:*/NO_TYPES, Modifier.PUBLIC, NO_PARAMETERS));\n+  }\n+\n+  public CodeBlock generateMethod(TypeReference returnType, String name, int modifiers, Parameter... parameters)\n+  {\n+    return generate(method(handle, returnType, name, parameters,/*throws:*/NO_TYPES, modifiers, NO_PARAMETERS));\n+  }\n+\n+  public CodeBlock generate(MethodDeclaration.Builder builder)\n+  {\n+    return generate(builder.build(handle));\n+  }\n+\n+  private CodeBlock generate(MethodDeclaration declaration)\n+  {\n+    if (declaration.isConstructor())\n+    {\n+      hasConstructor = true;\n+    }\n+    return new CodeBlock(this, emitter.method(declaration), declaration.parameters());\n+  }\n+\n+  FieldReference getField(String name)\n+  {\n+    return fields == null ? null : fields.get(name);\n+  }\n }\n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1234/ClassGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1234/ClassGenerator.java\nindex ebc4df6c02f..d706f287a75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1234/ClassGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1234/ClassGenerator.java\n@@ -96,7 +96,8 @@ public class ClassGenerator implements AutoCloseable\n         {\n             throw new IllegalArgumentException( handle + \" already has a field '\" + name + \"'\" );\n         }\n-        FieldReference field = new FieldReference( modifiers, handle, type, name );\n+\n+FieldReference field = new FieldReference( modifiers, handle, type, name );\n         fields.put( name, field );\n         emitter.field( field, value );\n         return field;\n@@ -108,7 +109,8 @@ public class ClassGenerator implements AutoCloseable\n         {\n             template.generate( generator );\n         }\n-        return methodReference( handle, template.returnType(), template.name(), template.modifiers(),  template.parameterTypes() );\n+\n+return methodReference( handle, template.returnType(), template.name(), template.modifiers(), template.parameterTypes() );\n     }\n \n     public CodeBlock generateConstructor( Parameter... parameters )\n@@ -159,4 +161,4 @@ public class ClassGenerator implements AutoCloseable\n     {\n         return fields == null ? null : fields.get( name );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
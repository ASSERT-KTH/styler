{
    "project_name": "NationalSecurityAgency-datawave",
    "error_id": "125",
    "information": {
        "errors": [
            {
                "line": "28",
                "severity": "error",
                "message": "Accumulo non-public classes imported",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "import org.apache.accumulo.core.client.admin.ActiveScan;\nimport org.apache.accumulo.core.client.admin.InstanceOperations;\nimport org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/styler/125/InMemoryInstanceOperations.java\nindex f0f8f04822b..062ee3ddce1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/styler/125/InMemoryInstanceOperations.java\n@@ -25,8 +25,9 @@ import org.apache.accumulo.core.client.AccumuloSecurityException;\n import org.apache.accumulo.core.client.admin.ActiveCompaction;\n import org.apache.accumulo.core.client.admin.ActiveScan;\n import org.apache.accumulo.core.client.admin.InstanceOperations;\n-import org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;\n-import org.slf4j.Logger;\n+import\n+org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;\n+ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n class InMemoryInstanceOperations implements InstanceOperations {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/intellij/125/InMemoryInstanceOperations.java\nindex f0f8f04822b..a61ff557332 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/intellij/125/InMemoryInstanceOperations.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package datawave.accumulo.inmemory;\n \n import java.util.ArrayList;\n@@ -30,69 +31,72 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n class InMemoryInstanceOperations implements InstanceOperations {\n-    private static final Logger log = LoggerFactory.getLogger(InMemoryInstanceOperations.class);\n-    InMemoryAccumulo acu;\n-    \n-    public InMemoryInstanceOperations(InMemoryAccumulo acu) {\n-        this.acu = acu;\n-    }\n-    \n-    @Override\n-    public void setProperty(String property, String value) throws AccumuloException, AccumuloSecurityException {\n-        acu.setProperty(property, value);\n-    }\n-    \n-    @Override\n-    public void removeProperty(String property) throws AccumuloException, AccumuloSecurityException {\n-        acu.removeProperty(property);\n-    }\n-    \n-    @Override\n-    public Map<String,String> getSystemConfiguration() throws AccumuloException, AccumuloSecurityException {\n-        return acu.systemProperties;\n-    }\n-    \n-    @Override\n-    public Map<String,String> getSiteConfiguration() throws AccumuloException, AccumuloSecurityException {\n-        return acu.systemProperties;\n-    }\n-    \n-    @Override\n-    public List<String> getTabletServers() {\n-        return new ArrayList<>();\n-    }\n-    \n-    @Override\n-    public List<ActiveScan> getActiveScans(String tserver) throws AccumuloException, AccumuloSecurityException {\n-        return new ArrayList<>();\n-    }\n-    \n-    @Override\n-    public boolean testClassLoad(String className, String asTypeName) throws AccumuloException, AccumuloSecurityException {\n-        try {\n-            AccumuloVFSClassLoader.loadClass(className, Class.forName(asTypeName));\n-        } catch (ClassNotFoundException e) {\n-            log.warn(\"Could not find class named '\" + className + \"' in testClassLoad.\", e);\n-            return false;\n-        }\n-        return true;\n-    }\n-    \n-    @Override\n-    public List<ActiveCompaction> getActiveCompactions(String tserver) throws AccumuloException, AccumuloSecurityException {\n-        return new ArrayList<>();\n-    }\n-    \n-    @Override\n-    public void ping(String tserver) throws AccumuloException {\n-        \n-    }\n-    \n-    @Override\n-    public void waitForBalance() throws AccumuloException {}\n+  private static final Logger log = LoggerFactory.getLogger(InMemoryInstanceOperations.class);\n+  InMemoryAccumulo acu;\n+\n+  public InMemoryInstanceOperations(InMemoryAccumulo acu) {\n+    this.acu = acu;\n+  }\n \n-    @Override\n-    public String getInstanceID() {\n-        return \"\";\n+  @Override\n+  public void setProperty(String property, String value) throws AccumuloException, AccumuloSecurityException {\n+    acu.setProperty(property, value);\n+  }\n+\n+  @Override\n+  public void removeProperty(String property) throws AccumuloException, AccumuloSecurityException {\n+    acu.removeProperty(property);\n+  }\n+\n+  @Override\n+  public Map<String, String> getSystemConfiguration() throws AccumuloException, AccumuloSecurityException {\n+    return acu.systemProperties;\n+  }\n+\n+  @Override\n+  public Map<String, String> getSiteConfiguration() throws AccumuloException, AccumuloSecurityException {\n+    return acu.systemProperties;\n+  }\n+\n+  @Override\n+  public List<String> getTabletServers() {\n+    return new ArrayList<>();\n+  }\n+\n+  @Override\n+  public List<ActiveScan> getActiveScans(String tserver) throws AccumuloException, AccumuloSecurityException {\n+    return new ArrayList<>();\n+  }\n+\n+  @Override\n+  public boolean testClassLoad(String className, String asTypeName)\n+      throws AccumuloException, AccumuloSecurityException {\n+    try {\n+      AccumuloVFSClassLoader.loadClass(className, Class.forName(asTypeName));\n+    } catch (ClassNotFoundException e) {\n+      log.warn(\"Could not find class named '\" + className + \"' in testClassLoad.\", e);\n+      return false;\n     }\n+    return true;\n+  }\n+\n+  @Override\n+  public List<ActiveCompaction> getActiveCompactions(String tserver)\n+      throws AccumuloException, AccumuloSecurityException {\n+    return new ArrayList<>();\n+  }\n+\n+  @Override\n+  public void ping(String tserver) throws AccumuloException {\n+\n+  }\n+\n+  @Override\n+  public void waitForBalance() throws AccumuloException {\n+  }\n+\n+  @Override\n+  public String getInstanceID() {\n+    return \"\";\n+  }\n }\n",
            "diff_size": 121
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/naturalize/125/InMemoryInstanceOperations.java\nindex f0f8f04822b..da7155e3678 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/naturalize/125/InMemoryInstanceOperations.java\n@@ -95,4 +95,4 @@ class InMemoryInstanceOperations implements InstanceOperations {\n     public String getInstanceID() {\n         return \"\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/codebuff/125/InMemoryInstanceOperations.java\nindex f0f8f04822b..d47a736756e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/codebuff/125/InMemoryInstanceOperations.java\n@@ -19,7 +19,6 @@ package datawave.accumulo.inmemory;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n-\n import org.apache.accumulo.core.client.AccumuloException;\n import org.apache.accumulo.core.client.AccumuloSecurityException;\n import org.apache.accumulo.core.client.admin.ActiveCompaction;\n@@ -32,43 +31,49 @@ import org.slf4j.LoggerFactory;\n class InMemoryInstanceOperations implements InstanceOperations {\n     private static final Logger log = LoggerFactory.getLogger(InMemoryInstanceOperations.class);\n     InMemoryAccumulo acu;\n-    \n+\n     public InMemoryInstanceOperations(InMemoryAccumulo acu) {\n         this.acu = acu;\n     }\n-    \n+\n     @Override\n-    public void setProperty(String property, String value) throws AccumuloException, AccumuloSecurityException {\n+    public void setProperty(String property, String value) throws AccumuloException,\n+        AccumuloSecurityException {\n         acu.setProperty(property, value);\n     }\n-    \n+\n     @Override\n-    public void removeProperty(String property) throws AccumuloException, AccumuloSecurityException {\n+    public void removeProperty(String property) throws AccumuloException,\n+        AccumuloSecurityException {\n         acu.removeProperty(property);\n     }\n-    \n+\n     @Override\n-    public Map<String,String> getSystemConfiguration() throws AccumuloException, AccumuloSecurityException {\n+    public Map<String,String> getSystemConfiguration() throws AccumuloException,\n+        AccumuloSecurityException {\n         return acu.systemProperties;\n     }\n-    \n+\n     @Override\n-    public Map<String,String> getSiteConfiguration() throws AccumuloException, AccumuloSecurityException {\n+    public Map<String,String> getSiteConfiguration() throws AccumuloException,\n+        AccumuloSecurityException {\n         return acu.systemProperties;\n     }\n-    \n+\n     @Override\n     public List<String> getTabletServers() {\n         return new ArrayList<>();\n     }\n-    \n+\n     @Override\n-    public List<ActiveScan> getActiveScans(String tserver) throws AccumuloException, AccumuloSecurityException {\n+    public List<ActiveScan> getActiveScans(String tserver) throws AccumuloException,\n+        AccumuloSecurityException {\n         return new ArrayList<>();\n     }\n-    \n+\n     @Override\n-    public boolean testClassLoad(String className, String asTypeName) throws AccumuloException, AccumuloSecurityException {\n+    public boolean testClassLoad(String className, String asTypeName) throws AccumuloException,\n+        AccumuloSecurityException {\n         try {\n             AccumuloVFSClassLoader.loadClass(className, Class.forName(asTypeName));\n         } catch (ClassNotFoundException e) {\n@@ -77,17 +82,16 @@ class InMemoryInstanceOperations implements InstanceOperations {\n         }\n         return true;\n     }\n-    \n+\n     @Override\n-    public List<ActiveCompaction> getActiveCompactions(String tserver) throws AccumuloException, AccumuloSecurityException {\n+    public List<ActiveCompaction> getActiveCompactions(String tserver) throws AccumuloException,\n+        AccumuloSecurityException {\n         return new ArrayList<>();\n     }\n-    \n+\n     @Override\n-    public void ping(String tserver) throws AccumuloException {\n-        \n-    }\n-    \n+    public void ping(String tserver) throws AccumuloException {}\n+\n     @Override\n     public void waitForBalance() throws AccumuloException {}\n \n@@ -95,4 +99,4 @@ class InMemoryInstanceOperations implements InstanceOperations {\n     public String getInstanceID() {\n         return \"\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/styler_three_grams/125/InMemoryInstanceOperations.java\nindex f0f8f04822b..062ee3ddce1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/125/InMemoryInstanceOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/styler_three_grams/125/InMemoryInstanceOperations.java\n@@ -25,8 +25,9 @@ import org.apache.accumulo.core.client.AccumuloSecurityException;\n import org.apache.accumulo.core.client.admin.ActiveCompaction;\n import org.apache.accumulo.core.client.admin.ActiveScan;\n import org.apache.accumulo.core.client.admin.InstanceOperations;\n-import org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;\n-import org.slf4j.Logger;\n+import\n+org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;\n+ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n class InMemoryInstanceOperations implements InstanceOperations {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
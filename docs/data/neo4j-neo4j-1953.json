{
    "project_name": "neo4j-neo4j",
    "error_id": "1953",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1953/TaskExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1953/TaskExecutor.java\nindex ba38116f7a0..c77f20d308e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1953/TaskExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1953/TaskExecutor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.executor;\n \n import java.util.concurrent.ExecutorService;\n@@ -29,7 +30,7 @@ import org.neo4j.internal.batchimport.staging.Panicable;\n  * i.e. the number of threads executing the tasks in parallel.\n  *\n  * @param <LOCAL> object/state local to each thread, that submitted {@link Task tasks} can get access to\n- * when {@link Task#run(Object) running}.\n+ *                when {@link Task#run(Object) running}.\n  */\n public interface TaskExecutor<LOCAL> extends Parallelizable, AutoCloseable, Panicable\n {\n@@ -39,7 +40,7 @@ public interface TaskExecutor<LOCAL> extends Parallelizable, AutoCloseable, Pani\n      *\n      * @param task a {@link Runnable} defining the task to be executed.\n      */\n-    void submit( Task<LOCAL> task );\n+    void submit(Task<LOCAL> task);\n \n     /**\n      * Closes this {@link TaskExecutor}, disallowing new tasks to be {@link #submit(Task) submitted}.\n@@ -52,7 +53,7 @@ public interface TaskExecutor<LOCAL> extends Parallelizable, AutoCloseable, Pani\n      * this executor is expected to fulfill.\n      *\n      * @throws RuntimeException of some sort if this executor is in a bad stage, the original error that\n-     * made this executor fail.\n+     *                          made this executor fail.\n      */\n     void assertHealthy();\n }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "496",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/496/SparseDoubleLongKeyMatrixTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/496/SparseDoubleLongKeyMatrixTest.java\nindex 44670c2476c..bcb9a288a90 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/496/SparseDoubleLongKeyMatrixTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/496/SparseDoubleLongKeyMatrixTest.java\n@@ -40,9 +40,9 @@ public class SparseDoubleLongKeyMatrixTest {\n     assertEquals(matrix.get(0, 100), 1.0);\n \n     matrix.clear();\n-    int [] rowIndexes = {0, 1};\n-    long [] colIndexes = {-100, 100};\n-    double [] values = {1.0, 1.0};\n+    int[] rowIndexes = {0, 1};\n+    long[] colIndexes = {-100, 100};\n+    double[] values = {1.0, 1.0};\n     matrix.plusBy(rowIndexes, colIndexes, values);\n     assertEquals(matrix.get(0, -100), 1.0);\n     assertEquals(matrix.get(1, 100), 1.0);\n@@ -63,8 +63,8 @@ public class SparseDoubleLongKeyMatrixTest {\n     matrix1.plusBy(0, -100, 1.0);\n     matrix1.plusBy(1, 100, 1.0);\n     matrix.plusBy(matrix1);\n-    assertEquals(((SparseLongKeyDoubleVector)matrix.getTVector(0)).get(-100), 2.0);\n-    assertEquals(((SparseLongKeyDoubleVector)matrix.getTVector(1)).get(100), 2.0);\n+    assertEquals(((SparseLongKeyDoubleVector) matrix.getTVector(0)).get(-100), 2.0);\n+    assertEquals(((SparseLongKeyDoubleVector) matrix.getTVector(1)).get(100), 2.0);\n   }\n \n   @Test\n@@ -76,7 +76,7 @@ public class SparseDoubleLongKeyMatrixTest {\n     assertEquals(matrix.nonZeroNum(), 2);\n     assertEquals(matrix.sparsity(), 5.421010862427522E-20);\n \n-    SparseDoubleLongKeyMatrix matrix1= new SparseDoubleLongKeyMatrix(2, 2);\n+    SparseDoubleLongKeyMatrix matrix1 = new SparseDoubleLongKeyMatrix(2, 2);\n     matrix1.plusBy(0, -100, 1.0);\n     matrix1.plusBy(1, 100, 1.0);\n     assertEquals(matrix1.size(), 4);\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/496/SparseDoubleLongKeyMatrixTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/496/SparseDoubleLongKeyMatrixTest.java\nindex 44670c2476c..bd4b6573e31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/496/SparseDoubleLongKeyMatrixTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/496/SparseDoubleLongKeyMatrixTest.java\n@@ -40,8 +40,8 @@ public class SparseDoubleLongKeyMatrixTest {\n     assertEquals(matrix.get(0, 100), 1.0);\n \n     matrix.clear();\n-    int [] rowIndexes = {0, 1};\n-    long [] colIndexes = {-100, 100};\n+    int[] rowIndexes = {0, 1};\n+    long[] colIndexes = {-100, 100};\n     double [] values = {1.0, 1.0};\n     matrix.plusBy(rowIndexes, colIndexes, values);\n     assertEquals(matrix.get(0, -100), 1.0);\n@@ -76,11 +76,11 @@ public class SparseDoubleLongKeyMatrixTest {\n     assertEquals(matrix.nonZeroNum(), 2);\n     assertEquals(matrix.sparsity(), 5.421010862427522E-20);\n \n-    SparseDoubleLongKeyMatrix matrix1= new SparseDoubleLongKeyMatrix(2, 2);\n+    SparseDoubleLongKeyMatrix matrix1 = new SparseDoubleLongKeyMatrix(2, 2);\n     matrix1.plusBy(0, -100, 1.0);\n     matrix1.plusBy(1, 100, 1.0);\n     assertEquals(matrix1.size(), 4);\n     assertEquals(matrix1.nonZeroNum(), 2);\n     assertEquals(matrix1.sparsity(), 0.5);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/496/SparseDoubleLongKeyMatrixTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/496/SparseDoubleLongKeyMatrixTest.java\nindex 44670c2476c..53f5059cdee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/496/SparseDoubleLongKeyMatrixTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/496/SparseDoubleLongKeyMatrixTest.java\n@@ -18,10 +18,11 @@ package com.tencent.angel.ml.math.matrix;\n \n import com.tencent.angel.ml.math.vector.SparseLongKeyDoubleVector;\n import org.junit.Test;\n-\n import static junit.framework.Assert.assertEquals;\n \n public class SparseDoubleLongKeyMatrixTest {\n+\n+\n   @Test\n   public void testPlusByGet() {\n     SparseDoubleLongKeyMatrix matrix = new SparseDoubleLongKeyMatrix(2, -1);\n@@ -29,7 +30,6 @@ public class SparseDoubleLongKeyMatrixTest {\n     matrix.plusBy(1, 100, 1.0);\n     assertEquals(matrix.get(0, -100), 1.0);\n     assertEquals(matrix.get(1, 100), 1.0);\n-\n     matrix.clear();\n     SparseLongKeyDoubleVector incVec = new SparseLongKeyDoubleVector(-1);\n     incVec.set(-100, 1);\n@@ -38,15 +38,14 @@ public class SparseDoubleLongKeyMatrixTest {\n     matrix.plusBy(incVec);\n     assertEquals(matrix.get(0, -100), 1.0);\n     assertEquals(matrix.get(0, 100), 1.0);\n-\n     matrix.clear();\n-    int [] rowIndexes = {0, 1};\n-    long [] colIndexes = {-100, 100};\n-    double [] values = {1.0, 1.0};\n+\n+    int[] rowIndexes = {0, 1};\n+    long[] colIndexes = {-100, 100};\n+    double[] values = {1.0, 1.0};\n     matrix.plusBy(rowIndexes, colIndexes, values);\n     assertEquals(matrix.get(0, -100), 1.0);\n     assertEquals(matrix.get(1, 100), 1.0);\n-\n     matrix.clear();\n     colIndexes[0] = -100;\n     colIndexes[1] = 100;\n@@ -55,7 +54,6 @@ public class SparseDoubleLongKeyMatrixTest {\n     matrix.plusBy(0, colIndexes, values);\n     assertEquals(matrix.get(0, -100), 1.0);\n     assertEquals(matrix.get(0, 100), 1.0);\n-\n     SparseDoubleLongKeyMatrix matrix1 = new SparseDoubleLongKeyMatrix(2, -1);\n     matrix.clear();\n     matrix.plusBy(0, -100, 1.0);\n@@ -63,8 +61,8 @@ public class SparseDoubleLongKeyMatrixTest {\n     matrix1.plusBy(0, -100, 1.0);\n     matrix1.plusBy(1, 100, 1.0);\n     matrix.plusBy(matrix1);\n-    assertEquals(((SparseLongKeyDoubleVector)matrix.getTVector(0)).get(-100), 2.0);\n-    assertEquals(((SparseLongKeyDoubleVector)matrix.getTVector(1)).get(100), 2.0);\n+    assertEquals(((SparseLongKeyDoubleVector) matrix.getTVector(0)).get(-100), 2.0);\n+    assertEquals(((SparseLongKeyDoubleVector) matrix.getTVector(1)).get(100), 2.0);\n   }\n \n   @Test\n@@ -75,12 +73,11 @@ public class SparseDoubleLongKeyMatrixTest {\n     assertEquals(matrix.size(), -2);\n     assertEquals(matrix.nonZeroNum(), 2);\n     assertEquals(matrix.sparsity(), 5.421010862427522E-20);\n-\n-    SparseDoubleLongKeyMatrix matrix1= new SparseDoubleLongKeyMatrix(2, 2);\n+    SparseDoubleLongKeyMatrix matrix1 = new SparseDoubleLongKeyMatrix(2, 2);\n     matrix1.plusBy(0, -100, 1.0);\n     matrix1.plusBy(1, 100, 1.0);\n     assertEquals(matrix1.size(), 4);\n     assertEquals(matrix1.nonZeroNum(), 2);\n     assertEquals(matrix1.sparsity(), 0.5);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
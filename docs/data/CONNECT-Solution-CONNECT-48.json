{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "48",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admingui.display;\n\nimport gov.hhs.fha.nhinc.admingui.proxy.AdminGUIProxyObjectFactory;\nimport gov.hhs.fha.nhinc.admingui.proxy.DirectConfigConstants;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/48/DirectDisplayController.java\nindex 1a38fa1bbc5..f58d41dbd91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/48/DirectDisplayController.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.admingui.display;\n-\n import gov.hhs.fha.nhinc.admingui.proxy.AdminGUIProxyObjectFactory;\n import gov.hhs.fha.nhinc.admingui.proxy.DirectConfigConstants;\n import gov.hhs.fha.nhinc.admingui.proxy.DirectConfigProxy;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/48/DirectDisplayController.java\nindex 1a38fa1bbc5..9fee11e0507 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/48/DirectDisplayController.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.display;\n \n import gov.hhs.fha.nhinc.admingui.proxy.AdminGUIProxyObjectFactory;\n@@ -34,49 +35,48 @@ import gov.hhs.fha.nhinc.webserviceproxy.WebServiceProxyHelper;\n import org.apache.log4j.Logger;\n \n /**\n- *\n  * @author jsmith\n  */\n public class DirectDisplayController implements DisplayController {\n \n-    private final WebServiceProxyHelper oProxyHelper = new WebServiceProxyHelper();\n+  private final WebServiceProxyHelper oProxyHelper = new WebServiceProxyHelper();\n \n-    private static final Logger LOG = Logger.getLogger(DirectDisplayController.class);\n+  private static final Logger LOG = Logger.getLogger(DirectDisplayController.class);\n \n-    /**\n-     * Determines if direct is currently enabled and therefore direct pages can\n-     * be displayed in the Admin GUI.\n-     */\n-    @Override\n-    public void checkDisplay() {\n-        DisplayHolder.getInstance().setDirectEnabled(directConfigEnabled());\n-    }\n+  /**\n+   * Determines if direct is currently enabled and therefore direct pages can\n+   * be displayed in the Admin GUI.\n+   */\n+  @Override\n+  public void checkDisplay() {\n+    DisplayHolder.getInstance().setDirectEnabled(directConfigEnabled());\n+  }\n \n-    private boolean directConfigEnabled() {\n-        boolean result;\n-        try {\n-            String url = oProxyHelper\n-                    .getAdapterEndPointFromConnectionManager(DirectConfigConstants.DIRECT_CONFIG_SERVICE_NAME);\n-            if (NullChecker.isNullish(url)) {\n-                result = false;\n-            } else {\n-                result = pingDirectConfig(url);\n-            }\n-        } catch (Exception ex) {\n-            result = false;\n-            LOG.error(ex.getLocalizedMessage(), ex);\n-        }\n-\n-        return result;\n+  private boolean directConfigEnabled() {\n+    boolean result;\n+    try {\n+      String url = oProxyHelper\n+          .getAdapterEndPointFromConnectionManager(DirectConfigConstants.DIRECT_CONFIG_SERVICE_NAME);\n+      if (NullChecker.isNullish(url)) {\n+        result = false;\n+      } else {\n+        result = pingDirectConfig(url);\n+      }\n+    } catch (Exception ex) {\n+      result = false;\n+      LOG.error(ex.getLocalizedMessage(), ex);\n     }\n \n-    private boolean pingDirectConfig(String url) throws Exception {\n-        AdminGUIProxyObjectFactory objectFactory = new AdminGUIProxyObjectFactory();\n-        DirectConfigProxy directConfigProxy = objectFactory.getDirectConfigProxy();\n-        if (directConfigProxy != null) {\n-            return objectFactory.getDirectConfigProxy().pingDirectConfig(url);\n-        }\n-        return false;\n+    return result;\n+  }\n+\n+  private boolean pingDirectConfig(String url) throws Exception {\n+    AdminGUIProxyObjectFactory objectFactory = new AdminGUIProxyObjectFactory();\n+    DirectConfigProxy directConfigProxy = objectFactory.getDirectConfigProxy();\n+    if (directConfigProxy != null) {\n+      return objectFactory.getDirectConfigProxy().pingDirectConfig(url);\n     }\n+    return false;\n+  }\n \n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/48/DirectDisplayController.java\nindex 1a38fa1bbc5..84fd8122709 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/48/DirectDisplayController.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.display;\n \n import gov.hhs.fha.nhinc.admingui.proxy.AdminGUIProxyObjectFactory;\n@@ -55,9 +56,8 @@ public class DirectDisplayController implements DisplayController {\n     private boolean directConfigEnabled() {\n         boolean result;\n         try {\n-            String url = oProxyHelper\n-                    .getAdapterEndPointFromConnectionManager(DirectConfigConstants.DIRECT_CONFIG_SERVICE_NAME);\n-            if (NullChecker.isNullish(url)) {\n+            String url = oProxyHelper.getAdapterEndPointFromConnectionManager(DirectConfigConstants.DIRECT_CONFIG_SERVICE_NAME);\n+if (NullChecker.isNullish(url)) {\n                 result = false;\n             } else {\n                 result = pingDirectConfig(url);\n@@ -75,8 +75,9 @@ public class DirectDisplayController implements DisplayController {\n         DirectConfigProxy directConfigProxy = objectFactory.getDirectConfigProxy();\n         if (directConfigProxy != null) {\n             return objectFactory.getDirectConfigProxy().pingDirectConfig(url);\n-        }\n+\n+    }\n         return false;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/48/DirectDisplayController.java\nindex 1a38fa1bbc5..aa0df32e5d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/48/DirectDisplayController.java\n@@ -37,16 +37,19 @@ import org.apache.log4j.Logger;\n  *\n  * @author jsmith\n  */\n+\n+\n public class DirectDisplayController implements DisplayController {\n \n     private final WebServiceProxyHelper oProxyHelper = new WebServiceProxyHelper();\n-\n     private static final Logger LOG = Logger.getLogger(DirectDisplayController.class);\n \n     /**\n      * Determines if direct is currently enabled and therefore direct pages can\n      * be displayed in the Admin GUI.\n      */\n+\n+\n     @Override\n     public void checkDisplay() {\n         DisplayHolder.getInstance().setDirectEnabled(directConfigEnabled());\n@@ -55,18 +58,19 @@ public class DirectDisplayController implements DisplayController {\n     private boolean directConfigEnabled() {\n         boolean result;\n         try {\n-            String url = oProxyHelper\n-                    .getAdapterEndPointFromConnectionManager(DirectConfigConstants.DIRECT_CONFIG_SERVICE_NAME);\n-            if (NullChecker.isNullish(url)) {\n+            String url = oProxyHelper.getAdapterEndPointFromConnectionManager(DirectConfigConstants.DIRECT_CONFIG_SERVICE_NAME);\n+            if(NullChecker.isNullish(url)) {\n                 result = false;\n-            } else {\n+            }\n+\n+\n+else {\n                 result = pingDirectConfig(url);\n             }\n         } catch (Exception ex) {\n             result = false;\n             LOG.error(ex.getLocalizedMessage(), ex);\n         }\n-\n         return result;\n     }\n \n@@ -79,4 +83,4 @@ public class DirectDisplayController implements DisplayController {\n         return false;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/48/DirectDisplayController.java\nindex 1a38fa1bbc5..f58d41dbd91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/48/DirectDisplayController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/48/DirectDisplayController.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.admingui.display;\n-\n import gov.hhs.fha.nhinc.admingui.proxy.AdminGUIProxyObjectFactory;\n import gov.hhs.fha.nhinc.admingui.proxy.DirectConfigConstants;\n import gov.hhs.fha.nhinc.admingui.proxy.DirectConfigProxy;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
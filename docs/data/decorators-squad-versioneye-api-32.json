{
    "project_name": "decorators-squad-versioneye-api",
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "87",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        final List<Project> fetched = projects.fetch();\n        MatcherAssert.assertThat(fetched.size(), Matchers.greaterThan(0));\n        for(int idx = 0; idx < fetched.size(); idx++) {\n            MatcherAssert.assertThat(\n                fetched.get(idx).organization().name(),\n                Matchers.equalTo(\"amihaiemil_orga\")",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler/32/RtProjectsTestCase.java\nindex ef5135c5a99..92ebe7c6796 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler/32/RtProjectsTestCase.java\n@@ -84,7 +84,7 @@ public final class RtProjectsTestCase {\n         );\n         final List<Project> fetched = projects.fetch();\n         MatcherAssert.assertThat(fetched.size(), Matchers.greaterThan(0));\n-        for(int idx = 0; idx < fetched.size(); idx++) {\n+        for (int idx = 0; idx < fetched.size(); idx++) {\n             MatcherAssert.assertThat(\n                 fetched.get(idx).organization().name(),\n                 Matchers.equalTo(\"amihaiemil_orga\")\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/32/RtProjectsTestCase.java\nindex ef5135c5a99..a0ff6b1ead5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/32/RtProjectsTestCase.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2017, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.versioneye;\n \n import java.io.File;\n@@ -54,7 +55,7 @@ import com.jcabi.http.request.JdkRequest;\n  */\n @SuppressWarnings(\"resource\")\n public final class RtProjectsTestCase {\n-    \n+\n     /**\n      * RtProjects can fetch a team's projects.\n      * @throws IOException If something goes wrong with the HTTP call.\n@@ -70,7 +71,7 @@ public final class RtProjectsTestCase {\n \n         final RtVersionEye versionEye =\n             new RtVersionEye(new JdkRequest(container.home()));\n-        \n+\n         final Organization fakeOrga = Mockito.mock(Organization.class);\n         Mockito.when(fakeOrga.name()).thenReturn(\"amihaiemil_orga\");\n         Mockito.when(fakeOrga.apiKey()).thenReturn(\"123orgakey\");\n@@ -78,13 +79,13 @@ public final class RtProjectsTestCase {\n         final Team fakeTeam = Mockito.mock(Team.class);\n         Mockito.when(fakeTeam.name()).thenReturn(\"FakeTeam\");\n         Mockito.when(fakeTeam.organization()).thenReturn(fakeOrga);\n-        \n+\n         final Projects projects = new RtProjects(\n             versionEye, fakeTeam\n         );\n         final List<Project> fetched = projects.fetch();\n         MatcherAssert.assertThat(fetched.size(), Matchers.greaterThan(0));\n-        for(int idx = 0; idx < fetched.size(); idx++) {\n+        for (int idx = 0; idx < fetched.size(); idx++) {\n             MatcherAssert.assertThat(\n                 fetched.get(idx).organization().name(),\n                 Matchers.equalTo(\"amihaiemil_orga\")\n@@ -95,7 +96,7 @@ public final class RtProjectsTestCase {\n             );\n         }\n     }\n-    \n+\n     /**\n      * RtProjects knows to which team the projects belong.\n      * @throws IOException If something goes wrong with the HTTP call.\n@@ -109,7 +110,7 @@ public final class RtProjectsTestCase {\n         final Team fakeTeam = Mockito.mock(Team.class);\n         Mockito.when(fakeTeam.name()).thenReturn(\"FakeTeam\");\n         Mockito.when(fakeTeam.organization()).thenReturn(fakeOrga);\n-        \n+\n         final Projects projects = new RtProjects(\n             new RtVersionEye(), fakeTeam\n         );\n@@ -118,7 +119,7 @@ public final class RtProjectsTestCase {\n             Matchers.equalTo(fakeTeam.name())\n         );\n     }\n-    \n+\n     /**\n      * Read resource for test.\n      * @param resourceName Name of the file being read.\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 112.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/32/RtProjectsTestCase.java\nindex ef5135c5a99..8c5902f2dd8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/32/RtProjectsTestCase.java\n@@ -61,15 +61,10 @@ public final class RtProjectsTestCase {\n      */\n     @Test\n     public void fetchesTeamsProjects() throws IOException {\n-        final MkContainer container = new MkGrizzlyContainer().next(\n-            new MkAnswer.Simple(\n-                HttpURLConnection.HTTP_OK,\n-                this.readResource(\"projects.json\")\n-            )\n-        ).start();\n+        final MkContainer container = new MkGrizzlyContainer().next(new MkAnswer.Simple(HttpURLConnection.HTTP_OK,\n+                this.readResource(\"projects.json\"))).start();\n \n-        final RtVersionEye versionEye =\n-            new RtVersionEye(new JdkRequest(container.home()));\n+        final RtVersionEye versionEye = new RtVersionEye(new JdkRequest(container.home()));\n         \n         final Organization fakeOrga = Mockito.mock(Organization.class);\n         Mockito.when(fakeOrga.name()).thenReturn(\"amihaiemil_orga\");\n@@ -78,22 +73,16 @@ public final class RtProjectsTestCase {\n         final Team fakeTeam = Mockito.mock(Team.class);\n         Mockito.when(fakeTeam.name()).thenReturn(\"FakeTeam\");\n         Mockito.when(fakeTeam.organization()).thenReturn(fakeOrga);\n-        \n-        final Projects projects = new RtProjects(\n-            versionEye, fakeTeam\n-        );\n+final Projects projects = new RtProjects(versionEye, fakeTeam);\n         final List<Project> fetched = projects.fetch();\n         MatcherAssert.assertThat(fetched.size(), Matchers.greaterThan(0));\n         for(int idx = 0; idx < fetched.size(); idx++) {\n-            MatcherAssert.assertThat(\n-                fetched.get(idx).organization().name(),\n-                Matchers.equalTo(\"amihaiemil_orga\")\n-            );\n-            MatcherAssert.assertThat(\n-                fetched.get(idx).team().name(),\n-                Matchers.equalTo(fakeTeam.name())\n-            );\n+            MatcherAssert.assertThat(fetched.get(idx).organization().name(),\n+                Matchers.equalTo(\"amihaiemil_orga\"));\n+            MatcherAssert.assertThat(fetched.get(idx).team().name(),\n+                Matchers.equalTo(fakeTeam.name()));\n         }\n+\n     }\n     \n     /**\n@@ -109,14 +98,9 @@ public final class RtProjectsTestCase {\n         final Team fakeTeam = Mockito.mock(Team.class);\n         Mockito.when(fakeTeam.name()).thenReturn(\"FakeTeam\");\n         Mockito.when(fakeTeam.organization()).thenReturn(fakeOrga);\n-        \n-        final Projects projects = new RtProjects(\n-            new RtVersionEye(), fakeTeam\n-        );\n-        MatcherAssert.assertThat(\n-            projects.team().name(),\n-            Matchers.equalTo(fakeTeam.name())\n-        );\n+final Projects projects = new RtProjects(new RtVersionEye(), fakeTeam);\n+        MatcherAssert.assertThat(projects.team().name(),\n+            Matchers.equalTo(fakeTeam.name()));\n     }\n     \n     /**\n@@ -125,10 +109,9 @@ public final class RtProjectsTestCase {\n      * @return String content of the resource file.\n      * @throws IOException If it goes wrong.\n      */\n-    private String readResource(final String resourceName) throws IOException {\n-        final InputStream stream = new FileInputStream(\n-            new File(\"src/test/resources/\" + resourceName)\n-        );\n+private String readResource(final String resourceName) throws IOException {\n+        final InputStream stream = new FileInputStream(new File(\"src/test/resources/\" + resourceName));\n         return new String(IOUtils.toByteArray(stream));\n     }\n-}\n+\n+    }\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "column": "11",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "87",
                    "column": "13",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "column": "4",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'0' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "2",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/32/RtProjectsTestCase.java\nindex ef5135c5a99..71ed6ee2c65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/32/RtProjectsTestCase.java\n@@ -33,13 +33,11 @@ import java.io.IOException;\n import java.io.InputStream;\n import java.net.HttpURLConnection;\n import java.util.List;\n-\n import org.apache.commons.io.IOUtils;\n import org.hamcrest.MatcherAssert;\n import org.hamcrest.Matchers;\n import org.junit.Test;\n import org.mockito.Mockito;\n-\n import com.jcabi.http.mock.MkAnswer;\n import com.jcabi.http.mock.MkContainer;\n import com.jcabi.http.mock.MkGrizzlyContainer;\n@@ -52,71 +50,89 @@ import com.jcabi.http.request.JdkRequest;\n  * @since 1.0.0\n  *\n  */\n-@SuppressWarnings(\"resource\")\n-public final class RtProjectsTestCase {\n+\n+\n+@ SuppressWarnings(\"resource\")public final class RtProjectsTestCase {\n     \n     /**\n      * RtProjects can fetch a team's projects.\n      * @throws IOException If something goes wrong with the HTTP call.\n      */\n+\n+\n     @Test\n     public void fetchesTeamsProjects() throws IOException {\n-        final MkContainer container = new MkGrizzlyContainer().next(\n-            new MkAnswer.Simple(\n-                HttpURLConnection.HTTP_OK,\n-                this.readResource(\"projects.json\")\n-            )\n-        ).start();\n-\n-        final RtVersionEye versionEye =\n-            new RtVersionEye(new JdkRequest(container.home()));\n-        \n-        final Organization fakeOrga = Mockito.mock(Organization.class);\n-        Mockito.when(fakeOrga.name()).thenReturn(\"amihaiemil_orga\");\n-        Mockito.when(fakeOrga.apiKey()).thenReturn(\"123orgakey\");\n-\n-        final Team fakeTeam = Mockito.mock(Team.class);\n-        Mockito.when(fakeTeam.name()).thenReturn(\"FakeTeam\");\n-        Mockito.when(fakeTeam.organization()).thenReturn(fakeOrga);\n-        \n-        final Projects projects = new RtProjects(\n-            versionEye, fakeTeam\n-        );\n-        final List<Project> fetched = projects.fetch();\n-        MatcherAssert.assertThat(fetched.size(), Matchers.greaterThan(0));\n-        for(int idx = 0; idx < fetched.size(); idx++) {\n-            MatcherAssert.assertThat(\n-                fetched.get(idx).organization().name(),\n-                Matchers.equalTo(\"amihaiemil_orga\")\n-            );\n-            MatcherAssert.assertThat(\n-                fetched.get(idx).team().name(),\n-                Matchers.equalTo(fakeTeam.name())\n-            );\n-        }\n+        final MkContainer container=\n+new MkGrizzlyContainer()\n+    .next(new MkAnswer.Simple(HttpURLConnection.HTTP_OK, this.readResource(\"projects.json\")))\n+.start();\n+final RtVersionEye versionEye=\n+new RtVersionEye(new JdkRequest(container.home()));\n+final Organization fakeOrga= Mockito.mock(Organization.class);\n+\n+\n+Mockito.when(fakeOrga.name()).thenReturn(\"amihaiemil_orga\");\n+\n+\n+Mockito.when(fakeOrga.apiKey()).thenReturn(\"123orgakey\");\n+final Team fakeTeam= Mockito.mock(Team.class);\n+\n+\n+Mockito.when(fakeTeam.name()).thenReturn(\"FakeTeam\");\n+\n+\n+Mockito.when(fakeTeam.organization()).thenReturn(fakeOrga);\n+final Projects projects=\n+new RtProjects(versionEye, fakeTeam);\n+final List < Project> fetched= projects.fetch();\n+\n+\n+MatcherAssert.assertThat(fetched.size(), Matchers.greaterThan(0));\n+\n+\n+for(int idx=\n+0 ;\n+\n+\n+idx< fetched.size();\n+\n+\n+                  idx++) {\n+MatcherAssert.assertThat(fetched.get(idx).organization()\n+.name(), Matchers.equalTo(\"amihaiemil_orga\"));\n+\n+\n+MatcherAssert.assertThat(fetched.get(idx).team()\n+.name(), Matchers.equalTo(fakeTeam.name()));\n+}\n     }\n     \n     /**\n      * RtProjects knows to which team the projects belong.\n      * @throws IOException If something goes wrong with the HTTP call.\n      */\n+\n     @Test\n     public void knowsTeam() throws IOException {\n-        final Organization fakeOrga = Mockito.mock(Organization.class);\n-        Mockito.when(fakeOrga.name()).thenReturn(\"amihaiemil_orga\");\n-        Mockito.when(fakeOrga.apiKey()).thenReturn(\"123orgakey\");\n-\n-        final Team fakeTeam = Mockito.mock(Team.class);\n-        Mockito.when(fakeTeam.name()).thenReturn(\"FakeTeam\");\n-        Mockito.when(fakeTeam.organization()).thenReturn(fakeOrga);\n-        \n-        final Projects projects = new RtProjects(\n-            new RtVersionEye(), fakeTeam\n-        );\n-        MatcherAssert.assertThat(\n-            projects.team().name(),\n-            Matchers.equalTo(fakeTeam.name())\n-        );\n+        final Organization fakeOrga= Mockito.mock(Organization.class);\n+\n+\n+Mockito.when(fakeOrga.name()).thenReturn(\"amihaiemil_orga\");\n+\n+\n+Mockito.when(fakeOrga.apiKey()).thenReturn(\"123orgakey\");\n+final Team fakeTeam= Mockito.mock(Team.class);\n+\n+\n+Mockito.when(fakeTeam.name()).thenReturn(\"FakeTeam\");\n+\n+\n+Mockito.when(fakeTeam.organization()).thenReturn(fakeOrga);\n+final Projects projects=\n+new RtProjects(new RtVersionEye(), fakeTeam);\n+\n+\n+MatcherAssert.assertThat(projects.team().name(), Matchers.equalTo(fakeTeam.name()));\n     }\n     \n     /**\n@@ -125,10 +141,14 @@ public final class RtProjectsTestCase {\n      * @return String content of the resource file.\n      * @throws IOException If it goes wrong.\n      */\n+\n+\n     private String readResource(final String resourceName) throws IOException {\n-        final InputStream stream = new FileInputStream(\n-            new File(\"src/test/resources/\" + resourceName)\n-        );\n-        return new String(IOUtils.toByteArray(stream));\n+        final InputStream stream=\n+new FileInputStream(new File(\"src/test/resources/\"+ resourceName));\n+\n+\n+return new String(IOUtils.toByteArray(stream));\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 79
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler_random/32/RtProjectsTestCase.java\nindex ef5135c5a99..92ebe7c6796 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/32/RtProjectsTestCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler_random/32/RtProjectsTestCase.java\n@@ -84,7 +84,7 @@ public final class RtProjectsTestCase {\n         );\n         final List<Project> fetched = projects.fetch();\n         MatcherAssert.assertThat(fetched.size(), Matchers.greaterThan(0));\n-        for(int idx = 0; idx < fetched.size(); idx++) {\n+        for (int idx = 0; idx < fetched.size(); idx++) {\n             MatcherAssert.assertThat(\n                 fetched.get(idx).organization().name(),\n                 Matchers.equalTo(\"amihaiemil_orga\")\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
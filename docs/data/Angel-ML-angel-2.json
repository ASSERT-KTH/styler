{
    "project_name": "Angel-ML-angel",
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "22",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 117).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n\n  public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order,\n                                             int partDim, int window) {\n    if (ServerWrapper.maxIndex == -1) {\n      numInputs = new int[numPartitions];",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/2/ServerWrapper.java\nindex 97fcffd025c..5b6cf501cba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/2/ServerWrapper.java\n@@ -20,7 +20,7 @@ public class ServerWrapper {\n \n \n   public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order,\n-                                             int partDim, int window) {\n+  int partDim, int window) {\n     if (ServerWrapper.maxIndex == -1) {\n       numInputs = new int[numPartitions];\n       numOutputs = new int[numPartitions];\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/2/ServerWrapper.java\nindex 97fcffd025c..910ace0a8ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/2/ServerWrapper.java\n@@ -19,7 +19,8 @@ public class ServerWrapper {\n   private static int[] numOutputs;\n \n \n-  public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order,\n+  public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength,\n+                                             int negative, int order,\n                                              int partDim, int window) {\n     if (ServerWrapper.maxIndex == -1) {\n       numInputs = new int[numPartitions];\n@@ -41,13 +42,21 @@ public class ServerWrapper {\n     return maxLength;\n   }\n \n-  public static int getNegative() {return negative; }\n+  public static int getNegative() {\n+    return negative;\n+  }\n \n-  public static int getOrder() {return order; }\n+  public static int getOrder() {\n+    return order;\n+  }\n \n-  public static int getPartDim() {return partDim; }\n+  public static int getPartDim() {\n+    return partDim;\n+  }\n \n-  public static int getWindow() {return window; }\n+  public static int getWindow() {\n+    return window;\n+  }\n \n   public static void setNumInputs(int partitionId, int num) {\n     numInputs[partitionId] = num;\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/2/ServerWrapper.java\nindex 97fcffd025c..4ad97b9db2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/2/ServerWrapper.java\n@@ -19,9 +19,8 @@ public class ServerWrapper {\n   private static int[] numOutputs;\n \n \n-  public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order,\n-                                             int partDim, int window) {\n-    if (ServerWrapper.maxIndex == -1) {\n+  public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order, int partDim, int window) {\n+  if (ServerWrapper.maxIndex == -1) {\n       numInputs = new int[numPartitions];\n       numOutputs = new int[numPartitions];\n       ServerWrapper.maxIndex = maxIndex;\n@@ -41,13 +40,21 @@ public class ServerWrapper {\n     return maxLength;\n   }\n \n-  public static int getNegative() {return negative; }\n+  public static int getNegative() {\n+  return negative;\n+  }\n \n-  public static int getOrder() {return order; }\n+  public static int getOrder() {\n+  return order;\n+  }\n \n-  public static int getPartDim() {return partDim; }\n+  public static int getPartDim() {\n+  return partDim;\n+  }\n \n-  public static int getWindow() {return window; }\n+  public static int getWindow() {\n+  return window;\n+  }\n \n   public static void setNumInputs(int partitionId, int num) {\n     numInputs[partitionId] = num;\n@@ -65,4 +72,4 @@ public class ServerWrapper {\n     return numOutputs[partitionId];\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/2/ServerWrapper.java\nindex 97fcffd025c..ab52d83f300 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/2/ServerWrapper.java\n@@ -4,23 +4,23 @@ package com.tencent.angel.spark.ml.psf.embedding;\n /**\n  * This class wraps some data structure that required to be maintained at server.\n  */\n+\n+\n+\n public class ServerWrapper {\n \n   // @maxIndex: this variable contains the max index of node/word\n-  private static volatile int maxIndex = -1;\n \n+  private static volatile int maxIndex = -1;\n   private static volatile int maxLength = -1;\n   private static volatile int negative = -1;\n   private static volatile int order = -1;\n   private static volatile int partDim = -1;\n   private static volatile int window = -1;\n-\n   private static int[] numInputs;\n   private static int[] numOutputs;\n \n-\n-  public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order,\n-                                             int partDim, int window) {\n+  public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order, int partDim, int window) {\n     if (ServerWrapper.maxIndex == -1) {\n       numInputs = new int[numPartitions];\n       numOutputs = new int[numPartitions];\n@@ -41,13 +41,21 @@ public class ServerWrapper {\n     return maxLength;\n   }\n \n-  public static int getNegative() {return negative; }\n+  public static int getNegative() {\n+    return negative;\n+  }\n \n-  public static int getOrder() {return order; }\n+  public static int getOrder() {\n+    return order;\n+  }\n \n-  public static int getPartDim() {return partDim; }\n+  public static int getPartDim() {\n+    return partDim;\n+  }\n \n-  public static int getWindow() {return window; }\n+  public static int getWindow() {\n+    return window;\n+  }\n \n   public static void setNumInputs(int partitionId, int num) {\n     numInputs[partitionId] = num;\n@@ -65,4 +73,4 @@ public class ServerWrapper {\n     return numOutputs[partitionId];\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/2/ServerWrapper.java\nindex 97fcffd025c..5b6cf501cba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/2/ServerWrapper.java\n@@ -20,7 +20,7 @@ public class ServerWrapper {\n \n \n   public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order,\n-                                             int partDim, int window) {\n+  int partDim, int window) {\n     if (ServerWrapper.maxIndex == -1) {\n       numInputs = new int[numPartitions];\n       numOutputs = new int[numPartitions];\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/2/ServerWrapper.java\nindex 97fcffd025c..f57ed59af42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/2/ServerWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/2/ServerWrapper.java\n@@ -16,10 +16,7 @@ public class ServerWrapper {\n   private static volatile int window = -1;\n \n   private static int[] numInputs;\n-  private static int[] numOutputs;\n-\n-\n-  public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order,\n+  private static int[] numOutputs;public static synchronized void initialize(int numPartitions, int maxIndex, int maxLength, int negative, int order,\n                                              int partDim, int window) {\n     if (ServerWrapper.maxIndex == -1) {\n       numInputs = new int[numPartitions];\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
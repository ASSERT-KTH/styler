{
    "project_name": "Activiti-Activiti",
    "error_id": "313",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.impl;\n\nimport org.activiti.api.process.model.payloads.SignalPayload;\nimport org.activiti.engine.RuntimeService;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/313/RuntimeSignalPayloadEventListener.java\nindex fa424a572cc..8edcf528b1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/313/RuntimeSignalPayloadEventListener.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import org.activiti.api.process.model.payloads.SignalPayload;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/313/RuntimeSignalPayloadEventListener.java\nindex fa424a572cc..3fba6620c43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/313/RuntimeSignalPayloadEventListener.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import org.activiti.api.process.model.payloads.SignalPayload;\n@@ -23,7 +24,6 @@ import org.springframework.context.event.EventListener;\n /**\n  * Default implementation of SignalPayloadEventListener that delegates\n  * Spring SignalPayload event into embedded RuntimeService.\n- *\n  */\n public class RuntimeSignalPayloadEventListener implements SignalPayloadEventListener {\n \n@@ -37,7 +37,7 @@ public class RuntimeSignalPayloadEventListener implements SignalPayloadEventList\n     @EventListener\n     public void sendSignal(SignalPayload signalPayload) {\n         runtimeService.signalEventReceived(signalPayload.getName(),\n-                                           signalPayload.getVariables());\n+                signalPayload.getVariables());\n     }\n \n }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/313/RuntimeSignalPayloadEventListener.java\nindex fa424a572cc..ffacf8030f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/313/RuntimeSignalPayloadEventListener.java\n@@ -25,19 +25,20 @@ import org.springframework.context.event.EventListener;\n  * Spring SignalPayload event into embedded RuntimeService.\n  *\n  */\n-public class RuntimeSignalPayloadEventListener implements SignalPayloadEventListener {\n \n-    private final RuntimeService runtimeService;\n \n-    public RuntimeSignalPayloadEventListener(RuntimeService runtimeService) {\n-        this.runtimeService = runtimeService;\n-    }\n+public class RuntimeSignalPayloadEventListener implements SignalPayloadEventListener {\n+\n+  private final RuntimeService runtimeService;\n \n-    @Override\n-    @EventListener\n-    public void sendSignal(SignalPayload signalPayload) {\n-        runtimeService.signalEventReceived(signalPayload.getName(),\n-                                           signalPayload.getVariables());\n-    }\n+  public RuntimeSignalPayloadEventListener(RuntimeService runtimeService) {\n+    this.runtimeService = runtimeService;\n+  }\n \n-}\n+  @Override\n+  @EventListener\n+  public void sendSignal(SignalPayload signalPayload) {\n+    runtimeService.signalEventReceived(signalPayload.getName(),\n+                                       signalPayload.getVariables());\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/313/RuntimeSignalPayloadEventListener.java\nindex fa424a572cc..8edcf528b1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/313/RuntimeSignalPayloadEventListener.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import org.activiti.api.process.model.payloads.SignalPayload;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/313/RuntimeSignalPayloadEventListener.java\nindex fa424a572cc..8edcf528b1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/313/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/313/RuntimeSignalPayloadEventListener.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import org.activiti.api.process.model.payloads.SignalPayload;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
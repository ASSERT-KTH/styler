{
    "project_name": "self-xdsd-self-core",
    "error_id": "49",
    "information": {
        "errors": [
            {
                "line": "57",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        final String bitbucketUriStr = bitbucketUri.toString();\n        String slash = \"/\";\n        if(bitbucketUriStr.endsWith(\"/\")){\n            slash = \"\";\n        }\n        this.uri = URI.create(bitbucketUriStr + slash + \"teams\");",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/49/BitbucketOrganizations.java\nindex eb02f2a5c21..7b9131da37f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/49/BitbucketOrganizations.java\n@@ -54,7 +54,7 @@ public final class BitbucketOrganizations implements Organizations {\n                         final Storage storage) {\n         final String bitbucketUriStr = bitbucketUri.toString();\n         String slash = \"/\";\n-        if(bitbucketUriStr.endsWith(\"/\")){\n+        if (bitbucketUriStr.endsWith(\"/\")){\n             slash = \"\";\n         }\n         this.uri = URI.create(bitbucketUriStr + slash + \"teams\");\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/49/BitbucketOrganizations.java\nindex eb02f2a5c21..8e78e868b7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/49/BitbucketOrganizations.java\n@@ -43,18 +43,18 @@ public final class BitbucketOrganizations implements Organizations {\n     /**\n      * Ctor.\n      *\n-     * @param resources Bitbucket's JSON Resources.\n+     * @param resources    Bitbucket's JSON Resources.\n      * @param bitbucketUri Bitbucket's base API Uri..\n-     * @param owner Current authenticated User.\n-     * @param storage Storage used by Organization Repos.\n+     * @param owner        Current authenticated User.\n+     * @param storage      Storage used by Organization Repos.\n      */\n     BitbucketOrganizations(final JsonResources resources,\n-                        final URI bitbucketUri,\n-                        final User owner,\n-                        final Storage storage) {\n+                           final URI bitbucketUri,\n+                           final User owner,\n+                           final Storage storage) {\n         final String bitbucketUriStr = bitbucketUri.toString();\n         String slash = \"/\";\n-        if(bitbucketUriStr.endsWith(\"/\")){\n+        if (bitbucketUriStr.endsWith(\"/\")) {\n             slash = \"\";\n         }\n         this.uri = URI.create(bitbucketUriStr + slash + \"teams\");\n@@ -74,19 +74,19 @@ public final class BitbucketOrganizations implements Organizations {\n                 break;\n             case HttpURLConnection.HTTP_UNAUTHORIZED:\n                 throw new IllegalStateException(\"Current User is \"\n-                        + \"not authenticated.\");\n+                    + \"not authenticated.\");\n             default:\n                 throw new IllegalStateException(\"Unable to fetch Bitbucket \"\n-                        + \"organizations for current User. Expected 200 OK, \"\n-                        + \"but got: \" + statusCode);\n+                    + \"organizations for current User. Expected 200 OK, \"\n+                    + \"but got: \" + statusCode);\n         }\n         return organizations\n-                .stream()\n-                .map(o -> (Organization) new BitbucketOrganization(\n-                        this.owner,\n-                        (JsonObject) o,\n-                        this.resources,\n-                        this.storage))\n-                .iterator();\n+            .stream()\n+            .map(o -> (Organization) new BitbucketOrganization(\n+                this.owner,\n+                (JsonObject) o,\n+                this.resources,\n+                this.storage))\n+            .iterator();\n     }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'switch rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/49/BitbucketOrganizations.java\nindex eb02f2a5c21..a4327a336d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/49/BitbucketOrganizations.java\n@@ -52,9 +52,9 @@ public final class BitbucketOrganizations implements Organizations {\n                         final URI bitbucketUri,\n                         final User owner,\n                         final Storage storage) {\n-        final String bitbucketUriStr = bitbucketUri.toString();\n+    final String bitbucketUriStr = bitbucketUri.toString();\n         String slash = \"/\";\n-        if(bitbucketUriStr.endsWith(\"/\")){\n+        if (bitbucketUriStr.endsWith(\"/\")){\n             slash = \"\";\n         }\n         this.uri = URI.create(bitbucketUriStr + slash + \"teams\");\n@@ -79,14 +79,12 @@ public final class BitbucketOrganizations implements Organizations {\n                 throw new IllegalStateException(\"Unable to fetch Bitbucket \"\n                         + \"organizations for current User. Expected 200 OK, \"\n                         + \"but got: \" + statusCode);\n-        }\n-        return organizations\n-                .stream()\n+    }\n+        return organizations.stream()\n                 .map(o -> (Organization) new BitbucketOrganization(\n-                        this.owner,\n-                        (JsonObject) o,\n+                        this.owner, (JsonObject) o,\n                         this.resources,\n                         this.storage))\n-                .iterator();\n+.iterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 27, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 27, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 27, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 27, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 27, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 88).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/49/BitbucketOrganizations.java\nindex eb02f2a5c21..a57e21162ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/49/BitbucketOrganizations.java\n@@ -4,7 +4,6 @@ import com.selfxdsd.api.Organization;\n import com.selfxdsd.api.Organizations;\n import com.selfxdsd.api.User;\n import com.selfxdsd.api.storage.Storage;\n-\n import javax.json.JsonArray;\n import javax.json.JsonObject;\n import java.net.HttpURLConnection;\n@@ -18,26 +17,36 @@ import java.util.Iterator;\n  * @version $Id$\n  * @since 0.0.64\n  */\n+\n+\n public final class BitbucketOrganizations implements Organizations {\n \n     /**\n      * Bitbucket's JSON Resources.\n      */\n+\n+\n     private final JsonResources resources;\n \n     /**\n      * Organizations URI.\n      */\n+\n+\n     private final URI uri;\n \n     /**\n      * Current authenticated User.\n      */\n+\n+\n     private final User owner;\n \n     /**\n      * Storage used by Organization Repos.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -48,13 +57,17 @@ public final class BitbucketOrganizations implements Organizations {\n      * @param owner Current authenticated User.\n      * @param storage Storage used by Organization Repos.\n      */\n-    BitbucketOrganizations(final JsonResources resources,\n-                        final URI bitbucketUri,\n-                        final User owner,\n-                        final Storage storage) {\n+\n+\n+    BitbucketOrganizations(\n+        final JsonResources resources,\n+        final URI bitbucketUri,\n+        final User owner,\n+        final Storage storage\n+    ) {\n         final String bitbucketUriStr = bitbucketUri.toString();\n         String slash = \"/\";\n-        if(bitbucketUriStr.endsWith(\"/\")){\n+        if (bitbucketUriStr.endsWith(\"/\")) {\n             slash = \"\";\n         }\n         this.uri = URI.create(bitbucketUriStr + slash + \"teams\");\n@@ -68,25 +81,24 @@ public final class BitbucketOrganizations implements Organizations {\n         final Resource resource = this.resources.get(this.uri);\n         final JsonArray organizations;\n         final int statusCode = resource.statusCode();\n-        switch (statusCode) {\n-            case HttpURLConnection.HTTP_OK:\n-                organizations = resource.asJsonArray();\n-                break;\n-            case HttpURLConnection.HTTP_UNAUTHORIZED:\n-                throw new IllegalStateException(\"Current User is \"\n-                        + \"not authenticated.\");\n-            default:\n-                throw new IllegalStateException(\"Unable to fetch Bitbucket \"\n-                        + \"organizations for current User. Expected 200 OK, \"\n-                        + \"but got: \" + statusCode);\n+        switch(statusCode) {\n+                           case HttpURLConnection.HTTP_OK:\n+                           organizations = resource.asJsonArray();\n+                           break;\n+                           case HttpURLConnection.HTTP_UNAUTHORIZED:\n+            throw new IllegalStateException(\"Current User is \"\n+                                                + \"not authenticated.\");\n+                           default:\n+            throw new IllegalStateException(\"Unable to fetch Bitbucket \"\n+                + \"organizations for current User. Expected 200 OK, \"\n+                                                + \"but got: \"\n++ statusCode);\n         }\n-        return organizations\n-                .stream()\n-                .map(o -> (Organization) new BitbucketOrganization(\n-                        this.owner,\n-                        (JsonObject) o,\n-                        this.resources,\n-                        this.storage))\n-                .iterator();\n+        return organizations.stream().map(o -> (Organization) new BitbucketOrganization(\n+                                                   this.owner,\n+                                                   (JsonObject) o,\n+                                                   this.resources,\n+                                                   this.storage\n+                                               )).iterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/49/BitbucketOrganizations.java\nindex eb02f2a5c21..7b9131da37f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/49/BitbucketOrganizations.java\n@@ -54,7 +54,7 @@ public final class BitbucketOrganizations implements Organizations {\n                         final Storage storage) {\n         final String bitbucketUriStr = bitbucketUri.toString();\n         String slash = \"/\";\n-        if(bitbucketUriStr.endsWith(\"/\")){\n+        if (bitbucketUriStr.endsWith(\"/\")){\n             slash = \"\";\n         }\n         this.uri = URI.create(bitbucketUriStr + slash + \"teams\");\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/49/BitbucketOrganizations.java\nindex eb02f2a5c21..7b9131da37f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/49/BitbucketOrganizations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/49/BitbucketOrganizations.java\n@@ -54,7 +54,7 @@ public final class BitbucketOrganizations implements Organizations {\n                         final Storage storage) {\n         final String bitbucketUriStr = bitbucketUri.toString();\n         String slash = \"/\";\n-        if(bitbucketUriStr.endsWith(\"/\")){\n+        if (bitbucketUriStr.endsWith(\"/\")){\n             slash = \"\";\n         }\n         this.uri = URI.create(bitbucketUriStr + slash + \"teams\");\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
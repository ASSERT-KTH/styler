{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3205",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "191",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3205/Timeouts.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3205/Timeouts.java\nindex 5c5adcdece6..1f50dce9325 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3205/Timeouts.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3205/Timeouts.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.timeout;\n \n import java.util.ArrayList;\n@@ -36,168 +37,166 @@ import org.neo4j.cluster.com.message.MessageType;\n  */\n public class Timeouts implements MessageSource\n {\n-    private long now;\n+  private long now;\n+\n+  private MessageProcessor receiver;\n+  private TimeoutStrategy timeoutStrategy;\n \n-    private MessageProcessor receiver;\n-    private TimeoutStrategy timeoutStrategy;\n+  private Map<Object, Timeout> timeouts = new HashMap<>();\n+  private List<Map.Entry<Object, Timeout>> triggeredTimeouts = new ArrayList<>();\n \n-    private Map<Object, Timeout> timeouts = new HashMap<>();\n-    private List<Map.Entry<Object, Timeout>> triggeredTimeouts = new ArrayList<>();\n+  public Timeouts(TimeoutStrategy timeoutStrategy)\n+  {\n+    this.timeoutStrategy = timeoutStrategy;\n+  }\n \n-    public Timeouts( TimeoutStrategy timeoutStrategy )\n+  @Override\n+  public void addMessageProcessor(MessageProcessor messageProcessor)\n+  {\n+    if (receiver != null)\n     {\n-        this.timeoutStrategy = timeoutStrategy;\n+      throw new UnsupportedOperationException(\"Timeouts does not yet support multiple message processors\");\n     }\n-\n-    @Override\n-    public void addMessageProcessor( MessageProcessor messageProcessor )\n+    receiver = messageProcessor;\n+  }\n+\n+  /**\n+   * Add a new timeout to the list\n+   * If this is not cancelled it will trigger a message on the message processor\n+   *\n+   * @param key\n+   * @param timeoutMessage\n+   */\n+  public void setTimeout(Object key, Message<? extends MessageType> timeoutMessage)\n+  {\n+    long timeoutAt = now + timeoutStrategy.timeoutFor(timeoutMessage);\n+    timeouts.put(key, new Timeout(timeoutAt, timeoutMessage));\n+  }\n+\n+  public long getTimeoutFor(Message<? extends MessageType> timeoutMessage)\n+  {\n+    return timeoutStrategy.timeoutFor(timeoutMessage);\n+  }\n+\n+  /**\n+   * Cancel a timeout corresponding to a particular key. Use the same key\n+   * that was used to set it up.\n+   *\n+   * @param key\n+   */\n+  public Message<? extends MessageType> cancelTimeout(Object key)\n+  {\n+    Timeout timeout = timeouts.remove(key);\n+    if (timeout != null)\n     {\n-        if ( receiver != null )\n-        {\n-            throw new UnsupportedOperationException( \"Timeouts does not yet support multiple message processors\" );\n-        }\n-        receiver = messageProcessor;\n+      timeoutStrategy.timeoutCancelled(timeout.timeoutMessage);\n+      return timeout.getTimeoutMessage();\n     }\n-\n-    /**\n-     * Add a new timeout to the list\n-     * If this is not cancelled it will trigger a message on the message processor\n-     *\n-     * @param key\n-     * @param timeoutMessage\n-     */\n-    public void setTimeout( Object key, Message<? extends MessageType> timeoutMessage )\n+    return null;\n+  }\n+\n+  /**\n+   * Cancel all current timeouts. This is typically used when shutting down.\n+   */\n+  public void cancelAllTimeouts()\n+  {\n+    for (Timeout timeout : timeouts.values())\n     {\n-        long timeoutAt = now + timeoutStrategy.timeoutFor( timeoutMessage );\n-        timeouts.put( key, new Timeout( timeoutAt, timeoutMessage ) );\n+      timeoutStrategy.timeoutCancelled(timeout.getTimeoutMessage());\n     }\n-\n-    public long getTimeoutFor( Message<? extends MessageType> timeoutMessage )\n+    timeouts.clear();\n+  }\n+\n+  public Map<Object, Timeout> getTimeouts()\n+  {\n+    return timeouts;\n+  }\n+\n+  public Message<? extends MessageType> getTimeoutMessage(String timeoutName)\n+  {\n+    Timeout timeout = timeouts.get(timeoutName);\n+    if (timeout != null)\n+    {\n+      return timeout.getTimeoutMessage();\n+    } else\n     {\n-        return timeoutStrategy.timeoutFor( timeoutMessage );\n+      return null;\n     }\n+  }\n \n-    /**\n-     * Cancel a timeout corresponding to a particular key. Use the same key\n-     * that was used to set it up.\n-     *\n-     * @param key\n-     */\n-    public Message<? extends MessageType> cancelTimeout( Object key )\n+  public void tick(long time)\n+  {\n+    synchronized (this)\n     {\n-        Timeout timeout = timeouts.remove( key );\n-        if ( timeout != null )\n+      // Time has passed\n+      now = time;\n+\n+      timeoutStrategy.tick(now);\n+\n+      // Check if any timeouts needs to be triggered\n+      triggeredTimeouts.clear();\n+      for (Map.Entry<Object, Timeout> timeout : timeouts.entrySet())\n+      {\n+        if (timeout.getValue().checkTimeout(now))\n         {\n-            timeoutStrategy.timeoutCancelled( timeout.timeoutMessage );\n-            return timeout.getTimeoutMessage();\n+          triggeredTimeouts.add(timeout);\n         }\n-        return null;\n+      }\n+\n+      // Remove all timeouts that were triggered\n+      for (Map.Entry<Object, Timeout> triggeredTimeout : triggeredTimeouts)\n+      {\n+        timeouts.remove(triggeredTimeout.getKey());\n+      }\n     }\n \n-    /**\n-     * Cancel all current timeouts. This is typically used when shutting down.\n-     */\n-    public void cancelAllTimeouts()\n+    // Trigger timeouts\n+    // This needs to be done outside of the synchronized block as it will trigger a message\n+    // which will cause the statemachine to synchronize on Timeouts\n+    for (Map.Entry<Object, Timeout> triggeredTimeout : triggeredTimeouts)\n     {\n-        for ( Timeout timeout : timeouts.values() )\n-        {\n-            timeoutStrategy.timeoutCancelled( timeout.getTimeoutMessage() );\n-        }\n-        timeouts.clear();\n+      triggeredTimeout.getValue().trigger(receiver);\n     }\n+  }\n \n-    public Map<Object, Timeout> getTimeouts()\n+  public class Timeout\n+  {\n+    private long timeout;\n+    private Message<? extends MessageType> timeoutMessage;\n+\n+    public Timeout(long timeout, Message<? extends MessageType> timeoutMessage)\n     {\n-        return timeouts;\n+      this.timeout = timeout;\n+      this.timeoutMessage = timeoutMessage;\n     }\n \n-    public Message<? extends MessageType> getTimeoutMessage( String timeoutName )\n+    public Message<? extends MessageType> getTimeoutMessage()\n     {\n-        Timeout timeout = timeouts.get( timeoutName );\n-        if ( timeout != null )\n-        {\n-            return timeout.getTimeoutMessage();\n-        }\n-        else\n-        {\n-            return null;\n-        }\n+      return timeoutMessage;\n     }\n \n-    public void tick( long time )\n+    public boolean checkTimeout(long now)\n     {\n-        synchronized ( this )\n-        {\n-            // Time has passed\n-            now = time;\n-\n-            timeoutStrategy.tick( now );\n-\n-            // Check if any timeouts needs to be triggered\n-            triggeredTimeouts.clear();\n-            for ( Map.Entry<Object, Timeout> timeout : timeouts.entrySet() )\n-            {\n-                if ( timeout.getValue().checkTimeout( now ) )\n-                {\n-                    triggeredTimeouts.add( timeout );\n-                }\n-            }\n-\n-            // Remove all timeouts that were triggered\n-            for ( Map.Entry<Object, Timeout> triggeredTimeout : triggeredTimeouts )\n-            {\n-                timeouts.remove( triggeredTimeout.getKey() );\n-            }\n-        }\n-\n-        // Trigger timeouts\n-        // This needs to be done outside of the synchronized block as it will trigger a message\n-        // which will cause the statemachine to synchronize on Timeouts\n-        for ( Map.Entry<Object, Timeout> triggeredTimeout : triggeredTimeouts )\n-        {\n-            triggeredTimeout.getValue().trigger( receiver );\n-        }\n+      if (now >= timeout)\n+      {\n+        timeoutStrategy.timeoutTriggered(timeoutMessage);\n+\n+        return true;\n+      } else\n+      {\n+        return false;\n+      }\n     }\n \n-    public class Timeout\n+    public void trigger(MessageProcessor receiver)\n     {\n-        private long timeout;\n-        private Message<? extends MessageType> timeoutMessage;\n-\n-        public Timeout( long timeout, Message<? extends MessageType> timeoutMessage )\n-        {\n-            this.timeout = timeout;\n-            this.timeoutMessage = timeoutMessage;\n-        }\n-\n-        public Message<? extends MessageType> getTimeoutMessage()\n-        {\n-            return timeoutMessage;\n-        }\n-\n-        public boolean checkTimeout( long now )\n-        {\n-            if ( now >= timeout )\n-            {\n-                timeoutStrategy.timeoutTriggered( timeoutMessage );\n-\n-                return true;\n-            }\n-            else\n-            {\n-                return false;\n-            }\n-        }\n-\n-        public void trigger( MessageProcessor receiver )\n-        {\n-            receiver.process( timeoutMessage );\n-        }\n+      receiver.process(timeoutMessage);\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return timeout + \": \" + timeoutMessage;\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return timeout + \": \" + timeoutMessage;\n     }\n+  }\n }\n",
            "diff_size": 205
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3205/Timeouts.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3205/Timeouts.java\nindex 5c5adcdece6..446b103bced 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3205/Timeouts.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3205/Timeouts.java\n@@ -41,7 +41,7 @@ public class Timeouts implements MessageSource\n     private MessageProcessor receiver;\n     private TimeoutStrategy timeoutStrategy;\n \n-    private Map<Object, Timeout> timeouts = new HashMap<>();\n+    private Map<Object,Timeout> timeouts = new HashMap<>();\n     private List<Map.Entry<Object, Timeout>> triggeredTimeouts = new ArrayList<>();\n \n     public Timeouts( TimeoutStrategy timeoutStrategy )\n@@ -56,7 +56,8 @@ public class Timeouts implements MessageSource\n         {\n             throw new UnsupportedOperationException( \"Timeouts does not yet support multiple message processors\" );\n         }\n-        receiver = messageProcessor;\n+\n+receiver = messageProcessor;\n     }\n \n     /**\n@@ -106,7 +107,7 @@ public class Timeouts implements MessageSource\n         timeouts.clear();\n     }\n \n-    public Map<Object, Timeout> getTimeouts()\n+    public Map<Object,Timeout> getTimeouts()\n     {\n         return timeouts;\n     }\n@@ -135,7 +136,7 @@ public class Timeouts implements MessageSource\n \n             // Check if any timeouts needs to be triggered\n             triggeredTimeouts.clear();\n-            for ( Map.Entry<Object, Timeout> timeout : timeouts.entrySet() )\n+            for ( Map.Entry<Object,Timeout> timeout : timeouts.entrySet() )\n             {\n                 if ( timeout.getValue().checkTimeout( now ) )\n                 {\n@@ -144,7 +145,7 @@ public class Timeouts implements MessageSource\n             }\n \n             // Remove all timeouts that were triggered\n-            for ( Map.Entry<Object, Timeout> triggeredTimeout : triggeredTimeouts )\n+            for ( Map.Entry<Object,Timeout> triggeredTimeout : triggeredTimeouts )\n             {\n                 timeouts.remove( triggeredTimeout.getKey() );\n             }\n@@ -153,7 +154,7 @@ public class Timeouts implements MessageSource\n         // Trigger timeouts\n         // This needs to be done outside of the synchronized block as it will trigger a message\n         // which will cause the statemachine to synchronize on Timeouts\n-        for ( Map.Entry<Object, Timeout> triggeredTimeout : triggeredTimeouts )\n+        for ( Map.Entry<Object,Timeout> triggeredTimeout : triggeredTimeouts )\n         {\n             triggeredTimeout.getValue().trigger( receiver );\n         }\n@@ -180,8 +181,7 @@ public class Timeouts implements MessageSource\n             if ( now >= timeout )\n             {\n                 timeoutStrategy.timeoutTriggered( timeoutMessage );\n-\n-                return true;\n+return true;\n             }\n             else\n             {\n@@ -200,4 +200,4 @@ public class Timeouts implements MessageSource\n             return timeout + \": \" + timeoutMessage;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
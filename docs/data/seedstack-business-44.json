{
    "project_name": "seedstack-business",
    "error_id": "44",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.domain;\n\nimport static org.seedstack.business.internal.utils.FieldUtils.resolveField;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/44/SortOption.java\nindex d658753550d..93a800a4a52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/44/SortOption.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import static org.seedstack.business.internal.utils.FieldUtils.resolveField;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/44/SortOption.java\nindex d658753550d..93a800a4a52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/44/SortOption.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import static org.seedstack.business.internal.utils.FieldUtils.resolveField;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "125",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "column": "1",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "127",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "column": "36",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/44/SortOption.java\nindex d658753550d..dcdad8b8925 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/44/SortOption.java\n@@ -122,13 +122,12 @@ public class SortOption implements Repository.Option {\n             throw BusinessException.createNew(BusinessErrorCode.VALUE_CANNOT_BE_COMPARED)\n                     .put(\"value\", String.valueOf(o))\n                     .put(\"valueType\", o.getClass());\n-        }\n     }\n-\n-    private Object accessValue(Object o, String part) {\n+    }\n+private Object accessValue(Object o, String part) {\n         return resolveField(o.getClass(), part)\n                 .map(f -> FieldUtils.getFieldValue(o, f))\n-                .<BusinessException>orElseThrow(() -> BusinessException.createNew(BusinessErrorCode.UNRESOLVED_FIELD)\n+                .<BusinessException> orElseThrow(() -> BusinessException.createNew(BusinessErrorCode.UNRESOLVED_FIELD)\n                         .put(\"className\", o.getClass())\n                         .put(\"fieldName\", part));\n     }\n@@ -184,8 +183,7 @@ public class SortOption implements Repository.Option {\n             }\n             if (o == null || getClass() != o.getClass()) {\n                 return false;\n-            }\n-            SortedAttribute sortedAttribute = (SortedAttribute) o;\n+            } SortedAttribute sortedAttribute = (SortedAttribute) o;\n             return direction == sortedAttribute.direction && Objects.equals(attribute, sortedAttribute.attribute);\n         }\n \n@@ -194,4 +192,4 @@ public class SortOption implements Repository.Option {\n             return Objects.hash(direction, attribute);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "93",
                    "column": "27",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "column": "72",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 71, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "column": "76",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 75, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "column": "72",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 71, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "column": "76",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 75, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "column": "72",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 71, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "column": "68",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 67, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "column": "43",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "40",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "column": "40",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "column": "40",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "column": "40",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "116",
                    "column": "68",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 67, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "column": "68",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 67, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "column": "64",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "column": "40",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "column": "36",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 35, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "column": "19",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "143",
                    "column": "47",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "152",
                    "column": "27",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "152",
                    "column": "49",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "160",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 170.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "170",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "column": "4",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "column": "4",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 181.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "181",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 191.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "191",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "193",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "column": "4",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "198",
                    "column": "8",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 7, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "column": "18",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 17, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "column": "4",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "200",
                    "column": "16",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "200",
                    "column": "29",
                    "severity": "warning",
                    "message": "WhitespaceAround: '!=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "201",
                    "column": "8",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 7, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "202",
                    "column": "6",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "column": "49",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "205",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "209",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "210",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/44/SortOption.java\nindex d658753550d..12bc4494601 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/44/SortOption.java\n@@ -8,7 +8,6 @@\n package org.seedstack.business.domain;\n \n import static org.seedstack.business.internal.utils.FieldUtils.resolveField;\n-\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n@@ -21,7 +20,10 @@ import org.seedstack.business.internal.utils.FieldUtils;\n /**\n  * {@link Repository} option for sorting aggregates.\n  */\n+\n+\n public class SortOption implements Repository.Option {\n+\n     private static final String ATTRIBUTE_PATH_PATTERN = \"\\\\.\";\n     private final List<SortedAttribute> sortedAttributes = new ArrayList<>();\n     private final Direction defaultDirection;\n@@ -29,6 +31,7 @@ public class SortOption implements Repository.Option {\n     /**\n      * Creates an empty sort option with {@link Direction#ASCENDING} as default sort direction.\n      */\n+\n     public SortOption() {\n         this.defaultDirection = Direction.ASCENDING;\n     }\n@@ -38,6 +41,7 @@ public class SortOption implements Repository.Option {\n      *\n      * @param defaultDirection the default sort direction.\n      */\n+\n     public SortOption(Direction defaultDirection) {\n         this.defaultDirection = defaultDirection;\n     }\n@@ -48,6 +52,7 @@ public class SortOption implements Repository.Option {\n      * @param attribute the attribute to sort.\n      * @return the sort option itself.\n      */\n+\n     public SortOption add(String attribute) {\n         sortedAttributes.add(new SortedAttribute(attribute, defaultDirection));\n         return this;\n@@ -60,6 +65,7 @@ public class SortOption implements Repository.Option {\n      * @param direction the direction this attribute will be sorted with.\n      * @return the sort option itself.\n      */\n+\n     public SortOption add(String attribute, Direction direction) {\n         sortedAttributes.add(new SortedAttribute(attribute, direction));\n         return this;\n@@ -70,6 +76,7 @@ public class SortOption implements Repository.Option {\n      *\n      * @return the list of currently registered sorted attributes.\n      */\n+\n     public List<SortedAttribute> getSortedAttributes() {\n         return Collections.unmodifiableList(sortedAttributes);\n     }\n@@ -80,33 +87,38 @@ public class SortOption implements Repository.Option {\n      * @param <T> the type of the object to compare.\n      * @return the comparator.\n      */\n+\n     public <T> Comparator<T> buildComparator() {\n         if (sortedAttributes.isEmpty()) {\n-            return (o1, o2) -> 0;\n+            return (o1,o2)-> 0;\n         } else {\n             Comparator<T> comparator = null;\n-            for (SortedAttribute sortedAttribute : sortedAttributes) {\n-                if (comparator == null) {\n-                    comparator = buildComparator(sortedAttribute);\n-                } else {\n-                    comparator = comparator.thenComparing(buildComparator(sortedAttribute));\n-                }\n-            }\n+            for(SortedAttribute sortedAttribute :sortedAttributes) {\n+                                                                       if (comparator == null) {\n+                                                                           comparator = buildComparator(sortedAttribute);\n+                                                                       } else {\n+                                                                           comparator = comparator.thenComparing(buildComparator(sortedAttribute));\n+                                                                       }\n+                                                                   }\n             return comparator;\n         }\n     }\n \n     private <T> Comparator<T> buildComparator(SortedAttribute sortedAttribute) {\n-        final String[] parts = sortedAttribute.getAttribute().split(ATTRIBUTE_PATH_PATTERN);\n-        Comparator<T> comparator = (t1, t2) -> {\n-            Object val1 = t1;\n-            Object val2 = t2;\n-            for (String part : parts) {\n-                val1 = accessValue(val1, part);\n-                val2 = accessValue(val2, part);\n-            }\n-            return ensureComparable(val1).compareTo(val2);\n-        };\n+        final String[] parts = sortedAttribute.getAttribute()\n+            .split(ATTRIBUTE_PATH_PATTERN);\n+\n+        Comparator<T> comparator = (t1,t2)-> {\n+                                       Object val1 = t1;\n+\n+                                       Object val2 = t2;\n+                                       for(String part :parts) {\n+                                                                   val1 = accessValue(val1, part);\n+                                                                   val2 = accessValue(val2, part);\n+                                                               }\n+                                       return ensureComparable(val1)\n+                                           .compareTo(val2);\n+                                   };\n         if (sortedAttribute.getDirection() == Direction.DESCENDING) {\n             return comparator.reversed();\n         } else {\n@@ -120,33 +132,33 @@ public class SortOption implements Repository.Option {\n             return (Comparable<T>) o;\n         } else {\n             throw BusinessException.createNew(BusinessErrorCode.VALUE_CANNOT_BE_COMPARED)\n-                    .put(\"value\", String.valueOf(o))\n-                    .put(\"valueType\", o.getClass());\n+                .put(\"value\", String.valueOf(o))\n+                .put(\"valueType\", o.getClass());\n         }\n     }\n \n     private Object accessValue(Object o, String part) {\n         return resolveField(o.getClass(), part)\n-                .map(f -> FieldUtils.getFieldValue(o, f))\n-                .<BusinessException>orElseThrow(() -> BusinessException.createNew(BusinessErrorCode.UNRESOLVED_FIELD)\n-                        .put(\"className\", o.getClass())\n-                        .put(\"fieldName\", part));\n+            .map(f-> FieldUtils.getFieldValue(o, f))\n+            .<BusinessException>orElseThrow(()-> BusinessException.createNew(BusinessErrorCode.UNRESOLVED_FIELD)\n+                .put(\"className\", o.getClass())\n+                .put(\"fieldName\", part));\n     }\n \n     /**\n      * Sort direction associated to a sorted attribute.\n      */\n-    public enum Direction {\n-        ASCENDING, DESCENDING\n-    }\n+\n+    public enum Direction {ASCENDING, DESCENDING}\n \n     /**\n      * Represents a specific sorted attribute in a {@link SortOption}.\n      */\n+\n     public static class SortedAttribute {\n \n-        private final String attribute;\n-        private final Direction direction;\n+private final String attribute;\n+private final Direction direction;\n \n         /**\n          * Creates a sorted attribute.\n@@ -154,44 +166,47 @@ public class SortOption implements Repository.Option {\n          * @param attribute the name of the attribute to sort.\n          * @param direction the direction of the sort.\n          */\n-        SortedAttribute(String attribute, Direction direction) {\n-            this.direction = direction;\n-            this.attribute = attribute;\n-        }\n+\n+SortedAttribute(String attribute, Direction direction) {\n+   this.direction = direction;\n+   this.attribute = attribute;\n+}\n \n         /**\n          * Returns the sort direction of the attribute.\n          *\n          * @return the direction the attribute will be sorted with.\n          */\n-        public Direction getDirection() {\n-            return direction;\n-        }\n+\n+public Direction getDirection() {\n+   return direction;\n+}\n \n         /**\n          * Returns the attribute name.\n          *\n          * @return the sorted attribute name.\n          */\n-        public String getAttribute() {\n-            return attribute;\n-        }\n \n-        @Override\n-        public boolean equals(Object o) {\n-            if (this == o) {\n-                return true;\n-            }\n-            if (o == null || getClass() != o.getClass()) {\n-                return false;\n-            }\n-            SortedAttribute sortedAttribute = (SortedAttribute) o;\n-            return direction == sortedAttribute.direction && Objects.equals(attribute, sortedAttribute.attribute);\n-        }\n+public String getAttribute() {\n+   return attribute;\n+}\n \n-        @Override\n-        public int hashCode() {\n-            return Objects.hash(direction, attribute);\n-        }\n-    }\n+@Override\n+public boolean equals(Object o) {\n+   if(this == o) {\n+       return true;\n+                 }\n+   if(o == null|| getClass()!= o.getClass()) {\n+       return false;\n+   } SortedAttribute sortedAttribute = (SortedAttribute) o;\n+\n+   return direction == sortedAttribute.direction&& Objects.equals(attribute, sortedAttribute.attribute);\n }\n+\n+@Override\n+public int hashCode() {\n+   return Objects.hash(direction, attribute);\n+}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 84
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/44/SortOption.java\nindex d658753550d..93a800a4a52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/44/SortOption.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import static org.seedstack.business.internal.utils.FieldUtils.resolveField;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/44/SortOption.java\nindex d658753550d..93a800a4a52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/44/SortOption.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/44/SortOption.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import static org.seedstack.business.internal.utils.FieldUtils.resolveField;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
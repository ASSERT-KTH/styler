{
    "project_name": "twilio-twilio-java",
    "error_id": "639",
    "information": {
        "errors": [
            {
                "line": "168",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/639/UserBindingReader.java\nindex 044849de2ea..274d5d7602e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/639/UserBindingReader.java\n@@ -165,7 +165,7 @@ public class UserBindingReader extends Reader<UserBinding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/639/UserBindingReader.java\nindex 044849de2ea..181fe8f2336 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/639/UserBindingReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.ipmessaging.v2.service.user;\n@@ -165,7 +165,7 @@ public class UserBindingReader extends Reader<UserBinding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/639/UserBindingReader.java\nindex 044849de2ea..950be95a322 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/639/UserBindingReader.java\n@@ -19,7 +19,6 @@ import com.twilio.http.Request;\n import com.twilio.http.Response;\n import com.twilio.http.TwilioRestClient;\n import com.twilio.rest.Domains;\n-\n import java.util.List;\n \n public class UserBindingReader extends Reader<UserBinding> {\n@@ -33,6 +32,8 @@ public class UserBindingReader extends Reader<UserBinding> {\n      * @param pathServiceSid The SID of the Service to read the resource from\n      * @param pathUserSid The SID of the User with the User Bindings to read\n      */\n+\n+\n     public UserBindingReader(final String pathServiceSid,\n                              final String pathUserSid) {\n         this.pathServiceSid = pathServiceSid;\n@@ -48,6 +49,8 @@ public class UserBindingReader extends Reader<UserBinding> {\n      *                    read\n      * @return this\n      */\n+\n+\n     public UserBindingReader setBindingType(final List<UserBinding.BindingType> bindingType) {\n         this.bindingType = bindingType;\n         return this;\n@@ -62,6 +65,8 @@ public class UserBindingReader extends Reader<UserBinding> {\n      *                    read\n      * @return this\n      */\n+\n+\n     public UserBindingReader setBindingType(final UserBinding.BindingType bindingType) {\n         return setBindingType(Promoter.listOfOne(bindingType));\n     }\n@@ -72,6 +77,7 @@ public class UserBindingReader extends Reader<UserBinding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UserBinding ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<UserBinding> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -83,13 +89,14 @@ public class UserBindingReader extends Reader<UserBinding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UserBinding ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<UserBinding> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.IPMESSAGING.toString(),\n-            \"/v2/Services/\" + this.pathServiceSid + \"/Users/\" + this.pathUserSid + \"/Bindings\"\n+                              HttpMethod.GET,\n+                              Domains.IPMESSAGING.toString(),\n+                              \"/v2/Services/\" + this.pathServiceSid + \"/Users/\" + this.pathUserSid + \"/Bindings\"\n         );\n \n         addQueryParams(request);\n@@ -103,14 +110,12 @@ public class UserBindingReader extends Reader<UserBinding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UserBinding ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<UserBinding> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<UserBinding> getPage(final String targetUrl,\n+                                     final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -121,13 +126,11 @@ public class UserBindingReader extends Reader<UserBinding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<UserBinding> nextPage(final Page<UserBinding> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.IPMESSAGING.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.IPMESSAGING.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -138,13 +141,11 @@ public class UserBindingReader extends Reader<UserBinding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<UserBinding> previousPage(final Page<UserBinding> page,\n                                           final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.IPMESSAGING.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.IPMESSAGING.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -155,9 +156,11 @@ public class UserBindingReader extends Reader<UserBinding> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<UserBinding> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<UserBinding> pageForRequest(final TwilioRestClient client,\n+                                             final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"UserBinding read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -165,15 +168,11 @@ public class UserBindingReader extends Reader<UserBinding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"bindings\",\n-            response.getContent(),\n-            UserBinding.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"bindings\", response.getContent(), UserBinding.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -181,6 +180,8 @@ public class UserBindingReader extends Reader<UserBinding> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (bindingType != null) {\n             for (UserBinding.BindingType prop : bindingType) {\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/639/UserBindingReader.java\nindex 044849de2ea..274d5d7602e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/639/UserBindingReader.java\n@@ -165,7 +165,7 @@ public class UserBindingReader extends Reader<UserBinding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/639/UserBindingReader.java\nindex 044849de2ea..55cc07d0435 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/639/UserBindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/639/UserBindingReader.java\n@@ -165,7 +165,8 @@ public class UserBindingReader extends Reader<UserBinding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
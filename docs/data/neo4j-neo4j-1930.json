{
    "project_name": "neo4j-neo4j",
    "error_id": "1930",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1930/FabricKernelTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1930/FabricKernelTransaction.java\nindex 28ae10e9623..653b7b71bf4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1930/FabricKernelTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1930/FabricKernelTransaction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.executor;\n \n import reactor.core.publisher.Flux;\n@@ -55,8 +56,8 @@ public class FabricKernelTransaction\n     private final FabricConfig config;\n     private final Set<TransactionalContext> openExecutionContexts = ConcurrentHashMap.newKeySet();\n \n-    FabricKernelTransaction( ExecutionEngine queryExecutionEngine, TransactionalContextFactory transactionalContextFactory,\n-                             InternalTransaction internalTransaction, FabricConfig config )\n+    FabricKernelTransaction(ExecutionEngine queryExecutionEngine, TransactionalContextFactory transactionalContextFactory,\n+                            InternalTransaction internalTransaction, FabricConfig config)\n     {\n         this.queryExecutionEngine = queryExecutionEngine;\n         this.transactionalContextFactory = transactionalContextFactory;\n@@ -64,79 +65,76 @@ public class FabricKernelTransaction\n         this.config = config;\n     }\n \n-    public StatementResult run( FullyParsedQuery query, MapValue params, Flux<Record> input,\n-                                StatementLifecycle parentLifecycle, ExecutionOptions executionOptions )\n+    public StatementResult run(FullyParsedQuery query, MapValue params, Flux<Record> input,\n+                               StatementLifecycle parentLifecycle, ExecutionOptions executionOptions)\n     {\n-        var childExecutionContext = makeChildTransactionalContext( parentLifecycle );\n+        var childExecutionContext = makeChildTransactionalContext(parentLifecycle);\n         var childQueryMonitor = parentLifecycle.getChildQueryMonitor();\n-        openExecutionContexts.add( childExecutionContext );\n+        openExecutionContexts.add(childExecutionContext);\n \n-        SubscribableExecution execution = execute( query, params, childExecutionContext, convert( input ), childQueryMonitor );\n+        SubscribableExecution execution = execute(query, params, childExecutionContext, convert(input), childQueryMonitor);\n \n         QuerySubject subject = executionOptions.addSourceTag()\n-                               ? new QuerySubject.TaggingQuerySubject( executionOptions.sourceId() )\n-                               : new QuerySubject.BasicQuerySubject();\n+          ? new QuerySubject.TaggingQuerySubject(executionOptions.sourceId())\n+          : new QuerySubject.BasicQuerySubject();\n \n-        StatementResult result = StatementResults.connectVia( execution, subject );\n-        return new ContextClosingResultInterceptor( result, childExecutionContext );\n+        StatementResult result = StatementResults.connectVia(execution, subject);\n+        return new ContextClosingResultInterceptor(result, childExecutionContext);\n     }\n \n-    private SubscribableExecution execute( FullyParsedQuery query, MapValue params, TransactionalContext executionContext, InputDataStream input,\n-                                           QueryExecutionMonitor queryMonitor )\n+    private SubscribableExecution execute(FullyParsedQuery query, MapValue params, TransactionalContext executionContext, InputDataStream input,\n+                                          QueryExecutionMonitor queryMonitor)\n     {\n         return subscriber ->\n         {\n             try\n             {\n-                return queryExecutionEngine.executeQuery( query, params, executionContext, true, input, queryMonitor, subscriber );\n-            }\n-            catch ( QueryExecutionKernelException e )\n+                return queryExecutionEngine.executeQuery(query, params, executionContext, true, input, queryMonitor, subscriber);\n+            } catch (QueryExecutionKernelException e)\n             {\n                 // all exception thrown from execution engine are wrapped in QueryExecutionKernelException,\n                 // let's see if there is something better hidden in it\n-                if ( e.getCause() == null )\n+                if (e.getCause() == null)\n                 {\n-                    throw Exceptions.transform( Status.Statement.ExecutionFailed, e );\n-                }\n-                else\n+                    throw Exceptions.transform(Status.Statement.ExecutionFailed, e);\n+                } else\n                 {\n-                    throw Exceptions.transform( Status.Statement.ExecutionFailed, e.getCause() );\n+                    throw Exceptions.transform(Status.Statement.ExecutionFailed, e.getCause());\n                 }\n             }\n         };\n     }\n \n-    private TransactionalContext makeChildTransactionalContext( StatementLifecycle lifecycle )\n+    private TransactionalContext makeChildTransactionalContext(StatementLifecycle lifecycle)\n     {\n         var parentQuery = lifecycle.getMonitoredQuery();\n \n-        if ( lifecycle.isParentChildMonitoringMode() )\n+        if (lifecycle.isParentChildMonitoringMode())\n         {\n             // Cypher engine reports separately for each child query\n             String queryText = \"Internal query for parent query id: \" + parentQuery.id();\n             MapValue params = MapValue.EMPTY;\n-            return transactionalContextFactory.newContext( internalTransaction, queryText, params );\n-        }\n-        else\n+            return transactionalContextFactory.newContext(internalTransaction, queryText, params);\n+        } else\n         {\n             // Mark query as no longer in Fabric phase\n             lifecycle.doneFabricPhase();\n             // Cypher engine reports directly to parent query\n-            return transactionalContextFactory.newContextForQuery( internalTransaction, parentQuery );\n+            return transactionalContextFactory.newContextForQuery(internalTransaction, parentQuery);\n         }\n     }\n \n-    private InputDataStream convert( Flux<Record> input )\n+    private InputDataStream convert(Flux<Record> input)\n     {\n-        return new InputDataStreamImpl( new Rx2SyncStream( input, config.getDataStream().getBatchSize() )\n+        return new InputDataStreamImpl(new Rx2SyncStream(input, config.getDataStream().getBatchSize())\n         );\n     }\n \n     public void commit()\n     {\n-        synchronized ( internalTransaction )\n+        synchronized (internalTransaction)\n         {\n-            if ( internalTransaction.isOpen() )\n+            if (internalTransaction.isOpen())\n             {\n                 closeContexts();\n                 internalTransaction.commit();\n@@ -146,9 +144,9 @@ public class FabricKernelTransaction\n \n     public void rollback()\n     {\n-        synchronized ( internalTransaction )\n+        synchronized (internalTransaction)\n         {\n-            if ( internalTransaction.isOpen() )\n+            if (internalTransaction.isOpen())\n             {\n                 closeContexts();\n                 internalTransaction.rollback();\n@@ -158,12 +156,12 @@ public class FabricKernelTransaction\n \n     private void closeContexts()\n     {\n-        openExecutionContexts.forEach( TransactionalContext::close );\n+        openExecutionContexts.forEach(TransactionalContext::close);\n     }\n \n-    public void terminate( Status reason )\n+    public void terminate(Status reason)\n     {\n-        internalTransaction.terminate( reason );\n+        internalTransaction.terminate(reason);\n     }\n \n     /**\n@@ -180,7 +178,7 @@ public class FabricKernelTransaction\n         private final StatementResult wrappedResult;\n         private final TransactionalContext executionContext;\n \n-        ContextClosingResultInterceptor( StatementResult wrappedResult, TransactionalContext executionContext )\n+        ContextClosingResultInterceptor(StatementResult wrappedResult, TransactionalContext executionContext)\n         {\n             this.wrappedResult = wrappedResult;\n             this.executionContext = executionContext;\n@@ -197,11 +195,11 @@ public class FabricKernelTransaction\n         {\n             // We care only about the case when the statement completes successfully.\n             // All contexts will be closed upon a failure in the rollback\n-            return wrappedResult.records().doOnComplete( () ->\n-                                                         {\n-                                                             openExecutionContexts.remove( executionContext );\n-                                                             executionContext.close();\n-                                                         } );\n+            return wrappedResult.records().doOnComplete(() ->\n+            {\n+                openExecutionContexts.remove(executionContext);\n+                executionContext.close();\n+            });\n         }\n \n         @Override\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1930/FabricKernelTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1930/FabricKernelTransaction.java\nindex 28ae10e9623..b25b61da514 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1930/FabricKernelTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1930/FabricKernelTransaction.java\n@@ -55,8 +55,7 @@ public class FabricKernelTransaction\n     private final FabricConfig config;\n     private final Set<TransactionalContext> openExecutionContexts = ConcurrentHashMap.newKeySet();\n \n-    FabricKernelTransaction( ExecutionEngine queryExecutionEngine, TransactionalContextFactory transactionalContextFactory,\n-                             InternalTransaction internalTransaction, FabricConfig config )\n+    FabricKernelTransaction( ExecutionEngine queryExecutionEngine, TransactionalContextFactory transactionalContextFactory, InternalTransaction internalTransaction, FabricConfig config )\n     {\n         this.queryExecutionEngine = queryExecutionEngine;\n         this.transactionalContextFactory = transactionalContextFactory;\n@@ -64,9 +63,8 @@ public class FabricKernelTransaction\n         this.config = config;\n     }\n \n-    public StatementResult run( FullyParsedQuery query, MapValue params, Flux<Record> input,\n-                                StatementLifecycle parentLifecycle, ExecutionOptions executionOptions )\n-    {\n+    public StatementResult run( FullyParsedQuery query, MapValue params, Flux<Record> input, StatementLifecycle parentLifecycle, ExecutionOptions executionOptions )\n+{\n         var childExecutionContext = makeChildTransactionalContext( parentLifecycle );\n         var childQueryMonitor = parentLifecycle.getChildQueryMonitor();\n         openExecutionContexts.add( childExecutionContext );\n@@ -76,14 +74,12 @@ public class FabricKernelTransaction\n         QuerySubject subject = executionOptions.addSourceTag()\n                                ? new QuerySubject.TaggingQuerySubject( executionOptions.sourceId() )\n                                : new QuerySubject.BasicQuerySubject();\n-\n-        StatementResult result = StatementResults.connectVia( execution, subject );\n+StatementResult result = StatementResults.connectVia( execution, subject );\n         return new ContextClosingResultInterceptor( result, childExecutionContext );\n     }\n \n-    private SubscribableExecution execute( FullyParsedQuery query, MapValue params, TransactionalContext executionContext, InputDataStream input,\n-                                           QueryExecutionMonitor queryMonitor )\n-    {\n+    private SubscribableExecution execute( FullyParsedQuery query, MapValue params, TransactionalContext executionContext, InputDataStream input, QueryExecutionMonitor queryMonitor )\n+{\n         return subscriber ->\n         {\n             try\n@@ -128,8 +124,7 @@ public class FabricKernelTransaction\n \n     private InputDataStream convert( Flux<Record> input )\n     {\n-        return new InputDataStreamImpl( new Rx2SyncStream( input, config.getDataStream().getBatchSize() )\n-        );\n+        return new InputDataStreamImpl( new Rx2SyncStream( input, config.getDataStream().getBatchSize() ) );\n     }\n \n     public void commit()\n@@ -202,7 +197,7 @@ public class FabricKernelTransaction\n                                                              openExecutionContexts.remove( executionContext );\n                                                              executionContext.close();\n                                                          } );\n-        }\n+    }\n \n         @Override\n         public Mono<Summary> summary()\n@@ -216,4 +211,4 @@ public class FabricKernelTransaction\n             return wrappedResult.executionType();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
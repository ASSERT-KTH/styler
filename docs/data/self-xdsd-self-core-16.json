{
    "project_name": "self-xdsd-self-core",
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "107",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        final int status = resource.statusCode();\n        final boolean result;\n        if(status == HttpURLConnection.HTTP_OK) {\n            result = true;\n            LOG.debug(\"Label Issue removed successfully (200 OK).\");\n        } else if (status == HttpURLConnection.HTTP_NOT_FOUND) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/16/GithubIssueLabels.java\nindex 3d3795374b5..eefc0ab9054 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/16/GithubIssueLabels.java\n@@ -104,7 +104,7 @@ final class GithubIssueLabels implements Labels {\n         );\n         final int status = resource.statusCode();\n         final boolean result;\n-        if(status == HttpURLConnection.HTTP_OK) {\n+        if (status == HttpURLConnection.HTTP_OK) {\n             result = true;\n             LOG.debug(\"Label Issue removed successfully (200 OK).\");\n         } else if (status == HttpURLConnection.HTTP_NOT_FOUND) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/16/GithubIssueLabels.java\nindex 3d3795374b5..7e22ad4c7c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/16/GithubIssueLabels.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core;\n \n import com.selfxdsd.api.Label;\n@@ -39,6 +40,7 @@ import java.util.stream.Collectors;\n \n /**\n  * A Github Issue Labels.\n+ *\n  * @author criske\n  * @version $Id$\n  * @since 0.0.30\n@@ -64,7 +66,8 @@ final class GithubIssueLabels implements Labels {\n \n     /**\n      * Ctor.\n-     * @param uri Issue Labels URI.\n+     *\n+     * @param uri       Issue Labels URI.\n      * @param resources Resources.\n      */\n     GithubIssueLabels(final URI uri, final JsonResources resources) {\n@@ -104,7 +107,7 @@ final class GithubIssueLabels implements Labels {\n         );\n         final int status = resource.statusCode();\n         final boolean result;\n-        if(status == HttpURLConnection.HTTP_OK) {\n+        if (status == HttpURLConnection.HTTP_OK) {\n             result = true;\n             LOG.debug(\"Label Issue removed successfully (200 OK).\");\n         } else if (status == HttpURLConnection.HTTP_NOT_FOUND) {\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "81",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/16/GithubIssueLabels.java\nindex 3d3795374b5..dcb3ce6a4d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/16/GithubIssueLabels.java\n@@ -78,7 +78,7 @@ final class GithubIssueLabels implements Labels {\n             URI.create(\n                 this.uri.toString()\n                     .replaceAll(\"/issues/[0-9]+\", \"\")\n-            ),\n+    ),\n             this.resources\n         );\n         repoLabels.add(names);\n@@ -86,8 +86,7 @@ final class GithubIssueLabels implements Labels {\n         for (final String name : names) {\n             labels.add(name);\n         }\n-        final Resource resource = this.resources.post(this.uri, Json\n-            .createObjectBuilder()\n+        final Resource resource = this.resources.post(this.uri, Json.createObjectBuilder()\n             .add(\"labels\", labels.build())\n             .build()\n         );\n@@ -104,7 +103,7 @@ final class GithubIssueLabels implements Labels {\n         );\n         final int status = resource.statusCode();\n         final boolean result;\n-        if(status == HttpURLConnection.HTTP_OK) {\n+        if (status == HttpURLConnection.HTTP_OK) {\n             result = true;\n             LOG.debug(\"Label Issue removed successfully (200 OK).\");\n         } else if (status == HttpURLConnection.HTTP_NOT_FOUND) {\n@@ -134,4 +133,4 @@ final class GithubIssueLabels implements Labels {\n         }\n         return labels.iterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "93",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'+' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/16/GithubIssueLabels.java\nindex 3d3795374b5..b8dbe033ded 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/16/GithubIssueLabels.java\n@@ -27,7 +27,6 @@ import com.selfxdsd.api.Labels;\n import com.selfxdsd.api.Resource;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import javax.json.Json;\n import javax.json.JsonArrayBuilder;\n import javax.json.JsonObject;\n@@ -43,23 +42,29 @@ import java.util.stream.Collectors;\n  * @version $Id$\n  * @since 0.0.30\n  */\n+\n+\n final class GithubIssueLabels implements Labels {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        GithubIssueLabels.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GithubIssueLabels.class);\n \n     /**\n      * Issue Labels URI.\n      */\n+\n+\n     private final URI uri;\n \n     /**\n      * Resources.\n      */\n+\n+\n     private final JsonResources resources;\n \n     /**\n@@ -67,7 +72,10 @@ final class GithubIssueLabels implements Labels {\n      * @param uri Issue Labels URI.\n      * @param resources Resources.\n      */\n-    GithubIssueLabels(final URI uri, final JsonResources resources) {\n+\n+\n+    GithubIssueLabels(final URI uri,\n+                      final JsonResources resources) {\n         this.resources = resources;\n         this.uri = uri;\n     }\n@@ -75,47 +83,45 @@ final class GithubIssueLabels implements Labels {\n     @Override\n     public boolean add(final String... names) {\n         final GithubRepoLabels repoLabels = new GithubRepoLabels(\n-            URI.create(\n-                this.uri.toString()\n-                    .replaceAll(\"/issues/[0-9]+\", \"\")\n-            ),\n-            this.resources\n+                                                URI.create(this.uri.toString().replaceAll(\"/issues/[0-9]+\", \"\")),\n+                                                this.resources\n+                                            );\n+        repoLabels.add(\n+            names\n         );\n-        repoLabels.add(names);\n         final JsonArrayBuilder labels = Json.createArrayBuilder();\n-        for (final String name : names) {\n-            labels.add(name);\n+        for(final String name : names ) {\n+            labels.add(\n+                name\n+            );\n         }\n-        final Resource resource = this.resources.post(this.uri, Json\n-            .createObjectBuilder()\n-            .add(\"labels\", labels.build())\n-            .build()\n+        final Resource resource = this.resources.post(\n+            this.uri,\n+            Json.createObjectBuilder().add(\"labels\", labels.build()).build()\n         );\n         return resource.statusCode() == HttpURLConnection.HTTP_OK;\n     }\n \n     @Override\n     public boolean remove(final String name) {\n-        final URI labelUri = URI.create(this.uri.toString() + \"/\" + name);\n-        LOG.debug(\"Removing Issue Label [\" + labelUri + \"]...\");\n-        final Resource resource = this.resources.delete(\n-            labelUri,\n-            Json.createObjectBuilder().build()\n-        );\n+        final URI labelUri = URI.create(this.uri.toString() + \"/\"\n++ name);\n+        LOG.debug(\"Removing Issue Label [\"\n+                      + labelUri + \"]...\");\n+        final Resource resource = this.resources.delete(labelUri, Json.createObjectBuilder().build());\n         final int status = resource.statusCode();\n         final boolean result;\n-        if(status == HttpURLConnection.HTTP_OK) {\n+        if (status == HttpURLConnection.HTTP_OK) {\n             result = true;\n             LOG.debug(\"Label Issue removed successfully (200 OK).\");\n         } else if (status == HttpURLConnection.HTTP_NOT_FOUND) {\n-            result = true;\n-            LOG.warn(\"Label Issue NOT FOUND (still valid).\");\n-        } else {\n-            result = false;\n-            LOG.error(\n-                \"Unexpected response. Expected 200 or 404, but got: \" + status\n-            );\n-        }\n+                   result = true;\n+                   LOG.warn(\"Label Issue NOT FOUND (still valid).\");\n+               } else {\n+                   result = false;\n+                   LOG.error(\"Unexpected response. Expected 200 or 404, but got: \"\n+                                 + status);\n+               }\n         return result;\n     }\n \n@@ -124,14 +130,10 @@ final class GithubIssueLabels implements Labels {\n         final Resource resource = this.resources.get(this.uri);\n         final List<Label> labels;\n         if (resource.statusCode() == HttpURLConnection.HTTP_OK) {\n-            labels = resource.asJsonArray()\n-                .stream()\n-                .map(JsonObject.class::cast)\n-                .map(GithubLabel::new)\n-                .collect(Collectors.toList());\n+            labels = resource.asJsonArray().stream().map(JsonObject.class::cast).map(GithubLabel::new).collect(Collectors.toList());\n         } else {\n             labels = List.of();\n         }\n         return labels.iterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/16/GithubIssueLabels.java\nindex 3d3795374b5..eefc0ab9054 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/16/GithubIssueLabels.java\n@@ -104,7 +104,7 @@ final class GithubIssueLabels implements Labels {\n         );\n         final int status = resource.statusCode();\n         final boolean result;\n-        if(status == HttpURLConnection.HTTP_OK) {\n+        if (status == HttpURLConnection.HTTP_OK) {\n             result = true;\n             LOG.debug(\"Label Issue removed successfully (200 OK).\");\n         } else if (status == HttpURLConnection.HTTP_NOT_FOUND) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/16/GithubIssueLabels.java\nindex 3d3795374b5..eefc0ab9054 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/16/GithubIssueLabels.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/16/GithubIssueLabels.java\n@@ -104,7 +104,7 @@ final class GithubIssueLabels implements Labels {\n         );\n         final int status = resource.statusCode();\n         final boolean result;\n-        if(status == HttpURLConnection.HTTP_OK) {\n+        if (status == HttpURLConnection.HTTP_OK) {\n             result = true;\n             LOG.debug(\"Label Issue removed successfully (200 OK).\");\n         } else if (status == HttpURLConnection.HTTP_NOT_FOUND) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "127",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/127/MultinomialLogisticLoss.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/127/MultinomialLogisticLoss.java\nindex 7aaf0a4a27f..1d78b60aa4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/127/MultinomialLogisticLoss.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/127/MultinomialLogisticLoss.java\n@@ -114,4 +114,4 @@ public class MultinomialLogisticLoss implements MultiLoss {\n     }\n     return instance;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/127/MultinomialLogisticLoss.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/127/MultinomialLogisticLoss.java\nindex 7aaf0a4a27f..c2ace1824df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/127/MultinomialLogisticLoss.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/127/MultinomialLogisticLoss.java\n@@ -26,8 +26,7 @@ public class MultinomialLogisticLoss implements MultiLoss {\n \n   private static MultinomialLogisticLoss instance;\n \n-  private MultinomialLogisticLoss() {\n-  }\n+  private MultinomialLogisticLoss() {}\n \n   @Override\n   public Kind getKind() {\n@@ -43,6 +42,7 @@ public class MultinomialLogisticLoss implements MultiLoss {\n   public double[] firOrderGrad(float[] pred, float label) {\n     double[] prob = Maths.floatArrayToDoubleArray(pred);\n     Maths.softmax(prob);\n+\n     int trueLabel = (int) label;\n     double[] grad = prob;\n     for (int i = 0; i < grad.length; i++) {\n@@ -77,6 +77,7 @@ public class MultinomialLogisticLoss implements MultiLoss {\n   public double[] secOrderGradFull(float[] pred, float label) {\n     double[] prob = Maths.floatArrayToDoubleArray(pred);\n     Maths.softmax(prob);\n+\n     int numLabel = pred.length;\n     double[] hess = new double[numLabel * (numLabel + 1) / 2];\n     for (int i = 0; i < numLabel; i++) {\n@@ -97,6 +98,7 @@ public class MultinomialLogisticLoss implements MultiLoss {\n     for (int i = 0; i < numLabel; i++) {\n       prob[i] = trueLabel == i ? firGrad[i] + 1.0 : firGrad[i];\n     }\n+\n     double[] hess = new double[numLabel * (numLabel + 1) / 2];\n     for (int i = 0; i < numLabel; i++) {\n       int rowI = Maths.indexOfLowerTriangularMatrix(i, 0);\n@@ -114,4 +116,4 @@ public class MultinomialLogisticLoss implements MultiLoss {\n     }\n     return instance;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "intuit-Tank",
    "error_id": "175",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n\n\t/**\n\t * Called whenever the \"active line range\" changes.\n\t *\n\t * @param e Information about the line range change.  If there is no longer",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/175/ActiveLineRangeListener.java\nindex 54917697fa9..52ed55f87d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/175/ActiveLineRangeListener.java\n@@ -30,15 +30,14 @@ import java.util.EventListener;\n  */\n public interface ActiveLineRangeListener extends EventListener {\n \n-\n-\t/**\n+    /**\n \t * Called whenever the \"active line range\" changes.\n \t *\n \t * @param e Information about the line range change.  If there is no longer\n \t *        an \"active line range,\" the \"minimum\" and \"maximum\" line values\n \t *        should both be <code>-1</code>.\n \t */\n-\tvoid activeLineRangeChanged(ActiveLineRangeEvent e);\n+ void activeLineRangeChanged(ActiveLineRangeEvent e);\n \n \n }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/175/ActiveLineRangeListener.java\nindex 54917697fa9..a2452c70d98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/175/ActiveLineRangeListener.java\n@@ -7,6 +7,7 @@\n  * This library is distributed under a modified BSD license.  See the included\n  * LICENSE file for details.\n  */\n+\n package org.fife.ui.rsyntaxtextarea;\n \n import java.util.EventListener;\n@@ -18,7 +19,7 @@ import java.util.EventListener;\n  * being edited, it may broadcast {@link ActiveLineRangeEvent}s whenever the\n  * caret moves into a new \"block\" of code.  Listeners can listen for these\n  * events and respond accordingly.<p>\n- *\n+ * <p>\n  * See the <code>RSTALanguageSupport</code> project at\n  * <a href=\"http://fifesoft.com\">http://fifesoft.com</a> for some\n  * <code>LanguageSupport</code> implementations that may broadcast these\n@@ -31,14 +32,14 @@ import java.util.EventListener;\n public interface ActiveLineRangeListener extends EventListener {\n \n \n-\t/**\n-\t * Called whenever the \"active line range\" changes.\n-\t *\n-\t * @param e Information about the line range change.  If there is no longer\n-\t *        an \"active line range,\" the \"minimum\" and \"maximum\" line values\n-\t *        should both be <code>-1</code>.\n-\t */\n-\tvoid activeLineRangeChanged(ActiveLineRangeEvent e);\n+  /**\n+   * Called whenever the \"active line range\" changes.\n+   *\n+   * @param e Information about the line range change.  If there is no longer\n+   *          an \"active line range,\" the \"minimum\" and \"maximum\" line values\n+   *          should both be <code>-1</code>.\n+   */\n+  void activeLineRangeChanged(ActiveLineRangeEvent e);\n \n \n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/175/ActiveLineRangeListener.java\nindex 54917697fa9..f1686409725 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/175/ActiveLineRangeListener.java\n@@ -11,7 +11,6 @@ package org.fife.ui.rsyntaxtextarea;\n \n import java.util.EventListener;\n \n-\n /**\n  * Listens for \"active line range\" events from an <code>RSyntaxTextArea</code>.\n  * If a text area contains some semantic knowledge of the programming language\n@@ -30,8 +29,7 @@ import java.util.EventListener;\n  */\n public interface ActiveLineRangeListener extends EventListener {\n \n-\n-\t/**\n+    /**\n \t * Called whenever the \"active line range\" changes.\n \t *\n \t * @param e Information about the line range change.  If there is no longer\n@@ -40,5 +38,4 @@ public interface ActiveLineRangeListener extends EventListener {\n \t */\n \tvoid activeLineRangeChanged(ActiveLineRangeEvent e);\n \n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/175/ActiveLineRangeListener.java\nindex 54917697fa9..563b950f8dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/175/ActiveLineRangeListener.java\n@@ -9,6 +9,8 @@\n  */\n package org.fife.ui.rsyntaxtextarea;\n \n+\n+\n import java.util.EventListener;\n \n \n@@ -28,17 +30,19 @@ import java.util.EventListener;\n  * @author Robert Futrell\n  * @version 1.0\n  */\n+\n+\n public interface ActiveLineRangeListener extends EventListener {\n \n \n-\t/**\n-\t * Called whenever the \"active line range\" changes.\n-\t *\n-\t * @param e Information about the line range change.  If there is no longer\n-\t *        an \"active line range,\" the \"minimum\" and \"maximum\" line values\n-\t *        should both be <code>-1</code>.\n-\t */\n-\tvoid activeLineRangeChanged(ActiveLineRangeEvent e);\n+    /**\n+     * Called whenever the \"active line range\" changes.\n+     *\n+     * @param e Information about the line range change.  If there is no longer\n+     *        an \"active line range,\" the \"minimum\" and \"maximum\" line values\n+     *        should both be <code>-1</code>.\n+     */\n \n+    void activeLineRangeChanged(ActiveLineRangeEvent e);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/175/ActiveLineRangeListener.java\nindex 54917697fa9..52ed55f87d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/175/ActiveLineRangeListener.java\n@@ -30,15 +30,14 @@ import java.util.EventListener;\n  */\n public interface ActiveLineRangeListener extends EventListener {\n \n-\n-\t/**\n+    /**\n \t * Called whenever the \"active line range\" changes.\n \t *\n \t * @param e Information about the line range change.  If there is no longer\n \t *        an \"active line range,\" the \"minimum\" and \"maximum\" line values\n \t *        should both be <code>-1</code>.\n \t */\n-\tvoid activeLineRangeChanged(ActiveLineRangeEvent e);\n+ void activeLineRangeChanged(ActiveLineRangeEvent e);\n \n \n }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/175/ActiveLineRangeListener.java\nindex 54917697fa9..447660fd8a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/175/ActiveLineRangeListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/175/ActiveLineRangeListener.java\n@@ -30,15 +30,14 @@ import java.util.EventListener;\n  */\n public interface ActiveLineRangeListener extends EventListener {\n \n-\n-\t/**\n+    /**\n \t * Called whenever the \"active line range\" changes.\n \t *\n \t * @param e Information about the line range change.  If there is no longer\n \t *        an \"active line range,\" the \"minimum\" and \"maximum\" line values\n \t *        should both be <code>-1</code>.\n \t */\n-\tvoid activeLineRangeChanged(ActiveLineRangeEvent e);\n+    void activeLineRangeChanged(ActiveLineRangeEvent e);\n \n \n }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
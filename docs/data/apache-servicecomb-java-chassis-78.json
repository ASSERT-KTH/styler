{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "89",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    this.consumerHandlerChain = consumerHandlerChain;\n    this.providerHandlerChain = providerHandlerChain;\n\tthis.consumer = consumer;\n  }\n\n  public MicroserviceConfig getMicroserviceConfig() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/78/MicroserviceMeta.java\nindex e782b190177..25c7969f0b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/78/MicroserviceMeta.java\n@@ -86,7 +86,7 @@ public class MicroserviceMeta {\n \n     this.consumerHandlerChain = consumerHandlerChain;\n     this.providerHandlerChain = providerHandlerChain;\n-\tthis.consumer = consumer;\n+    this.consumer = consumer;\n   }\n \n   public MicroserviceConfig getMicroserviceConfig() {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/78/MicroserviceMeta.java\nindex e782b190177..1212ae32379 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/78/MicroserviceMeta.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.core.definition;\n \n import java.util.ArrayList;\n@@ -77,7 +78,7 @@ public class MicroserviceMeta {\n   private VendorExtensions vendorExtensions = new VendorExtensions();\n \n   public MicroserviceMeta(SCBEngine scbEngine, String microserviceName, List<Handler> consumerHandlerChain,\n-      List<Handler> providerHandlerChain, boolean consumer) {\n+                          List<Handler> providerHandlerChain, boolean consumer) {\n     this.scbEngine = scbEngine;\n     MicroserviceNameParser parser = scbEngine.parseMicroserviceName(microserviceName);\n     this.appId = parser.getAppId();\n@@ -86,7 +87,7 @@ public class MicroserviceMeta {\n \n     this.consumerHandlerChain = consumerHandlerChain;\n     this.providerHandlerChain = providerHandlerChain;\n-\tthis.consumer = consumer;\n+    this.consumer = consumer;\n   }\n \n   public MicroserviceConfig getMicroserviceConfig() {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/78/MicroserviceMeta.java\nindex e782b190177..2dd9a5cc972 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/78/MicroserviceMeta.java\n@@ -86,7 +86,7 @@ public class MicroserviceMeta {\n \n     this.consumerHandlerChain = consumerHandlerChain;\n     this.providerHandlerChain = providerHandlerChain;\n-\tthis.consumer = consumer;\n+this.consumer = consumer;\n   }\n \n   public MicroserviceConfig getMicroserviceConfig() {\n@@ -223,4 +223,4 @@ public class MicroserviceMeta {\n     providerQpsFlowControlHandlerSearched = true;\n     return providerQpsFlowControlHandler;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 212).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 302).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/78/MicroserviceMeta.java\nindex e782b190177..a15c374d06d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/78/MicroserviceMeta.java\n@@ -22,19 +22,18 @@ import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-\n import org.apache.servicecomb.core.Handler;\n import org.apache.servicecomb.core.SCBEngine;\n import org.apache.servicecomb.foundation.common.VendorExtensions;\n import org.apache.servicecomb.registry.definition.MicroserviceNameParser;\n import org.apache.servicecomb.swagger.SwaggerUtils;\n-\n import io.swagger.models.Swagger;\n \n /**\n  * should named MicroserviceVersionMeta<br>\n  * but for compatible reason, keep the old name\n  */\n+\n public class MicroserviceMeta {\n   private final SCBEngine scbEngine;\n \n@@ -43,13 +42,16 @@ public class MicroserviceMeta {\n   private String appId;\n \n   // always not include appId\n+\n   private String shortName;\n \n   // inside app: equals to shortName\n   // cross app: appId:shortName\n+\n   private String microserviceName;\n \n   // key is schemaId, this is all schemas\n+\n   private Map<String, SchemaMeta> schemaMetas = new HashMap<>();\n \n   // key is schema interface\n@@ -57,9 +59,11 @@ public class MicroserviceMeta {\n   // otherwise must query by schemaId\n   //\n   // value is synchronizedList, only for low frequency query\n+\n   private Map<Class<?>, List<SchemaMeta>> intfSchemaMetas = new HashMap<>();\n \n   // key is OperationMeta.getMicroserviceQualifiedName()\n+\n   private Map<String, OperationMeta> operationMetas = new HashMap<>();\n \n   private boolean consumer = true;\n@@ -69,24 +73,27 @@ public class MicroserviceMeta {\n   private List<Handler> providerHandlerChain;\n \n   // providerQpsFlowControlHandler is a temporary field, only for internal usage\n+\n   private Handler providerQpsFlowControlHandler;\n \n   // providerQpsFlowControlHandlerSearched is a temporary field, only for internal usage\n+\n   private boolean providerQpsFlowControlHandlerSearched;\n \n   private VendorExtensions vendorExtensions = new VendorExtensions();\n \n-  public MicroserviceMeta(SCBEngine scbEngine, String microserviceName, List<Handler> consumerHandlerChain,\n-      List<Handler> providerHandlerChain, boolean consumer) {\n+  public MicroserviceMeta(SCBEngine scbEngine, String microserviceName, List<Handler> consumerHandlerChain, List<Handler> providerHandlerChain, boolean consumer) {\n     this.scbEngine = scbEngine;\n+\n     MicroserviceNameParser parser = scbEngine.parseMicroserviceName(microserviceName);\n+\n+\n     this.appId = parser.getAppId();\n     this.shortName = parser.getShortName();\n     this.microserviceName = parser.getMicroserviceName();\n-\n     this.consumerHandlerChain = consumerHandlerChain;\n     this.providerHandlerChain = providerHandlerChain;\n-\tthis.consumer = consumer;\n+    this.consumer = consumer;\n   }\n \n   public MicroserviceConfig getMicroserviceConfig() {\n@@ -123,23 +130,17 @@ public class MicroserviceMeta {\n \n   public SchemaMeta registerSchemaMeta(String schemaId, Swagger swagger) {\n     SchemaMeta schemaMeta = new SchemaMeta(this, schemaId, swagger);\n-\n     if (schemaMetas.putIfAbsent(schemaMeta.getSchemaId(), schemaMeta) != null) {\n-      throw new IllegalStateException(String.format(\n-          \"failed to register SchemaMeta caused by duplicated schemaId, appId=%s, microserviceName=%s, schemaId=%s.\",\n-          appId, microserviceName, schemaMeta.getSchemaId()));\n+      throw new IllegalStateException(String.format(\"failed to register SchemaMeta caused by duplicated schemaId, appId=%s, microserviceName=%s, schemaId=%s.\", appId, microserviceName, schemaMeta.getSchemaId()));\n     }\n \n     Class<?> intf = SwaggerUtils.getInterface(schemaMeta.getSwagger());\n     if (intf != null) {\n-      intfSchemaMetas\n-          .computeIfAbsent(intf, k -> Collections.synchronizedList(new ArrayList<>()))\n-          .add(schemaMeta);\n+      intfSchemaMetas.computeIfAbsent(intf, k -> Collections.synchronizedList(new ArrayList<>())).add(schemaMeta);\n     }\n \n-    schemaMeta.getOperations().values().stream()\n-        .forEach(operationMeta -> operationMetas.put(operationMeta.getMicroserviceQualifiedName(), operationMeta));\n-\n+    schemaMeta.getOperations().values()\n+                              .stream().forEach(operationMeta -> operationMetas.put(operationMeta.getMicroserviceQualifiedName(), operationMeta));\n     return schemaMeta;\n   }\n \n@@ -154,11 +155,11 @@ public class MicroserviceMeta {\n   public SchemaMeta ensureFindSchemaMeta(String schemaId) {\n     SchemaMeta schemaMeta = schemaMetas.get(schemaId);\n     if (schemaMeta == null) {\n-      throw new IllegalStateException(String.format(\n-          \"failed to find SchemaMeta by schemaId, appId=%s, microserviceName=%s, schemaId=%s.\",\n-          appId, microserviceName, schemaId));\n+      throw new IllegalStateException(String.format(\"failed to find SchemaMeta by schemaId, appId=%s, microserviceName=%s, schemaId=%s.\",\n+appId,\n+microserviceName,\n+schemaId));\n     }\n-\n     return schemaMeta;\n   }\n \n@@ -173,13 +174,8 @@ public class MicroserviceMeta {\n     }\n \n     if (schemaList.size() > 1) {\n-      throw new IllegalStateException(String.format(\n-          \"failed to find SchemaMeta by interface cause there are multiple SchemaMeta relate to the interface, \"\n-              + \"please use schemaId to choose a SchemaMeta, \"\n-              + \"appId=%s, microserviceName=%s, interface=%s.\",\n-          appId, microserviceName, schemaIntf.getName()));\n+      throw new IllegalStateException(String.format(\"failed to find SchemaMeta by interface cause there are multiple SchemaMeta relate to the interface, \" + \"please use schemaId to choose a SchemaMeta, \" + \"appId=%s, microserviceName=%s, interface=%s.\", appId, microserviceName, schemaIntf.getName()));\n     }\n-\n     return schemaList.get(0);\n   }\n \n@@ -206,6 +202,7 @@ public class MicroserviceMeta {\n   /**\n    * Only for JavaChassis internal usage.\n    */\n+\n   @Deprecated\n   public Handler getProviderQpsFlowControlHandler() {\n     if (providerQpsFlowControlHandlerSearched) {\n@@ -220,7 +217,8 @@ public class MicroserviceMeta {\n         break;\n       }\n     }\n+\n     providerQpsFlowControlHandlerSearched = true;\n     return providerQpsFlowControlHandler;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/78/MicroserviceMeta.java\nindex e782b190177..25c7969f0b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/78/MicroserviceMeta.java\n@@ -86,7 +86,7 @@ public class MicroserviceMeta {\n \n     this.consumerHandlerChain = consumerHandlerChain;\n     this.providerHandlerChain = providerHandlerChain;\n-\tthis.consumer = consumer;\n+    this.consumer = consumer;\n   }\n \n   public MicroserviceConfig getMicroserviceConfig() {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/78/MicroserviceMeta.java\nindex e782b190177..25c7969f0b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/78/MicroserviceMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/78/MicroserviceMeta.java\n@@ -86,7 +86,7 @@ public class MicroserviceMeta {\n \n     this.consumerHandlerChain = consumerHandlerChain;\n     this.providerHandlerChain = providerHandlerChain;\n-\tthis.consumer = consumer;\n+    this.consumer = consumer;\n   }\n \n   public MicroserviceConfig getMicroserviceConfig() {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "658",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/658/PostorderBreadthFirstSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/658/PostorderBreadthFirstSelector.java\nindex 879404af8ab..4cd39b45906 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/658/PostorderBreadthFirstSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/658/PostorderBreadthFirstSelector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.traversal;\n \n import java.util.Iterator;\n@@ -33,68 +34,67 @@ import org.neo4j.graphdb.PathExpander;\n  */\n class PostorderBreadthFirstSelector implements BranchSelector\n {\n-    private Iterator<TraversalBranch> sourceIterator;\n-    private final TraversalBranch current;\n-    private final PathExpander expander;\n+  private Iterator<TraversalBranch> sourceIterator;\n+  private final TraversalBranch current;\n+  private final PathExpander expander;\n \n-    PostorderBreadthFirstSelector( TraversalBranch startSource, PathExpander expander )\n-    {\n-        this.current = startSource;\n-        this.expander = expander;\n-    }\n+  PostorderBreadthFirstSelector(TraversalBranch startSource, PathExpander expander)\n+  {\n+    this.current = startSource;\n+    this.expander = expander;\n+  }\n \n-    @Override\n-    public TraversalBranch next( TraversalContext metadata )\n+  @Override\n+  public TraversalBranch next(TraversalContext metadata)\n+  {\n+    if (sourceIterator == null)\n     {\n-        if ( sourceIterator == null )\n-        {\n-            sourceIterator = gatherSourceIterator( metadata );\n-        }\n-        return sourceIterator.hasNext() ? sourceIterator.next() : null;\n+      sourceIterator = gatherSourceIterator(metadata);\n     }\n+    return sourceIterator.hasNext() ? sourceIterator.next() : null;\n+  }\n \n-    private Iterator<TraversalBranch> gatherSourceIterator( TraversalContext metadata )\n+  private Iterator<TraversalBranch> gatherSourceIterator(TraversalContext metadata)\n+  {\n+    LinkedList<TraversalBranch> queue = new LinkedList<>();\n+    queue.add(current.next(expander, metadata));\n+    while (true)\n     {\n-        LinkedList<TraversalBranch> queue = new LinkedList<>();\n-        queue.add( current.next( expander, metadata ) );\n-        while ( true )\n-        {\n-            List<TraversalBranch> level = gatherOneLevel( queue, metadata );\n-            if ( level.isEmpty() )\n-            {\n-                break;\n-            }\n-            queue.addAll( 0, level );\n-        }\n-        return queue.iterator();\n+      List<TraversalBranch> level = gatherOneLevel(queue, metadata);\n+      if (level.isEmpty())\n+      {\n+        break;\n+      }\n+      queue.addAll(0, level);\n     }\n+    return queue.iterator();\n+  }\n \n-    private List<TraversalBranch> gatherOneLevel(\n-            List<TraversalBranch> queue, TraversalContext metadata )\n+  private List<TraversalBranch> gatherOneLevel(\n+      List<TraversalBranch> queue, TraversalContext metadata)\n+  {\n+    List<TraversalBranch> level = new LinkedList<>();\n+    Integer depth = null;\n+    for (TraversalBranch source : queue)\n     {\n-        List<TraversalBranch> level = new LinkedList<>();\n-        Integer depth = null;\n-        for ( TraversalBranch source : queue )\n-        {\n-            if ( depth == null )\n-            {\n-                depth = source.length();\n-            }\n-            else if ( source.length() != depth )\n-            {\n-                break;\n-            }\n+      if (depth == null)\n+      {\n+        depth = source.length();\n+      } else if (source.length() != depth)\n+      {\n+        break;\n+      }\n \n-            while ( true )\n-            {\n-                TraversalBranch next = source.next( expander, metadata );\n-                if ( next == null )\n-                {\n-                    break;\n-                }\n-                level.add( next );\n-            }\n+      while (true)\n+      {\n+        TraversalBranch next = source.next(expander, metadata);\n+        if (next == null)\n+        {\n+          break;\n         }\n-        return level;\n+        level.add(next);\n+      }\n     }\n+    return level;\n+  }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/658/PostorderBreadthFirstSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/658/PostorderBreadthFirstSelector.java\nindex 879404af8ab..4236c96a502 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/658/PostorderBreadthFirstSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/658/PostorderBreadthFirstSelector.java\n@@ -50,7 +50,8 @@ class PostorderBreadthFirstSelector implements BranchSelector\n         {\n             sourceIterator = gatherSourceIterator( metadata );\n         }\n-        return sourceIterator.hasNext() ? sourceIterator.next() : null;\n+\n+return sourceIterator.hasNext() ? sourceIterator.next() : null;\n     }\n \n     private Iterator<TraversalBranch> gatherSourceIterator( TraversalContext metadata )\n@@ -66,11 +67,11 @@ class PostorderBreadthFirstSelector implements BranchSelector\n             }\n             queue.addAll( 0, level );\n         }\n-        return queue.iterator();\n+\n+return queue.iterator();\n     }\n \n-    private List<TraversalBranch> gatherOneLevel(\n-            List<TraversalBranch> queue, TraversalContext metadata )\n+    private List<TraversalBranch> gatherOneLevel( List<TraversalBranch> queue, TraversalContext metadata )\n     {\n         List<TraversalBranch> level = new LinkedList<>();\n         Integer depth = null;\n@@ -97,4 +98,4 @@ class PostorderBreadthFirstSelector implements BranchSelector\n         }\n         return level;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
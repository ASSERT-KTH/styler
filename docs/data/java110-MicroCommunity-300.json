{
    "project_name": "java110-MicroCommunity",
    "error_id": "300",
    "information": {
        "errors": [
            {
                "line": "67",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 181).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<CommunityDto> communitys = BeanConvertUtil.covertBeanList(communityServiceDaoImpl.getCommunityInfoNew(BeanConvertUtil.beanCovertMap(communityDto)), CommunityDto.class);\n\n\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/300/CommunityInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/300/CommunityInnerServiceSMOImpl.java\nindex e25a8c33c84..22c294e76f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/300/CommunityInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/300/CommunityInnerServiceSMOImpl.java\n@@ -48,13 +48,13 @@ public class CommunityInnerServiceSMOImpl extends BaseServiceSMO implements ICom\n \n     @Override\n     public int getCommunityMemberCount(@RequestBody CommunityMemberDto communityMemberDto) {\n-         logger.debug(\"getCommunityMemberCount\uff1a{}\", JSONObject.toJSONString(communityMemberDto));\n+        logger.debug(\"getCommunityMemberCount\uff1a{}\", JSONObject.toJSONString(communityMemberDto));\n \n         return communityServiceDaoImpl.getCommunityMemberCount(BeanConvertUtil.beanCovertMap(communityMemberDto));\n     }\n \n     @Override\n-    public List<CommunityDto> queryCommunitys(@RequestBody  CommunityDto communityDto) {\n+    public List<CommunityDto> queryCommunitys(@RequestBody CommunityDto communityDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n@@ -64,17 +64,14 @@ public class CommunityInnerServiceSMOImpl extends BaseServiceSMO implements ICom\n             communityDto.setPage((page - 1) * communityDto.getRow());\n         }\n \n-        List<CommunityDto> communitys = BeanConvertUtil.covertBeanList(communityServiceDaoImpl.getCommunityInfoNew(BeanConvertUtil.beanCovertMap(communityDto)), CommunityDto.class);\n-\n+        List<CommunityDto> communitys = BeanConvertUtil\n+            .covertBeanList(communityServiceDaoImpl.getCommunityInfoNew(BeanConvertUtil.beanCovertMap(communityDto)), CommunityDto.class);\n \n \n         return communitys;\n     }\n \n \n-\n-\n-\n     @Override\n     public int queryCommunitysCount(@RequestBody CommunityDto communityDto) {\n         return communityServiceDaoImpl.queryCommunitysCount(BeanConvertUtil.beanCovertMap(communityDto));\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/300/CommunityInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/300/CommunityInnerServiceSMOImpl.java\nindex e25a8c33c84..e6c6d15ca91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/300/CommunityInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/300/CommunityInnerServiceSMOImpl.java\n@@ -48,7 +48,7 @@ public class CommunityInnerServiceSMOImpl extends BaseServiceSMO implements ICom\n \n     @Override\n     public int getCommunityMemberCount(@RequestBody CommunityMemberDto communityMemberDto) {\n-         logger.debug(\"getCommunityMemberCount\uff1a{}\", JSONObject.toJSONString(communityMemberDto));\n+    logger.debug(\"getCommunityMemberCount\uff1a{}\", JSONObject.toJSONString(communityMemberDto));\n \n         return communityServiceDaoImpl.getCommunityMemberCount(BeanConvertUtil.beanCovertMap(communityMemberDto));\n     }\n@@ -66,16 +66,10 @@ public class CommunityInnerServiceSMOImpl extends BaseServiceSMO implements ICom\n \n         List<CommunityDto> communitys = BeanConvertUtil.covertBeanList(communityServiceDaoImpl.getCommunityInfoNew(BeanConvertUtil.beanCovertMap(communityDto)), CommunityDto.class);\n \n-\n-\n-        return communitys;\n+return communitys;\n     }\n \n-\n-\n-\n-\n-    @Override\n+@Override\n     public int queryCommunitysCount(@RequestBody CommunityDto communityDto) {\n         return communityServiceDaoImpl.queryCommunitysCount(BeanConvertUtil.beanCovertMap(communityDto));\n     }\n@@ -87,4 +81,4 @@ public class CommunityInnerServiceSMOImpl extends BaseServiceSMO implements ICom\n     public void setCommunityServiceDaoImpl(ICommunityServiceDao communityServiceDaoImpl) {\n         this.communityServiceDaoImpl = communityServiceDaoImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/300/CommunityInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/300/CommunityInnerServiceSMOImpl.java\nindex e25a8c33c84..563ac5eb2cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/300/CommunityInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/300/CommunityInnerServiceSMOImpl.java\n@@ -13,31 +13,28 @@ import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n import java.util.Map;\n \n /**\n  * \u5c0f\u533a\u670d\u52a1\u5185\u90e8\u7c7b\n  */\n+\n+\n @RestController\n public class CommunityInnerServiceSMOImpl extends BaseServiceSMO implements ICommunityInnerServiceSMO {\n-    private static Logger logger = LoggerFactory.getLogger(CommunityServiceSMOImpl.class);\n \n+    private static Logger logger = LoggerFactory.getLogger(CommunityServiceSMOImpl.class);\n \n     @Autowired\n     private ICommunityServiceDao communityServiceDaoImpl;\n \n-\n     @Override\n     public List<CommunityMemberDto> getCommunityMembers(@RequestBody CommunityMemberDto communityMemberDto) {\n-\n         logger.debug(\"communityMemberDto\uff1a{}\", JSONObject.toJSONString(communityMemberDto));\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = communityMemberDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             communityMemberDto.setPage((page - 1) * communityMemberDto.getRow());\n         }\n@@ -48,33 +45,26 @@ public class CommunityInnerServiceSMOImpl extends BaseServiceSMO implements ICom\n \n     @Override\n     public int getCommunityMemberCount(@RequestBody CommunityMemberDto communityMemberDto) {\n-         logger.debug(\"getCommunityMemberCount\uff1a{}\", JSONObject.toJSONString(communityMemberDto));\n-\n+        logger.debug(\"getCommunityMemberCount\uff1a{}\", JSONObject.toJSONString(communityMemberDto));\n         return communityServiceDaoImpl.getCommunityMemberCount(BeanConvertUtil.beanCovertMap(communityMemberDto));\n     }\n \n     @Override\n-    public List<CommunityDto> queryCommunitys(@RequestBody  CommunityDto communityDto) {\n+    public List<CommunityDto> queryCommunitys(@RequestBody CommunityDto communityDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = communityDto.getPage();\n \n+\n+        int page = communityDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             communityDto.setPage((page - 1) * communityDto.getRow());\n         }\n \n         List<CommunityDto> communitys = BeanConvertUtil.covertBeanList(communityServiceDaoImpl.getCommunityInfoNew(BeanConvertUtil.beanCovertMap(communityDto)), CommunityDto.class);\n-\n-\n-\n         return communitys;\n     }\n \n-\n-\n-\n-\n     @Override\n     public int queryCommunitysCount(@RequestBody CommunityDto communityDto) {\n         return communityServiceDaoImpl.queryCommunitysCount(BeanConvertUtil.beanCovertMap(communityDto));\n@@ -87,4 +77,4 @@ public class CommunityInnerServiceSMOImpl extends BaseServiceSMO implements ICom\n     public void setCommunityServiceDaoImpl(ICommunityServiceDao communityServiceDaoImpl) {\n         this.communityServiceDaoImpl = communityServiceDaoImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/300/CommunityInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/300/CommunityInnerServiceSMOImpl.java\nindex e25a8c33c84..3dfe6b2858b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/300/CommunityInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/300/CommunityInnerServiceSMOImpl.java\n@@ -64,7 +64,7 @@ public class CommunityInnerServiceSMOImpl extends BaseServiceSMO implements ICom\n             communityDto.setPage((page - 1) * communityDto.getRow());\n         }\n \n-        List<CommunityDto> communitys = BeanConvertUtil.covertBeanList(communityServiceDaoImpl.getCommunityInfoNew(BeanConvertUtil.beanCovertMap(communityDto)), CommunityDto.class);\n+    List<CommunityDto> communitys = BeanConvertUtil.covertBeanList(communityServiceDaoImpl.getCommunityInfoNew(BeanConvertUtil.beanCovertMap(communityDto)), CommunityDto.class);\n \n \n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
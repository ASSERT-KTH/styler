{
    "project_name": "neo4j-neo4j",
    "error_id": "491",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/491/StoreIdDecodeUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/491/StoreIdDecodeUtils.java\nindex 4cdfe0f67bf..0ed3b4d04b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/491/StoreIdDecodeUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/491/StoreIdDecodeUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.builtin;\n \n import java.security.MessageDigest;\n@@ -35,14 +36,14 @@ class StoreIdDecodeUtils\n     {\n     }\n \n-    static String decodeId( StoreIdProvider storeIdProvider ) throws NoSuchAlgorithmException\n+    static String decodeId(StoreIdProvider storeIdProvider) throws NoSuchAlgorithmException\n     {\n         var externalStoreId = storeIdProvider.getExternalStoreId();\n         var storeId = storeIdProvider.getStoreId();\n         var storeIdString = externalStoreId.isPresent() ? externalStoreId.get().toString()\n-                                        : format( \"%d%d%d\", storeId.getCreationTime(), storeId.getRandomId(), storeId.getStoreVersion() );\n-        var messageDigest = MessageDigest.getInstance( DEFAULT_ALGORITHM );\n-        messageDigest.update( storeIdString.getBytes() );\n-        return HexString.encodeHexString( messageDigest.digest() );\n+          : format(\"%d%d%d\", storeId.getCreationTime(), storeId.getRandomId(), storeId.getStoreVersion());\n+        var messageDigest = MessageDigest.getInstance(DEFAULT_ALGORITHM);\n+        messageDigest.update(storeIdString.getBytes());\n+        return HexString.encodeHexString(messageDigest.digest());\n     }\n }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
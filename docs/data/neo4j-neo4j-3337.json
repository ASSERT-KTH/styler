{
    "project_name": "neo4j-neo4j",
    "error_id": "3337",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3337/AdminTool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3337/AdminTool.java\nindex c986b4d6da3..4d2e0d261b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3337/AdminTool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3337/AdminTool.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cli;\n \n import picocli.CommandLine;\n@@ -40,16 +41,16 @@ import static org.neo4j.internal.unsafe.UnsafeUtil.disableIllegalAccessLogger;\n import static picocli.CommandLine.IVersionProvider;\n \n @Command(\n-        name = \"neo4j-admin\",\n-        description = \"Neo4j database administration tool.\",\n-        mixinStandardHelpOptions = true,\n-        versionProvider = VersionProvider.class,\n-        footerHeading = \"\\nEnvironment variables:\\n\",\n-        footer = {\n-                \"  NEO4J_CONF    Path to directory which contains neo4j.conf.\",\n-                \"  NEO4J_DEBUG   Set to anything to enable debug output.\",\n-                \"  NEO4J_HOME    Neo4j home directory.\",\n-                \"  HEAP_SIZE     Set JVM maximum heap size during command execution. Takes a number and a unit, for example 512m.\" }\n+  name = \"neo4j-admin\",\n+  description = \"Neo4j database administration tool.\",\n+  mixinStandardHelpOptions = true,\n+  versionProvider = VersionProvider.class,\n+  footerHeading = \"\\nEnvironment variables:\\n\",\n+  footer = {\n+    \"  NEO4J_CONF    Path to directory which contains neo4j.conf.\",\n+    \"  NEO4J_DEBUG   Set to anything to enable debug output.\",\n+    \"  NEO4J_HOME    Neo4j home directory.\",\n+    \"  HEAP_SIZE     Set JVM maximum heap size during command execution. Takes a number and a unit, for example 512m.\"}\n )\n public final class AdminTool\n {\n@@ -58,74 +59,74 @@ public final class AdminTool\n         // nope\n     }\n \n-    public static void main( String[] args )\n+    public static void main(String[] args)\n     {\n         disableIllegalAccessLogger();\n-        final var homeDir = getDirOrExit( \"NEO4J_HOME\" );\n-        final var confDir = getDirOrExit( \"NEO4J_CONF\" );\n-        final var ctx = new ExecutionContext( homeDir, confDir );\n-        final var exitCode = execute( ctx, args );\n-        System.exit( exitCode );\n+        final var homeDir = getDirOrExit(\"NEO4J_HOME\");\n+        final var confDir = getDirOrExit(\"NEO4J_CONF\");\n+        final var ctx = new ExecutionContext(homeDir, confDir);\n+        final var exitCode = execute(ctx, args);\n+        System.exit(exitCode);\n     }\n \n-    @SuppressWarnings( \"InstantiationOfUtilityClass\" )\n+    @SuppressWarnings(\"InstantiationOfUtilityClass\")\n     @VisibleForTesting\n-    public static int execute( ExecutionContext ctx, String... args )\n+    public static int execute(ExecutionContext ctx, String... args)\n     {\n-        PrintWriter out = new PrintWriter( ctx.out(), true );\n-        final var cmd = new CommandLine( new AdminTool() )\n-                .setOut( out )\n-            .setErr( new PrintWriter( ctx.err(), true ) )\n-            .setUsageHelpWidth( 120 )\n-                .setCaseInsensitiveEnumValuesAllowed( true );\n-        registerCommands( cmd, ctx, Services.loadAll( CommandProvider.class ) );\n+        PrintWriter out = new PrintWriter(ctx.out(), true);\n+        final var cmd = new CommandLine(new AdminTool())\n+          .setOut(out)\n+          .setErr(new PrintWriter(ctx.err(), true))\n+          .setUsageHelpWidth(120)\n+          .setCaseInsensitiveEnumValuesAllowed(true);\n+        registerCommands(cmd, ctx, Services.loadAll(CommandProvider.class));\n \n-        if ( args.length == 0 )\n+        if (args.length == 0)\n         {\n-            cmd.usage( out );\n+            cmd.usage(out);\n             return ExitCode.USAGE;\n         }\n \n-        return cmd.execute( args );\n+        return cmd.execute(args);\n     }\n \n-    private static void registerCommands( CommandLine cmd, ExecutionContext ctx, Collection<CommandProvider> commandProviders )\n+    private static void registerCommands(CommandLine cmd, ExecutionContext ctx, Collection<CommandProvider> commandProviders)\n     {\n-        cmd.addSubcommand( HelpCommand.class );\n-        filterCommandProviders( commandProviders )\n-                .forEach( commandProvider -> cmd.addSubcommand( commandProvider.createCommand( ctx ) ) );\n+        cmd.addSubcommand(HelpCommand.class);\n+        filterCommandProviders(commandProviders)\n+          .forEach(commandProvider -> cmd.addSubcommand(commandProvider.createCommand(ctx)));\n     }\n \n-    protected static Collection<CommandProvider> filterCommandProviders( Collection<CommandProvider> commandProviders )\n+    protected static Collection<CommandProvider> filterCommandProviders(Collection<CommandProvider> commandProviders)\n     {\n         return commandProviders\n-                .stream()\n-                .collect( Collectors.toMap( k -> k.commandType(), v -> v, ( cp1, cp2 ) ->\n-                {\n-                    if ( cp1.getPriority() == cp2.getPriority() )\n-                    {\n-                        throw new IllegalArgumentException(\n-                                String.format( \"Command providers %s and %s create commands with the same priority\", cp1.getClass(), cp2.getClass() ) );\n-                    }\n+          .stream()\n+          .collect(Collectors.toMap(k -> k.commandType(), v -> v, (cp1, cp2) ->\n+          {\n+              if (cp1.getPriority() == cp2.getPriority())\n+              {\n+                  throw new IllegalArgumentException(\n+                    String.format(\"Command providers %s and %s create commands with the same priority\", cp1.getClass(), cp2.getClass()));\n+              }\n \n-                    return cp1.getPriority() > cp2.getPriority() ? cp1 : cp2;\n-                } ) )\n-                .values();\n+              return cp1.getPriority() > cp2.getPriority() ? cp1 : cp2;\n+          }))\n+          .values();\n     }\n \n-    private static Path getDirOrExit( String envVar )\n+    private static Path getDirOrExit(String envVar)\n     {\n-        final var value = System.getenv( envVar );\n-        if ( isBlank( value ) )\n+        final var value = System.getenv(envVar);\n+        if (isBlank(value))\n         {\n-            System.err.printf( \"Required environment variable '%s' is not set%n\", envVar );\n-            System.exit( ExitCode.USAGE );\n+            System.err.printf(\"Required environment variable '%s' is not set%n\", envVar);\n+            System.exit(ExitCode.USAGE);\n         }\n-        final var path = Path.of( value ).toAbsolutePath();\n-        if ( !Files.isDirectory( path ) )\n+        final var path = Path.of(value).toAbsolutePath();\n+        if (!Files.isDirectory(path))\n         {\n-            System.err.printf( \"%s path doesn't exist or not a directory: %s%n\", envVar, path );\n-            System.exit( ExitCode.USAGE );\n+            System.err.printf(\"%s path doesn't exist or not a directory: %s%n\", envVar, path);\n+            System.exit(ExitCode.USAGE);\n         }\n         return path;\n     }\n@@ -135,7 +136,7 @@ public final class AdminTool\n         @Override\n         public String[] getVersion()\n         {\n-            return new String[]{Version.getNeo4jVersion()};\n+            return new String[] {Version.getNeo4jVersion()};\n         }\n     }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
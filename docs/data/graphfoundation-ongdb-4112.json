{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4112",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "205",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "219",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4112/TransactionTemplate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4112/TransactionTemplate.java\nindex 46b44486a91..ed81f3e0333 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4112/TransactionTemplate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4112/TransactionTemplate.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers;\n \n import java.lang.reflect.Proxy;\n@@ -47,192 +48,190 @@ import org.neo4j.graphdb.TransientFailureException;\n  */\n public class TransactionTemplate\n {\n-    public interface Monitor\n-    {\n-        /**\n-         * Called when an exception occur from the transactions.\n-         *\n-         * @param ex the exception thrown.\n-         */\n-        void failure( Throwable ex );\n-\n-        /**\n-         * Called when the whole retry logic fails. Can be that all retries have failed or that the executing thread was\n-         * interrupted.\n-         *\n-         * @param ex the last exception thrown when it failed.\n-         */\n-        void failed( Throwable ex );\n-\n-        /**\n-         * Called when a retry is done.\n-         */\n-        void retrying();\n-\n-        class Adapter implements Monitor\n-        {\n-            @Override\n-            public void failure( Throwable ex )\n-            {\n-            }\n-\n-            @Override\n-            public void failed( Throwable ex )\n-            {\n-            }\n-\n-            @Override\n-            public void retrying()\n-            {\n-            }\n-        }\n-    }\n-\n-    private final GraphDatabaseService gds;\n-    private final Monitor monitor;\n-    private final int retries;\n-    private final long backoff;\n-    private final Predicate<Throwable> retryPredicate;\n-\n+  public interface Monitor\n+  {\n     /**\n-     * Creates a template for performing transactions with retry logic.\n-     * <p>\n-     * Default exceptions to retry on is everything except {@link Error} and {@link TransactionTerminatedException}.\n+     * Called when an exception occur from the transactions.\n+     *\n+     * @param ex the exception thrown.\n      */\n-    public TransactionTemplate()\n-    {\n-        this( (GraphDatabaseService) Proxy.newProxyInstance( GraphDatabaseService.class.getClassLoader(),\n-                new Class<?>[]{GraphDatabaseService.class}, ( proxy, method, args ) ->\n-                {\n-                    throw new IllegalArgumentException( \"You need to call 'with(GraphDatabaseService)' on the template in order to use it\" );\n-                } ), new Monitor.Adapter(), 0, 0,\n-                ex -> !Error.class.isInstance( ex ) && !TransactionTerminatedException.class.isInstance( ex ) );\n-    }\n+    void failure(Throwable ex);\n \n     /**\n-     * Create a template for performing transaction with retry logic.\n+     * Called when the whole retry logic fails. Can be that all retries have failed or that the executing thread was\n+     * interrupted.\n      *\n-     * @param gds graph database to execute on.\n-     * @param monitor a monitor that can react to events.\n-     * @param retries number of retries to try before failing.\n-     * @param backoff milliseconds to wait between each retry.\n-     * @param retryPredicate what {@link Throwable}'s to retry on.\n+     * @param ex the last exception thrown when it failed.\n      */\n-    public TransactionTemplate( GraphDatabaseService gds, Monitor monitor, int retries,\n-                                long backoff, Predicate<Throwable> retryPredicate )\n-    {\n-        Objects.requireNonNull( gds );\n-        Objects.requireNonNull( monitor );\n-        if ( retries < 0 )\n-        {\n-            throw new IllegalArgumentException( \"Number of retries must be greater than or equal to 0\" );\n-        }\n-        if ( backoff < 0 )\n-        {\n-            throw new IllegalArgumentException( \"Backoff time must be a positive number\" );\n-        }\n-        Objects.requireNonNull( retryPredicate );\n-\n-        this.gds = gds;\n-        this.monitor = monitor;\n-        this.retries = retries;\n-        this.backoff = backoff;\n-        this.retryPredicate = retryPredicate;\n-    }\n-\n-    public TransactionTemplate with( GraphDatabaseService gds )\n-    {\n-        return new TransactionTemplate( gds, monitor, retries, backoff, retryPredicate );\n-    }\n+    void failed(Throwable ex);\n \n-    public TransactionTemplate retries( int retries )\n-    {\n-        return new TransactionTemplate( gds, monitor, retries, backoff, retryPredicate );\n-    }\n+    /**\n+     * Called when a retry is done.\n+     */\n+    void retrying();\n \n-    public TransactionTemplate backoff( long backoff, TimeUnit unit )\n+    class Adapter implements Monitor\n     {\n-        return new TransactionTemplate( gds, monitor, retries, unit.toMillis( backoff ), retryPredicate );\n+      @Override\n+      public void failure(Throwable ex)\n+      {\n+      }\n+\n+      @Override\n+      public void failed(Throwable ex)\n+      {\n+      }\n+\n+      @Override\n+      public void retrying()\n+      {\n+      }\n     }\n-\n-    public TransactionTemplate monitor( Monitor monitor )\n+  }\n+\n+  private final GraphDatabaseService gds;\n+  private final Monitor monitor;\n+  private final int retries;\n+  private final long backoff;\n+  private final Predicate<Throwable> retryPredicate;\n+\n+  /**\n+   * Creates a template for performing transactions with retry logic.\n+   * <p>\n+   * Default exceptions to retry on is everything except {@link Error} and {@link TransactionTerminatedException}.\n+   */\n+  public TransactionTemplate()\n+  {\n+    this((GraphDatabaseService) Proxy.newProxyInstance(GraphDatabaseService.class.getClassLoader(),\n+        new Class<?>[] {GraphDatabaseService.class}, (proxy, method, args) ->\n+        {\n+          throw new IllegalArgumentException(\"You need to call 'with(GraphDatabaseService)' on the template in order to use it\");\n+        }), new Monitor.Adapter(), 0, 0,\n+        ex -> !Error.class.isInstance(ex) && !TransactionTerminatedException.class.isInstance(ex));\n+  }\n+\n+  /**\n+   * Create a template for performing transaction with retry logic.\n+   *\n+   * @param gds            graph database to execute on.\n+   * @param monitor        a monitor that can react to events.\n+   * @param retries        number of retries to try before failing.\n+   * @param backoff        milliseconds to wait between each retry.\n+   * @param retryPredicate what {@link Throwable}'s to retry on.\n+   */\n+  public TransactionTemplate(GraphDatabaseService gds, Monitor monitor, int retries,\n+                             long backoff, Predicate<Throwable> retryPredicate)\n+  {\n+    Objects.requireNonNull(gds);\n+    Objects.requireNonNull(monitor);\n+    if (retries < 0)\n     {\n-        return new TransactionTemplate( gds, monitor, retries, backoff, retryPredicate );\n+      throw new IllegalArgumentException(\"Number of retries must be greater than or equal to 0\");\n     }\n-\n-    public TransactionTemplate retryOn( Predicate<Throwable> retryPredicate )\n+    if (backoff < 0)\n     {\n-        return new TransactionTemplate( gds, monitor, retries, backoff, retryPredicate );\n+      throw new IllegalArgumentException(\"Backoff time must be a positive number\");\n     }\n-\n-    /**\n-     * Executes a transaction with retry logic.\n-     *\n-     * @param txConsumer a consumer that takes transactions.\n-     * @throws TransactionFailureException if an error occurs other than those specified in {@link #retryOn(Predicate)}\n-     * or if the retry count was exceeded.\n-     */\n-    public void execute( final Consumer<Transaction> txConsumer )\n+    Objects.requireNonNull(retryPredicate);\n+\n+    this.gds = gds;\n+    this.monitor = monitor;\n+    this.retries = retries;\n+    this.backoff = backoff;\n+    this.retryPredicate = retryPredicate;\n+  }\n+\n+  public TransactionTemplate with(GraphDatabaseService gds)\n+  {\n+    return new TransactionTemplate(gds, monitor, retries, backoff, retryPredicate);\n+  }\n+\n+  public TransactionTemplate retries(int retries)\n+  {\n+    return new TransactionTemplate(gds, monitor, retries, backoff, retryPredicate);\n+  }\n+\n+  public TransactionTemplate backoff(long backoff, TimeUnit unit)\n+  {\n+    return new TransactionTemplate(gds, monitor, retries, unit.toMillis(backoff), retryPredicate);\n+  }\n+\n+  public TransactionTemplate monitor(Monitor monitor)\n+  {\n+    return new TransactionTemplate(gds, monitor, retries, backoff, retryPredicate);\n+  }\n+\n+  public TransactionTemplate retryOn(Predicate<Throwable> retryPredicate)\n+  {\n+    return new TransactionTemplate(gds, monitor, retries, backoff, retryPredicate);\n+  }\n+\n+  /**\n+   * Executes a transaction with retry logic.\n+   *\n+   * @param txConsumer a consumer that takes transactions.\n+   * @throws TransactionFailureException if an error occurs other than those specified in {@link #retryOn(Predicate)}\n+   *                                     or if the retry count was exceeded.\n+   */\n+  public void execute(final Consumer<Transaction> txConsumer)\n+  {\n+    execute(transaction ->\n     {\n-        execute( transaction ->\n-        {\n-            txConsumer.accept( transaction );\n-            return null;\n-        } );\n-    }\n-\n-    /**\n-     * Executes a transaction with retry logic returning a result.\n-     *\n-     * @param txFunction function taking a transaction and producing a result.\n-     * @param <T> type of the result.\n-     * @return the result with type {@code T}.\n-     * @throws TransactionFailureException if an error occurs other than those specified in {@link #retryOn(Predicate)}\n-     * or if the retry count was exceeded.\n-     */\n-    public <T> T execute( Function<Transaction, T> txFunction ) throws TransactionFailureException\n+      txConsumer.accept(transaction);\n+      return null;\n+    });\n+  }\n+\n+  /**\n+   * Executes a transaction with retry logic returning a result.\n+   *\n+   * @param txFunction function taking a transaction and producing a result.\n+   * @param <T>        type of the result.\n+   * @return the result with type {@code T}.\n+   * @throws TransactionFailureException if an error occurs other than those specified in {@link #retryOn(Predicate)}\n+   *                                     or if the retry count was exceeded.\n+   */\n+  public <T> T execute(Function<Transaction, T> txFunction) throws TransactionFailureException\n+  {\n+    Throwable txEx;\n+    int retriesLeft = retries;\n+    while (true)\n     {\n-        Throwable txEx;\n-        int retriesLeft = retries;\n-        while ( true )\n+      try (Transaction tx = gds.beginTx())\n+      {\n+        T result = txFunction.apply(tx);\n+        tx.success();\n+        return result;\n+      } catch (Throwable ex)\n+      {\n+        monitor.failure(ex);\n+        txEx = ex;\n+\n+        if (!retryPredicate.test(ex))\n         {\n-            try ( Transaction tx = gds.beginTx() )\n-            {\n-                T result = txFunction.apply( tx );\n-                tx.success();\n-                return result;\n-            }\n-            catch ( Throwable ex )\n-            {\n-                monitor.failure( ex );\n-                txEx = ex;\n-\n-                if ( !retryPredicate.test( ex ) )\n-                {\n-                    break;\n-                }\n-            }\n-\n-            try\n-            {\n-                Thread.sleep( backoff );\n-            }\n-            catch ( InterruptedException e )\n-            {\n-                TransactionFailureException interrupted = new TransactionFailureException( \"Interrupted\", e );\n-                monitor.failed( interrupted );\n-                throw interrupted;\n-            }\n-\n-            if ( retriesLeft == 0 )\n-            {\n-                break;\n-            }\n-            retriesLeft--;\n-            monitor.retrying();\n+          break;\n         }\n-\n-        monitor.failed( txEx );\n-        throw new TransactionFailureException( \"Failed\", txEx );\n+      }\n+\n+      try\n+      {\n+        Thread.sleep(backoff);\n+      } catch (InterruptedException e)\n+      {\n+        TransactionFailureException interrupted = new TransactionFailureException(\"Interrupted\", e);\n+        monitor.failed(interrupted);\n+        throw interrupted;\n+      }\n+\n+      if (retriesLeft == 0)\n+      {\n+        break;\n+      }\n+      retriesLeft--;\n+      monitor.retrying();\n     }\n+\n+    monitor.failed(txEx);\n+    throw new TransactionFailureException(\"Failed\", txEx);\n+  }\n }\n",
            "diff_size": 284
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4112/TransactionTemplate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4112/TransactionTemplate.java\nindex 46b44486a91..34703dfbf40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4112/TransactionTemplate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4112/TransactionTemplate.java\n@@ -101,12 +101,10 @@ public class TransactionTemplate\n      */\n     public TransactionTemplate()\n     {\n-        this( (GraphDatabaseService) Proxy.newProxyInstance( GraphDatabaseService.class.getClassLoader(),\n-                new Class<?>[]{GraphDatabaseService.class}, ( proxy, method, args ) ->\n+        this( (GraphDatabaseService) Proxy.newProxyInstance( GraphDatabaseService.class.getClassLoader(), new Class<?>[]{GraphDatabaseService.class }, ( proxy, method, args ) ->\n                 {\n                     throw new IllegalArgumentException( \"You need to call 'with(GraphDatabaseService)' on the template in order to use it\" );\n-                } ), new Monitor.Adapter(), 0, 0,\n-                ex -> !Error.class.isInstance( ex ) && !TransactionTerminatedException.class.isInstance( ex ) );\n+                } ), new Monitor.Adapter(), 0, 0, ex -> !Error.class.isInstance( ex ) && !TransactionTerminatedException.class.isInstance( ex ) );\n     }\n \n     /**\n@@ -118,22 +116,21 @@ public class TransactionTemplate\n      * @param backoff milliseconds to wait between each retry.\n      * @param retryPredicate what {@link Throwable}'s to retry on.\n      */\n-    public TransactionTemplate( GraphDatabaseService gds, Monitor monitor, int retries,\n-                                long backoff, Predicate<Throwable> retryPredicate )\n-    {\n+    public TransactionTemplate( GraphDatabaseService gds, Monitor monitor, int retries, long backoff, Predicate<Throwable> retryPredicate )\n+{\n         Objects.requireNonNull( gds );\n         Objects.requireNonNull( monitor );\n         if ( retries < 0 )\n         {\n             throw new IllegalArgumentException( \"Number of retries must be greater than or equal to 0\" );\n         }\n-        if ( backoff < 0 )\n+\n+if ( backoff < 0 )\n         {\n             throw new IllegalArgumentException( \"Backoff time must be a positive number\" );\n         }\n         Objects.requireNonNull( retryPredicate );\n-\n-        this.gds = gds;\n+this.gds = gds;\n         this.monitor = monitor;\n         this.retries = retries;\n         this.backoff = backoff;\n@@ -190,7 +187,7 @@ public class TransactionTemplate\n      * @throws TransactionFailureException if an error occurs other than those specified in {@link #retryOn(Predicate)}\n      * or if the retry count was exceeded.\n      */\n-    public <T> T execute( Function<Transaction, T> txFunction ) throws TransactionFailureException\n+    public <T> T execute( Function<Transaction,T> txFunction ) throws TransactionFailureException\n     {\n         Throwable txEx;\n         int retriesLeft = retries;\n@@ -235,4 +232,4 @@ public class TransactionTemplate\n         monitor.failed( txEx );\n         throw new TransactionFailureException( \"Failed\", txEx );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
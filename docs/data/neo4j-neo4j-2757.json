{
    "project_name": "neo4j-neo4j",
    "error_id": "2757",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2757/ThreadAheadReadable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2757/ThreadAheadReadable.java\nindex f2fd3a8a0c8..1e33c46ab32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2757/ThreadAheadReadable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2757/ThreadAheadReadable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import java.io.IOException;\n@@ -35,11 +36,11 @@ public class ThreadAheadReadable extends ThreadAhead implements CharReadable\n     // but doesn't have to be volatile since it piggy-backs off of hasReadAhead.\n     private String newSourceDescription;\n \n-    private ThreadAheadReadable( CharReadable actual, int bufferSize )\n+    private ThreadAheadReadable(CharReadable actual, int bufferSize)\n     {\n-        super( actual );\n+        super(actual);\n         this.actual = actual;\n-        this.theOtherBuffer = new SectionedCharBuffer( bufferSize );\n+        this.theOtherBuffer = new SectionedCharBuffer(bufferSize);\n         this.sourceDescription = actual.sourceDescription();\n     }\n \n@@ -49,17 +50,17 @@ public class ThreadAheadReadable extends ThreadAhead implements CharReadable\n      * flips over to that buffer, returning it.\n      */\n     @Override\n-    public SectionedCharBuffer read( SectionedCharBuffer buffer, int from ) throws IOException\n+    public SectionedCharBuffer read(SectionedCharBuffer buffer, int from) throws IOException\n     {\n         waitUntilReadAhead();\n \n         // flip the buffers\n         SectionedCharBuffer resultBuffer = theOtherBuffer;\n-        buffer.compact( resultBuffer, from );\n+        buffer.compact(resultBuffer, from);\n         theOtherBuffer = buffer;\n \n         // make any change in source official\n-        if ( newSourceDescription != null )\n+        if (newSourceDescription != null)\n         {\n             sourceDescription = newSourceDescription;\n             newSourceDescription = null;\n@@ -70,17 +71,17 @@ public class ThreadAheadReadable extends ThreadAhead implements CharReadable\n     }\n \n     @Override\n-    public int read( char[] into, int offset, int length )\n+    public int read(char[] into, int offset, int length)\n     {\n-        throw new UnsupportedOperationException( \"Unsupported for now\" );\n+        throw new UnsupportedOperationException(\"Unsupported for now\");\n     }\n \n     @Override\n     protected boolean readAhead() throws IOException\n     {\n-        theOtherBuffer = actual.read( theOtherBuffer, theOtherBuffer.front() );\n+        theOtherBuffer = actual.read(theOtherBuffer, theOtherBuffer.front());\n         String sourceDescriptionAfterRead = actual.sourceDescription();\n-        if ( !sourceDescription.equals( sourceDescriptionAfterRead ) )\n+        if (!sourceDescription.equals(sourceDescriptionAfterRead))\n         {\n             newSourceDescription = sourceDescriptionAfterRead;\n         }\n@@ -107,9 +108,9 @@ public class ThreadAheadReadable extends ThreadAhead implements CharReadable\n         return sourceDescription;\n     }\n \n-    public static CharReadable threadAhead( CharReadable actual, int bufferSize )\n+    public static CharReadable threadAhead(CharReadable actual, int bufferSize)\n     {\n-        ThreadAheadReadable threadAheadReadable = new ThreadAheadReadable( actual, bufferSize );\n+        ThreadAheadReadable threadAheadReadable = new ThreadAheadReadable(actual, bufferSize);\n         threadAheadReadable.start();\n         return threadAheadReadable;\n     }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
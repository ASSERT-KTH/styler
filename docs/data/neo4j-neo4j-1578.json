{
    "project_name": "neo4j-neo4j",
    "error_id": "1578",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1578/LogEntryStart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1578/LogEntryStart.java\nindex 0226b0e0b46..0f9c8d4e965 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1578/LogEntryStart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1578/LogEntryStart.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.util.Arrays;\n@@ -35,17 +36,17 @@ public class LogEntryStart extends AbstractLogEntry\n     private final byte[] additionalHeader;\n     private final LogPosition startPosition;\n \n-    public LogEntryStart( long timeWritten, long lastCommittedTxWhenTransactionStarted,\n-            int previousChecksum, byte[] additionalHeader, LogPosition startPosition )\n+    public LogEntryStart(long timeWritten, long lastCommittedTxWhenTransactionStarted,\n+                         int previousChecksum, byte[] additionalHeader, LogPosition startPosition)\n     {\n-        this( TransactionLogVersionSelector.LATEST.versionByte(), timeWritten, lastCommittedTxWhenTransactionStarted, previousChecksum,\n-                additionalHeader, startPosition );\n+        this(TransactionLogVersionSelector.LATEST.versionByte(), timeWritten, lastCommittedTxWhenTransactionStarted, previousChecksum,\n+          additionalHeader, startPosition);\n     }\n \n-    public LogEntryStart( byte version, long timeWritten, long lastCommittedTxWhenTransactionStarted,\n-            int previousChecksum, byte[] additionalHeader, LogPosition startPosition )\n+    public LogEntryStart(byte version, long timeWritten, long lastCommittedTxWhenTransactionStarted,\n+                         int previousChecksum, byte[] additionalHeader, LogPosition startPosition)\n     {\n-        super( version, TX_START );\n+        super(version, TX_START);\n         this.previousChecksum = previousChecksum;\n         this.startPosition = startPosition;\n         this.timeWritten = timeWritten;\n@@ -76,30 +77,30 @@ public class LogEntryStart extends AbstractLogEntry\n     @Override\n     public String toString()\n     {\n-        return toString( Format.DEFAULT_TIME_ZONE );\n+        return toString(Format.DEFAULT_TIME_ZONE);\n     }\n \n     @Override\n-    public String toString( TimeZone timeZone )\n+    public String toString(TimeZone timeZone)\n     {\n         return \"Start[\" +\n-                \"time=\" + timestamp( timeWritten, timeZone ) + \",\" +\n-                \"lastCommittedTxWhenTransactionStarted=\" + lastCommittedTxWhenTransactionStarted + \",\" +\n-                \"previousChecksum=\" + previousChecksum + \",\" +\n-                \"additionalHeaderLength=\" + (additionalHeader == null ? -1 : additionalHeader.length) + \",\" +\n-                (additionalHeader == null ? \"\" : Arrays.toString( additionalHeader ) ) + \",\" +\n-                \"position=\" + startPosition +\n-                \"]\";\n+          \"time=\" + timestamp(timeWritten, timeZone) + \",\" +\n+          \"lastCommittedTxWhenTransactionStarted=\" + lastCommittedTxWhenTransactionStarted + \",\" +\n+          \"previousChecksum=\" + previousChecksum + \",\" +\n+          \"additionalHeaderLength=\" + (additionalHeader == null ? -1 : additionalHeader.length) + \",\" +\n+          (additionalHeader == null ? \"\" : Arrays.toString(additionalHeader)) + \",\" +\n+          \"position=\" + startPosition +\n+          \"]\";\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n@@ -107,9 +108,9 @@ public class LogEntryStart extends AbstractLogEntry\n         LogEntryStart start = (LogEntryStart) o;\n \n         return lastCommittedTxWhenTransactionStarted == start.lastCommittedTxWhenTransactionStarted &&\n-               timeWritten == start.timeWritten &&\n-               previousChecksum == start.previousChecksum &&\n-               Arrays.equals( additionalHeader, start.additionalHeader ) && startPosition.equals( start.startPosition );\n+          timeWritten == start.timeWritten &&\n+          previousChecksum == start.previousChecksum &&\n+          Arrays.equals(additionalHeader, start.additionalHeader) && startPosition.equals(start.startPosition);\n     }\n \n     @Override\n@@ -118,7 +119,7 @@ public class LogEntryStart extends AbstractLogEntry\n         int result = (int) (timeWritten ^ (timeWritten >>> 32));\n         result = 31 * result + (int) (lastCommittedTxWhenTransactionStarted ^ (lastCommittedTxWhenTransactionStarted >>> 32));\n         result = 31 * result + previousChecksum;\n-        result = 31 * result + (additionalHeader != null ? Arrays.hashCode( additionalHeader ) : 0);\n+        result = 31 * result + (additionalHeader != null ? Arrays.hashCode(additionalHeader) : 0);\n         result = 31 * result + startPosition.hashCode();\n         return result;\n     }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}